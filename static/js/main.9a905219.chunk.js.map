{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","IconBox/IconBox.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TrancheField/TrancheField.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","Title/Title.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","handleClick","backgroundColor","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mx","margin","my","alignItems","flexDirection","justifyContent","align","image","iconBgColor","mr","isSidebar","p","borderRadius","theme","colors","transactions","actionBg","redeem","src","height","isMobile","imageProps","useIconOnly","name","icon","size","color","iconColor","iconProps","fontWeight","fontSize","textProps","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","IconBox","isVisible","mt","textAlign","dangerouslySetInnerHTML","__html","children","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","RoundIconButton","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","className","styles","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","waitText","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","bg","twitterIcon","radioBtn","button","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getOnChainTokenConversionRate","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheUserTransactionsEvents","_ref25","_callee15","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref26","_ref27","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","_context15","CDO","getContractEvents","_x9","_x10","_ref28","_callee16","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args16","_context16","endpoints","makeEtherscanApiRequest","result","some","trancheTokenAddresses","trancheType","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","returnValues","_x11","getEtherscanTokenTransfers","_ref29","_callee17","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args17","_context17","_x12","_x13","getTrancheStakingRewardsDistributions","_ref30","_callee19","stakingDistributions","_context19","_ref31","_callee18","transfers","_context18","_x16","_x14","_x15","getTrancheHarvests","_ref32","_callee21","_ref33","_ref34","stakingRewardsDistributions","autoFarming","harvestsList","_context21","_ref35","_callee20","_context20","_x19","_x17","_x18","getTrancheLastHarvest","_ref36","_callee22","strategyConfig","harvestEnabled","idleStrategyAddress","startBlock","latestHarvestBlock","totalAmount","_context22","Strategy","genericContractCallCachedTTL","initContract","abi","_x20","_x21","getGovTokenApr","_ref37","_callee23","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref38","_ref39","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context23","getTokenConfig","_address","apr2apy","apr","apy","_x22","_x23","_x24","_x25","getTrancheRewardTokensInfo","_ref40","_callee25","tokensDistribution","_context25","_ref41","_callee24","firstHarvest","lastBlockInfo","latestHarvest","firstBlockInfo","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref42","_ref43","prevHarvest","_latestHarvest","firstBlock","_ref44","_ref45","poolSize","elapsedBlocks","elapsedSeconds","_context24","rewardsRate","now","genericContractCallCached","getBlockInfo","_x28","_x26","_x27","_ref46","_callee27","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args27","_context27","_ref47","_callee26","trancheTokenTransferEvent","tokenTransferEvent","_ref48","_ref49","blockInfo","tokenConversionRate","_context26","_x31","trancheTokenAmount","hashKey","trancheTokens","_x29","_x30","getTrancheUserTransactions","_ref50","_callee28","_context28","_x32","_x33","_x34","getTrancheFirstDepositTx","_ref51","_callee29","_context29","_x35","_x36","_x37","getAmountDepositedTranche","_ref52","_callee30","_context30","_x38","_x39","_x40","_ref53","_callee31","_ref54","_ref55","userAvgPrice","_context31","_x41","_x42","getAmountLent","_callee32","amountLents","_args32","_context32","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee38","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref58","_ref59","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args38","_context38","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref60","_callee33","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context33","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x43","_ref61","_callee34","_context34","_x44","match","_ref62","_callee35","_context35","_x45","_ref63","_callee36","_context36","_x46","items","to_address","_ref64","_callee37","polygonTx","erc20RootToken","_context37","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x47","getPolygonBaseTxs","_callee39","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args39","_context39","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee40","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args40","_context40","filterEthereumTxs","_callee41","_args41","_context41","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee42","resultData","allAvailableTokens","_args42","_context42","processStoredTxs","_callee43","contractInstance","_context43","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","t1","checkPolygonTransactionIncluded","_ref70","_callee44","_ref71","_ref72","_context44","getTransactionReceipt","_x48","_ref73","_callee45","_args45","_context45","_x49","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref74","_callee46","processTransactions","idleTokensAddresses","_args46","_context46","mappedTx","_x50","_x51","filterEtherscanTxs","_ref75","_callee47","processTxs","_args47","_context47","_x52","_ref76","_callee48","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args48","_context48","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x53","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref77","_callee53","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args53","_context53","baseTokenConfig","baseTokenAddress","_ref78","_callee52","minedTxs","_context52","_ref79","_callee51","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context51","getCurveTokenPrice","_ref80","_callee49","_context49","_x58","_x59","baseTokensConfig","t2","_ref81","_callee50","_context50","_x60","_x61","_x56","_x57","_x55","_x54","_ref82","_callee59","txsToProcess","_args59","_context59","_ref83","_callee58","_context58","_ref84","_callee57","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context57","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref85","_callee54","_context54","_x66","_x67","_ref86","_callee55","_context55","_x68","_x69","oldContract","events","raw","_ref87","_callee56","_context56","_x70","_x71","decodeLog","_token","_x64","_x65","_x63","_x62","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref88","_callee60","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args60","_context60","availableNetworks","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x72","getBestTranche","_callee61","maxApy","trancheStrategyConfig","_args61","_context61","timetamp","splice","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref90","_callee62","error_callback","config","_args62","_context62","post","catch","_x73","_ref91","_callee63","_args63","_context63","_x74","_ref92","_callee64","apiKeyIndex","apiKey","_args64","_context64","_x75","_ref93","_callee65","return_data","_args65","_context65","_x76","makeCachedPostRequest","_ref94","_callee66","_args66","_context66","_x77","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee67","page","googlePageviewInfo","isOrigin","_args67","_context67","ga","_ref96","_callee69","googleEventsInfo","debugEnabled","originOk","_args69","_context69","analytics","google","addPostfixForTestnet","_ref97","_callee68","_context68","hitCallback","hitCallbackFail","_x79","_x80","_x78","createContract","_ref98","_callee70","_context70","_x81","_x82","_x83","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee73","activeOnly","whitelist","proposals","validProposals","_args73","_context73","addr","_ref100","_callee72","checkedStrategies","_context72","end","author","snapshot","strategies","_ref101","_callee71","tokenContract","_context71","_x85","_x84","getAprsFromApi","_callee74","endpointInfo","aprs","_args74","_context74","_ref103","_callee75","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args75","_context75","_x86","getTokenExchangeRate","_ref104","_callee76","exchangeRateParams","exchangeRate","_context76","_x87","_x88","getTokenDecimals","_ref105","_callee77","_context77","_x89","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee78","idleTokenConfig","feeDistributorConfig","_context78","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee79","contractPaused","_args79","_context79","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref108","_callee81","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context81","lastAllocationsPromise","_ref109","_callee80","lastAllocations","_context80","_x91","_x92","alloc","_x90","_ref110","_callee82","oldContractBalance","oldContractTokenDecimals","oldContractName","_context82","_x93","_x94","_ref111","_callee83","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args83","_context83","getBlockNumber","getContractPastEvents","callEvents","_x95","_x96","_ref112","_callee84","_args84","_context84","getPastEvents","_x97","_x98","estimateMethodGasUsage","_ref113","_callee85","methodParams","_contract$methods","functionCall","gasLimit","_ref114","_ref115","_args85","_context85","getGasPrice","estimateGas","_x99","_x100","_ref116","_callee86","userAddress","signedParameters","callback_receipt","_contract$methods2","_context86","on","once","confirmationNumber","receipt","_x101","_x102","_x103","_x104","_x105","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref117","_callee87","biconomyInfo","res","_context87","limits","apiId","headers","x-api-key","_x106","sendTxWithPermit","_ref118","_callee88","_contract$methods3","messageToSign","_this$getSignaturePar","_context88","encodeABI","personal","sign","_x107","_x108","_x109","_x110","_x111","_x112","buildBiconomyErc20ForwarderTx","_ref119","_callee89","permitType","callData","buildParams","_context89","txGas","erc20ForwarderClient","buildTx","_x113","_x114","_x115","_x116","_x117","_ref120","_callee91","_context91","_ref121","_callee90","_context90","_x119","_x120","_x118","sendBiconomyTxWithErc20Forwarder","_ref122","_callee92","req","metaInfo","txResponse","fetchReceiptIntervalId","_context92","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x121","_x122","_x123","_x124","sendBiconomyTxWithPersonalSign","_ref123","_callee93","_this$getSignaturePar2","_context93","getNonce","_x125","_x126","_x127","_x128","signPermitEIP2612","_ref124","_callee94","erc20Name","owner","spender","deadline","domain","permit","domainData","_context94","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x129","_x130","_x131","_x132","_x133","_x134","_x135","_x136","signPermit","_ref125","_callee95","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args95","_context95","net","getId","round","nonceMethod","pow","allowed","response","_x137","_x138","_x139","_ref126","_callee96","permitParams","methodAbi","useNonce","_args96","_context96","_jsonInterface","f","unshift","_x140","_x141","_x142","_x143","_x144","_x145","_x146","sendSignedTx","_ref127","_callee97","MetaTransaction","dataToSign","_context97","_x147","_x148","_x149","_x150","_x151","checkTokenApproved","_ref128","_callee98","contractAddr","_ref129","_ref130","allowance","_context98","getAllowance","gte","_x152","_x153","_x154","_ref131","_callee99","_context99","_x155","_x156","_x157","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee101","highestValue","_args101","_context101","lendRates","aprInfo","tokenAPR","_ref133","_callee100","_context100","_x158","_ref134","_callee102","_args102","_context102","_x159","_x160","calculateGaugeBoost","_ref135","_callee103","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args103","_context103","workingBalance","getTokenTotalSupply","_x161","_x162","getGaugeWeight","_ref136","_callee104","lastGaugeTimestamp","gaugeWeight","_context104","_x163","getGaugeAbsoluteWeight","_ref137","_callee105","_ref138","_ref139","totalWeight","_context105","_x164","getGaugeNextWeight","_ref140","_callee106","nextGaugeTimestamp","_context106","_x165","getGaugeRewardsTokens","_ref141","_callee108","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndexes","_args108","_context108","rate","maxRewards","_ref142","_callee107","tokenIndex","rewardTokenAddress","_ref143","_ref144","rewardData","rewardTokenBalance","cdoConfig","_ref145","_ref146","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_context107","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x167","_x166","_ref147","_callee110","_args110","_context110","_ref148","_callee109","tokenGlobalConfig","stakingRewardsContract","_context109","_x170","_x168","_x169","_ref149","_callee111","field","addGovTokens","_args111","_context111","loadTrancheField","_x171","_x172","_x173","_x174","_x175","_x176","_x177","_x178","_ref150","_callee112","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref151","_ref152","totalSupply","virtualPrice","_ref153","_ref154","gaugeBalance","lastPrice1","staked1","totalStaked","_ref155","_ref156","deposited1","lastPrice","_ref157","_ref158","redeemable1","staked2","_ref159","_ref160","earningsStart","trancheApy2","deposited3","earningsEnd","_ref161","_ref162","trancheFee","earningsCounter","feesEnd","feesStart","_ref163","_ref164","deposited4","redeemable3","_ref165","_ref166","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref167","_ref168","_ref169","_ref170","earningsPerc","secondsFromFirstTx","_ref171","_ref172","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args112","_context112","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x179","_x180","_x181","_x182","_x183","_x184","_x185","loadAssetField","_ref173","_callee113","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref174","_ref175","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref176","_ref177","amountLentCurve1","redeemableBalanceCurve","_ref178","_ref179","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref180","_ref181","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref182","_ref183","tokenPriceFirstDeposit","_ref184","_ref185","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref186","_ref187","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref188","_ref189","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref190","_ref191","amountLentCurve2","redeemableBalanceCurve1","_ref192","_ref193","redeemableBalance2","_args113","_context113","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x186","_x187","_x188","_x189","getIdleTokenSupply","_ref194","_callee114","idleTokenSupply","_args114","_context114","_x190","getIdleTokenPriceWithFee","_ref195","_callee115","_ref196","_ref197","fee","priceWFee","_args115","_context115","eq","_x191","_x192","_ref198","_callee116","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args116","_context116","_x193","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref199","_callee117","_ref200","_ref201","idleTokensTotalSupply","userShare","_context117","_x194","_x195","openWindow","open","getActiveCoverages","_callee119","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args119","_context119","coverages","_ref203","_callee118","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context118","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x196","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref204","_callee121","incidentsInfo","_ref205","_ref206","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context121","directProps","contractInfo","buyer","_ref207","_callee120","cover","coverId","claimSubmittedEvent","_ref208","_ref209","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref210","_ref211","_context120","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x198","_x197","getBatchedDepositExecutions","_ref212","_callee122","_context122","_x199","getBatchedDeposits","_callee124","filter_by_status","batchDepositConfig","batchedDeposits","_args124","_context124","_ref214","_callee123","currBatchIndex","batchIndex","_ref215","_ref216","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context123","_x200","getETHBalance","_ref217","_callee125","fixDecimals","_args125","_context125","_x201","_ref218","_callee126","_ref219","_ref220","_args126","_context126","ERC20","_x202","_x203","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref221","_callee127","_args127","_context127","_x204","_ref222","_callee128","_args128","_context128","_x205","_ref223","_callee129","_args129","_context129","_x206","_x207","getProtocolBalance","_ref224","_callee130","_context130","_x208","_x209","getAprs","_ref225","_callee131","_context131","addresses","_x210","genericIdleCall","_ref226","_callee132","callParams","_args132","_context132","_x211","_ref227","_callee133","_contract$methods4","_args133","_context133","_x212","_x213","_ref228","_callee135","_args135","_context135","_ref229","_callee134","_context134","_x215","_x216","_x214","getTxDecodedLogs","_ref230","_callee137","logAddr","decodeLogs","internalTransfers","_context137","_ref231","_callee136","_context136","_x221","_x222","_x217","_x218","_x219","_x220","blocksToSeconds","blocks","blocksPerSeconds","_callee138","_context138","_callee139","blockInfoToSave","_args139","_context139","getBlock","genericContractCallCachedTTLNoMulticall","_ref234","_callee140","_args140","_context140","_x223","_x224","_ref235","_callee141","useMultiCall","_args141","_context141","_x225","_x226","_ref236","_callee142","_args142","_context142","_x227","_x228","_ref237","_callee143","_args143","_context143","_x229","_x230","cachedContractCall","_ref238","_callee144","_args144","_context144","_x231","_x232","prepareMulticallData","strip0x","_ref239","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref240","_callee145","decodedParams","_args145","_context145","decodeParameters","returnFields","_x233","testMulticall","_callee146","_context146","_ref242","_callee147","inputTypes","callHash","_args147","_context147","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x234","_x235","_ref243","_callee148","_contract$methods5","_args148","_context148","_x236","_x237","_ref244","_callee149","async","_args149","_context149","_x238","_x239","getUnlentBalance","_ref245","_callee150","unlentBalance","_context150","_x240","_ref246","_callee151","_args151","_context151","_x241","getLastAllocations","_ref247","_callee153","tokenAllocations","_context153","_ref248","_callee152","_context152","_x243","_x244","_x242","_ref249","_callee154","protocolsAprs","_ref250","_ref251","govTokensBalances","_args154","_context154","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","total","_x245","getPoolTokenPrice","_ref252","_callee155","protocolContract","_ref253","_ref254","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref255","_ref256","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_args155","_context155","_x246","getSushiswapPoolTokenPrice","_ref257","_callee156","_ref258","_ref259","_ref260","_ref261","_context156","getSushiswapConversionRate","_x247","getSushiswapConversionRate_old","_ref262","_callee157","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context157","_x248","_x249","getCustomProtocolConversionRate","_ref263","_callee158","useWETH","invertTokens","routerMethod","underlyingTokenConfig","unires","_args158","_context158","addressForPrice","conversionRateInvertTokens","conversionRouterMethod","_x250","_x251","getQuickswapConversionRate","_ref264","_callee159","_args159","_context159","_x252","_x253","_ref265","_callee160","_args160","_context160","_x254","_x255","_ref266","_callee161","_args161","_context161","_x256","_x257","getCurveDepositedTokens","_ref267","_callee162","idleTokensBalances","remainingCurveTokens","_args162","_context162","_x258","getCurveUnevenTokenAmounts","_ref268","_callee163","amounts","max_burn_amount","unevenAmounts","_context163","getCurveDepositContract","_x259","_x260","_callee164","curveRatesInfo","_args164","_context164","_callee165","_context165","strategyTokens","getCurveAPYContract","_callee166","blocksForPrevTokenPrice","_ref272","_ref273","prevTokenPrice","blocksMultiplier","curveAPR","_context166","getCurveTokenSupply","_callee167","_context167","getCurvePoolContract","_callee168","_args168","_context168","_callee169","_args169","_context169","_ref277","_callee170","_ref278","_ref279","_context170","_x261","_callee171","depositContractInfo","_context171","getCurveZapContract","_callee172","zapContractInfo","_context172","_callee173","poolContractInfo","_context173","getCurveSwapContract","_callee174","migrationContractInfo","_context174","getCurveIdleTokensAmounts","_callee176","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args176","_context176","_ref285","_callee175","coinIndex","curveIdleTokens","_context175","migrationParams","_x262","getCurveTokensAmounts","_callee178","useCoinIndex","_args178","_context178","_ref287","_callee177","_ref288","_ref289","idleTokenPrice","totalTokenSupply","_context177","_x263","getCurveAmounts","_ref290","_callee180","_args180","_context180","_ref291","_callee179","_context179","_x266","_x264","_x265","getCurveTokenAmount","_ref292","_callee181","_args181","_context181","_x267","getCurveSlippage","_ref293","_callee182","uneven_amounts","depositContract","_ref294","_ref295","Sv","_args182","_context182","_x268","_x269","_ref296","_callee183","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref297","_ref298","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args183","_context183","IAaveIncentivesController","emissionPerSecond","_x270","_callee185","_args185","_context185","_ref300","_callee184","_ref301","_ref302","_context184","_x271","getWMaticApr","_ref303","_callee186","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args186","_context186","_x272","_x273","getStkAaveApr","_ref304","_callee187","aaveConversionRate","stkAaveAPR","stkAaveValue","_args187","_context187","_x274","_x275","getCompAPR","_ref305","_callee188","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args188","_context188","_x276","_x277","getCompSpeed","_ref306","_callee189","cTokenAddress","compSpeed","_context189","_x278","_ref307","_callee190","cTokenInfo","compoundAllocationPerc","_ref308","_ref309","cTokenTotalSupply","compoundPoolShare","_args190","_context190","_x279","_callee192","_args192","_context192","_ref311","_callee191","_ref312","_ref313","_context191","_x280","_callee194","_args194","_context194","_ref315","_callee193","_ref316","_ref317","compApr","_context193","_x281","getTokensCsv","_callee197","csv","_context197","prototype","sum","pv","cv","avg","_ref319","_callee196","_context196","_ref320","_callee195","rates","header","rows","aprAvg","scoreAvg","lastRow","_context195","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x283","_x282","_callee199","convertToken","_args199","_context199","_ref322","_callee198","compTokenBalance","_context198","_x284","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref323","_callee201","govTokensUserDistribution","_args201","_context201","_ref324","_callee200","_context200","_x286","_x285","getGovTokensDistributionSpeed","_ref325","_callee203","govTokensDistribution","_args203","_context203","_ref326","_callee202","govSpeed","_context202","_x288","_x287","getGovTokensAprs","_ref327","_callee205","govTokensAprs","_args205","_context205","_ref328","_callee204","_ref329","_ref330","_ref331","_ref332","cTokenConfig","_context204","aprTooltipMode","_x291","_x289","_x290","_callee207","_args207","_context207","_ref334","_callee206","govTokenBalance","fromTokenConfig","_context206","_x292","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee208","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args208","_context208","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref336","_callee210","govTokensAmounts","_context210","getGovTokensUserAmounts","_ref337","_callee209","govTokenIndex","govTokenAddress","_context209","getGovTokenAddessByIndex","_x295","_x296","_x293","_x294","_ref338","_callee211","_context211","_x297","_x298","_ref339","_callee212","_context212","_x299","_x300","_callee215","govTokenConfigForced","_args215","_context215","_ref341","_callee214","_context214","_ref342","_callee213","_context213","_x302","_x303","_x301","getTokenFees","_callee216","_args216","_context216","_callee217","_ref345","_ref346","feePercentage","gain","fees","_args217","_context217","_ref347","_callee218","_args218","_context218","_x304","getTotalTVL","_callee219","tokensTVL","_context219","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee223","_context223","_ref350","_callee222","_context222","_ref351","_callee221","oldTokenTVL","idleTokenName","_ref352","_ref353","oldTokenConfig","_ref357","_ref358","oldTokenPrice","oldTotalSupply","_context221","showAUM","_ref354","_callee220","_ref355","_ref356","govTokenConversionRate","govTokenBalanceConverted","_context220","_x307","oldProtocols","oldProtocol","protocolPos","_x306","_x305","getSubstackLatestFeed","_callee224","idleSubstackFeed","latestFeed","_context224","getTrancheAggregatedStats","_callee228","totalAUM","_args228","_context228","_ref361","_callee227","_context227","_ref362","_callee226","_context226","_ref363","_callee225","_ref364","_ref365","_context225","_x310","_x309","_x308","getAggregatedStats","_callee230","allNetworks","networkIds","callsFailed","tvls","_args230","_context230","_ref367","_callee229","_context229","_x311","getAggregatedStats_chain","_callee235","avgAPR","_args235","_context235","availableStrategiesNetworks","_ref369","_callee234","_context234","_ref370","_callee233","_context233","_ref371","_callee232","tokenAUM","_context232","_ref372","_callee231","_ref373","_ref374","_context231","_x315","_x314","_x313","_x312","getTokenApy","_ref375","_callee236","_context236","_x316","getTokensToMigrate","_callee239","_args239","_context239","_ref377","_callee238","_context238","_ref378","_callee237","_ref379","_context237","_x318","_x317","getProtocolsTokensBalances","_callee241","tokenBalances","minTokenBalance","protocolsTokens","_args241","_context241","_ref381","_callee240","_context240","_x319","getTokenConversionRateField","getTrancheTokenConversionRate","_ref382","_callee242","trancheTokenConfig","trancheTokenConversionRate","_args242","_context242","isPoolToken","conversionRateProtocolContract","_x320","_ref383","_callee243","_args243","_context243","_x321","_x322","_ref384","_callee244","_args244","_context244","_x323","_x324","_x325","getAvgAPYStats","_ref385","_callee245","apiResults","_args245","_context245","_x326","_x327","_ref386","_callee246","statsTokenConfig","ToTokenConfig","_args246","_context246","addressForPriceFrom","conversionRateUseWETH","_x328","_ref387","_callee247","count","_conversionRate","_args247","_context247","_x329","_x330","getTokenScore","_ref388","_callee248","_ref389","_ref390","tokenScore","_context248","protocolScore","getTokenScoreApi","_x331","_x332","_ref391","_callee249","scores","_context249","_x333","_x334","_ref392","_callee250","idleGovTokenShowAPR","idleAPR","_args250","_context250","_x335","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","voteUserSlope","claimableRewards","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","votingWeight","depositedAmount","withdrawnAmount","_this8","votingPowerPercentage","gaugeAddress","_this9","setSelectedAction","setStakeAction","setClaimToken","Button","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","TrancheField","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","showReferral","option","selectTranche","borderTop","ImageButton","unstakeWithBalance","unstake","contractApprovedCallback","messages","buyInstructions","PortfolioEquityTranches","transactionsList","walletProvider","subgraphEnabled","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","blocksTimestamps","conversionRateBlocksCalls","conversionRatesTimestamps","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","then","param3","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","buttonText","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","QuickswapRouter","QuickswapV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","quickswap","convex","mstable","euler","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","Web3Connectors","setNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","_args7","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","defaultWeb3","_args22","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDOPolygon","IdleStrategy","TrancheStakingRewards","IdleCDO","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","web3Connectors","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this10","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","getConnectors","dist_default","web3Api","libraryName","dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","HeadingComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.9a905219.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? this.props.iconBgColor ? (\n              <Flex\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                backgroundColor={\n                  this.props.iconBgColor\n                    ? this.props.iconBgColor\n                    : this.props.theme.colors.transactions.actionBg.redeem\n                }\n              >\n                <Image\n                  align={\"center\"}\n                  src={this.props.image}\n                  height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  {...this.props.imageProps}\n                />\n              </Flex>\n            ) : (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getOnChainTokenConversionRate(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          return isUnderlyingDeposit || isUnderlyingRedeem || isTrancheDeposit || isTrancheRedeem;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    if (limit && parseInt(limit)>0){\n      endpoint = endpoint+`&limit=${limit}`;\n    }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      if (parseInt(latestHarvestBlock)>0){\n        startBlock = latestHarvestBlock;\n        latestHarvestBlock++;\n      } else {\n        limit = 1;\n        latestHarvestBlock = 'latest';\n      }\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let firstBlockInfo = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      // let firstBlockPoolSize = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getTokenConfig(token);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length >= 2) {\n          const prevHarvest = transfers[transfers.length - 2];\n          const latestHarvest = transfers[transfers.length - 1];\n          \n          const firstBlock = prevHarvest.blockNumber;\n          [\n            firstBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            // firstBlockPoolSize,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getOnChainTokenConversionRate(govTokenConfig),\n            // this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, firstBlock),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (firstBlockInfo && lastBlockInfo) {\n            lastBlockPoolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            let poolSize = lastBlockPoolSize;\n\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - firstBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            // totalAmount = transfers.reduce((total, t) => {\n            //   total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            //   return total;\n            // }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              prevHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n\n            // console.log(token, prevHarvest.hash, latestHarvest.hash, (conversionRate? conversionRate.toFixed():null), totalAmount.toFixed(),elapsedSeconds,tokensPerYear.toFixed(),convertedTokensPerYear.toFixed(),poolSize.toFixed(),tokenApr.toFixed());\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, 18);\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n              polygonTx.exited = false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled || !subgraphConfig.availableNetworks.includes(requiredNetworkId)){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.props.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim\n    };\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = parseInt(Date.now()/1000);\n    }\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,lastGaugeTimestamp]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.props.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      const tokenIndexes = Array.from(Array(multiRewardsConfig.maxRewards).keys());\n      await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                // console.log('gaugeTotalSupplyUnderlying',tokenConfig.token,gaugeTotalSupplyUnderlying,gaugeUnderlyingTokenConfig);\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      });\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  testMulticall = async () => {\n    const calls = [\n      {\"method\":\"tranchePrice(address)\",\"args\":[[\"0x2688fc68c4eac90d9e5e1b94776cf14eade8d877\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x34dcd573c5de4672c8248cd12a99f875ca112ad8\"},\n      {\"method\":\"claimable_tokens(address)\",\"args\":[[\"0xF1363D3D55d9e679cC6aa0a0496fD85BDfCF7464\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x675eC042325535F6e176638Dd2d4994F645502B9\"}\n    ];\n\n    const data = await this.makeMulticall(calls);\n    console.log(data);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getPoolTokenPrice = async (contractName, protocolContract=null) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getOnChainTokenConversionRate(token0_config, 'latest', protocolContract),\n        this.getOnChainTokenConversionRate(token1_config, 'latest', protocolContract)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log('getPoolTokenPrice',contractName,protocolContract,token0_address,token1_address,token0_price.toFixed(),token1_price.toFixed(),poolTokenPrice.toFixed());\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate_old = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getCustomProtocolConversionRate = async (tokenConfigFrom, tokenConfigDest, protocolContract=null, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `customProtocolConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const invertTokens = !!tokenConfigDest.conversionRateInvertTokens;\n      const routerMethod = tokenConfigDest.conversionRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigDest.address : tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigFrom.address : tokenConfigDest.address);\n\n      let decimals = tokenConfigDest.decimals || 18;\n      \n      // Use decimals of underlying token if set\n      if (routerMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall(protocolContract, routerMethod, [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getCustomProtocolConversionRate',protocolContract, routerMethod, [one.toFixed(), path], unires);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (routerMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        if (invertTokens){\n          price = this.BNify(1).div(price);\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n\n  getQuickswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'QuickswapRouter', blockNumber, useWETH);\n  }\n\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'SushiswapRouter', blockNumber, useWETH);\n  }\n\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'UniswapRouter', blockNumber, useWETH);\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  getTrancheTokenConversionRate = async (trancheTokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    let trancheTokenConversionRate = this.BNify(1);\n\n    // Get pool token price\n    const tokenConfig = this.getTokenConfig(trancheTokenConfig.token);\n    if (!!tokenConfig.isPoolToken){\n      // Get custom protocol for conversion rate\n      const protocolContract = tokenConfig.conversionRateProtocolContract;\n      trancheTokenConversionRate = await this.getPoolTokenPrice(trancheTokenConfig.token, protocolContract);\n    // Convert underlying token\n    } else {\n      const conversionRateField = this.getTokenConversionRateField(trancheTokenConfig.token);\n      if (conversionRateField) {\n        trancheTokenConversionRate = await this.getOnChainTokenConversionRate(trancheTokenConfig,blockNumber);\n      }\n    }\n\n    if (!trancheTokenConversionRate || this.BNify(trancheTokenConversionRate).isNaN()){\n      trancheTokenConversionRate = this.BNify(1);\n    }\n\n    return trancheTokenConversionRate;\n  }\n  convertTrancheTokenBalance = async (tokenBalance, trancheTokenConfig, blockNumber='latest') => {\n    const trancheTokenConversionRate = await this.getTrancheTokenConversionRate(trancheTokenConfig, blockNumber);\n    return tokenBalance = this.BNify(tokenBalance).times(trancheTokenConversionRate);\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getOnChainTokenConversionRate = async (tokenConfig, blockNumber='latest', protocolContract=null) => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    let useWETH = true;\n\n    if (statsTokenConfig){\n      // Replace from token address\n      if (statsTokenConfig.addressForPriceFrom){\n        DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n      }\n\n      // Set custom protocol (uniswap, sushiswap, quickswap)\n      if (!protocolContract && statsTokenConfig.conversionRateProtocolContract){\n        protocolContract = statsTokenConfig.conversionRateProtocolContract;\n      }\n\n      // Override useWETH based on token config\n      if (typeof statsTokenConfig.conversionRateUseWETH !== 'undefined'){\n        useWETH = statsTokenConfig.conversionRateUseWETH;\n      } else {\n        // Don't use WETH in the path\n        useWETH = !statsTokenConfig.addressForPriceFrom;\n      }\n    }\n\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    let conversionRate = null;\n    const currentNetworkId = this.getRequiredNetworkId();\n    if (protocolContract){\n      conversionRate = await this.getCustomProtocolConversionRate(DAITokenConfig, ToTokenConfig, protocolContract, blockNumber, useWETH);\n    } else {\n      conversionRate = currentNetworkId === 1 ? await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH) : await this.getSushiswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    }\n\n    // console.log('getOnChainTokenConversionRate',currentNetworkId,protocolContract,ToTokenConfig.address,blockNumber, useWETH, conversionRate);\n\n    if (this.BNify(conversionRate).isNaN()) {\n      conversionRate = this.BNify(1);\n    }\n\n    return conversionRate\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Heading, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n\n      const tokenConfig = {};\n      tokenConfig.token = token;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      canVote,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      iconColor={'redeem'}\n                      iconBgColor={'#3f5fff'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'deposit'}\n                      iconBgColor={'#ced6ff'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          iconBgColor={'#ffd979'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully broadcasted and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    gaugeConfig:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      lastHarvest,\n      gaugeStakedBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      gaugeConfig ? this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest',lastHarvest);    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      gaugeStakedBalance,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n        \n        if (gaugeConfig && gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your ${gaugeConfig.trancheToken.token} in the Liquidity Gauge and get rewarded!`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set\n            if (gaugeConfig || !this.state.stakeEnabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      gaugeConfig,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                >\n                                  {this.props.tokenConfig.description}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) ? (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'flashColor'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) : this.props.selectedToken === 'stETH' && this.props.selectedTranche === 'AA' && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'flashColor'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`With the <a href=\"https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">IDLE Gauges release</a>, LDO rewards are going to be distributed via a different staking contract on <strong>Thursday 14 April 2022 16:30:00 GMT</strong>. Please make sure to unstake your stETH from the current staking contract after that date and deposit in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/stETH`)}\" class=\"link\">stETH Gauge</a> contract to continue receiving the LDO rewards, alongside the IDLE distribution from Gauges`}\n                  />\n                )\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.state.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const requiredNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const subgraphConfig = this.functionsUtil.getGlobalConfig(['network','providers','subgraph','tranches']);\n    const subgraphEnabled = subgraphConfig.enabled && subgraphConfig.availableNetworks.includes(requiredNetworkId);\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTrancheTokenConversionRate(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTxTimestamp);\n\n        const trancheInfos = trancheAAInfos ? trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1)) : null;\n\n        const blocksTimestamps = {};\n        const conversionRateBlocksCalls = {};\n        const conversionRatesTimestamps = {};\n\n        if (conversionRateField){\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            if (subgraphEnabled && trancheInfos){\n              const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n                const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n                if (blockInfo.distance === null || distance<blockInfo.distance){\n                  blockInfo.distance = distance;\n                  blockInfo.trancheInfo = trancheInfo;\n                }\n                return blockInfo;\n              },{\n                distance:null,\n                trancheInfo:null\n              });\n\n              if (blockInfo && blockInfo.trancheInfo){\n                if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                  blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n                }\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n                // Gnosis cannot fetch past blocks data\n                conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTrancheTokenConversionRate(tokenConfig,blockInfo.trancheInfo.blockNumber);\n              }\n            } else {\n              if (!blocksTimestamps[timeStamp]){\n                blocksTimestamps[timeStamp] = [];\n              }\n              blocksTimestamps[timeStamp].push(timeStamp);\n              conversionRateBlocksCalls[timeStamp] = new Promise(resolve => resolve(lastConversionRate));\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (subgraphEnabled){\n          if (trancheAAInfos){\n            trancheAAInfos.forEach( (trancheInfo,index) => {\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n            });\n          }\n\n          if (trancheBBInfos){\n            trancheBBInfos.forEach( (trancheInfo,index) => {\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataBB);\n            });\n          }\n        } else {\n          Object.keys(conversionRateBlocksCalls).forEach( blockNumber => {\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n            });\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Deposited Tranches\n                      </Heading.h4>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      colsProps={{\n                        fontSize:['10px','14px'],\n                      }}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                }\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Heading.h4\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Heading.h4>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'deposit',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Button, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={Button}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  fontWeight:3,\n                  size:'small',\n                  width:'auto',\n                  style:{\n                    fontSize:'14px',\n                  },\n                  mainColor:'blue',\n                  value:'Reduce allowance',\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport { Button, Flex, Box, Text, Icon } from \"rimble-ui\";\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={Button}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      fontWeight:3,\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      height:'45px',\n                                                      fontSize:[2,3],\n                                                      boxShadow:null,\n                                                      borderRadius:4,\n                                                      mainColor:'redeem',\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Input, Heading } from \"rimble-ui\";\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n          gaugeWorkingSupply,\n          gaugeWeight\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n          this.functionsUtil.genericContractCallCached(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCallCached('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={this.props.isActive ? 'copyColor' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport QuickswapV2Router02 from \"../abis/quickswap/QuickswapV2Router02.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.8\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n      QuickswapRouter: {\n        abi: QuickswapV2Router02,\n        address: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        conversionRateInvertTokens:true,\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        isPoolToken: true, // Get Pool Token price for conversion rate\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        // addressForPrice: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        conversionRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 5: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 137: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 80001: 'https://polygon-mainnet.g.alchemyapi.io/v2/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\",\"walletconnect\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/dashboard/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, rpc, ...rest } = kwargs;\n    super(rest);\n\n    this.rpc = rpc;\n    this.provider = null;\n    this.infuraId = infuraId;\n    this.WalletConnectProvider = WalletConnectProvider;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      const params = {\n        infuraId:this.infuraId\n      };\n      if (this.rpc){\n        params.rpc = this.rpc;\n      }\n      this.provider = new this.WalletConnectProvider(params);\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nexport default class Web3Connectors {\n\n  defaultNetwork = globalConfigs.network.requiredNetwork;\n\n  constructor(networkId=null){\n    this.setNetwork(networkId);\n  }\n\n  setNetwork(networkId){\n    if (networkId && globalConfigs.network.enabledNetworks.includes(networkId)){\n      this.defaultNetwork = networkId;\n    }\n  }\n\n  getConnectors(){\n\n    const {\n      InjectedConnector,\n      NetworkOnlyConnector,\n      TrezorConnector,\n      LedgerConnector,\n      FortmaticConnector,\n      PortisConnector\n    } = Connectors;\n\n    const env = process.env;\n\n    const defaultNetwork = this.defaultNetwork;\n    const portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\n    const portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n    const manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\n    const manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\n    const fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\n\n    const supportedNetworkURLs = {};\n\n    globalConfigs.network.enabledNetworks.forEach((networkId,index) => {\n      networkId = parseInt(networkId);\n      const provider = globalConfigs.network.availableNetworks[networkId].provider;\n      const providerConfig = globalConfigs.network.providers[provider];\n      supportedNetworkURLs[networkId] = providerConfig.rpc[networkId]+providerConfig.key;\n    });\n\n    // console.log('supportedNetworkURLs',defaultNetwork,supportedNetworkURLs);\n\n    const Injected = new InjectedConnector({\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Infura = new NetworkOnlyConnector({\n      providerURL: supportedNetworkURLs[defaultNetwork]\n    });\n\n\n    const Trezor = new TrezorConnector({\n      api: TrezorApi,\n      supportedNetworkURLs,\n      defaultNetwork,\n      manifestEmail,\n      manifestAppUrl\n    });\n\n    const Ledger = new LedgerConnector({\n      supportedNetworkURLs,\n      defaultNetwork\n    });\n\n    const WalletConnect = new WalletConnectConnector({\n      defaultNetwork,\n      rpc:supportedNetworkURLs,\n      api: WalletConnectProvider,\n      infuraId: env.REACT_APP_INFURA_KEY,\n      bridge: \"https://bridge.walletconnect.org\",\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Fortmatic = new FortmaticConnector({\n      api: FortmaticApi,\n      apiKey: fortmaticApiKey,\n      logoutOnDeactivation: false\n    });\n\n    const Portis = new PortisConnector({\n      api: PortisApi,\n      dAppId: portisDAppId,\n      network: portisNetwork\n    });\n\n    const Authereum = new AuthereumConnector({\n      api: AuthereumApi,\n      network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n    });\n\n    const walletLink = new WalletLinkConnector({\n      api: WalletLink,\n      darkMode: false,\n      chainId: defaultNetwork,\n      appName: globalConfigs.appName,\n      infuraUrl: supportedNetworkURLs[defaultNetwork],\n      appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n    });\n\n    const Torus = new TorusConnector({\n      api: TorusApi,\n      initParams:{\n        buildEnv: 'production', // default: production\n        enableLogging: false, // default: false\n        network: {\n          host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n          chainId: defaultNetwork, // default: 1\n          networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n        },\n        showTorusButton: false // default: true\n      }\n    });\n\n    const gnosis = new GnosisSafeConnector(SafeAppConnector);\n\n    return {\n      Injected,\n      Infura,\n      WalletConnect,\n      gnosis,\n      walletLink,\n      Fortmatic,\n      Portis,\n      Authereum,\n      Torus,\n      Trezor,\n      Ledger,\n    };\n  }\n\n}","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const isGnosisSafe = !!props.connectors.gnosis.provider.safe;\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (props.connectors.Portis) {\n    if (registerPage) {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(props.connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectors={this.props.connectors}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.checkNetwork(null,this.initWeb3);\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.checkNetwork(null,this.initWeb3);\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.checkNetwork(null,this.initWeb3);\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.checkNetwork(null,this.initWeb3);\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n\n    // console.log('initWeb3','networkInitialized',this.state.networkInitialized);\n\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n    // let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    const web3Callback = async (initWeb3Index=null) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index && initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',initWeb3Index,this.state.network.current.id,this.state.network.required.id,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('initWeb3',initWeb3Index,connectorName,web3,context,web3Provider);\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          biconomy:false\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log('initializeContracts',this.state.web3Providers);\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null,defaultWeb3=null) => {\n     const currentWeb3 = defaultWeb3 || this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null,callback=null) => {\n    const network = {...this.state.network};\n\n    // Get selected web3 provider\n    const defaultWeb3 = this.props.context && this.props.context.active && this.props.context.library ? this.props.context.library : null;\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId,defaultWeb3);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','defaultWeb3:',defaultWeb3,'networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,'networkInitialized: '+networkInitialized,', update: '+updateNetwork);\n\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      },()=>{\n        if (typeof callback === 'function'){\n          callback();\n        }\n      });\n    } else {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          connectors={this.props.connectors}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            stkIDLE Gauges are now live at full throttle with $IDLE rewards!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e'}\n          >\n            Discover More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nimport QuickswapLiquidityPool from \"../abis/quickswap/QuickswapLiquidityPool.json\";\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        abi:QuickswapLiquidityPool,\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13054628,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13575397,\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        curveApyPath:['apy','day','frax'],\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        curveApyPath:['apy','day','mim'],\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        curveApyPath:['apy','day','steth'],\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        protocol:'euler',\n        blockNumber:14785127,\n        enabledEnvs: ['beta'],\n        multiCallDisabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:6,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:6,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport Web3Provider from \"web3-react\";\nimport Web3Connectors from \"./connectors\";\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  web3Connectors = null;\n\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (!this.web3Connectors){\n      this.web3Connectors = new Web3Connectors();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n      this.web3Connectors.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    const connectors = this.web3Connectors.getConnectors();\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  multiCall={this.multiCall}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              multiCall={this.multiCall}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}