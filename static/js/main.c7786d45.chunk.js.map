{"version":3,"sources":["FlexLoader/FlexLoader.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","SmartNumber/SmartNumber.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","ImageButton/ImageButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Staking/Staking.js","TokenSwap/TokenSwap.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js","IconBox/IconBox.js","AssetField/AssetField.js"],"names":["FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","alignItems","justifyContent","this","props","flexProps","loaderProps","text","textProps","Component","ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","flexDirection","pr","style","flexBasis","flex","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","length","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","keys","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","ConnectBox","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","cardProps","mt","size","name","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","connectAndValidateAccount","TransactionListFilters","state","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","setState","objectSpread","defineProperty","applyFilters","toggle","arguments","undefined","toggleOpened","resetFilter","resetFilters","top","zIndex","position","DashboardCard","py","px","transition","isInteractive","cursor","isMobile","overflow","borderTop","concat","theme","colors","divider","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","mainColor","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","i","selectedToken","tokenConfig","availableTokens","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","minHeight","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","ImageButton","image","imageSrc","src","imageProps","iconName","iconProps","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","right","captionPos","subcaption","split","lineHeight","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","loadData","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","RoundButton","boxShadow","ExtLink","target","rel","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","selectProps","indexOf","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","loadField","hashChanged","accountChanged","output","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","Title","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","regenerator_default","checkContractApproved","eventData","eventAction","eventCategory","eventLabel","getTransactionError","sendGoogleAnalyticsEvent","transactionHash","enableERC20","contractInfo","executeTx","_amount","callbackReceipt","contractName","params","signedParameters","_params","methodName","methodParams","normalizeTokenAmount","eventValue","signPermit","console","log","getPermitTransactionParams","getTransactionParams","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","initContract","abi","checkTokenApproved","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","Staking","globalStats","balanceProp","stakedBalance","rewardMultiplier","accountingData","selectedAction","selectedOption","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","toggleShowTokenWrapper","showTokenWrapperEnabled","toolProps","contract","updateData","selectedActionChanged","contractApprovedChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","stakedTokensLog","txReceipt","logs","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","loadStats","reduce","_this5","enabled","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","tokensPerSecond","_this6","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","AssetField","selectToken","poolLink","statInfo","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","CardIconButton","iconColor","iconBgColor","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","Button","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","placement","message","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","disabledTokens","aprTooltipMode","distributionFrequency","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","feePercentage","strategies","best","comingSoon","addGovTokens","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","aavev2","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","whitelist","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","stake","LpStaking","SushiLiquidityPool","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","match","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","RegExp","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","_ref11","userAvgPrice","getAmountLent","amountLents","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","t1","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","getCachedData","addr","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee39","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context39","lastAllocationsPromise","_ref44","_callee38","lastAllocations","_context38","_x38","_x39","alloc","_x37","checkMigration","_ref45","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context40","getContractBalance","_x40","_x41","_ref46","_callee41","callback_receipt","_contract$methods","_context41","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref47","_callee42","biconomyInfo","res","_context42","x-api-key","_x47","sendTxWithPermit","_ref48","_callee43","_contract$methods2","messageToSign","_this$getSignaturePar","_context43","encodeABI","_address","personal","sign","_x48","_x49","_x50","_x51","_x52","_x53","buildBiconomyErc20ForwarderTx","_ref49","_callee44","tokenAddress","callData","gasLimit","_context44","erc20ForwarderClient","buildTx","txGas","_x54","_x55","_x56","_x57","_x58","sendBiconomyTxWithErc20Forwarder","_ref50","_callee45","req","metaInfo","txResponse","fetchReceiptIntervalId","_context45","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x59","_x60","_x61","_x62","sendBiconomyTxWithPersonalSign","_ref51","_callee46","_this$getSignaturePar2","_context46","getNonce","call","_x63","_x64","_x65","_x66","signPermitEIP2612","_ref52","_callee47","erc20Name","owner","spender","deadline","domain","domainData","_context47","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","_ref53","_callee48","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args48","_context48","net","getId","allowed","response","_x75","_x76","_x77","_ref54","_callee49","permitParams","methodAbi","useNonce","_args49","_context49","_jsonInterface","f","inputs","unshift","_x78","_x79","_x80","_x81","_x82","_x83","_x84","sendSignedTx","_ref55","_callee50","MetaTransaction","dataToSign","_context50","_x85","_x86","_x87","_x88","_x89","_ref56","_callee51","contractAddr","walletAddr","_ref57","_ref58","allowance","_context51","getAllowance","_x90","_x91","_x92","_ref59","_callee52","_context52","_x93","_x94","_x95","txData","disableERC20","toTwosComplement","loadAssetField","_ref60","_callee53","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref61","_ref62","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref63","_ref64","amountLentCurve1","redeemableBalanceCurve","_ref65","_ref66","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref67","_ref68","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref69","_ref70","tokenPriceFirstDeposit","_ref71","_ref72","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref73","_ref74","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref75","_ref76","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref77","_ref78","amountLentCurve2","redeemableBalanceCurve1","_ref79","_ref80","redeemableBalance2","_args53","_context53","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x96","_x97","_x98","_x99","getIdleTokenSupply","_ref81","_callee54","idleTokenSupply","_args54","_context54","_x100","getIdleTokenPriceWithFee","_ref82","_callee55","_ref83","_ref84","priceWFee","_args55","_context55","eq","_x101","_x102","_ref85","_callee56","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args56","_context56","_x103","clearCachedData","useLocalStorage","_ref86","_callee57","_ref87","_ref88","idleTokensTotalSupply","userShare","_context57","_x104","_x105","_callee59","_args59","_context59","_ref90","_callee58","coverageTokens","protocolImage","_context58","_x106","_ref91","_callee60","etherscanEndpoint","_context60","_x107","_callee62","filter_by_status","_args62","_context62","_ref93","_callee61","_ref94","_ref95","_context61","_x108","_ref96","_callee63","fixDecimals","_args63","_context63","_x109","_ref97","_callee64","_ref98","_ref99","_args64","_context64","_x110","_x111","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref100","_callee65","_args65","_context65","_x112","_x113","getProtocolBalance","_ref101","_callee66","_context66","_x114","_x115","getAprs","_ref102","_callee67","_context67","_x116","genericIdleCall","_ref103","_callee68","callParams","_args68","_context68","_x117","estimateGas","_ref104","_callee69","_contract$methods3","_args69","_context69","_x118","_x119","getTxDecodedLogs","_ref105","_callee71","logAddr","decodeLogs","internalTransfers","_context71","_ref106","_callee70","_context70","_x124","_x125","_x120","_x121","_x122","_x123","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee72","_context72","getContractPastEvents","_ref108","_callee73","_args73","_context73","getPastEvents","_x126","_x127","_ref109","_callee74","_contract$methods4","_args74","_context74","_x128","_x129","_ref110","_callee75","_args75","_context75","_x130","_x131","apr2apy","getUnlentBalance","_ref111","_callee76","unlentBalance","_context76","_x132","_ref112","_callee77","_args77","_context77","_x133","_ref113","_callee79","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args79","_context79","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref114","_callee78","_ref115","_ref116","protocolBalance","protocolAllocation","_context78","_x135","_x136","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x134","getUniswapConversionRate_path","_ref117","_callee80","unires","_context80","_x137","_ref118","_callee81","pairAddresses","_ref119","_ref120","token0_address","token1_address","poolReserves","totalSupply","token0_config","token1_config","_ref121","_ref122","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context81","_x138","_x139","_ref123","_callee82","tokenConfigFrom","tokenConfigDest","WETHAddr","_context82","_x140","_x141","_ref124","_callee83","_context83","_x142","_x143","getCurveDepositedTokens","_ref125","_callee84","idleTokensBalances","remainingCurveTokens","_args84","_context84","_x144","getCurveUnevenTokenAmounts","_ref126","_callee85","amounts","max_burn_amount","unevenAmounts","_context85","getCurveDepositContract","_x145","_x146","_callee86","curveRatesInfo","_context86","strategyTokens","getCurveAPYContract","_callee87","blocksForPrevTokenPrice","_ref129","_ref130","prevTokenPrice","blocksMultiplier","curveAPR","_context87","getCurveTokenSupply","_callee88","_context88","getCurvePoolContract","_callee89","_args89","_context89","_callee90","_args90","_context90","_ref134","_callee91","_ref135","_ref136","_context91","_x147","_callee92","depositContractInfo","_context92","getCurveZapContract","_callee93","zapContractInfo","_context93","_callee94","poolContractInfo","_context94","getCurveSwapContract","_callee95","_context95","getCurveIdleTokensAmounts","_callee97","max_slippage","curveTokenSupply","curveTokenShare","_args97","_context97","_ref142","_callee96","curveIdleTokens","_context96","_x148","getCurveTokensAmounts","_callee99","useCoinIndex","_args99","_context99","_ref144","_callee98","_ref145","_ref146","totalTokenSupply","_context98","_x149","getCurveAmounts","_ref147","_callee101","_args101","_context101","_ref148","_callee100","_context100","_x152","_x150","_x151","getCurveTokenAmount","_ref149","_callee102","_args102","_context102","_x153","getCurveSlippage","_ref150","_callee103","uneven_amounts","_ref151","_ref152","virtualPrice","Sv","_args103","_context103","_x154","_x155","getCompAPR","_ref153","_callee104","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args104","_context104","_x156","_x157","getCompSpeed","_ref154","_callee105","cTokenAddress","compSpeed","_context105","_x158","_ref155","_callee106","annualize","cTokenInfo","compoundAllocationPerc","_ref156","_ref157","cTokenTotalSupply","compoundPoolShare","_args106","_context106","_x159","_callee108","_args108","_context108","_ref159","_callee107","_ref160","_ref161","_context107","_x160","_callee110","_args110","_context110","_ref163","_callee109","_ref164","_ref165","compApr","_context109","_x161","getTokensCsv","_callee113","csv","_context113","prototype","sum","pv","cv","avg","_ref167","_callee112","_context112","_ref168","_callee111","header","aprAvg","scoreAvg","lastRow","_context111","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x163","_x162","_callee115","_args115","_context115","_ref170","_callee114","compTokenBalance","_context114","_x164","getTokenGovTokens","speed","getGovTokensUserDistributionSpeed","_ref171","_callee117","govTokensUserDistribution","_args117","_context117","_ref172","_callee116","_context116","_x166","_x165","getGovTokensDistributionSpeed","_ref173","_callee119","govTokensDistribution","_args119","_context119","_ref174","_callee118","govSpeed","_context118","_x168","_x167","getGovTokensAprs","_ref175","_callee121","govTokensAprs","_args121","_context121","_ref176","_callee120","_ref177","_ref178","compoundInfo","_context120","_x171","_x169","_x170","_callee123","_args123","_context123","_ref180","_callee122","tokenConversionRate","fromTokenConfig","_context122","_x172","getGovTokenConfigByAddress","_callee124","checkShowBalance","govTokensEarnings","_args124","_context124","govTokenAmount","_callee127","govTokenConfigForced","_args127","_context127","_ref183","_callee126","idleTokenConfig","govTokensAmounts","_context126","_ref184","_callee125","govTokenIndex","govTokenAddress","_context125","_x174","_x175","_x173","getTokenFees","_callee128","_args128","_context128","_callee129","_ref187","_ref188","gain","fees","_args129","_context129","_ref189","_callee130","_args130","_context130","_x176","getTotalTVL","_callee131","tokensTVL","_context131","getTokensTVL","totalTVL","tokenTVL","_callee135","_context135","_ref192","_callee134","_context134","_ref193","_callee133","oldTokenTVL","idleTokenName","_ref194","_ref195","oldTokenConfig","_ref199","_ref200","oldTokenPrice","oldTotalSupply","_context133","_ref196","_callee132","_ref197","_ref198","govTokenConversionRate","govTokenBalanceConverted","_context132","_x179","oldProtocols","oldProtocol","protocolPos","_x178","_x177","getSubstackLatestFeed","_callee136","endpointInfo","idleSubstackFeed","latestFeed","_context136","items","getAggregatedStats","_callee137","totalAUM","_args137","_context137","getAggregatedStats_chain","_callee141","avgAPR","_args141","_context141","_ref204","_callee140","_context140","_ref205","_callee139","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context139","_ref206","_callee138","_ref207","_ref208","_context138","_x182","_x181","_x180","getTokenApy","_ref209","_callee142","_context142","_x183","_callee145","_args145","_context145","_ref211","_callee144","_context144","_ref212","_callee143","_ref213","_context143","_x185","_x184","getProtocolsTokensBalances","_callee147","tokenBalances","minTokenBalance","protocolsTokens","_args147","_context147","_ref215","_callee146","tokenContract","_context146","_x186","_ref216","_callee148","_args148","_context148","_x187","_x188","_x189","getAvgAPYStats","_ref217","_callee149","apiResults","_args149","_context149","_x190","_x191","_ref218","_callee150","_conversionRate","_args150","_context150","_x192","_x193","_ref219","_callee151","_ref220","_ref221","_context151","protocolScore","getTokenScoreApi","_x194","_x195","_ref222","_callee152","_context152","_x196","_x197","_ref223","_callee154","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args154","_context154","_ref224","_callee153","addrIndex","protocolApr","protocolApy","_context153","_x199","_x200","_x198","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","mDate","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","_d","add","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","loader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"0JAGMA,mLAEF,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEC,MAAO,EACPC,WAAY,SACZC,eAAgB,UACZC,KAAKC,MAAMC,WAEfX,EAAAC,EAAAC,cAACC,EAAA,EAAWM,KAAKC,MAAME,aAErBH,KAAKC,MAAMG,MACTb,EAAAC,EAAAC,cAACC,EAAA,EAASM,KAAKC,MAAMI,UAAYL,KAAKC,MAAMG,cAZ/BE,aAmBVhB,gICnBTiB,qdAMqBC,EAAUC,kMAKjC,OACEC,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACEC,GAAI,EACJf,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfH,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACEG,GAAI,EACJC,MAAO,CACLC,UAAU,IACVC,KAAK,WAEPnB,WAAY,SACZC,eAAgB,cAGdC,KAAKC,MAAMiB,OACXR,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACEQ,GAAI,EACJtB,MAAO,OACPuB,OAAQ,OACRC,aAAc,MACdC,gBAAiBtB,KAAKC,MAAMiB,QAIhCR,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACEY,SAAU,EACVC,WAAY,EACZC,UAAW,OACXP,MAAO,YACPH,MAAO,CACLW,cAAc,eAGf1B,KAAKC,MAAM0B,QAGhBjB,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACEI,MAAO,CACLC,UAAU,IACVC,KAAK,WAEPnB,WAAY,SACZC,eAAgB,YAEhBW,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACEY,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QACXV,MAAO,CACLa,WAAW,UAEbC,wBAAyB,CACvBC,OAAQ9B,KAAKC,MAAM8B,kBAnEGzB,aA6ErBC,w6gmIC/EfyB,EAAAC,QAAA,CAAkBC,gBAAA,sCAAAC,eAAA,qCAAAC,YAAA,kCAAAC,KAAA,2BAAAC,cAAA,wICEZC,6MACJC,YAAc,SAAAC,GACZ,IAAIC,EAAYD,EACVE,EAAUD,EAAUE,OAAO,EAAG,GAC9BC,EAAQH,EAAUE,OAAOF,EAAUI,OAAS,GAElD,OADAJ,EAAYC,EAAU,MAAQE,2EAI9B,IAAMH,EAAY1C,KAAKwC,YAAYxC,KAAKC,MAAMwC,MAE9C,OAAOlD,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMmD,QAAS,UAAc/C,KAAKC,OAAQyC,UAX7BM,IAAM1C,WAefiC,2HCKAU,mLAfX,OACEC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZC,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,kBACtBH,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,KACtDJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,KACtDJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,cAVnChD,aCCvBiD,mLAEF,OACGL,EAAA1D,EAAAC,cAAC0D,EAAA,EAADxD,OAAAC,OAAA,CACC4D,QAASxD,KAAKC,MAAMwD,aACfzD,KAAKC,MAAMyD,aAEhBR,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,SAAUf,WAAY,SAAUC,eAAgB,UACnEmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtD,MAAO,EAAGkD,QAAU/C,KAAKC,MAAM0D,UAAY,OAAS,QACxDT,EAAA1D,EAAAC,cAACmE,EAAD,OAEFV,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtD,MAAO,EAAGkD,QAAU/C,KAAKC,MAAM0D,UAAY,OAAS,QACvD3D,KAAKC,MAAM4D,qBAZGvD,aAoBZiD,uICvBTO,6MAGJC,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,+IAGE,IAAAC,EAAAnE,KACHoE,EAAkB,IAChBC,EAAsC,qBAAtBrE,KAAKC,MAAMoE,QAA2BC,MAAMtE,KAAKC,MAAMoE,UAAiC,IAAtBrE,KAAKC,MAAMoE,QAA0C,OAAtBrE,KAAKC,MAAMoE,OAAsC,KAApBrE,KAAKC,MAAMoE,OAE/J,GAAIA,EACF,OAAQrE,KAAKC,MAAMsE,MACjB,IAAK,QACHH,EAAkBpE,KAAK+D,cAAcS,YAAYH,EAAOrE,KAAKC,MAAMwE,WACrE,MACA,QACEL,EAAkBpE,KAAK+D,cAAcW,iBAAiBL,EAAOrE,KAAKC,MAAM0E,SAAS3E,KAAKC,MAAM2E,aAAa5E,KAAKC,MAAM4E,mBAIxHT,EAAkB,IAGpB,IAAMlE,EAAY,CAChBL,MAAM,EACNC,WAAW,SACXe,cAAc,MACdd,eAAe,UAIbC,KAAKC,MAAMC,WAAaP,OAAOmF,KAAK9E,KAAKC,MAAMC,WAAW4C,QAC5DnD,OAAOmF,KAAK9E,KAAKC,MAAMC,WAAW6E,QAAQ,SAAAC,GACxC9E,EAAU8E,GAAKb,EAAKlE,MAAMC,UAAU8E,KAIxC,IAAMC,EAA+B,MAApBb,EACXc,EAAUlF,KAAKC,MAAMiF,QAAUlF,KAAKC,MAAMiF,QAAU,QAE1D,OACEC,EAAA3F,EAAAC,cAAC2F,EAAA,EACKlF,EAGFF,KAAKC,MAAMoF,MAAoB,SAAZH,GAAsBD,GACvCE,EAAA3F,EAAAC,cAAC2F,EAAA,EAASpF,KAAKC,MAAMqF,UAAYtF,KAAKC,MAAMoF,MAEhDF,EAAA3F,EAAAC,cAAC2F,EAAA,EAASpF,KAAKC,MAAQmE,GAErBpE,KAAKC,MAAMoF,MAAoB,UAAZH,GAAuBD,GACxCE,EAAA3F,EAAAC,cAAC2F,EAAA,EAASpF,KAAKC,MAAMqF,UAAYtF,KAAKC,MAAMoF,cA9D9B/E,aAqEXwD,yJCnETyB,6MAGJxB,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,iMAGkB1D,EAAUC,mEACjCT,KAAKkE,kJAIL,OACExD,EAAAlB,EAAAC,cAAC+F,EAAA,EAAD,CACEC,UAAW,CACTT,EAAE,EACFU,GAAG,IAGLhF,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACEb,WAAY,SACZe,cAAe,UAEfH,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACEgF,KAAM,QACNC,KAAM,QACN1E,MAAO,aAETR,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACE+E,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQAf,EAAAlB,EAAAC,cAACoG,EAAA,EAAD,CACEnC,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,KAEX4D,YAAazD,KAAKC,MAAM6F,2BAL1B,oBA9CexF,aA6DViF,yOCiNAQ,6MA3QbC,MAAQ,CACNC,SAAS,GACTC,SAAS,IACTC,UAAU,IACVC,UAAS,EACTC,cAAc,CACZC,OAAO,KACPC,OAAO,KACPC,QAAQ,SAIZC,UAAY,SAACC,EAAO3E,GAClB4E,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5B4F,cAAc1G,OAAAkH,EAAA,EAAAlH,CAAA,GACTc,EAAU4F,cADF1G,OAAAmH,EAAA,EAAAnH,CAAA,GAEV+G,EAAQ3E,UAKfgF,aAAe,WAAiB,IAAhBC,IAAgBC,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,KAAAA,UAAA,GACS,oBAA5BN,EAAK1G,MAAM8G,cACpBJ,EAAK1G,MAAM8G,aAAaJ,EAAKX,MAAMK,eAEjCW,GACFL,EAAKQ,kBAITC,YAAc,SAACV,GACbC,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5B4F,cAAc1G,OAAAkH,EAAA,EAAAlH,CAAA,GACTc,EAAU4F,cADF1G,OAAAmH,EAAA,EAAAnH,CAAA,GAEV+G,EAAQ,SAEV,WACDC,EAAKI,cAAa,QAItBM,aAAe,WAAiB,IAAhBL,IAAgBC,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,KAAAA,UAAA,GAC9BN,EAAKC,SAAS,CACZP,cAAc,CACZC,OAAO,KACPC,OAAO,KACPC,QAAQ,OAEV,WACuC,oBAA5BG,EAAK1G,MAAMoH,cACpBV,EAAK1G,MAAMoH,eAETL,GACFL,EAAKQ,oBAKXA,aAAe,WACbR,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5B2F,UAAW3F,EAAU2F,qFAIhB,IAAAjC,EAAAnE,KACP,OACEkD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,EACJ0G,IAAK,EACLzH,MAAO,EACP0H,OAAQ,EACR1G,cAAe,SACff,WAAY,aACZC,eAAgB,SAChByH,SAAU,CAAC,WAAW,aAEtBtE,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTiC,GAAG,EACHC,GAAG,EACH9H,MAAM,CAAC,EAAGG,KAAKgG,MAAMI,SAAWpG,KAAKgG,MAAMC,SAAWjG,KAAKgG,MAAME,UACjEnF,MAAM,CACJ6G,WAAW,2BAGfC,eAAiB7H,KAAKgG,MAAMI,SAC5B3C,YAAezD,KAAKgG,MAAMI,SAA+B,KAApBpG,KAAKmH,cAE1CjE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPkB,MAAO,CACL+G,OAAO,WAEThI,WAAY,SACZe,cAAe,MACfd,eAAgB,gBAChByD,QAAUxD,KAAKgG,MAAMI,SAAWpG,KAAKmH,aAAe,MAEpDjE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,IACZN,MAAO,aAHT,WAOAgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEjC,MAAO,YACPyE,KAAO3F,KAAKC,MAAM8H,SAAW,QAAU,QACvCnC,KAAO5F,KAAKgG,MAAMI,SAAW,QAAU,UAG3ClD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,SACfE,MAAO,CACLiH,SAAS,SACTJ,WAAW,8BACXzB,UAAUnG,KAAKgG,MAAMI,SAAWpG,KAAKgG,MAAMG,UAAY,IAGzDjD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJgC,GAAI,EACJ7H,MAAO,EACPgB,cAAe,MACfoH,UAAS,aAAAC,OAAeC,IAAMC,OAAOC,UAGnC1I,OAAOmF,KAAK9E,KAAKC,MAAMqI,SAASC,IAAI,SAACC,GACnC,IAAMC,EAAetE,EAAKlE,MAAMqI,QAAQE,GACxC,OACEtF,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,SACf6H,IAAG,UAAAR,OAAYM,GACfzH,MAAO,CACLC,UAAU,IACVC,KAAK,YAGPiC,EAAA1D,EAAAC,cAACkJ,EAAA,EAAD,CACEC,GAAI,EACJpH,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAENsH,EAAeK,eAGhBlJ,OAAOmF,KAAK2D,GAAcF,IAAI,SAACO,GAC7B,IAAMC,EAAcN,EAAaK,GAC3BE,EAAY7E,EAAK6B,MAAMK,cAAcmC,KAAkBM,EAC7D,OACE5F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE8F,GAAI,EACJ1H,SAAU,CAAC,EAAE,GACbI,MAAOoH,EACPG,QAASF,EACT5F,UAAWC,IAAO8F,SAClBT,IAAG,UAAAR,OAAYM,EAAZ,KAAAN,OAA8BY,GACjCM,SAAW,SAAAC,GAAC,OAAIlF,EAAKsC,UAAU+B,EAAeM,YAUhE5F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOmG,KAAR,CACE9H,WAAY,EACZD,SAAU,CAAC,EAAE,GACbgI,UAAW,YACX/F,QAASxD,KAAK+G,cAJhB,iBAQA7D,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOmG,KAAR,CACEE,GAAI,EACJhI,WAAY,EACZD,SAAU,CAAC,EAAE,GACbgI,UAAW,YACX/F,QAASxD,KAAKqH,cALhB,aAaHrH,KAAKgG,MAAMI,UAAYpG,KAAKC,MAAMoG,eAAiB1G,OAAO8J,OAAOzJ,KAAKC,MAAMoG,eAAeK,OAAQ,SAAAgD,GAAC,OAAW,OAANA,IAAc5G,OAAO,GAC7HI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPgB,cAAe,CAAC,SAAS,OACzBf,WAAY,CAAC,aAAa,YAC1BC,eAAgB,CAAC,WAAW,eAG1BJ,OAAOmF,KAAK9E,KAAKC,MAAMoG,eAAekC,IAAI,SAACoB,GACzC,IAAMb,EAAc3E,EAAKlE,MAAMoG,cAAcsD,GAC7C,GAAoB,OAAhBb,EAAqB,CACvB,IAAMC,EAAc5E,EAAKlE,MAAMqI,QAAQqB,GAAYb,GACnD,OACE5F,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTiC,GAAG,EACHC,GAAG,EACH/G,GAAG,CAAC,EAAE,GACNO,GAAG,CAAC,EAAE,GACNtB,MAAM,CAAC,EAAEsE,EAAK6B,MAAME,WAEtB2B,eAAe,EACfa,IAAG,UAAAR,OAAYyB,IAEfzG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPkB,MAAO,CACL+G,OAAO,WAEThI,WAAY,SACZe,cAAe,MACfd,eAAgB,gBAChByD,QAAS,SAAA6F,GAAC,OAAIlF,EAAKiD,YAAYuC,KAE/BzG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,IACZN,MAAO,WACPH,MAAO,CACLW,cAAc,eAGfqH,GAEH7F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAM,QACN1E,MAAO,WACPyE,KAAOxB,EAAKlE,MAAM8H,SAAW,QAAU,YAMjD,OAAO,OAGX7E,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,CAAC,EAAE,GACPnE,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,GACbN,MAAO,YACP0I,WAAY,YACZnI,UAAW,CAAC,SAAS,QACrB+B,QAAU,SAAA6F,GAAC,OAAIlF,EAAKkD,cAAa,KAPnC,8BA3PuB/G,aCG/BuJ,6MAEJ7D,MAAQ,CACN8D,KAAK,EACLC,QAAQ,GACRC,WAAW,EACXC,SAAQ,EACRC,SAAS,KACTC,WAAW,KACX9D,cAAc,CACZC,OAAO,KACPC,OAAO,KACPC,QAAQ,MAEV8B,QAAQ,CACN9B,QAAQ,CACN4D,QAAQ,UACRC,OAAO,SACPC,KAAK,OACLC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,QAAQ,WACRC,SAAS,YAMXrE,OAAO,CACLsE,UAAU,YACVC,QAAQ,UACRC,OAAO,UAETvE,OAAO,IAETwE,YAAY,KACZC,aAAa,KACbC,gBAAgB,QAIlBlH,cAAgB,OAmChBgD,aAAe,SAAAV,GACbM,EAAKC,SAAS,CACZP,iBACA,WACAM,EAAKuE,kBAIT7D,aAAe,WACbV,EAAKC,SAAS,CACZP,cAAc,CACZC,OAAO,KACPC,OAAO,KACPC,QAAQ,OAEV,WACAG,EAAKuE,kBAiGTA,WAAa,WAAe,IAAdpB,EAAc7C,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KAEjB6C,EAAOA,GAAcnD,EAAKX,MAAM8D,KAEhC,IAAMqB,EAAmBxL,OAAOmF,KAAK6B,EAAKX,MAAMsC,QAAQ9B,SAAS+B,IAAK,SAAA6C,GAAM,OAAKA,EAAOC,gBAGlFC,EAAa3L,OAAO8J,OAAO9C,EAAKX,MAAM+D,SACvBrD,OAAO,SAAA6E,GAAE,QAAOC,WAAWD,EAAGxJ,SAC9B2E,OAAO,SAAA6E,GAAE,OAC6B,OAApC5E,EAAKX,MAAMK,cAAcC,QAAoBiF,EAAGjF,QAAUiF,EAAGjF,OAAO+E,gBAAkB1E,EAAKX,MAAMK,cAAcC,OAAO+E,iBAClF,OAApC1E,EAAKX,MAAMK,cAAcE,QAAoBgF,EAAGE,OAASF,EAAGE,MAAMJ,gBAAkB1E,EAAKX,MAAMK,cAAcE,OAAO8E,gBACnHE,EAAGH,QAAUD,EAAiBO,SAASH,EAAGH,OAAOC,iBAAwD,OAArC1E,EAAKX,MAAMK,cAAcG,SAAqB+E,EAAGH,OAAOC,gBAAkB1E,EAAKX,MAAMK,cAAcG,QAAQ6E,iBAElLM,KAAK,SAACnM,EAAEoM,GAAH,OAAUpM,EAAEqM,UAAYD,EAAEC,WAAc,EAAI,IAGhE3B,EAAWoB,EAAWxI,OACtBqH,EAAa2B,KAAKC,KAAK7B,EAASvD,EAAKX,MAAMgE,YAE3CgB,EAAe,GAIrBM,EAAWvG,QAAQ,SAACwG,EAAIS,GACtB,IAAMC,EAAgBV,EAAGE,MACnBS,EAAcvF,EAAK1G,MAAMkM,gBAAgBF,GACzCtH,EAAWmH,KAAKM,IAAIF,EAAYvH,SAAS,GAEzC0H,EAAO,IAAIC,KAAkB,IAAbf,EAAGM,WACnBT,EAASG,EAAGH,OAASG,EAAGH,OAASzE,EAAK5C,cAAcwI,YAAYhB,EAAGW,GAEnEM,EAAchB,WAAWD,EAAGkB,aAE5BC,EAASF,EAAe7F,EAAK1G,MAAM8H,SAAWyE,EAAYG,QAAQ,GAAKH,EAAYG,QAAQhI,GAAa,IACxGiI,EAAajG,EAAK5C,cAAc8I,YAAYR,GAGlDd,EAAGjF,OAASiF,EAAGjF,OAASiF,EAAGjF,OAAS,YACpCiF,EAAGH,OAASA,EACZG,EAAGqB,WAAaA,EAChBrB,EAAGmB,OAASA,EAERV,IAAKlC,EAAK,GAAGnD,EAAKX,MAAMgE,YAAegC,GAAIlC,EAAK,GAAGnD,EAAKX,MAAMgE,WAAYrD,EAAKX,MAAMgE,YACvFgB,EAAa8B,KAAKvB,KAQtB5E,EAAKC,SAAS,CACZqD,SAHc,EAIdC,WACAC,aACAa,6FAzMEhL,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,wCAIvCoJ,GACHA,GACFA,EAAE0D,iBAEJ,IAAMjD,EAAOgC,KAAKkB,IAAI,EAAEhN,KAAKgG,MAAM8D,KAAK,GACxC9J,KAAK4G,SAAS,CACZkD,0CAIKT,GACHA,GACFA,EAAE0D,iBAEJ,IAAMjD,EAAOgC,KAAKM,IAAIpM,KAAKgG,MAAMmE,WAAWnK,KAAKgG,MAAM8D,KAAK,GAAG9J,KAAKkL,WAAWpB,GAC/E9J,KAAK4G,SAAS,CACZkD,6JAKF9J,KAAKkE,YACLlE,KAAKiN,+LAuBkBzM,EAAWC,mFAClCT,KAAKkE,YACCgJ,EAAsBC,KAAKC,UAAU5M,EAAU6M,gBAAkBF,KAAKC,UAAUpN,KAAKC,MAAMoN,gBAC5EF,KAAKC,UAAU5M,EAAU8M,iBAAmBH,KAAKC,UAAUpN,KAAKC,MAAMqN,kBAEvEJ,yBAClBlN,KAAK4G,SAAS,CACZkD,KAAK,EACLC,QAAQ,IACR,WACA5F,EAAK8I,+BAEA,UAEWxM,EAAUqJ,OAAS9J,KAAKgG,MAAM8D,MAEhD9J,KAAKkL,0LAIKqC,8IAAqB,SAC5BvN,KAAKC,MAAMuN,kDACP,iBAGTD,EAAQA,GAAgB,EAExBvN,KAAK4G,SAAS,CACZqD,SAAQ,IAGJwD,EAAmBzN,KAAK+D,cAAc2J,gBAAgB,CAAC,UAAU,qBAGnE3D,iBAAc/J,KAAKgG,MAAM+D,SACzBkB,EAAkBa,KAAKkB,IAAIS,EAAiBzN,KAAKgG,MAAMiF,kBAEvDqC,EAAgBtN,KAAKC,MAAMqN,gBACRA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAK9E,KAAKC,MAAMkM,kBAGnC5F,iBAAavG,KAAKgG,MAAMsC,QAAQ/B,QAEtC+G,EAAcvI,QAAQ,SAAC0G,GACrBlF,EAAOkF,GAASA,IAGdjF,iBAAcxG,KAAKgG,MAAMsC,QAAQ9B,UAE/BmH,EAAsD,qBAA9B3N,KAAKC,MAAM0N,eAAiC3N,KAAKC,MAAM0N,eAAiB,IAEnF7K,SACjB0D,EAAU,GACVmH,EAAe5I,QAAS,SAAAqG,GACtB5E,EAAQ4E,EAAOC,eAAiBD,eAITpL,KAAK+D,cAAc6J,gBAAgB5N,KAAKC,MAAMuN,QAAQvC,EAAgB,SAASqC,kBAApGO,WAGcA,EAAa/K,QAC/B+K,EAAa9I,QAAQ,SAACwG,GAChBA,EAAGuC,QACL/D,EAAQwB,EAAGuC,SAAWvC,EAEtBxB,EAAO,IAAA7B,OAAKqD,EAAGM,YAAeN,KAK9BwC,EAASpO,OAAO8J,OAAOM,GAASiE,QAGxBD,EAAOE,eAAiBjO,KAAKgG,MAAMiF,iBAAmB8C,EAAOE,YAAYjO,KAAKgG,MAAMiF,mBAChGA,EAAkBiD,SAASH,EAAOE,aAAa,qBAG1CjO,KAAK4G,SAAU,SAAAnG,GAAS,MAAK,CAClCsJ,UACAE,SAAQ,EACRgB,kBACA3C,QAAQ3I,OAAAkH,EAAA,EAAAlH,CAAA,GACHc,EAAU6H,QADR,CAEL/B,SACAC,cAEA,WACF2H,EAAKjD,qJAgEA,IAAAkD,EAAApO,KAEDqO,EAAmB1O,OAAO8J,OAAOzJ,KAAKgG,MAAMK,eAAeK,OAAQ,SAAAgD,GAAC,OAAW,OAANA,IAAc5G,OAAO,EAG9FkI,EAAehL,KAAKgG,MAAMgF,aAAerL,OAAO8J,OAAOzJ,KAAKgG,MAAMgF,cAAgB,KAExF,OACE9H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,SAAUhB,MAAO,EAAGyO,EAAG,UAExCtO,KAAKgG,MAAMiE,QACT/G,EAAA1D,EAAAC,cAACH,EAAA,EAAD,CACEY,UAAW,CACTW,cAAc,MACd0N,UAAUvO,KAAKC,MAAMmB,QAEvBjB,YAAa,CACXwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,KAAM,4BAGR8C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP2H,SAAU,WACV3G,cAAe,SACf2N,GAAI,8BACJC,GAAI,CAAC,EAAGJ,EAAmB,QAAU,IAErCnL,EAAA1D,EAAAC,cAACiP,EAAD/O,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqI,QAAStI,KAAKgG,MAAMsC,QACpBjC,cAAerG,KAAKgG,MAAMK,cAC1BgB,aAAcrH,KAAKqH,aAAasH,KAAK3O,MACrC+G,aAAc/G,KAAK+G,aAAa4H,KAAK3O,SAGrCgL,GAAgBA,EAAalI,OAC3BI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAACmP,EAAA,EAAD,CACEC,KAAM7O,KAAKC,MAAM4O,KACjB9G,SAAU/H,KAAKC,MAAM8H,WAEvB7E,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqL,GAAI,oBACJ3N,cAAe,UAGbmK,EAAazC,IAAK,SAACgD,EAAGuD,GACpB,IAAMC,EAASxD,EAAG9I,KACZuM,EAAYzD,EAAGuC,QAKrB,OACE5K,EAAA1D,EAAAC,cAACwP,EAAA,EAADtP,OAAAC,OAAA,GACMwO,EAAKnO,MADX,CAEEiP,SAAU,CACRrH,eAAc,GAEhBpF,KAAMsM,EACNI,YAAa5D,EACb7C,IAAG,MAAAR,OAAQ4G,GACXrL,YAbgB,SAAC4F,GACnB,OAAQ0F,EAASK,OAAOC,KAAP,2BAAAnH,OAAuC6G,IAAY,MAalEO,MAAK,UAAApH,OAAY8G,GACjBO,OAAM,WAAArH,OAAa8G,GACnBQ,eAAgBC,UAM1BvM,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE/B,OAAQ,OACRtB,WAAY,SACZe,cAAe,MACfd,eAAgB,WAChByO,GAAI,gCAEJtL,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMhC,GAAI,GACR+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMhC,GAAI,EAAGqC,QAAU,SAAA6F,GAAC,OAAI+E,EAAKsB,SAASrG,KACxCnG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAM,oBACND,KAAM,MACNzE,MAAQlB,KAAKgG,MAAM8D,KAAK,EAAI,cAAgB,mBAGhD5G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMK,QAAU,SAAA6F,GAAC,OAAI+E,EAAKuB,SAAStG,KACjCnG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAM,qBACND,KAAM,MACNzE,MAAQlB,KAAKgG,MAAM8D,KAAK9J,KAAKgG,MAAMmE,WAAa,cAAgB,oBAItEjH,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,EACZN,MAAO,YAHT,QAKQlB,KAAKgG,MAAM8D,KALnB,OAK6B9J,KAAKgG,MAAMmE,eAM9CjH,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAYnO,UAAW,SAAUoO,WAAY,YAAarO,WAAY,EAAGD,SAAU,CAAC,GAAIL,MAAO,aAA/F,sCA5WaZ,aAyXhBuJ,wGChYTiG,mLAIF,IAAM/H,EAA0C,qBAAxB/H,KAAKC,MAAM8H,UAA2B/H,KAAKC,MAAM8H,SACnEgI,EAAQ/P,KAAKC,MAAM+P,SAAYzQ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAOC,MAAO,OAAQoQ,IAAKjQ,KAAKC,MAAM+P,UAAchQ,KAAKC,MAAMiQ,aAAoBlQ,KAAKC,MAAMkQ,SAAY5Q,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMgG,KAAM5F,KAAKC,MAAMkQ,UAAcnQ,KAAKC,MAAMmQ,YAAiB,KAC1MC,EAAW9Q,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+B,UAAYsG,EAAW,OAAS,SAAUxG,SAAU,EAAGC,WAAY,EAAGN,MAAO,aAAclB,KAAKC,MAAMoQ,SAE7H,OACI9Q,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEsB,MAAO,QACPG,aAAc,EACdsG,GAAKI,EAAW,CAAC,EAAE,GAAK,EACxBL,GAAKK,EAAW,EAAI,CAAC,EAAE,GACvBkB,GAAKlB,EAAW,EAAI,CAAC,EAAE,GACvBzE,GAAKyE,EAAW,EAAI,CAAC,EAAE,GACvBvE,QAAUxD,KAAKC,MAAMwD,YACrBrC,OAAS2G,EAAW,OAAS,CAAC,QAAQ,SACtCwB,UAAWvJ,KAAKC,MAAMqQ,SAAW,cAAgB,SACjDC,cAAevQ,KAAKC,MAAMqQ,SAAW,cAAgB,SACrDzQ,MAAOG,KAAKC,MAAMJ,MAAQG,KAAKC,MAAMJ,MAASkI,EAAW,OAAS,CAAC,QAAQ,SAC3EhH,MAAOf,KAAKC,MAAMuQ,YAAcxQ,KAAKC,MAAMuQ,YAAezI,EAAW,CAAChI,eAAe,cAAgB,MACjGC,KAAKC,MAAMyD,aAEfnE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiR,SAAA,KAEIzQ,KAAKC,MAAMyQ,OACTnR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8H,SAAU,WACVnG,aAAc,OACdC,gBAAkBtB,KAAKC,MAAMyQ,MAAMC,QAAU3Q,KAAKC,MAAMyQ,MAAMC,QAAU,OACxE5P,MAAQgH,EAAW,CAAC6I,MAAM,QAAQtJ,IAAI,SAAW,CAACsJ,MAAM,QAAQtJ,IAAI,SACpEK,GAAI,CAAC,MAAM,OACXD,GAAI,CAAC,MAAM,QAEXnI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8B,WAAY,EACZD,SAAU,OACVL,MAAQlB,KAAKC,MAAMyQ,MAAMxP,MAAQlB,KAAKC,MAAMyQ,MAAMxP,MAAQ,QAE3DlB,KAAKC,MAAMyQ,MAAMtQ,OAKxBb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmB,cAAgBkH,EAAW,MAAQ,SAAUhI,eAAiBgI,EAAW,aAAe,SAAUjI,WAAY,UAClHP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAQkI,EAAW,OAAS,EAAI5G,GAAK4G,EAAW,EAAI,EAAIhI,eAAiBgI,EAAW,aAAe,UACrG/H,KAAKC,MAAM4Q,YAAwC,QAA1B7Q,KAAKC,MAAM4Q,WAAuBR,EAAUN,GAEzExQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAQkI,EAAW,OAAS,EAAIlH,cAAe,SAAUd,eAAiBgI,EAAW,aAAe,UACtG/H,KAAKC,MAAM4Q,YAAwC,QAA1B7Q,KAAKC,MAAM4Q,WAAuBd,EAAQM,EAEnErQ,KAAKC,MAAM6Q,YAAc9Q,KAAKC,MAAM6Q,WAAWC,MAAM,MAAMxI,IAAI,SAACmB,EAAEsC,GAKhE,OAHIA,IACFtC,EAAKnK,EAAAC,EAAAC,cAAA,aAAQiK,IAGbnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgJ,IAAG,cAAAR,OAAgB8D,GAAKgF,WAAY,MAAOvP,UAAYsG,EAAW,OAAS,SAAU7G,MAAO,WAAYM,WAAY,EAAGD,SAAU,GAAImI,gBA1DvIpJ,aAqEXwP,iHCpETmB,mLAGF,OACEC,EAAA1R,EAAAC,cAAC0R,EAAA,EAAD,CACEzI,IAAK1I,KAAKC,MAAMmR,MAAM5C,GACtB/I,UAAW,CACTiC,GAAG,EACHC,GAAG,EACH9H,MAAM,EACNwR,KAAMrR,KAAKC,MAAMmR,MAAME,KAAKC,QAAQ,GAAK,QAAU,MAGrDL,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD,CACE3R,MAAO,EACPgB,cAAe,UAGbb,KAAKC,MAAMmR,MAAME,KAAKG,YACpBP,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD,CACE5Q,GAAI,EACJW,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QAEVzB,KAAKC,MAAMmR,MAAME,KAAKG,YAG5BzR,KAAKC,MAAMyR,kBA7BMpR,aAoCb2Q,2KChCTU,6MACJ3L,MAAQ,CACN4L,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,QAI3BlO,cAAgB,OAChBmO,oBAAqB,6EAGflS,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,6JAILlE,KAAKkS,oBAAqB,sJAI1BlS,KAAKmS,gMAGkB3R,EAAUC,8EACjCT,KAAKkE,YAEgB1D,EAAUyL,gBAAkBjM,KAAKC,MAAMgM,cAE1DjM,KAAKoS,aAAa,CAChBR,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,MACzB,WACA9N,EAAKgO,aAEE3R,EAAUuH,WAAa/H,KAAKC,MAAM8H,UAC3C/H,KAAKmS,6LAIUE,wFAASC,iCAAS,KAC9BtS,KAAKkS,4DACDlS,KAAK4G,SAASyL,EAASC,oCAEzB,2RAQGtS,KAAK+D,cAAcwO,mBAAmBvS,KAAKC,MAAMiM,6BAHzD6F,oBACAC,yBACAC,6BAKIJ,EAAa,CACjBW,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChB1K,OAAO,SAAA2K,GAAC,OAAIA,EAAE7R,OACd8R,aAAa,SAAC1B,EAAMjI,GAClB8E,EAAKiE,aAAa,CAChBN,cAAcR,KAGlB2B,aAAa,SAAC3B,EAAMjI,GAClB8E,EAAKiE,aAAa,CAChBN,cAAc,QAGlBoB,cAAe,SAAAxJ,GAAC,OAAIA,EAAE,KACtByJ,WAAY,SAAAJ,GAAC,OAAIA,EAAEhR,MAAM,KACzBqR,YAAa,SAAAL,GACX,OAAO,MAET5K,MAAM,CACJkL,QAAS,CACPC,UAAWtT,KAAKC,MAAMsT,OAAS,CAC7BC,WAAYxT,KAAKC,MAAMkI,MAAMC,OAAOqL,QAClC,CACF1Q,QAAS,SAGb2Q,OAAO,CACLtT,KAAK,CACHoB,WAAW,IACXD,SAASvB,KAAKC,MAAM8H,SAAW,GAAK,GACpC8H,WAAY7P,KAAKC,MAAMkI,MAAMwL,MAAMC,YAGvCC,QAAQ,CACNzT,KAAK,CACHmB,SAAS,GACTC,WAAW,IACXqO,WAAY7P,KAAKC,MAAMkI,MAAMwL,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqBvU,KAAKC,MAAMsT,OAChCiB,sBAAsB,CAAEC,KAAM,SAC9BC,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,MACtDC,OAAQ5U,KAAKC,MAAMsT,OAAS,CAACjM,IAAI,EAAEsJ,MAAM,GAAGiE,OAAO,EAAExD,KAAK,GAAMrR,KAAKC,MAAM8H,SAAW,CAAET,IAAK,GAAIsJ,MAAO,GAAIiE,OAAQ,EAAGxD,KAAM,IAAO,CAAE/J,IAAK,GAAIsJ,MAAO,GAAIiE,OAAQ,EAAGxD,KAAM,KAGvKO,EAAY,GAElB5R,KAAKC,MAAMiM,YAAY4I,UAAU/P,QAAQ,SAACgQ,EAAa/I,GACrD,IAAMgJ,EAAeD,EAAanP,KAC5BqP,EAAeF,EAAaG,QAAQ7J,cAC1C,GAAI4G,EAAyBgD,GAAc,CACzC,IAAME,EAA+B3J,WAAWyG,EAAyBgD,GAAcG,MAAM,KAAKzI,QAAQ,IAC1GiF,EAAU9E,KAAK,CACb0B,GAAGyG,EACHrP,KAAKoP,EACLjT,MAAMoT,EACNjU,MAAM,OAAOmU,IAAcC,MAAMR,UAAUE,GAAc9T,MAAMqU,IAAIC,KAAK,KAAK,IAC7E7T,MAAO0T,IAAcC,MAAMR,UAAUE,GAAcrT,MAAQ0T,IAAcC,MAAMR,UAAUE,GAAcrT,MAAQwM,EAAKpK,cAAc0R,WAAWT,QAMnJhV,KAAKoS,aAAa,CAChBR,YACAC,aACAE,kBACAC,uBACAC,iKAMF,IAAMH,IAA6C,OAA7B9R,KAAKgG,MAAM8L,gBAA0B9R,KAAKgG,MAAMgM,qBAAqBhS,KAAKgG,MAAM8L,cAActD,MAAMxO,KAAKgG,MAAMgM,qBAAqBhS,KAAKgG,MAAM8L,cAActD,IAC7KkH,EAA4C,OAA7B1V,KAAKgG,MAAM8L,cAA0BuD,IAAcC,MAAMR,UAAU9U,KAAKgG,MAAM8L,cAAclM,OAASyP,IAAcC,MAAMR,UAAU9U,KAAKgG,MAAM8L,cAAclM,MAAM+P,KAAON,IAAcC,MAAMR,UAAU9U,KAAKgG,MAAM8L,cAAclM,MAAM+P,KAAjM,GAAAzN,OAA2MlI,KAAKgG,MAAM8L,cAAclM,KAApO,QAAkP,KAE5S,OACET,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE/V,MAAO,EACP2H,SAAU,YAGRxH,KAAKgG,MAAM+L,kBAAoB/R,KAAKC,MAAMsT,QACxCpO,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACErO,OAAQ,EACRD,IAAK,CAAC,MAAM,OACZ+J,KAAM,CAAC,MAAM,OACb5P,UAAW,SACX3B,WAAY,SACZ0H,SAAU,WACV3H,MAAO,CAAC,MAAM,OACduB,OAAQ,CAAC,MAAM,OACfP,cAAe,SACfd,eAAgB,UAGd+R,EACE3M,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE/V,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBoF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACEhV,GAAI,EACJf,MAAO,CAAC,QAAQ,OAChBuB,OAAQ,CAAC,QAAQ,OACjB6O,IAAG,qBAAA/H,OAAuBwN,KAE5BvQ,EAAA3F,EAAAC,cAACoW,EAAA,EAAD,CACEtU,SAAU,CAAC,EAAE,GACboD,SAAU,EACVnD,WAAY,EACZoD,aAAc,EACdP,OAAQyN,IAEV3M,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACErU,SAAU,CAAC,EAAE,GACbC,WAAY,EACZN,MAAO,aAHT,YAKYlB,KAAKgG,MAAM8L,cAAcnQ,QAIvCwD,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE/V,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBoF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACEhV,GAAI,EACJf,MAAO,CAAC,QAAQ,OAChBuB,OAAQ,CAAC,QAAQ,OACjB6O,IAAG,0BAEL9K,EAAA3F,EAAAC,cAACoW,EAAA,EAAD,CACEvQ,UAAW,CACTkE,GAAG,EACHhI,WAAW,EACXD,SAAS,CAAC,EAAE,IAEdoD,SAAU,EACVnD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbqD,aAAc,EACdP,OAAQrE,KAAKgG,MAAM+L,kBAErB5M,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACEpU,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,aAHT,iBAYZiE,EAAA3F,EAAAC,cAACqW,EAAA,EAADnW,OAAAC,OAAA,CACE2E,KAAMwR,IACNC,YAAY,GACRhW,KAAKC,MACLD,KAAKgG,MAAM6L,WAJjB,CAKEP,KAAMtR,KAAKgG,MAAM4L,qBA9PGtR,aAqQfqR,yGC1QTsE,mLAGF,OACE1W,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkB,GAAI,EACJf,MAAO,EACPC,WAAY,SACZe,cAAe,OAEftB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoB,GAAI,EACJC,MAAO,CACLC,UAAU,IACVC,KAAK,WAEPnB,WAAY,SACZC,eAAgB,cAGdC,KAAKC,MAAMiB,OACX3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyB,GAAI,EACJtB,MAAO,OACPuB,OAAQ,OACRC,aAAc,MACdC,gBAAiBtB,KAAKC,MAAMiB,QAIhC3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6B,SAAU,EACVC,WAAY,EACZC,UAAW,OACXP,MAAO,YACPH,MAAO,CACLa,WAAW,SACXF,cAAc,eAGf1B,KAAKC,MAAM0B,QAGhBpC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqB,MAAO,CACLC,UAAU,IACVC,KAAK,WAEPnB,WAAY,SACZC,eAAgB,YAEhBR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6B,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QACXV,MAAO,CACLa,WAAW,UAEbC,wBAAyB,CACvBC,OAAQ9B,KAAKC,MAAM8B,kBA5DFzB,aAsEhB2V,4uYCtETC,mLAEF,IAAMxS,EAAc/D,OAAOC,OAAO,CAChCC,MAAM,EACN0B,SAAS,EACTC,WAAW,EACXJ,OAAO,OACP+U,UAAU,KACV9U,aAAa,EACbkI,UAAU,QACVvJ,KAAKC,MAAMyD,aAEb,OACGwN,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD7R,OAAAC,OAAA,GACK8D,EADL,CAECF,QAASxD,KAAKC,MAAMwD,cAEnBzD,KAAKC,MAAMyR,iBAjBMpR,aAuBX4V,wGCvBTE,mLAGF,OACElF,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD7R,OAAAC,OAAA,CACEyW,OAAQ,SACRC,IAAK,gCACDtW,KAAKC,OAERD,KAAKC,MAAMyR,iBATEpR,aAeP8V,uKCVTG,6MACJvQ,MAAQ,CACNwQ,UAAU,KACV5E,UAAU,KACVC,WAAW,KACX4E,WAAW,KACXC,YAAY,QAId3S,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,2JAK9CD,KAAKkE,YACLlE,KAAK2W,qMAGkBnW,EAAWC,oFAClCT,KAAKkE,YAEC0S,EAA4BpW,EAAUqW,qBAAuB7W,KAAKC,MAAM4W,oBACzD1J,KAAKC,UAAU5M,EAAU8M,iBAAmBH,KAAKC,UAAUpN,KAAKC,MAAMqN,gBACvEsJ,IAClB5W,KAAK4G,SAAS,CACZgL,UAAU,MACV,WACAzN,EAAK2S,sBAIHC,EAAgBvW,EAAUuH,WAAa/H,KAAKC,MAAM8H,SAClDiP,EAAmBxW,EAAUyW,YAAcjX,KAAKC,MAAMgX,WACxDF,GAAiBC,IACnBhX,KAAK2W,uVAMHrJ,EAAgBtN,KAAKC,MAAMqN,gBACRA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAK9E,KAAKC,MAAMkM,2BAGdnM,KAAK+D,cAAc6J,gBAAgB5N,KAAKC,MAAMuN,QAAQ,EAAE,SAASF,iBAAtFO,SAEA+D,EAAY,GACdsF,EAAgB,GAChBC,EAAmB,eAEjBnX,KAAK+D,cAAcqT,aAAa9J,EAAhC,eAAA+J,EAAA1X,OAAA2X,EAAA,EAAA3X,CAAA4X,EAAA/X,EAAAgY,KAA8C,SAAAC,EAAOxL,GAAP,IAAAyL,EAAAC,EAAA,OAAAJ,EAAA/X,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElDb,EAAcjL,GAAiB,IAEzByL,EAAc/X,OAAO8J,OAAOoE,GAAcnH,OAAO,SAAA6E,GAAE,OAAKA,EAAGE,QAAUQ,MACxDyL,EAAY5U,SAEzB6U,EAAaxJ,EAAKpK,cAAciU,MAAM,GAE1CN,EAAY3S,QAAQ,SAACwG,EAAGuD,GAGtB,IAAKvD,EAAG9I,MAAS8I,EAAGjF,QAAwB,YAAdiF,EAAGjF,OAC/B,OAAO,EAGT6Q,EAAmBA,EAAmBrL,KAAKM,IAAI+K,EAAiBjJ,SAAS3C,EAAGM,YAAcqC,SAAS3C,EAAGM,WAEtG,IAAMY,EAAc0B,EAAKpK,cAAciU,MAAMzM,EAAGkB,aAEhD,OAAQlB,EAAGH,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHuM,EAAaA,EAAWM,KAAKxL,GAC/B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHkL,EAAaA,EAAWO,MAAMzL,GAO9BkL,EAAWQ,GAAG,KAChBR,EAAaxJ,EAAKpK,cAAciU,MAAM,IAGxC,IAAMI,EAAUT,EACVvM,EAASG,EAAGH,OACZS,EAAYqC,SAAS3C,EAAGM,WACxBwM,EAAalK,EAAKpK,cAAciU,MAAMzM,EAAG8M,YACzCC,EAAanK,EAAKpK,cAAciU,MAAMzM,EAAG+M,YAE1CD,EAAW/T,SAAY+T,EAAW/T,SACrC4S,EAAcjL,GAAea,KAAK,CAChC1B,SACAgN,UACAvM,YACAwM,aACAC,aACA7L,mBAzD0C,wBAAAoL,EAAAU,SAAAd,EAAAzX,SAA9C,gBAAAwY,GAAA,OAAAnB,EAAAoB,MAAAzY,KAAAiH,YAAA,YAiEFuP,EAAY,KACVkC,EAAc1Y,KAAK+D,cAAc8I,YAAY,IAAIP,WAE/CtM,KAAKC,MAAM4W,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYkC,EAAYC,QAAQC,SAAS,EAAE,4CAG3CpC,EAAYkC,EAAYC,QAAQC,SAAS,EAAE,6CAG3CpC,EAAYkC,EAAYC,QAAQC,SAAS,EAAE,6CAG3CpC,EAAYkC,EAAYC,QAAQC,SAAS,EAAE,6CAG3CpC,EAAY,yCAIVqC,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgBnL,UAAS,IAAI5B,MAAOgN,UAAU,KAAM,MAEpDC,EAAa,GACbC,EAAyC,SAAhCxZ,KAAKC,MAAMwZ,2BAEpBzZ,KAAK+D,cAAcqT,aAAazX,OAAOmF,KAAKoS,GAA5C,eAAAwC,EAAA/Z,OAAA2X,EAAA,EAAA3X,CAAA4X,EAAA/X,EAAAgY,KAA2D,SAAAmC,EAAOlO,GAAP,OAAA8L,EAAA/X,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACrC5J,EAAKpK,cAAc8V,gBAAgB1L,EAAKlO,MAAMkM,gBAAgBV,GAAOyJ,QAAQsE,EAAOrC,EAAiB,MAAK,EAAM,MAD3E,OAC/DoC,EAAW9N,GADoDmO,EAAAE,KAAA,wBAAAF,EAAArB,SAAAoB,EAAA3Z,SAA3D,gBAAA+Z,GAAA,OAAAL,EAAAjB,MAAAzY,KAAAiH,YAAA,YAQN,IAFM+S,EAAmB,iBAIvB,IAAMC,EAAgB,GAChBC,EAAiB,GACvBrO,EAAYC,KAAKM,IAAIiN,EAAcxN,GACnCqN,EAAoB/K,EAAKpK,cAAciU,MAAM,GAI7CrY,OAAOmF,KAAKoS,GAAenS,QAAQ,SAAA0G,GAEjC,IAAI0O,EAAgB,KACdC,EAA0Bza,OAAO8J,OAAO8P,EAAW9N,IAAQuC,MAC3DqM,EAAoBd,EAAW9N,GAAO/E,OAAO,SAAA6E,GAAE,OAAKA,EAAG+O,WAAWvB,GAAiBxN,EAAG+O,WAAWzO,IACnGwO,GAAqBA,EAAkBvX,SACzCqX,EAAgBE,EAAkBrM,OAG/BgM,EAAiBvO,KACpBuO,EAAiBvO,GAAS0C,EAAKpK,cAAciU,MAAM,IAGrD,IACMuC,EADcpM,EAAKlO,MAAMkM,gBAAgBV,GACb9G,SAC9B6V,EAAmBtD,EAAczL,GAAO/E,OAAO,SAAA6E,GAAE,OAAKA,EAAGM,WAAWA,KAAekN,GAAiBxN,EAAGM,UAAUkN,KAErH,GAAKyB,EAAiB1X,OAwBpB0X,EAAiBzV,QAAQ,SAAAwG,GACvB,OAAQA,EAAGH,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH4O,EAAiBvO,GAASuO,EAAiBvO,GAAOwM,KAAK1M,EAAG+M,YAC5D,MACA,QACE0B,EAAiBvO,GAASuO,EAAiBvO,GAAOyM,MAAM3M,EAAG+M,YACvD0B,EAAiBvO,GAAO0M,GAAG,KAC7B6B,EAAiBvO,GAAS0C,EAAKpK,cAAciU,MAAM,YAnC3D,GAAIc,GAAgBA,EAAarN,GAAO,CACtC+O,EAAmB1B,EAAarN,GAChC,IAAMgP,EAAiB9a,OAAOC,OAAO,GAAG4a,GAAkBxM,MAI1D,GAHuBxC,WAAWiP,EAAerC,SAG9B,GAAKvM,EAAUsL,GAAoBgD,EAAc,CAClE,IAAM7B,EAAa0B,EAAiBvO,GAC9BiP,EAAYvM,EAAKpK,cAAc4W,iBAAiBR,EAAcO,UAAUH,GAC1EK,EAAatC,EAAWlD,MAAMsF,GAGlCD,EAAerC,QAAUwC,EACzBH,EAAepC,WAAaqC,EAC5BF,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClBpC,QAAQjK,EAAKpK,cAAciU,MAAM,GACjCK,WAAWlK,EAAKpK,cAAciU,MAAM,KAuB1C,IAAMjK,EAASpO,OAAOC,OAAO,GAAG4a,GAAkBxM,MAE9C6M,EAAgBb,EAAiBvO,GAAO2J,MAAMrH,EAAOsK,YAEzD,GAAIwC,EAAcC,GAAG,GAAG,CAEtB,IAAIC,EAAyB,KACvBC,EAAsB7M,EAAKpK,cAAc2J,gBAAgB,CAAC,QAAQ,SAASjC,EAAM,wBACvF,IAAK0C,EAAKlO,MAAMgb,YAAcD,EAAoB,CAChD,IAAME,EAAiBf,GAAiBA,EAAca,GAAuBb,EAAca,GAAwBZ,GAA2BA,EAAwBY,GAAuBZ,EAAwBY,GAAuB,KACxOE,IACFH,EAAyB5M,EAAKpK,cAAc4W,iBAAiBO,EAAe,KACjDJ,GAAG,KAC5BD,EAAgBA,EAAczF,MAAM2F,IAK1Cb,EAAezO,GAASoP,EAExB3B,EAAoBA,EAAkBjB,KAAK4C,GAG7CZ,EAAcxO,GAAS+O,IAGzB,IAAI5N,EAAauB,EAAKpK,cAAc8I,YAAsB,IAAVhB,GAEhD,GAAkB,OAAd2K,GAAuB5J,EAAWuO,cAAc3E,IAAc5J,EAAWwO,eAAe,IAAI9O,KAAO,OAAQ,CAO7G,IAAM+O,EAAgBzO,EAAW0O,OAAO,oBAGxCzC,EAAKjM,EAAW0O,OAAO,eAAiB,EAExCpC,EAAoB1N,WAAWA,WAAW0N,EAAkBvM,QAAQ,KAEpEyM,EAAsBiC,GAAiBnB,EACvCf,EAAuBkC,GAAiBnC,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBpN,KAAKM,IAAI4M,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBpN,KAAKkB,IAAIiM,EAAcC,GAGtFH,EAAgBlN,EAChBiN,EAAemB,OAzHRpO,EAAUsL,EAAiBtL,GAAWwN,EAAcxN,GAAW7L,KAAKC,MAAMsb,iBAAiBC,EAA3F3P,GAmLT,IAvDM4P,EAAqB9b,OAAOmF,KAAKqU,GAAwB5Q,IAAI,SAAA8D,GAAI,MAAK,CAC1EqP,EAAErP,EACFsP,EAAExC,EAAuB9M,GACzBuP,SAASxC,EAAsB/M,MAG7BwP,EAAY,EAChBJ,EAAmB1W,QAAS,SAAC+W,EAAKhN,GAChC,IAAMyC,EAAUzF,KAAKiQ,MAAMF,EAAUJ,EAAmB3Y,OAAO,KAC/D2Y,EAAmB3M,GAAOyC,QAAUA,EACpCsK,MAwBIZ,EAAajb,KAAKC,MAAMgb,WAAajb,KAAKC,MAAMgb,WAAWpS,cAAgB,MAGjF+I,EAAU9E,KAAK,CACb0B,GAAGyM,EACH/Z,MAAO,OAAQlB,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,SAASuN,EAAW,QAAQ,QAAQzF,KAAK,KAAK,IACzGlE,KAAKmK,IAGHO,EAAkB,EAClB/C,EAAcD,EAAc,IAC9BgD,EAAkB,GAGhB/C,IAAkBD,IACpBA,EAAgBlN,KAAKkB,IAAI,EAAEiM,EAAc,IAGtB,EACfgD,GAAahD,EAAcD,GADZ,EAEfkD,EAAc,GACXlQ,EAAE,EAAEA,GAHQ,EAGQA,IACrBmQ,EAAa3Q,WAAWA,WAAWwN,EAAehN,EAAEiQ,GAAYtP,QAAQ,IAC9EuP,EAAYpP,KAAKqP,GAGS,GACtBC,EAAYzc,OAAO8J,OAAOoP,GAAM/V,OAChCuZ,EAAgBvQ,KAAKkB,IAAI,EAAElB,KAAKC,KAAKqQ,EAFf,KAItBvK,EAAa,CACjByK,OAAO,CACL/X,KAAM,OACN+W,OAAQ,kBAEViB,OAAO,CACLhY,KAAM,SACNiY,SAAS,EACTpQ,IAAK4M,EACLhM,IAAKiM,GAEPwD,QAAQ,gBACRC,QAAQ,SAAA3a,GAAK,OAAIoM,EAAKpK,cAAcS,YAAYzC,EAAMia,IACtDW,WAAY3c,KAAKC,MAAM8H,SAAW,KAAO,CACvC6U,OAAQ,GACRC,SAAS,EACTvB,OAAQ,QACRwB,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,eAAgB,SAChBC,WAAW,SAASb,EAAc,SAEpCH,cACAiB,UAAU,EACVC,SAAQ,EACRC,SAAUrd,KAAKC,MAAM8H,SAAW,KAAO,CACrC6U,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfE,WAAWhB,EACXe,eAAgB,SAChB3B,OAAQ,SAAA5R,GAAC,OAAIyE,EAAKpK,cAAcW,iBAAiBgF,EAAE,KAErD+I,SAAQ,EACR8K,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjBzV,OAAO,SAAA2K,GAAC,OAAIA,EAAE7R,OACd4c,mBAAmB,GACnBC,kBAAkB/E,EAClBgF,WAAW,CAAEvJ,KAAM,QAASE,UAAW,IACvCsJ,YAAqC,UAAzBje,KAAKC,MAAMgX,UAAwB,GAAM,GACrD9O,MAAM,CACJ+V,KAAM,CACJC,MAAO,CACL/d,KAAM,CACJmB,SAAS,GACTC,WAAW,IACX4c,KAAKpe,KAAKC,MAAMkI,MAAMC,OAAOwU,OAC7B/M,WAAW7P,KAAKC,MAAMkI,MAAMwL,MAAMC,aAIxCyK,KAAM,CACJC,KAAM,CACJC,OAAQve,KAAKC,MAAMkI,MAAMC,OAAOoW,gBAAiBC,gBAAiB,SAaxE7J,OAAQ5U,KAAKC,MAAM8H,SAAW,CAAET,IAAK,GAAIsJ,MAAO,GAAIiE,OAAQ,GAAIxD,KAAM,IAAO,CAAE/J,IAAK,GAAIsJ,MAAO,GAAIiE,OAAQ,GAAIxD,KAAM,IACrHqN,aAAa,SAACC,GAAc,IAEpBvN,EADYuN,EAAVC,MACYC,OAAO,GAC3B,OACE1Z,EAAA3F,EAAAC,cAACqf,EAAA,EAAD,CACE1N,MAAOA,GAEPjM,EAAA3F,EAAAC,cAACsf,EAAA,EAAD,CACE7d,MAAOkQ,EAAMlQ,MACbS,MAAOyP,EAAM4N,QACbjd,MAAK,KAAAmG,OAAOkJ,EAAME,KAAK2N,cAGO,kBAAxB7N,EAAME,KAAKsK,UAAyBjc,OAAOmF,KAAKsM,EAAME,KAAKsK,UAAU9Y,OAAO,GAClFnD,OAAOmF,KAAKsM,EAAME,KAAKsK,UAAUrT,IAAI,SAAAkD,GACnC,GAAIA,IAAU2F,EAAM4N,QAClB,OAAO,KAET,IAAM9d,EAAQiN,EAAKpK,cAAc2J,gBAAgB,CAAC,QAAQ,SAASjC,EAAM,QAAQ,QAC3E2M,EAAUhH,EAAME,KAAKsK,SAASnQ,GAChCyT,EAAmB/Q,EAAKpK,cAAcS,YAAY4T,EAAQ,GAC9D,OAAI5M,WAAW4M,IAAU,IAErBjT,EAAA3F,EAAAC,cAACsf,EAAA,EAAD,CACEpd,MAAO8J,EACPvK,MAAOA,EACPwH,IAAG,OAAAR,OAASuD,GACZ1J,MAAK,KAAAmG,OAAOgX,KAIX,UAQnBlf,KAAK4G,SAAS,CACZgL,YACAC,mJAKF,OACE1M,EAAA3F,EAAAC,cAAC0f,EAAA,EAADxf,OAAAC,OAAA,CACE2E,KAAM6a,IACNpJ,YAAY,GACRhW,KAAKgG,MAAM6L,WAHjB,CAIEP,KAAMtR,KAAKgG,MAAM4L,UACjByN,SAAUrf,KAAKC,MAAMof,SACrBje,OAAQpB,KAAKC,MAAMyW,YACnB4I,eAAgBtf,KAAKC,MAAMqf,yBApeLhf,aA0efiW,wIC9eTgJ,qdAMqB/e,EAAUC,kMAKjC,OACE0E,EAAA3F,EAAAC,cAAC+f,EAAA,EAAD,CACE9W,IAAK1I,KAAKC,MAAMmR,MAAM5C,GACtB/I,UAAW,CACTiC,GAAG,EACHC,GAAG,EACH9H,MAAM,EACNwR,KAAMrR,KAAKC,MAAMmR,MAAME,KAAKC,SAAWvR,KAAKC,MAAMmR,MAAME,KAAKC,QAAQ,GAAK,QAAU,MAGtFpM,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CACEvF,MAAO,EACPgB,cAAe,UAGbb,KAAKC,MAAMmR,MAAME,KAAKG,YACpBtM,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CACExE,GAAI,EACJW,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QAEVzB,KAAKC,MAAMmR,MAAME,KAAKG,YAG5BzR,KAAKC,MAAMyR,kBArCWpR,aA4ClBif,2qRChDf,IAAAE,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAIeE,EAAA,GACbC,YAAa,CAAC,OAAQ,QAEtBC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDC,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCC,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERzM,MAAO,CACL0M,MAAO,2CACPzM,UAAW,qCACX0M,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnC3gB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5B4gB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,iBAAiB,qBAC9BC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACPC,SAAU,IAEZ9Y,OAAQ,CACN+Y,QAASC,IAAKC,KACdC,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKM,KAAK,GAC1BC,OAAQ,UACRP,KAAM,UACNQ,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,OACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cAIbC,YAAY,UACZC,cAAc,UACdC,gBAAgB,UAChBC,SAAS,UACTC,aAAa,UACb3E,gBAAgB,UAChB4E,qBAAqB,UACrBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVpb,QAAS,UACTiY,QAAS,UACTjW,OAAQ,UACRqZ,KAAK,UACLtZ,QAAS,UACTI,QAAS,UACToS,OAAQ,UACR+G,OAAO,OACPC,UAAU,UACVnQ,OAAO,OACPoQ,WAAW,UACXC,gBAAgB,OAChBC,gBAAgB,wCAChBC,YAAY,UACZC,WAAW,OACX5W,aAAa,CACXjC,OAAO,CACLd,KAAK,UACLG,KAAK,UACLyZ,MAAM,UACN7Z,OAAO,UACPK,QAAQ,UACRN,QAAQ,UACR+Z,QAAQ,UACR5Z,QAAQ,UACRC,QAAQ,UACR4Z,QAAQ,UACRC,SAAS,UACT1Z,SAAS,UACT2Z,eAAe,UACfC,gBAAgB,WAElBC,SAAS,CACPla,KAAK,UACLG,KAAK,UACLyZ,MAAM,UACN7Z,OAAO,UACPK,QAAQ,UACRN,QAAQ,UACR+Z,QAAQ,UACRC,QAAQ,UACR7Z,QAAQ,UACRC,QAAQ,UACRG,SAAS,UACT0Z,SAAS,UACTC,eAAe,UACfC,gBAAgB,WAElBje,OAAO,CACLsE,UAAU,UACVC,QAAQ,UACRC,OAAO,YAGX2Z,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZvD,KAAM,CACJngB,MAAO2jB,YAAM,GAAK,QAClBvjB,gBAAiBwjB,YAAK,GAAK,QAC3BpQ,YAAa,QAEfqQ,QAAS,CACP7jB,MAAO2jB,YAAM,GAAKG,IAAM3D,MACxB/f,gBAAiBwjB,YAAK,GAAKE,IAAM3D,MACjC3M,YAAasQ,IAAM3D,MAErB4D,QAAS,CACP/jB,MAAO2jB,YAAM,GAAKK,IAAO7D,MACzB/f,gBAAiBwjB,YAAK,GAAKI,IAAO7D,MAClC3M,YAAawQ,IAAO7D,MAEtB8D,OAAQ,CACNjkB,MAAO2jB,YAAM,GAAKO,IAAI/D,MACtB/f,gBAAiBwjB,YAAK,GAAKM,IAAI/D,MAC/B3M,YAAa0Q,IAAI/D,MAEnBgE,KAAM,CACJnkB,MAAO2jB,YAAM,GAAKzD,IAAKC,MACvB/f,gBAAiB,UACjBoT,YAAa,YAGjB4Q,QAAS,CACPnE,QAAS,CACPjgB,MAAOkgB,IAAKhhB,KACZkB,gBAAiB8f,IAAKC,KAEtBkE,eAAgBnE,IAAKC,KACrBmE,mBAAoBpE,IAAKhhB,MAE3BqlB,OAAQ,CACNvkB,MAAOghB,IAAWD,MAClBuD,mBAAoBtD,IAAWD,OAEjC8C,QAAS,CACPQ,eAAgBP,IAAM3D,KACtBmE,mBAAoBR,IAAM5kB,MAE5B+kB,OAAQ,CACNI,eAAgBH,IAAI/D,KACpBmE,mBAAoBJ,IAAIhlB,OAG5BslB,YAAa,CACXC,MAAO,CACLpkB,SAAU,UACVH,OAAQ,OACR8E,SAAU,OACV0f,QAAS,UAEXC,OAAQ,CACNtkB,SAAU,OACVH,OAAQ,OACR8E,SAAU,QAEZ4f,MAAO,CACLvkB,SAAU,SACVH,OAAQ,OACR8E,SAAU,OACV7E,aAAc,i8kECnOpBW,EAAAC,QAAA,CAAkBoR,QAAA,wDCAlBrR,EAAAC,QAAA,CAAkBkH,SAAA,gECAlBnH,EAAAC,QAAA,CAAkB8jB,GAAA,u79ECAlB/jB,EAAAC,QAAA,CAAkB+jB,OAAA,gJCAlBhkB,EAAAC,QAAA,CAAkBgkB,eAAA,+BAAAC,MAAA,sBAAAC,OAAA,uBAAAC,WAAA,2BAAAC,MAAA,2/JCKZC,6MACJtgB,MAAQ,CACNugB,MAAM,KACNC,OAAM,EACNC,WAAW,EACXC,YAAW,EACXC,YAAY,KACZC,aAAY,EACZC,cAAc,KACdC,cAAc,QAGhB5U,oBAAqB,IAGrBnO,cAAgB,OAiChB+S,uCAAoB,SAAAiQ,IAAA,OAAAC,EAAAxnB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,OAClBpR,EAAKugB,kBADa,wBAAAD,EAAA1O,SAAAwO,EAAA/mB,WAIpBmnB,oCAAiB,SAAA1P,IAAA,IAAAtI,EAAAkD,EAAA,OAAA2U,EAAAxnB,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY,IAAIqP,QAAJ,eAAAC,EAAA1nB,OAAA2nB,EAAA,EAAA3nB,CAAAqnB,EAAAxnB,EAAAgY,KAAa,SAAA+P,EAAOC,EAASC,GAAhB,OAAAT,EAAAxnB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OACtCpR,EAAK5C,cAAc4jB,UAAU,iBAAiBhhB,EAAK1G,MAAMwC,MACzDkE,EAAK1G,MAAM2nB,KAAKC,IAAIV,eAAexgB,EAAK1G,MAAMwC,KAAK,SAACqlB,EAAI3Y,GACtDqY,EAAQrY,KAH4B,wBAAAuY,EAAAnP,SAAAgP,EAAAvnB,SAAb,gBAAA+nB,EAAAC,GAAA,OAAAX,EAAA5O,MAAAzY,KAAAiH,YAAA,IADZ,cACTkI,EADS0I,EAAAiC,KAQTzH,EAAW,GACblD,EACFkD,EAASlD,YAAcA,GAEvBkD,EAASqU,YAAa,EACtBrU,EAASkU,MAAQ,kCAGnB5f,EAAKC,SAASyL,GAhBCwF,EAAAoQ,OAAA,SAiBR9Y,GAjBQ,wBAAA0I,EAAAU,SAAAd,EAAAzX,WAmEjBkoB,kCAAe,SAAAvO,IAAA,IAAAlL,EAAA0Z,EAAA,OAAAnB,EAAAxnB,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACIqQ,IAAMC,IAAI,kDADd,YACP5Z,EADOmL,EAAAE,MAAA,CAAAF,EAAA7B,KAAA,eAGLoQ,EAAY1Z,EAAG6C,KACrB3K,EAAKC,SAAS,CACZuhB,cALSvO,EAAAqO,OAAA,SAOJE,GAPI,cAAAvO,EAAAqO,OAAA,SASN,MATM,wBAAArO,EAAArB,SAAAoB,EAAA3Z,WAYfsoB,wCAAqB,SAAAC,IAAA,IAAA9Z,EAAA+Z,EAAA,OAAAxB,EAAAxnB,EAAAoY,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,cAAA0Q,EAAA1Q,KAAA,EACFqQ,IAAMC,IAAI,qDADR,YACb5Z,EADaga,EAAA3O,MAAA,CAAA2O,EAAA1Q,KAAA,eAGXyQ,EAAe/Z,EAAG6C,KACxB3K,EAAKC,SAAS,CACZ4hB,iBALeC,EAAAR,OAAA,SAOVO,GAPU,cAAAC,EAAAR,OAAA,SASZ,MATY,wBAAAQ,EAAAlQ,SAAAgQ,EAAAvoB,WAYrB0oB,mBAAqB,SAACC,GACpB,IAAIC,EAAa,KAUjB,GATIjiB,EAAKX,MAAMwiB,cACb7hB,EAAKX,MAAMwiB,aAAazjB,QAAQ,SAACC,EAAEgH,GACjC,IAAK4c,GAAcpd,WAAWxG,EAAE6jB,WAAWrd,WAAWmd,GAEpD,OADAC,EAAa5jB,GACN,IAKT2B,EAAKX,MAAMmiB,WAAaS,EAAW,CACrC,IAAME,EAAWniB,EAAKoiB,cAAcH,EAAWjiB,EAAKX,MAAMmJ,YAAY6Z,KAGlEC,EAFeH,EAAS,GACNniB,EAAKX,MAAMmiB,UAAUe,WAI3C,OAFAD,EAAa/a,SAAS+a,EAAWtc,QAAQ,IACzChG,EAAK5C,cAAc4jB,UAAU,qBAAqBiB,EAAWjiB,EAAKX,MAAMmJ,YAAY6Z,IAAIF,EAASG,GAC1FA,EAGT,OAAO,QAGTE,4CAAyB,SAAAC,IAAA,IAAAtC,EAAAD,EAAA8B,EAAAtP,EAAAgQ,EAAAC,EAAA7C,EAAA,OAAAO,EAAAxnB,EAAAoY,KAAA,SAAA2R,GAAA,cAAAA,EAAAzR,KAAAyR,EAAAxR,MAAA,UACnB+O,EAAgB,EAChBD,EAAgB,EAEflgB,EAAKX,MAAMmJ,cAAexI,EAAKuL,mBAJb,CAAAqX,EAAAxR,KAAA,eAAAwR,EAAAtB,OAAA,UAKd,GALc,OAQlBthB,EAAKX,MAAMmJ,YAAYlB,cACpB0a,EAAWnd,WAAW7E,EAAK5C,cAAciU,MAAMrR,EAAKX,MAAMmJ,YAAYwZ,UAAUa,IAAI,KAAKC,YAC/F3C,EAAgBngB,EAAK+hB,mBAAmBC,IAG1C9B,EAAgBC,GAAgC,EAE5CngB,EAAKX,MAAM2gB,cACPtN,GAAgB,IAAI/M,MAAOgN,UAC3B+P,EAAgBnb,UAAUmL,EAAcnL,SAASvH,EAAKX,MAAM2gB,cAAc,KAGhFG,GAAiBuC,EACjBvC,EAAgBhb,KAAKkB,IAAI8Z,EAAc,GAEvCngB,EAAK5C,cAAc4jB,UAAU,iBAAiBd,EAAc,gBAAgBwC,EAAc,qBAAqBvC,IAG3GwC,EAAazC,EAAcC,EAC3BL,EAAaI,EAAc,EAAIrb,WAAW8d,EAAWzC,GAAiB,EAE5ElgB,EAAKC,SAAS,CACZigB,gBACAC,gBACAL,eAGFiD,WAAW,WAAK/iB,EAAKgjB,qBAAqB,KAnCnB,yBAAAJ,EAAAhR,SAAA6Q,EAAAppB,WAsCzB2pB,kBAAoB,WAElB,GAAIhjB,EAAKuL,mBACP,OAAO,EAGT,IAAI4U,EAAgBngB,EAAKX,MAAM8gB,cAC/B,GAAIA,EAEF,KADAA,EAMO,CACL,IAAMwC,EAAa3iB,EAAKX,MAAM6gB,cAAcC,EACtCL,EAAajb,WAAW8d,EAAW3iB,EAAKX,MAAM6gB,eACpDlgB,EAAKC,SAAS,CACZ6f,aACAK,kBAEF4C,WAAW,WAAK/iB,EAAKgjB,qBAAqB,UAX1ChjB,EAAKC,SAAS,CACZ6f,WAAW,EACXD,OAAM,SAYV7f,EAAKC,SAAS,CACZ6f,WAAW,EACXD,OAAM,OAKZoD,+BAAY,SAAAC,IAAA,IAAAC,EAAA/a,EAAAgb,EAAApD,EAAAtU,EAAA2X,EAAAC,EAAAzB,EAAAL,EAAA,OAAAnB,EAAAxnB,EAAAoY,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UAGJ+R,EAHI,oBAIJ/a,EAASpI,EAAK1G,MAAMwC,KAAK4I,cAE3B0e,EAAoB,KACpBpD,EAAc,KACdtU,EAAW,GAEX8X,eACFJ,EAAoBI,aAAaC,QAAQN,MAEvCC,EAAoB5c,KAAKkd,MAAMN,IAI9BA,GAAsBA,EAAkBhb,GAjBnC,CAAAmb,EAAAnS,KAAA,gBAkBR4O,GAAc,IAAIra,MAAOgN,UAlBjB4Q,EAAAnS,KAAA,GAoB+BqP,QAAQkD,IAAI,CACjD3jB,EAAK2hB,qBACL3hB,EAAKuhB,iBAtBC,QAAA8B,EAAAE,EAAApQ,KAAAmQ,EAAAtqB,OAAA4qB,EAAA,EAAA5qB,CAAAqqB,EAAA,GAoBDxB,EApBCyB,EAAA,GAoBY9B,EApBZ8B,EAAA,IAyBRF,EAAoB,IACFhb,GAAU,CAC1B4X,cACAwB,YACAK,gBAIF7hB,EAAK5C,cAAcymB,gBAAgBV,EAAiB3c,KAAKC,UAAU2c,IAEnE1X,EAAW0X,EAAkBhb,GAExByZ,GAAiBL,IACpB9V,EAASkU,MAAQ,0BAtCX,QA0CV5f,EAAKC,SAASyL,GA1CJ,yBAAA6X,EAAA3R,SAAAsR,EAAA7pB,WA6CZknB,qCAAkB,SAAAuD,IAAA,IAAApY,EAAA,OAAA2U,EAAAxnB,EAAAoY,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,UAEXpR,EAAK1G,MAAMwC,MAASkE,EAAK1G,MAAM2nB,KAFpB,CAAA8C,EAAA3S,KAAA,eAAA2S,EAAAzC,OAAA,UAGP,GAHO,cAMV5V,EAAW,CACfuU,aAAY,GAEdjgB,EAAKC,SAASyL,GATEqY,EAAA3S,KAAA,EAWUpR,EAAKwgB,iBAXf,WAAAuD,EAAA5Q,KAAA,CAAA4Q,EAAA3S,KAAA,gBAAA2S,EAAA3S,KAAA,GAcRpR,EAAKijB,YAdG,QAed,IACEjjB,EAAKwiB,yBACL,MAAOrB,GACPzV,EAASkU,MAAQ,yBAKnB5f,EAAKC,SAASyL,GAvBA,yBAAAqY,EAAAnS,SAAAkS,EAAAzqB,oFAvQZA,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,oKAU9C,IAJAD,KAAKkS,oBAAqB,EAEtB1D,EAAKY,OAAOsa,WAAW,aAAe,GAEnClb,KACHY,OAAOub,aAAanc,kJAKxBxO,KAAKkE,+FAGkB1D,mEACvBR,KAAKkE,aAEAlE,KAAKgG,MAAM4gB,aAAe5mB,KAAKC,MAAM2nB,MACxC5nB,KAAKknB,2JA+BM0B,EAAYgC,GACzB,IAAIC,EACAC,EACAC,EAAMC,EAUNJ,EAAa,KACfG,EAVc,OACN,MASYnC,EAAU,oBARrB,QACF,KAOgEA,EAAU,WACjFoC,EAPe,QACF,MAMQpC,EAAU,oBALb,KAKoDA,EAAU,WAJ9D,QAMlBmC,EAbc,OACN,MAYYnC,EAAU,qBAVvB,KAUyDA,EAAU,WAC1EoC,EAVe,OAEG,KAQGpC,EAAU,YATlB,MASsDA,EAAU,qBAG/E,IACMqC,EAAO,GAAK,EADLnf,KAAKof,KAAM,EAAIH,IAoB5B,OAhBEF,EADEI,EAAO,IACG,YACHA,EAAO,IAAMA,GAAQ,IAClB,SAEA,OAGdH,EAAehf,KAAKof,IAAIF,IACL,IACjBF,EAAe,GAGbF,EAAa,MACfE,GAAgB,KAGX,CAACA,EAAclC,EAAU,oBAAyBA,EAAU,WAAgBiC,iDAkMnF,GAAI7qB,KAAKgG,MAAM8gB,cAAc,GAAG,CAC9B,IAAMqE,EAAUrf,KAAKiQ,MAAM/b,KAAKgG,MAAM8gB,cAAc,IAC9CsE,EAAUprB,KAAKgG,MAAM8gB,cAAuB,GAARqE,EAC1C,OAAQ,IAAIA,GAASvoB,QAAQ,GAAG,KAAK,IAAIwoB,GAASxoB,QAAQ,GAAG,OAE7D,OAAO5C,KAAKgG,MAAM8gB,cAAc,qCAI3B,IAAA3iB,EAAAnE,KACP,OACEqrB,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CAAMzqB,cAAe,SAAUf,WAAY,UAEV,OAA7BE,KAAKgG,MAAM8gB,cACT9mB,KAAKgG,MAAMwgB,MACT6E,EAAA7rB,EAAAC,cAAC8rB,EAAA,EAAD,CACElrB,UAAW,CACTmJ,GAAG,EACHtI,MAAMlB,KAAKC,MAAMurB,UAAYxrB,KAAKC,MAAMurB,UAAY,aAEtDrrB,YAAWR,OAAA8rB,EAAA,EAAA9rB,CAAA,CACTgG,KAAK,QACF3F,KAAKC,MAAME,aAEhBD,UAAW,CACTuB,UAAU,SACV3B,WAAW,SACXC,eAAe,UAEjBK,KAAMJ,KAAKC,MAAMyrB,WAAa1rB,KAAKC,MAAMyrB,WAAa,8BAGxDL,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACE1qB,GAAI,EACJd,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBsrB,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CAAM1qB,GAAI,EAAGM,MAAQlB,KAAKC,MAAMurB,UAAYxrB,KAAKC,MAAMurB,UAAY,aAAexrB,KAAKC,MAAM0rB,SAAW3rB,KAAKC,MAAM0rB,SAAW,kBAA9H,IAAkJN,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAKM,KAAN,CAAW1qB,MAAQlB,KAAKC,MAAMurB,UAAYxrB,KAAKC,MAAMurB,UAAY,YAAahqB,WAAY,GAAKxB,KAAK6rB,wBACtPR,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CAAUvpB,MAAQ/B,KAAKgG,MAAMygB,cAIZ,OAArBzmB,KAAKgG,MAAMugB,OAAmBvmB,KAAKgG,MAAM0gB,WAoBvC2E,EAAA7rB,EAAAC,cAAC8rB,EAAA,EAAD,CACElrB,UAAW,CACTmJ,GAAG,EACHtI,MAAMlB,KAAKC,MAAMurB,UAAYxrB,KAAKC,MAAMurB,UAAY,aAEtDrrB,YAAWR,OAAA8rB,EAAA,EAAA9rB,CAAA,CACTgG,KAAK,QACF3F,KAAKC,MAAME,aAEhBD,UAAW,CACTuB,UAAU,SACV3B,WAAW,SACXC,eAAe,UAEjBK,KAAOJ,KAAKgG,MAAMugB,MAAQvmB,KAAKgG,MAAMugB,MAASvmB,KAAKC,MAAMwC,KAAQzC,KAAKC,MAAM6rB,eAAiB9rB,KAAKC,MAAM6rB,eAAiB,gCAAoC9rB,KAAKC,MAAM8rB,eAAiB/rB,KAAKC,MAAM8rB,eAAiB,2BAjCvNV,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACExrB,WAAY,SACZe,cAAe,UAEfwqB,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACE3lB,KAAM,MACNC,KAAM,UACN1E,MAAO,aAETmqB,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACE5lB,GAAI,EACJnE,SAAU,EACVE,UAAW,SACXP,MAAOlB,KAAKC,MAAMurB,UAAYxrB,KAAKC,MAAMurB,UAAY,YAEpDxrB,KAAKgG,MAAMugB,QAwBpBvmB,KAAKC,MAAMwC,KACT4oB,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACE5lB,GAAI,EACJ2Q,OAAQ,SACRzM,WAAY,YACZ0M,IAAK,+BACL0V,KAAI,2BAAA9jB,OAA6BlI,KAAKC,MAAMwC,MAC5CvB,MAAOlB,KAAKC,MAAMurB,UAAYxrB,KAAKC,MAAMurB,UAAY,YAErDH,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACExrB,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBsrB,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACE/pB,SAAU,EACVE,UAAW,SACXP,MAAOlB,KAAKC,MAAMurB,UAAYxrB,KAAKC,MAAMurB,UAAY,YAHvD,qBAOAH,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACE9hB,GAAI,EACJ7D,KAAM,SACNC,KAAM,YACN1E,MAAOlB,KAAKC,MAAMurB,UAAYxrB,KAAKC,MAAMurB,UAAY,eAIjB,oBAAjCxrB,KAAKC,MAAMgsB,kBAClBZ,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACE5lB,GAAI,EACJsmB,KAAI,qBACJxoB,QAAU,SAAA6F,GAAC,OAAIlF,EAAKlE,MAAMgsB,qBAC1B/qB,MAAOlB,KAAKC,MAAMisB,gBAAkBlsB,KAAKC,MAAMisB,gBAAkB,WACjEtiB,WAAY5J,KAAKC,MAAMksB,qBAAuBnsB,KAAKC,MAAMksB,qBAAuB,aAEhFd,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACExrB,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBsrB,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACE/pB,SAAU,EACVE,UAAW,SACXP,MAAOlB,KAAKC,MAAMisB,gBAAkBlsB,KAAKC,MAAMisB,gBAAkB,YAHnE,sBAOAb,EAAA7rB,EAAAC,cAAC6rB,EAAA,EAAD,CACE9hB,GAAI,EACJ7D,KAAM,SACNC,KAAM,SACN1E,MAAOlB,KAAKC,MAAMisB,gBAAkBlsB,KAAKC,MAAMisB,gBAAkB,eAIvE,aAlcc5rB,aAycbgmB,6KCzcT8F,6MAEJpmB,MAAQ,CACNqmB,QAAQ,KACRC,aAAa,KACbC,kBAAkB,KAClBC,qBAAqB,QAIvBzoB,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,gDAIhC,IAAAkE,EAAAnE,KACRqsB,EAAU1sB,OAAOmF,KAAK9E,KAAKC,MAAMkM,iBAAiB5D,IAAI,SAAAkD,GAE1D,MAAO,CACL1J,MAAM0J,EACN9J,MAAM8J,EACNS,YAJkB/H,EAAKlE,MAAMkM,gBAAgBV,MAQ3C6gB,EAAetsB,KAAKC,MAAMgM,cAAgBogB,EAAQI,KAAK,SAAA/iB,GAAC,OAAKA,EAAE3H,MAAM8G,gBAAkB1E,EAAKlE,MAAMgM,cAAcpD,gBAAkB,KAyKxI7I,KAAK4G,SAAS,CACZylB,UACAC,eACAC,kBA1KwB,SAAAtsB,GACxB,IAAMwL,EAAQxL,EAAM8B,MACdmK,EAAcjM,EAAMqR,KAAKpF,YAE/B,OACE/G,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CACEvF,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAEhBoF,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CACEtF,WAAY,UAEZqF,EAAA3F,EAAAC,cAACitB,EAAA,EAAD,CACEjhB,MAAOA,EACPS,YAAaA,EACbygB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHtB,MAAM,MACNuB,OAAO,UAIb+D,EAAA3F,EAAAC,cAACitB,EAAA,EAAD,CACEjhB,MAAOA,EACPkhB,UAAW,CACT/mB,KAAK,YACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,iBAMZiD,EAAK6B,MAAM/F,MAAM2sB,gBACfznB,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CACEtF,WAAY,SACZC,eAAgB,YAEhBoF,EAAA3F,EAAAC,cAACitB,EAAA,EAAD/sB,OAAAC,OAAA,CACE6L,MAAOA,GACHtH,EAAK6B,MAAM/F,MAFjB,CAGE0sB,UAAW,CACT/mB,KAAKzB,EAAK6B,MAAM/F,MAAM2sB,gBACtB3sB,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,aAGVgL,YAAaA,EACbsB,QAASrJ,EAAK6B,MAAM/F,MAAMuN,QAC1Bqf,WAAY1oB,EAAKlE,MAAM4sB,WACvBC,cAAe3oB,EAAKlE,MAAM6sB,kBAG5B3oB,EAAKlE,MAAM8sB,aACb5nB,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CACEtF,WAAY,SACZC,eAAgB,YAEhBoF,EAAA3F,EAAAC,cAACitB,EAAA,EAAD/sB,OAAAC,OAAA,CACE6L,MAAOA,GACHtH,EAAK6B,MAAM/F,MAFjB,CAGE0sB,UAAW,CACT/mB,KAAK,eACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,aAGVgL,YAAaA,EACbsB,QAASrJ,EAAK6B,MAAM/F,MAAMuN,QAC1Bqf,WAAY1oB,EAAKlE,MAAM4sB,WACvBC,cAAe3oB,EAAKlE,MAAM6sB,oBA2FtCN,qBAnF2B,SAAAvsB,GAC3B,IACM+sB,GAA4D,IADlD/sB,EAAM+sB,YAAYX,QACNY,QAAQhtB,EAAM+sB,YAAYjrB,OAAgB9B,EAAM+sB,YAAYjrB,MAAQuqB,EAEhG,IAAKU,EACH,OAAO,KAGT,IAAMvhB,EAAQuhB,EAAYjrB,MACpBmK,EAAc8gB,EAAY9gB,YAChC,OACE/G,EAAA3F,EAAAC,cAAC2F,EAAA,EAADzF,OAAAC,OAAA,CACEmB,MAAO,CACLE,KAAK,KAEPlB,eAAgB,iBACZE,EAAMitB,YAEV/nB,EAAA3F,EAAAC,cAAC2F,EAAA,EAADzF,OAAAC,OAAA,CACEoF,EAAG,EACHnF,MAAO,GACHI,EAAMitB,WAHZ,CAIEptB,WAAY,SACZe,cAAe,MACfE,MAAO,CAAC+G,OAAO,WACf/H,eAAgB,eAEhBoF,EAAA3F,EAAAC,cAACitB,EAAA,EAAD,CACEjhB,MAAOA,EACPS,YAAaA,EACbygB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHC,OAAO,UAIb+D,EAAA3F,EAAAC,cAACitB,EAAA,EAAD,CACEjhB,MAAOA,EACPkhB,UAAW,CACT/mB,KAAK,YACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,iBAOZiD,EAAKlE,MAAM8sB,aACT5nB,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CACEtF,WAAY,SACZC,eAAgB,YAEhBoF,EAAA3F,EAAAC,cAACitB,EAAA,EAAD/sB,OAAAC,OAAA,CACE6L,MAAOA,GACHtH,EAAK6B,MAAM/F,MAFjB,CAGE0sB,UAAW,CACT/mB,KAAK,eACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,aAGVgL,YAAaA,EACbsB,QAASrJ,EAAK6B,MAAM/F,MAAMuN,QAC1Bqf,WAAY1oB,EAAKlE,MAAM4sB,WACvBC,cAAe3oB,EAAKlE,MAAM6sB,2KAiBxC9sB,KAAKkE,YACLlE,KAAKmtB,iBAELntB,KAAK4G,SAAS,CACZ3G,MAAMD,KAAKC,6LAIUO,EAAUC,yEACjCT,KAAKkE,YAECkpB,EAAuB5sB,EAAUyL,gBAAkBjM,KAAKC,MAAMgM,eACrCkB,KAAKC,UAAUzN,OAAOmF,KAAKtE,EAAU2L,oBAAsBgB,KAAKC,UAAUzN,OAAOmF,KAAK9E,KAAKC,MAAMkM,mBAClGihB,IAC5BptB,KAAKmtB,uJAKP,OAAKntB,KAAKgG,MAAMqmB,SAAYrsB,KAAKgG,MAAMsmB,cAAiBtsB,KAAKgG,MAAMumB,mBAAsBvsB,KAAKgG,MAAMwmB,sBAAyBxsB,KAAKC,MAAMkM,iBAAoBxM,OAAOmF,KAAK9E,KAAKC,MAAMkM,iBAAiBrJ,OAKlMqC,EAAA3F,EAAAC,cAAC4tB,EAAA,EAAD1tB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2F,KAAM,SACNymB,QAASrsB,KAAKgG,MAAMqmB,QACpBa,WAAYltB,KAAKC,MAAMitB,WACvBI,aAActtB,KAAKC,MAAMqtB,aACzBhB,aAActsB,KAAKgG,MAAMsmB,aACzBrgB,cAAejM,KAAKC,MAAMgM,cAC1BsgB,kBAAmBvsB,KAAKgG,MAAMumB,kBAC9BC,qBAAsBxsB,KAAKgG,MAAMwmB,qBACjCpjB,SAAWpJ,KAAKC,MAAMmJ,SAAWpJ,KAAKC,MAAMmJ,SAAWpJ,KAAKC,MAAMstB,eAd7D,YApOejtB,aAwPb8rB,0KCvPToB,6MAEJxnB,MAAQ,KAGRjC,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,mKAK9CD,KAAKkE,qBACClE,KAAKmtB,sMAGY3sB,EAAUC,+EACjCT,KAAKkE,YAECkpB,EAAuB5sB,EAAUyL,gBAAkBjM,KAAKC,MAAMgM,cAC9DwhB,EAAiBtgB,KAAKC,UAAU5M,EAAU6rB,WAAalf,KAAKC,UAAUpN,KAAKC,MAAMosB,SACjFqB,EAAsBvgB,KAAKC,UAAU5M,EAAU8rB,gBAAkBnf,KAAKC,UAAUpN,KAAKC,MAAMqsB,cAC3FqB,EAAoBntB,EAAU+rB,oBAAsBvsB,KAAKC,MAAMssB,mBAAqB/rB,EAAUgsB,uBAAyBxsB,KAAKC,MAAMusB,sBAEpIiB,GAAkBL,GAAwBM,GAAuBC,IACnE3tB,KAAKmtB,uSAMDS,EAAmB,SAAA3tB,GACvB,IAAMwF,EAAY9F,OAAOC,OACvBK,EAAMitB,WACN,CACEloB,EAAE,EACFnF,MAAM,EACNkB,MAAM,CAAC+G,OAAO,YAEf3D,EAAKlE,MAAMitB,WAAa/oB,EAAKlE,MAAMitB,WAAa,IAMnD,OAHIjtB,EAAM4tB,aACRpoB,EAAU0Q,UAAY,GAGtBhR,EAAA3F,EAAAC,cAACquB,EAAA,EAAD,CACEjmB,eAAe,EACfpC,UAAWA,GAEXN,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE/V,MAAO,EACPgB,cAAe,OAEdZ,EAAMyR,YAMTqc,EAA2B,SAAA9tB,GAAK,OAAI,MAEpC+tB,EAAa,SAAA/tB,GACjB,IAAMwF,EAAY9F,OAAOC,OAAOK,EAAMitB,WAAW,CAC/CxnB,GAAG,EACH6B,OAAO,EACP4O,UAAU,KACV3O,SAAS,aAEX,OACErC,EAAA3F,EAAAC,cAACquB,EAAA,EAAD,CACEroB,UAAWA,GAEVxF,EAAMyR,WAKP8a,EAAuBxsB,KAAKC,MAAMusB,qBAAuBxsB,KAAKC,MAAMusB,qBAAuB,SAAAvsB,GAC/F,OACEkF,EAAA3F,EAAAC,cAACmW,EAAA,EACK3V,EAAMitB,WAEV/nB,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE/V,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfsE,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACEpU,WAAY,GAEXvB,EAAM+sB,YAAYjrB,MAAMJ,UAO7B4qB,EAAoBvsB,KAAKC,MAAMssB,kBAAoBvsB,KAAKC,MAAMssB,kBAAoB,SAACtsB,GACvF,OACEkF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE/V,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfsE,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,KACG3V,EAAM0B,SAMTssB,EAAuBjuB,KAAKC,MAAMguB,qBAAuBjuB,KAAKC,MAAMguB,qBAAuB,SAAChuB,GAEhG,OAAKA,EAAM+sB,YAAYM,aAKrBnoB,EAAA3F,EAAAC,cAACmW,EAAA,EAADjW,OAAAC,OAAA,GACMK,EADN,CAEEsB,SAAU4C,EAAKlE,MAAMkI,MAAM2X,UAAU,GACrC5e,MAAOiD,EAAKlE,MAAMkI,MAAMC,OAAO2Z,UAC/BvgB,WAAY2C,EAAKlE,MAAMkI,MAAM4X,YAAY,GACzClQ,WAAY1L,EAAKlE,MAAMkI,MAAMwL,MAAMC,UACnCtS,gBAAiB6C,EAAKlE,MAAMkI,MAAMC,OAAOqL,OACzCrQ,UAAW,CAACC,IAAO6qB,YAAmC,SAAvB/pB,EAAKlE,MAAMgX,UAAqB5T,IAAOqe,KAAO,KAAMzhB,EAAM+sB,YAAYa,WAAwC,KAA3BxqB,IAAO8qB,sBAXpH,MAgBLC,EAAe,SAACnuB,GAEpB,IAAMosB,EAAUpsB,EAAM+sB,YAAYX,QAC9BgC,EAAgBpuB,EAAM+sB,aAAe/sB,EAAM+sB,YAAYjrB,OAAS9B,EAAM+sB,YAAYjrB,MAAMA,MAQ5F,OALIssB,IAAyE,IAAxDhC,EAAQ9jB,IAAK,SAAA+lB,GAAC,OAAIA,EAAEvsB,QAAQkrB,QAAQoB,IAAyBlqB,EAAKlE,MAAMqsB,eAC3F+B,EAAgBlqB,EAAKlE,MAAMqsB,aAAavqB,OAItCssB,GAAiBA,IAAkBpuB,EAAM8B,MACpC,KAIPoD,EAAA3F,EAAAC,cAACmW,EAAA,EAADjW,OAAAC,OAAA,CACE+H,GAAI,EACJD,GAAI,EACJ7H,MAAO,GACHI,EAAMitB,WAJZ,CAKEptB,WAAY,SACZe,cAAe,MACfE,MAAO,CAAC+G,OAAO,WACf/H,eAAgB,aAChBqD,UAAWC,IAAOkrB,gBAClBjtB,gBAAkBrB,EAAMuuB,UAAY,kBAAoB,aAExDrpB,EAAA3F,EAAAC,cAAC8sB,EACKtsB,cAMND,KAAK4G,SAAS,CAClBonB,aACAI,eACAR,mBACApB,uBACAyB,uBACAF,gKAIK,IAAA5f,EAAAnO,KACDstB,EAAkD,qBAA5BttB,KAAKC,MAAMqtB,cAA+BttB,KAAKC,MAAMqtB,aACjF,OACEnoB,EAAA3F,EAAAC,cAACgvB,EAAA,EAAD,CACE7oB,KAAM5F,KAAKC,MAAM2F,KACjB0nB,aAAcA,EACdjB,QAASrsB,KAAKC,MAAMosB,QACpBC,aAActsB,KAAKC,MAAMqsB,aACzBljB,SAAW,SAAAM,GAAC,OAAIyE,EAAKlO,MAAMmJ,SAASM,EAAE3H,QACtC2sB,WAAY,CACRC,KAAM3uB,KAAKgG,MAAMgoB,WACjBY,OAAQ5uB,KAAKgG,MAAMooB,aACnBS,QAAS7uB,KAAKgG,MAAM4nB,iBACpBkB,MAAO9uB,KAAKgG,MAAMioB,qBAClBc,YAAa/uB,KAAKgG,MAAMwmB,qBACxBwC,mBAAoBhvB,KAAKgG,MAAM+nB,mCAnMbztB,aA0MfktB,gDChNfxrB,EAAAC,QAAA,CAAkBC,gBAAA,6BAAAC,eAAA,4BAAAC,YAAA,yBAAAC,KAAA,kBAAAC,cAAA,8MCMZmN,6MAEJzJ,MAAQ,KAGRjC,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,2JAK9CD,KAAKkE,YACLlE,KAAKivB,iMAGkBzuB,EAAWC,2EAClCT,KAAKkE,YAECgrB,EAAc1uB,EAAUiC,OAASzC,KAAKC,MAAMwC,KAC5C0sB,EAAiB3uB,EAAUgN,UAAYxN,KAAKC,MAAMuN,SACnChN,EAAUmsB,UAAU/mB,OAAS5F,KAAKC,MAAM0sB,UAAU/mB,MACnDspB,GAAeC,IACjCnvB,KAAKivB,sQAKDtC,EAAY3sB,KAAKC,MAAM0sB,WACzB3sB,KAAKC,MAAMwC,OAAQzC,KAAKC,MAAMuN,8BACxBmf,EAAU/mB,YACX,gBAEA,gBAGA,kBAGA,gBAEA,kBAEA,mBAEA,sPAST,IAAI+P,EAAO,KACPzU,EAAQ,KACRkuB,EAAS,KACTze,EAAUxI,IAAMC,OAAOiF,aAAamX,SAASJ,QAC3CuI,EAAY3sB,KAAKC,MAAM0sB,UACvBxd,EAAcnP,KAAKC,MAAMkP,YAEzBkgB,EAAa,CACjB7tB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZL,MAAM,WACNH,MAAM,CACJkF,SAAS,OACT+B,SAAU,SACVsnB,aAAc,YAEhBpvB,UAAU,CACRH,eAAe,eAWnB,OANI4sB,EAAU1sB,OAASN,OAAOmF,KAAK6nB,EAAU1sB,OAAO6C,QAClDnD,OAAOmF,KAAK6nB,EAAU1sB,OAAO8E,QAAQ,SAAAC,GACnCqqB,EAAWrqB,GAAK2nB,EAAU1sB,MAAM+E,KAI5B2nB,EAAU/mB,MAChB,IAAK,OAKH,OAJIuJ,EAAY/D,SACdlK,EAAQiH,IAAMC,OAAOiF,aAAajC,OAAO+D,EAAY/D,OAAOC,eAAiBlD,IAAMC,OAAOiF,aAAajC,OAAO+D,EAAY/D,OAAOC,eAAiBnK,EAClJyP,EAAUxI,IAAMC,OAAOiF,aAAamX,SAASrV,EAAY/D,OAAOC,eAAiBlD,IAAMC,OAAOiF,aAAamX,SAASrV,EAAY/D,OAAOC,eAAiBsF,GAElJxB,EAAY/D,OAAOC,eACzB,IAAK,UACL,IAAK,WACL,IAAK,cACL,IAAK,kBACHsK,EAAO,gBACT,MACA,IAAK,QACHA,EAAO,aACT,MACA,IAAK,SACL,IAAK,UACL,IAAK,aACL,IAAK,iBACHA,EAAO,cACT,MACA,IAAK,OACHA,EAAO,OACT,MACA,IAAK,UACHA,EAAO,OACT,MACA,IAAK,UAEHA,EAAO,SACT,MACA,IAAK,OAGL,IAAK,UACHA,EAAO,YACT,MACA,IAAK,WACHA,EAAO,cACT,MACA,QACEA,EAAO,UAGXyZ,EACEjqB,EAAA3F,EAAAC,cAAC8vB,EAAA,EAAD5vB,OAAAC,OAAA,CACEoF,EAAG,MACH3D,aAAc,OACVguB,EAHN,CAIEvvB,WAAY,SACZwB,gBAAiBqP,EACjB5Q,eAAgB,WAEhBoF,EAAA3F,EAAAC,cAAC8vB,EAAA,EAAD,CACE3pB,KAAM+P,EACNzU,MAAOA,EACPsuB,MAAO,SACP7pB,KAAM3F,KAAKC,MAAM8H,SAAW,MAAQ,WAI5C,MACA,IAAK,OACCoH,EAAY1M,OACd2sB,EACEjqB,EAAA3F,EAAAC,cAAC8vB,EAAA,EAAD,CACElZ,OAAQ,SACRC,IAAK,+BACL0V,KAAI,2BAAA9jB,OAA6BiH,EAAY1M,OAE7C0C,EAAA3F,EAAAC,cAACgwB,EAAA,EAAD9vB,OAAAC,OAAA,CACE2B,SAAU,EACVL,MAAO,SACHmuB,EAHN,CAIE5sB,KAAM0M,EAAY1M,UAK5B,MACA,IAAK,SACH,IAAI2I,EAAS+D,EAAY/D,OACzB,OAAQ+D,EAAY/D,QAClB,IAAK,OACHA,EAAS,UACX,MACA,IAAK,UACHA,EAAS,WAKbgkB,EACEjqB,EAAA3F,EAAAC,cAAC8vB,EAAA,EAASF,EAAajkB,EAAOvC,eAElC,MACA,IAAK,OACH,IAAMwS,EAAgBlM,EAAYvC,WAAW0O,OAAO,gBACpD8T,EACEjqB,EAAA3F,EAAAC,cAAC8vB,EAAA,EAASF,EAAahU,GAE3B,MACA,IAAK,aAEH,OADAna,EAAQiH,IAAMC,OAAOiF,aAAa/G,OAAO6I,EAAY7I,OAAO+E,eACpD8D,EAAY7I,QAClB,IAAK,YACHqP,EAAO,OACT,MACA,IAAK,UACHA,EAAO,YACT,MACA,IAAK,SACHA,EAAO,eAKXyZ,EACEjqB,EAAA3F,EAAAC,cAAC8vB,EAAA,EAAD5vB,OAAAC,OAAA,CACEoF,EAAG,CAAC,EAAE,OACN3D,aAAc,OACVguB,EAHN,CAIEvvB,WAAY,SACZD,MAAO,CAAC,OAAO,QACfuB,OAAQ,CAAC,OAAO,QAChBrB,eAAgB,SAChB2vB,OAAS1vB,KAAKC,MAAM8H,SAAX,aAAAG,OAAmChH,GAAnC,aAAAgH,OAA0DhH,KAEnEiE,EAAA3F,EAAAC,cAAC8vB,EAAA,EAAD,CACE3pB,KAAM+P,EACNzU,MAAOA,EACPsuB,MAAO,SACP7pB,KAAO3F,KAAKC,MAAM8H,SAAW,MAAQ,WAI7C,MACA,IAAK,SACHqnB,EACEjqB,EAAA3F,EAAAC,cAAC8vB,EAAA,EAASF,EAAalgB,EAAY7I,QAEvC,MACA,IAAK,SACH8oB,EACEjqB,EAAA3F,EAAAC,cAACkwB,EAAA,EAADhwB,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6BhrB,OAAQ8K,EAAYzC,UAErD,MACA,IAAK,YACH0iB,EACEjqB,EAAA3F,EAAAC,cAAC8vB,EAAA,EAAD5vB,OAAAC,OAAA,CAAOqQ,IAAG,iBAAA/H,OAAmBiH,EAAYygB,YAAY/mB,cAA3C,SAAoEwmB,IAElF,MACA,IAAK,YACHD,EACEjqB,EAAA3F,EAAAC,cAAC8vB,EAAA,EAASF,EAAalgB,EAAYygB,aAMzC,OAAOR,SAvPoB9uB,aA2PhBmP,o9jBC/PTogB,mLACK,IAAAlpB,EAAA3G,KACDC,EAAQ,CACZuB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZL,MAAM,YACNO,UAAU,SACVuP,WAAW,WAIThR,KAAKC,OAASN,OAAOmF,KAAK9E,KAAKC,OAAO6C,QACxCnD,OAAOmF,KAAK9E,KAAKC,OAAO8E,QAAQ,SAAAC,GAC9B/E,EAAM+E,GAAK2B,EAAK1G,MAAM+E,KAI1B,IAAM8qB,EAAmB9vB,KAAKC,MAAM8vB,UAAY/vB,KAAKC,MAAM8vB,UAAYC,IAAQC,GAE/E,OACE/e,EAAA1R,EAAAC,cAACqwB,EACK7vB,EAEHD,KAAKC,MAAMyR,iBAvBApR,aA6BLuvB,kHC1BTK,6MACJlqB,MAAQ,CACNnG,MAAM,KACNuB,OAAO,QAGT8Q,oBAAqB,sFAGnB9C,OAAO+gB,iBAAiB,SAAUnwB,KAAKowB,uBAAuBzhB,KAAK3O,sDAInEA,KAAKkS,oBAAqB,EAC1B9C,OAAOihB,oBAAoB,SAAUrwB,KAAKowB,oEAI1CpwB,KAAKowB,oEAGY5vB,GACbA,EAAUuH,WAAa/H,KAAKC,MAAM8H,UACpC/H,KAAKowB,0EAKP,GAAIpwB,KAAKkS,mBACP,OAAO,EAGT,IAAMG,EAAQ1S,OAAA8rB,EAAA,EAAA9rB,CAAA,GAAOK,KAAKgG,OAE1B,GAAIhG,KAAKC,MAAMof,SAAS,CACtB,IAAMiR,EAAiBC,SAASC,eAAexwB,KAAKC,MAAMof,UAC1D,GAAIiR,EAAe,CACjB,IAAMG,EAAajlB,WAAW8kB,EAAeI,aAAa,EAAIJ,EAAeI,YAAc,EAEvFD,GAAcA,IAAepe,EAASxS,QACxCwS,EAASxS,MAAQ4wB,IASvB,IAJKpe,EAASxS,OAASG,KAAKC,MAAMJ,OAASG,KAAKC,MAAMJ,QAAUwS,EAASxS,QACvEwS,EAASxS,MAAQG,KAAKC,MAAMJ,OAG1BG,KAAKC,MAAMqf,eAAe,CAC5B,IAAMqR,EAAkBJ,SAASC,eAAexwB,KAAKC,MAAMqf,gBAC3D,GAAIqR,EAAgB,CAClB,IAAMja,EAAclL,WAAWmlB,EAAgBD,aAAa,EAAIC,EAAgBD,YAAc,EAC1Fha,GAAeA,IAAgBrE,EAASjR,SAC1CiR,EAASjR,OAASsV,KAKnBrE,EAASjR,QAAUpB,KAAKC,MAAMmB,QAAUpB,KAAKC,MAAMmB,SAAWiR,EAASjR,SAC1EiR,EAASjR,OAASpB,KAAKC,MAAMmB,QAG3BzB,OAAOmF,KAAKuN,GAAUvP,OAAO,GAC/B9C,KAAK4G,SAASyL,oCAKhB,IAAMue,EAAY5wB,KAAKC,MAAMsE,KAEvBnD,EAASpB,KAAKgG,MAAM5E,SAAWkD,MAAMtE,KAAKgG,MAAM5E,QAAU8M,SAASlO,KAAKgG,MAAM5E,QAAU,IACxFvB,EAAQG,KAAKgG,MAAMnG,QAAUyE,MAAMtE,KAAKgG,MAAMnG,OAASqO,SAASlO,KAAKgG,MAAMnG,OAAS,EAEtFgS,EAAalS,OAAOC,OAAO,GAAGI,KAAKC,OAOvC,QANA4R,EAAUlS,OAAA8rB,EAAA,EAAA9rB,CAAA,GACLkS,EADK,CAERzQ,SACAvB,WAGgBmW,YAAgBnE,EAAWP,MAASzR,GAAUuB,EAc5DpB,KAAKC,MAAMqR,MACbJ,EAAA1R,EAAAC,cAACmxB,EACK/e,GAfNX,EAAA1R,EAAAC,cAACoxB,EAAA,EAAD,CACE3wB,UAAW,CACTW,cAAc,MACd0N,UAAUnN,GAEZjB,YAAcH,KAAKC,MAAME,YAAcH,KAAKC,MAAME,YAAc,CAC9DwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,UAAiC8G,IAA1BlH,KAAKC,MAAM6wB,WAA2B9wB,KAAKC,MAAM6wB,WAAa,iCA7FlDxwB,aAuGZ4vB,qEC5GfluB,EAAAC,QAAA,CAAkB8uB,eAAA,sCAAAC,OAAA,8BAAAC,YAAA,mCAAAC,QAAA,+BAAAhQ,SAAA,8PCIZiQ,6MAGJptB,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,iMAGkB1D,EAAUC,mEACjCT,KAAKkE,kJAKL,IAAIuB,EAAY,CACdT,EAAE,EACFnF,MAAM,IACNuxB,YAAYpxB,KAAKC,MAAMmxB,aAGrB/wB,EAAY,CACdkB,SAAS,EACTC,WAAW,EACXC,UAAU,SACVP,MAAMlB,KAAKC,MAAMqQ,SAAW,YAAc,UAM5C,OAHA7K,EAAYzF,KAAK+D,cAAcstB,kBAAkB5rB,EAAUzF,KAAKC,MAAMwF,WACtEpF,EAAYL,KAAK+D,cAAcstB,kBAAkBhxB,EAAUL,KAAKC,MAAMI,WAGpE8E,EAAA3F,EAAAC,cAAC6xB,EAAA,EAAD,CACEzpB,eAAe,EACfpC,UAAWA,EACX6K,SAAUtQ,KAAKC,MAAMqQ,UAErBnL,EAAA3F,EAAAC,cAAC2F,EAAA,EACK/E,EAEHL,KAAKC,MAAMwmB,WAHd,aA7C0BnmB,aAuDnB6wB,kSC8pBAI,6MA7sBbvrB,MAAQ,CACN0gB,WAAW,CACT3X,OAAO,KACP9E,SAAQ,GAEVunB,WAAW,KACXC,aAAY,EACZC,eAAc,EACdC,eAAc,EACdC,gBAAe,EACfC,kBAAiB,EACjBC,oBAAoB,QAItB/tB,cAAgB,OAkDhBguB,iBAAmB,SAAC1oB,GAAyB,IAAvB2oB,IAAuB/qB,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,KAAAA,UAAA,GAErCuqB,EAAanoB,EAAEgN,OAAOtU,MAAMe,SAAWwB,MAAM+E,EAAEgN,OAAOtU,OAAS4E,EAAK5C,cAAciU,MAAM3O,EAAEgN,OAAOtU,OAAS4E,EAAK5C,cAAciU,MAAM,GACrIrR,EAAKX,MAAMwrB,aAAeA,GAC5B7qB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5B+wB,aACAM,oBALwB,OAMvB,WACGE,GAA2D,oBAAnCrrB,EAAK1G,MAAMgyB,qBACrCtrB,EAAK1G,MAAMgyB,oBAAoBtrB,EAAKX,MAAMwrB,iBAMlDU,cAAgB,WACd,GAAuC,OAAnCvrB,EAAKX,MAAM8rB,oBACb,OAAO,EAET,IAAMK,EAAqBxrB,EAAK5C,cAAciU,MAAMrR,EAAKX,MAAM8rB,qBAAqBtI,IAAI,KAClFgI,EAAa7qB,EAAK1G,MAAMmyB,eAAiBzrB,EAAK5C,cAAciU,MAAMrR,EAAK1G,MAAMmyB,cAAc9tB,QAAUqC,EAAK5C,cAAciU,MAAMrR,EAAK1G,MAAMmyB,cAAchd,MAAM+c,GAAsB,KAEzLxrB,EAAKorB,iBAAiB,CACpB1b,OAAO,CACLtU,MAAMyvB,EAAW/H,iBAKvB4I,uBAAyB,WACvB,OAAuC,OAAnC1rB,EAAKX,MAAM8rB,qBAGRnrB,EAAK5C,cAAciU,MAAMrR,EAAKX,MAAM8rB,qBAAqBtI,IAAI,QAetE8I,uBAAyB,SAACR,GACxBnrB,EAAKC,SAAS,CACZkrB,2BAIJS,oBAAsB,WAAiB,IAAhB7lB,EAAgBzF,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KACvByF,IACHA,EAAS/F,EAAKX,MAAMwrB,YAGtB,IAAMI,GADNllB,EAAS/F,EAAK5C,cAAciU,MAAMtL,IACJpI,SAAWoI,EAAO8lB,IAAI,IAAM9lB,EAAOoO,GAAGnU,EAAK1G,MAAMmyB,cAC/EzrB,EAAKC,SAAS,CACZgrB,sBAIJa,6BAAU,SAAA1L,IAAA,IAAA2L,EAAAC,EAAA,OAAAC,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cAAAkP,EAAAlP,KAAA,EAEuBpR,EAAKksB,wBAF5B,OAAA5L,EAAAnN,KA8DNnT,EAAKC,SAAS,CACZirB,kBAAiB,KAzDba,EAAkB,SAACnnB,EAAGgb,GAE1B,IAAMuM,EAAY,CAChBC,YAAa,UACbC,cAAe,eACfC,WAAY1nB,EAAKA,EAAGjF,OAAS,MAGzBmrB,EAAclmB,GAAoB,YAAdA,EAAGjF,OAEzBigB,IACFuM,EAAUG,WAAatsB,EAAK5C,cAAcmvB,oBAAoB3M,KAI5DA,GAA8B,UAArBuM,EAAUxsB,SACrBK,EAAK5C,cAAcovB,yBAAyBL,GAG9CnsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BoxB,iBAAkBJ,EAClB/K,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER3X,OAAO,KACP9E,SAAQ,OAI8B,oBAA/BtD,EAAK1G,MAAMyyB,iBAAkCjB,GACtD9qB,EAAK1G,MAAMyyB,gBAAgBnnB,IAIzBonB,EAAyB,SAACpnB,GAC9B,IAAMwD,EAASxD,EAAG6nB,gBAClBzsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER3X,eAONpI,EAAK5C,cAAcsvB,YAAY1sB,EAAK1G,MAAMiM,YAAYT,MAAM9E,EAAK1G,MAAMqzB,aAAape,QAAQwd,EAAgBC,GAE5GhsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER3X,OAAO,KACP9E,SAAQ,IAEV4nB,kBAAiB,MA3Db,wBAAA5K,EAAA1O,SAAAwO,EAAA/mB,WAoEVuzB,+BAAY,SAAAhM,IAAA,IAAAiK,EAAAgC,EAAAlhB,EAAAmhB,EAAAC,EAAAC,EAAA9B,EAAA+B,EAAAC,EAAAC,EAAAC,EAAAhyB,EAAA,OAAA6wB,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,UAEJyZ,EAAa7qB,EAAKX,MAAMwrB,WAAa7qB,EAAK5C,cAAciU,MAAMrR,EAAKX,MAAMwrB,YAAc,KAFnF,CAAA9J,EAAA3P,KAAA,eAAA2P,EAAAO,OAAA,UAID,GAJC,cAOJuL,EAAU7sB,EAAK5C,cAAciwB,qBAAqBxC,EAAW7qB,EAAK1G,MAAMiM,YAAYvH,UAIpF2N,EAAW,SAAC/G,EAAGgb,GACnB,IAAMkL,EAA4B,YAAdlmB,EAAGjF,OAGjBwsB,EAAY,CAChBG,WAAY1nB,EAAGjF,OACf0sB,cAAa,eACbiB,WAAYzC,EAAW7kB,UACvBomB,YAAapsB,EAAK1G,MAAMiM,YAAYT,OAGlC8a,IACFuM,EAAUG,WAAatsB,EAAK5C,cAAcmvB,oBAAoB3M,KAI5DA,GAA8B,UAArBuM,EAAUxsB,SACrBK,EAAK5C,cAAcovB,yBAAyBL,GAG9CnsB,EAAKC,SAAS,CACZ6qB,cACA/K,WAAY,CACV3X,OAAO,KACP9E,SAAQ,KAIRwnB,IAEF9qB,EAAKorB,iBAAiB,CACpB1b,OAAO,CACLtU,MAAM,KAER,GACF4E,EAAKC,SAAS,CACZ+qB,eAAc,IAGmB,oBAAxBhrB,EAAK1G,MAAMqS,UACpB3L,EAAK1G,MAAMqS,SAAS/G,EAAGioB,EAAQG,KAK/BF,EAAkB,SAACloB,GACvB,IAAMwD,EAASxD,EAAG6nB,gBAClBzsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER3X,eAKA2kB,EAAe/sB,EAAK1G,MAAMqzB,aAAa1tB,KAEzC+tB,EAAS,KApEHjM,EAAA3P,KAAA,GAuEqBpR,EAAKksB,uBAAsB,GAvEhD,WAuEJhB,EAvEInK,EAAA5N,OAyEYnT,EAAK1G,MAAMyxB,eAAiB/qB,EAAKX,MAAM0rB,gBAAkBG,GAzErE,CAAAnK,EAAA3P,KAAA,gBAAA2P,EAAA3P,KAAA,GA2EuBpR,EAAK5C,cAAcmwB,WAAWvtB,EAAK1G,MAAMiM,YAAYT,MAAO9E,EAAK1G,MAAMuN,QAASkmB,GA3EvG,QA2EFE,EA3EElM,EAAA5N,KA4ERqa,QAAQC,IAAI,mBAAmBR,GAC3BA,IACFD,EAAShtB,EAAK1G,MAAMo0B,2BAA2Bb,EAAQI,IA9EjDlM,EAAA3P,KAAA,iBAiFR4b,EAAShtB,EAAK1G,MAAMq0B,qBAAqBd,GAjFjC,QAoFNG,GAEAG,GAFOD,EAILF,GAFFG,WACAC,EAHOF,EAGPE,aAGIhyB,EAAQ4xB,EAAO5xB,OAAS,KAE9B4E,EAAK1G,MAAMs0B,0BAA0Bb,EAAcI,EAAYC,EAAchyB,EAAOuQ,EAAUmhB,GAE9F9sB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAERzc,SAAQ,QAIZtD,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAERzc,SAAQ,OAxGJ,yBAAAyd,EAAAnP,SAAAgP,EAAAvnB,WA8GZisB,uCAAoB,SAAAxU,IAAA,OAAAmb,EAAApzB,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClBpR,EAAKC,SAAS,CACZ8f,WAAY,CACV3X,OAAO,KACP9E,SAAQ,KAJM,wBAAA4N,EAAAU,SAAAd,EAAAzX,WAuCpBw0B,gBAAkB,WAChB7tB,EAAKwL,uFA1UDnS,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,kRAIClE,KAAKmS,gMAGY3R,EAAUC,wFACjCT,KAAKkE,YAECuwB,EAAgBj0B,EAAU4K,SAAWpL,KAAKC,MAAMmL,OAChD+jB,EAAiB3uB,EAAUgN,UAAYxN,KAAKC,MAAMuN,QAClDknB,EAAsBl0B,EAAU4xB,eAAiBpyB,KAAKC,MAAMmyB,aAC5DuC,EAAuBl0B,EAAUixB,gBAAkB1xB,KAAKgG,MAAM0rB,cAC9DkD,EAAwBp0B,EAAUq0B,iBAAmB70B,KAAKC,MAAM40B,eAChEC,EAAkB3nB,KAAKC,UAAU5M,EAAU8yB,gBAAkBnmB,KAAKC,UAAUpN,KAAKC,MAAMqzB,cACvFyB,EAAqB5nB,KAAKC,UAAU5M,EAAU0L,eAAiBiB,KAAKC,UAAUpN,KAAKC,MAAMiM,eAC3FuoB,GAAiBtF,GAAkBuF,GAAuBI,GAAmBC,GAAsBH,GAAyBD,qCACxH30B,KAAKmS,mBAGmB1R,EAAUoxB,mBAAqB7xB,KAAKgG,MAAM6rB,kBAE7B,oBAAhC7xB,KAAKC,MAAM4xB,kBACpB7xB,KAAKC,MAAM4xB,iBAAiB7xB,KAAKgG,MAAM6rB,mBAIR7xB,KAAKgG,MAAM8rB,sBAAwBrxB,EAAUqxB,qBAC9C2C,IAChCz0B,KAAKkyB,gBAGmBzxB,EAAU+wB,aAAexxB,KAAKgG,MAAMwrB,YAE5DxxB,KAAKuyB,oKAyCPvyB,KAAK4G,SAAS,CACZ+qB,eAAc,gDAIED,GAClB1xB,KAAK4G,SAAS,CACZ8qB,uOAkNiB1xB,KAAKC,MAAMyxB,eAAiB1xB,KAAKgG,MAAM0rB,yDACjD,kBAGyBxqB,IAA9BlH,KAAKC,MAAM40B,gBAAiC70B,KAAKC,MAAM40B,yDAClD,0BAGkB70B,KAAKC,MAAM+0B,aAAah1B,KAAKC,MAAMqzB,aAAa1tB,KAAK5F,KAAKC,MAAMqzB,aAAape,QAAQlV,KAAKC,MAAMqzB,aAAa2B,yDAEvGj1B,KAAK+D,cAAcmxB,mBAAmBl1B,KAAKC,MAAMiM,YAAYT,MAAMzL,KAAKC,MAAMqzB,aAAape,QAAQlV,KAAKC,MAAMuN,wBAAvIqkB,2BACCA,qCAGF,kQAIDL,EAAa,KACbM,EAAsB,cACG9xB,KAAK6yB,+BAA9BhB,SACN7xB,KAAK4G,SAAS,CACZ4qB,aACAK,mBACAC,2JAQK,IAAA3tB,EAAAnE,KAEDm1B,EAAwC,WAA7Bn1B,KAAKC,MAAMm1B,cACtBhqB,EAASpL,KAAKC,MAAMmL,OAASpL,KAAKC,MAAMmL,OAAS,UAEvD,OACElI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,UACZe,cAAe,SACfd,eAAgB,UAGdo1B,EACEjyB,EAAA1D,EAAAC,cAAC41B,EAAA,EAAD,CACE5vB,UAAW,CACTC,GAAG,GAELiQ,KAAM,aACNvV,KAAM,kGAELJ,KAAKC,MAAMuN,QAIZxN,KAAKC,MAAMiM,cAAgBlM,KAAK+D,cAAciU,MAAMhY,KAAKC,MAAMmyB,cAAc9tB,SAAWtE,KAAK+D,cAAciU,MAAMhY,KAAKC,MAAMmyB,cAActX,GAAG,GAC/I5X,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAGLG,KAAKC,MAAMq1B,SACTpyB,EAAA1D,EAAAC,cAAC41B,EAAA,EAAD11B,OAAAC,OAAA,CACE6F,UAAW,CACT7E,GAAG,IAEDZ,KAAKC,MAAMq1B,UAKnBt1B,KAAKC,MAAMs1B,OAASv1B,KAAKC,MAAMs1B,MAAMzyB,OAAO,GAC1CI,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACF2C,GAAG,CAAC,EAAE,KAGRzE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAGbb,KAAKC,MAAMs1B,MAAMhtB,IAAK,SAACitB,EAAKC,GAAN,OACpBvyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,MACf6H,IAAG,QAAAR,OAAUutB,IAEbvyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAO4vB,EAAK5qB,UAAY,WAAa4qB,EAAK7f,KAC1CzU,MAAQs0B,EAAK5qB,UAAYzG,EAAKlE,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAAY,aAGjF4qB,EAAK9R,KACHxgB,EAAA1D,EAAAC,cAAC2W,EAAA,EAAD,CACE5M,GAAI,EACJjI,SAAU,EACVL,MAAO,OACPM,WAAY,EACZwqB,KAAMwJ,EAAK9R,KACXjiB,UAAW,OACXmI,WAAY,QAEX4rB,EAAKE,aAGRxyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJjI,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QAEV+zB,EAAKE,kBAW1BxyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAGLG,KAAKgG,MAAM2rB,eAAiB3xB,KAAKC,MAAMyxB,cACrCxuB,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTiC,GAAG,EACHC,GAAG,EACHjC,GAAG,EACH3C,QAAQ,OACRjD,WAAW,SACXe,cAAc,SACdd,eAAe,WAGjBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,UACN1E,MAAO,aAETgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,4IASFyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJiwB,UAAU,EACVzsB,QAASlJ,KAAKgG,MAAM0rB,cACpB/vB,MAAK,8CACLyH,SAAW,SAAAC,GAAC,OAAIlF,EAAKyxB,oBAAoBvsB,EAAEgN,OAAOnN,cAGnDlJ,KAAKgG,MAAM2rB,eAAiB3xB,KAAKC,MAAMyxB,eAC1CxuB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6B,EAAG,EACHU,GAAI,EACJ7F,MAAO,EACPwB,aAAc,EACdvB,WAAY,SACZe,cAAe,MACfd,eAAgB,SAChBuB,gBAAiB,gBACjBouB,OAAM,aAAAxnB,OAAelI,KAAKC,MAAMkI,MAAMC,OAAO+Y,UAE7Cje,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE1B,UAAW,SACXmI,WAAY,UACZpG,QAASxD,KAAK2xB,cAAchjB,KAAK3O,OAHnC,6CAOAkD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJ7D,KAAM,MACNC,KAAM,UACN1E,MAAO,cAOdlB,KAAKgG,MAAM6rB,iBAiDV7xB,KAAKgG,MAAM0gB,WAAWzc,QACtB/G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7E,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC6mB,EAAA,EAAD,CACEsB,KAAM5nB,KAAKC,MAAM2nB,KACjBnlB,KAAMzC,KAAKgG,MAAM0gB,WAAW3X,OAC5B2c,WAAU,cAAAxjB,OAAgBkD,EAAhB,eACV6gB,kBAAmBjsB,KAAKisB,kBAAkBtd,KAAK3O,MAC/C2rB,SAAQ,GAAAzjB,OAAKlI,KAAK+D,cAAc0R,WAAWrK,GAAnC,oBAIZlI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ9E,GAAI,EACJf,MAAO,EACPgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,EACJd,WAAY,SACZe,cAAe,MACfd,eAAgBC,KAAKC,MAAM41B,oBAAsB,gBAAkB,YAGjE71B,KAAKC,MAAM41B,qBACT3yB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPoG,SAAU,MACVnG,WAAY,SACZe,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,EACZC,UAAW,OACXV,MAAO,CACLkF,SAAS,OACT+B,SAAS,SACTpG,WAAW,SACX0tB,aAAa,YAEfpuB,MAAOlB,KAAKC,MAAM41B,oBAAoB30B,MAAQlB,KAAKC,MAAM41B,oBAAoB30B,MAAQ,aAEpFlB,KAAKC,MAAM41B,oBAAoBz1B,QAMrCJ,KAAK+D,cAAciU,MAAMhY,KAAKC,MAAMmyB,cAAc9tB,SACjDpB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPoG,SAAU,MACVnG,WAAY,SACZe,cAAe,MACfd,eAAgB,YAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,EACZN,MAAO,YACPO,UAAW,QACXmI,WAAY,YACZpG,QAAU,SAAC6F,GAAD,OAAOlF,EAAKmuB,uBAAuB,MAC7CvxB,MAAO,CACLkF,SAAS,OACT+B,SAAS,SACTpG,WAAW,SACX0tB,aAAa,aAXjB,YAcYtvB,KAAK+D,cAAciU,MAAMhY,KAAKC,MAAMmyB,cAAczlB,QAAQ3M,KAAKC,MAAM8H,SAAW,EAAI,GAdhG,IAcqG/H,KAAKC,MAAMiM,YAAYT,SAMpIvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEiJ,IAAK,EACL7H,KAAM,SACNoxB,UAAU,EACVv0B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZkT,YAAa,aACbpT,gBAAiB,SACjB6U,UAAW,kBACX2f,YAAW,gBACX1sB,SAAUpJ,KAAK+xB,iBAAiBpjB,KAAK3O,MACrC0vB,OAAM,aAAAxnB,OAAelI,KAAKC,MAAMkI,MAAMC,OAAOC,SAC7CtG,MAAiC,OAA1B/B,KAAKgG,MAAMwrB,WAAsBxxB,KAAK+D,cAAciU,MAAMhY,KAAKgG,MAAMwrB,YAAY7kB,UAAY,KAEtGzJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ5F,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAKwI,IAAK,SAAAke,GAAU,OAC5BvjB,EAAA1D,EAAAC,cAAC0xB,EAAA,EAAD,CACE1K,WAAYA,EACZ/d,IAAG,YAAAR,OAAcue,GACjB2K,YAAa,kBAAIjtB,EAAKmuB,uBAAuB7L,IAC7CnW,SAAUnM,EAAK6B,MAAM8rB,sBAAwB5jB,SAASuY,QAK9DvjB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ3F,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAACyW,EAAA,EAAD,CACExS,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,IACTkB,MAAM,CACJW,cAAc,cAEhBwf,SAASlhB,KAAKgG,MAAM4rB,gBAEtBnuB,YAAazD,KAAKuzB,UAAU5kB,KAAK3O,OAEhCA,KAAKC,MAAMmL,WAnLpBpL,KAAKgG,MAAM0gB,WAAWzc,QACpB/G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7E,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC6mB,EAAA,EAAD,CACEsB,KAAM5nB,KAAKC,MAAM2nB,KACjB+D,SAAQ,uBACRlpB,KAAMzC,KAAKgG,MAAM0gB,WAAW3X,OAC5B2c,WAAU,gCACVO,kBAAmBjsB,KAAKisB,kBAAkBtd,KAAK3O,SAInDkD,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,IAGJ9B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,WACN1E,MAAO,aAETgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAEVzB,KAAKC,MAAM81B,oBAEd7yB,EAAA1D,EAAAC,cAACyW,EAAA,EAAD,CACExS,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,KAEX4D,YAAazD,KAAKyyB,QAAQ9jB,KAAK3O,OALjC,cAuJVA,KAAKC,MAAMyR,SAjVbxO,EAAA1D,EAAAC,cAAC8F,EAAA,EACKvF,KAAKC,eAxXSK,aCohCjB01B,6MAjhCbhwB,MAAQ,CACNsP,MAAM,GACNigB,MAAM,KACND,QAAQ,KACRW,YAAY,GACZzE,WAAW,KACXkE,YAAY,KACZxpB,YAAY,KACZgqB,YAAY,KACZ9D,aAAa,KACbkB,aAAa,KACb6C,cAAc,KACdlqB,cAAc,KACdmqB,iBAAiB,EACjBC,eAAe,KACfC,eAAe,KACfC,eAAe,KACfC,eAAe,KACf9E,eAAc,EACd+E,eAAe,KACftqB,gBAAgB,KAChB0oB,gBAAe,EACf6B,iBAAiB,KACjB7E,kBAAiB,EACjB8E,kBAAkB,KAClBC,kBAAkB,KAClBb,mBAAmB,KACnBF,oBAAoB,KACpBgB,sBAAqB,KAIvB9yB,cAAgB,OA4chB+yB,uBAAyB,SAAAC,GACvBpwB,EAAKC,SAAS,CACZmwB,wGA3cE/2B,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,2JAK9CD,KAAKkE,YACLlE,KAAKmS,gMAGkB3R,EAAUC,yFACjCT,KAAKkE,cAEwBzD,EAAUwL,gBAAkBjM,KAAKgG,MAAMiG,uCAE5DC,EAAclM,KAAKC,MAAM+2B,UAAU7qB,gBAAgBnM,KAAKgG,MAAMiG,eAC9DqnB,EAAepnB,EAAY+qB,kBAG3B7P,QAAQkD,IAAI,CAChBtqB,KAAKC,MAAM+0B,aAAa1B,EAAa1tB,KAAK0tB,EAAape,QAAQoe,EAAa2B,KAC5Ej1B,KAAKC,MAAM+0B,aAAah1B,KAAKgG,MAAMiG,cAAcC,EAAYgJ,QAAQhJ,EAAY+oB,cAGnFj1B,KAAK4G,SAAS,CACZsF,cACAonB,gBACA,WACAnvB,EAAK+yB,uCAGDC,EAAwB12B,EAAU61B,iBAAmBt2B,KAAKgG,MAAMswB,eAChEc,EAA0B32B,EAAUoxB,mBAAqB7xB,KAAKgG,MAAM6rB,kBACtEsF,GAAyBC,IAC3Bp3B,KAAK4G,SAAS,CACZ+vB,kBAAkB,KAClBI,yBAAwB,GACxB,WACA5yB,EAAK+yB,WAAWC,aAMMhqB,KAAKC,UAAU3M,EAAU6yB,gBAAkBnmB,KAAKC,UAAUpN,KAAKgG,MAAMstB,eAE/FtzB,KAAKiyB,2TAIiBT,iCAAW,KAE/B8D,EAAU,MAEV9D,IAAcxxB,KAAK+D,cAAciU,MAAMwZ,GAAY1W,GAAG,oBACxD0W,EAAaxxB,KAAK+D,cAAciU,MAAMwZ,QAC9BxxB,KAAKgG,MAAMswB,sBACZ,iBAmBA,4CAlBGe,EAAoBr3B,KAAK+D,cAAc4W,iBAAiB3a,KAAKgG,MAAMmwB,cAAcn2B,KAAKgG,MAAMkG,YAAYvH,UAAUsT,KAAKuZ,GACvH8F,EAAqBt3B,KAAK+D,cAAc4W,iBAAiB3a,KAAKgG,MAAMuxB,mBAAmBv3B,KAAKgG,MAAMstB,aAAa3uB,UAAUsT,KAAKuZ,GAC9HgG,EAAwBH,EAAkB7N,IAAI8N,GAC9CG,EAAgBz3B,KAAKgG,MAAM4wB,kBAAkBxhB,MAAM,OAAOA,MAAMoiB,GAEhEE,EAAmBL,EAAkBjiB,MAAMpV,KAAKgG,MAAMywB,gBACtDkB,EAAoBF,EAAcriB,MAAM,KAAKA,MAAMpV,KAAKgG,MAAM0wB,kBAC9DkB,EAAMF,EAAiB5c,GAAG,GAAK6c,EAAkBnO,IAAIkO,GAAkBtiB,MAAM,KAAOpV,KAAK+D,cAAciU,MAAM,GAGnHsd,EAAU,CACR3f,KAAK,eACLvF,UAAU,CACRlP,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDxK,KAAI,sBAAA8H,OAAuBspB,EAAW7kB,QAAQ,GAA1C,KAAAzE,OAAgDlI,KAAKgG,MAAMkG,YAAYT,MAAvE,mCAAAvD,OAA8GuvB,EAAc9qB,QAAQ,GAApI,KAAAzE,OAA0IlI,KAAKgG,MAAMstB,aAAauE,YAAlK,mDAAA3vB,OAA+N0vB,EAAIjrB,QAAQ,GAA3O,sJAIAmrB,EAAuB93B,KAAK+D,cAAciwB,qBAAqBxC,EAAWxxB,KAAKgG,MAAMkG,YAAYvH,oBAC5E3E,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAMstB,aAAa1tB,KAAK,eAAe,CAACkyB,EAAqBrO,YAAY,CAAChV,KAAKzU,KAAKC,MAAMuN,yBAA7JwqB,SACJA,EAAiBh4B,KAAK+D,cAAcS,YAAYxE,KAAK+D,cAAc4W,iBAAiBqd,EAAeh4B,KAAKgG,MAAMkG,YAAYvH,WAC1H2wB,EAAU,CACR3f,KAAK,aACLvF,UAAU,CACRlP,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDxK,KAAI,wBAAA8H,OAAyBspB,EAAW7kB,QAAQ,GAA5C,KAAAzE,OAAkDlI,KAAKgG,MAAMkG,YAAYT,MAAzE,mCAAAvD,OAAgH8vB,EAAerrB,QAAQ,GAAvI,KAAAzE,OAA6IlI,KAAKgG,MAAMstB,aAAauE,YAArK,+EAQZ73B,KAAK4G,SAAS,CACZ0uB,4JAwBiB5oB,GACnB,IAAIonB,EAAa,KACbC,EAAe,GAEnB,OADArnB,EAAS1M,KAAK+D,cAAck0B,KAAKvrB,GACzB1M,KAAKgG,MAAMswB,gBACjB,IAAK,QACHxC,EAAa,eACbC,EAAe,CAACrnB,GAClB,MACA,IAAK,WACHonB,EAAa,mBACbC,EAAe,CAACrnB,GAKpB,MAAO,CACLonB,aACAC,mEAIuBrnB,EAAOknB,GAChC,IAAIE,EAAa,KACbC,EAAe,GACXmE,EAAoBtE,EAApBsE,OAAQC,EAAYvE,EAAZuE,EAAGC,EAASxE,EAATwE,EAAG1uB,EAAMkqB,EAANlqB,EAEtB,OADAgD,EAAS1M,KAAK+D,cAAck0B,KAAKvrB,GACzB1M,KAAKgG,MAAMswB,gBACjB,IAAK,QACHxC,EAAa,8BACbC,EAAe,CAACrnB,EAAQwrB,EAAQxuB,EAAGyuB,EAAGC,GACxC,MACA,IAAK,WACHtE,EAAa,mBACbC,EAAe,CAACrnB,GAKpB,MAAO,CACLonB,aACAC,iGAImBlC,mEACrB7xB,KAAK4G,SAAS,CACZirB,6MAIuBtmB,EAAGmB,EAAOinB,8FAE/B2B,EAAU,UACNt1B,KAAKgG,MAAMswB,sBACZ,iBAWA,2CAVG+B,EAAkB9sB,EAAG+sB,WAAa/sB,EAAG+sB,UAAUC,KAAOhtB,EAAG+sB,UAAUC,KAAK9L,KAAM,SAAA2H,GAAG,OAAIA,EAAIlf,QAAQ7J,gBAAkB8C,EAAKnI,MAAMkG,YAAYgJ,QAAQ7J,eAAiB+oB,EAAIoE,OAAO/L,KAAM,SAAAgM,GAAC,OAAIA,EAAEptB,cAAcK,SAASyC,EAAKnI,MAAMstB,aAAape,QAAQwjB,QAAQ,KAAK,IAAIrtB,kBAAoB+oB,EAAIoE,OAAO/L,KAAM,SAAAgM,GAAC,OAAIA,EAAEptB,cAAcK,SAASyC,EAAKlO,MAAMuN,QAAQkrB,QAAQ,KAAK,IAAIrtB,kBAAoB+oB,EAAI9iB,KAAKjG,gBAAgB,qEAAqEA,gBAAkB,KAC9estB,EAAeN,EAAkBr4B,KAAK+D,cAAc4W,iBAAiBzM,SAASmqB,EAAgB/mB,KAAK,IAAItR,KAAKgG,MAAMkG,YAAYvH,UAAY3E,KAAK+D,cAAciU,MAAM,GACzKsd,EAAU,CACR3f,KAAK,UACLvF,UAAU,CACRlP,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDxK,KAAI,wCAAA8H,OAAyCywB,EAAahsB,QAAQ,GAA9D,KAAAzE,OAAoElI,KAAKgG,MAAMiG,cAA/E,iDAIA2sB,EAAoBrtB,EAAG+sB,WAAa/sB,EAAG+sB,UAAUC,KAAOhtB,EAAG+sB,UAAUC,KAAK9L,KAAM,SAAA2H,GAAG,OAAIA,EAAIlf,QAAQ7J,gBAAkB8C,EAAKnI,MAAMkG,YAAYgJ,QAAQ7J,gBAAkB,KACtKwtB,EAAiBD,EAAoB54B,KAAK+D,cAAc4W,iBAAiBzM,SAAS0qB,EAAkBtnB,KAAK,IAAItR,KAAKgG,MAAMkG,YAAYvH,UAAY3E,KAAK+D,cAAciU,MAAM,GACzK8gB,EAAoB94B,KAAK+D,cAAc2J,gBAAgB,CAAC,YAAY1N,KAAKgG,MAAMstB,aAAauE,cAC5FkB,EAAqBxtB,EAAG+sB,WAAa/sB,EAAG+sB,UAAUC,KAAOhtB,EAAG+sB,UAAUC,KAAK9L,KAAM,SAAA2H,GAAG,OAAKA,EAAIlf,QAAQ7J,gBAAkBytB,EAAkB5jB,QAAQ7J,eAAiB+oB,EAAIoE,OAAO/L,KAAM,SAAAgM,GAAC,OAAIA,EAAEptB,cAAcK,SAASyC,EAAKlO,MAAMuN,QAAQkrB,QAAQ,KAAK,IAAIrtB,mBAAsB,KAC3Q2tB,EAAkBD,EAAqB/4B,KAAK+D,cAAc4W,iBAAiBzM,SAAS6qB,EAAmBznB,KAAK,IAAItR,KAAKgG,MAAMkG,YAAYvH,UAAY3E,KAAK+D,cAAciU,MAAM,GAClLsd,EAAU,CACR3f,KAAK,UACLvF,UAAU,CACRlP,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDxK,KAAI,2CAAA8H,OAA4C2wB,EAAelsB,QAAQ,GAAnE,KAAAzE,OAAyElI,KAAKgG,MAAMiG,cAApF,mCAAA/D,OAAmI8wB,EAAgBrsB,QAAQ,GAA3J,KAAAzE,OAAiKlI,KAAKgG,MAAMstB,aAAauE,YAAzL,gFAOmB,EAE7B73B,KAAK4G,SAAS,CACZ0uB,UACAuB,sBAJ2B,GAK3B,WACA1oB,EAAK+oB,sTAIQC,kCACT9kB,EAAW,GAEX4mB,EAAiBj5B,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,SAAS,QACtEorB,EAAoB94B,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,SAAS1N,KAAKgG,MAAMstB,aAAauE,uBAO7FzQ,QAAQkD,IAAI,CACpBtqB,KAAK+D,cAAcm1B,2BAA2Bl5B,KAAKgG,MAAMiG,eACzDjM,KAAK+D,cAAco1B,2BAA2BF,EAAeH,GAC7D94B,KAAK+D,cAAcq1B,gBAAgBp5B,KAAKgG,MAAMiG,cAAcjM,KAAKC,MAAMuN,SACvExN,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAMstB,aAAa1tB,KAAK,iBAAiB,CAAC5F,KAAKC,MAAMuN,+CARjGipB,OACAC,OACAtE,OACA+D,OAQF9jB,EAAS6jB,YAAcl2B,KAAK+D,cAAciU,MAAM,GAChD3F,EAAS+f,aAAepyB,KAAK+D,cAAciU,MAAMoa,GACjD/f,EAAS8jB,cAAgBn2B,KAAK+D,cAAciU,MAAMme,GAClD9jB,EAASokB,eAAiBz2B,KAAK+D,cAAciU,MAAMye,GACnDpkB,EAASqkB,iBAAmB12B,KAAK+D,cAAciU,MAAM0e,QAE7C12B,KAAKgG,MAAMswB,sBACZ,kBAkBA,6CAjBHjkB,EAASqf,eAAgB,EACzBrf,EAASwiB,gBAAiB,EAC1BxiB,EAAS6jB,YAAc7jB,EAAS+f,aAChC/f,EAAS0jB,mBAAqB,uDAC9B1jB,EAASskB,kBAAoB,CAC3B0C,cAAc,CACZzzB,KAAK,MACL6F,MAAM,MACN9G,SAAS,GACT20B,WAAW,WAEbC,aAAa55B,OAAAkH,EAAA,EAAAlH,CAAA,CACX65B,aAAa,YACVx5B,KAAKgG,MAAMkG,kDAKlBmG,EAASqf,eAAgB,EACzBrf,EAASwiB,gBAAiB,EAC1BxiB,EAAS0jB,mBAAqB,GAC9B1jB,EAAS6jB,YAAcl2B,KAAK+D,cAAc4W,iBAAiBtI,EAAS8jB,cAAcn2B,KAAKgG,MAAMkG,YAAYvH,UACzG0N,EAASskB,kBAAoB,CAC3B0C,cAAc,CACZzzB,KAAK,MACL6F,MAAM,MACN9G,SAAS,GACT20B,WAAW,WAEbC,aAAa55B,OAAAkH,EAAA,EAAAlH,CAAA,CACX65B,aAAa,YACVx5B,KAAKgG,MAAMkG,+EAQlBmG,EAAS6jB,YAAY1D,IAAI,KAC3BngB,EAAS0kB,yBAA0B,GAGjCI,IACF9kB,EAASijB,QAAU,KACnBjjB,EAASwkB,sBAAuB,GAKlC72B,KAAK4G,SAASyL,EAAS,WACrBjE,EAAKqrB,6QAKDttB,EAAkBxM,OAAOmF,KAAK9E,KAAKC,MAAM+2B,UAAU7qB,iBAAiButB,OAAQ,SAACtK,EAAO3jB,GACxF,IAAMS,EAAcytB,EAAK15B,MAAM+2B,UAAU7qB,gBAAgBV,GAOzD,OANIS,EAAY0tB,SACdxK,EAAOtiB,KAAPnN,OAAAkH,EAAA,EAAAlH,CAAA,CACEoC,MAAM0J,GACHS,IAGAkjB,GACP,IAEqB,QACjBmH,EAAiBpqB,EAAgB,GACjCF,EAAgBsqB,EAAex0B,MAErC/B,KAAK4G,SAAS,CACZqF,gBACAsqB,iBACAD,eAPqB,QAQrBnqB,gVAKImJ,EAAQ,YASJ8R,QAAQkD,IAAI,CACpBtqB,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAMstB,aAAa1tB,KAAK,eACpE5F,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAMstB,aAAa1tB,KAAK,iBACpE5F,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAMstB,aAAa1tB,KAAK,sBACpE5F,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAMstB,aAAa1tB,KAAK,uBACpE5F,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAMstB,aAAa1tB,KAAK,mBAAmB,GAAG,CAAC6O,KAAKzU,KAAKC,MAAMuN,UAC3GxN,KAAKgG,MAAMmwB,cAAcrb,GAAG,GAAK9a,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAMstB,aAAa1tB,KAAK,eAAe,CAAC5F,KAAKgG,MAAMmwB,cAAc1M,YAAY,CAAChV,KAAKzU,KAAKC,MAAMuN,UAAYxN,KAAK+D,cAAciU,MAAM,YAIlN,gCAhBE6hB,OACAC,OACAvC,OACAwC,OACA1D,OACA2D,OAUIC,EAA0B,GACvBjuB,EAAI,EAAGA,EAAI+tB,EAAsB/tB,IACxCiuB,EAAwBntB,KAAK9M,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAMstB,aAAa1tB,KAAK,kBAAkB,CAACoG,sBAGxFob,QAAQkD,IAAI2P,WAApCC,SAEAC,EAAen6B,KAAK+D,cAAc4W,iBAAiB3a,KAAK+D,cAAciU,MAAM6hB,GAAa5hB,KAAKjY,KAAK+D,cAAciU,MAAM8hB,IAAgB95B,KAAKgG,MAAMkG,YAAYvH,UACpK2Q,EAAMxI,KAAK,CACTqT,MAAM,gBACNpe,MAAM/B,KAAK+D,cAAcS,YAAYgH,WAAW2uB,IAAe,IAAIn6B,KAAKgG,MAAMstB,aAAauE,cAGvFuC,EAAgBp6B,KAAK+D,cAAc4W,iBAAiB4c,EAAmBv3B,KAAKgG,MAAMstB,aAAa3uB,UACrG2Q,EAAMxI,KAAK,CACTqT,MAAM,iBACNpe,MAAM/B,KAAK+D,cAAcS,YAAYgH,WAAW4uB,IAAgB,IAAIp6B,KAAKgG,MAAMkG,YAAYT,QAGvF4uB,EAAgBr6B,KAAK+D,cAAc4W,iBAAiBkf,EAAY75B,KAAKgG,MAAMkG,YAAYvH,UAC7F2Q,EAAMxI,KAAK,CACTqT,MAAM,iBACNpe,MAAM/B,KAAK+D,cAAcS,YAAYgH,WAAW6uB,IAAgB,IAAIr6B,KAAKgG,MAAMstB,aAAauE,cAGxFyC,EAAkBt6B,KAAK+D,cAAc4W,iBAAiBmf,EAAc95B,KAAKgG,MAAMkG,YAAYvH,UACjG2Q,EAAMxI,KAAK,CACTqT,MAAM,mBACNpe,MAAM/B,KAAK+D,cAAcS,YAAYgH,WAAW8uB,IAAkB,IAAIt6B,KAAKgG,MAAMstB,aAAauE,cAG1F0C,EAAiBL,EAAgBp3B,OAAO,EAAIo3B,EAAgBR,OAAQ,SAACc,EAAQpC,GAEjF,OADAoC,EAAU1uB,KAAKkB,IAAIorB,EAAEqC,SAASD,IAE9BtsB,SAAS5B,KAAKouB,MAAM,MAAS,KAEzBC,EAAkBJ,EAAc,GAAAryB,OAAMlI,KAAK+D,cAAc8I,YAA2B,IAAf0tB,GAAqBK,MAAMtf,OAAO,wBAAvE,QAAuG,OAC7IhG,EAAMxI,KAAK,CACTqT,MAAM,mBACNpe,MAAM44B,IAGF/D,EAAoBsD,EAAgBR,OAAQ,SAAC9C,EAAkBwB,GACnE,IAAMyC,EAAkBC,EAAK/2B,cAAc4W,iBAAiByd,EAAE2C,oBAAoBD,EAAK90B,MAAMstB,aAAa3uB,UAAU6kB,IAAI4O,EAAE4C,aAE1H,OADApE,EAAoBA,EAAkB3e,KAAK4iB,IAE3C76B,KAAK+D,cAAciU,MAAM,IAE3B1C,EAAMxI,KAAK,CACTqT,MAAM,qBACNpe,MAAM/B,KAAK+D,cAAcS,YAAYoyB,EAAkBxhB,MAAM,QAAQ,IAAIpV,KAAKgG,MAAMstB,aAAauE,YAAY,WAGzG5B,EAAc,GAEdE,EAAgBn2B,KAAK+D,cAAc4W,iBAAiB3a,KAAKgG,MAAMmwB,cAAcn2B,KAAKgG,MAAMkG,YAAYvH,UACpGs2B,EAAe9E,EAAc3M,IAAI4Q,GAEjChE,EAAmBC,GAAkBr2B,KAAK+D,cAAciU,MAAMqe,EAAe,IAAIvb,GAAG,GAAK9a,KAAK+D,cAAciU,MAAMlM,KAAKkB,IAAI,EAAExB,WAAWxL,KAAK+D,cAAciU,MAAMgiB,GAAkBxQ,IAAIxpB,KAAK+D,cAAciU,MAAMqe,EAAe,KAAKjhB,MAAMpV,KAAKgG,MAAMstB,aAAa4H,kBAAoBl7B,KAAK+D,cAAciU,MAAM,GAE/SmjB,EAA8Bn7B,KAAK+D,cAAciU,MAAM,GAAGwR,IAAIxpB,KAAKgG,MAAMstB,aAAa4H,eAAe9lB,MAAMghB,GAC3GgF,EAAwBxE,EAAkBxhB,MAAM6lB,GAAc7lB,MAAM+lB,GACpE1D,EAAgB2D,EAAsBhmB,MAAM,OAU5CsiB,EAAmBvB,EAAc/gB,MAAMpV,KAAKgG,MAAMywB,gBAClDkB,EAAoBF,EAAcriB,MAAM,KAAKA,MAAMpV,KAAKgG,MAAM0wB,kBAC9DkB,EAAMF,EAAiB5c,GAAG,GAAK6c,EAAkBnO,IAAIkO,GAAkBtiB,MAAM,KAAOpV,KAAK+D,cAAciU,MAAM,GAInHie,EAAYnpB,KAAK,CACfqT,MAAM,MACNpe,MAAK,GAAAmG,OAAI0vB,EAAIjrB,QAAQ,GAAhB,KACL+oB,YAAY,wDAGdO,EAAYnpB,KAAK,CACfqT,MAAM,QACNpe,MAAK,GAAAmG,OAAI+yB,EAAa7lB,MAAM,KAAKzI,QAAQ,GAApC,KACL+oB,YAAY,qCAGdO,EAAYnpB,KAAK,CACfqT,MAAM,aACNpe,MAAK,GAAAmG,OAAIkuB,EAAJ,KACLV,YAAW,gCAAAxtB,OAAiClI,KAAKgG,MAAMstB,aAAa+H,aAAzD,uBAAAnzB,OAA2FlI,KAAKgG,MAAMstB,aAAa4H,cAAnH,yBAGPI,EAAiBt7B,KAAK+D,cAAcS,YAAYxE,KAAK+D,cAAc4W,iBAAiBqf,EAAiBh6B,KAAKgG,MAAMkG,YAAYvH,WAClIsxB,EAAYnpB,KAAK,CACfqT,MAAM,UACNpe,MAAMu5B,EAAe,IAAIt7B,KAAKgG,MAAMstB,aAAauE,YACjDnC,YAAY,wGAKd11B,KAAK4G,SAAS,CACZ0O,QACA2gB,cACAgF,eACAd,eACA9D,iBACAD,mBACAQ,oBACAW,qBACA6D,wBACAD,uKAUQ5E,GACV,IAAMtqB,EAAgBsqB,EAAex0B,MACrC/B,KAAK4G,SAAS,CACZqF,gBACAsqB,qDAIMD,GACRt2B,KAAK4G,SAAS,CACZ0vB,oDAIK,IAAAiF,EAAAv7B,KAEDw7B,EAAY,SAAAv7B,GAChB,IAAMwF,EAAS9F,OAAAkH,EAAA,EAAAlH,CAAA,CACbqF,EAAE,EACFpE,GAAG,EACHf,MAAM,OACHI,EAAMwF,WAEX,OACEvC,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACE0Y,MAAOlgB,EAAMkgB,MACb1a,UAAWA,EACXg2B,WAAY,CACVl6B,SAAS,EACTC,WAAW,GAEbk6B,iBAAkB,CAChBh2B,GAAG,EACH8D,GAAG,GAELksB,YAAaz1B,EAAMy1B,aAEnBxyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAADxD,OAAAC,OAAA,CACE8F,GAAI,EACJnE,SAAU,CAAC,EAAE,GACbL,MAAO,aACHjB,EAAMI,WAETJ,EAAM8B,SAMT45B,EAAwC,UAA9B37B,KAAKgG,MAAMswB,eACrBsF,EAA0C,aAA9B57B,KAAKgG,MAAMswB,eACvBuF,EAAwC,UAA9B77B,KAAKgG,MAAMswB,eACrBwF,EAAW97B,KAAKgG,MAAMswB,eAwG5B,OACEpzB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAGbC,KAAKgG,MAAMmG,gBAmBVjJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZC,eAAgB,UAGbC,KAAKgG,MAAMmG,gBAAgBrJ,OAU1BI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,KACVC,WAAY,UACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,GADN,iBAKAsC,EAAA1D,EAAAC,cAAC+tB,EAAA,EAAD7tB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2F,KAAM,SACN0nB,cAAc,EACdjB,QAASrsB,KAAKgG,MAAMmG,gBACpBogB,kBApKM,SAAAtsB,GACxB,IAAM0B,EAAQ1B,EAAM0B,MACduK,EAAc,CAClByJ,KAAK1V,EAAMqR,KAAKqE,MAGlB,OACEzS,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,UAEZoD,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPuK,YAAaA,EACbygB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHtB,MAAM,MACNuB,OAAO,UAIb8B,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPgrB,UAAW,CACT/mB,KAAK,YACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,mBAkIAkI,SAAUpJ,KAAKg8B,YAAYrtB,KAAK3O,MAChCssB,aAActsB,KAAKgG,MAAMuwB,eACzB/J,qBA3HS,SAAAvsB,GAE3B,IACM+sB,GAA4D,IADlD/sB,EAAM+sB,YAAYX,QACNY,QAAQhtB,EAAM+sB,YAAYjrB,OAAgB9B,EAAM+sB,YAAYjrB,MAAQ,KAEhG,IAAKirB,EACH,OAAO,KAGT,IAAMrrB,EAAQqrB,EAAYrrB,MACpBuK,EAAc,CAClByJ,KAAKqX,EAAYrX,MAGnB,OACEzS,EAAA1D,EAAAC,cAAC0D,EAAA,EAADxD,OAAAC,OAAA,CACEmB,MAAO,CACLE,KAAK,KAEPlB,eAAgB,iBACZE,EAAMitB,YAEVhqB,EAAA1D,EAAAC,cAAC0D,EAAA,EAADxD,OAAAC,OAAA,CACEoF,EAAG,EACHnF,MAAO,GACHI,EAAMitB,WAHZ,CAIEptB,WAAY,SACZe,cAAe,MACfE,MAAO,CAAC+G,OAAO,WACf/H,eAAgB,eAEhBmD,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPuK,YAAaA,EACbygB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHC,OAAO,UAIb8B,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPgrB,UAAW,CACT/mB,KAAK,YACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,uBA8EFlB,KAAKgG,MAAMkG,aAAelM,KAAKgG,MAAMkG,YAAY+vB,UAC/C/4B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,GADN,cAKAsC,EAAA1D,EAAAC,cAAC2W,EAAA,EAAD,CACE1Q,GAAI,EACJxE,MAAO,OACP0I,WAAY,OACZoiB,KAAMhsB,KAAKgG,MAAMkG,YAAY+vB,UAE7B/4B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEjC,MAAO,OACPH,MAAO,CACLkF,SAAS,OACT+B,SAAS,SACTpG,WAAW,SACX0tB,aAAa,aAGdtvB,KAAKgG,MAAMkG,YAAY+vB,YAOhCj8B,KAAKgG,MAAMiwB,YAAYnzB,OAAO,GAC5BI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,GADN,eAKAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPgB,cAAe,CAAC,SAAS,OACzBd,eAAgB,iBAGdC,KAAKgG,MAAMiwB,YAAY1tB,IAAK,SAAC2zB,EAASptB,GAAV,OAC1B5L,EAAA1D,EAAAC,cAAC+7B,EAAD77B,OAAAC,OAAA,CACE8I,IAAG,eAAAR,OAAiB4G,GACpBrJ,UAAW,CACT7E,GAAG,CAAC,EAAE,GACNO,GAAG,CAAC,EAAE2N,EAAMysB,EAAKv1B,MAAMiwB,YAAYnzB,OAAO,EAAI,EAAI,GAClDjD,MAAM,CAAC,EAAE,SAEXQ,UAAW,CACTkB,SAAS,CAAC,EAAE,KAEV26B,QAShBl8B,KAAKgG,MAAMiG,eACT/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,kBAGAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,CAAC,SAAS,OACzBd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAACqQ,EAAA,EAAD,CACEpM,YAAa,CACXJ,GAAG,EACHosB,OAAOiM,EAAU,EAAI,GAEvB97B,MAAO,CAAC,EAAE,OACVwQ,QAAS,QACTL,SAAU,kBACVjI,SAAU/H,KAAKC,MAAM8H,SAErBmI,WAAY,CACVtP,GAAG,CAAC,EAAE,GACNQ,OAAOpB,KAAKC,MAAM8H,SAAW,OAAS,QAExCuI,SAAUqrB,EACVl4B,YAAc,SAAA4F,GAAC,OAAIkyB,EAAKY,UAAU,YAEpCj5B,EAAA1D,EAAAC,cAACqQ,EAAA,EAAD,CACEpM,YAAa,CACXJ,GAAG,EACHosB,OAAOkM,EAAY,EAAI,GAEzB/7B,MAAO,CAAC,EAAE,OACVwQ,QAAS,WACTL,SAAU,oBACVjI,SAAU/H,KAAKC,MAAM8H,SAErBmI,WAAY,CACVtP,GAAG,CAAC,EAAE,GACNQ,OAAOpB,KAAKC,MAAM8H,SAAW,OAAS,QAExCuI,SAAUsrB,EACVn4B,YAAc,SAAA4F,GAAC,OAAIkyB,EAAKY,UAAU,eAEpCj5B,EAAA1D,EAAAC,cAACqQ,EAAA,EAAD,CACEpM,YAAa,CACXJ,GAAG,EACHosB,OAAOmM,EAAU,EAAI,GAEvBh8B,MAAO,CAAC,EAAE,OACVwQ,QAAS,QACTL,SAAU,mBAEVjI,SAAU/H,KAAKC,MAAM8H,SACrBmI,WAAY,CACVtP,GAAG,CAAC,EAAE,GACNQ,OAAOpB,KAAKC,MAAM8H,SAAW,OAAS,QAExCuI,SAAUurB,EACVp4B,YAAc,SAAA4F,GAAC,OAAIkyB,EAAKY,UAAU,aA0CnCR,GAAWC,EAWT57B,KAAKgG,MAAMkG,aAAelM,KAAKgG,MAAMkwB,aAAel2B,KAAKgG,MAAMstB,aAC9DpwB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPe,GAAI,CAAC,EAAE,IAEPsC,EAAA1D,EAAAC,cAAC28B,EAADz8B,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmL,OAAQ0wB,EACRvV,MAAOvmB,KAAKgG,MAAMugB,MAClBgP,MAAOv1B,KAAKgG,MAAMuvB,MAClBD,QAASt1B,KAAKgG,MAAMsvB,QACpBppB,YAAalM,KAAKgG,MAAMkG,YACxBkmB,aAAcpyB,KAAKgG,MAAMkwB,YACzB5C,aAActzB,KAAKgG,MAAMstB,aACzB5B,cAAe1xB,KAAKgG,MAAM0rB,cAC1BmD,eAAgB70B,KAAKgG,MAAM6uB,eAC3BviB,SAAUtS,KAAK62B,qBAAqBloB,KAAK3O,MACzC+1B,mBAAoB/1B,KAAKgG,MAAM+vB,mBAC/BlE,iBAAkB7xB,KAAK6xB,iBAAiBljB,KAAK3O,MAC7C61B,oBAAqB71B,KAAKgG,MAAM6vB,oBAChC5D,oBAAqBjyB,KAAKiyB,oBAAoBtjB,KAAK3O,MACnDs0B,qBAAsBt0B,KAAKs0B,qBAAqB3lB,KAAK3O,MACrDq0B,2BAA4Br0B,KAAKq0B,2BAA2B1lB,KAAK3O,QAEjEkD,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,IAGJ9B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAM,WACN1E,MAAO,WACPyE,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,UAExC7E,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTk6B,EAAO,sBAAAzzB,OACiBlI,KAAKgG,MAAMiG,cAD5B,oBAEH2vB,GAAS,6BAAA1zB,OACkBlI,KAAKgG,MAAMiG,cAD7B,sBAUzB/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ9E,GAAI,EACJf,MAAO,GAEPqD,EAAA1D,EAAAC,cAACH,EAAA,EAAD,CACEY,UAAW,CACTW,cAAc,OAEhBV,YAAa,CACXwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,KAAM,wBAIVy7B,GACF34B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ9E,GAAI,EACJf,MAAO,EACPkB,MAAO,CACLs7B,SAAS,QAEXt8B,eAAgB,iBAGZC,KAAKgG,MAAMsP,OAAUtV,KAAKgG,MAAMsP,MAAMxS,OAmBpC9C,KAAKgG,MAAMsP,MAAM/M,IAAK,SAAC2zB,EAASptB,GAAV,OACxB5L,EAAA1D,EAAAC,cAAC+7B,EAAD77B,OAAAC,OAAA,CACE8I,IAAG,SAAAR,OAAW4G,GACdrJ,UAAW,CACT5F,MAAM,CAAC,EAAE,SAEPq8B,MAxBNh5B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ9E,GAAI,EACJf,MAAO,GAEPqD,EAAA1D,EAAAC,cAACH,EAAA,EAAD,CACEY,UAAW,CACTW,cAAc,OAEhBV,YAAa,CACXwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,KAAM,yBAnU5B8C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YACPO,UAAW,UAJb,gCAzBNyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7E,cAAe,UAEfqC,EAAA1D,EAAAC,cAACH,EAAA,EAAD,CACEY,UAAW,CACTW,cAAc,OAEhBV,YAAa,CACXwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,KAAM,+BAvqBAE,mDCwQPg8B,6MA7Qbt2B,MAAQ,CACNkG,YAAY,KACZqwB,kBAAkB,KAClBC,kBAAkB,KAClBC,2BAA2B,QAI7B14B,cAAgB,OA4HhB24B,sDAAkB,SAAA3V,EAAOwV,GAAP,IAAAC,EAAAC,EAAAE,EAAA,OAAA/J,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,OACZykB,EAAoB,KAClBC,EAA6B,GACX91B,EAAK5C,cAAc2J,gBAAgB,CAAC,WAAW,YAAY,YAAY,oBAE/E3I,QAAS,SAAA0G,GACnBA,IAAU8wB,IACPC,IACHA,EAAoB/wB,GAEtBgxB,EAA2BhxB,GAAS,CAClCA,aAKAkxB,EAAYh2B,EAAK5C,cAAc2J,gBAAgB,CAAC,iBACpC6uB,IAChBE,EAA2BE,GAAa,CACtClxB,MAAMkxB,IAIVh2B,EAAKC,SAAS,CACZ21B,oBACAE,8BACA,WACA91B,EAAKi2B,gBAAgBJ,KA3BP,wBAAAvV,EAAA1O,SAAAwO,EAAA/mB,iEA+BlB48B,sDAAkB,SAAArV,EAAOiV,GAAP,OAAA5J,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAChBpR,EAAKC,SAAS,CACZ41B,sBAFc,wBAAA9U,EAAAnP,SAAAgP,EAAAvnB,iEAMlByK,KAAO,WACL,IAAM4K,EAAgB1O,EAAK5C,cAAc84B,mBACnCC,EAAkBn2B,EAAKX,MAAM+2B,aAC7BC,EAAY,CAChBL,UAAUh2B,EAAKX,MAAMu2B,kBACrBtwB,cAActF,EAAKX,MAAMw2B,kBACzBS,SAAQ,iBAAA/0B,OAAkBvB,EAAKX,MAAMu2B,kBAA7B,KAAAr0B,OAAkDvB,EAAKX,MAAMw2B,oBAEjEU,EAAaJ,GAAmBA,EAAgBK,cAAgBL,EAAgBK,cAAcH,EAAU3nB,GAAiB,KAGzF,oBAA3BynB,EAAgBM,QACzBN,EAAgBM,OAAOF,EAAW,KAAKF,GAIzCr2B,EAAK5C,cAAcovB,yBAAyB,CAC1CH,cAAe,QACfD,YAAa,YACbE,WAAU,GAAA/qB,OAAKvB,EAAKX,MAAMu2B,kBAAhB,KAAAr0B,OAAqCvB,EAAKX,MAAMw2B,iGAjLxDx8B,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,6KAMzCD,KAAKgG,MAAMu2B,mBAAsBv8B,KAAKgG,MAAMw2B,4DACxC,UAGQ,aACXO,EAAe/8B,KAAK+D,cAAc2J,gBAAgB,CAAC,WAAW,YADnD,eAEAksB,SAAWmD,EAAaM,kBAEjChoB,EAAgBrV,KAAK+D,cAAc84B,mBACnCQ,EAAkBN,EAAaM,gBAErC19B,OAAOmF,KAAKu4B,GAAiBt4B,QAAQ,SAACu4B,EAAIC,GAIxC,OAFqBD,EAAIvsB,MAAM,KAAK/C,MAAM3C,eAGxC,IAAK,KACH,IAAMmyB,EAAQ,UAAAt1B,OAbL,YAaK,KAAAA,OAAyBq1B,EAAzB,KAAAr1B,OAA8B/D,EAAK6B,MAAMu2B,kBAAzC,KAAAr0B,OAA8D/D,EAAK6B,MAAMw2B,mBAEvF,IAAKjM,SAASC,eAAegN,GAAU,CACrC,IAAMC,EAASlN,SAAS9wB,cAAc,UAChCi+B,EAAuBL,EAAgBC,GACvChrB,EAAWorB,GAAwBA,EAAqBprB,SAAWorB,EAAqBprB,SAAW,KACnGqrB,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAEtG,GAAIA,GAA8B,oBAAZA,EAMpBA,EALqB,CACnBhB,UAAUx4B,EAAK6B,MAAMu2B,kBACrBtwB,cAAc9H,EAAK6B,MAAMw2B,kBACzBS,SAAQ,iBAAA/0B,OAAkB/D,EAAK6B,MAAMu2B,kBAA7B,KAAAr0B,OAAkD/D,EAAK6B,MAAMw2B,oBAElDnnB,EAAc0nB,GAGjCzqB,GAAgC,oBAAbA,IACjBmrB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BvrB,MAIJmrB,EAAOK,OAASxrB,GAIpBmrB,EAAOjvB,GAAKgvB,EACZC,EAAOr6B,UAAP,UAAA8E,OA5CO,aA6CPu1B,EAAOxtB,IAAMqtB,EACbG,EAAOM,OAAQ,EAEXL,GAAwBA,EAAqBM,cAC/CN,EAAqBM,cAAcC,YAAYR,GAE/ClN,SAAS2N,KAAKD,YAAYR,GAGhC,MACA,IAAK,MACH,IAAMU,EAAY,cAAAj2B,OAxDT,YAwDS,KAAAA,OAA6Bq1B,GAE/C,IAAKhN,SAASC,eAAe2N,GAAc,CACzC,IAAMp9B,EAAQwvB,SAAS9wB,cAAc,QAErCsB,EAAMyN,GAAK2vB,EACXp9B,EAAMuV,IAAM,aACZvV,EAAMirB,KAAOsR,EAEb/M,SAAS2N,KAAKD,YAAYl9B,QASpCf,KAAK4G,SAAS,CACZm2B,+QAKF/8B,KAAKkE,qBACClE,KAAKo+B,gRAIL7B,EAAoB58B,OAAOmF,KAAK9E,KAAKC,MAAM+2B,UAAU7qB,iBAAiB,YAEtEnM,KAAK+D,cAAcqT,aAAazX,OAAOmF,KAAK9E,KAAKC,MAAM+2B,UAAU7qB,iBAAjE,eAAAkb,EAAA1nB,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAkF,SAAA+Q,EAAO9c,GAAP,IAAAS,EAAA,OAAA0mB,EAAApzB,EAAAoY,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,UAChF7L,EAAciC,EAAKlO,MAAM+2B,UAAU7qB,gBAAgBV,GACnC0C,EAAKpK,cAAcu6B,kBAAkBpyB,EAAYT,SACjDS,EAAY+oB,IAHoD,CAAAxM,EAAA1Q,KAAA,eAAA0Q,EAAA1Q,KAAA,EAI9E5J,EAAKlO,MAAM+0B,aAAa9oB,EAAYT,MAAMS,EAAYgJ,QAAQhJ,EAAY+oB,KAJI,wBAAAxM,EAAAlQ,SAAAgQ,EAAAvoB,SAAlF,gBAAAwY,GAAA,OAAA6O,EAAA5O,MAAAzY,KAAAiH,YAAA,WAQNjH,KAAK08B,gBAAgBH,wLAGE/7B,EAAUC,2EACjCT,KAAKkE,YAECq6B,EAAmB99B,EAAU87B,oBAAsBv8B,KAAKgG,MAAMu2B,kBAC9DiC,EAAmB/9B,EAAU+7B,oBAAsBx8B,KAAKgG,MAAMw2B,mBAC/D+B,GAAqBC,IAAqBx+B,KAAKgG,MAAMu2B,mBAAqBv8B,KAAKgG,MAAMw2B,mBACxFx8B,KAAKy+B,wJAgEA,IAAArwB,EAAApO,KAEP,OAAKA,KAAKgG,MAAMu2B,kBAKdr5B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP6F,GAAI,CAAC,EAAE,GACP5F,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,KACVC,WAAY,UACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,yBAGAsC,EAAA1D,EAAAC,cAAC2sB,EAAA,EAADzsB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8sB,aAAa,EACbO,cAAc,EACdlkB,SAAUpJ,KAAK08B,gBACfzwB,cAAejM,KAAKgG,MAAMu2B,kBAC1BpwB,gBAAiBnM,KAAKC,MAAM+2B,UAAU7qB,oBAIxCnM,KAAKgG,MAAMy2B,4BAA8Bz8B,KAAKgG,MAAMw2B,mBAClDt5B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,6BAGAsC,EAAA1D,EAAAC,cAAC2sB,EAAA,EAADzsB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8sB,aAAa,EACbO,cAAc,EACdlkB,SAAUpJ,KAAK48B,gBACf3wB,cAAejM,KAAKgG,MAAMw2B,kBAC1BrwB,gBAAiBnM,KAAKgG,MAAMy2B,+BAIpCv5B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPE,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE8F,GAAI,EACJ3F,GAAI,CAAC,EAAG,GACRqC,KAAM,SACNtE,aAAc,EACdkI,UAAW,OACX/F,QAAU,SAAA6F,GAAC,OAAI+E,EAAK3D,KAAKpB,IACzB6X,UAAYlhB,KAAKgG,MAAMu2B,oBAAsBv8B,KAAKgG,MAAMw2B,mBAP1D,kBAxDC,YArMWl8B,2HCmOTo+B,6MAhOb14B,MAAQ,CACNwvB,KAAK,EACLD,MAAM,CACJoJ,EAAE,YACFC,EAAE,aACFC,EAAE,aAEJ50B,SAAQ,EACR60B,YAAY,GACZC,YAAY,GACZC,cAAc,KACd/yB,cAAc,SAIhBlI,cAAgB,OAwBhBk7B,aAAe,SAAC51B,GACd,IAAMy1B,EAAcz1B,EAAEgN,OAAOtU,MAAMe,SAAWwB,MAAM+E,EAAEgN,OAAOtU,OAASsH,EAAEgN,OAAOtU,MAAQ,GACvF4E,EAAKC,SAAS,CACZk4B,mBAIJI,aAAe,SAAC71B,GAEd,IAAM01B,EAAc11B,EAAEgN,OAAOtU,MAAMe,SAAWwB,MAAM+E,EAAEgN,OAAOtU,OAASsH,EAAEgN,OAAOtU,MAAQ,GACvF4E,EAAKC,SAAS,CACZm4B,4FAhCE/+B,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,iMAGkB1D,EAAUC,mEACjCT,KAAKkE,qMAGmB+H,mEACxBjM,KAAK4G,SAAS,CACZqF,+QAqBFjM,KAAK4G,SAAS,CACZqD,SAAQ,aAGgBjK,KAAK+D,cAAco7B,YAAnB,uCAAAj3B,OAAsElI,KAAKgG,MAAM84B,YAAjF,KAAA52B,OAAgGlI,KAAKgG,MAAMiG,cAA3G,KAAA/D,OAA4HlI,KAAKgG,MAAM+4B,YAAvI,0DAAtBC,SAEE3sB,EAAW,CACfpI,SAAQ,GAGN+0B,IACF3sB,EAAS2sB,cAAgBA,EAAc1tB,MAGzCtR,KAAK4G,SAAS,CACZo4B,qJAIK,IAAA76B,EAAAnE,KAEP,OACEkD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP6F,GAAI,CAAC,EAAE,GACP5F,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,EACJf,MAAO,CAAC,EAAE,KACVgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,EACJf,MAAO,EACPgB,cAAe,MACfd,eAAgB,iBAGdJ,OAAOmF,KAAK9E,KAAKgG,MAAMuvB,OAAOhtB,IAAK,SAAAktB,GAAS,OAC1CvyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEpC,MAAO,CACLC,UAAU,IACVC,KAAK,UACLm+B,eAAe,OACft3B,OAAO3D,EAAK6B,MAAMwvB,MAAMC,EAAY,UAAY,WAElDl0B,SAAU,EACVE,UAAW,SACXiH,IAAG,QAAAR,OAAUutB,GACbv0B,MAAQiD,EAAK6B,MAAMwvB,MAAMC,EAAY,OAAS,WAC9C7rB,WAAazF,EAAK6B,MAAMwvB,MAAMC,EAAY,OAAS,WACnD4J,YAAcl7B,EAAK6B,MAAMwvB,MAAMC,EAAY,OAAS,YAEnDtxB,EAAK6B,MAAMuvB,MAAME,OAK1BvyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEpC,MAAO,CACLlB,MAAM,OACNuB,OAAO,QAETW,MAAQ,EAAEpC,OAAOmF,KAAK9E,KAAKgG,MAAMuvB,OAAOzyB,OAAQ9C,KAAKgG,MAAMwvB,SAIjEtyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,KACVC,WAAY,UACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,GADN,iBAIAsC,EAAA1D,EAAAC,cAAC2sB,EAAA,EAADzsB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8sB,aAAa,EACb9gB,cAAejM,KAAKgG,MAAMiG,cAC1B7C,SAAUpJ,KAAKs/B,oBAAoB3wB,KAAK3O,MACxCmM,gBAAiBnM,KAAKC,MAAM+2B,UAAU7qB,oBAG1CjJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,GADN,kCAKAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEiJ,IAAK,EACLvM,MAAO,OACP0E,KAAM,SACNoxB,UAAU,EACVv0B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZ2U,UAAW,kBACXpU,MAAO/B,KAAKgG,MAAM84B,YAClB11B,SAAUpJ,KAAKi/B,aAAatwB,KAAK3O,MACjC0vB,OAAM,aAAAxnB,OAAelI,KAAKC,MAAMkI,MAAMC,OAAOC,SAC7CytB,YAAW,UAAA5tB,OAAYlI,KAAKgG,MAAMiG,cAAcpD,cAArC,cAGf3F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,GADN,sBAKAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEiJ,IAAK,EACLvM,MAAO,OACP0E,KAAM,SACNoxB,UAAU,EACVv0B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZ2U,UAAW,kBACXpU,MAAO/B,KAAKgG,MAAM+4B,YAClBjJ,YAAa,0BACb1sB,SAAUpJ,KAAKk/B,aAAavwB,KAAK3O,MACjC0vB,OAAM,aAAAxnB,OAAelI,KAAKC,MAAMkI,MAAMC,OAAOC,YAGjDnF,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPE,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC8D,EAAA,EAAD,CACEG,YAAa,CACXuF,GAAG,EACH3F,GAAG,CAAC,EAAG,GACPqC,KAAK,SACLtE,aAAa,EACbkI,UAAU,OACV2X,UAAWlhB,KAAKgG,MAAM84B,cAAgB9+B,KAAKgG,MAAMiG,gBAAkBjM,KAAKgG,MAAM+4B,aAEhFl7B,WAAY,YACZF,UAAW3D,KAAKgG,MAAMiE,QACtBxG,YAAc,SAAA4F,GAAC,OAAIlF,EAAKo7B,SAASl2B,gBAzNrB/I,mDCkZXk/B,6MA7Ybx5B,MAAQ,CACNoF,OAAO,KACPkqB,QAAQ,KACRmK,YAAY,KACZvzB,YAAY,KACZwzB,aAAa,KACbtN,aAAa,KACbkB,aAAa,KACbrnB,cAAc,KACd4oB,gBAAe,EACfkB,mBAAmB,KACnBgB,yBAAwB,KAI1BhzB,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,YACLlE,KAAKmS,gMAGkB3R,EAAUC,6EACjCT,KAAKkE,YAECuwB,EAAiBh0B,EAAU2K,SAAWpL,KAAKgG,MAAMoF,QAAYpL,KAAKC,MAAMmL,SAAW5K,EAAU4K,OAC7Fu0B,EAAuBxyB,KAAKC,UAAUpN,KAAKC,MAAMo5B,iBAAmBlsB,KAAKC,UAAU5M,EAAU64B,eAC7FuG,EAAsBzyB,KAAKC,UAAUpN,KAAKC,MAAMs5B,gBAAkBpsB,KAAKC,UAAU5M,EAAU+4B,eAC7F9E,GAAiBkL,GAAwBC,IAC3C5/B,KAAKmS,wQAKD/G,EAASpL,KAAKC,MAAMmL,QAAUpL,KAAKgG,MAAMoF,QAAU,OACzDpL,KAAK4G,SAAS,CACZwE,UACA,WACAjH,EAAK07B,cACL17B,EAAK27B,uMAIaxM,4EAEfA,4CACI,UAGLlB,EAAe,UACXkB,EAAa1tB,YACd,+CACkB5F,KAAK+D,cAAcg8B,cAAc//B,KAAKC,MAAMuN,uBAAjE4kB,uDAIMpyB,KAAKC,MAAM+0B,aAAa1B,EAAa1tB,KAAK0tB,EAAape,QAAQoe,EAAa2B,8BAC7Dj1B,KAAK+D,cAAcq1B,gBAAgB9F,EAAa1tB,KAAK5F,KAAKC,MAAMuN,wBAArF4kB,6CAIJA,EAAeA,GAAgBpyB,KAAK+D,cAAciU,MAAM,qBAEjDoa,sQAKFpyB,KAAKC,MAAM+2B,UAAUqC,eAAkBr5B,KAAKC,MAAM+2B,UAAUuC,uDACxD,0BAOCnS,QAAQkD,IAAI,CACpBtqB,KAAKo5B,gBAAgBp5B,KAAKC,MAAM+2B,UAAUuC,cAC1Cv5B,KAAKo5B,gBAAgBp5B,KAAKC,MAAM+2B,UAAUqC,oDAJ1CoG,OACAC,OAMItN,EAAqC,SAAtBpyB,KAAKgG,MAAMoF,OAAoBs0B,EAAeD,EAGnEz/B,KAAK4G,SAAS,CACZ64B,cACAC,eACAtN,+JAIc,IAAAjkB,EAAAnO,KACZs1B,EAAU,KACVppB,EAAc,KACdkmB,EAAe,KACfnmB,EAAgB,KAChB4oB,GAAiB,EACjBkB,EAAqB,KAEzB,OAAQ/1B,KAAKgG,MAAMoF,QACjB,IAAK,OACHypB,GAAiB,EACjBzC,EAAepyB,KAAKgG,MAAM05B,aAC1BxzB,EAAclM,KAAKC,MAAM+2B,UAAUqC,cACnCptB,EAAgBjM,KAAKC,MAAM+2B,UAAUqC,cAAczzB,KACnDmwB,EAAkB,eAAA7tB,OAAkBlI,KAAKC,MAAM+2B,UAAUuC,aAAa3zB,KAApD,iDAClB0vB,EAAU,CACR3f,KAAK,eAILvV,KAAI,aAAA8H,OAAclI,KAAKC,MAAM+2B,UAAUqC,cAAczzB,KAAjD,aAAAsC,OAAiElI,KAAKC,MAAM+2B,UAAUuC,aAAa3zB,OAE3G,MACA,IAAK,SACHqG,EAAgBjM,KAAKC,MAAM+2B,UAAUuC,aAAa3zB,KAClDivB,GAAiB,EACjBzC,EAAepyB,KAAKgG,MAAMy5B,YAC1BvzB,EAAclM,KAAKC,MAAM+2B,UAAUuC,aACnCxD,EAAkB,oBAAA7tB,OAAuBlI,KAAKC,MAAM+2B,UAAUqC,cAAczzB,KAA1D,iDAClB0vB,EAAU,CACR3f,KAAK,aAILvV,KAAI,eAAA8H,OAAgBlI,KAAKC,MAAM+2B,UAAUuC,aAAa3zB,KAAlD,kBAAAsC,OAAuElI,KAAKC,MAAM+2B,UAAUqC,cAAczzB,OAOpH5F,KAAK4G,SAAS,CACZ0uB,UACAppB,cACAkmB,eACAnmB,gBACA4oB,iBACAkB,sBACA,WACA5nB,EAAK0xB,kDAICz0B,GACRpL,KAAK4G,SAAS,CACZwE,wDAIiBG,EAAGmB,EAAOinB,GAAO,IAAAvlB,EAAApO,KAChCs1B,EAAU,KAEd,OAAQt1B,KAAKgG,MAAMoF,QACjB,IAAK,OACH,IAAM40B,EAAUz0B,EAAG+sB,WAAa/sB,EAAG+sB,UAAUC,KAAOhtB,EAAG+sB,UAAUC,KAAK9L,KAAM,SAAA2H,GAAG,OAAIA,EAAIlf,QAAQ7J,gBAAkB+C,EAAKnO,MAAM+2B,UAAUuC,aAAarkB,QAAQ7J,gBAAkB,KACzK40B,EAAeD,EAAU9xB,SAAS8xB,EAAQ1uB,KAAK,IAAM5E,EACzDuzB,EAAejgC,KAAK+D,cAAc4W,iBAAiBslB,EAAajgC,KAAKgG,MAAMkG,YAAYvH,UACvF2wB,EAAU,CACR3f,KAAK,UACLvF,UAAU,CACRlP,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDxK,KAAI,6BAAA8H,OAA8B+3B,EAAatzB,QAAQ,GAAnD,KAAAzE,OAAyDlI,KAAKC,MAAM+2B,UAAUuC,aAAa3zB,KAA3F,cAER,MACA,IAAK,SACH,IAAMs6B,EAAc30B,EAAG+sB,WAAa/sB,EAAG+sB,UAAUC,KAAOhtB,EAAG+sB,UAAUC,KAAK9L,KAAM,SAAA2H,GAAG,OAAIA,EAAIlf,QAAQ7J,gBAAkB+C,EAAKnO,MAAM+2B,UAAUuC,aAAarkB,QAAQ7J,gBAAkB,KAC7K80B,EAAkBD,EAAchyB,SAASgyB,EAAY5uB,KAAK,IAAM5E,EACpEyzB,EAAkBngC,KAAK+D,cAAc4W,iBAAiBwlB,EAAgBngC,KAAKgG,MAAMkG,YAAYvH,UAC7F2wB,EAAU,CACR3f,KAAK,UACLvF,UAAU,CACRlP,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDxK,KAAI,6BAAA8H,OAA8Bi4B,EAAgBxzB,QAAQ,GAAtD,KAAAzE,OAA4DlI,KAAKC,MAAM+2B,UAAUqC,cAAczzB,KAA/F,cAQV5F,KAAK6/B,cAEL7/B,KAAK4G,SAAS,CACZ0uB,yDAIiB5oB,GACnB,IAAMinB,EAAS,GACf,OAAQ3zB,KAAKgG,MAAMoF,QACjB,IAAK,OACHuoB,EAAO5xB,MAAQ2K,EACfinB,EAAOI,aAAe,GACtBJ,EAAOG,WAAa9zB,KAAKC,MAAM+2B,UAAUqC,cAAcC,WACzD,MACA,IAAK,SACH3F,EAAO5xB,MAAQ,KACf4xB,EAAOI,aAAe,CAACrnB,GACvBinB,EAAOG,WAAa9zB,KAAKC,MAAM+2B,UAAUuC,aAAaC,aAK1D,OAAO7F,mCAGA,IAAAgG,EAAA35B,KAEDogC,IAAcpgC,KAAKC,MAAMmgC,UAE/B,OACEl9B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,SAChB2F,GAAI,CAAC,EAAE06B,EAAY,EAAI,IAEvBl9B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,UACZe,cAAe,SACfd,eAAgB,SAChBF,MAAO,CAAC,EAAEugC,EAAY,EAAI,MAGvBpgC,KAAKC,MAAMuN,QAoCVtK,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,IAGJG,KAAKC,MAAMmL,QACVlI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,GADN,sBAKAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAAC4gC,EAAA,EAAD1gC,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwF,UAAW,CACTkC,GAAG,EACHD,GAAG,EACH7H,MAAM,KAERO,KAAM,OACNkgC,UAAW,UACX3qB,KAAM,gBACN4qB,YAAa,UACbjwB,SAAiC,SAAtBtQ,KAAKgG,MAAMoF,OACtB3H,YAAc,SAAA4F,GAAC,OAAIswB,EAAKwC,UAAU,YAEpCj5B,EAAA1D,EAAAC,cAAC4gC,EAAA,EAAD1gC,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwF,UAAW,CACTkC,GAAG,EACHD,GAAG,EACH7H,MAAM,KAERO,KAAM,SACNkgC,UAAW,SACX3qB,KAAM,cACN4qB,YAAa,UACbjwB,SAAiC,WAAtBtQ,KAAKgG,MAAMoF,OACtB3H,YAAc,SAAA4F,GAAC,OAAIswB,EAAKwC,UAAU,gBAO5Cj5B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPoJ,GAAIm3B,EAAY,EAAI,GAGQ,OAA1BpgC,KAAKgG,MAAMosB,aACTlvB,EAAA1D,EAAAC,cAAC28B,EAADz8B,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE40B,gBAAgB,EAChBzpB,OAAQpL,KAAKgG,MAAMoF,OACnBkqB,QAASt1B,KAAKgG,MAAMsvB,QACpBppB,YAAalM,KAAKgG,MAAMkG,YACxBkmB,aAAcpyB,KAAKgG,MAAMosB,aACzBkB,aAActzB,KAAKC,MAAM+2B,UAAUuC,aACnCjnB,SAAUtS,KAAK62B,qBAAqBloB,KAAK3O,MACzC+1B,mBAAoB/1B,KAAKgG,MAAM+vB,mBAE/BzB,qBAAsBt0B,KAAKs0B,qBAAqB3lB,KAAK3O,QAErDkD,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,IAGJ9B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,WACN1E,MAAO,aAETgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,sBAMsBzB,KAAKgG,MAAMiG,cANjC,OAMoDjM,KAAKgG,MAAMoF,OAN/D,uBAYNlI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAACH,EAAA,EAAD,CACEY,UAAW,CACTW,cAAc,OAEhBV,YAAa,CACXwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,KAAM,0BAjJlB8C,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFU,GAAG,IAGLxC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,QACtCnC,KAAM,QACN1E,MAAO,aAETgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,CAAC,EAAE,GACPnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQAyB,EAAA1D,EAAAC,cAACyW,EAAA,EAAD,CACExS,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,KAEX4D,YAAazD,KAAKC,MAAM6F,2BAL1B,sBAtQSxF,mFC8GZkgC,8MAhHbx6B,MAAQ,KAGRjC,cAAgB,OAChBmO,oBAAqB,6EAGflS,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,8JAK9CD,KAAKkS,oBAAqB,yPAI1BlS,KAAKkE,gbAOkB1D,EAAWC,mEAClCT,KAAKkE,kJAGC,IAAAC,EAAAnE,KACA2sB,EAAY3sB,KAAKC,MAAM0sB,UAEvB0C,EAAa,CACjB7tB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZL,MAAM,WACNhB,UAAU,CACRH,eAAe,eAKf4sB,EAAU1sB,OAASN,OAAOmF,KAAK6nB,EAAU1sB,OAAO6C,QAClDnD,OAAOmF,KAAK6nB,EAAU1sB,OAAO8E,QAAQ,SAAAC,GACnCqqB,EAAWrqB,GAAK2nB,EAAU1sB,MAAM+E,KAKhC2nB,EAAU8T,WAAa9gC,OAAOmF,KAAK6nB,EAAU8T,WAAW39B,QAC1DnD,OAAOmF,KAAK6nB,EAAU8T,WAAW17B,QAAQ,SAAAC,GACH,oBAAzB2nB,EAAU8T,UAAUz7B,KAC7BqqB,EAAWrqB,GAAK2nB,EAAU8T,UAAUz7B,GAAGb,EAAKlE,UAKlD,IAAIygC,EAAkB,KAClBC,GAAuB,EACrBC,EAAYjU,EAAUpoB,KACtBs8B,EAAYlU,EAAUmU,KACxBC,EAAcF,EAAY7gC,KAAK+D,cAAci9B,aAAaH,EAAU7gC,KAAKC,MAAMghC,KAAO,KAE1F,OAAQL,GACN,IAAK,QACHF,EAAkBQ,IAClB7R,EAAWpf,IAAM8wB,EACnB,MACA,IAAK,SACHA,EAAc/gC,KAAK+D,cAAciU,MAAM+oB,GAAatX,WACpDiX,EAAkB58B,KAClBurB,EAAWhrB,OAAS08B,EACtB,MACA,IAAK,OACHL,EAAkBS,IAClB9R,EAAWzpB,KAAOm7B,EACpB,MACA,IAAK,SACHL,EAAkBU,IAClBT,GAAuB,EACvBI,EAAcpU,EAAUhrB,MACxB0tB,EAAW7rB,QAAQ,kBAAM6rB,EAAW5rB,YAAYU,EAAKlE,QACvD,MACA,QACEygC,EAAkBp3B,IAClBq3B,GAAuB,EAI3B,IAAKI,EACH,OAAO,KAIT,GAAIF,EAAU,CACZ,IAAMQ,EAAkB1hC,OAAO8J,OAAOo3B,GAAW7yB,MACjD,GAAIhO,KAAKC,MAAMghC,IAAX,GAAA/4B,OAAkBm5B,EAAlB,UAA0C,CAC5C,IAAMC,EAAmBthC,KAAKC,MAAMghC,IAAX,GAAA/4B,OAAkBm5B,EAAlB,UAErBC,GAAoB3hC,OAAOmF,KAAKw8B,GAAkBx+B,QACpDnD,OAAOmF,KAAKw8B,GAAkBv8B,QAAQ,SAAAC,GACpCqqB,EAAWrqB,GAAKs8B,EAAiBt8B,MAMzC,OAAO07B,EAAmBC,EAAwBz9B,EAAA1D,EAAAC,cAACihC,EAAoBrR,EAAa0R,GAAmC79B,EAAA1D,EAAAC,cAACihC,EAAoBrR,GAAoB,YA9G1I/uB,uBCuDXihC,8MAnDbv7B,MAAQ,KAGRjC,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,2JAK9CD,KAAKkE,iMAGkB1D,EAAWC,mEAClCT,KAAKkE,kJAGE,IAAAC,EAAAnE,KAEP,OACEkD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqL,GAAG,wBAAwB3O,MAAO,EAAGgB,cAAe,UACxDqC,EAAA1D,EAAAC,cAACmP,GAAA,EAADjP,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4O,KAAM7O,KAAKC,MAAM4O,KACjB9G,SAAU/H,KAAKC,MAAM8H,YAEvB7E,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqL,GAAG,cAAc3N,cAAe,UAElCb,KAAKC,MAAMuhC,KAAKj5B,IAAK,SAAC04B,EAAIQ,GACxB,OACEv+B,EAAA1D,EAAAC,cAACwP,GAAA,EAADtP,OAAAC,OAAA,CACEqhC,IAAKA,GACD98B,EAAKlE,MAFX,CAGEyI,IAAG,SAAAR,OAAWu5B,GACdjyB,eAAgBgxB,GAChBlxB,MAAK,aAAApH,OAAeu5B,GACpBlyB,OAAM,cAAArH,OAAgBu5B,iBA1CfnhC,2CC+RVohC,8MA5Rb17B,MAAQ,CACN4L,UAAU,KACV+vB,WAAW,KACXC,YAAY,KACZ31B,cAAc,KACd41B,oBAAoB,QAItB99B,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,oDAK9CD,KAAKkE,gNAQLlE,KAAK8hC,qMAGkBthC,EAAWC,mEAClCT,KAAKkE,6RAKC69B,EAAY,GACdJ,EAAa3hC,KAAK+D,cAAciU,MAAM,GACpCwB,EAAyC,SAAhCxZ,KAAKC,MAAMwZ,0BAEpBzZ,KAAK+D,cAAcqT,aAAazX,OAAOmF,KAAK9E,KAAKC,MAAMkM,iBAAvD,eAAAkL,EAAA1X,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAwE,SAAAC,EAAOhM,GAAP,IAAAS,EAAA8N,EAAA3B,EAAA+Z,EAAA,OAAAQ,EAAApzB,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtE7L,EAAc/H,EAAKlE,MAAMkM,gBAAgBV,GAD6BoM,EAAAE,KAAA,EAE7C5T,EAAKJ,cAAcq1B,gBAAgBltB,EAAY81B,KAAKv2B,MAAMtH,EAAKlE,MAAMuN,SAFxB,YAEtEwM,EAFsEnC,EAAAiC,MAAA,CAAAjC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKjD5T,EAAKJ,cAAck+B,kBAAkB/1B,GALY,cAKpEmM,EALoER,EAAAiC,KAAAjC,EAAAE,KAAA,GAM/C5T,EAAKJ,cAAcm+B,oBAAoBloB,EAAiB5E,MAAMiD,GAAY5M,EAAMS,EAAYsN,GAN7C,SAMpE4Y,EANoEva,EAAAiC,MAQzDgB,GAAG,KAClBinB,EAAUt2B,GAAS2mB,EAGnBuP,EAAaA,EAAW1pB,KAAKma,IAZ2C,yBAAAva,EAAAU,SAAAd,EAAAzX,SAAxE,gBAAAwY,GAAA,OAAAnB,EAAAoB,MAAAzY,KAAAiH,YAAA,2BAkB8BjH,KAAK+D,cAAco+B,yBAAyBniC,KAAKC,MAAMuN,QAAQxN,KAAKC,MAAMkM,gBAAgB,MAAM,MAAK,WAAnIi2B,WAEJziC,OAAOmF,KAAKs9B,GAAuBr9B,QAAS,SAAAs9B,GAC1C,IAAMC,EAAkBn+B,EAAKJ,cAAciU,MAAMoqB,EAAsBC,IACvEN,EAAUM,GAAYC,EACtBX,EAAaA,EAAW1pB,KAAKqqB,KAI3B1wB,EAAY,GAElBjS,OAAOmF,KAAKi9B,GAAWh9B,QAAQ,SAAA0G,GAC7B,IAAM2mB,EAAe2P,EAAUt2B,GAC/B,GAAI2mB,EAAatX,GAAG,GAAG,CACrB,IAAMynB,EAAkBnQ,EAAa5I,IAAImY,GAAYvsB,MAAM,KACvDotB,EAAgBr+B,EAAKJ,cAAc2J,gBAAgB,CAAC,QAAQ,SAASjC,EAAM5C,cAAc,QAAQ,QACrG25B,EAAgBA,EAAgBA,EAAchtB,KAAK,KAAO,UAC1D5D,EAAU9E,KAAK,CACb0B,GAAG/C,EACH9J,MAAM8J,EAAM7I,OAAO,EAAE,GAAGiG,cAAc4C,EAAM7I,OAAO,GACnDb,MAAM+J,KAAK22B,MAAMF,GACjBrhC,MAAM,OAAOshC,EAAc,SAKjCxiC,KAAK4G,SAAS,CACZm7B,YACAnwB,YACA+vB,mJAIK,IAAAxzB,EAAAnO,KAED6R,EAAa,CACjBW,SAAS,EACTC,SAAQ,EACRC,YAAY,EACZC,aAAa,EACbE,YAAY,IACZD,cAAc,GACdE,gBAAgB,GAChB1K,OAAO,SAAA2K,GAAC,OAAIA,EAAE7R,OACdgS,cAAe,SAAAxJ,GAAC,OAAIA,EAAE,KACtByJ,WAAY,SAAAJ,GACV,OAAIvH,WAAWuH,EAAEhR,QAAQ,EAChBgR,EAAEhR,MAAM,IAER,MAGXqR,YAAa,SAAAL,GACX,OAAO,MAET5K,MAAM,CACJkL,QAAS,CACPC,UAAW,CACTvQ,QAAS,SAGb2Q,OAAO,CACLtT,KAAK,CACHmB,SAAS,GACTC,WAAW,IACXqO,WAAY1H,KAAMwL,MAAMC,YAG5BC,QAAQ,CACNzT,KAAK,CACHmB,SAAS,GACTC,WAAW,IACXqO,WAAY1H,KAAMwL,MAAMC,aAI9BE,sBAAsB,EACtBI,sBAAsB,OACtBE,4BAA4B,EAC5BD,sBAAsB,OACtBJ,sBAAsB,GACtBE,wBAAwB,EACxByuB,wBAAwBx0B,SAAgC,GAAvBlO,KAAKgG,MAAM47B,aAC5CvtB,+BAA+B,EAC/BC,iCAAiC,EACjCE,sBAAsB,CAAEC,KAAM,SAC9BG,OAAQ5U,KAAKC,MAAM8H,SAAW,CAAET,IAAK,GAAIsJ,MAAO,GAAIiE,OAAQ,GAAIxD,KAAM,IAAO,CAAE/J,IAAK,GAAIsJ,MAAO,GAAIiE,OAAQ,GAAIxD,KAAM,IACrH2B,aAAa,SAAC1B,EAAMjI,GAClB,IAAM4C,EAAgBqF,EAAK9C,GACrBqzB,EAAsB51B,EAAgBkC,EAAKlO,MAAMkM,gBAAgBF,IAAkBkC,EAAKpK,cAAc2J,gBAAgB,CAAC,QAAQ,SAASzB,IAAkB,KAChKkC,EAAKvH,SAAS,CACZqF,gBACA41B,yBAGJ5uB,aAAa,SAAC3B,EAAMjI,GAClB8E,EAAKvH,SAAS,CACZqF,cAAc,KACd41B,oBAAoB,QAGxBhuB,QAAQ,CACN,CACE8uB,UAAW,GACXC,WAAY,GACZC,WAAY7iC,KAAKC,MAAM8H,SAAW,GAAK,GACvC+6B,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXC,cAAe96B,KAAMC,OAAOwU,OAC5BsmB,YAAa,SACbC,QAAS,CACP,CACEC,GAAI,QACJriC,MAAO,CACLkiC,cAAe,aAQrBh3B,IAA6C,OAA7BjM,KAAKgG,MAAMiG,gBAA0BjM,KAAKgG,MAAM+7B,UAAU/hC,KAAKgG,MAAMiG,iBAAiBjM,KAAKgG,MAAM+7B,UAAU/hC,KAAKgG,MAAMiG,eACtIo3B,EAAerjC,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa1N,KAAKC,MAAMwZ,iBAAiB,SAC5F6pB,IAAetjC,KAAKgG,MAAMiG,eAAgBjM,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,SAAS1N,KAAKgG,MAAMiG,cAAc,wBAE9H,OACE/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,IAGJG,KAAKgG,MAAM27B,YAAc11B,IACxB/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEoE,OAAQ,EACRD,IAAK,CAAC,MAAM,OACZ+J,KAAM,CAAC,MAAM,OACb5P,UAAW,SACX3B,WAAY,SACZD,MAAO,CAAC,MAAM,OACd2H,SAAU,WACVpG,OAAQ,CAAC,MAAM,OACfP,cAAe,SACfd,eAAgB,UAGdkM,EACE/I,EAAA1D,EAAAC,cAAAyD,EAAA1D,EAAAiR,SAAA,KACEvN,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEpP,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJW,GAAG,EACHQ,OAAO,UAGXqK,MAAOzL,KAAKgG,MAAMiG,cAClBC,YAAalM,KAAKgG,MAAM67B,sBAE1B3+B,EAAA1D,EAAAC,cAACqE,GAAA,EAAD,CACEwB,UAAW,CACTkE,GAAG,EACHjI,SAAS,EACTC,WAAW,GAEbmD,SAAU,EACVpD,SAAU,CAAC,EAAE,GACbqD,aAAc,EACdpD,WAAY,CAAC,EAAE,GACf6D,KAAOi+B,EAAe,IAAM,KAC5Bj/B,OAAQrE,KAAKgG,MAAM+7B,UAAU/hC,KAAKgG,MAAMiG,iBAE1C/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,aAENlB,KAAKgG,MAAMiG,gBAIhB/I,EAAA1D,EAAAC,cAAAyD,EAAA1D,EAAAiR,SAAA,KACEvN,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,EACJQ,OAAQ,QACR6O,IAAKozB,IAEPngC,EAAA1D,EAAAC,cAACqE,GAAA,EAAD,CACEuB,KAAM,IACNC,UAAW,CACTkE,GAAG,EACHjI,SAAS,EACTC,WAAW,GAEbmD,SAAU,EACVpD,SAAU,CAAC,EAAE,GACbqD,aAAc,EACdpD,WAAY,CAAC,EAAE,GACf6C,OAAQrE,KAAKgG,MAAM27B,aAErBz+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,aAHT,iBAYZgC,EAAA1D,EAAAC,cAACywB,GAAA,EAADvwB,OAAAC,OAAA,CACE2E,KAAMwR,MACFlE,EAFN,CAGEmE,YAAY,EACZ1E,KAAMtR,KAAKgG,MAAM4L,UACjByN,SAAUrf,KAAKC,MAAMof,SACrBC,eAAgBtf,KAAKC,MAAMof,oBAtRR/e,wDC2GdijC,8MA7Gbv9B,MAAQ,CACNw9B,YAAY,KACZC,cAAc,QAIhB1/B,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,YACLlE,KAAK0jC,yMAGkBljC,EAAUC,sFACjCT,KAAKkE,YACCy/B,EAAuBnjC,EAAUmjC,uBAAyB3jC,KAAKC,MAAM0jC,uBACvCnjC,EAAUojC,qBAAuBz2B,KAAKC,UAAU5M,EAAUojC,uBAAyBz2B,KAAKC,UAAUpN,KAAKC,MAAM2jC,sBAC/GD,IAChC3jC,KAAK0jC,oBAGD3sB,EAAgBvW,EAAUuH,WAAa/H,KAAKC,MAAM8H,SAClDiP,EAAmBxW,EAAUyW,YAAcjX,KAAKC,MAAMgX,WACvC9J,KAAKC,UAAU5M,EAAUqjC,gBAAkB12B,KAAKC,UAAUpN,KAAKC,MAAM4jC,eACtE7sB,GAAoBD,KAChC+sB,EAAWnkC,OAAOC,OAAO,GAAGI,KAAKgG,OACvChG,KAAK4G,SAAS,CACZ48B,YAAY,KACZC,cAAc,MACd,WACAt/B,EAAKyC,SAASk9B,8QAOb9jC,KAAKC,MAAM2jC,qBAAwB5jC,KAAKC,MAAM0jC,+DAC1C,aAGHx3B,EAAkBnM,KAAKC,MAAMkM,iBAAmB,QACpCnM,KAAKC,MAAM8hC,+CAAmB/hC,KAAK+D,cAAcggC,oBAAoB53B,EAAgBnM,KAAKC,MAAMuN,mCAA5Gu0B,OAEA0B,EAAgB1B,EAAUiC,cAC1BR,EAAczB,EAAUkC,gBAAgB7uB,MAAM2sB,EAAUmC,OAAO1a,IAAI,MAEzExpB,KAAK4G,SAAS,CACZ48B,cACAC,sJAIK,IAAAt1B,EAAAnO,KAED6jC,EAAe,CACnB7yB,WAAW,EACX9P,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAO2Z,UAC9BlS,WAAW7P,KAAKC,MAAMkI,MAAMwL,MAAM2M,QAClC9e,WAAYxB,KAAKC,MAAM8H,SAAW,IAAM,IACxCxG,SAASvB,KAAKC,MAAM8H,SAAW,OAAS,SAItC/H,KAAKC,MAAM4jC,cAAgBlkC,OAAOmF,KAAK9E,KAAKC,MAAM4jC,cAAc/gC,QAClEnD,OAAOmF,KAAK9E,KAAKC,MAAM4jC,cAAc9+B,QAAQ,SAAAC,GAC3C6+B,EAAa7+B,GAAKmJ,EAAKlO,MAAM4jC,aAAa7+B,KAI9C,IAAMK,EAAOrF,KAAKC,MAAMoF,MAAQ,KAC1BV,EAAW3E,KAAKC,MAAM0E,UAAY,EAExC,OAAO3E,KAAKgG,MAAMy9B,eAAiBzjC,KAAKgG,MAAMw9B,YAC5CtgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KAEED,EAAA1D,EAAAC,cAAC0kC,GAAA3kC,EAAD,CACE4kC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACX5/B,SAAUA,EACV6/B,SAAU,QACVC,IAAKj5B,WAAWxL,KAAKgG,MAAMw9B,aAC3BkB,MAAOl5B,WAAWxL,KAAKgG,MAAMy9B,eAC7BkB,aAAe,SAAAC,GAAC,OAAIv/B,EAAK8I,EAAKpK,cAAcS,YAAYogC,EAAEjgC,KAEzD,SAAA0S,GAAA,IAAGwtB,EAAHxtB,EAAGwtB,WAAHxtB,EAAeqtB,MAAf,OACCxhC,EAAA1D,EAAAC,cAAA,QACEqlC,IAAKD,EACL9jC,MAAO8iC,OAMf3gC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQwC,KAAM,gBA1GerF,aCodpBykC,8MAhdb/+B,MAAQ,CACNg/B,eAAe,KACfC,oBAAoB,KACpBC,uBAAuB,KACvBC,6BAA6B,KAC7BC,gBAAgB,CACdC,EAAE,CACAC,MAAQ,CACNC,KAAK,EAAE,GACP1lC,MAAM,EAAE,GAEV2lC,WAAW,CACTD,KAAK,EAAE,EACP1lC,MAAM,EAAE,GAEV4lC,WAAW,CACTF,KAAK,IACL1lC,MAAM,EAAE,EACR6lC,WAAW,OAGfC,GAAG,CACDF,WAAW,CACTF,KAAK,IACL1lC,MAAM,KAER+lC,WAAW,CACTL,KAAK,EAAE,GACP1lC,MAAM,EAAE,IAEVgmC,KAAO,CACLN,KAAK,EACL1lC,MAAM,EAAE,GACR6lC,WAAW,OAGfI,GAAG,CACDD,KAAO,CACLN,KAAK,EACL1lC,MAAM,EAAE,GAEVkmC,UAAU,CACRR,KAAK,EACL1lC,MAAM,EAAE,GAEVmmC,UAAU,CACRT,KAAK,EACL1lC,MAAM,GACN6lC,WAAW,WAOnB3hC,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,YACLlE,KAAKimC,oMAGkBzlC,EAAUC,mEACjCT,KAAKkE,gKAGgB+gC,GACrBjlC,KAAK4G,SAAS,CACZq+B,uMAKED,EAAiB,GACjBC,EAAsB,EAEpBzrB,EAAyC,SAAhCxZ,KAAKC,MAAMwZ,iBAEpBysB,EAAqB,CACzBC,SAASnmC,KAAK+D,cAAciU,MAAM,GAClCL,WAAW3X,KAAK+D,cAAciU,MAAM,GACpCouB,aAAapmC,KAAK+D,cAAciU,MAAM,aAGlChY,KAAK+D,cAAcqT,aAAapX,KAAKC,MAAMqN,cAA3C,eAAA+J,EAAA1X,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAyD,SAAAC,EAAOhM,GAAP,IAAAS,EAAAm6B,EAAA3sB,EAAA2N,EAAA1P,EAAA2uB,EAAAC,EAAAC,EAAAL,EAAAC,EAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjU,EAAApzB,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvD7L,EAAc/H,EAAKlE,MAAMkM,gBAAgBV,GADcoM,EAAAE,KAAA,EAE/B5T,EAAKJ,cAAc+iC,mBAAmB56B,EAAY/H,EAAKlE,MAAMuN,SAF9B,cAEvD64B,EAFuDxuB,EAAAiC,KAAAjC,EAAAE,KAAA,EAIPqP,QAAQkD,IAAI,CAChEnmB,EAAKJ,cAAcm+B,oBAAoBmE,EAAgB56B,EAAMS,EAAYsN,GACzErV,EAAKJ,cAAcgjC,eAAe,CAACt7B,GAAOtH,EAAKlE,MAAMuN,SACrDrJ,EAAKJ,cAAck+B,kBAAkB/1B,KAPsB,cAAAwN,EAAA7B,EAAAiC,KAAAuN,EAAA1nB,OAAAqnC,EAAA,EAAArnC,CAAA+Z,EAAA,GAItD/B,EAJsD0P,EAAA,GAI3Cif,EAJ2Cjf,EAAA,GAI/Bkf,EAJ+Blf,EAAA,GAUvDmf,EAAeD,EAAe/c,IAAI8c,EAAY76B,IAAQyM,MAAM,GAC5DiuB,EAAWxuB,EAAWvC,MAAMoxB,GAE9BJ,EAAe,EACfK,EAAW,EAd8C5uB,EAAAE,KAAA,GAerC5T,EAAKJ,cAAckjC,aAAa/6B,GAfK,SAevDw6B,EAfuD7uB,EAAAiC,OAgBvB,OAArB4sB,EAAUQ,SACzBT,EAAWC,EAAUS,OACrBf,EAAezuB,EAAWvC,MAAMqxB,EAASjd,IAAI,OAGzCmd,EAAmB76B,KAAKiQ,MAAMoqB,EAAS3c,IAAI4c,GAAchxB,MAAM,MAE/DwxB,EAAgBjnC,OAAOmF,KAAKX,EAAK6B,MAAMo/B,iBAAiB1+B,OAAO,SAAA6+B,GAAI,OAAIA,EAAKoB,IAC5EE,EAAkB34B,SAAS04B,EAAc54B,OAC/Ci3B,EAAsBn5B,KAAKkB,IAAIi4B,EAAoB4B,GAI9C1iC,EAAKJ,cAAciU,MAAML,GAAYrT,SAAYH,EAAKJ,cAAciU,MAAMuuB,GAAgBjiC,SAAYH,EAAKJ,cAAciU,MAAMmuB,GAAU7hC,SAAYH,EAAKJ,cAAciU,MAAMouB,GAAc9hC,UAC/L0gC,EAAev5B,GAAS,CACtB06B,WACAxuB,aACAyuB,eACAG,kBAOFL,EAAmBC,SAAWD,EAAmBC,SAASluB,KAAKkuB,GAC/DD,EAAmBvuB,WAAauuB,EAAmBvuB,WAAWM,KAAKN,GACnEuuB,EAAmBE,aAAeF,EAAmBE,aAAanuB,KAAKmuB,IA3CZ,yBAAAvuB,EAAAU,SAAAd,EAAAzX,SAAzD,gBAAAwY,GAAA,OAAAnB,EAAAoB,MAAAzY,KAAAiH,YAAA,WA+CAmgC,EAAwB,GAC9BpnC,KAAKC,MAAMqN,cAAcvI,QAAS,SAAA0G,GAC5Bu5B,EAAev5B,KACjB27B,EAAsB37B,GAASu5B,EAAev5B,MAIlDu5B,EAAiBoC,EAGbznC,OAAOmF,KAAKkgC,GAAgBliC,OAAO,IACrCkiC,EAAc,IAAUkB,GAGtBf,EAA+B,KAC7BD,EAAyBvlC,OAAOmF,KAAK9E,KAAKgG,MAAMo/B,iBAAiB78B,IAAK,SAAAitB,GAC1E,IAAM6R,EAAiB1nC,OAAO8J,OAAOtF,EAAK6B,MAAMo/B,gBAAgB5P,IAAOxnB,MACjErM,EAAQ0lC,EAAe3B,WAAa2B,EAAe3B,WAAa/lC,OAAOmF,KAAKX,EAAK6B,MAAMo/B,gBAAgB5P,IAAOxnB,MAC9GjM,EAAQmM,SAASsnB,GACjB8R,EAAS,CAAEvlC,QAAOJ,SAKxB,OAHII,IAAUkjC,IACZE,EAA+BmC,GAE1BA,IAKTtnC,KAAK4G,SAAS,CACZo+B,iBACAC,sBACAC,yBACAC,qKAIK,IAAAh3B,EAAAnO,KAEP,IAAKA,KAAKgG,MAAMg/B,eACd,OACE9hC,EAAA1D,EAAAC,cAACH,EAAA,EAAD,CACEY,UAAW,CACTW,cAAc,MACd0N,UAAUvO,KAAKC,MAAMmB,QAEvBjB,YAAa,CACXwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,KAAM,2BAKZ,IAAMglC,EAAkBplC,KAAKgG,MAAMo/B,gBAAgBplC,KAAKgG,MAAMi/B,qBAAuBjlC,KAAKgG,MAAMo/B,gBAAgBplC,KAAKgG,MAAMi/B,qBAAuBjlC,KAAKgG,MAAMo/B,gBAAgB,GAE7K,OACEliC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErC,GAAI,EACJmI,GAAI,EACJpJ,MAAO,EACP8H,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPyO,UAAW,EACX9U,aAAc,EACdqT,YAAa,aACbpT,gBAAiB,UAEjB4B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ9E,GAAI,EACJ2G,OAAQ,KACRxH,eAAgB,YAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEoE,OAAQ,KACR1H,MAAO,CAAC,EAAE,IACVgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC+tB,EAAA,EAAD,CACEN,WAAY,CACVloB,EAAE,EACF2C,GAAG,GAEL/B,KAAM,kBACNymB,QAASrsB,KAAKgG,MAAMk/B,uBACpB97B,SAAW,SAAAM,GAAC,OAAIyE,EAAKo5B,uBAAuB79B,IAC5C4iB,aAActsB,KAAKgG,MAAMm/B,iCAK7BxlC,OAAOmF,KAAK9E,KAAKgG,MAAMg/B,gBAAgBz8B,IAAI,SAACkD,EAAM+7B,GAChD,IAAMt7B,EAAciC,EAAKlO,MAAMkM,gBAAgBV,GACzCg8B,EAAgBt5B,EAAKnI,MAAMg/B,eAAev5B,GAC1Ci8B,EAAqBv5B,EAAKpK,cAAciU,MAAMrY,OAAO8J,OAAO27B,GAAiBp3B,MAAMu3B,MACnFoC,EAAgBF,EAAcrB,aAAahxB,MAAMsyB,GACjDE,EAAa97B,KAAKM,IAAI,EAAEZ,WAAWi8B,EAActB,SAAS3c,IAAIme,KAC9DE,EAAgB15B,EAAKpK,cAAc2J,gBAAgB,CAAC,QAAQ,SAASjC,EAAM,QAAQ,QAAQ+J,KAAK,KAEtG,OACEtS,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqL,GAAE,SAAAtG,OAAWuD,GACb5K,cAAe,MACf6H,IAAG,SAAAR,OAAWuD,GACdxD,UAAsB,QAAVwD,EAAA,aAAAvD,OAA+BiG,EAAKlO,MAAMkI,MAAMC,OAAOC,SAAY,MAE/EnF,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,KACV2H,SAAU,YAEVtE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPuB,OAAQ,OACRoG,SAAU,WACV1H,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,IAAK,MAGfqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,IAAK,IACbuB,OAAQ,OACRP,cAAe,OAGblB,OAAOmF,KAAKsgC,GAAiB78B,IAAI,SAAC5G,EAAMmmC,GACtC,IAAMT,EAAiBjC,EAAgBzjC,GACjComC,EAAyBN,EAAcrB,aAAahxB,MAAMjH,EAAKpK,cAAciU,MAAMqvB,EAAe9B,OACpGyC,EAAkC75B,EAAKpK,cAAcS,YAAYujC,EAAuB55B,EAAKlO,MAAM8H,SAAW,EAAIggC,EAAuB5vB,GAAG,GAAK,EAAI,GAKzJ,OAJ4BhK,EAAKpK,cAAc2J,gBAAgB,CAAC,QAAQ,SAASjC,EAAM,0BAErFu8B,EAAkC,KAAKA,GAGvC9kC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErC,GAAI,EACJf,eAAgB,WAChBF,MAAOwnC,EAAexnC,MACtB4O,GAAe,QAAVhD,EAAkB,EAAI,KAC3B/C,IAAG,kBAAAR,OAAoBuD,EAApB,KAAAvD,OAA6B4/B,GAChCG,YAAW,aAAA//B,OAAeiG,EAAKlO,MAAMkI,MAAMC,OAAOC,WAGrC,QAAVoD,GAAoBq8B,IAAkBnoC,OAAOmF,KAAKsgC,GAAiBtiC,OAAO,IACzEI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,OACbR,MAAO,CACLmnC,UAAU,aAEZhnC,MAAOumC,EAActB,SAASgC,IAAIJ,GAA0B,YAAc,UAEzEC,QASnB9kC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP0H,OAAQ,EACRzH,WAAY,SACZe,cAAe,MACfd,eAAgB,SAChB0O,GAAe,QAAVhD,EAAkB,CAAC,MAAM,SAAW,QACzC7C,GAAK4+B,EAAW7nC,OAAOmF,KAAKqJ,EAAKnI,MAAMg/B,gBAAgBliC,OAAO,EAAI,MAAQ,GAE1EI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,IAAK,IACbE,eAAgB,CAAC,aAAa,aAE9BmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErC,GAAI,CAAC,EAAE,GACPS,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAEdiK,IAGLvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,IAAK,IACbC,WAAY,SACZe,cAAe,MACfO,OAAQ,CAAC,OAAO,QAChBrB,eAAgB,cAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE/B,OAAQ,OACRvB,MAAO+nC,EACPtmC,gBAAiB,UAEjB4B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE/B,OAAQ,OACRvB,MAAO,OACPwB,aAAc,CAAC,gBAAgB,iBAC/BN,MAAO,CAACyS,WAAU,+BAAAtL,OAAgC2/B,EAAhC,iBAAA3/B,OAA6D2/B,EAA7D,oBAAA3/B,OAA6F2/B,EAA7F,iBAGtB3kC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEilC,GAAI,EACJvoC,MAAO,OACPuB,OAAQ,OACRtB,WAAY,SACZC,eAAgB,cAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAO8M,IAAG,iBAAA/H,OAAmBuD,EAAnB,QAAgCrK,OAAQ,CAAC,QAAQ,YAG3D8B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEilC,GAAI,EACJtoC,WAAY,UAGA,QAAV2L,EACEvI,EAAA1D,EAAAC,cAACs8B,EAAA,EAADp8B,OAAAC,OAAA,GACMuO,EAAKlO,MADX,CAEEwL,MAAOA,EACPS,YAAaA,EACbygB,UAAW,CACT/mB,KAAK,kBACL3F,MAAM,CACJ0E,SAASwJ,EAAKlO,MAAM8H,SAAW,EAAI,EACnCnD,aAAauJ,EAAKlO,MAAM8H,SAAW,EAAI,GACvChH,MAAM,CACJG,MAAMiN,EAAKlO,MAAMkI,MAAMC,OAAO2Z,UAC9BvgB,WAAW2M,EAAKlO,MAAM8H,SAAW,IAAM,IACvCxG,SAAS4M,EAAKlO,MAAM8H,SAAW,OAAS,aAMhD7E,EAAA1D,EAAAC,cAAC4oC,GAAD1oC,OAAAC,OAAA,GACMuO,EAAKlO,MADX,CAEE0E,SAAUwJ,EAAKlO,MAAM8H,SAAW,EAAI,EACpCnD,aAAcuJ,EAAKlO,MAAM8H,SAAW,EAAI,GACxC87B,aAAc,CACZ3iC,MAAMiN,EAAKlO,MAAMkI,MAAMC,OAAO2Z,UAC9BvgB,WAAW2M,EAAKlO,MAAM8H,SAAW,IAAM,IACvC8H,WAAW1B,EAAKlO,MAAMkI,MAAMwL,MAAMC,UAClCrS,SAAS4M,EAAKlO,MAAM8H,SAAW,OAAS,gBAWvDoG,EAAKlO,MAAM8H,UACV7E,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtD,MAAO,IAAMC,WAAY,aAAcC,eAAgB,gBAOzEmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,KACV2H,SAAU,YAEVtE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtD,MAAO,CAAC,IAAK,MACnBqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,IAAK,IACbgB,cAAe,OAGblB,OAAOmF,KAAKsgC,GAAiB78B,IAAI,SAAC+/B,EAAgBR,GAChD,IAAMT,EAAiBjC,EAAgBkD,GACvC,OACEplC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEsL,GAAI,EACJ3N,GAAI,CAAC,EAAE,GACPf,eAAgB,WAChBF,MAAOwnC,EAAexnC,MACtB6I,IAAG,kBAAAR,OAAoB4/B,GACvBG,YAAW,aAAA//B,OAAeiG,EAAKlO,MAAMkI,MAAMC,OAAOC,UAElDnF,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,UAENonC,UAUdtoC,KAAKC,MAAM8H,UACV7E,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtD,MAAO,IAAMC,WAAY,aAAcC,eAAgB,UAC3DmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM3B,WAAY,EAAGD,SAAU,cAxcdjB,aCuFlBioC,8MAvFbxkC,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,iMAGkB1D,EAAUC,mEACjCT,KAAKkE,kJAIL,OACEhB,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACT3E,GAAG,EACH4G,GAAG,CAAC,EAAE,GACN0gC,GAAG,CAAC,EAAE,IAER93B,UAAU,EACVzI,eAAe,EACfpE,YAAazD,KAAKC,MAAMwD,aAExBP,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE/B,OAAQ,OACRtB,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,GAAI,CAAC,EAAE,IAGL3H,KAAKC,MAAM0V,KACTzS,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAM5F,KAAKC,MAAM0V,KACjBhQ,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,MACtC7G,MAAOlB,KAAKC,MAAMqgC,UAAYtgC,KAAKC,MAAMqgC,UAAY,WAErDtgC,KAAKC,MAAM8P,OACb7M,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE8M,IAAKjQ,KAAKC,MAAM8P,MAChBlQ,MAAOG,KAAKC,MAAM8H,SAAW,QAAU,QACvC3G,OAAQpB,KAAKC,MAAM8H,SAAW,QAAU,WAKhD7E,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,CAAC,EAAE,GACP3I,cAAe,SACff,WAAY,aACZC,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,IAEZvB,KAAKC,MAAMkgB,OAEdjd,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAENlB,KAAKC,MAAMG,OAGhB8C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqsB,MAAO,SACPtuB,MAAO,WACP0E,KAAM,qBACND,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,mBAlFhBzH,aC+GnBkoC,8MA7GbxiC,MAAQ,CACNyiC,WAAW,KACXC,aAAa,QAIf3kC,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,YACLlE,KAAK0jC,yMAGkBljC,EAAUC,sFACjCT,KAAKkE,YACCy/B,EAAuBnjC,EAAUmjC,uBAAyB3jC,KAAKC,MAAM0jC,uBACvCnjC,EAAUojC,qBAAuBz2B,KAAKC,UAAU5M,EAAUojC,uBAAyBz2B,KAAKC,UAAUpN,KAAKC,MAAM2jC,sBAC/GD,IAChC3jC,KAAK0jC,oBAGD3sB,EAAgBvW,EAAUuH,WAAa/H,KAAKC,MAAM8H,SAClDiP,EAAmBxW,EAAUyW,YAAcjX,KAAKC,MAAMgX,WACvC9J,KAAKC,UAAU5M,EAAUqjC,gBAAkB12B,KAAKC,UAAUpN,KAAKC,MAAM4jC,eACtE7sB,GAAoBD,KAChC+sB,EAAWnkC,OAAOC,OAAO,GAAGI,KAAKgG,OACvChG,KAAK4G,SAAS,CACZ6hC,WAAW,KACXC,aAAa,MACb,WACAvkC,EAAKyC,SAASk9B,8QAOb9jC,KAAKC,MAAM2jC,qBAAwB5jC,KAAKC,MAAM0jC,+DAC1C,aAGHx3B,EAAkBnM,KAAKC,MAAMkM,iBAAmB,QACpCnM,KAAKC,MAAM8hC,+CAAmB/hC,KAAK+D,cAAcggC,oBAAoB53B,EAAgBnM,KAAKC,MAAMuN,mCAA5Gu0B,OAEA2G,EAAe3G,EAAUkC,gBAAgBhsB,KAAK8pB,EAAUiC,eACxDyE,EAAaC,EAAazwB,KAAKywB,EAAatzB,MAAM2sB,EAAUmC,OAAO1a,IAAI,OAE7ExpB,KAAK4G,SAAS,CACZ6hC,aACAC,qJAIK,IAAAv6B,EAAAnO,KAED6jC,EAAe,CACnB7yB,WAAW,EACX9P,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAO2Z,UAC9BlS,WAAW7P,KAAKC,MAAMkI,MAAMwL,MAAM2M,QAClC9e,WAAYxB,KAAKC,MAAM8H,SAAW,IAAM,IACxCxG,SAASvB,KAAKC,MAAM8H,SAAW,OAAS,SAItC/H,KAAKC,MAAM4jC,cAAgBlkC,OAAOmF,KAAK9E,KAAKC,MAAM4jC,cAAc/gC,QAClEnD,OAAOmF,KAAK9E,KAAKC,MAAM4jC,cAAc9+B,QAAQ,SAAAC,GAC3C6+B,EAAa7+B,GAAKmJ,EAAKlO,MAAM4jC,aAAa7+B,KAI9C,IAAML,EAAW3E,KAAKC,MAAM0E,UAAY,EAExC,OAAO3E,KAAKgG,MAAM0iC,cAAgB1oC,KAAKgG,MAAMyiC,WAC3CvlC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0kC,GAAA3kC,EAAD,CACE4kC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACX5/B,SAAUA,EACV6/B,SAAU,QACVC,IAAKj5B,WAAWxL,KAAKgG,MAAMyiC,YAC3B/D,MAAOl5B,WAAWxL,KAAKgG,MAAM0iC,cAC7B/D,aAAe,SAAAC,GAAC,MAAI,KAAKz2B,EAAKpK,cAAcS,YAAYogC,EAAEjgC,KAEzD,SAAA0S,GAAA,IAAGwtB,EAAHxtB,EAAGwtB,WAAHxtB,EAAeqtB,MAAf,OACCxhC,EAAA1D,EAAAC,cAAA,QACEqlC,IAAKD,EACL9jC,MAAO8iC,OAMf3gC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQwC,KAAM,gBA1GcrF,aCq2DnBqoC,8MAp1Db3iC,MAAQ,CACN+7B,UAAU,KACV6G,gBAAgB,GAChBC,iBAAiB,GACjBC,gBAAgB,KAChBC,gBAAgB,KAChBC,gBAAgB,KAChBC,gBAAgB,KAChBC,iBAAgB,EAChBC,mBAAmB,KACnBC,yBAAyB,KACzBC,+BAA+B,KAC/BC,8BAA8B,UAIhCvlC,cAAgB,OAChBmO,oBAAqB,6EAGflS,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,oDAK9CD,KAAKkE,2DAILlE,KAAKkS,oBAAqB,sKAIpBlS,KAAK8hC,qMAGYthC,EAAWC,8EAClCT,KAAKkE,YAEkB1D,EAAUgN,UAAYxN,KAAKC,MAAMuN,SAEtDxN,KAAK4G,SAAS,CACZsiC,iBAAgB,GAChB,WACA/kC,EAAK29B,oMAKQzvB,wFAASC,iCAAS,KAC9BtS,KAAKkS,4DACDlS,KAAK4G,SAASyL,EAASC,oCAEzB,kKAGwBg3B,GAC/BtpC,KAAKoS,aAAa,CAChBk3B,oOAKIn9B,EAAkBnM,KAAKC,MAAMkM,iBAAmB,IAElDnM,KAAKgG,MAAMkjC,0DACN,cAILlpC,KAAKC,MAAMuN,gCACP6E,EAAW,GACX5E,EAAmBzN,KAAK+D,cAAc2J,gBAAgB,CAAC,UAAU,8BAQ7D0Z,QAAQkD,IAAI,CAEpBtqB,KAAK+D,cAAcwlC,mBAAmBvpC,KAAKC,MAAMuN,SAEjDxN,KAAK+D,cAAcylC,mBAAmBxpC,KAAKC,MAAMuN,SAEjDxN,KAAK+D,cAAc0lC,mBAAmBzpC,KAAKC,MAAMwZ,kBAEjDzZ,KAAK+D,cAAcggC,oBAAoB53B,EAAgBnM,KAAKC,MAAMuN,SAElExN,KAAK+D,cAAc6J,gBAAgB5N,KAAKC,MAAMuN,QAAQC,EAAiB,SAAS9N,OAAOmF,KAAKqH,4CAd5F28B,OACAG,OACAL,OACA7G,OAcF1vB,EAAS0vB,UAAYA,EAErB1vB,EAASy2B,gBAAkBA,GAAmBA,EAAgBhmC,OAAO,EAAIgmC,EAAgBvgC,IAAK,SAAAmhC,GAC5F,IAAMC,EAAex7B,EAAKlO,MAAMkI,MAAMC,OAAOiF,aAAa/G,OACpDsjC,EAA0B,YAAbF,EAAEpjC,OAAuB,QAAU,eAChDujC,EAA2B,YAAbH,EAAEpjC,OAAuBqjC,EAAa7+B,OAAS6+B,EAAa/+B,UAC1Ek/B,EAAoB/H,EAAUgI,aAAajvB,GAAG,GAAK4uB,EAAEtxB,QAAQoR,IAAIuY,EAAUgI,cAAc30B,MAAM,KAAKzI,QAAQ,GAAG,IAAM,MACrHq9B,EAAkB,CACtB9oC,MAAM2oC,GAER,OAAOlqC,OAAOC,OAAO8pC,EAAE,CACrBE,aACAI,kBACAF,wBAEC,KAELz3B,EAAS42B,gBAAkBA,GAAmBtpC,OAAOmF,KAAKmkC,GAAiBnmC,OAAO,EAAImmC,EAAkB,KAEpG52B,EAAS42B,kBACX52B,EAASg3B,+BAAiC1pC,OAAOmF,KAAKuN,EAAS42B,iBAAiBvP,OAAQ,SAAC2P,EAA+B59B,GACtH,IAAMw+B,EAAY53B,EAAS42B,gBAAgBx9B,GACrCS,EAAciC,EAAKpK,cAAc2J,gBAAgB,CAAC,QAAQ,eAAe,QAAQ,kBAAkBjC,IACzG,GAAIS,EAAYg+B,WAAa/7B,EAAKlO,MAAMwZ,iBAAiB,CACvD,OAAQwwB,EAAU3jC,QAChB,IAAK,UACH4F,EAAY09B,WAAa,YACzB19B,EAAY89B,gBAAkB,CAC5B9oC,MAAMiN,EAAKlO,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOuE,SAEtD,MACA,IAAK,WACHqB,EAAY09B,WAAa,OACzB19B,EAAY89B,gBAAkB,CAC5B9oC,MAAMiN,EAAKlO,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAMxDsB,EAAYT,MAAQA,EACpBS,EAAY5F,OAAS2jC,EAAU3jC,OAC/B4F,EAAYi+B,UAAYF,EAAUG,cAClCl+B,EAAYm+B,WAAaJ,EAAUK,aACnCjB,EAA+Bn9B,EAAYywB,WAAazwB,EAE1D,OAAOm9B,GACP,MAIAtH,0BACIgH,EAAkBppC,OAAOmF,KAAKi9B,EAAU7qB,eAAexQ,OAAO,SAAA+E,GAAK,OAAM0C,EAAKpK,cAAciU,MAAM+pB,EAAU7qB,cAAczL,GAAOuO,kBAAkBc,GAAG,KAE5JzI,EAAS02B,gBAAkBA,EAErBvvB,EAAyC,SAAhCxZ,KAAKC,MAAMwZ,iBAEtByqB,EAASlkC,KAAK+D,cAAciU,MAAM,GAClCuyB,EAAWvqC,KAAK+D,cAAciU,MAAM,GACpCisB,EAAkBjkC,KAAK+D,cAAciU,MAAM,aAEzChY,KAAK+D,cAAcqT,aAAa2xB,EAAhC,eAAA1hB,EAAA1nB,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAgD,SAAAmC,EAAOlO,GAAP,IAAAS,EAAAs+B,EAAAC,EAAA/D,EAAAgE,EAAA/yB,EAAAgzB,EAAAlE,EAAAmE,EAAA,OAAAhY,EAAApzB,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAC9C7L,EAAcC,EAAgBV,GADgBmO,EAAA7B,KAAA,EAO1CqP,QAAQkD,IAAI,CACpBnc,EAAKpK,cAAckjC,aAAa/6B,GAChCiC,EAAKpK,cAAc8mC,cAAc3+B,EAAYsN,GAC7CrL,EAAKpK,cAAc+iC,mBAAmB56B,EAAYiC,EAAKlO,MAAMuN,WAVX,cAAAg9B,EAAA5wB,EAAAE,KAAA2wB,EAAA9qC,OAAAqnC,EAAA,EAAArnC,CAAA6qC,EAAA,GAIlD9D,EAJkD+D,EAAA,GAKlDC,EALkDD,EAAA,GAMlD9yB,EANkD8yB,EAAA,GAAA7wB,EAAA7B,KAAA,GAatB5J,EAAKpK,cAAcm+B,oBAAoBvqB,EAAWlM,EAAMS,EAAYsN,GAb9C,QAa9CmxB,EAb8C/wB,EAAAE,KAe9C2sB,EAAWt4B,EAAKpK,cAAciU,MAAM0uB,EAAUS,QAC9CyD,EAAc7I,EAAU7qB,cAAczL,GAAO2mB,aAAa5I,IAAIuY,EAAUgI,cAE1EtD,IACFvC,EAASA,EAAOjsB,KAAKwuB,EAASrxB,MAAMw1B,KAGlCF,IACFH,EAAWA,EAAStyB,KAAKyyB,EAAWt1B,MAAMw1B,KAGxCD,IACF1G,EAAkBA,EAAgBhsB,KAAK0yB,IA3BW,yBAAA/wB,EAAArB,SAAAoB,EAAA3Z,SAAhD,gBAAA+Z,GAAA,OAAAsN,EAAA5O,MAAAzY,KAAAiH,YAAA,6BAgC8BjH,KAAK+D,cAAc+mC,6BAA6B9qC,KAAKC,MAAMuN,QAAQrB,EAAgB,sBAAjH4+B,mBAC6B/qC,KAAK+D,cAAco+B,yBAAyBniC,KAAKC,MAAMuN,QAAQrB,EAAgB,cAA5G6+B,SACAC,EAA+BD,EAAuBrrC,OAAOmF,KAAKkmC,GAAsBziC,IAAK,SAAA85B,GACjG,IAAMjqB,EAAU4yB,EAAqB3I,GACrC,OAAIjqB,EAAQ0C,GAAG,GACb,IAAA5S,OAAWkQ,EAAQzL,QAAQ,GAA3B,KAAAzE,OAAiCm6B,GAE1B,OAER37B,OAAO,SAAAgD,GAAC,OAAW,OAANA,IAAe,KAE/B2I,EAAS6xB,OAASA,EAClB7xB,EAASk4B,SAAWA,EACpBl4B,EAAS04B,sBAAwBA,EACjC14B,EAAS44B,6BAA+BA,UAG1C54B,EAASu2B,gBAAkBA,EAC3Bv2B,EAAS62B,iBAAkB,EAErBF,EAAkBrpC,OAAOmF,KAAKqH,GAAiBzF,OAAO,SAAA+E,GAAK,OAAM4G,EAAS02B,gBAAgBr9B,SAASD,KAAW9L,OAAOmF,KAAKuN,EAASu2B,iBAAiBl9B,SAASD,KACnK4G,EAAS22B,gBAAkBA,EAG3BhpC,KAAKoS,aAAaC,2BAGlBrS,KAAKoS,aAAa,CAChBw2B,gBAAgB,GAChBG,gBAAgB,GAChBG,iBAAgB,EAChBF,gBAAgBrpC,OAAOmF,KAAKqH,yIAK1B,IAAAiC,EAAApO,KACAm1B,EAAwC,WAA7Bn1B,KAAKC,MAAMm1B,cACtB8V,EAAYlrC,KAAK+D,cAAc2J,gBAAgB,CAAC,cAChDy9B,EAAUnrC,KAAK+D,cAAc2J,gBAAgB,CAAC,WAAW,YACzD09B,EAAYprC,KAAK+D,cAAc2J,gBAAgB,CAAC,WAAW,cAC3D29B,EAAerrC,KAAK+D,cAAc2J,gBAAgB,CAAC,WAAW,iBAC9D49B,EAAqBtrC,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,iBACjE69B,EAAsBvrC,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,kBAExE,OACExK,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAACowB,GAAA,EAAD,CACEjvB,GAAI,GAEHZ,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa1N,KAAKC,MAAMwZ,iBAAiB,UAHhF,aAMGzZ,KAAKgG,MAAMkjC,gBAiBVhmC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAGLG,KAAKC,MAAMuN,SAAWxN,KAAKgG,MAAM+iC,gBAAgBjmC,OAAO,EACtDI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,EACJf,MAAO,EACP6F,GAAI,CAAC,EAAE,GACP5F,WAAY,SACZC,eAAgB,SAChBc,cAAe,CAAC,SAAS,QAEzBqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErC,GAAI,CAAC,EAAE,GACPjB,MAAO,CAAC,EAAE,EAAE,GACZgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTiC,GAAG,CAAC,EAAE,GACN9G,GAAG,CAAC,EAAE,GACNmC,QAAQ,OACRjD,WAAW,SACXsB,OAAO,CAAC,OAAO,SACfrB,eAAe,WAGjBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAGdC,KAAKgG,MAAMk+B,OACThhC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6N,WAAY,EACZxP,WAAY,CAAC,EAAE,GACfN,MAAO,YACP2O,WAAY,UACZtO,SAAU,CAAC,EAAE,SACbM,wBAAyB,CAAEC,OAAQ9B,KAAKgG,MAAMk+B,OAAOv3B,QAAQ,GAAG,sBAIlEzJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQwC,KAAK,SAGjBzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAHT,WAOAgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqoC,UAAW,SACXC,QAASzrC,KAAK+D,cAAc2J,gBAAgB,CAAC,WAAW,aAExDxK,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJ5D,KAAM,OACND,KAAM,MACNzE,MAAO,mBAOnBgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErC,GAAI,CAAC,EAAE,GACPjB,MAAO,CAAC,EAAE,EAAE,GACZgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTiC,GAAG,CAAC,EAAE,GACN9G,GAAG,CAAC,EAAE,GACNmC,QAAQ,OACRjD,WAAW,SACXsB,OAAO,CAAC,OAAO,SACfrB,eAAe,WAGjBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAGdC,KAAKgG,MAAM+7B,UACT7+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAACisC,GAAD/rC,OAAAC,OAAA,CACE+E,SAAU,GACN3E,KAAKC,MAFX,CAGE8hC,UAAW/hC,KAAKgG,MAAM+7B,aAExB7+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,IACPC,WAAY,SACZC,eAAgB,YAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,EACZqO,WAAY7P,KAAKC,MAAMkI,MAAMwL,MAAM2M,QACnCpf,MAAOlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAJrD,IAMI5K,KAAKgG,MAAM+7B,UAAU4J,kBAAkBh/B,QAAQ,GANnD,MASFzJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEG,GAAI,EACJ/B,SAAU,EACVC,WAAY,EACZqO,WAAY7P,KAAKC,MAAMkI,MAAMwL,MAAM2M,QACnCpf,MAAOlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WALrD,KAOA1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,IACPC,WAAY,SACZC,eAAgB,cAEhBmD,EAAA1D,EAAAC,cAAC4oC,GAAD1oC,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEoF,KAAM,KACNV,SAAU,EACVk/B,aAAc,CACZtiC,SAAS,GACTC,WAAW,IACXN,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDm3B,UAAW/hC,KAAKgG,MAAM+7B,gBAM9B7+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQwC,KAAK,SAGjBzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAHT,iBAQElB,KAAKgG,MAAM+kC,uBACT7nC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqoC,UAAW,SACXC,QAAS,8DAA8DzrC,KAAKgG,MAAM+kC,uBAAyB/qC,KAAKgG,MAAM+kC,sBAAsBjwB,GAAG,GAAxE,KAAA5S,OAAkFlI,KAAKgG,MAAMilC,6BAA6Bz1B,KAAK,OAA/H,KAA2I,KAElNtS,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJ5D,KAAM,OACND,KAAM,MACNzE,MAAO,mBASvBgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,EAAE,GACZgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTiC,GAAG,CAAC,EAAE,GACN9G,GAAG,CAAC,EAAE,GACNmC,QAAQ,OACRjD,WAAW,SACXsB,OAAO,CAAC,OAAO,SACfrB,eAAe,WAGjBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAGdC,KAAKgG,MAAMukC,SACTrnC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6N,WAAY,EACZxP,WAAY,CAAC,EAAE,GACfN,MAAO,YACP2O,WAAY,UACZtO,SAAU,CAAC,EAAE,SACbM,wBAAyB,CAAEC,OAAQ9B,KAAKgG,MAAMukC,SAAS59B,QAAQ,MAIjEzJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQwC,KAAK,SAGjBzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAHT,kBAOAgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqoC,UAAW,SACXC,QAASzrC,KAAK+D,cAAc2J,gBAAgB,CAAC,WAAW,oBAExDxK,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJ5D,KAAM,OACND,KAAM,MACNzE,MAAO,oBAQrBgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP2O,GAAI,mBACJzO,eAAgB,gBAChBc,cAAe,CAAC,SAAS,QAEzBqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,CAAC,EAAE,GACPf,MAAO,CAAC,EAAE,MACVgB,cAAe,SACf2N,GAAI,yBAEJtL,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACE0Y,MAAO,cACPsb,WAAcz7B,KAAKC,MAAM8H,SAIrB,KAJgC,CAClChH,MAAM,CACJwN,UAAU,UAIdrL,EAAA1D,EAAAC,cAACmsC,GAADjsC,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEof,SAAU,6BAIhBnc,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,MACVgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,KACEvE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEsL,GAAI,CAAC,EAAE,GACP9G,GAAI,CAAC,EAAE,GACPkkC,UAAW,SACXhrC,cAAe,CAAC,SAAS,QAEzBqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,IACVgB,cAAe,SACfd,eAAgB,cAEhBmD,EAAA1D,EAAAC,cAACowB,GAAA,EAAD,CACEruB,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,UAAW,QAHb,gBAQFyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,CAAC,EAAE,GACP7F,MAAO,CAAC,EAAE,IACVgB,cAAe,SACfd,eAAgB,YAEhBmD,EAAA1D,EAAAC,cAAC+tB,EAAA,EAAD,CACEN,WAAY,CACVloB,EAAE,EACF2C,GAAG,GAEL2kB,aACE,CAACvqB,MAAM,OAAOJ,MAAM,MAEtBiE,KAAM,mBACNymB,QAAS,CACP,CAACtqB,MAAM,OAAOJ,MAAM,MACpB,CAACI,MAAM,QAAQJ,MAAM,MACrB,CAACI,MAAM,SAASJ,MAAM,MACtB,CAACI,MAAM,SAASJ,MAAM,MACtB,CAACI,MAAM,MAAMJ,MAAM,QAErByH,SAAW,SAAAM,GAAC,OAAI0E,EAAK09B,iCAAiCpiC,QAI5DxG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,CAAC,EAAE,GACPqiC,UAAW,SACX9rC,eAAgB,SAChByO,GAAI,yBAEJtL,EAAA1D,EAAAC,cAAC8W,GAAA,EAAD5W,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqN,cAAe,GACf+R,SAAU,wBACVC,eAAgB,wBAChBzI,mBAAoB7W,KAAKgG,MAAMsjC,8BAC/B/tB,iBAAkBvb,KAAK+D,cAAcgoC,oBAAoB,MAAM,WAQ3E7oC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,EACJ0C,GAAI,OACJzD,MAAO,CAAC,EAAE,IACVgsC,UAAW,SACX9rC,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,UAAW,UAGTzB,KAAKC,MAAM8H,SACT/H,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa1N,KAAKC,MAAMwZ,iBAAiB,cAE7EzZ,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa1N,KAAKC,MAAMwZ,iBAAiB,eAwFvFzZ,KAAKgG,MAAMijC,iBACT/lC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPe,GAAI,CAAC,EAAE,GACP4N,GAAI,mBACJ3N,cAAe,UAEfqC,EAAA1D,EAAAC,cAACowB,GAAA,EAAD,CAAO5mB,GAAI,CAAC,EAAE,IAAd,oBACA/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPgB,cAAe,UAEfqC,EAAA1D,EAAAC,cAACusC,GAAA,EAADrsC,OAAAC,OAAA,CACE0N,cAAe3N,OAAOmF,KAAK9E,KAAKgG,MAAMqjC,gCACtCx6B,KAAM,CACJ,CACEsR,MAAM,QACNlgB,MAAM,CACJJ,MAAM,CAAC,GAAI,KAEbosC,OAAO,CACL,CACErmC,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACEwE,KAAK,eAIX,CACEsmC,QAAO,EACP/rB,MAAM,YACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAM,MAEfosC,OAAO,CACL,CACErmC,KAAK,SACLrB,KAAK,SACLu8B,KAAK,CAAC,aACN7gC,MAAM,CACJ0E,SAAU,IAGd,CACEiB,KAAK,YACL3F,MAAM,CACJuJ,GAAG,MAKX,CACE2W,MAAM,aACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,KACZE,eAAe,CAAC,SAAS,eAE3BksC,OAAO,CACL,CACErmC,KAAK,SACLrB,KAAK,SACLu8B,KAAK,CAAC,cACN7gC,MAAM,CACJ0E,SAAU,IAGd,CACEJ,KAAK,OACLqB,KAAK,SACLk7B,KAAK,CAAC,SACN7gC,MAAM,CACJuJ,GAAG,MAKX,CACE2W,MAAM,SACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,KACZE,eAAe,CAAC,SAAS,eAE3BksC,OAAO,CACL,CACE1nC,KAAK,OACL2nC,QAAO,EACPtmC,KAAK,SACLk7B,KAAK,CAAC,cACN7gC,MAAM,CACJkB,GAAG,EACHwE,KAAK3F,KAAKC,MAAM8H,SAAW,QAAU,UAGzC,CACEnC,KAAK,SACLk7B,KAAK,CAAC,UACN7gC,MAAM,CACJc,MAAM,CACJW,cAAc,kBAMxB,CACEye,MAAM,GACN+rB,OAA8B,OAAvBlsC,KAAKC,MAAMuN,QAClBvN,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdssC,YAAY,CACVtsC,MAAM,GAERosC,OAAO,CACL,CACErmC,KAAK,SACLjE,MAAM,QACN8+B,UAAU,CACRvf,SAAS,SAACjhB,GAAD,MAAyC,YAA7BA,EAAMiM,YAAY5F,SAEzCrG,MAAM,CACJJ,MAAM,EACN0B,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACb8U,UAAU,KACV5M,UAAU,UACV5D,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,SACtCtE,YAAY,SAACxD,GAAD,OAAWmO,EAAKnO,MAAMmsC,YAAX,SAAAlkC,OAAgCojC,EAAmBe,MAAnD,KAAAnkC,OAA4DjI,EAAMiM,YAAYT,eAM3GzL,KAAKC,MAhIX,CAiIEkM,gBAAiBnM,KAAKgG,MAAMqjC,oCAMtCnmC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP2O,GAAI,mBACJ3N,cAAe,SACfD,GAAKZ,KAAKgG,MAAM+iC,gBAAgBjmC,OAAa,EAAJ,IAGtC9C,KAAKgG,MAAM+iC,gBAAgBjmC,OAAO,GAAKnD,OAAOmF,KAAK9E,KAAKgG,MAAM4iC,iBAAiB9lC,OAAO,GAAK9C,KAAKgG,MAAMgjC,gBAAgBlmC,OAAO,IAC5HI,EAAA1D,EAAAC,cAACowB,GAAA,EAAD,CAAO5mB,GAAI,CAAC,EAAE,IAAd,oBAEJ/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtD,MAAO,EAAGgB,cAAe,UAE3BlB,OAAOmF,KAAK9E,KAAKgG,MAAM4iC,iBAAiB9lC,OAAO,GAC/CI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPe,GAAI,CAAC,EAAE,GACP4N,GAAI,iBACJ3N,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyF,GAAI,EACJ/I,MAAO,EACPe,GAAI,CAAC,EAAE,GACP8T,YAAa,UACb43B,aAAc,yBAEdppC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQopC,GAAT,CACEhrC,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,sBAOF0B,EAAA1D,EAAAC,cAACusC,GAAA,EAADrsC,OAAAC,OAAA,CACE0N,cAAe3N,OAAOmF,KAAK9E,KAAKgG,MAAM4iC,iBACtCnlC,YAAa,SAACxD,GAAD,OAAWmO,EAAKnO,MAAMstB,YAAYttB,EAAMwL,QACrDoD,KAAM,CACJ,CACEsR,MAAM,WACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdosC,OAAO,CACL,CACErmC,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACEwE,KAAK,eAIX,CACEua,MAAM,OACN+rB,OAA8B,OAAvBlsC,KAAKC,MAAMuN,QAClBvN,MAAM,CACJJ,MAAM,CAAC,IAAM,MAEfosC,OAAO,CACL,CACErmC,KAAK,OACL3F,MAAM,CACJ0E,SAAS,MAKjB,CACEwb,MAAM,MACNqsB,KAAKrB,EACLlrC,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdssC,YAAY,CACVtrC,cAAc,SACdf,WAAW,cAEbmsC,OAAO,CACL,CACErmC,KAAK,MACL6mC,aAAY,GAEd,CACE7mC,KAAK,mBACLoQ,YAAW,EACX/V,MAAM,CACJ0E,SAAS3E,KAAKC,MAAM8H,SAAW,EAAI,EACnCxG,SAASvB,KAAKC,MAAM8H,SAAW,MAAQ,MAK/C,CACEoY,MAAM,QACNqsB,KAAKpB,EACLnrC,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdosC,OAAO,CACL,CACErmC,KAAK,WAIX,CACEua,MAAM,UACN+rB,QAAO,EACPjsC,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdssC,YAAY,CACVtsC,MAAM,EACNiB,GAAG,CAAC,EAAE,IAERmrC,OAAO,CACL,CACErmC,KAAK,qBAIX,CACEsmC,QAAO,EACP/rB,MAAM,UACNqsB,KAAKnB,EACLprC,MAAM,CACJJ,MAAM,CAAC,IAAK,KACZ4B,UAAU,UAEZwqC,OAAO,CACL,CACErmC,KAAK,eAIX,CACEua,MAAM,GACN+rB,OAA8B,OAAvBlsC,KAAKC,MAAMuN,QAClBvN,MAAM,CACJJ,MAAM,CAAyB,OAAvBG,KAAKC,MAAMuN,QAAmB,IAAO,EAAG,MAElD2+B,YAAY,CACVtsC,MAAM,GAERosC,OAAO,CACL,CACErmC,KAAK,SACLjE,MAAO,UACP1B,MAAM,CACJJ,MAAM,EACN0B,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACb8U,UAAU,KACV5M,UAAU,UACV5D,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,SACtCtE,YAAY,SAACxD,GAAD,OAAWmO,EAAKnO,MAAMstB,YAAYttB,EAAMwL,cAM1DzL,KAAKC,SAKfD,KAAKgG,MAAM+iC,gBAAgBjmC,OAAO,GAChCI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAKZ,KAAKgG,MAAMgjC,gBAAgBlmC,OAAO,EAAI,CAAC,EAAE,GAAK,EACnDjD,MAAO,EACP2O,GAAI,mBACJ3N,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyF,GAAI,EACJ/I,MAAO,EACPe,GAAI,CAAC,EAAE,GACP8T,YAAa,UACb43B,aAAc,yBAEdppC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQopC,GAAT,CACEhrC,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,qBAOF0B,EAAA1D,EAAAC,cAACusC,GAAA,EAADrsC,OAAAC,OAAA,CACE0N,cAAetN,KAAKgG,MAAM+iC,gBAC1BtlC,YAAa,SAACxD,GAAD,OAAWmO,EAAKnO,MAAMstB,YAAYttB,EAAMwL,QACrDoD,KAAM,CACJ,CACEsR,MAAM,WACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdosC,OAAO,CACL,CACErmC,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACEwE,KAAK,eAIX,CACEua,MAAM,OACN+rB,QAAO,EACPjsC,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdosC,OAAO,CACL,CACErmC,KAAK,OACL3F,MAAM,CACJ0E,SAAS,MAKjB,CACEwb,MAAM,MACNqsB,KAAKrB,EACLlrC,MAAM,CACJJ,MAAM,CAAC,GAAK,MAEdssC,YAAY,CACVtrC,cAAc,SACdf,WAAW,cAEbmsC,OAAO,CACL,CACErmC,KAAK,MACL6mC,aAAY,GAEd,CACE7mC,KAAK,mBACLoQ,YAAW,EACX/V,MAAM,CACJ0E,SAAS3E,KAAKC,MAAM8H,SAAW,EAAI,EACnCxG,SAASvB,KAAKC,MAAM8H,SAAW,MAAQ,MAK/C,CACEoY,MAAM,QACNqsB,KAAKpB,EACLnrC,MAAM,CACJJ,MAAM,CAAC,IAAK,KAEdssC,YAAY,CACVrsC,WAAW,CAAC,SAAS,eAEvBmsC,OAAO,CACL,CACErmC,KAAK,WAIX,CACEua,MAAM,YACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,KACZE,eAAe,CAAC,SAAS,eAE3BksC,OAAO,CACL,CACErmC,KAAK,gBAIX,CACEsmC,QAAO,EACP/rB,MAAM,UACNqsB,KAAKnB,EACLprC,MAAM,CACJJ,MAAM,CAAC,IAAK,KACZ4B,UAAU,UAEZwqC,OAAO,CACL,CACErmC,KAAK,YACL3F,MAAM,CACJ0E,SAAS,MAKjB,CACEunC,QAAO,EACP/rB,MAAM,WACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,KACZ4B,UAAU,UAEZ0qC,YAAY,CACVrsC,WAAW,SACXe,cAAc,UAEhBorC,OAAO,CACL,CACErmC,KAAK,WACL3F,MAAM,CACJ0E,SAAS,IAGb,CACEiB,KAAK,eACLoQ,YAAW,EACX02B,eAAc,EACdzsC,MAAM,CACJsB,SAAS,EACToD,SAAS,MAkBjB,CACEwb,MAAM,GACN+rB,QAAO,EACPjsC,MAAM,CACJJ,MAAM,KAERssC,YAAY,CACVtsC,MAAM,GAERosC,OAAO,CACL,CACErmC,KAAK,SACLjE,MAAM,SACN1B,MAAM,CACJJ,MAAM,EACN0B,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACb8U,UAAU,KACV5M,UAAU,SACV5D,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,SACtCtE,YAAY,SAACxD,GAAD,OAAWmO,EAAKnO,MAAMstB,YAAYttB,EAAMwL,cAM1DzL,KAAKC,SAKbD,KAAKgG,MAAMgjC,gBAAgBlmC,OAAO,GAClCI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqL,GAAG,mBAAmB3O,MAAO,EAAGgB,cAAe,UACnDqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyF,GAAI,EACJ/I,MAAO,EACPe,GAAI,CAAC,EAAE,GACP8T,YAAa,UACb43B,aAAc,yBAEdppC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQopC,GAAT,CACEhrC,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,qBAOF0B,EAAA1D,EAAAC,cAACusC,GAAA,EAADrsC,OAAAC,OAAA,CACE0N,cAAetN,KAAKgG,MAAMgjC,gBAC1BvlC,YAAa,SAACxD,GAAD,OAAWmO,EAAKnO,MAAMstB,YAAYttB,EAAMwL,QACrDoD,KAAM,CACJ,CACEsR,MAAM,WACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdosC,OAAO,CACL,CACErmC,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACEwE,KAAK,eAIX,CACEua,MAAM,OACN+rB,OAA8B,OAAvBlsC,KAAKC,MAAMuN,QAClBvN,MAAM,CACJJ,MAAM,CAAC,IAAM,KAEfosC,OAAO,CACL,CACErmC,KAAK,OACL3F,MAAM,CACJ0E,SAAS,MAKjB,CACEwb,MAAM,MACNqsB,KAAKrB,EACLlrC,MAAM,CACJJ,MAAM,CAAC,KAAKG,KAAKgG,MAAM+iC,gBAAgBjmC,OAAW,OAEpDqpC,YAAY,CACVtrC,cAAc,SACdf,WAAW,cAEbmsC,OAAO,CACL,CACErmC,KAAK,MACL6mC,aAAY,GAEd,CACE7mC,KAAK,mBACLoQ,YAAW,EACX/V,MAAM,CACJ0E,SAAS3E,KAAKC,MAAM8H,SAAW,EAAI,EACnCxG,SAASvB,KAAKC,MAAM8H,SAAW,MAAQ,MAK/C,CACEoY,MAAM,QACNqsB,KAAKpB,EACLnrC,MAAM,CACJJ,MAAM,CAAC,IAAK,KAEdosC,OAAO,CACL,CACErmC,KAAK,WAIX,CACEsmC,QAAO,EACP/rB,MAAM,UACNqsB,KAAKnB,EACLprC,MAAM,CACJJ,MAAM,CAAC,IAAK,KACZ4B,UAAU,UAEZwqC,OAAO,CACL,CACErmC,KAAK,YACL3F,MAAM,CACJ0E,SAAS,MAKjB,CACEwb,MAAM,gBACN+rB,QAAO,EACPjsC,MAAM,CACJJ,MAAM,KAERssC,YAAY,CACVtsC,MAAM,EACNiB,GAAG,CAAC,EAAE,IAERmrC,OAAO,CACL,CACErmC,KAAK,WACL7E,MAAM,CACJiH,SAAS,cAKjB,CACEmY,MAAM,GACN+rB,OAA8B,OAAvBlsC,KAAKC,MAAMuN,QAClBvN,MAAM,CACJJ,MAAM,CAAyB,OAAvBG,KAAKC,MAAMuN,QAAmB,IAAO,EAAI,MAEnD2+B,YAAY,CACVtsC,MAAM,GAERosC,OAAO,CACL,CACErmC,KAAK,SACLjE,MAAO,SAAC1B,GACN,OAAON,OAAOmF,KAAKsJ,EAAKpI,MAAM4iC,iBAAiBl9B,SAASzL,EAAMwL,OAAS,UAAY,WAErFxL,MAAM,CACJJ,MAAM,EACN0B,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACb8U,UAAU,KACVxQ,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,SACtCtE,YAAY,SAACxD,GAAD,OAAWmO,EAAKnO,MAAMstB,YAAYttB,EAAMwL,SAEtDg1B,UAAU,CACRl3B,UAAW,SAACtJ,GACV,OAAON,OAAOmF,KAAKsJ,EAAKpI,MAAM4iC,iBAAiBl9B,SAASzL,EAAMwL,OAAS,UAAY,iBAO3FzL,KAAKC,YAOhBk1B,GAAYn1B,KAAKC,MAAMuN,SAAW+9B,EAAoB3R,SACrD12B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACP2O,GAAI,QACJ3N,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyF,GAAI,EACJ/I,MAAO,EACPe,GAAI,CAAC,EAAE,GACP8T,YAAa,UACb43B,aAAc,yBAEdppC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQopC,GAAT,CACEhrC,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,UAOF0B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,CAAC,SAAS,QAGvB,CAAC,WAAW,gBAAgB,aAAa0H,IAAK,SAACokC,EAASC,GACtD,IAAMC,EAAaz+B,EAAKrK,cAAc2J,gBAAgB,CAAC,QAAQi/B,IAC/D,OACEzpC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,EAAE,GACZ6I,IAAG,QAAAR,OAAU0kC,GACbhsC,GAAIgsC,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1B9rC,GAAI8rC,EAAU,EAAI,CAAC,EAAE,GAAK,GAE1B1pC,EAAA1D,EAAAC,cAACqtC,GAADntC,OAAAC,OAAA,GACMwO,EAAKnO,MADX,CAEE0V,KAAMk3B,EAAWl3B,KACjBvV,KAAMysC,EAAWL,KACjBz8B,MAAO88B,EAAW98B,MAClBoQ,MAAO0sB,EAAWlrC,MAClB8B,YAAc,SAAA4F,GAAC,OAAI+E,EAAKnO,MAAMmsC,YAAX,SAAAlkC,OAAgC2kC,EAAWR,iBAW9ErsC,KAAKgG,MAAM+iC,gBAAgBjmC,OAAO,GAChCI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP2O,GAAI,gBACJ3N,cAAe,UAEfqC,EAAA1D,EAAAC,cAACowB,GAAA,EAAD,CAAO5mB,GAAI,CAAC,EAAE,IAAd,iBACA/F,EAAA1D,EAAAC,cAACusC,GAAA,EAADrsC,OAAAC,OAAA,CACE0N,cAAe3N,OAAOmF,KAAKomC,GAC3Br8B,KAAM,CACJ,CACEsR,MAAM,QACNlgB,MAAM,CACJJ,MAAM,CAAC,GAAI,MAEbosC,OAAO,CACL,CACErmC,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACEwE,KAAK,eAIX,CACEsmC,QAAO,EACP/rB,MAAM,UACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAM,MAEfosC,OAAO,CACL,CACErmC,KAAK,eACL3F,MAAM,CACJ0E,SAAU3E,KAAKC,MAAM8H,SAAW,EAAI,MAK5C,CACEoY,MAAM,aACNqsB,KAAKxsC,KAAK+D,cAAc2J,gBAAgB,CAAC,WAAW,8BACpDzN,MAAM,CACJJ,MAAM,CAAC,IAAK,IACZE,eAAe,CAAC,SAAS,eAE3BksC,OAAO,CACL,CACErmC,KAAK,oBACL3F,MAAM,CACJ0E,SAAU3E,KAAKC,MAAM8H,SAAW,EAAI,MAK5C,CACEoY,MAAM,eACNqsB,KAAKxsC,KAAK+D,cAAc2J,gBAAgB,CAAC,WAAW,0BACpDzN,MAAM,CACJJ,MAAM,CAAC,IAAK,KAEdosC,OAAO,CACL,CACErmC,KAAK,wBACL3F,MAAM,CACJ0E,SAAS,QAgDf3E,KAAKC,MA9GX,CA+GEkM,gBAAiB++B,MAKvBlrC,KAAKgG,MAAM8iC,iBACT5lC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPe,GAAI,CAAC,EAAE,GACP4N,GAAI,mBACJ3N,cAAe,UAEfqC,EAAA1D,EAAAC,cAACowB,GAAA,EAAD,CAAO5mB,GAAI,CAAC,EAAE,IAAd,aACA/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAACstC,GAADptC,OAAAC,OAAA,CACE4hC,KAAMxhC,KAAKgG,MAAM8iC,gBACjBrlC,YAAczD,KAAKC,MAAM8H,SAAW,SAAC9H,GAAD,MAA8B,YAAnBA,EAAMghC,IAAI36B,QAAsBrG,EAAMghC,IAAI+L,cAAgB5+B,EAAKrK,cAAckpC,WAAWhtC,EAAMghC,IAAI+L,eAAgB,KACjKn+B,KAAM,CACJ,CACEsR,MAAM,WACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdosC,OAAO,CACL,CACE1nC,KAAK,QACLu8B,KAAK,CAAC,iBACN7gC,MAAM,CACJkB,GAAG,CAAC,EAAE,GACNwE,KAAK3F,KAAKC,MAAM8H,SAAW,QAAU,UAGzC,CACExD,KAAK,OACLu8B,KAAK,CAAC,mBAIZ,CACE3gB,MAAM,UACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAM,MAEfosC,OAAO,CACL,CACE1nC,KAAK,SACLu8B,KAAK,CAAC,WACN7gC,MAAM,CACJ0E,SAAU,IAGd,CACEJ,KAAK,OACLu8B,KAAK,CAAC,SACN7gC,MAAM,CACJuJ,GAAG,CAAC,EAAE,GACNzI,MAAM,CACJW,cAAc,iBAMxB,CACEwqC,QAAO,EACP/rB,MAAM,kBACNlgB,MAAM,CACJJ,MAAM,IACNE,eAAe,CAAC,SAAS,eAE3BksC,OAAO,CACL,CACE1nC,KAAK,OACLu8B,KAAK,CAAC,kBACN7gC,MAAM,MAMZ,CACEisC,QAAO,EACP/rB,MAAM,WACNlgB,MAAM,CACJJ,MAAM,IACNE,eAAe,CAAC,SAAS,eAE3BksC,OAAO,CACL,CACE1nC,KAAK,OACLu8B,KAAK,CAAC,qBACN7gC,MAAM,MAMZ,CACEkgB,MAAM,SACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,KACZE,eAAe,CAAC,SAAS,eAE3BksC,OAAO,CACL,CACE1nC,KAAK,OACLqB,KAAK,SACLk7B,KAAK,CAAC,cACN7gC,MAAM,CACJkB,GAAG,CAAC,EAAE,GACNwE,KAAK3F,KAAKC,MAAM8H,SAAW,QAAU,UAGzC,CACEnC,KAAK,SACLk7B,KAAK,CAAC,UACN7gC,MAAM,CACJc,MAAM,CACJW,cAAc,kBAMxB,CACEye,MAAM,GACN+rB,QAAO,EACPjsC,MAAM,CACJJ,MAAM,KAERssC,YAAY,CACVtsC,MAAM,GAERosC,OAAO,CACL,CACE1nC,KAAK,SACLqB,KAAK,SACLjE,MAAM,aACN8+B,UAAU,CACRvf,SAAS,SAACjhB,GAAD,MAA+B,YAAnBA,EAAMghC,IAAI36B,SAEjCrG,MAAM,CACJJ,MAAM,EACN0B,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACb8U,UAAU,KACV5M,UAAU,SACV5D,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,SACtCtE,YAAY,SAACxD,GAAD,MAA8B,YAAnBA,EAAMghC,IAAI36B,QAAsBrG,EAAMghC,IAAI+L,cAAgB5+B,EAAKrK,cAAckpC,WAAWhtC,EAAMghC,IAAI+L,qBAM/HhtC,KAAKC,UAOjBD,KAAKgG,MAAM+iC,gBAAgBjmC,OAAO,GAChCI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP2O,GAAG,sBACH3N,cAAe,UAEfqC,EAAA1D,EAAAC,cAACowB,GAAA,EAAD,CAAO5mB,GAAI,CAAC,EAAE,IAAd,sBACA/F,EAAA1D,EAAAC,cAACytC,GAADvtC,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqN,cAAetN,KAAKgG,MAAM+iC,oBAKhC/oC,KAAKC,MAAMuN,SAAWxN,KAAKgG,MAAM+iC,gBAAgBjmC,OAAO,GACtDI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,CAAC,EAAE,GACPf,MAAO,EACP2O,GAAI,eACJ3N,cAAe,UAEfqC,EAAA1D,EAAAC,cAACowB,GAAA,EAAD,CAAO5mB,GAAI,CAAC,EAAE,IAAd,gBACA/F,EAAA1D,EAAAC,cAACoK,GAAA,EAADlK,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqN,cAAe,GACfuB,KAAM,CACJ,CACEsR,MAAOngB,KAAKC,MAAM8H,SAAW,GAAK,OAClC9H,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdosC,OAAO,CACL,CACErmC,KAAK,OACL3F,MAAM,CACJkB,GAAG,CAAC,EAAE,KAGV,CACEyE,KAAK,OACLsmC,QAAO,KAIb,CACE/rB,MAAM,SACN+rB,QAAO,EACPjsC,MAAM,CACJJ,MAAM,KAERosC,OAAO,CACL,CACErmC,KAAK,YAIX,CACEua,MAAM,OACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,MAEdosC,OAAO,CACL,CACErmC,KAAK,UAIX,CACEua,MAAM,SACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,KACZE,eAAe,CAAC,SAAS,eAE3BksC,OAAO,CACL,CACErmC,KAAK,aACL3F,MAAM,CACJkB,GAAG,CAAC,EAAE,KAGV,CACE+qC,QAAO,EACPtmC,KAAK,YAIX,CACEua,MAAM,SACNlgB,MAAM,CACJJ,MAAM,KAERosC,OAAO,CACL,CACErmC,KAAK,YAIX,CACEua,MAAM,QACNlgB,MAAM,CACJJ,MAAM,CAAC,IAAK,IACZE,eAAe,CAAC,SAAS,eAE3BksC,OAAO,CACL,CACErmC,KAAK,YACL3F,MAAM,CACJkB,GAAG,CAAC,EAAE,GACNC,OAAO,CAAC,QAAQ,WAGpB,CACE8qC,QAAO,EACPtmC,KAAK,qBA9kDvB1C,EAAA1D,EAAAC,cAACH,EAAA,EAAD,CACEe,UAAW,CACT8sC,SAAS,EACT3rC,WAAW,GAEbrB,YAAa,CACXS,GAAG,EACH+E,KAAK,QAEPzF,UAAW,CACTqO,UAAU,OACV1N,cAAc,UAEhBT,KAAM,iCArQOE,qDCwwCZ8sC,8MA9vCbpnC,MAAQ,CACNqnC,UAAS,EACTC,YAAY,GACZC,YAAW,EACXniC,OAAO,UACPg/B,cAAc,GACdl+B,YAAY,KACZwa,WAAW,CACT8mB,QAAQ,CACNz+B,OAAO,KACP9E,SAAQ,GAEVwjC,MAAM,CACJ1+B,OAAO,KACP9E,SAAQ,IAGZyjC,WAAU,EACVpD,aAAa,GACbqD,cAAc,KACdjc,eAAc,EACdkc,cAAa,EACbC,cAAa,EACb5hC,cAAc,KACd0lB,eAAc,EACdmc,eAAe,KACfC,gBAAe,EACfC,gBAAe,EACf7hC,gBAAgB,KAChBsN,iBAAiB,KACjBw0B,iBAAgB,EAChBC,kBAAiB,EACjBC,kBAAiB,EACjBC,oBAAmB,EACnBvM,oBAAoB,KACpB+B,oBAAoB,KACpByK,qBAAoB,EACpBC,2BAA0B,EAC1B7R,2BAA2B,QAI7B14B,cAAgB,OA+ZhBo4B,UAAY,SAAC/wB,GACX,GAAe,OAAXA,GAAmB,CAAC,UAAU,UAAUM,SAASN,EAAOC,eAAe,CAEzE1E,EAAKC,SAAS,CACZwE,SACAgjC,oBAHyB,QAc/BG,yBAA2B,SAACJ,GAC1BxnC,EAAKC,SAAS,CACZunC,wBAIJK,kBAAoB,SAACjjC,GACnB5E,EAAK8nC,aAAY,+EAnbbzuC,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,YACLlE,KAAK0uC,sMAGkBluC,EAAUC,sFACjCT,KAAKkE,YAEoB1D,EAAUmuC,UAAUC,SAAW5uC,KAAKC,MAAM0uC,UAAUC,QAE3E5uC,KAAK4G,SAAS,CACZqnC,iBAAgB,GADlBtuC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAEE,SAAA+P,IAAA,OAAAqL,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,cAAA2P,EAAA3P,KAAA,EACM5T,EAAKi6B,aADX,wBAAA1W,EAAAnP,SAAAgP,EAAAvnB,UAK4BS,EAAUgZ,mBAAqBzZ,KAAKgG,MAAMyT,mBAElExN,EAAgBtM,OAAOmF,KAAK9E,KAAKgG,MAAMmG,iBAAiB,GAC9DnM,KAAKg8B,YAAY/vB,IAGbmhB,EAAuB3sB,EAAUwL,gBAAkBjM,KAAKgG,MAAMiG,cAC9D4iC,EAA0BpuC,EAAUytC,mBAAqBluC,KAAKgG,MAAMkoC,iBACpE9W,EAA0B32B,EAAU6tC,4BAA8BtuC,KAAKgG,MAAMsoC,2BAC/ElhB,GAAwBgK,GAA2ByX,IACrD7uC,KAAKyuC,6QAOS,EAEVK,EAAkB,SAACvjC,EAAGgb,GAC1B,IAAMkL,EAA4B,YAAdlmB,EAAGjF,OAGjBwsB,EAAY,CAChBC,YAAa,UACbC,cAAe,gBAGbzM,IACFuM,EAAUG,WAAa9kB,EAAKpK,cAAcmvB,oBAAoB3M,KAI5DA,GAA8B,UAArBuM,EAAUxsB,SACrB6H,EAAKpK,cAAcovB,yBAAyBL,GAG9C3kB,EAAKvH,SAAS,SAACnG,GAAD,MAAgB,CAC5BytC,iBAAiBzc,EACjB/K,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER8mB,QAAQ,CACNz+B,OAAO,KACP9E,SAAQ,SAMV8kC,EAAyB,SAACxjC,GAC9B,IAAMwD,EAASxD,EAAG6nB,gBAClBjlB,EAAKvH,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER8mB,QAAQ7tC,OAAAkH,EAAA,EAAAlH,CAAA,GACHc,EAAUimB,WAAW8mB,QADnB,CAELz+B,iBAMR/O,KAAKC,MAAMs0B,0BAA0Bv0B,KAAKgG,MAAM67B,oBAAoBmN,kBAAkBppC,KAAM,eAAgB,EAAC,GAAO,KAAMkpC,EAAiBC,GAE3I/uC,KAAK4G,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER8mB,QAAQ7tC,OAAAkH,EAAA,EAAAlH,CAAA,GACHc,EAAUimB,WAAW8mB,QADnB,CAELvjC,SApDU,oUA0DAmkC,kCAEVa,EAAwBjvC,KAAKgG,MAAM67B,oBAAoBmN,2BAEvD5nB,QAAQkD,IAAI,CAChBtqB,KAAKC,MAAM+0B,aAAaia,EAAsBrpC,KAAKqpC,EAAsB/5B,QAAQ+5B,EAAsBha,KACvGj1B,KAAKC,MAAM+0B,aAAah1B,KAAKgG,MAAMkG,YAAYtG,KAAK5F,KAAKgG,MAAMkG,YAAYgJ,QAAQlV,KAAKgG,MAAMkG,YAAY+oB,8BAOlG7N,QAAQkD,IAAI,CACpBtqB,KAAK+D,cAAcmrC,4BAA4BD,EAAsB/5B,SACrElV,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAM67B,oBAAoBmN,kBAAkBppC,KAAK,aAC7F5F,KAAK+D,cAAcmxB,mBAAmBl1B,KAAKgG,MAAMkG,YAAYtG,KAAKqpC,EAAsB/5B,QAAQlV,KAAKC,MAAMuN,8CAN3G2hC,OACArB,OACAQ,OAQEZ,GAAY,GACXY,GAA6BW,EAAsBG,WAAwD,IAA3CH,EAAsBG,UAAUtsC,SAC7FusC,EAAeJ,EAAsBG,UAAU,GACrD1B,EAA8C,qBAA3B2B,EAAa3B,WAA4B2B,EAAa3B,UACnE4B,EAActvC,KAAK+D,cAAc2J,gBAAgB,CAAC,SAAS1N,KAAKgG,MAAMkG,YAAYtG,KAAK,gBACvF2pC,EAAiBvvC,KAAK+D,cAAcu6B,kBAAkBt+B,KAAKgG,MAAMkG,YAAYtG,MACnF8nC,EAAYA,GAAa6B,KAAoBD,QAAuDpoC,IAAxCqoC,EAAeC,QAAQF,KAG/Ej9B,EAAW,GACXi7B,EAAc,GACdhD,EAAe,GACfF,EAAgB,GAClB2D,GAAiB,EAErBD,EAAiBA,GAAkB,EAC1B2B,EAAa,eAAGA,GAAcvhC,SAAS4/B,sCAKpC1mB,QAAQkD,IAAI,CACpBtqB,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAM67B,oBAAoBmN,kBAAkBppC,KAAK,cAAc,CAAC6pC,IAC5GzvC,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAM67B,oBAAoBmN,kBAAkBppC,KAAK,sBAAsB,CAAC6pC,IACpHzvC,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAM67B,oBAAoBmN,kBAAkBppC,KAAK,gBAAgB,CAAC5F,KAAKC,MAAMuN,QAAQiiC,0CANjIC,OACAC,OACAC,OAMEF,GAA6B,OAAfA,IAChBpC,EAAYmC,GAAczvC,KAAK+D,cAAc4W,iBAAiB+0B,EAAW1vC,KAAKgG,MAAMkG,YAAYvH,WAE7E,OAAjBirC,IACFD,EAAc3vC,KAAK+D,cAAc4W,iBAAiBg1B,EAAY,KAC9DC,EAAe5vC,KAAK+D,cAAc4W,iBAAiBi1B,EAAa5vC,KAAKgG,MAAMkG,YAAYvH,WACtEmW,GAAG,KAClBsvB,EAAcqF,GAAcG,EAE5BtF,EAAamF,GAAcG,EAAax6B,MAAMu6B,GAAanmB,IAAI8jB,EAAYmC,IACvEnF,EAAamF,GAAY30B,GAAG60B,KAC9BrF,EAAamF,GAAcE,GAGzBF,EAAa3B,IACfC,GAAiB,aAzByC0B,4BA+BlEp9B,EAAS+3B,cAAgBA,EAEnBwD,EAAgBxD,GAAiBzqC,OAAOmF,KAAKslC,GAAetnC,OAAO,EAEnE6qC,EAAgBwB,GAAmBA,EAAgBrsC,OAASqsC,EAAgB,GAAK,KACjFU,EAAmB7vC,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,iBAC/D2gC,EAAsBwB,EAAiBC,eAE7Cz9B,EAASq7B,UAAYA,EACrBr7B,EAASsf,eAAgB,EACzBtf,EAAS27B,gBAAiB,EAC1B37B,EAAS47B,iBAAkB,EAC3B57B,EAAS67B,kBAAmB,EAC5B77B,EAASi7B,YAAcA,EACvBj7B,EAASu7B,aAAeA,EACxBv7B,EAASi4B,aAAeA,EACxBj4B,EAASs7B,cAAgBA,EACzBt7B,EAASy7B,eAAiBA,EAC1Bz7B,EAAS07B,eAAiBA,EAC1B17B,EAAS+7B,mBAAqBA,EAC9B/7B,EAASg8B,oBAAsBA,EAC/Bh8B,EAASg7B,SAAWU,GAAkBH,EAEtCv7B,EAASk7B,WAAac,IAAwBN,EAC9C17B,EAASi8B,0BAA4BA,EACrCj8B,EAASjH,OAASwiC,GAAgBv7B,EAASg7B,SAAW,SAAW,UAEjErtC,KAAK4G,SAASyL,mRAMR09B,EAA0B,YAC1B/vC,KAAK+D,cAAcqT,aAAazX,OAAOmF,KAAK9E,KAAKC,MAAM+2B,UAAU7qB,iBAAjE,eAAA6jC,EAAArwC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAkF,SAAA4R,EAAO3d,GAAP,IAAAS,EAAA,OAAA0mB,EAAApzB,EAAAoY,KAAA,SAAA2R,GAAA,cAAAA,EAAAzR,KAAAyR,EAAAxR,MAAA,UAChF7L,EAAckC,EAAKnO,MAAM+2B,UAAU7qB,gBAAgBV,GACnC2C,EAAKrK,cAAcu6B,kBAAkBpyB,EAAYT,SACjDS,EAAY+oB,IAHoD,CAAA1L,EAAAxR,KAAA,eAAAwR,EAAAxR,KAAA,EAI9E3J,EAAKnO,MAAM+0B,aAAa9oB,EAAYT,MAAMS,EAAYgJ,QAAQhJ,EAAY+oB,KAJI,OAMtF8a,EAAwB7jC,EAAYg+B,WAAY,EANsC,wBAAA3gB,EAAAhR,SAAA6Q,EAAAppB,SAAlF,gBAAAwY,GAAA,OAAAw3B,EAAAv3B,MAAAzY,KAAAiH,YAAA,YASA28B,EAAsBjkC,OAAOmF,KAAKirC,GAAyBxnC,IAAK,SAAA2hC,GACpE,IAAM+F,EAAiB7hC,EAAKrK,cAAc2J,gBAAgB,CAAC,aAAaw8B,IACxE,MAAO,CACLnoC,MAAMmoC,EACNv0B,KAAKs6B,EAAet6B,KACpBhU,MAAMsuC,EAAe9vB,WAMEyjB,EAAoB9gC,OAAO,IAChD2W,EAAmBmqB,EAAoB,GAAG7hC,OAC1CkK,EAAgBjM,KAAKC,MAAM0uC,UAAUC,QAAU5uC,KAAKC,MAAM+2B,UAAU7qB,gBAAgBnM,KAAKC,MAAM0uC,UAAUC,QAAU5uC,KAAKC,MAAM0uC,UAAUC,OAAS,QAE7I/M,EAAsB7hC,KAAKC,MAAM+2B,UAAU7qB,gBAAgBF,GACjEA,EAAgB41B,EAAoBlF,UACpCljB,EAAmBooB,EAAoBqI,UAGzClqC,KAAK4G,SAAS,CACZg9B,uBACA,WACAx1B,EAAK8hC,eAAez2B,EAAiBxN,uLAcrBwN,8FAAiBxN,iCAAc,KAC7CE,EAAkBxM,OAAOmF,KAAK9E,KAAKC,MAAM+2B,UAAU7qB,iBACtDzF,OAAO,SAAAgC,GAAG,OAAIixB,EAAK15B,MAAM+2B,UAAU7qB,gBAAgBzD,GAAKwhC,WAAazwB,IACrEigB,OAAO,SAACyW,EAAKznC,GACZ,IAAMwD,EAAcytB,EAAK15B,MAAM+2B,UAAU7qB,gBAAgBzD,GACnD0nC,EAAkBzW,EAAK15B,MAAM2jC,oBAAoBnqB,GAAkBvN,EAAYywB,WAOrF,OALAzwB,EAAY+oB,IAAMmb,EAAgBnb,IAClC/oB,EAAYT,MAAQ2kC,EAAgB3kC,MACpCS,EAAYgJ,QAAUk7B,EAAgBl7B,QACtChJ,EAAYvH,SAAWyrC,EAAgBzrC,SACvCwrC,EAAIjkC,EAAYywB,WAAazwB,EACtBikC,GACN,IAELnwC,KAAK4G,SAAS,CACZuF,kBACAsN,oBACA,WACIxN,GACF0tB,EAAKqC,YAAY/vB,oLAKJA,iGACX41B,EAAsB7hC,KAAKgG,MAAMmG,gBAAgBF,GACjDokC,EAA0BrwC,KAAKC,MAAM2jC,oBAAoB/B,EAAoBqI,UAE7EkG,EAAkBC,EAAwBxO,EAAoBp2B,QAE9DS,EAAc,CAClBtG,KAAKwqC,EAAgB3kC,MACrBA,MAAM2kC,EAAgB3kC,MACtByJ,QAAQk7B,EAAgBl7B,QACxBvQ,SAASyrC,EAAgBzrC,WAIfq9B,KAAOoO,EAAgBpO,KAG7BsO,EAAc,CAClBrb,IAAImb,EAAgBnb,IACpBrvB,KAAKwqC,EAAgB3kC,MACrBA,MAAM2kC,EAAgB3kC,MACtByJ,QAAQk7B,EAAgBl7B,SAGpB85B,EAAoBnN,EAAoBmN,kBAG1CoB,EAAgBG,kBAClBvB,EAAkBI,UAAU,GAAGxpC,KAAOwqC,EAAgBG,iBAGxDrkC,EAAYskC,UAAY,CACtB5W,SAAQ,EACR0W,cACAtB,oBACAZ,oBAAmB,aAGfpuC,KAAKC,MAAMwwC,iBAAiB5O,EAAoBqI,SAASkG,EAAgB3kC,eAE/EzL,KAAK4G,SAAS,CACZsF,cACAD,gBACA41B,uBACA,WAEA,GAAIA,EAAoBqI,WAAapP,EAAK90B,MAAMyT,iBAAiB,CAC/D,IAAMA,EAAmBooB,EAAoBqI,SAC7CpP,EAAKoV,eAAez2B,sQAMnBzZ,KAAKgG,MAAM+nC,wDACP,cAGO,EACO,EACjB2C,EAAU/wC,OAAOmF,KAAK9E,KAAKgG,MAAMokC,eAAe,GAEhDuG,EAAgB,SAACplC,EAAGgb,GACxB,IAAMkL,EAA4B,YAAdlmB,EAAGjF,OAGjBwsB,EAAY,CAChBC,YAAa,QACbC,cAAa,eACbiB,WAAY/lB,SAVO,GAWnB+kB,WAAYsI,EAAKt7B,MAAMgM,eAGrBsa,IACFuM,EAAUG,WAAasI,EAAKx3B,cAAcmvB,oBAAoB3M,KAI5DA,GAA8B,UAArBuM,EAAUxsB,SACrBi1B,EAAKx3B,cAAcovB,yBAAyBL,GAG9CyI,EAAK30B,SAAS,SAACnG,GAAD,MAAgB,CAC5ButC,eAAevc,EACf/K,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER+mB,MAAM,CACJ1+B,OAAO,KACP9E,SAAQ,SAMV2mC,EAAuB,SAACrlC,GAC5B,IAAMwD,EAASxD,EAAG6nB,gBAClBmI,EAAK30B,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER+mB,MAAM9tC,OAAAkH,EAAA,EAAAlH,CAAA,GACDc,EAAUimB,WAAW+mB,MADrB,CAEH1+B,iBAMR/O,KAAKC,MAAMs0B,0BAA0Bv0B,KAAKgG,MAAM67B,oBAAoBmN,kBAAkBppC,KAAM,WAAY,CAAC8qC,GAAU,KAAMC,EAAeC,GAExI5wC,KAAK4G,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER+mB,MAAM9tC,OAAAkH,EAAA,EAAAlH,CAAA,GACDc,EAAUimB,WAAW+mB,MADrB,CAEHxjC,SAxDU,4PA+DhBjK,KAAK4G,SAAS,CACZinC,cAAa,8IAKf7tC,KAAK4G,SAAS,CACZ+qB,eAAc,oFAII2c,mEAEhBA,IAA8BtuC,KAAKgG,MAAMsoC,2BAC3CtuC,KAAK4G,SAAS,CACZ0nC,6KAec5c,GAClB1xB,KAAK4G,SAAS,CACZ8qB,mDAcK,IAAAmf,EAAA7wC,KAEP,IAAKA,KAAKgG,MAAMyT,iBACd,OAAO,KAGT,IAAMi0B,EAAY1tC,KAAKgG,MAAM0rB,eAAiB1xB,KAAKgG,MAAM0nC,UAEnDiC,EAAc3vC,KAAKgG,MAAMskC,cAAgB3qC,OAAO8J,OAAOzJ,KAAKgG,MAAMskC,cAAcxnC,OAAO,EAAInD,OAAO8J,OAAOzJ,KAAKgG,MAAMskC,cAAc,GAAK,KACvIsF,EAAe5vC,KAAKgG,MAAMokC,eAAiBzqC,OAAO8J,OAAOzJ,KAAKgG,MAAMokC,eAAetnC,OAAO,EAAInD,OAAO8J,OAAOzJ,KAAKgG,MAAMokC,eAAe,GAAK,KAC3IvY,EAAoB6b,GAAa1tC,KAAKgG,MAAM6nC,eAAmBH,GAAa1tC,KAAKgG,MAAMsoC,0BACvFwC,EAAkB9wC,KAAKgG,MAAMsnC,aAAettC,KAAKgG,MAAMsnC,YAAYttC,KAAKgG,MAAM8nC,iBAAmB9tC,KAAKgG,MAAMsnC,YAAYttC,KAAKgG,MAAM8nC,gBAAgBhzB,GAAG,GACtJi2B,EAAuB/wC,KAAKgG,MAAMyT,iBAAmBzZ,KAAKgG,MAAM49B,oBAAoBnX,KAAM,SAAA2L,GAAC,OAAIA,EAAEr2B,QAAU8uC,EAAK7qC,MAAMyT,mBAAqBzZ,KAAKgG,MAAM49B,oBAAoB,GAwGhL,OACE1gC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP6F,GAAI,CAAC,EAAE,GACP5F,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,KACVC,WAAY,UACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,GADN,wBAKAsC,EAAA1D,EAAAC,cAAC+tB,EAAA,EAAD7tB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2F,KAAM,WACN0nB,cAAc,EACdhB,aAAcykB,EACdxkB,kBAjIgB,SAAAtsB,GACxB,IAAM0B,EAAQ1B,EAAM0B,MACduK,EAAc,CAClByJ,KAAK1V,EAAMqR,KAAKqE,MAGlB,OACEzS,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,UAEZoD,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPuK,YAAaA,EACbygB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHtB,MAAM,MACNuB,OAAO,UAIb8B,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPgrB,UAAW,CACT/mB,KAAK,YACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,mBA+FVmrB,QAASrsB,KAAKgG,MAAM49B,oBACpBx6B,SAAUpJ,KAAKkwC,eAAevhC,KAAK3O,MACnCwsB,qBAxFmB,SAAAvsB,GAE3B,IACM+sB,GAA4D,IADlD/sB,EAAM+sB,YAAYX,QACNY,QAAQhtB,EAAM+sB,YAAYjrB,OAAgB9B,EAAM+sB,YAAYjrB,MAAQ,KAEhG,IAAKirB,EACH,OAAO,KAGT,IAAMrrB,EAAQqrB,EAAYrrB,MACpBuK,EAAc,CAClByJ,KAAKqX,EAAYrX,MAGnB,OACEzS,EAAA1D,EAAAC,cAAC0D,EAAA,EAADxD,OAAAC,OAAA,CACEmB,MAAO,CACLE,KAAK,KAEPlB,eAAgB,iBACZE,EAAMitB,YAEVhqB,EAAA1D,EAAAC,cAAC0D,EAAA,EAADxD,OAAAC,OAAA,CACEoF,EAAG,EACHnF,MAAO,GACHI,EAAMitB,WAHZ,CAIEptB,WAAY,SACZe,cAAe,MACfE,MAAO,CAAC+G,OAAO,WACf/H,eAAgB,eAEhBmD,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPuK,YAAaA,EACbygB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHC,OAAO,UAIb8B,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPgrB,UAAW,CACT/mB,KAAK,YACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,uBA2CZlB,KAAKgG,MAAMmG,iBACTjJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,GADN,4BAKAsC,EAAA1D,EAAAC,cAAC2sB,EAAA,EAADzsB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEuO,GAAI,aACJue,aAAa,EACbO,cAAc,EACdlkB,SAAUpJ,KAAKg8B,YAAYrtB,KAAK3O,MAChCiM,cAAejM,KAAKgG,MAAMiG,cAC1BE,gBAAiBnM,KAAKgG,MAAMmG,qBAKjCnM,KAAKgG,MAAMioC,iBACV/qC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7E,cAAe,UAEfqC,EAAA1D,EAAAC,cAACH,EAAA,EAAD,CACEY,UAAW,CACTW,cAAc,OAEhBV,YAAa,CACXwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,KAAM,2BAMXJ,KAAKC,MAAMuN,QAmCRxN,KAAKgG,MAAMioC,iBAAoBjuC,KAAKgG,MAAM67B,sBAAwB7hC,KAAKgG,MAAMunC,YAAcvtC,KAAKgG,MAAMqnC,WACxGnqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACF2C,GAAG,EACHjC,GAAG,IAGLxC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAOisB,EAAmB,WAAa,WACvC3wB,MAAQ2wB,EAAmB7xB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAAY,aAErF1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJjI,SAAU,EACVL,MAAO,WACPO,UAAW,QAGTisC,EAAY,uBAAyB,uCAI3CxqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAQ5F,KAAKgG,MAAM4nC,cAAgB5tC,KAAKgG,MAAM+nC,eAAkB,WAAa,WAC7E7sC,MAASlB,KAAKgG,MAAM4nC,cAAgB5tC,KAAKgG,MAAM+nC,eAAkB/tC,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAAY,aAE3H1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJjI,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,gBAMgBzB,KAAKgG,MAAMiG,gBAG7B/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAO5F,KAAKgG,MAAM+nC,eAAiB,WAAa,SAChD7sC,MAAQlB,KAAKgG,MAAM+nC,eAAiB/tC,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAAY,aAE9F1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJjI,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,2BAOEyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJhI,WAAY,EACZN,MAAO,UACP6B,QAAS,SACT6G,WAAY,UACZpG,QAAU,SAAA6F,GAAC,OAAIwnC,EAAK5wC,MAAM+wC,iBAAiB,2BAA2BH,EAAK9sC,cAAc2J,gBAAgB,CAAC,WAAW,qCANvH,iBAYJxK,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAO5F,KAAKgG,MAAMgoC,eAAiB,WAAa,SAChD9sC,MAAQlB,KAAKgG,MAAMgoC,eAAiBhuC,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAAY,aAE9F1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,cAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJjI,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,cAMczB,KAAKgG,MAAMkG,YAAY81B,KAAKv2B,OAE1CvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqoC,UAAW,MACXC,QAAO,oFAAAvjC,OAAsFlI,KAAKgG,MAAMkG,YAAY81B,KAAKv2B,QAEzHvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJ7D,KAAM,QACNC,KAAM,UACN1E,MAAO,UACPH,MAAO,CACL+G,OAAO,mBA3JvB5E,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFU,GAAG,IAGLxC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,QACtCnC,KAAM,QACN1E,MAAO,aAETgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,CAAC,EAAE,GACPnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQAyB,EAAA1D,EAAAC,cAACyW,EAAA,EAAD,CACExS,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,KAEX4D,YAAazD,KAAKC,MAAM6F,2BAL1B,aAgJN9F,KAAKgG,MAAMioC,iBAAmBjuC,KAAKC,MAAMuN,SAAWxN,KAAKgG,MAAMmG,iBAAmBnM,KAAKgG,MAAMiG,eAC3F/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKtD,MAAO,IAEPgyB,GAAoB7xB,KAAKgG,MAAMqnC,WAC9BnqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7E,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,sBAGAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFnF,MAAM,IACNuxB,YAAY,WACV,OAAOyf,EAAK7qC,MAAMunC,WAAasD,EAAK1U,UAAU,WAAa,OAG/Dt0B,eAAe,EACfopC,YAAcjxC,KAAKgG,MAAMunC,WACzBj9B,SAAiC,YAAtBtQ,KAAKgG,MAAMoF,QAEtBlI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE8F,GAAI,EACJnJ,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAACgQ,GAAA,EAAD,CACEN,YAAa,CACX/D,OAAO,WAETuhB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,MAIT+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,GAFd,aAQJ0B,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFnF,MAAM,IACNuxB,YAAY,WACV,OAAOyf,EAAK7qC,MAAMqnC,SAAWwD,EAAK1U,UAAU,UAAY,OAG5Dt0B,eAAe,EACfopC,YAAcjxC,KAAKgG,MAAMqnC,SACzB/8B,SAAiC,WAAtBtQ,KAAKgG,MAAMoF,QAEtBlI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE8F,GAAI,EACJnJ,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAACgQ,GAAA,EAAD,CACEN,YAAa,CACX/D,OAAO,UAETuhB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,MAIT+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,GAFd,aAYVxB,KAAKgG,MAAM2rB,eAAuC,YAAtB3xB,KAAKgG,MAAMoF,QAAwBpL,KAAKgG,MAAM0nC,WAAa1tC,KAAKgG,MAAMmoC,mBAAqBnuC,KAAKgG,MAAMooC,mBAChIlrC,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTiC,GAAG,EACHC,GAAG,EACHjC,GAAG,EACH3C,QAAQ,OACRjD,WAAW,SACXe,cAAc,SACdd,eAAe,WAGjBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNzE,MAAO,WACP0E,KAAM,qBAER1C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAEVzB,KAAKgG,MAAMiG,cANd,iIASF/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJiwB,UAAU,EACVzsB,QAASlJ,KAAKgG,MAAM0rB,cACpB/vB,MAAK,8CACLyH,SAAW,SAAAC,GAAC,OAAIwnC,EAAKjb,oBAAoBvsB,EAAEgN,OAAOnN,cAGnDlJ,KAAKgG,MAAM2rB,eAAuC,YAAtB3xB,KAAKgG,MAAMoF,QAAwBpL,KAAKgG,MAAM0nC,WAAa1tC,KAAKgG,MAAMmoC,mBAAqBnuC,KAAKgG,MAAMooC,oBACrIlrC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6B,EAAG,EACHU,GAAI,EACJ7F,MAAO,EACPwB,aAAc,EACdvB,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE1B,UAAW,SACXmI,WAAY,UACZpG,QAASxD,KAAK2xB,cAAchjB,KAAK3O,OAHnC,2CAWkB,YAAtBA,KAAKgG,MAAMoF,OACTpL,KAAKgG,MAAMqoC,oBACTnrC,EAAA1D,EAAAC,cAACyxC,GAAA,EAADvxC,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkxC,aAAa,EACbzD,UAAWA,EACX0D,eAAe,EACfC,iBAAiB,EACjBC,qBAAqB,EACrBC,cAAe,eACf5lB,SAAU,uBACVzf,YAAalM,KAAKgG,MAAMkG,YACxBD,cAAejM,KAAKgG,MAAMiG,cAC1BulC,gBAAiB,SAAAC,GAAS,MAAI,CAACA,IAC/Bh4B,iBAAkBzZ,KAAKC,MAAMwZ,iBAC7Bi4B,eAAgB1xC,KAAK0xC,eAAe/iC,KAAK3O,MACzC0yB,gBAAiB1yB,KAAK0yB,gBAAgB/jB,KAAK3O,MAC3CwuC,kBAAmBxuC,KAAKwuC,kBAAkB7/B,KAAK3O,MAC/CuuC,yBAA0BvuC,KAAKuuC,yBAAyB5/B,KAAK3O,MAC7D2xC,cAAa,gBAAAzpC,OAAkBlI,KAAKgG,MAAMiG,cAA7B,+CAAA/D,OAAwFlI,KAAKgG,MAAMkG,YAAY81B,KAAKv2B,MAApH,OAEbvI,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFU,GAAG,IAGLxC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAM,WACN1E,MAAO,WACPyE,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,UAExC7E,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,sBAMsBzB,KAAKgG,MAAMiG,cANjC,uBAYN/I,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFiE,GAAG,IAGL/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVL,MAAO,WACPO,UAAW,UAHb,+CAWNyB,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFU,GAAG,IAIH1F,KAAKgG,MAAM0gB,WAAW+mB,MAAMxjC,QAC1B/G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC6mB,EAAA,EAAD,CAAesB,KAAM5nB,KAAKC,MAAM2nB,KAAM+D,SAAQ,qBAAwBD,WAAU,gCAAmCjpB,KAAMzC,KAAKgG,MAAM0gB,WAAW+mB,MAAM1+B,UAErJ/O,KAAKgG,MAAMgoC,eACb9qC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAM,UACND,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,QACtC7G,MAAOlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,YAErD1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,CAAC,EAAE,GACPnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,wCAMwCzB,KAAKgG,MAAMkG,YAAY81B,KAAKv2B,MANpE,KAQAvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJjE,UAAW,SACXmI,WAAY,UACZpG,QAAU,SAAA6F,GAAC,OAAIwnC,EAAK5wC,MAAMmsC,YAAYyE,EAAK7qC,MAAM67B,oBAAoBqI,SAAS,IAAI2G,EAAK7qC,MAAM67B,oBAAoBlF,aAJnH,wBASA38B,KAAKgG,MAAM+nC,eACb7qC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,QACtC7G,MAAO,WACP0E,KAAM,eAER1C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVL,MAAO,WACPO,UAAW,UAHb,+BAK8ByB,EAAA1D,EAAAC,cAAA,WAL9B,0BAK4DkwC,EAAYhjC,QAAQ,GALhF,IAKqF3M,KAAKgG,MAAMkG,YAAY81B,KAAKv2B,OAEjHvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVL,MAAO,UACPO,UAAW,UAHb,2BAK2BzB,KAAKgG,MAAMkG,YAAY81B,KAAKv2B,MALvD,iCAOAvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAACyW,EAAA,EAAD,CACExS,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,IACT0J,UAAUvJ,KAAKC,MAAMkI,MAAMC,OAAOiC,QAEpC5G,YAAc,SAAA4F,GAAC,OAAIwnC,EAAKpD,UAN1B,WAaJvqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNzE,MAAO,WACP0E,KAAM,mBAER1C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,CAAC,EAAE,GACPnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAEXyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CACE1qB,MAAO,YADT,mCAGkCgC,EAAA1D,EAAAC,cAAA,cAASmwC,EAAajjC,QAAQ,GAA9B,IAAmC3M,KAAKgG,MAAMiG,eAHhF,2DAGgKjM,KAAKgG,MAAMkG,YAAY81B,KAAKv2B,MAH5L,QAaZzL,KAAKgG,MAAMsnC,YAAYttC,KAAKgG,MAAM8nC,iBAChC5qC,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFiE,GAAG,IAIHjJ,KAAKgG,MAAM0gB,WAAW8mB,QAAQvjC,QAC5B/G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC6mB,EAAA,EAAD,CAAesB,KAAM5nB,KAAKC,MAAM2nB,KAAM+D,SAAQ,+BAAkCD,WAAU,wCAA2CjpB,KAAMzC,KAAKgG,MAAM0gB,WAAW8mB,QAAQz+B,UAEzK/O,KAAKgG,MAAMkoC,iBACbhrC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,QACtCnC,KAAM,UACN1E,MAAOlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,YAErD1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,CAAC,EAAE,GACPnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,iCAUFyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,IACZN,MAAO,YACPO,UAAW,UAHb,eAKezB,KAAKgG,MAAMsnC,YAAYttC,KAAKgG,MAAM8nC,gBAAgBnhC,QAAQ,GALzE,IAK8E3M,KAAKgG,MAAMiG,eAGvF6kC,GACE5tC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE1B,UAAW,SACXmI,WAAY,UACZpG,QAASxD,KAAKwtC,QAAQ7+B,KAAK3O,OAH7B,iBASFA,KAAKgG,MAAMsnC,YAAYttC,KAAKgG,MAAM8nC,gBAAgB31B,GAAGnY,KAAKgG,MAAM67B,oBAAoB+P,cAClF1uC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,EACJW,SAAU,EACVL,MAAO,UACPO,UAAW,UAJb,wCAMwCzB,KAAK+D,cAAcS,YAAYxE,KAAKgG,MAAM67B,oBAAoB+P,YAAY,GANlH,IAMuH5xC,KAAKgG,MAAMiG,cANlI,oBAWFjM,KAAKgG,MAAM2nC,eACTzqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVL,MAAO,WACPO,UAAW,UAHb,yBAKyBzB,KAAK+D,cAAc8I,YAA+C,IAAnC7M,KAAKgG,MAAM2nC,cAAc9hC,WAAgB+uB,MAAMtf,OAAO,qCA9uCnHhb,wBCqvBZuxC,8MArwBb7rC,MAAQ,CACNuvB,MAAM,KACND,QAAQ,KACRwc,SAAS,KACT/P,UAAU,KACVvQ,WAAW,KACXkE,YAAY,KACZxpB,YAAY,KACZkmB,aAAa,KACbkB,aAAa,KACbrnB,cAAc,KACdqqB,eAAe,KACfE,eAAe,KACfsS,gBAAgB,KAChBiJ,gBAAgB,KAChBC,iBAAiB,KACjBngB,kBAAiB,EACjBkE,mBAAmB,KACnBF,oBAAoB,KACpBgB,sBAAqB,KAIvB9yB,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,YACLlE,KAAKmS,gMAIkB3R,EAAUC,0FACjCT,KAAKkE,cAE2BzD,EAAUuxC,mBAAqBhyC,KAAKgG,MAAMgsC,0CAElE/lC,EAAgBjM,KAAKgG,MAAMgsC,iBAAiBC,WAC5C/lC,EAAcvM,OAAO8J,OAAOzJ,KAAKC,MAAM2jC,qBAAqB,GAAG33B,YAC1CjM,KAAK+D,cAAcq1B,gBAAgBntB,EAAcjM,KAAKC,MAAMuN,gBAAjF4kB,SACAkE,EAAkBt2B,KAAKgG,MAAMswB,eAA4Dt2B,KAAKgG,MAAMswB,eAArDt2B,KAAKC,MAAM0uC,UAAUC,QAAU,QACpF5uC,KAAK4G,SAAS,CACZsF,cACAkmB,eACAnmB,gBACAqqB,2BAIEc,EAA0B32B,EAAUoxB,mBAAqB7xB,KAAKgG,MAAM6rB,iBACpEsF,EAAwB12B,EAAU61B,iBAAmBt2B,KAAKgG,MAAMswB,eAChE4b,EAAoBzxC,EAAU+wB,aAAexxB,KAAKgG,MAAMwrB,YAAcxxB,KAAKgG,MAAMwrB,WAAW1W,GAAG,GAC/Fq3B,EAAkBhlC,KAAKC,UAAU3M,EAAUqxC,YAAc3kC,KAAKC,UAAUpN,KAAKgG,MAAM8rC,WAAa9xC,KAAKgG,MAAMwrB,YAAcxxB,KAAKgG,MAAMwrB,WAAW1W,GAAG,IACpJqc,GAAyB+a,GAAqBC,GAAmB/a,IACnEp3B,KAAKk3B,aAGqB/pB,KAAKC,UAAU3M,EAAU6yB,gBAAkBnmB,KAAKC,UAAUpN,KAAKgG,MAAMstB,eAE/FtzB,KAAKiyB,wMAISvlB,iFAChBA,EAAS1M,KAAK+D,cAAciU,MAAMtL,IACtBpI,UAAWoI,EAAOoO,GAAG,wBAG3B9a,KAAKgG,MAAMqS,YAAcrY,KAAKgG,MAAMosC,SAAWpyC,KAAKgG,MAAMqsC,kCAEtDD,EAAUpyC,KAAKgG,MAAMosC,QACrB/5B,EAAarY,KAAKgG,MAAMqS,WAE9Bi6B,GADIA,EAAiB5lC,EAAO8c,IAAInR,IACAH,MAAMo6B,EAAel9B,MAAMg9B,sBAEpD,CACL1lC,SACA4lC,mDAKC,0RAGiB9gB,iCAAW,KAC/BsgB,EAAW,KACXjc,EAAsB,OAC1BrE,EAAaA,GAAcxxB,KAAKgG,MAAMwrB,cAEpBxxB,KAAK+D,cAAciU,MAAMwZ,GAAY1W,GAAG,yBAChD9a,KAAKgG,MAAMswB,sBACZ,gBAMA,kBACA,2CANHT,EAAsB,CACpB30B,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAClDxK,KAAI,kBAAA8H,OAAmBspB,EAAW7kB,QAAQ,GAAtC,2DAKAD,EAAS1M,KAAK+D,cAAciwB,qBAAqBxC,EAAWxxB,KAAKgG,MAAMkG,YAAYvH,oBACxE3E,KAAKuyC,YAAY7lC,kBAAlColC,YAGIjc,EADEic,EAASQ,eAAe9f,IAAIxyB,KAAKgG,MAAMqsC,WACnB,CACpBnxC,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAClDxK,KAAI,kBAAA8H,OAAmBlI,KAAK+D,cAAc4W,iBAAiBm3B,EAASQ,eAAe,IAAI3lC,QAAQ,GAA3F,KAAAzE,OAAiGlI,KAAKgG,MAAMswB,iBAG5F,CACpBl2B,KAAI,uBACJc,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOwE,0EAU9D9K,KAAK4G,SAAS,CACZkrC,WACAtgB,aACAqE,gNAIuBnpB,iFACrBonB,EAAa,KACbC,EAAe,KACnBrnB,EAAS1M,KAAK+D,cAAciU,MAAMtL,GAC5B8lC,EAAcxyC,KAAK+D,cAAciU,MAAM,GAAGy6B,IAAI,KAAKv6B,MAAM,GAAGvL,QAAQ,QAClE3M,KAAKgG,MAAMswB,sBACZ,gBAIA,kBACA,2CAJHxC,EAAa,WACbC,EAAe,CAAC/zB,KAAKgG,MAAMkG,YAAYgJ,QAAQhH,SAASlO,KAAKgG,MAAMgsC,iBAAiBU,qBAAqB1yC,KAAK+D,cAAc4uC,aAAajmC,wCAIzIonB,EAAa,qBACP8e,EAAsB5yC,KAAKgG,MAAMgsC,iBAAiBa,OAAO7yC,KAAKgG,MAAMswB,0BACnDt2B,KAAKuyC,YAAY7lC,gBAAlColC,+BAEAA,EAASQ,eAAe9f,IAAIxyB,KAAKgG,MAAMqsC,4BACzCte,EAAe,CAAC/zB,KAAKgG,MAAMkG,YAAYgJ,QAAQlV,KAAK+D,cAAc4uC,aAAajmC,GAAQkmC,EAAoB19B,QAASlV,KAAK+D,cAAc4uC,aAAab,EAASQ,gBAAiBE,oDAEvK,mFAOR,CACL1e,aACAC,sMAImBlC,mEACrB7xB,KAAK4G,SAAS,CACZirB,6MAIuBtmB,EAAGmB,EAAOinB,8GAC/B2B,EAAU,KACRwd,aAAmB9yC,KAAK+D,cAAc2J,gBAAgB,CAAC,YAAY,uBACnEqlC,EAAc/yC,KAAK+D,cAAc4W,iBAAiBjO,EAAO1M,KAAKgG,MAAMkG,YAAYvH,eAC9E3E,KAAKgG,MAAMswB,sBACZ,gBAaA,kBAYA,2CAxBG0c,EAAiBznC,EAAG+sB,WAAa/sB,EAAG+sB,UAAUC,KAAOhtB,EAAG+sB,UAAUC,KAAK9L,KAAM,SAAA2H,GAAG,OAAIA,EAAIlf,QAAQ7J,gBAAkBlH,EAAK6B,MAAMgsC,iBAAiBa,OAA5B,MAA4C39B,UAAY,KAC1K+9B,EAAmB1nC,EAAG+sB,WAAa/sB,EAAG+sB,UAAUC,KAAOhtB,EAAG+sB,UAAUC,KAAK9L,KAAM,SAAA2H,GAAG,OAAIA,EAAIlf,QAAQ7J,gBAAkBlH,EAAK6B,MAAMgsC,iBAAiBa,OAA5B,QAA8C39B,UAAY,KAC9Kg+B,EAAoBF,EAAiBhzC,KAAK+D,cAAc4W,iBAAiBzM,SAAS8kC,EAAe1hC,KAAK,IAAItR,KAAKgG,MAAMstB,aAAa3uB,UAAYouC,EAC9II,EAAsBF,EAAmBjzC,KAAK+D,cAAc4W,iBAAiBzM,SAAS+kC,EAAiB3hC,KAAK,IAAItR,KAAKgG,MAAMstB,aAAa3uB,UAAYouC,EAC1Jzd,EAAU,CACR3f,KAAK,UACLvF,UAAU,CACRlP,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDxK,KAAI,wCAAA8H,OAAyCgrC,EAAkBvmC,QAAQ,GAAnE,gCAAAzE,OAAoGirC,EAAoBxmC,QAAQ,GAAhI,2CAAAzE,OAA4K4qC,EAA5K,qDAAA5qC,OAA4OlI,KAAKC,MAAMkI,MAAMC,OAAO+Y,QAApQ,8DAIAiyB,EAAmBpzC,KAAKgG,MAAMgsC,iBAAiBa,OAAO7yC,KAAKgG,MAAMswB,gBACjE+c,EAAiB9nC,EAAG+sB,WAAa/sB,EAAG+sB,UAAUC,KAAOhtB,EAAG+sB,UAAUC,KAAK9L,KAAM,SAAA2H,GAAG,OAAIA,EAAIlf,QAAQ7J,gBAAkB+nC,EAAiBl+B,UAAY,KAC/Io+B,EAAsBD,EAAiBrzC,KAAK+D,cAAc4W,iBAAiBzM,SAASmlC,EAAe/hC,KAAK,IAAI8hC,EAAiBG,aAAa5uC,UAAY3E,KAAK+D,cAAc4W,iBAAiBgZ,EAAO,GAAGyf,EAAiBG,aAAa5uC,UACxO2wB,EAAU,CACR3f,KAAK,UACLvF,UAAU,CACRlP,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDxK,KAAI,wCAAA8H,OAAyCorC,EAAoB3mC,QAAQ,GAArE,KAAAzE,OAA2ElI,KAAKgG,MAAMswB,eAAtF,uHAAApuB,OAA0N4qC,EAA1N,qDAAA5qC,OAA0RlI,KAAKC,MAAMkI,MAAMC,OAAO+Y,QAAlT,8DAKAqyB,EAAqBxzC,KAAKgG,MAAMgsC,iBAAiBa,OAAO7yC,KAAKgG,MAAMswB,gBACnEmd,EAAmBloC,EAAG+sB,WAAa/sB,EAAG+sB,UAAUC,KAAOhtB,EAAG+sB,UAAUC,KAAK9L,KAAM,SAAA2H,GAAG,OAAIA,EAAIlf,QAAQ7J,gBAAkBmoC,EAAmBt+B,UAAY,KACnJw+B,EAAwBD,EAAmBzzC,KAAK+D,cAAc4W,iBAAiBzM,SAASulC,EAAiBniC,KAAK,IAAIkiC,EAAmBD,aAAa5uC,UAAY3E,KAAK+D,cAAc4W,iBAAiBgZ,EAAO,GAAG6f,EAAmBD,aAAa5uC,UAClP2wB,EAAU,CACR3f,KAAK,UACLvF,UAAU,CACRlP,MAAMlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,WAEpDxK,KAAI,wCAAA8H,OAAyCwrC,EAAsB/mC,QAAQ,GAAvE,KAAAzE,OAA6ElI,KAAKgG,MAAMswB,eAAxF,6HAAApuB,OAAkO4qC,EAAlO,qDAAA5qC,OAAkSlI,KAAKC,MAAMkI,MAAMC,OAAO+Y,QAA1T,kGAQNoU,EAAQv1B,KAAKgG,MAAMuvB,OACjB,GAAG3qB,WAAY,EAEfisB,GAAuB,YACF72B,KAAK+D,cAAcq1B,gBAAgBp5B,KAAKgG,MAAMiG,cAAcjM,KAAKC,MAAMuN,iBAA5F4kB,SAINpyB,KAAK4G,SAAS,CACZ2uB,QACAD,UACAlD,eACAyE,iVAKEe,EAAM,KACJrC,EAAQ,GACVD,EAAU,KACV8c,EAAU,KACVC,EAAY,KACZh6B,EAAa,KACb5L,EAAc,KACd6mB,EAAe,KACfqgB,EAAmB,KACnB5d,EAAqB,KAEnBqd,EAAmBpzC,KAAKgG,MAAMgsC,iBAAiBa,OAA5B,MACnBW,EAAqBxzC,KAAKgG,MAAMgsC,iBAAiBa,OAA5B,QACrBe,EAAsBR,EAAiBG,aACvCM,EAAwBL,EAAmBD,uBAE3CnsB,QAAQkD,IAAI,CAChBtqB,KAAKC,MAAM+0B,aAAaoe,EAAiBxtC,KAAKwtC,EAAiBl+B,QAAQk+B,EAAiBne,KACxFj1B,KAAKC,MAAM+0B,aAAawe,EAAmB5tC,KAAK4tC,EAAmBt+B,QAAQs+B,EAAmBve,KAC9Fj1B,KAAKC,MAAM+0B,aAAa4e,EAAoBhuC,KAAKguC,EAAoB1+B,QAAQ0+B,EAAoB3e,KACjGj1B,KAAKC,MAAM+0B,aAAa6e,EAAsBjuC,KAAKiuC,EAAsB3+B,QAAQ2+B,EAAsB5e,gCAQ/F7N,QAAQkD,IAAI,CAEpBtqB,KAAK+D,cAAcq1B,gBAAgBga,EAAiBxtC,KAAK5F,KAAKC,MAAMuN,SAEpExN,KAAK+D,cAAcq1B,gBAAgBoa,EAAmB5tC,KAAK5F,KAAKC,MAAMuN,SAEtExN,KAAK+D,cAAcq1B,gBAAgBwa,EAAoBhuC,KAAK5F,KAAKC,MAAMuN,SAEvExN,KAAK+D,cAAcq1B,gBAAgBya,EAAsBjuC,KAAK5F,KAAKC,MAAMuN,+CAZzEsmC,OACAC,OACAC,OACAC,OAaIC,EAAkBJ,GAAqBC,GAAuBD,EAAkBh5B,GAAG,IAAMi5B,EAAoBj5B,GAAG,QAG9G9a,KAAKgG,MAAMswB,sBACZ,iBAGA,oBAGA,0CALHhD,EAAetzB,KAAKC,MAAM+2B,UAAUC,6CAGpC3D,EAAekgB,EAAmBD,iDAGlCjgB,EAAe8f,EAAiBG,iFAM9BX,EAAsB5yC,KAAKgG,MAAMgsC,iBAAiBa,OAAO7yC,KAAKgG,MAAMswB,iBAEtEhD,uBACEsf,oCAKQxrB,QAAQkD,IAAI,CACpBtqB,KAAK+D,cAAcg0B,oBAAoBzE,EAAa1tB,KAAK,cACzD5F,KAAK+D,cAAcg0B,oBAAoBzE,EAAa1tB,KAAK,aAAa,CAACgtC,EAAoB19B,UAC3FlV,KAAK+D,cAAcg0B,oBAAoBzE,EAAa1tB,KAAK,eAAe,CAAC5F,KAAKgG,MAAMkG,YAAYgJ,QAAQ09B,EAAoB19B,gDAN5Hk9B,OACAC,QACAh6B,UASM87B,EAAwC,UAA9Bn0C,KAAKgG,MAAMswB,eACrBoc,EAAsB1yC,KAAKgG,MAAMgsC,iBAAiBU,oBAClD75B,GAA6B,IAApB65B,EAA2BpmC,KAAKouB,OAAjC,MACdriB,EAAarY,KAAK+D,cAAc4W,iBAAiBtC,EAAWrY,KAAKgG,MAAMkG,YAAYvH,UAC7EyvC,EAAWD,EAAU97B,EAAarY,KAAK+D,cAAciU,MAAM,GAAGE,MAAMG,GAAYmR,IAAInR,GAC1Fuf,EAAM53B,KAAK+D,cAAciU,MAAM,KAAK5C,MAAMg/B,GAAUh/B,MAAM,KAAKoU,IAAI3Q,IAIjEu5B,IACFA,EAAUpyC,KAAK+D,cAAc4W,iBAAiBy3B,EAAQ,kBAIlDpyC,KAAKgG,MAAMswB,sBACZ,iBAiCA,oBAgCA,0CAhEHP,EAAkB,sCAClBT,EAAU,CACR3f,KAAK,iBACLvV,KAAI,SAAA8H,OAAUlI,KAAKgG,MAAMiG,cAArB,gYAAA/D,OAAialI,KAAKC,MAAMkI,MAAMC,OAAO+Y,QAAzb,4BAGNoU,EAAMzoB,KAAK,CACT6I,KAAK,WACL+f,YAAYK,EACZnrB,UAAU5K,KAAKgG,MAAM6rB,mBAGvB0D,EAAMzoB,KAAK,CACT6I,KAAK,WACL/K,UAAUspC,EACVxe,YAAW,kCAGbH,EAAMzoB,KAAK,CACT6I,KAAK,SACL+f,YAAW,6CACX9qB,UAAUopC,GAA4BA,EAAyBl5B,GAAG,GAClE4I,KAAI,0CAAAxb,OAA2ClI,KAAKgG,MAAMgsC,iBAAiBa,OAA5B,MAA4CU,aAAar+B,QAApG,OAGNqgB,EAAMzoB,KAAK,CACT6I,KAAK,SACL+f,YAAW,+CACX9qB,UAAUqpC,GAA8BA,EAA2Bn5B,GAAG,GACtE4I,KAAI,0CAAAxb,OAA2ClI,KAAKgG,MAAMgsC,iBAAiBa,OAA5B,QAA8CU,aAAar+B,QAAtG,2CAIFlV,KAAKgG,MAAM8rC,UACb6B,EAAmB3zC,KAAK+D,cAAc4W,iBAAiB3a,KAAKgG,MAAM8rC,SAASplC,OAAO1M,KAAKgG,MAAMkG,YAAYvH,UACzG8H,EAAczM,KAAK+D,cAAc4W,iBAAiB3a,KAAKgG,MAAM8rC,SAASQ,eAAehf,EAAa3uB,UAClG2wB,EAAU,CACR3f,KAAK,eACLvV,KAAI,wBAAA8H,OAAyByrC,EAAiBhnC,QAAQ,GAAlD,KAAAzE,OAAwDlI,KAAKgG,MAAMiG,cAAnE,wDAAA/D,OAAuIuE,EAAYE,QAAQ,GAA3J,KAAAzE,OAAiKlI,KAAKgG,MAAMiG,cAA5K,oFAGNqpB,EAAU,CACR3f,KAAK,eACLvV,KAAI,iCAAA8H,OAAkClI,KAAKgG,MAAMiG,cAA7C,kGAKRqpB,EAAQl1B,MAAR,GAAA8H,OAAiB0vB,EAAG,4BAAA1vB,OAA+BlI,KAAKC,MAAMkI,MAAMC,OAAO+Y,QAAvD,kFAAAjZ,OAA+I0vB,EAAIjrB,QAAQ,GAA3J,cAA4K,KAAhM,2JAAAzE,OAA8VlI,KAAKC,MAAMkI,MAAMC,OAAO+Y,QAAtX,iGAGA4U,EAAkB,6CAClBR,EAAMzoB,KAAK,CACT6I,KAAK,WACL+f,YAAYK,EACZnrB,UAAU5K,KAAKgG,MAAM6rB,mBAGvB0D,EAAMzoB,KAAK,CACT6I,KAAK,WACL/K,UAAUmpC,GAAuBA,EAAoBj5B,GAAG,GACxD4a,YAAW,gCAAAxtB,OAAiClI,KAAKgG,MAAMiG,qDAIrDjM,KAAKgG,MAAM8rC,UACb6B,EAAmB3zC,KAAK+D,cAAc4W,iBAAiB3a,KAAKgG,MAAM8rC,SAASplC,OAAO1M,KAAKgG,MAAMkG,YAAYvH,UACzG8H,EAAczM,KAAK+D,cAAc4W,iBAAiB3a,KAAKgG,MAAM8rC,SAASQ,eAAehf,EAAa3uB,UACrE,GAC7B2wB,EAAU,CACR3f,KAAK,cACLvV,KAAI,wBAAA8H,OAAyByrC,EAAiBhnC,QAAQ,GAAlD,KAAAzE,OAAwDlI,KAAKgG,MAAMiG,cAAnE,sDAAA/D,OAAqIuE,EAAYE,QAAQ,GAAzJ,KAAAzE,OAA+JlI,KAAKgG,MAAMiG,cAA1K,aAAA/D,OAAwN,aAAAA,OAHjM,GAGiM,iCAAxN,6FAGNotB,EAAU,CACR3f,KAAK,cACLvV,KAAI,+BAAA8H,OAAgClI,KAAKgG,MAAMiG,cAA3C,oHAIRqpB,EAAQl1B,MAAR,GAAA8H,OAAiB0vB,EAAG,4BAAA1vB,OAA+BlI,KAAKC,MAAMkI,MAAMC,OAAO+Y,QAAvD,8EAAAjZ,OAA2I0vB,EAAIjrB,QAAQ,GAAvJ,KAA+J,KAAnL,oKAAAzE,OAA0VlI,KAAKC,MAAMkI,MAAMC,OAAO+Y,QAAlX,iGAGA4U,EAAkB,2CAClBR,EAAMzoB,KAAK,CACT6I,KAAK,WACL+f,YAAYK,EACZnrB,UAAU5K,KAAKgG,MAAM6rB,mBAGvB0D,EAAMzoB,KAAK,CACT6I,KAAK,WACL/K,UAAUkpC,GAAqBA,EAAkBh5B,GAAG,GACpD4a,YAAW,8BAAAxtB,OAA+BlI,KAAKgG,MAAMiG,mFAO9B,EAC7BjM,KAAK4G,SAAS,CACZgxB,MACArC,QACAD,UACA8c,UACAC,YACAh6B,aACAib,eACAyC,qBACAc,sBAV2B,4QAgBzBwd,EAAWnmC,SAAS5B,KAAKouB,MAAM,KAC/BoO,EAAkB9oC,KAAKC,MAAM+2B,UAAUsd,UAAU5a,OAAQ,SAACtK,EAAOsa,EAAE56B,GACvE,GAAI46B,EAAEgJ,oBAAoB2B,EAAS,CACjC,IAAME,EAAiBpmC,EAAKpK,cAAc8I,YAAkC,IAAtB68B,EAAEgJ,qBAA0B9X,MAAMtf,OAAO,uBAAuB,OAChH3F,EAAI,iBAAAzN,OAAoBwhC,EAAEuI,WAAtB,QACJtwC,EAAK,eAAAuG,OAAkBwhC,EAAEuI,WAApB,mBAAA/pC,OAAgDqsC,GAC3DnlB,EAAOtiB,KAAK,CACV6I,OACAhU,QACA2P,KAAKo4B,EACL3nC,MAAMwyC,IAGV,OAAOnlB,GACP,aAEsBpvB,KAAK+D,cAAcggC,6BAArChC,SACAgQ,EAAkBjJ,EAAgBhmC,OAASgmC,EAAgB,GAAK,KAEtE9oC,KAAK4G,SAAS,CACZm7B,YACAgQ,kBACAjJ,mBACA,WACIiJ,GACF5jC,EAAKqmC,eAAezC,sLAKL0C,yEACbzC,EAAmByC,EAASnjC,KAClCtR,KAAK4G,SAAS,CACZorC,0JAIM1b,GACRt2B,KAAK4G,SAAS,CACZ0vB,oDAIK,IAAAloB,EAAApO,KAED00C,EAAuC,SAA9B10C,KAAKgG,MAAMswB,eACpBqe,EAA2C,UAA9B30C,KAAKgG,MAAMswB,eACxBse,EAA6C,YAA9B50C,KAAKgG,MAAMswB,eAC1BwF,EAAW4Y,EAAS10C,KAAKgG,MAAMswB,eAAd,OAAApuB,OAAsClI,KAAKgG,MAAMswB,gBAwGxE,OACEpzB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAGbC,KAAKgG,MAAM8iC,gBAmBV5lC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZC,eAAgB,UAGbC,KAAKgG,MAAM8iC,gBAAgBhmC,OAU1BI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,KACVC,WAAY,UACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,oBAGAsC,EAAA1D,EAAAC,cAAC+tB,EAAA,EAAD7tB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2F,KAAM,WACN0nB,cAAc,EACdjB,QAASrsB,KAAKgG,MAAM8iC,gBACpBvc,kBAlKM,SAAAtsB,GACxB,IAAM0B,EAAQ1B,EAAM0B,MACduK,EAAc,CAClByJ,KAAK1V,EAAMqR,KAAKqE,MAGlB,OACEzS,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,UAEZoD,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPuK,YAAaA,EACbygB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHtB,MAAM,MACNuB,OAAO,UAIb8B,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPgrB,UAAW,CACT/mB,KAAK,YACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,mBAgIAorB,aAActsB,KAAKgG,MAAM+rC,gBACzB3oC,SAAUpJ,KAAKw0C,eAAe7lC,KAAK3O,MACnCwsB,qBAzHS,SAAAvsB,GAE3B,IACM+sB,GAA4D,IADlD/sB,EAAM+sB,YAAYX,QACNY,QAAQhtB,EAAM+sB,YAAYjrB,OAAgB9B,EAAM+sB,YAAYjrB,MAAQ,KAEhG,IAAKirB,EACH,OAAO,KAGT,IAAMrrB,EAAQqrB,EAAYrrB,MACpBuK,EAAc,CAClByJ,KAAKqX,EAAYrX,MAGnB,OACEzS,EAAA1D,EAAAC,cAAC0D,EAAA,EAADxD,OAAAC,OAAA,CACEmB,MAAO,CACLE,KAAK,KAEPlB,eAAgB,iBACZE,EAAMitB,YAEVhqB,EAAA1D,EAAAC,cAAC0D,EAAA,EAADxD,OAAAC,OAAA,CACEoF,EAAG,EACHnF,MAAO,GACHI,EAAMitB,WAHZ,CAIEptB,WAAY,SACZe,cAAe,MACfE,MAAO,CAAC+G,OAAO,WACf/H,eAAgB,eAEhBmD,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPuK,YAAaA,EACbygB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,EACHC,OAAO,UAIb8B,EAAA1D,EAAAC,cAACs8B,EAAA,EAAD,CACEtwB,MAAO9J,EACPgrB,UAAW,CACT/mB,KAAK,YACL3F,MAAM,CACJsB,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,uBA4EFlB,KAAKgG,MAAMgsC,kBACT9uC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,kBAGAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,CAAC,SAAS,OACzBd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAACqQ,EAAA,EAAD,CACEpM,YAAa,CACXJ,GAAG,EACHosB,OAAOglB,EAAS,EAAI,GAEtB70C,MAAO,CAAC,EAAE,OACVwQ,QAAS,gBACTL,SAAU,kBACVjI,SAAU/H,KAAKC,MAAM8H,SACrB+I,WAAY,qDACZZ,WAAY,CACVtP,GAAG,EACHQ,OAAOpB,KAAKC,MAAM8H,SAAW,OAAS,QAExCuI,SAAUokC,EACVjxC,YAAc,SAAA4F,GAAC,OAAI+E,EAAK+tB,UAAU,WAEpCj5B,EAAA1D,EAAAC,cAACqQ,EAAA,EAAD,CACEpM,YAAa,CACXJ,GAAG,EACHosB,OAAOilB,EAAa,EAAI,GAE1B90C,MAAO,CAAC,EAAE,OACVwQ,QAAS,YACTL,SAAU,mBACVjI,SAAU/H,KAAKC,MAAM8H,SACrB+I,WAAY,wDACZZ,WAAY,CACVtP,GAAG,EACHQ,OAAOpB,KAAKC,MAAM8H,SAAW,OAAS,QAExCuI,SAAUqkC,EACVlxC,YAAc,SAAA4F,GAAC,OAAI+E,EAAK+tB,UAAU,YAEpCj5B,EAAA1D,EAAAC,cAACqQ,EAAA,EAAD,CACEpM,YAAa,CACXJ,GAAG,EACHosB,OAAOklB,EAAe,EAAI,GAE5B/0C,MAAO,CAAC,EAAE,OACVwQ,QAAS,cACTtI,SAAU/H,KAAKC,MAAM8H,SACrBiI,SAAU,qBACVc,WAAY,yDACZZ,WAAY,CACVtP,GAAG,EACHQ,OAAOpB,KAAKC,MAAM8H,SAAW,OAAS,QAExCuI,SAAUskC,EACVnxC,YAAc,SAAA4F,GAAC,OAAI+E,EAAK+tB,UAAU,eAIpCn8B,KAAKgG,MAAMkG,aAAelM,KAAKgG,MAAMosB,cAAgBpyB,KAAKgG,MAAMstB,cAC9DpwB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ9E,GAAI,EACJf,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC28B,EAADz8B,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmL,OAAQ0wB,EACRvV,MAAOvmB,KAAKgG,MAAMugB,MAClBgP,MAAOv1B,KAAKgG,MAAMuvB,MAClBD,QAASt1B,KAAKgG,MAAMsvB,QACpBppB,YAAalM,KAAKgG,MAAMkG,YACxBkmB,aAAcpyB,KAAKgG,MAAMosB,aACzBkB,aAActzB,KAAKgG,MAAMstB,aACzBhhB,SAAUtS,KAAK62B,qBAAqBloB,KAAK3O,MACzC6xB,iBAAkB7xB,KAAK6xB,iBAAiBljB,KAAK3O,MAC7C+1B,mBAAoB/1B,KAAKgG,MAAM+vB,mBAC/BF,oBAAqB71B,KAAKgG,MAAM6vB,oBAChC5D,oBAAqBjyB,KAAKiyB,oBAAoBtjB,KAAK3O,MACnDs0B,qBAAsBt0B,KAAKs0B,qBAAqB3lB,KAAK3O,QAErDkD,EAAA1D,EAAAC,cAACo1C,GAAA,EAADl1C,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE60C,YAAY,EACZC,iBAAkB,GAClBC,SAAUh1C,KAAKgG,MAAMiG,qBA7HvC/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YACPO,UAAW,UAJb,mCAzBNyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7E,cAAe,UAEfqC,EAAA1D,EAAAC,cAACH,EAAA,EAAD,CACEY,UAAW,CACTW,cAAc,OAEhBV,YAAa,CACXwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,KAAM,yCA5mBME,qGCgTb20C,8MAhTbjvC,MAAQ,CACNkG,YAAY,KACZqwB,kBAAkB,KAClBC,kBAAkB,KAClB4R,oBAAmB,EACnB3R,2BAA2B,QAI7B14B,cAAgB,OA0ChBmxC,gBAAkB,SAACjpC,GACjB,IAAMkpC,EAAcxuC,EAAK5C,cAAc2J,gBAAgB,CAAC,QAAQ,mBAChE/G,EAAK1G,MAAMmsC,YAAX,SAAAlkC,OAAgCitC,EAAY9I,MAA5C,KAAAnkC,OAAqD+D,OAGvDywB,sDAAkB,SAAA3V,EAAOwV,GAAP,IAAA6Y,EAAA5Y,EAAAC,EAAA,OAAA7J,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,OACVq9B,EAAYzuC,EAAK1G,MAAM+2B,UAAU7qB,gBAAgBowB,GAEnDC,EAAoB,KAClBC,EAA6B,IAE6C,qBAA7C91B,EAAK1G,MAAM+2B,UAAU4M,oBAAsCj9B,EAAK1G,MAAM+2B,UAAU4M,oBAAsBjkC,OAAOmF,KAAK6B,EAAK1G,MAAM2jC,sBAE5I7+B,QAAS,SAAAmlC,GAC3B,IACMkG,EAD2BzpC,EAAK1G,MAAM2jC,oBAAoBsG,GAChBkL,EAAUzY,WAC1D,IAAKyT,EACH,OAAO,SAIFA,EAAgBz6B,KAElB6mB,IACHA,EAAoB4T,EAAgBpO,KAAKv2B,OAE3C2kC,EAAgBlG,SAAWA,EAC3BkG,EAAgBzT,UAAYyY,EAAUzY,UACtCF,EAA2B2T,EAAgBpO,KAAKv2B,OAAS2kC,IAG3DzpC,EAAKC,SAAS,CACZsF,YAAY,KACZqwB,oBACAE,8BACA,WACA91B,EAAKi2B,gBAAgBJ,KA/BP,wBAAAvV,EAAA1O,SAAAwO,EAAA/mB,iEAmClB48B,sDAAkB,SAAArV,EAAOiV,GAAP,IAAA6Y,EAAAD,EAAAlpC,EAAAokC,EAAAtB,EAAA,OAAApc,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,cAEVs9B,EAAkB1uC,EAAKX,MAAMy2B,2BAA2BD,GACxD4Y,EAAYzuC,EAAK1G,MAAM+2B,UAAU7qB,gBAAgBxF,EAAKX,MAAMu2B,oBAE5DrwB,EAAc,CAClBT,MAAM4pC,EAAgB1Y,UACtBznB,QAAQmgC,EAAgBngC,QACxBvQ,SAAS0wC,EAAgB1wC,WAIfq9B,KAAOqT,EAAgBrT,KAG7BsO,EAAc,CAClBrb,IAAImgB,EAAUngB,IACdrvB,KAAKwvC,EAAU3pC,MACfA,MAAM2pC,EAAU3pC,MAChByJ,QAAQkgC,EAAUlgC,SAGd85B,EAAoBroC,EAAK1G,MAAM+2B,UAAUgY,kBAG3CoG,EAAU7E,kBACZvB,EAAkBI,UAAU,GAAGxpC,KAAOwvC,EAAU7E,iBAGlDrkC,EAAYskC,UAAY,CACtB5W,SAAQ,EACR0W,cACAtB,oBACAZ,oBAAmB,GAjCL1mB,EAAA3P,KAAA,GAoCVpR,EAAK1G,MAAMwwC,iBAAiB4E,EAAgBnL,SAASkL,EAAUzY,WApCrD,QAsChBh2B,EAAKC,SAAS,CACZsF,cACAswB,sBAxCc,yBAAA9U,EAAAnP,SAAAgP,EAAAvnB,iEA4ClBwuC,kBAAoB,WAClB7nC,EAAKC,SAAS,CACZwnC,oBAAmB,gFA7HjBpuC,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,mKAK9CD,KAAKkE,qBACClE,KAAKo+B,gRAIL7B,EAAoBv8B,KAAKC,MAAM0uC,UAAUC,QAAU5uC,KAAKC,MAAM+2B,UAAU7qB,gBAAgBnM,KAAKC,MAAM0uC,UAAUC,QAAU5uC,KAAKC,MAAM0uC,UAAUC,OAASjvC,OAAOmF,KAAK9E,KAAKC,MAAM+2B,UAAU7qB,iBAAiB,YAEvMnM,KAAK+D,cAAcqT,aAAazX,OAAOmF,KAAK9E,KAAKC,MAAM+2B,UAAU7qB,iBAAjE,eAAAkb,EAAA1nB,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAkF,SAAAmC,EAAOlO,GAAP,IAAAS,EAAA,OAAA0mB,EAAApzB,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UAChF7L,EAAc/H,EAAKlE,MAAM+2B,UAAU7qB,gBAAgBV,GACnCtH,EAAKJ,cAAcu6B,kBAAkBpyB,EAAYT,SACjDS,EAAY+oB,IAHoD,CAAArb,EAAA7B,KAAA,eAAA6B,EAAA7B,KAAA,EAI9E5T,EAAKlE,MAAM+0B,aAAa9oB,EAAYT,MAAMS,EAAYgJ,QAAQhJ,EAAY+oB,KAJI,wBAAArb,EAAArB,SAAAoB,EAAA3Z,SAAlF,gBAAAwY,GAAA,OAAA6O,EAAA5O,MAAAzY,KAAAiH,YAAA,WAQFs1B,GAAqBA,IAAsBv8B,KAAKC,MAAM0uC,UAAUC,QAClE5uC,KAAKk1C,gBAAgB3Y,GAGvBv8B,KAAK08B,gBAAgBH,wLAGE/7B,EAAUC,sEACjCT,KAAKkE,cAEoB1D,EAAUmuC,UAAUC,SAAW5uC,KAAKC,MAAM0uC,UAAUC,wCAErE5uC,KAAKo+B,mJAgGb,OAAKp+B,KAAKgG,MAAMu2B,kBAKdr5B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP6F,GAAI,CAAC,EAAE,GACP5F,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,KACVC,WAAY,UACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,4BAGAsC,EAAA1D,EAAAC,cAAC2sB,EAAA,EAADzsB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEuO,GAAI,aACJue,aAAa,EACbO,cAAc,EACdlkB,SAAUpJ,KAAKk1C,gBACfjpC,cAAejM,KAAKgG,MAAMu2B,kBAC1BpwB,gBAAiBnM,KAAKC,MAAM+2B,UAAU7qB,oBAIxCnM,KAAKgG,MAAMy2B,4BAA8Bz8B,KAAKgG,MAAMw2B,mBAClDt5B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,6BAGAsC,EAAA1D,EAAAC,cAAC2sB,EAAA,EAADzsB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEuO,GAAI,aACJue,aAAa,EACb3jB,SAAUpJ,KAAK48B,gBACf3wB,cAAejM,KAAKgG,MAAMw2B,kBAC1BrwB,gBAAiBnM,KAAKgG,MAAMy2B,+BAKlCz8B,KAAKgG,MAAMu2B,mBAAqBv8B,KAAKgG,MAAMw2B,kBACzCt5B,EAAA1D,EAAAC,cAACyxC,GAAA,EAADvxC,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkxC,aAAa,EACbC,eAAe,EACfC,iBAAiB,EACjBnlC,YAAalM,KAAKgG,MAAMkG,YACxBsiC,kBAAmBxuC,KAAKwuC,kBACxBviC,cAAejM,KAAKgG,MAAMu2B,kBAC1B9iB,iBAAkBzZ,KAAKC,MAAMwZ,mBAG1BzZ,KAAKC,MAAMuN,QAoCVtK,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFU,GAAG,IAIH1F,KAAKgG,MAAMooC,mBACTlrC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,UACN1E,MAAOlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,YAErD1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,QAMQzB,KAAKgG,MAAMu2B,kBANnB,sCAUFr5B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,WACN1E,MAAO,aAETgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,sBAMsBzB,KAAKgG,MAAMu2B,kBANjC,sBAvERr5B,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFU,GAAG,IAGLxC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,QACN1E,MAAO,aAETgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQAyB,EAAA1D,EAAAC,cAACyW,EAAA,EAAD,CACExS,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,KAEX4D,YAAazD,KAAKC,MAAM6F,2BAL1B,cA+DR,OAxJH,YAlJgBxF,aC2xBdg1C,8MAxwBbtvC,MAAQ,CACNqnC,UAAS,EACTC,YAAY,GACZC,YAAW,EACXniC,OAAO,UACPg/B,cAAc,GACdl+B,YAAY,KACZwa,WAAW,CACT+mB,MAAM,CACJ1+B,OAAO,KACP9E,SAAQ,IAGZ2jC,cAAa,EACb3hC,cAAc,KACd8hC,gBAAe,EACfC,gBAAe,EACfI,oBAAmB,EACnBvM,oBAAoB,KACpByM,2BAA0B,EAC1B7R,2BAA2B,QAI7B14B,cAAgB,OAwGhB24B,sDAAkB,SAAA3V,EAAO9a,GAAP,IAAA41B,EAAAwO,EAAAD,EAAAlkC,EAAAokC,EAAAtB,EAAA,OAAApc,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cAEV8pB,EAAsBl7B,EAAK1G,MAAM+2B,UAAU7qB,gBAAgBF,GAC3DokC,EAA2B1pC,EAAK1G,MAAM2jC,oBAAoB/B,EAAoBqI,UAE9EkG,EAAkBC,EAAwBxO,EAAoBlF,YAE9DzwB,EAAc,CAClBT,MAAMo2B,EAAoBlF,UAC1BznB,QAAQ2sB,EAAoB3sB,QAC5BvQ,SAASk9B,EAAoBl9B,WAInBq9B,KAAOoO,EAAgBpO,KAG7BsO,EAAc,CAClBrb,IAAI4M,EAAoB5M,IACxBrvB,KAAKi8B,EAAoBj8B,KACzB6F,MAAMo2B,EAAoBp2B,MAC1ByJ,QAAQ2sB,EAAoB3sB,SAGxB85B,EAAoBnN,EAAoBmN,kBAG1CoB,EAAgBG,kBAClBvB,EAAkBI,UAAU,GAAGxpC,KAAOwqC,EAAgBG,iBAGxDrkC,EAAYskC,UAAY,CACtB5W,SAAQ,EACR0W,cACAtB,oBACAZ,oBAAmB,GAnCLnnB,EAAAlP,KAAA,GAsCVpR,EAAK1G,MAAMwwC,iBAAiB5O,EAAoBqI,SAASkG,EAAgBzT,WAtC/D,QAwChBh2B,EAAKC,SAAS,CACZsF,cACAD,gBACA41B,wBA3Cc,yBAAA5a,EAAA1O,SAAAwO,EAAA/mB,iEA+ClBytC,2BAAQ,SAAAlmB,IAAA,IAAAmpB,EAAAC,EAAAC,EAAA,OAAAhe,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,UACDpR,EAAKX,MAAM+nC,eADV,CAAArmB,EAAA3P,KAAA,eAAA2P,EAAAO,OAAA,SAEG,MAFH,QAKU,EACO,EACjByoB,EAAU/wC,OAAOmF,KAAK6B,EAAKX,MAAMokC,eAAe,GAEhDuG,EAAgB,SAACplC,EAAGgb,GACxB,IAAMkL,EAA4B,YAAdlmB,EAAGjF,OAGjBwsB,EAAY,CAChBE,cAAa,iBACbD,YAAa,QACbE,WAAYtsB,EAAK1G,MAAMgM,cACvBgoB,WAAY/lB,SAXO,IAcjBqY,IACFuM,EAAUG,WAAatsB,EAAK5C,cAAcmvB,oBAAoB3M,KAI5DA,GAA8B,UAArBuM,EAAUxsB,SACrBK,EAAK5C,cAAcovB,yBAAyBL,GAG9CnsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5ButC,eAAevc,EACf/K,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER+mB,MAAM,CACJ1+B,OAAO,KACP9E,SAAQ,SAMV2mC,EAAuB,SAACrlC,GAC5B,IAAMwD,EAASxD,EAAG6nB,gBAClBzsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER+mB,MAAM9tC,OAAAkH,EAAA,EAAAlH,CAAA,GACDc,EAAUimB,WAAW+mB,MADrB,CAEH1+B,iBAMRpI,EAAK1G,MAAMs0B,0BAA0B5tB,EAAKX,MAAM67B,oBAAoBmN,kBAAkBppC,KAAM,WAAY,CAAC8qC,GAAU,KAAMC,EAAeC,GAExIjqC,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUimB,WADL,CAER+mB,MAAM9tC,OAAAkH,EAAA,EAAAlH,CAAA,GACDc,EAAUimB,WAAW+mB,MADrB,CAEHxjC,SAxDU,SALV,wBAAAyd,EAAAnP,SAAAgP,EAAAvnB,WAmERm8B,UAAY,SAAC/wB,GACI,OAAXA,GAAmB,CAAC,UAAU,UAAUM,SAASN,EAAOC,gBAC1D1E,EAAKC,SAAS,CACZwE,cAKNojC,kBAAoB,WAClB7nC,EAAK8nC,cACL9nC,EAAKC,SAAS,CACZwnC,oBAAmB,gFAlOjBpuC,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,mKAK9CD,KAAKkE,qBACClE,KAAKo+B,0SAKL6Q,EAAwBjvC,KAAKgG,MAAM67B,oBAAoBmN,2BAEvD5nB,QAAQkD,IAAI,CAChBtqB,KAAKC,MAAM+0B,aAAaia,EAAsBrpC,KAAKqpC,EAAsB/5B,QAAQ+5B,EAAsBha,KACvGj1B,KAAKC,MAAM+0B,aAAah1B,KAAKgG,MAAM67B,oBAAoBj8B,KAAK5F,KAAKgG,MAAM67B,oBAAoB3sB,QAAQlV,KAAKgG,MAAM67B,oBAAoB5M,8BAG3E7N,QAAQkD,IAAI,CACnEtqB,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAM67B,oBAAoBmN,kBAAkBppC,KAAK,aAC7F5F,KAAK+D,cAAcmxB,mBAAmBl1B,KAAKgG,MAAM67B,oBAAoBj8B,KAAKqpC,EAAsB/5B,QAAQlV,KAAKC,MAAMuN,iDAF9GsgC,OAAeQ,OAKhBj8B,EAAW,GACX+3B,EAAgB,GAChBkD,EAAc,GAChBS,GAAiB,EAEE,OAAnBD,mBACO2B,EAAa,eAAGA,GAAc3B,qCACC1mB,QAAQkD,IAAI,CAChDtqB,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAM67B,oBAAoBmN,kBAAkBppC,KAAK,cAAc,CAAC6pC,IAC5GzvC,KAAK+D,cAAcg0B,oBAAoB/3B,KAAKgG,MAAM67B,oBAAoBmN,kBAAkBppC,KAAK,gBAAgB,CAAC5F,KAAKC,MAAMuN,QAAQiiC,0CAF9HC,OAAWE,OAIZF,GAA6B,OAAfA,IAChBpC,EAAYmC,GAAczvC,KAAK+D,cAAc4W,iBAAiB+0B,EAAW1vC,KAAKgG,MAAM67B,oBAAoBl9B,WAErF,OAAjBirC,IACFA,EAAe5vC,KAAK+D,cAAc4W,iBAAiBi1B,EAAa5vC,KAAKgG,MAAM67B,oBAAoBl9B,WAC9EmW,GAAG,KAElBsvB,EAAcqF,GAAcG,EAExBH,EAAa3B,IACfC,GAAiB,YAf+B0B,4BAqBxDp9B,EAAS+3B,cAAgBA,UAGrBwD,EAAgBxD,GAAiBzqC,OAAOmF,KAAKslC,GAAetnC,OAAO,EAEnEyyC,EAAqBv1C,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,mBACjE8nC,EAA+BD,EAAmBzF,eAExDz9B,EAAS27B,gBAAiB,EAC1B37B,EAASi7B,YAAcA,EACvBj7B,EAAS07B,eAAiBA,EAC1B17B,EAASu7B,aAAeA,EACxBv7B,EAASk7B,YAAcK,GAAgB4H,EACvCnjC,EAASg7B,SAAWU,GAAkBH,EACtCv7B,EAASjH,OAASwiC,EAAe,SAAW,UAC5Cv7B,EAASi8B,0BAA4BA,EAErCtuC,KAAK4G,SAASyL,uQAIRpG,EAAgBjM,KAAKC,MAAM0uC,UAAUC,QAAU5uC,KAAKC,MAAM+2B,UAAU7qB,gBAAgBnM,KAAKC,MAAM0uC,UAAUC,QAAU5uC,KAAKC,MAAM0uC,UAAUC,OAASjvC,OAAOmF,KAAK9E,KAAKC,MAAM+2B,UAAU7qB,iBAAiB,YAEnMnM,KAAK+D,cAAcqT,aAAazX,OAAOmF,KAAK9E,KAAKC,MAAM+2B,UAAU7qB,iBAAjE,eAAAspC,EAAA91C,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAkF,SAAA+Q,EAAO9c,GAAP,IAAAS,EAAA,OAAA0mB,EAAApzB,EAAAoY,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,UAChF7L,EAAc/H,EAAKlE,MAAM+2B,UAAU7qB,gBAAgBV,GACnCtH,EAAKJ,cAAcu6B,kBAAkBpyB,EAAYT,SACjDS,EAAY+oB,IAHoD,CAAAxM,EAAA1Q,KAAA,eAAA0Q,EAAA1Q,KAAA,EAI9E5T,EAAKlE,MAAM+0B,aAAa9oB,EAAYT,MAAMS,EAAYgJ,QAAQhJ,EAAY+oB,KAJI,wBAAAxM,EAAAlQ,SAAAgQ,EAAAvoB,SAAlF,gBAAAgoB,GAAA,OAAAytB,EAAAh9B,MAAAzY,KAAAiH,YAAA,WAQNjH,KAAK08B,gBAAgBzwB,wLAGEzL,EAAUC,sEACjCT,KAAKkE,cAEoB1D,EAAUmuC,UAAUC,SAAW5uC,KAAKC,MAAM0uC,UAAUC,wCAErE5uC,KAAKo+B,oBAGgB39B,EAAUwL,gBAAkBjM,KAAKgG,MAAMiG,eAElEjM,KAAKyuC,oJAqIA,IAAAtgC,EAAAnO,KAEP,IAAKA,KAAKgG,MAAMiG,cACd,OAAO,KAGT,IACMupC,EADqBx1C,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,mBACfoiC,eAElDY,EAAU1wC,KAAKgG,MAAMokC,eAAiBzqC,OAAOmF,KAAK9E,KAAKgG,MAAMokC,eAAetnC,OAAO,EAAInD,OAAOmF,KAAK9E,KAAKgG,MAAMokC,eAAe,GAAK,KAClIwF,EAAe5vC,KAAKgG,MAAMokC,eAAiBzqC,OAAO8J,OAAOzJ,KAAKgG,MAAMokC,eAAetnC,OAAO,EAAInD,OAAO8J,OAAOzJ,KAAKgG,MAAMokC,eAAe,GAAK,KAEjJ,OACElnC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP6F,GAAI,CAAC,EAAE,GACP5F,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,EAAE,KACVC,WAAY,UACZe,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,GAEPqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,4BAGAsC,EAAA1D,EAAAC,cAAC2sB,EAAA,EAADzsB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEuO,GAAI,aACJue,aAAa,EACbO,cAAc,EACdlkB,SAAUpJ,KAAK08B,gBACfzwB,cAAejM,KAAKgG,MAAMiG,cAC1BE,gBAAiBnM,KAAKC,MAAM+2B,UAAU7qB,qBAIvCnM,KAAKgG,MAAMunC,YAAcvtC,KAAKgG,MAAMqnC,WACnCnqC,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACF2C,GAAG,EACHjC,GAAG,IAGLxC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAO5F,KAAKgG,MAAMsoC,0BAA4B,WAAa,WAC3DptC,MAAQlB,KAAKgG,MAAMsoC,0BAA4BtuC,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAAY,aAEzG1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJjI,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,yCASFyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAO5F,KAAKgG,MAAM4nC,aAAe,WAAa,WAC9C1sC,MAAQlB,KAAKgG,MAAM4nC,aAAe5tC,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAAY,aAE5F1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJjI,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,gBAMgBzB,KAAKgG,MAAM67B,oBAAoBp2B,QAGjDvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAO5F,KAAKgG,MAAM+nC,eAAiB,WAAa,SAChD7sC,MAAQlB,KAAKgG,MAAM+nC,eAAiB/tC,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAAY,aAE9F1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJjI,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,sCASFyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7F,MAAO,EACPC,WAAY,SACZe,cAAe,OAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAO5F,KAAKgG,MAAMgoC,eAAiB,WAAa,SAChD9sC,MAAQlB,KAAKgG,MAAMgoC,eAAiBhuC,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,UAAY,aAE9F1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJjI,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,cAMczB,KAAKgG,MAAMiG,cANzB,SAaRjM,KAAKgG,MAAMiG,cACT/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKtD,MAAO,GAERG,KAAKgG,MAAMsoC,4BAA8BtuC,KAAKgG,MAAMunC,YAAcvtC,KAAKgG,MAAMqnC,WAC3EnqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ7E,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,sBAGAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFnF,MAAM,IACNuxB,YAAY,WACV,OAAOjjB,EAAKnI,MAAMunC,WAAap/B,EAAKguB,UAAU,WAAa,OAG/Dt0B,eAAe,EACfopC,YAAcjxC,KAAKgG,MAAMunC,WACzBj9B,SAAiC,YAAtBtQ,KAAKgG,MAAMoF,QAEtBlI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE8F,GAAI,EACJnJ,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAACgQ,GAAA,EAAD,CACEN,YAAa,CACX/D,OAAO,WAETuhB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,MAIT+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,GAFd,aAQJ0B,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFnF,MAAM,IACNuxB,YAAY,WACV,OAAOjjB,EAAKnI,MAAMqnC,SAAWl/B,EAAKguB,UAAU,UAAY,OAG5Dt0B,eAAe,EACfopC,YAAcjxC,KAAKgG,MAAMqnC,SACzB/8B,SAAiC,WAAtBtQ,KAAKgG,MAAMoF,QAEtBlI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE8F,GAAI,EACJnJ,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAACgQ,GAAA,EAAD,CACEN,YAAa,CACX/D,OAAO,UAETuhB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,MAIT+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVC,WAAY,GAFd,aAYY,YAAtBxB,KAAKgG,MAAMoF,OACToqC,EACEtyC,EAAA1D,EAAAC,cAACyxC,GAAA,EAADvxC,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkxC,aAAa,EACbK,gBAAiB,GACjBJ,eAAe,EACfC,iBAAiB,EACjBE,cAAe,eACf5lB,SAAU,uBACVzf,YAAalM,KAAKgG,MAAMkG,YACxBD,cAAejM,KAAKgG,MAAMiG,cAC1BymB,gBAAiB1yB,KAAKyuC,YAAY9/B,KAAK3O,MACvCyZ,iBAAkBzZ,KAAKC,MAAMwZ,iBAC7B+0B,kBAAmBxuC,KAAKwuC,kBAAkB7/B,KAAK3O,MAC/C2xC,cAAa,gBAAAzpC,OAAkBlI,KAAKgG,MAAM67B,oBAAoBp2B,MAAjD,+CAAAvD,OAAoGlI,KAAKgG,MAAMkG,YAAY81B,KAAKv2B,MAAhI,OAGVzL,KAAKC,MAAMuN,QAoCVtK,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFiE,GAAG,IAIHynC,EACExtC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNzE,MAAO,WACP0E,KAAM,mBAER1C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTzB,KAAKgG,MAAM+nC,eACT7qC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CACE1qB,MAAO,YADT,qFAIAgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CACE1qB,MAAO,YADT,mCAGmC0uC,EAAajjC,QAAQ,GAHxD,IAG6D3M,KAAKgG,MAAM67B,oBAAoBp2B,MAH5F,kEAK+C,qBAApCzL,KAAKgG,MAAMsnC,YAAYoD,IAC9BxtC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CACE1qB,MAAO,YAEPgC,EAAA1D,EAAAC,cAAA,WAHF,eAGqBO,KAAKgG,MAAMsnC,YAAYoD,GAAS/jC,QAAQ,GAH7D,IAGkE3M,KAAKgG,MAAM67B,oBAAoBp2B,UAQ3GzL,KAAKgG,MAAMooC,mBACblrC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,UACN1E,MAAOlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,YAErD1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,wCAMwCzB,KAAKgG,MAAM67B,oBAAoBp2B,MANvE,qBAUFvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,WACN1E,MAAO,aAETgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,sBAMsBzB,KAAKgG,MAAM67B,oBAAoBp2B,MANrD,sBA9GRvI,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFU,GAAG,IAGLxC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,QACN1E,MAAO,aAETgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQAyB,EAAA1D,EAAAC,cAACyW,EAAA,EAAD,CACExS,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,KAEX4D,YAAazD,KAAKC,MAAM6F,2BAL1B,cAuGV5C,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFiE,GAAG,IAGL/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVL,MAAO,WACPO,UAAW,UAHb,iDAWNyB,EAAA1D,EAAAC,cAACgI,EAAA,EAAD,CACEhC,UAAW,CACTT,EAAE,EACFiE,GAAG,IAIHjJ,KAAKgG,MAAM0gB,WAAW+mB,MAAMxjC,QAC1B/G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC6mB,EAAA,EAAD,CAAesB,KAAM5nB,KAAKC,MAAM2nB,KAAM+D,SAAQ,qBAAwBD,WAAU,gCAAmCjpB,KAAMzC,KAAKgG,MAAM0gB,WAAW+mB,MAAM1+B,UAErJ/O,KAAKgG,MAAMgoC,eACb9qC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNC,KAAM,UACN1E,MAAOlB,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAa/G,OAAOsE,YAErD1H,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,wCAMwCzB,KAAKgG,MAAMiG,cANnD,QAQA/I,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJjE,UAAW,SACXmI,WAAY,UACZpG,QAAU,SAAA6F,GAAC,OAAI8E,EAAKlO,MAAMmsC,YAAYj+B,EAAKnI,MAAM67B,oBAAoBqI,SAAS,IAAI/7B,EAAKnI,MAAM67B,oBAAoBlF,aAJnH,wBASA38B,KAAKgG,MAAM+nC,eACb7qC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNzE,MAAO,WACP0E,KAAM,eAER1C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,+BAM8ByB,EAAA1D,EAAAC,cAAA,WAN9B,0BAM4DO,KAAKgG,MAAMkG,YAAY81B,KAAKv2B,MANxF,QAQAvI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAACyW,EAAA,EAAD,CACExS,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,IACT0J,UAAUvJ,KAAKC,MAAMkI,MAAMC,OAAOiC,QAEpC5G,YAAc,SAAA4F,GAAC,OAAI8E,EAAKs/B,UAN1B,WAaJvqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZe,cAAe,UAEfqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,QACNzE,MAAO,WACP0E,KAAM,mBAER1C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAEXyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CACE1qB,MAAO,YADT,mCAGmC0uC,EAAajjC,QAAQ,GAHxD,IAG6D3M,KAAKgG,MAAM67B,oBAAoBp2B,MAH5F,qEAK+C,qBAApCzL,KAAKgG,MAAMsnC,YAAYoD,IAC9BxtC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CACE1qB,MAAO,YAEPgC,EAAA1D,EAAAC,cAAA,WAHF,eAGqBO,KAAKgG,MAAMsnC,YAAYoD,GAAS/jC,QAAQ,GAH7D,IAGkE3M,KAAKgG,MAAM67B,oBAAoBp2B,YAYnH,cAlwBanL,8IC6BvBo1C,GAAMC,yqCAENtgC,GAAgB,CACpBugC,QAAS,OACTC,QAAS,OACTlZ,UAAW,MACXmZ,QAAS,uBACTC,SAAS,2BACT5tC,MAAM,CACJ6tC,iBAAgB,GAElBC,QAAS,4BACTC,UAAU,CACRC,IAAM,2BACNC,IAAM,iBACNC,IAAM,YACNC,IAAM,SACNC,IAAM,QACNC,IAAM,SACNC,IAAM,SACNC,IAAM,YACNC,IAAM,QACNC,IAAM,SACNC,IAAM,SACNC,IAAM,eACNC,IAAM,eAERxe,KAAK,CACHye,eAAc,EACdC,iBAAgB,GAElBC,WAAW,CACTC,SAAS,CACPvd,SAAQ,EACR9oB,WAAW,qBAEbsmC,MAAM,CACJxd,SAAQ,EACR9oB,WAAW,yBAEbumC,OAAO,CACLzd,SAAQ,EACRjkB,KAAK,aACL7E,WAAW,qBAEbwmC,SAAS,CACP1d,SAAQ,EACRjkB,KAAK,eACL7E,WAAW,gCAEbymC,YAAY,CACV3d,SAAQ,EACR9oB,WAAW,6BAEb0mC,cAAc,CACZ5d,SAAQ,EACR6d,UAAU,oBACV3mC,WAAW,wBAEb4mC,WAAW,CACT9d,SAAQ,EACRjkB,KAAK,eACL/P,KAAK,kBACLkL,WAAW,wBAEb6mC,UAAU,CACR/d,SAAQ,EACR9oB,WAAW,2BAEb8mC,OAAO,CACLhe,SAAQ,EACR9oB,WAAW,qBAEb+mC,UAAU,CACRje,SAAQ,EACR9oB,WAAW,uBAEbgnC,MAAM,CACJle,SAAQ,EACRjkB,KAAK,YACL7E,WAAW,+BAEbinC,OAAO,CACLne,SAAQ,EACR9oB,WAAW,mBAEbknC,OAAO,CACLpe,SAAQ,EACR9oB,WAAW,mBAEbmnC,OAAO,CACLre,SAAQ,EACRjkB,KAAK,iBACL7E,WAAW,mBAGfonC,uBAAuB,CACrBC,SAAS,iDAEXC,SAAS,CACPC,WAAW,sBACXC,SAAS,0BACTjgC,WAAW,2DACXkgC,YAAY,2DACZC,mBAAmB,8EACnB5hB,kBAAkB,mFAClB6hB,WAAW,4FACXC,eAAe,qGACfC,YAAY,iIACZvd,sBAAsB,iHACtBwd,0BAA0B,6IAC1BC,eAAe,8JACfC,8BAA8B,qNAC9B3N,QAAQ,8TACRE,aAAa,0bACbD,UAAS,0aACT2N,kBAAiB,4bAEnBC,UAAU,CACRC,OAAO,CACLC,OAAO,CACLtf,SAAQ,EACRuf,cAAa,EACbC,sBAAqB,KAI3BC,OAAO,CACLC,wBAAuB,EACvBC,qBAAoB,EACpB/uC,QAAQ,CACNovB,SAAQ,GAEV4f,QAAQ,CACN5f,SAAQ,EACR6f,UAAU,SAGdC,UAAU,CACRC,UAAU,aACVxxC,MAAM,CACJyxC,KAAK,QACL5D,iBAAgB,IAGpB6D,WAAW,CACTC,MAAK,EACLlgB,SAAQ,EACRmgB,WAAW,SACXJ,UAAU,cACV15C,MAAM,CACJ+5C,UAAU,OACVC,mBAAmB,CACjBC,OACAC,cACAC,cACAC,iBACAC,iBACAC,oBAGJC,UAAU,CACRC,UAAU,OACVZ,WAAW,kBAGfl8B,MAAM,CACJic,SAAQ,EACRjG,OAAO,CACL+mB,QAAQ,EACR/4C,MAAM,QACN0qC,MAAM,mBACNt8B,MAAM,6BACN4qC,cAAc,kCAEhBC,MAAM,CACJ9Z,KAAK,CAAC,MAAM,MAAM,QAClBqX,SAAS,4CAEX0C,aAAa,CACXl2C,SAAS,GACTswB,IAAI6lB,EACJl1C,KAAK,4BACL6F,MAAM,4BACNyJ,QAAQ,8CAEV6lC,gBAAgB,CACd9lB,IAAI+lB,GACJp1C,KAAK,mBACLsP,QAAQ,8CAEV+lC,cAAc,CACZhmB,IAAIimB,GACJt1C,KAAK,mBACLsP,QAAQ,8CAEVimC,YAAY,CACVlmB,IAAImmB,EACJx1C,KAAK,eACLsP,QAAQ,8CAEV85B,kBAAkB,CAChB/Z,IAAI+lB,GACJp1C,KAAK,mBACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,mBAIXuG,gBAAgB,CACdkvC,aAAa,CACX12C,SAAS,GACTi1B,SAAQ,EACR+C,UAAU,MACVlxB,MAAM,eACNyJ,QAAQ,6CACRs8B,gBAAgB,CACdkJ,QAAQ,EACRY,UAAU,IAGdC,cAAc,CACZ52C,SAAS,GACTi1B,SAAQ,EACR+C,UAAU,OACVlxB,MAAM,gBACNyJ,QAAQ,6CACRs8B,gBAAgB,CACdkJ,QAAQ,EACRY,UAAU,IAGdE,cAAc,CACZ72C,SAAS,GACTi1B,SAAQ,EACR+C,UAAU,OACVlxB,MAAM,gBACNyJ,QAAQ,6CACRs8B,gBAAgB,CACdkJ,QAAQ,EACRY,UAAU,MAKlBG,OAAO,CACLC,IAAI,CACF7F,QAAQ,EACR8F,WAAW,KACXrM,YAAY,SACZ1pC,KAAK,iBACLrB,KAAK,CACH,CAAEqB,KAAM,SAAUrB,KAAM,WACxB,CAAEqB,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,SAAUrB,KAAM,WACxB,CAAEqB,KAAM,UAAWrB,KAAM,UAG7Bq3C,KAAK,CACH/F,QAAQ,EACRjwC,KAAK,WACL+1C,WAAW,KACXrM,YAAY,SACZ/qC,KAAK,CACH,CAAEqB,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,WAAYrB,KAAM,aAG9Bs3C,IAAI,CACFhG,QAAQ,EACR8F,WAAW,KACXrM,YAAY,SACZ1pC,KAAK,qBACLrB,KAAK,CACH,CAAEqB,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,WAAYrB,KAAM,cAIhC2mC,UAAU,CACRgP,KAAK,CACHjlB,IAAIilB,EACJv1C,SAAS,GACT8G,MAAM,OACNmuB,SAAQ,EACRkiB,SAAQ,EACRC,SAAQ,EACRC,SAAS,OACTC,WAAU,EACVC,eAAe,GACfnvB,aAAY,EACZovB,gBAAe,EACfC,sBAAsB,MACtBl7C,MAAM,sBACNyU,KAAK,yBACLT,QAAQ,8CAIVmnC,KAAK,CACHpnB,IAAIonB,EACJ13C,SAAS,GACT8G,MAAM,OACNmuB,SAAQ,EACRkiB,SAAQ,EACRC,SAAQ,EACRE,WAAU,EACVlvB,aAAY,EACZmvB,eAAe,GACfF,SAAS,WACTG,gBAAe,EACfC,sBAAsB,MACtBl7C,MAAM,sBACNgU,QAAQ,+CAIZslC,UAAU,CACR8B,WAAW,CACTrnB,IAAIqnB,EACJpnC,QAAQ,8CAEVilC,YAAY,CACVllB,IAAIklB,EACJjlC,QAAQ,8CAEVklC,YAAY,CACVnlB,IAAImlB,EACJllC,QAAQ,8CAGVqnC,SAAS,CACPtnB,IAAIsnB,EACJrnC,QAAQ,8CAGVolC,cAAc,CACZrlB,IAAIqlB,GACJplC,QAAQ,8CAGVsnC,cAAc,CACZvnB,IAAIunB,GACJtnC,QAAQ,8CAGVqlC,eAAe,CACbtlB,IAAIslB,GACJrlC,QAAQ,8CAGVunC,aAAa,CACTxnB,IAAIwnB,GACJvnC,QAAQ,8CAGZmlC,cAAc,CACZplB,IAAIolB,GACJnlC,QAAQ,8CAGVwnC,YAAY,CACVznB,IAAIynB,GACJxnC,QAAQ,8CAGVynC,gBAAgB,CACd1nB,IAAI2nB,GACJ1nC,QAAQ,8CAEV2nC,cAAc,CACZ5nB,IAAI6nB,GACJ5nC,QAAQ,8CAEV6nC,sBAAsB,CACpB9nB,IAAI8nB,GACJ7nC,QAAQ,+CAGZ29B,OAAO,CACL6I,IAAI,CACFsB,cAAc,CACZC,YAAa,0BACbC,UAAU,6EACVC,cAAe,CACXC,aAAc,6CACdC,cAAe,SAIvBzB,KAAK,CACHoB,cAAc,CACZC,YAAa,0BACbC,UAAU,6EACVC,cAAe,CACXC,aAAc,6CACdC,cAAe,UAKzBC,WAAW,CACTC,KAAK,CACH9xC,MAAM,MACNvK,MAAM,UACNs8C,YAAW,EACXC,cAAa,EACbC,aAAa,KACbv9B,MAAM,aACNhQ,SAAS,WACTwtC,kBAAiB,EACjB5tB,UAAW4Y,GACXiV,WAAW,kBACXjoC,KAAK,gCACLkoC,aAAa,iCACbC,iBAAiB,mCACjBtR,KAAK,8CACLuR,SAAS,4lBACTC,UAAU,0JAEZC,KAAK,CACHxyC,MAAM,MACNvK,MAAM,UACNs8C,YAAW,EACXE,aAAa,KACbD,cAAa,EACbttC,SAAS,WACTgQ,MAAM,gBACNw9B,kBAAiB,EACjB5tB,UAAW4Y,GACXiV,WAAW,mBACXjoC,KAAK,gCACLkoC,aAAa,iCACbC,iBAAiB,mCACjBtR,KAAK,oDACLuR,SAAS,6aACTC,UAAU,wGAEZE,IAAI,CACFzyC,MAAM,MACNvK,MAAM,UACNs8C,YAAW,EACXC,cAAa,EACbttC,SAAS,SACTgQ,MAAM,cACNy9B,WAAW,mBACXjoC,KAAK,gCACL62B,KAAK,mCACLqR,aAAa,iCACbE,SAAS,6aACTC,UAAU,yGAGd1oC,MAAM,CACJskB,SAAQ,EACRghB,MAAM,CACJuD,IAAI,IACJhG,SAAS,mCAEXiG,KAAK,CACHD,IAAI,IACJhG,SAAS,kCAEXkG,SAAS,CACPF,IAAI,KACJhG,SAAS,sCAEXmG,OAAO,CACLH,IAAI,IACJhG,SAAS,oCAEXoG,OAAO,CACLC,QAAS9I,GAAI+I,mBAAqB,CAAEC,cAAa,UAAAx2C,OAAYwtC,GAAI+I,qBAAyB,IAE5FE,SAAS,CAYPC,GAAG,CACDj9C,MAAM,UACNk9C,oBAAoB,GACpBC,aAAa,WACbC,eAAe,WACfC,wBAAuB,EACvBC,iBAAiB,CACfhB,KAAK,CACHa,aAAa,aAGjBI,kBAAkB,CAAC,OAAO,QAC1B5xC,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,SAEnD6xC,GAAG,CACDx9C,MAAM,UACNm9C,aAAa,KACbC,eAAe,WACfG,kBAAkB,CAAC,OAAO,QAC1BF,wBAAuB,EACvBC,iBAAiB,CACfhB,KAAK,CACHc,eAAe,aAGnBzxC,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,QACxDuxC,oBAAoB,CAClB,CACEl6C,SAAS,GACTq3C,SAAS,WACTp2C,KAAK,uBAKbitC,OAAO,CACL6I,IAAI,CACF/2C,SAAS,GACTi1B,SAAQ,EACR14B,MAAM,CACJk+C,IAAI,CAAC,IAAI,IAAI,IACbC,IAAI,UACJ9pC,IAAI,CAAC,KAAM,MAAO,QAEpB+pC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCR,eAAe,aACf7pC,QAAQ,6CACRsqC,mBAAmB,8KAErBC,IAAI,CACF7lB,SAAQ,EACR14B,MAAM,CACJm+C,IAAI,UACJD,IAAI,CAAC,IAAK,IAAK,KACf7pC,IAAI,CAAC,KAAM,MAAO,QAEpB+pC,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCrqC,QAAQ,KACR6pC,eAAe,cAEjBnD,KAAK,CACHj3C,SAAS,EACTi1B,SAAQ,EACR14B,MAAM,CACJm+C,IAAI,UACJD,IAAI,CAAC,GAAG,IAAI,KACZ7pC,IAAI,CAAC,MAAO,MAAO,QAErB+pC,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCR,eAAe,aACf7pC,QAAQ,6CACRsqC,mBAAmB,8KAErBE,KAAK,CACH/6C,SAAS,EACTi1B,SAAQ,EACR14B,MAAM,CACJm+C,IAAI,UACJD,IAAI,CAAC,GAAI,IAAK,KACd7pC,IAAI,CAAC,MAAO,MAAO,QAErB+pC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCR,eAAe,aACf7pC,QAAQ,6CACRsqC,mBAAmB,8KAErBG,KAAK,CACHh7C,SAAS,GACTi1B,SAAQ,EACR14B,MAAM,CACJm+C,IAAI,SACJD,IAAI,CAAC,EAAG,GAAI,KACZ7pC,IAAI,CAAC,MAAO,MAAO,QAErB+pC,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCR,eAAe,aACf7pC,QAAQ,8CAEV0qC,KAAK,CACHj7C,SAAS,GACTi1B,SAAQ,EACR14B,MAAM,CACJm+C,IAAI,UACJD,IAAI,CAAC,GAAI,GAAI,IACb7pC,IAAI,CAAC,MAAO,MAAO,QAErB+pC,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCR,eAAe,aACf7pC,QAAQ,8CAEV2qC,KAAK,CACHl7C,SAAS,EACTi1B,SAAQ,EACR14B,MAAM,CACJm+C,IAAI,UACJD,IAAI,CAAC,IAAK,IAAK,IACf7pC,IAAI,CAAC,KAAM,MAAO,QAEpBwpC,eAAe,aACf/jC,oBAAoB,eACpBskC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCrqC,QAAQ,6CACRsqC,mBAAmB,8KAErBM,KAAK,CACHn7C,SAAS,GACTi1B,SAAQ,EACR14B,MAAM,CACJm+C,IAAI,UACJD,IAAI,CAAC,IAAK,GAAI,KACd7pC,IAAI,CAAC,MAAO,MAAO,QAErBwpC,eAAe,aACf/jC,oBAAoB,eACpBskC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCrqC,QAAQ,6CACRsqC,mBAAmB,8KAErBnD,KAAK,CACH13C,SAAS,GACTi1B,SAAQ,EACR14B,MAAM,CACJm+C,IAAI,UACJD,IAAI,CAAC,EAAG,IAAK,KACb7pC,IAAI,CAAC,MAAO,OAAQ,QAEtBwpC,eAAe,aACf/jC,oBAAoB,eACpBskC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCrqC,QAAQ,8CAEVglC,KAAK,CACHv1C,SAAS,GACTi1B,SAAQ,EACR14B,MAAM,CACJm+C,IAAI,UACJD,IAAI,CAAC,GAAI,GAAI,KACb7pC,IAAI,CAAC,MAAO,MAAO,QAErBwpC,eAAe,aACfppC,KAAK,yBACLqF,oBAAoB,eACpBskC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCrqC,QAAQ,8CAEV6qC,4BAA4B,CAC1Bp7C,SAAS,GACTi1B,SAAQ,EACRh0B,KAAK,WACL1E,MAAM,CACJm+C,IAAI,UACJD,IAAI,CAAC,IAAK,EAAG,GACb7pC,IAAI,CAAC,IAAK,OAAQ,QAEpBwpC,eAAe,eAGnBjqC,UAAU,CACRkrC,SAAS,CACPpjC,QAAO,EACPgd,SAAQ,EACRj4B,MAAM,WACNT,MAAM,CACJk+C,IAAI,CAAC,EAAG,IAAK,KACb7pC,IAAI,CAAC,MAAO,OAAQ,SAGxB0qC,iBAAiB,CACfrmB,SAAQ,EACRsmB,UAAU,CAAC,OAAO,yBAClBv+C,MAAM,kBACNT,MAAM,CACJk+C,IAAI,CAAC,EAAG,IAAK,KACb7pC,IAAI,CAAC,MAAO,OAAQ,SAGxB4qC,QAAQ,CACNvjC,QAAO,EACPgd,SAAQ,EACRj4B,MAAM,UACNT,MAAM,CACJk+C,IAAI,CAAC,EAAG,IAAK,KACb7pC,IAAI,CAAC,MAAO,MAAO,SAGvB6qC,IAAI,CACFz+C,MAAM,MACNi4B,SAAQ,EACRjkB,KAAK,WACLzU,MAAM,CACJk+C,IAAI,CAAC,IAAK,GAAI,IACd7pC,IAAI,CAAC,MAAO,MAAO,SAGvB8qC,KAAK,CACHzjC,QAAO,EACPjb,MAAM,OACNi4B,SAAQ,EACR14B,MAAM,CACJk+C,IAAI,CAAC,GAAI,GAAI,IACb7pC,IAAI,CAAC,MAAO,KAAM,SAGtB+qC,MAAM,CACJ3+C,MAAM,QACNi4B,SAAQ,GAEV2mB,KAAK,CACH5+C,MAAM,UACNib,QAAO,EACPgd,SAAQ,EACR14B,MAAM,CACJk+C,IAAI,CAAC,IAAK,IAAK,KACf7pC,IAAI,CAAC,MAAO,MAAO,SAGvBirC,OAAO,CACL5jC,QAAO,EACPgd,SAAQ,EACRjkB,KAAK,WACLhU,MAAM,UACNT,MAAM,CACJk+C,IAAI,CAAC,IAAK,GAAI,KACd7pC,IAAI,CAAC,MAAO,MAAO,SAGvBoI,MAAM,CACJhc,MAAM,GACNi4B,SAAQ,EACR14B,MAAM,CACJk+C,IAAI,CAAC,EAAG,GAAI,KACZ7pC,IAAI,CAAC,MAAO,OAAQ,SAGxBysB,KAAK,CACHrgC,MAAM,OACNi4B,SAAQ,EACR14B,MAAM,CACJk+C,IAAI,CAAC,EAAG,GAAI,KACZ7pC,IAAI,CAAC,MAAO,OAAQ,WAK5B0hB,SAAS,CACPuY,QAAQ,CACNnlC,OAAO,CACLo2C,eAAc,EACdC,yBAAwB,GAE1Bt2C,QAAQ,CACNu2C,UAAS,EACTC,iBAAiB,IACjBC,uBAAsB,EACtBC,yBAAwB,EACxBJ,yBAAwB,EAExBK,4BAA4B,CAC1BC,UAAU,CACRpnB,SAAQ,EACR3E,IAAIgsB,GACJr7C,KAAK,iBACLs7C,SAAS,cACThsC,QAAQ,8CAGV29B,OAAO,CACL6I,IAAI,CACF9hB,SAAQ,EACRunB,WAAW,aACXlsB,IAAImsB,GACJF,SAAS,mBACTt7C,KAAK,0BACLsP,QAAQ,8CAGV0mC,KAAK,CACHhiB,SAAQ,EACRunB,WAAW,cACXlsB,IAAImsB,GACJx7C,KAAK,2BACLs7C,SAAS,0BACThsC,QAAQ,gDAKdmsC,cAAc,CACZznB,SAAQ,EACR3E,IAAIqsB,GACJ17C,KAAK,kBACLs7C,SAAS,sBACThsC,QAAQ,+CAGZ1K,QAAQ,CACNi2C,eAAc,EACdc,sBAAsB,IACtBC,4BAA4B,KAE9BC,gBAAgB,CACd7nB,SAAQ,GAEV8nB,UAAU,CACR9nB,SAAQ,EACR3E,IAAI0sB,MAIVC,QAAQ,CACNC,kBAAkB,CAChBljB,EAAE,UACFE,EAAE,UACFijB,EAAE,UACFC,GAAG,QACHC,KAAK,WAEPC,UAAS,EACTC,gBAAgB,EAChBC,cAAc,QACd10C,iBAAiB,QACjB20C,sBAAuB,EACvBC,sBAAuB,EACvBC,UAAU,CACRC,OAAO,CACLR,GAAI,8BACJpjB,EAAG,gCACHqjB,KAAM,iCAERQ,UAAU,CACR5oB,SAAQ,EACR6oB,UAAU,CACR9jB,EAAG,+BACHqjB,KAAM,+BACND,GAAI,uCAGRW,SAAS,CACPC,UAAU,CACR,6CACA,8CAEFF,UAAU,CACRG,UAAU,2DAEZC,KAAK,CACHD,UAAU,4DAGdE,SAAS,CACPlpB,SAAQ,EACRmpB,aAAY,EACZC,kBAAkB,CAAC,EAAE,IACrBC,gBAAgB,CAAC,aACjBR,UAAU,CACRS,OAAO,mDAETvvB,OAAO,CACLwvB,OAAO,EACPC,OAAQ1N,GAAI2N,uBACZC,OAAQ5N,GAAI6N,yBACZC,MAAO,yCAIXC,SAAS,CACP7pB,SAAQ,EACRopB,kBAAkB,CAAC,EAAE,IACrBrvB,OAAO,CACLyvB,OAAQ1N,GAAIgO,uBACZC,UAAWjO,GAAIkO,8BACfC,OAAQ,KACRC,YAAaC,eAAaC,MAG9BC,SAAS,CACPrqB,SAAQ,EACRopB,kBAAkB,CAAC,GACnBkB,WAAW,SAACC,EAAUtC,GACpB,IAAIuC,EAAc,KAClB,OAAQD,GACN,KAAK,EACHC,EAAc,UAChB,MACA,QACEA,EAAcvC,EAAkBsC,GAAatC,EAAkBsC,GAAW94C,cAAgB,UAG9F,OAAO+4C,GAETzwB,OAAO,CACL0wB,UAAWj1C,OAAOk1C,SAASC,OAC3B3O,QAAS,OACT4O,MAAO,uCACPC,qBAAqB,EACrB7C,QAAS,cAKjB8C,cAAc,CACZ,CACE9qB,SAAQ,EACR6K,IAAI,cACJC,MAAM,cACNr4B,KAAK,yBACL8T,MAAM,2BACN1d,KAAK,kCACLsN,MAAM,mCACN3P,KAAK,+CAGTukD,MAAM,CACJC,WAAW,CACThrB,SAAQ,EACRj4B,MAAM,cACN0qC,MAAM,cACNwY,aAAarlB,EACbzvB,MAAM,yBACNy8B,KAAK,iEACLvsC,MAAM,CACJo5B,cAAc,CACZzzB,KAAK,MACL6F,MAAM,MACN9G,SAAS,GACT20B,WAAW,WAEbC,aAAa,CACXtE,IAAI6qB,EACJl6C,KAAK,OACLjB,SAAS,GACT8G,MAAM,OACN+tB,aAAa,WACbtkB,QAAQ,gDAId4vC,MAAM,CACJlrB,SAAQ,EACRjkB,KAAK,SACLhU,MAAM,aACN0qC,MAAM,aACNwY,aAAa7uB,EACbwW,KAAK,yDACLvsC,MAAM,CACJkM,gBAAgB,CACd0vC,IAAI,CACF5kB,SAAS,CACPtyB,SAAS,GACTswB,IAAI8vB,EACJn/C,KAAK,YACLs1B,cAAc,EACdG,aAAa,IACbxD,YAAY,OACZ3iB,QAAQ,8CAGVtP,KAAK,MACL6F,MAAM,MACN9G,SAAS,GACTi1B,SAAQ,EACR3E,IAAI+vB,GACJrjD,MAAM,8BACNgU,KAAK,iCACLT,QAAQ,6CACR+mB,SAAS,mFAKjBgpB,cAAc,CACZrrB,SAAQ,EACRj4B,MAAM,iBACN0qC,MAAM,iBACNwY,aAAahT,GACb9hC,MAAM,kCACNy8B,KAAK,8DACLQ,aAAa,6DACb/sC,MAAM,CACJg3B,SAAS,CACPtyB,SAAS,GACTswB,IAAIiwB,EACJt/C,KAAK,YACLsP,QAAQ,8CAEVo/B,UAAU,CACR,CACErC,WAAW,MACXS,oBAAoB,WACpBG,OAAO,CACLsS,MAAM,CACJlwB,IAAImwB,EACJx/C,KAAK,oCACLsP,QAAQ,6CACRq+B,aAAa,CACX5uC,SAAS,GACTswB,IAAIowB,GACJz/C,KAAK,wCACLsP,QAAQ,+CAGZowC,QAAQ,CACNrwB,IAAImwB,EACJx/C,KAAK,sCACLsP,QAAQ,6CACRq+B,aAAa,CACX5uC,SAAS,GACTswB,IAAIowB,GACJz/C,KAAK,0CACLsP,QAAQ,oDAQtB06B,aAAa,CACXhW,SAAQ,EACRjkB,KAAK,UACL4vC,cAAa,EACbzV,gBAAe,EACfzD,MAAM,gBACN1qC,MAAM,gBACNkjD,aAAazX,GACbZ,KAAK,6FACLvsC,MAAM,CACJkM,gBAAgB,CACdkvC,aAAa,CACX12C,SAAS,GACTulC,SAAS,OACTvN,UAAU,MACViV,YAAY,IACZ5C,kBAAkB,CAChB/Z,IAAIuwB,GACJ5/C,KAAK,qBACLsP,QAAQ,6CAERk6B,UAAU,CACR,CACExpC,KAAK,UACL8nC,WAAU,EACV/rC,MAAM,UACN8jD,WAAW,uBAKnBlK,cAAc,CACZ52C,SAAS,EACTulC,SAAS,OACTvN,UAAU,OACViV,YAAY,IACZ5C,kBAAkB,CAChB/Z,IAAIuwB,GACJ5/C,KAAK,sBACLsP,QAAQ,6CAERk6B,UAAU,CACR,CACExpC,KAAK,UACLjE,MAAM,UACN+rC,WAAU,EACV+X,WAAW,0CAoIzBC,eAAe,CACb9rB,SAAQ,EACR2rB,cAAa,EACbzV,gBAAe,EACfn6B,KAAK,eACL02B,MAAM,kBACN1qC,MAAM,kBACNkjD,aAAavP,GACb9I,KAAK,8FACLvsC,MAAM,CACJkM,gBAAgB,CACdkvC,aAAa,CACX12C,SAAS,GACTswB,IAAI0wB,GACJzb,SAAS,OACTvN,UAAU,MACV/2B,KAAK,iBACL6F,MAAM,iBACNyJ,QAAQ,6CACR85B,kBAAkB,CAChB/Z,IAAI2wB,GACJhgD,KAAK,wBACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,cAKb21C,cAAc,CACZ52C,SAAS,GACTswB,IAAI0wB,GACJzb,SAAS,OACTvN,UAAU,OACV/2B,KAAK,kBACL6F,MAAM,kBACNyJ,QAAQ,6CACR85B,kBAAkB,CAChB/Z,IAAI2wB,GACJhgD,KAAK,yBACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,cAKb41C,cAAc,CACZ72C,SAAS,GACTswB,IAAI0wB,GACJzb,SAAS,OACTvN,UAAU,OACV/2B,KAAK,kBACL6F,MAAM,kBACNyJ,QAAQ,6CACR85B,kBAAkB,CAChB/Z,IAAI2wB,GACJhgD,KAAK,yBACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,cAKbigD,cAAc,CACZlhD,SAAS,GACTswB,IAAI0wB,GACJzb,SAAS,OACTvN,UAAU,OACV/2B,KAAK,kBACL6F,MAAM,kBACNyJ,QAAQ,6CACR85B,kBAAkB,CAChB/Z,IAAI2wB,GACJhgD,KAAK,yBACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,cAKbkgD,cAAc,CACZnhD,SAAS,GACTswB,IAAI0wB,GACJzb,SAAS,OACTvN,UAAU,OACV/2B,KAAK,kBACL6F,MAAM,kBACNyJ,QAAQ,6CACR85B,kBAAkB,CAChB/Z,IAAI2wB,GACJhgD,KAAK,yBACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,cAKbmgD,cAAc,CACZphD,SAAS,GACTswB,IAAI0wB,GACJzb,SAAS,OACTvN,UAAU,OACV/2B,KAAK,kBACL6F,MAAM,kBACNyJ,QAAQ,6CACR85B,kBAAkB,CAChB/Z,IAAI2wB,GACJhgD,KAAK,yBACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,cAKbogD,YAAY,CACVrhD,SAAS,GACTswB,IAAI0wB,GACJzb,SAAS,OACTvN,UAAU,MACV/2B,KAAK,gBACL6F,MAAM,gBACNyJ,QAAQ,6CACR85B,kBAAkB,CAChB/Z,IAAI2wB,GACJhgD,KAAK,4BACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,cAKbqgD,aAAa,CACXthD,SAAS,GACTswB,IAAI0wB,GACJzb,SAAS,OACTvN,UAAU,OACV/2B,KAAK,iBACL6F,MAAM,iBACNyJ,QAAQ,6CACR85B,kBAAkB,CAChB/Z,IAAI2wB,GACJhgD,KAAK,6BACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,cAKbsgD,aAAa,CACXvhD,SAAS,GACTswB,IAAI0wB,GACJzb,SAAS,OACTvN,UAAU,OACV/2B,KAAK,iBACL6F,MAAM,iBACNyJ,QAAQ,6CACR85B,kBAAkB,CAChB/Z,IAAI2wB,GACJhgD,KAAK,6BACLsP,QAAQ,6CACRk6B,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,iBAQnBugD,eAAe,CACbvsB,SAAQ,EACRjkB,KAAK,YACL02B,MAAM,UACN1qC,MAAM,kBACN6qC,KAAK,yEACLqY,aAAa5P,GACbh1C,MAAM,CACJ+uC,kBAAkB,CAChBppC,KAAK,kBACLqvB,IAAImxB,GACJlxC,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,uBAIXg+B,oBAAoB,CAAC,OAAO,QAC5Bz3B,gBAAgB,CACdm6C,UAAU,CACR3hD,SAAS,GACTi1B,SAAQ,EACRoiB,SAAS,OACTrf,UAAU,MACV1H,IAAIsxB,GACJ96C,MAAM,aACNkK,KAAK,4BACL46B,gBAAgB,oBAChBr7B,QAAQ,8CAEVsxC,KAAK,CACH7hD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,OACNkxB,UAAU,MACVqf,SAAS,WACTzL,gBAAgB,4BAChBr7B,QAAQ,8CAEVuxC,KAAK,CACH9hD,SAAS,GACTi1B,SAAQ,EACRnuB,MAAM,OACNkxB,UAAU,MACVqf,SAAS,UACTzL,gBAAgB,2BAChBr7B,QAAQ,8CAEVwxC,KAAK,CACH/hD,SAAS,GACTi1B,SAAQ,EACRnuB,MAAM,OACNuwC,SAAS,OACTrf,UAAU,MACV4T,gBAAgB,wBAChBr7B,QAAQ,8CAEVyxC,OAAO,CACLhiD,SAAS,GACTi1B,SAAQ,EACRnuB,MAAM,SACNwpB,IAAI0xB,EAAO1xB,IACX0H,UAAU,MACVqf,SAAS,QACTrmC,KAAK,yBACL46B,gBAAgB,yBAChBr7B,QAAQ,8CAEV0xC,OAAO,CACLjiD,SAAS,GACTi1B,SAAQ,EACRnuB,MAAM,SACNkxB,UAAU,MACV1H,IAAI0xB,EAAO1xB,IACX+mB,SAAS,QACTrmC,KAAK,yBACL46B,gBAAgB,yBAChBr7B,QAAQ,8CAEV2xC,WAAW,CACTliD,SAAS,GACTi1B,SAAQ,EACRoiB,SAAS,OACT/mB,IAAIsxB,GACJ5pB,UAAU,OACVlxB,MAAM,cACNkK,KAAK,6BACL46B,gBAAgB,oBAChBr7B,QAAQ,8CAEV4xC,MAAM,CACJniD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNkxB,UAAU,OACVqf,SAAS,WACTzL,gBAAgB,4BAChBr7B,QAAQ,8CAEV6xC,MAAM,CACJpiD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNkxB,UAAU,OACVqf,SAAS,UACTzL,gBAAgB,2BAChBr7B,QAAQ,8CAEV8xC,MAAM,CACJriD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNuwC,SAAS,OACTrf,UAAU,OACV4T,gBAAgB,wBAChBr7B,QAAQ,8CAEV+xC,QAAQ,CACNtiD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,UACNuwC,SAAS,QACT/mB,IAAIgyB,EAAQhyB,IACZ0H,UAAU,OACVhnB,KAAK,0BACL46B,gBAAgB,yBAChBr7B,QAAQ,8CAEVgyC,QAAQ,CACNviD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,UACNuwC,SAAS,QACT/mB,IAAIgyB,EAAQhyB,IACZ0H,UAAU,OACVhnB,KAAK,0BACL46B,gBAAgB,yBAChBr7B,QAAQ,8CAEViyC,MAAM,CACJxiD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNkxB,UAAU,OACVqf,SAAS,WACTzL,gBAAgB,4BAChBr7B,QAAQ,8CAEVkyC,MAAM,CACJziD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNkxB,UAAU,OACVqf,SAAS,UACTzL,gBAAgB,2BAChBr7B,QAAQ,8CAEVmyC,MAAM,CACJ1iD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNuwC,SAAS,OACTrf,UAAU,OACV4T,gBAAgB,wBAChBr7B,QAAQ,8CAEVoyC,QAAQ,CACN3iD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,UACNwpB,IAAIqyB,EAAQryB,IACZ+mB,SAAS,QACTrf,UAAU,OACVhnB,KAAK,0BACL46B,gBAAgB,yBAChBr7B,QAAQ,8CAEVqyC,QAAQ,CACN5iD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,UACNwpB,IAAIqyB,EAAQryB,IACZ+mB,SAAS,QACTrf,UAAU,OACVhnB,KAAK,0BACL46B,gBAAgB,yBAChBr7B,QAAQ,8CAEVsyC,WAAW,CACT7iD,SAAS,GACTi1B,SAAQ,EACR3E,IAAIsxB,GACJvK,SAAS,OACTrf,UAAU,OACVlxB,MAAM,mBACNm4B,oBAAoB,CAAC,QACrB2M,gBAAgB,oBAChB56B,KAAK,kCACLT,QAAQ,8CAEVuyC,MAAM,CACJ9iD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNuwC,SAAS,OACTrf,UAAU,OACV4T,gBAAgB,wBAChBr7B,QAAQ,8CAEVwyC,QAAQ,CACN/iD,SAAS,GACTi1B,SAAQ,EACRnuB,MAAM,UACNwpB,IAAIyyB,EACJ/qB,UAAU,OACVqf,SAAS,QACTpY,oBAAoB,CAAC,QACrBjuB,KAAK,4BACL46B,gBAAgB,yBAChBr7B,QAAQ,8CAEVyyC,WAAW,CACThjD,SAAS,GACTi1B,SAAQ,EACR3E,IAAIsxB,GACJvK,SAAS,OACTrf,UAAU,OACVlxB,MAAM,mBACNm4B,oBAAoB,CAAC,QACrB2M,gBAAgB,oBAChB56B,KAAK,kCACLT,QAAQ,8CAEV0yC,MAAM,CACJjjD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNuwC,SAAS,OACTrf,UAAU,OACV4T,gBAAgB,wBAChBr7B,QAAQ,8CAEV2yC,QAAQ,CACNljD,SAAS,GACTi1B,SAAQ,EACR3E,IAAI4yB,EACJp8C,MAAM,UACNkxB,UAAU,OACVqf,SAAS,QACTrmC,KAAK,4BACL46B,gBAAgB,yBAChBr7B,QAAQ,8CAEV4yC,MAAM,CACJnjD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNkxB,UAAU,OACVqf,SAAS,WACTzL,gBAAgB,4BAChBr7B,QAAQ,8CAEV6yC,MAAM,CACJpjD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNkxB,UAAU,OACVqf,SAAS,UACTzL,gBAAgB,2BAChBr7B,QAAQ,8CAEV8yC,MAAM,CACJrjD,SAAS,EACTi1B,SAAQ,EACRnuB,MAAM,QACNuwC,SAAS,OACTrf,UAAU,OACV4T,gBAAgB,wBAChBr7B,QAAQ,iDAKhB+yC,SAAS,CACPruB,SAAQ,EACRjkB,KAAK,mBACL02B,MAAM,YACN1qC,MAAM,YACN6qC,KAAK,oEACLqY,aAAahQ,KACbqT,YAAY,CACVpT,YAAW,EACXqT,eAAc,IAGlBC,UAAU,CACRxuB,SAAQ,EACRjkB,KAAK,WACL02B,MAAM,eACN1qC,MAAM,eACN6qC,KAAK,8CACLqY,aAAanmB,EACbz+B,MAAM,CACJkM,gBAAgB,CACdk8C,IAAM,CAAC58C,MAAQ,OACfiwC,IAAM,CAACjwC,MAAQ,SAGnBy8C,YAAY,CACVI,IAAI,gCACJpzC,QAAQ,+CAGZqzC,UAAU,CACR3uB,SAAQ,EACRjkB,KAAK,OACL02B,MAAM,aACN1qC,MAAM,aACN6qC,KAAK,kDACLqY,aAAavoB,EACbr8B,MAAM,CACJkM,gBAAgB,CACdk8C,IAAM,CAAC58C,MAAQ,OACfiwC,IAAM,CAACjwC,MAAQ,OACfm0C,KAAO,CAACn0C,MAAQ,QAChBk0C,KAAO,CAACl0C,MAAQ,QAChBmwC,KAAO,CAACnwC,MAAQ,QAChB+8C,KAAO,CAAC/8C,MAAQ,QAChBi0C,KAAO,CAACj0C,MAAQ,QAChBo0C,KAAO,CAACp0C,MAAQ,QAChBq0C,KAAO,CAACr0C,MAAQ,QAChBg9C,KAAO,CAACh9C,MAAQ,QAChBi9C,KAAO,CAACj9C,MAAQ,QAChBk9C,OAAO,CAACl9C,MAAQ,QAChBm9C,IAAM,CAACn9C,MAAQ,OACfo9C,MAAQ,CAACp9C,MAAQ,SACjBq9C,KAAO,CAACr9C,MAAQ,QAChBs9C,IAAM,CAACt9C,MAAQ,OACfu9C,IAAM,CAACv9C,MAAQ,OACfw9C,KAAO,CAACx9C,MAAQ,QAChBy9C,IAAM,CAACz9C,MAAQ,OACf09C,IAAM,CAAC19C,MAAQ,OACf29C,IAAM,CAAC39C,MAAQ,OACf49C,IAAM,CAAC59C,MAAQ,OACf69C,IAAM,CAAC79C,MAAQ,OACf89C,IAAM,CAAC99C,MAAQ,OACf+9C,IAAM,CAAC/9C,MAAQ,OACfg+C,IAAM,CAACh+C,MAAQ,OACfi+C,IAAM,CAACj+C,MAAQ,OACfk+C,IAAM,CAACl+C,MAAQ,OACfm+C,IAAM,CAACn+C,MAAQ,OACfo+C,IAAM,CAACp+C,MAAQ,OACfq+C,MAAQ,CAACr+C,MAAQ,SACjBs+C,IAAM,CAACt+C,MAAQ,OACfu+C,IAAM,CAACv+C,MAAQ,OACfw+C,IAAM,CAACx+C,MAAQ,OACfy+C,IAAM,CAACz+C,MAAQ,OACf0+C,IAAM,CAAC1+C,MAAQ,OACf2+C,KAAO,CAAC3+C,MAAQ,QAChB4+C,IAAM,CAAC5+C,MAAQ,OACf6+C,IAAM,CAAC7+C,MAAQ,OACf8+C,KAAO,CAAC9+C,MAAQ,QAChB++C,KAAO,CAAC/+C,MAAQ,QAChBg/C,KAAO,CAACh/C,MAAQ,QAChBi/C,IAAM,CAACj/C,MAAQ,OACfk/C,KAAO,CAACl/C,MAAQ,QAChBm/C,IAAM,CAACn/C,MAAQ,OACfo/C,IAAM,CAACp/C,MAAQ,OACfq/C,IAAM,CAACr/C,MAAQ,OACfs/C,IAAM,CAACt/C,MAAQ,OACfu/C,IAAM,CAACv/C,MAAQ,OACfw/C,IAAM,CAACx/C,MAAQ,OACfy/C,IAAM,CAACz/C,MAAQ,OACf0/C,MAAQ,CAAC1/C,MAAQ,SACjB2/C,KAAO,CAAC3/C,MAAQ,QAChB4/C,IAAM,CAAC5/C,MAAQ,OACf6/C,IAAM,CAAC7/C,MAAQ,OACf8/C,IAAM,CAAC9/C,MAAQ,OACf+/C,IAAM,CAAC//C,MAAQ,OACfggD,KAAO,CAAChgD,MAAQ,QAChBigD,IAAM,CAACjgD,MAAQ,OACfkgD,IAAM,CAAClgD,MAAQ,OACfmgD,KAAO,CAACngD,MAAQ,QAChBogD,KAAO,CAACpgD,MAAQ,QAChBqgD,GAAK,CAACrgD,MAAQ,MACdsgD,IAAM,CAACtgD,MAAQ,OACfugD,IAAM,CAACvgD,MAAQ,OACfwgD,IAAM,CAACxgD,MAAQ,OACfygD,IAAM,CAACzgD,MAAQ,OACf0gD,IAAM,CAAC1gD,MAAQ,OACf2gD,IAAM,CAAC3gD,MAAQ,OACf4gD,IAAM,CAAC5gD,MAAQ,OACf6gD,IAAM,CAAC7gD,MAAQ,OACf8gD,IAAM,CAAC9gD,MAAQ,OACf+gD,IAAM,CAAC/gD,MAAQ,OACfghD,IAAM,CAAChhD,MAAQ,OACfihD,IAAM,CAACjhD,MAAQ,OACfkhD,MAAQ,CAAClhD,MAAQ,SACjBmhD,IAAM,CAACnhD,MAAQ,OACfohD,IAAM,CAACphD,MAAQ,OACfqhD,IAAM,CAACrhD,MAAQ,OACfshD,KAAO,CAACthD,MAAQ,QAChBuhD,IAAM,CAACvhD,MAAQ,OACfwhD,IAAM,CAACxhD,MAAQ,OACfyhD,IAAM,CAACzhD,MAAQ,SAGnBy8C,YAAY,KAIhBiF,SAAU,CACR3d,QAAQ,CACN4d,KAAK,CACHC,gBAAgB,KAChBC,iBAAgB,EAChBrtD,MAAM,CACJ+P,SAAS,kBACTK,QAAQ,iBAGZk9C,KAAK,CACHF,gBAAgB,KAChBC,iBAAgB,EAChBrtD,MAAM,CACJ+P,SAAS,wBACTK,QAAQ,gBAGZm9C,OAAO,CACLH,gBAAgB,gBAChBC,iBAAgB,EAChBrtD,MAAM,CACJ+P,SAAS,6BACTK,QAAQ,kBACRH,WAAW,CACT0V,QAAQ,CAAC,IAAI,WAKrB08B,UAAW,CACTmL,KAAM,CACJ7zB,SAAS,EACT5pB,SAAU,2BACVE,WAAY,CACVrQ,MAAO,CAAC,OAAO,QACfuB,OAAQ,CAAC,OAAO,QAChB6H,GAAI,OAENoH,QAAS,WACTQ,WAAY,MACZC,WAAY,gBACZ48C,iBAAiB,CAAC,QAClBC,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OACxDC,gBAAgB,CAAC,OAAO,MAAM,OAC9BvwB,gBAAgB,GAChBqY,IAAI,OACJmY,UAAU,CACR/T,KAAK,CACHgU,UAAU,kBAEZC,KAAK,CACHD,UAAU,mBAGdE,QAAS,SAAC/tD,GACR,IAAMolB,EAAO,GACb,GAAIplB,EAAMguD,gBAAkBhuD,EAAMguD,eAChC,OAAQhuD,EAAMguD,gBACZ,IAAK,OACH5oC,EAAKvU,WAAL,8BACF,MACA,IAAK,OACHuU,EAAKvU,WAAL,4BAMN,OAAOuU,GAET8X,cAAe,SAACl9B,EAAMoV,EAAc64C,GAClC,IAAMxY,EAAMrgC,EAAc83C,SAAS7K,UAAUmL,KAAK/X,IAE5CyY,EADY94C,EAAc83C,SAAS7K,UAAUmL,KAAKI,UAAUnY,GAC9BoY,UAG9Bn6B,EAAS,CACby6B,KAAI,YAAAlmD,OAAcjI,EAAMuN,SACxB6gD,aAAcH,EAAUjiD,cAAgBiiD,EAAUjiD,cAAkBhM,EAAMiM,YAAYuhD,MAAQxtD,EAAMiM,YAAYuhD,KAAKY,aAAepuD,EAAMiM,YAAYuhD,KAAKY,aAAepuD,EAAMgM,cAChLkiD,oBACAG,YAAYj5C,EAAcygC,SAI5B,MAAO,GAAA5tC,OAVK,oCAUL,KAAUvI,OAAOmF,KAAK6uB,GACxBprB,IAAI,SAAAgmD,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB76B,EAAO46B,MACjE/4C,KAAK,MAEZ4nB,OAAQ,SAACF,EAAWxwB,EAAOzM,EAAMoV,GAE/B,IADmBkb,SAASC,eAAe,eAC3B,CACd,IAAMi+B,EAAYl+B,SAAS9wB,cAAc,OA2BzC,GA1BAgvD,EAAUC,UAAV,68BAAAxmD,OASeg1B,EATf,2dAAAh1B,OAgBsBmN,EAAc83C,SAAS7K,UAAUmL,KAAKz9C,SAhB5D,oQAuBAugB,SAASo+B,KAAK1wB,YAAYwwB,IAGrBl+B,SAASC,eAAe,oBAAoB,CAC/C,IAAMo+B,EAAYr+B,SAAS9wB,cAAc,SACzCmvD,EAAUpgD,GAAK,mBACfogD,EAAUF,UAAV,4aAaAn+B,SAASo+B,KAAK1wB,YAAY2wB,OAKlCC,KAAM,CACJj1B,SAAQ,EACR5pB,SAAU,2BACVE,WAAY,CACVrQ,MAAO,CAAC,OAAO,QACfuB,OAAQ,CAAC,OAAO,QAChB6H,GAAI,OAENoH,QAAS,WACTQ,WAAY,MACZC,WAAU,0BACV48C,iBAAiB,CAAC,OAAO,QACzBh9C,MAAO,CACLtQ,KAAK,iBACLc,MAAM,OACNyP,QAAQ,WAEVi9C,gBAAgB,CAAC,MAAM,MAAM,QAC7BD,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OACtFK,QAAS,SAAC/tD,GACR,IAAMolB,EAAO,GACX,OAAQplB,EAAMguD,gBACZ,IAAK,OACH5oC,EAAKsoC,mBAAqB,CAAC,MAAM,OACjCtoC,EAAKvU,WAAL,qBACF,MACA,IAAK,OACHuU,EAAKsoC,mBAAqB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC7FtoC,EAAKvU,WAAL,gBAKN,OAAOuU,GAET8X,cAAe,SAACl9B,EAAMoV,EAAc64C,GACnC,MAAO,CACLY,YAAa,OACZC,YAAa9uD,EAAMuN,QACnBwhD,WAAYtZ,GAAIuZ,mBAChBC,QAASjvD,EAAM8H,SAAW,SAAW,UACrConD,YAAW,GAAAjnD,OAAKmN,EAAcygC,QAAnB,0BACXsZ,UAAWlB,EAAUjiD,cAAgBiiD,EAAUjiD,cAAkBhM,EAAMiM,YAAY2iD,MAAQ5uD,EAAMiM,YAAY2iD,KAAKO,UAAYnvD,EAAMiM,YAAY2iD,KAAKO,UAAYnvD,EAAMgM,gBAG3KmxB,OAAQ,SAACF,EAAWxwB,EAAOzM,EAAMoV,GAC/B,IAAIg6C,KAAenyB,GAChBkG,GAAG,IADN,eAAA/rB,EAAA1X,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KACW,SAAAuP,EAAOuoC,GAAP,IAAAvrD,EAAAwW,EAAA9N,EAAA,OAAAmmB,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,OACDhU,EAAgB,IAAIE,IAAchE,GACpCsa,EAAgB,KAChB9N,EAAc,KAHXwa,EAAAsoC,GAKCD,EAAM/qD,KALP0iB,EAAAlP,KAMA,wBANAkP,EAAAsoC,GAAA,yBAQHtvD,EAAMuvD,oBARHvoC,EAAAlP,KAAA,EAUmB9X,EAAMwvD,mBAVzB,cAUHl1C,EAVG0M,EAAAnN,KAYHrN,EAAc6iD,EAAMI,QAAQC,SAASljD,YACrCA,EAAc1I,EAAciU,MAAMvL,EAAYgd,YAAYD,IAAIzlB,EAAciU,MAAMlM,KAAK2mC,IAAI,GAAGvkC,SAASqM,IAAgBkP,aAAaA,WAGpIra,OAAOwgD,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAA5nD,OAAKuE,EAAL,KAAAvE,OAAoBjI,EAAMgM,cAA1B,2BAChB8jD,WAAY,QACZC,WAAY,GACZC,WAAY,GACZf,QAAS,YArBRjoC,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,qCAAAhB,EAAA1O,SAAAwO,EAAA/mB,SADX,gBAAA+nB,GAAA,OAAA1Q,EAAAoB,MAAAzY,KAAAiH,YAAA,IA8BGipD,SAGPC,QAAS,CACPv2B,SAAQ,EACR5pB,SAAU,8BACVE,WAAY,CACVrQ,MAAO,CAAC,OAAO,QACfuB,OAAQ,CAAC,OAAO,QAChB6H,GAAI,OAENoH,QAAS,WACTQ,WAAY,MACZC,WAAU,+BACV48C,iBAAiB,CAAC,OAAO,QACzBC,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC9DC,gBAAgB,CAAC,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,QACzDvwB,gBAAgB,CAAC+yB,0CAA0C,IAC3D1a,IAAI,OACJhlC,MAAM,CACJtQ,KAAK,UACLuQ,QAAQ,WAEVk9C,UAAU,CACR/T,KAAK,CACHsJ,OAAO1N,GAAI2a,2BACX/yB,IAAI,8BAENywB,KAAK,CACH3K,OAAO1N,GAAI4a,2BACXhzB,IAAI,+BAGR0wB,QAAS,SAAC/tD,GACR,IAAMolB,EAAO,GAEP4oC,EAAiBhuD,EAAMguD,gBAAkBhuD,EAAMguD,eACjDsC,EAAyB,SAAnBtC,EAA4B,OAAS,OAE/C,GAAIhuD,EAAMuwD,iBAAmBvwD,EAAMuwD,gBAAgBzuD,MACjD,OAAQ9B,EAAMuwD,gBAAgBzuD,MAAM8G,eAClC,IAAK,MACHwc,EAAK3U,MAAQ,CACXtQ,KAAK,UACLuQ,QAAQ,WAEV0U,EAAKvU,WAAL,KAAA5I,OAAuBqoD,EAAvB,oBACF,MACA,IAAK,MACHA,EAAM,OACNlrC,EAAK3U,MAAQ,CACXtQ,KAAK,UACLuQ,QAAQ,WAEV0U,EAAKvU,WAAL,KAAA5I,OAAuBqoD,EAAvB,oBACF,MACA,IAAK,MAEDlrC,EAAK3U,MADgB,SAAnBu9C,EACW,CACX7tD,KAAK,OACLc,MAAM,WACNyP,QAAQ,WAGG,CACXvQ,KAAK,UACLuQ,QAAQ,WAGZ0U,EAAKvU,WAAL,KAAA5I,OAAuBqoD,EAAvB,oBAMN,OAAOlrC,GAET8X,cAAe,SAACl9B,EAAMoV,EAAc64C,GAClC,IAAMxY,EAAMrgC,EAAc83C,SAAS7K,UAAU6N,QAAQza,IAC/CmY,EAAYx4C,EAAc83C,SAAS7K,UAAU6N,QAAQtC,UAAUnY,GAEjE+a,EAAe,KAEnB,GAAIvC,EAAUsC,iBAAmBtC,EAAUsC,gBAAgBzuD,MACzD,OAAQmsD,EAAUsC,gBAAgBzuD,MAAM8G,eACtC,IAAK,MACH4nD,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,QACEA,EAAe,MAKrB,IAAIC,EAAqBxC,EAAUjiD,cAAgBiiD,EAAUjiD,cAAcZ,cAAkBpL,EAAMiM,YAAYikD,SAAWlwD,EAAMiM,YAAYikD,QAAQQ,aAAe1wD,EAAMiM,YAAYikD,QAAQQ,aAAe1wD,EAAMgM,cAClNykD,EAAqBA,EAAmB7nD,cAOxC,MAAO,CACLu6C,OANayK,EAAUzK,OAOvBsN,qBACAE,cAPoB3wD,EAAMuN,QAQ1BijD,eACAI,kBARwB5wD,EAAMuN,QAS9BsjD,0BAR+B,EAS/BjxD,MAAM,OACNuB,OAAO,SAIXg8B,OAAQ,SAACF,EAAWxwB,EAAOzM,EAAMoV,GAC/B,GAAIjG,OAAO2hD,cAAc,CAGvB,IADsBxgC,SAASC,eAAe,kBAC3B,CACjB,IAAMi+B,EAAYl+B,SAAS9wB,cAAc,OAmBzC,GAlBAgvD,EAAUC,UAAV,szCAAAxmD,OAQsBmN,EAAc83C,SAAS7K,UAAU6N,QAAQngD,SAR/D,iQAeAugB,SAASo+B,KAAK1wB,YAAYwwB,IAGrBl+B,SAASC,eAAe,uBAAuB,CAClD,IAAMwgC,EAAezgC,SAAS9wB,cAAc,SAC5CuxD,EAAaxiD,GAAK,sBAClBwiD,EAAatC,UAAb,6cAaAn+B,SAASo+B,KAAK1wB,YAAY+yB,IAI9B5hD,OAAO2hD,cAAc3zB,OAAOF,EAAY,+BAI9C+zB,QAAS,CACPr3B,SAAQ,EACR5pB,SAAU,8BACVE,WAAY,CACVrQ,MAAO,CAAC,OAAO,QACfuB,OAAQ,CAAC,OAAO,QAChB6H,GAAI,OAENoH,QAAS,WACTQ,WAAY,MACZC,WAAY,eACZ48C,iBAAiB,CAAC,OAAO,QACzBC,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAChFC,gBAAgB,CAAC,OAAO,MAAM,OAC9BlY,IAAI,OACJmY,UAAU,CACR/T,KAAK,CACHxc,IAAI,iCACJ8lB,OAAO1N,GAAIwb,4BAEbnD,KAAK,CACHzwB,IAAI,yBACJ8lB,OAAO1N,GAAIyb,6BAGfnD,QAAS,SAAC/tD,GACR,IAAMolB,EAAO,GACb,GAAIplB,EAAMguD,gBAAkBhuD,EAAMguD,eAChC,OAAQhuD,EAAMguD,gBACZ,IAAK,OACH,GAAIhuD,EAAMuwD,iBAAmBvwD,EAAMuwD,gBAAgBzuD,MACjD,OAAQ9B,EAAMuwD,gBAAgBzuD,MAAM8G,eAClC,IAAK,MACHwc,EAAK3U,MAAQ,CACXtQ,KAAK,OACLc,MAAM,WACNyP,QAAQ,WAEV0U,EAAKvU,WAAL,yBACF,MACA,IAAK,MACHuU,EAAK3U,MAAQ,CACXtQ,KAAK,OAEPilB,EAAKvU,WAAL,yBACF,MACA,QACEuU,EAAK3U,MAAQ,KACb2U,EAAKvU,WAAL,6BAIR,MACA,IAAK,OACHuU,EAAK3U,MAAQ,KACb2U,EAAKvU,WAAL,aAMN,OAAOuU,GAET8X,cAAe,SAACl9B,EAAMoV,EAAc64C,GAClC,IAAMxY,EAAMrgC,EAAc83C,SAAS7K,UAAU2O,QAAQvb,IAC/CmY,EAAYx4C,EAAc83C,SAAS7K,UAAU2O,QAAQpD,UAAUnY,GAE/D/hB,EAAS,CACbyvB,OAFayK,EAAUzK,OAGvBuN,aAAczC,EAAUjiD,cAAgBiiD,EAAUjiD,cAAcZ,cAAkBpL,EAAMiM,YAAY+kD,SAAWhxD,EAAMiM,YAAY+kD,QAAQN,aAAe1wD,EAAMiM,YAAY+kD,QAAQN,aAAe1wD,EAAMgM,cAAcZ,cACrNulD,cAAc3wD,EAAMuN,QACpB4jD,iBAAiB,MACjBC,uBAAuB,GAGnB7hB,EAAU,CACd4d,KAAO,CACLhX,IAAM,oBACNK,IAAM,sBAER8W,KAAO,qBAGHiD,EAAkBtC,EAAUsC,iBAAmBtC,EAAUsC,gBAAgBzuD,MAAQmsD,EAAUsC,gBAAgBzuD,MAAM8G,cAAgB,KAGvI,GAAIqlD,EAAUD,eACZ,OAAQC,EAAUD,gBAChB,IAAK,OAEH,OADAt6B,EAAO29B,sBAAwB9hB,EAAQ0e,EAAUD,gBAAlB,IACvBuC,GACN,IAAK,MACL,IAAK,MACH78B,EAAO29B,sBAAwB9hB,EAAQ0e,EAAUD,gBAAgBuC,GACnE,MACA,QACE78B,EAAO29B,sBAAwB3xD,OAAO8J,OAAO+lC,EAAQ0e,EAAUD,iBAAiBz4C,KAAK,KAG3F,MACA,IAAK,OACL,QACEme,EAAO29B,sBAAwB9hB,EAAQ0e,EAAUD,gBAMvD,OAAQuC,GACN,IAAK,MACH78B,EAAOy9B,iBAAmB,MAC5B,MACA,IAAK,MACHz9B,EAAOy9B,iBAAmB,MAC5B,MACA,QACEz9B,EAAOy9B,iBAAmB,MAI9B,IAAI9zB,EAAMuwB,EAAUvwB,IAWpB,OARei0B,UAAUC,UAAUvkC,QAAQ,WAAa,IAEjDsD,SAASkhC,OAAOC,MAAM,+CACzBnhC,SAASkhC,OAAS,qEAClBn0B,GAAO,gBAIJ,GAAAp1B,OAAGo1B,EAAH,KAAU39B,OAAOmF,KAAK6uB,GACxBprB,IAAI,SAAAgmD,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB76B,EAAO46B,MACjE/4C,KAAK,MAEZ4nB,OAAQ,SAACF,EAAWxwB,EAAOzM,EAAMoV,GAE/B,IADsBkb,SAASC,eAAe,kBAC3B,CACjB,IAAMi+B,EAAYl+B,SAAS9wB,cAAc,OA8BzC,GA7BAgvD,EAAUC,UAAV,iqBAAAxmD,OAQiBg1B,EARjB,yeAAAh1B,OAewBmN,EAAc83C,SAAS7K,UAAU2O,QAAQjhD,SAfjE,iwBA0BAugB,SAASo+B,KAAK1wB,YAAYwwB,IAGrBl+B,SAASC,eAAe,uBAAuB,CAClD,IAAMmhC,EAAephC,SAAS9wB,cAAc,SAC5CkyD,EAAanjD,GAAK,sBAClBmjD,EAAajD,UAAb,qbAaAn+B,SAASo+B,KAAK1wB,YAAY0zB,OAKlC3U,cAAe,CACbpjB,SAAS,EACT5pB,SAAU,oCACVE,WAAY,CACVrQ,MAAO,CAAC,OAAO,QACfuB,OAAQ,CAAC,OAAO,QAChB6H,GAAI,OAENoH,QAAS,WACTQ,WAAY,MACZC,WAAY,gBACZ48C,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBvwB,gBAAgB,CAACu0B,uCAAuC,IACxDz0B,cAAe,SAACl9B,EAAMoV,EAAc64C,EAAU2D,EAAUC,GAEtD,IAAMC,EAAc18C,EAAcw9B,OAAOqb,EAAUjiD,eAC7CmpB,EAAgBhmB,OAAO4iD,mBAAqB5iD,OAAO4iD,mBAAmB58B,cAAgB,KAE5F,OAAK28B,EAAY/U,cAIV,CACLmH,UAAW9uC,EAAcusC,QAAQM,gBACjC+P,QAAS58C,EAAcusC,QAAQM,gBAC/BgQ,SAAU98B,GAAiC,aAAhBA,GAA8BhmB,OAAO4iD,mBAAmBG,UAAU/8B,EAAc/pB,eAAiB+D,OAAO4iD,mBAAmBG,UAAU/iD,OAAO4iD,mBAAmB58B,cAAc/pB,eAAe6mD,SAAW9iD,OAAOgjD,SACzOnV,YAAa8U,EAAY/U,cAAcC,YACvCE,cAAe4U,EAAY/U,cAAcG,cACzCkV,yBAA0BN,EAAY/U,cAAcE,UACpDoV,oBAAqB,CAACP,EAAY/U,cAAcE,WAChDqV,gCAAgC,EAChCV,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cAbtB,MAgBX10B,OAAQ,SAACF,EAAWxwB,GACd0C,OAAO4tC,eAAiB9f,IACtBxwB,IACFwwB,EAAWs1B,sBAAwBhnD,WAAWkB,IAEhD0C,OAAO4tC,cAAc5f,OAAOF,EAAY,WAI9Cu1B,UAAW,CACT74B,SAAS,EACT5pB,SAAU,4BACVE,WAAY,CACVrQ,MAAO,CAAC,OAAO,QACfuB,OAAQ,CAAC,OAAO,QAChB6H,GAAI,OAENoH,QAAS,YACTQ,WAAY,MACZC,WAAY,gBACZ48C,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,QAC1D8E,iBAAiB,CACf94B,SAAS,EACT+4B,gBAAiB,6CACjBC,eAAgB,CACd,CACEC,aAAgB,UAChBjtD,KAAQ,gBACRrB,KAAQ,WAEV,CACEsuD,aAAgB,UAChBjtD,KAAQ,gBACRrB,KAAQ,WAEV,CACEsuD,aAAgB,UAChBjtD,KAAQ,eACRrB,KAAQ,WAEV,CACEsuD,aAAgB,UAChBjtD,KAAQ,eACRrB,KAAQ,aAId84B,gBAAgB,CACdy1B,iDAAiD,GACjDC,gDAAgD,CAC9C/0B,cAAczN,SAASo+B,KACvBhxB,QAAS,SAAC19B,EAAMoV,EAAc0nB,GAI5B,IADA,IAAMzX,EAAUiL,SAASyiC,iBAAiB,wBACjChnD,EAAE,EAAEA,EAAEsZ,EAAQxiB,OAAOkJ,IAC5BsZ,EAAQtZ,GAAGinD,SASb,IADA,IAAMC,EAAU3iC,SAASyiC,iBAAiB,qBACjChnD,EAAE,EAAEA,EAAEknD,EAAQpwD,OAAOkJ,IAC5BknD,EAAQlnD,GAAGinD,SAGb,IAAMh2B,EAAWh9B,EAAMg9B,SAAWh9B,EAAMg9B,SAAvB,iBAAA/0B,OAAmDjI,EAAMgM,eAC1E,IAAKskB,SAASC,eAAeyM,GAAU,CACrC,IAAMz9B,EAAI+wB,SAAS9wB,cAAc,KACjCD,EAAEgP,GAAKyuB,EACPz9B,EAAEwsB,KAAO+Q,EAAaI,cAAcl9B,EAAMoV,GAC1C7V,EAAE6W,OAAS,SACX7W,EAAE8W,IAAM,+BACR9W,EAAE4D,UAAY,kDACd5D,EAAE2gB,MAAQ,kBACV3gB,EAAEuB,MAAQ,gBACVwvB,SAASo+B,KAAK1wB,YAAYz+B,OAKlC29B,cAAe,SAACl9B,EAAMoV,GAAiCpO,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,IAAAA,UAAA,OAC/C01B,EAAY18B,EAAM08B,UAAY18B,EAAM08B,UAAY,MAChDhJ,EAAS,CACbw/B,KAAK,KACL5uD,KAAK,OACLq1C,KAAK,SACLzxC,MAAM,cACNirD,iBAAgB,EAEhBC,aAAY,GAAAnrD,OAAIy0B,EAAJ,KAAAz0B,OAAiBjI,EAAMgM,eACnCkU,MAAK,QAAAjY,OAASy0B,EAAT,SAAAz0B,OAA0BjI,EAAMgM,eACrCqnD,YAAW,GAAAprD,OAAIy0B,EAAJ,KAAAz0B,OAAiBjI,EAAMgM,eAClCsnD,aAAa,6CACb3R,QAAmD,IAA1CvsC,EAAcusC,QAAQM,gBAAwB,UAAY,QAKrE,MAAO,GAAAh6C,OAFM,uCAEN,KAAUvI,OAAOmF,KAAK6uB,GACxBprB,IAAI,SAAAgmD,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB76B,EAAO46B,MACjE/4C,KAAK,MAEZ4nB,OAAQ,SAACF,EAAWxwB,EAAOzM,GACzB,IAAMg9B,EAAWh9B,EAAMg9B,SAAWh9B,EAAMg9B,SAAvB,iBAAA/0B,OAAkDjI,EAAMgM,eACnEzM,EAAI+wB,SAASC,eAAeyM,GAC9Bz9B,GACFA,EAAEg0D,UAgCRC,QAAS,CACP75B,SAAS,EACT5pB,SAAU,8BACVE,WAAY,CACVrQ,MAAO,CAAC,OAAO,QACfuB,OAAQ,CAAC,OAAO,QAChB6H,GAAI,OAENoH,QAAS,WACTQ,WAAY,MACZC,WAAY,aACZ48C,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBlY,IAAI,aACJrY,gBAAgB,CAACq2B,mDAAmD,IACpEv2B,cAAe,SAACl9B,EAAMoV,EAAc64C,EAAUyF,EAAW7B,GACvD,MAAO,CACLpc,IAAK,aACLkE,KAAM,MACNnuC,MAAOxL,EAAMiM,YAAYgJ,QACzBynB,UAAW,MACXg3B,WAAYA,GAA0B,aACtC7B,QAASA,GAAoB,eAGjC10B,OAAQ,SAACF,EAAWxwB,EAAOzM,GACrBmP,OAAOwkD,iBACLlnD,IACFwwB,EAAWxwB,OAASA,EAAO+c,YAE7Bra,OAAOwkD,eAAex2B,OAAOF,EAAW,WAI9C22B,MAAO,CACLj6B,SAAS,EACT5pB,SAAU,4BACVE,WAAY,CACVrQ,MAAO,CAAC,OAAO,QACfuB,OAAQ,CAAC,OAAO,QAChB6H,GAAI,OAENoH,QAAS,WACTQ,WAAY,MACZC,WAAY,aACZ48C,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBlY,IAAI,aACJrY,gBAAgB,CAACy2B,0CAA0C,IAC3D32B,cAAe,SAACl9B,EAAMoV,EAAc64C,EAAUyF,EAAW7B,GACvD,MAAO,CACLiC,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1B9Q,OAAQ,KACR+Q,uBAAwB,OAG5B/2B,OAAQ,SAACF,EAAWxwB,EAAOzM,GACzB,GAAImP,OAAOglD,YAAY,CACrB,IAAMC,EAAS,eACf,IAAK9jC,SAASC,eAAe6jC,GAAQ,CACnC,IAAMC,EAAuB/jC,SAAS9wB,cAAc,OACpD60D,EAAqB9lD,GAAK6lD,EAC1B9jC,SAASo+B,KAAK1wB,YAAYq2B,GAG5BllD,OAAOglD,YAAYhwC,QAAQmwC,IAAIr3B,EAAW3M,SAASC,eAAe6jC,UAQ/Dh/C,4MC57EAm/C,EA9Nb,SAAAA,EAAYv0D,GAAM,IAAA0G,EAAA3G,KAAAL,OAAA80D,EAAA,EAAA90D,CAAAK,KAAAw0D,GAAAx0D,KANlBC,MAAQ,GAMUD,KALlBg6C,UAAY,KAKMh6C,KAJlBkM,YAAc,KAIIlM,KAHlB+D,cAAgB,KAGE/D,KAKlBgE,SAAW,SAAA/D,GACT0G,EAAK1G,MAAQA,EAET0G,EAAK5C,cACP4C,EAAK5C,cAAcC,SAAS2C,EAAK1G,OAEjC0G,EAAK5C,cAAgB,IAAIE,EAAc0C,EAAK1G,OAG9C0G,EAAKqzC,UAAYrzC,EAAK5C,cAAc2J,gBAAgB,CAAC,aAAa,QAAQ,cAC1E/G,EAAKuF,YAAcvF,EAAK5C,cAAc2J,gBAAgB,CAAC,YAAY/G,EAAKqzC,aAfxDh6C,KAkBlB00D,WAlBkB/0D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAkBL,SAAAuP,IAAA,IAAA3O,EAAA,OAAAwa,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cAAAkP,EAAAlP,KAAA,EACSpR,EAAK5C,cAAcq1B,gBAAgBzyB,EAAKqzC,UAAUrzC,EAAK1G,MAAMuN,SADtE,cACP4K,EADO6O,EAAAnN,QAEKnT,EAAK5C,cAAciU,MAAMI,GAAS9T,UAChD8T,EAAUzR,EAAK5C,cAAciU,MAAM,IAH1BiP,EAAAgB,OAAA,SAKJ7P,GALI,wBAAA6O,EAAA1O,SAAAwO,EAAA/mB,SAlBKA,KA0BlB20D,aA1BkB,eAAAj7C,EAAA/Z,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA0BH,SAAA+P,EAAOjV,EAASmhB,GAAhB,OAAAb,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,cAAA2P,EAAAO,OAAA,SACNthB,EAAK5C,cAAcwwB,0BAA0B,eAAgB,QAAS,GAAIjiB,EAAUmhB,IAD9E,wBAAA/L,EAAAnP,SAAAgP,EAAAvnB,SA1BG,gBAAA+nB,EAAAC,GAAA,OAAAtO,EAAAjB,MAAAzY,KAAAiH,YAAA,GAAAjH,KA8BlB40D,cA9BkBj1D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA8BF,SAAAC,IAAA,IAAAjK,EAAAqnD,EAAAC,EAAA7tD,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdvK,GADqBA,EAAPsnD,EAAAhyD,OAAA,QAAAoE,IAAA4tD,EAAA,GAAAA,EAAA,GAAe,OACCnuD,EAAK1G,MAAMuN,QAD3BqK,EAAAE,KAAA,EAESpR,EAAK5C,cAAcg0B,oBAAoBpxB,EAAKqzC,UAAU,gBAAgB,CAACxsC,IAFhF,YAEVqnD,EAFUh9C,EAAAiC,MAAA,CAAAjC,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,SAILthB,EAAK5C,cAAciU,MAAM68C,IAJpB,cAAAh9C,EAAAoQ,OAAA,SAMP,MANO,wBAAApQ,EAAAU,SAAAd,EAAAzX,SA9BEA,KAuClB+0D,iBAvCkBp1D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAuCC,SAAAmC,IAAA,OAAAiZ,EAAApzB,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAAqO,OAAA,SACVthB,EAAK5C,cAAcg0B,oBAAoB,iBAAiB,sBAD9C,wBAAAne,EAAArB,SAAAoB,EAAA3Z,SAvCDA,KA2ClBg1D,mBA3CkBr1D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA2CG,SAAA+Q,IAAA,OAAAqK,EAAApzB,EAAAoY,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,cAAA0Q,EAAAR,OAAA,SAOZthB,EAAK5C,cAAciU,MAAM,IAPb,wBAAAyQ,EAAAlQ,SAAAgQ,EAAAvoB,SA3CHA,KAqDlBi1D,OArDkB,eAAAjlB,EAAArwC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAqDT,SAAA4R,EAAO3d,EAAMS,GAAb,IAAAgP,EAAAg6C,EAAAC,EAAAC,EAAA3f,EAAAzrB,EAAAqrC,EAAAC,EAAAr8B,EAAAs8B,EAAAC,EAAAC,EAAAxuD,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA2R,GAAA,cAAAA,EAAAzR,KAAAyR,EAAAxR,MAAA,UAAyBmD,EAAzBu6C,EAAA3yD,OAAA,QAAAoE,IAAAuuD,EAAA,GAAAA,EAAA,GAAwC,MACzCP,EAAkBvuD,EAAK5C,cAAc2J,gBAAgB,CAAC,YAAY/G,EAAKqzC,aACxDpgB,QAFd,CAAArQ,EAAAxR,KAAA,eAAAwR,EAAAtB,OAAA,UAGE,GAHF,cAMDktC,EANC,cAAAjtD,OAM6BgE,EAAY81B,KAAKv2B,MAN9C,KAAAvD,OAMuDgT,GAQ1Dk6C,EAAMzuD,EAAK5C,cAAciU,MAAM,GAd5BuR,EAAAxR,KAAA,EAmBGqP,QAAQkD,IAAI,CACpB3jB,EAAK+uD,gBAAgBxpD,GACrBvF,EAAK5C,cAAcwO,mBAAmBrG,GAAY,GAAM,KArBnD,UAAAupC,EAAAlsB,EAAAzP,KAAAkQ,EAAArqB,OAAAqnC,EAAA,EAAArnC,CAAA81C,EAAA,GAiBL4f,EAjBKrrC,EAAA,GAkBLsrC,EAlBKtrC,EAAA,IAwBHqrC,IAAoBC,EAxBjB,CAAA/rC,EAAAxR,KAAA,YA0BCkhB,EAAiBtyB,EAAK5C,cAAc2J,gBAAgB,CAAC,QAAQ,SAAS,QAGvEwN,EA7BA,CAAAqO,EAAAxR,KAAA,gBAAAwR,EAAAzR,KAAA,GAAAyR,EAAAxR,KAAA,GA+BsBpR,EAAK5C,cAAc4xD,yBAAyB18B,EAAei8B,GA/BjF,QA+BDh6C,EA/BCqO,EAAAzP,KAAAyP,EAAAxR,KAAA,iBAAAwR,EAAAzR,KAAA,GAAAyR,EAAAgmC,GAAAhmC,EAAA,kBAmCErO,IAAkBA,EAAe5W,UACpC4W,EAAiBvU,EAAK5C,cAAciU,MAAM,IApCzC,WAwCAkD,IAAkBvU,EAAK5C,cAAciU,MAAMkD,GAAgBsX,IAAI,GAxC/D,CAAAjJ,EAAAxR,KAAA,gBAAAwR,EAAAtB,OAAA,SAyCIthB,EAAK5C,cAAciU,MAAM,IAzC7B,eAAAuR,EAAAxR,KAAA,GA4CmBpR,EAAK5C,cAAcm+B,oBAAoBozB,EAAgBM,0BAA0BnqD,EAAMS,GA5C1G,eA4CCqpD,EA5CDhsC,EAAAzP,KA8CC07C,EAA4B7uD,EAAK5C,cAAciU,MAAMkD,GAAgB9F,MAAMigD,GACjFD,EAAMI,EAA0BhsC,IAAI+rC,GAAWngD,MAAM,KA/ChDmU,EAAAtB,OAAA,SAmDEthB,EAAK5C,cAAc+oB,cAAcqoC,EAAcC,IAnDjD,eAAA7rC,EAAAtB,OAAA,SAsDAmtC,GAtDA,yBAAA7rC,EAAAhR,SAAA6Q,EAAAppB,KAAA,cArDS,gBAAAwY,EAAAuB,GAAA,OAAAi2B,EAAAv3B,MAAAzY,KAAAiH,YAAA,GAAAjH,KA+GlB61D,SA/GkB,eAAA5rC,EAAAtqB,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+GP,SAAAqS,EAAOisC,GAAP,IAAAX,EAAAtoC,EAAAkpC,EAAA,OAAAnjC,EAAApzB,EAAAoY,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UAEHo9C,EAFG,gBAAAjtD,OAE6B4tD,GAEnB,QADbjpC,EAAalmB,EAAK5C,cAAciyD,8BAA8Bb,KACxCxuD,EAAK5C,cAAciU,MAAM6U,GAAYvoB,QAJxD,CAAA4lB,EAAAnS,KAAA,eAAAmS,EAAAjC,OAAA,SAKAthB,EAAK5C,cAAciU,MAAM6U,IALzB,cAAA3C,EAAAnS,KAAA,EAQcpR,EAAK5C,cAAcg0B,oBAAoB,iBAAiB,aAAa,CAAC+9B,IARpF,YAQLC,EARK7rC,EAAApQ,OASUnT,EAAK5C,cAAciU,MAAM+9C,GAAYzxD,QAT/C,CAAA4lB,EAAAnS,KAAA,gBAUPg+C,EAAapvD,EAAK5C,cAAciU,MAAM+9C,GAV/B7rC,EAAAjC,OAAA,SAWAthB,EAAK5C,cAAckyD,8BAA8Bd,EAAcY,IAX/D,eAAA7rC,EAAAjC,OAAA,SAaF,MAbE,yBAAAiC,EAAA3R,SAAAsR,EAAA7pB,SA/GO,gBAAAk2D,GAAA,OAAAjsC,EAAAxR,MAAAzY,KAAAiH,YAAA,GAAAjH,KA+HlB01D,gBA/HkB,eAAAS,EAAAx2D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+HA,SAAAiT,EAAOve,GAAP,IAAAipD,EAAAtoC,EAAAkpC,EAAA5T,EAAAiU,EAAA,OAAAxjC,EAAApzB,EAAAoY,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,UAEVo9C,EAFU,uBAAAjtD,OAE6BgE,EAAY81B,KAAKv2B,OAE3C,QADbohB,EAAalmB,EAAK5C,cAAciyD,8BAA8Bb,KACxCxuD,EAAK5C,cAAciU,MAAM6U,GAAYvoB,QAJjD,CAAAomB,EAAA3S,KAAA,eAAA2S,EAAAzC,OAAA,SAKPthB,EAAK5C,cAAciU,MAAM6U,IALlB,cAAAnC,EAAA3S,KAAA,EASSpR,EAAKkvD,SAAS3pD,EAAY81B,KAAK9sB,SATxC,YASV6gD,EATUrrC,EAAA5Q,MAAA,CAAA4Q,EAAA3S,KAAA,YAcRoqC,EAAgBx7C,EAAK5C,cAAc2J,gBAAgB,CAAC,UAAU,kBAG9D0oD,EAAezvD,EAAK5C,cAAciU,MAAM+9C,GAAY3gD,MAAMzO,EAAK5C,cAAciU,MAAMmqC,IAAgB34B,IAAI,MAExG7iB,EAAK5C,cAAciU,MAAMo+C,GAAc9xD,QAnB9B,CAAAomB,EAAA3S,KAAA,gBAAA2S,EAAAzC,OAAA,SAoBLthB,EAAK5C,cAAckyD,8BAA8Bd,EAAciB,IApB1D,eAAA1rC,EAAAzC,OAAA,SAwBT,MAxBS,yBAAAyC,EAAAnS,SAAAkS,EAAAzqB,SA/HA,gBAAAq2D,GAAA,OAAAF,EAAA19C,MAAAzY,KAAAiH,YAAA,GAAAjH,KA0JlBs2D,oBA1JkB32D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA0JI,SAAA++C,IAAA,IAAA/oD,EAAArB,EAAAqqD,EAAAC,EAAAC,EAAAzvD,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA++C,GAAA,cAAAA,EAAA7+C,KAAA6+C,EAAA5+C,MAAA,UAAOvK,EAAPkpD,EAAA5zD,OAAA,QAAAoE,IAAAwvD,EAAA,GAAAA,EAAA,GAAe,KAAKvqD,EAApBuqD,EAAA5zD,OAAA,QAAAoE,IAAAwvD,EAAA,GAAAA,EAAA,GAAoC,KAAKF,EAAzCE,EAAA5zD,OAAA,QAAAoE,IAAAwvD,EAAA,IAAAA,EAAA,GACflpD,IACHA,EAAU7G,EAAK1G,MAAMuN,UAElBrB,GAAmBxF,EAAK1G,MAAMwZ,mBACjCtN,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBj9B,EAAK1G,MAAMwZ,mBAGzDjM,GAAYrB,EARG,CAAAwqD,EAAA5+C,KAAA,eAAA4+C,EAAA1uC,OAAA,UASX,GATW,cAYhBwuC,EAAa9vD,EAAK5C,cAAciU,MAAM,GAZtB2+C,EAAA5+C,KAAA,GAadpR,EAAK5C,cAAcqT,aAAazX,OAAOmF,KAAKqH,GAA5C,eAAAyqD,EAAAj3D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA6D,SAAAq/C,EAAOprD,GAAP,IAAAS,EAAA4qD,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAtkC,EAAApzB,EAAAoY,KAAA,SAAAu/C,GAAA,cAAAA,EAAAr/C,KAAAq/C,EAAAp/C,MAAA,UAC3D7L,EAAcC,EAAgBV,IAEhC9E,EAAKuF,cAAevF,EAAKuF,YAAYgwC,eAAexwC,SAASQ,EAAY81B,KAAKv2B,OAHjB,CAAA0rD,EAAAp/C,KAAA,eAAAo/C,EAAAlvC,OAAA,wBAAAkvC,EAAAp/C,KAAA,EAUvDqP,QAAQkD,IAAI,CACpB3jB,EAAKkvD,SAAS3pD,EAAY81B,KAAK9sB,SAC/BvO,EAAK5C,cAAcqzD,iBAAiB5pD,EAAQtB,KAZmB,OAAA4qD,EAAAK,EAAAr9C,KAAAi9C,EAAAp3D,OAAAqnC,EAAA,EAAArnC,CAAAm3D,EAAA,GAQ/DE,EAR+DD,EAAA,GAS/DE,EAT+DF,EAAA,GAe7DC,GAAaC,IACTC,EAAaF,EAAU5hD,MAAM6hD,GACnCR,EAAaA,EAAWx+C,KAAKi/C,IAjBkC,yBAAAC,EAAA5+C,SAAAs+C,EAAA72D,SAA7D,gBAAAq3D,GAAA,OAAAT,EAAAn+C,MAAAzY,KAAAiH,YAAA,IAbc,eAkChBuvD,IACFC,EAAa9vD,EAAK5C,cAAc4W,iBAAiB87C,EAAW9vD,EAAKuF,YAAYvH,UAC7E8xD,EAAa9vD,EAAK5C,cAAcuzD,qBAAqBb,EAAW9vD,EAAKuF,YAAYkwC,wBApC/Dua,EAAA1uC,OAAA,SAuCbwuC,GAvCa,yBAAAE,EAAAp+C,SAAAg+C,EAAAv2D,SA1JJA,KAoMlBu3D,UApMkB53D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAoMN,SAAAggD,IAAA,IAAArrD,EAAAijB,EAAArd,EAAA0lD,EAAAxwD,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA8/C,GAAA,cAAAA,EAAA5/C,KAAA4/C,EAAA3/C,MAAA,cAAO5L,EAAPsrD,EAAA30D,OAAA,QAAAoE,IAAAuwD,EAAA,GAAAA,EAAA,GAAuB,QAE/BtrD,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBj9B,EAAK1G,MAAMwZ,mBAE1D2V,EAASzoB,EAAK5C,cAAciU,MAAM,GAClCjG,EAAkBpL,EAAK5C,cAAciU,MAAM,GALrC0/C,EAAA3/C,KAAA,EAMJpR,EAAK5C,cAAcqT,aAAazX,OAAOmF,KAAKqH,GAA5C,eAAAwrD,EAAAh4D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA6D,SAAAogD,EAAOnsD,GAAP,IAAAS,EAAA2rD,EAAAC,EAAAC,EAAAzC,EAAA,OAAA1iC,EAAApzB,EAAAoY,KAAA,SAAAogD,GAAA,cAAAA,EAAAlgD,KAAAkgD,EAAAjgD,MAAA,cAC3D7L,EAAcC,EAAgBV,GAD6BusD,EAAAjgD,KAAA,EAEzBqP,QAAQkD,IAAI,CAClD3jB,EAAKsuD,OAAOxpD,EAAMS,GAClBvF,EAAK5C,cAAcwO,mBAAmBrG,GAAY,GAAM,KAJO,OAAA2rD,EAAAG,EAAAl+C,KAAAg+C,EAAAn4D,OAAAqnC,EAAA,EAAArnC,CAAAk4D,EAAA,GAE1DE,EAF0DD,EAAA,GAElDxC,EAFkDwC,EAAA,GAO7DC,GAAWzC,IACblmC,EAASA,EAAOnX,KAAK8/C,EAAQ3iD,MAAMkgD,EAAgBvjD,kBACnDA,EAAkBA,EAAgBkG,KAAKq9C,EAAgBvjD,kBATQ,wBAAAimD,EAAAz/C,SAAAq/C,EAAA53D,SAA7D,gBAAAi4D,GAAA,OAAAN,EAAAl/C,MAAAzY,KAAAiH,YAAA,IANI,cAmBVmoB,EAASA,EAAO5F,IAAIzX,GAnBV2lD,EAAAzvC,OAAA,SAqBHmH,GArBG,wBAAAsoC,EAAAn/C,SAAAi/C,EAAAx3D,SAnMVA,KAAKgE,SAAS/D,qBCFZi4D,EAAgBC,EAAQ,KACxBziB,EAAMC,yqCAEN1xC,aAOJ,SAAAA,EAAYhE,GAAM,IAAA0G,EAAA3G,KAAAL,OAAA80D,EAAA,EAAA90D,CAAAK,KAAAiE,GAAAjE,KAJlBC,MAAQ,GAIUD,KAHlBo4D,aAAe,KAGGp4D,KAKlBgE,SAAW,SAAA/D,GACT0G,EAAK1G,MAAQA,GANGD,KAQlBq4D,QAAU,SAAAxwC,GACR,OAAOlhB,EAAKqR,MAAM6P,GAAKlb,QAAQ,IATf3M,KAWlBi4B,KAAO,SAAA2M,GAAC,OAAI,IAAIj+B,EAAK1G,MAAM2nB,KAAK0wC,MAAMC,GAAG3zB,IAXvB5kC,KAYlBw4D,MAAQ,SAAAC,GACN,OAAK9xD,EAAK1G,MAAM2nB,KAGTjhB,EAAK1G,MAAM2nB,KAAK0wC,MAAMI,SAC1BD,GAAO,GAAGhvC,WACX,SAJO,MAdOzpB,KAqBlB24D,MAAQ,SAAA9wC,GACN,OAAKlhB,EAAK1G,MAAM2nB,KAGTjhB,EAAK1G,MAAM2nB,KAAK0wC,MAAMK,OAC1B9wC,GAAO,GAAG4B,WACX,SAJO,MAvBOzpB,KA8BlB44D,WAAa,SAAAvyC,GACX,IAAIhd,EAAIknB,SAAS9wB,cAAc,YAE/B,OADA4J,EAAEqlD,UAAYroC,EACiB,IAAxBhd,EAAEwvD,WAAW/1D,OAAe,GAAKuG,EAAEwvD,WAAW,GAAGC,WAjCxC94D,KAmClB+4D,UAAY,SAAA3gC,GAAC,OAAI,IAAI4gC,IAAU5gC,IAnCbp4B,KAoClBgY,MAAQ,SAAAogB,GAAC,OAAI,IAAI4gC,IAAwB,kBAAN5gC,EAAiBA,EAAI6gC,OAAO7gC,KApC7Cp4B,KAqClB2nB,UAAY,WAAc,QAAAuxC,EAAAjyD,UAAAnE,OAAV7C,EAAU,IAAAk5D,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVn5D,EAAUm5D,GAAAnyD,UAAAmyD,GAAM/jD,IAAckjB,KAAK0e,iBAAiBtwC,EAAKghB,UAALlP,MAAA9R,EAAI,CAAW0yD,MAAS/9C,OAAO,aAA3BpT,OAA0CjI,KArChGD,KAsClBs5D,eAAiB,WAAc,QAAAC,EAAAC,EAAAvyD,UAAAnE,OAAV7C,EAAU,IAAAk5D,MAAAK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAVx5D,EAAUw5D,GAAAxyD,UAAAwyD,GAAMpkD,IAAckjB,KAAKye,gBAAeuiB,EAAAplC,SAAQ5N,MAAR9N,MAAA8gD,EAAA,CAAcF,MAAS/9C,OAAO,aAA9BpT,OAA6CjI,KAtClGD,KAuClBs+B,kBAAoB,SAAC5K,GACnB,IAAMuD,EAAWtwB,EAAK1G,MAAMu6C,UAAU/tB,KAAK,SAAAid,GAAC,OAAIA,EAAE9jC,OAAS8tB,IAC3D,QAAKuD,GAGEA,EAASA,UA5CAj3B,KA8ClB05D,8BAAgC,SAAC90B,GAC/B,OAAOA,EAAElM,QAAQ,YAAY,MACpBA,QAAQ,OAAO,IACfA,QAAQ,QAAQ,IAChBA,QAAQ,UAAU,KAClBA,QAAQ,SAAS,KAnDV14B,KAqDlByV,WAAa,SAACkkD,GACZ,OAAOA,EAAI/2D,OAAO,EAAE,GAAGiG,cAAc8wD,EAAI/2D,OAAO,IAtDhC5C,KAwDlB6M,YAAc,SAACR,GAAqB,IAAhBiP,EAAgBrU,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KACzB,OAAOoyD,IAAOhtD,EAAKiP,IAzDHtb,KA2DlBqxB,kBAAoB,SAACuoC,EAAKC,GAOxB,OANIA,GAAQl6D,OAAOmF,KAAK+0D,GAAM/2D,QAC5BnD,OAAOmF,KAAK+0D,GAAM90D,QAAQ,SAAAC,GACxB40D,EAAK50D,GAAK60D,EAAK70D,KAIZ40D,GAlES55D,KAoElB85D,UAAY,SAACC,GACV,IAAIC,EAAMzpC,SAAS9wB,cAAc,OAEjC,OADAu6D,EAAItL,UAAYqL,EACTC,EAAIC,aAAeD,EAAIE,WAAa,IAvE5Bl6D,KA0ElBm6D,SAAW,SAACC,EAAI51B,GACd,IAAME,EAAQt1B,OAAOirD,QACfC,EAASF,EAAK11B,EAEhB61B,EAAc,EAElBzuD,KAAK0uD,cAAgB,SAAU/hC,EAAG7sB,EAAG89B,EAAG32B,GAEtC,OADA0lB,GAAK1lB,EAAE,GACC,EAAU22B,EAAE,EAAEjR,EAAEA,EAAI7sB,GAEpB89B,EAAE,KADVjR,GACkBA,EAAE,GAAK,GAAK7sB,IAGV,SAAhB6uD,IACFF,GAXc,GAYd,IAAIG,EAAM5uD,KAAK0uD,cAAcD,EAAa71B,EAAO41B,EAAQ91B,GACzDp1B,OAAO+qD,SAAS,EAAEO,GACfH,EAAc/1B,GACfp1B,OAAOsa,WAAW+wC,EAfN,IAmBlBA,IAhGgBz6D,KAkGlB26D,8BAAgC,SAAC/0D,GAAqC,IAA/B03B,EAA+Br2B,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAzBmI,OAAOk1C,SAASt4B,KAE3DpmB,EAAOA,EAAK8yB,QAAQ,UAAW,QAC/B,IACIkiC,EADQ,IAAIC,OAAO,OAASj1D,EAAO,qBACnBk1D,KAAKx9B,GACzB,OAAKs9B,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGliC,QAAQ,MAAO,MAD5B,GADH,MAvGL14B,KA2GlBuM,YAAc,SAAChB,EAAGW,GAEhB,IAAM4pD,EAAmB5pD,EAAY81B,KAAK9sB,QACpC8lD,EAA2Br0D,EAAK+G,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChFutD,EAAwB/uD,EAAYskC,WAAatkC,EAAYskC,UAAUxB,kBAAoB9iC,EAAYskC,UAAUxB,kBAAkB95B,QAAU,KAC7IgmD,EAA4BhvD,EAAYskC,WAAatkC,EAAYskC,UAAUxB,mBAAqB9iC,EAAYskC,UAAUxB,kBAAkBqX,aAAen6C,EAAYskC,UAAUxB,kBAAkBqX,aAAe,GAC9MX,EAAiB/+C,EAAK+G,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkBxB,EAAY81B,KAAKv2B,QAC3G0vD,EAA6BzV,GAAkBA,EAAe1W,kBAAoB0W,EAAe1W,kBAAkB95B,QAAU,KAG7HkmD,EADqBD,GAA8B5vD,EAAGkJ,KAAKpJ,gBAAkB8vD,EAA2B9vD,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,eAAiBE,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAC5M4vD,IAA0B1vD,EAAGkJ,KAAKpJ,gBAAkB4vD,EAAsB5vD,gBAAuH,IAAtG6vD,EAA0B3yD,IAAI,SAACmB,GAAQ,OAAOA,EAAE2B,gBAAkB4hB,QAAQ1hB,EAAGkJ,KAAKpJ,iBAA2BE,EAAGonD,gBAAgBtnD,gBAAkByqD,EAAiBzqD,cACrSgwD,GAAoBD,GAAiB7vD,EAAGkJ,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkByqD,EAAiBzqD,cACzJiwD,GAAuBF,GAAiB7vD,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkByqD,EAAiBzqD,cAC1JkwD,GAAeH,IAAkBC,IAAqBC,IAAwB/vD,EAAG6uD,GAAG/uD,gBAAkByqD,EAAiBzqD,eAAkB2vD,GAA4BzvD,EAAG6uD,GAAG/uD,gBAAkB2vD,EAAyB9lD,QAAQ7J,eAC9NmwD,GAAcJ,IAAkBC,IAAqBC,GAAuB/vD,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,cACvHowD,GAAYL,IAAkBC,IAAqBC,IAAwBC,GAAehwD,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkByqD,EAAiBzqD,cAE9MD,EAAS,KAkBb,OAhBImwD,EACFnwD,EAAS,UACAowD,EACTpwD,EAAS,SACAgwD,EACThwD,EAAS,UACAiwD,EACTjwD,EAAS,OACAkwD,EACTlwD,EAAS,UACAqwD,EACTrwD,EAAS,OACAqwD,IACTrwD,EAAS,WAGJA,GA9ISpL,KAgJlB+jC,oBAhJkBpkC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAgJI,SAAAC,IAAA,IAAAtL,EAAAqB,EAAAu0B,EAAAvoB,EAAAkiD,EAAA3yB,EAAA7E,EAAAF,EAAAC,EAAA0H,EAAAmpB,EAAA7tD,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAO5L,EAAP2oD,EAAAhyD,OAAA,QAAAoE,IAAA4tD,EAAA,GAAAA,EAAA,GAAuB,KAAKtnD,EAA5BsnD,EAAAhyD,OAAA,QAAAoE,IAAA4tD,EAAA,GAAAA,EAAA,GAAoC,KAClD/yB,EAAY,CAChB7qB,cAAc,GACdgtB,OAAOv9B,EAAKqR,MAAM,GAClB+xB,aAAapjC,EAAKqR,MAAM,GACxBgsB,cAAcr9B,EAAKqR,MAAM,GACzBisB,gBAAgBt9B,EAAKqR,MAAM,GAC3B2zB,kBAAkBhlC,EAAKqR,MAAM,GAC7B2jD,sBAAsBh1D,EAAKqR,MAAM,IAGnC7L,EAAkBA,GAAoCxF,EAAK1G,MAAMkM,iBACjEqB,EAAUA,GAAoB7G,EAAK1G,MAAMuN,UAExBrB,EAdG,CAAA0L,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,SAeX8Z,GAfW,cAkBdvoB,EAAyC,SAAhC7S,EAAK1G,MAAMwZ,iBAlBN5B,EAAAE,KAAA,GAoBdpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAAuN,EAAA/Z,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAAuP,EAAOtb,GAAP,IAAAS,EAAA8N,EAAA3B,EAAA+Z,EAAAwpC,EAAA,OAAAhpC,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cAC7C7L,EAAcC,EAAgBV,GADewb,EAAAlP,KAAA,EAEpBpR,EAAKyyB,gBAAgBltB,EAAY81B,KAAKv2B,MAAM+B,GAFxB,YAE7CwM,EAF6CiN,EAAAnN,MAAA,CAAAmN,EAAAlP,KAAA,gBAAAkP,EAAAlP,KAAA,EAKxBpR,EAAKs7B,kBAAkB/1B,GALC,cAK3CmM,EAL2C4O,EAAAnN,KAM3CsY,EAAepY,EAAiB5E,MAAMiD,GANK4O,EAAAlP,KAAA,GAObpR,EAAKu7B,oBAAoB9P,EAAa3mB,EAAMS,EAAYsN,GAP3C,QAO3CoiD,EAP2C30C,EAAAnN,KAS5CzB,EAAW/T,SAAY8tB,EAAa9tB,UACvCy9B,EAAU7qB,cAAczL,GAAS,CAC/B4M,aACA+Z,eACApY,mBACA4hD,yBAIF75B,EAAUgI,aAAehI,EAAUgI,aAAa9xB,KAAKma,GACrD2P,EAAU45B,sBAAwB55B,EAAU45B,sBAAsB1jD,KAAK2jD,IAnBxB,yBAAA30C,EAAA1O,SAAAwO,EAAA/mB,SAA/C,gBAAA+nB,GAAA,OAAArO,EAAAjB,MAAAzY,KAAAiH,YAAA,IApBc,eA4Cdy0D,EAAuB,GAC7B/7D,OAAOmF,KAAKqH,GAAiBpH,QAAS,SAAA0G,GAChCs2B,EAAU7qB,cAAczL,KAC1BiwD,EAAqBjwD,GAASs2B,EAAU7qB,cAAczL,MAI1Ds2B,EAAU7qB,cAAgBwkD,EAEpB3yB,EAAkBppC,OAAOmF,KAAKi9B,EAAU7qB,eAAexQ,OAAO,SAAA+E,GAAK,OAAM9E,EAAKqR,MAAM+pB,EAAU7qB,cAAczL,GAAOuO,kBAAkBc,GAAG,KAE1IopB,EAASv9B,EAAKqR,MAAM,GACpBgsB,EAAgBr9B,EAAKqR,MAAM,GAC3BisB,EAAkBt9B,EAAKqR,MAAM,GAC7B2zB,EAAoBhlC,EAAKqR,MAAM,GA1DfH,EAAAE,KAAA,GA6DdpR,EAAKyQ,aAAa2xB,EAAlB,eAAA1hB,EAAA1nB,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAkC,SAAA+P,EAAO9b,GAAP,IAAAS,EAAAm6B,EAAAu1B,EAAApxB,EAAAC,EAAA/D,EAAAD,EAAAmE,EAAAD,EAAAlD,EAAA,OAAA7U,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,cAChC7L,EAAcC,EAAgBV,GADEic,EAAA3P,KAAA,EAERpR,EAAKmgC,mBAAmB56B,EAAYsB,GAF5B,cAEhC64B,EAFgC3e,EAAA5N,KAMhC8hD,EAAwB75B,EAAU7qB,cAAczL,GAAOmwD,sBANvBl0C,EAAA3P,KAAA,EAU5BqP,QAAQkD,IAAI,CACpB3jB,EAAKsgC,aAAa/6B,KAXkB,cAAAs+B,EAAA9iB,EAAA5N,KAAA2wB,EAAA9qC,OAAAqnC,EAAA,EAAArnC,CAAA6qC,EAAA,GAQpC9D,EARoC+D,EAAA,GAehChE,EAAW9/B,EAAKqR,MAAM0uB,EAAUS,QAChCyD,EAAcgxB,EAAsBpyC,IAAIuY,EAAU45B,uBAhBlBj0C,EAAA3P,KAAA,GAiBRpR,EAAKu7B,oBAAoBmE,EAAgB56B,EAAMS,EAAYsN,GAjBnD,QAiBhCmxB,EAjBgCjjB,EAAA5N,MAkBhC2tB,EAAgBm0B,EAAsB1jD,MAAMyyB,MAGhD3G,EAAgBA,EAAc/rB,KAAKwvB,IAGjChB,IACFvC,EAASA,EAAOjsB,KAAKwuB,EAASrxB,MAAMw1B,KAGlCD,IACF1G,EAAkBA,EAAgBhsB,KAAK0yB,IA7BH,yBAAAjjB,EAAAnP,SAAAgP,EAAAvnB,SAAlC,gBAAAgoB,GAAA,OAAAX,EAAA5O,MAAAzY,KAAAiH,YAAA,IA7Dc,eAgGhBg9B,EAAgBnpB,GAAG,KACrB6wB,EAAoB3H,EAAcxa,IAAIya,GAAiB7uB,MAAM,MAG/D2sB,EAAUmC,OAASA,EACnBnC,EAAUiC,cAAgBA,EAC1BjC,EAAUkC,gBAAkBA,EAC5BlC,EAAU4J,kBAAoBA,EAvGV9zB,EAAAoQ,OAAA,SA2Gb8Z,GA3Ga,yBAAAlqB,EAAAU,SAAAd,EAAAzX,SAhJJA,KA6PlB67D,oBA7PkBl8D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA6PI,SAAAmC,IAAA,IAAArM,EAAAE,EAAArB,EAAAnB,EAAA8wD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAl1D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UAAOzK,EAAP6uD,EAAAr5D,OAAA,QAAAoE,IAAAi1D,EAAA,GAAAA,EAAA,GAAqB,GAAG3uD,EAAxB2uD,EAAAr5D,OAAA,QAAAoE,IAAAi1D,EAAA,GAAAA,EAAA,GAAgC,OAAhCA,EAAAr5D,OAAA,QAAAoE,IAAAi1D,EAAA,KAAAA,EAAA,GACpB3uD,EAAUA,GAAoB7G,EAAK1G,MAAMuN,QADrB,CAAAoM,EAAA7B,KAAA,eAAA6B,EAAAqO,OAAA,SAIX,IAJW,cAOd9b,EAAkBxF,EAAKy1D,0BAExB9uD,GAAkBA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAKqH,IAG1BnB,EAAe,GACb8wD,EAAkB,GACpBC,EAAqBp1D,EAAKqR,MAAM,GAfhB4B,EAAA7B,KAAA,GAgBGpR,EAAK01D,YAAY7uD,EAAQ,EAAE,SAASF,GAhBvC,eAgBd0uD,EAhBcpiD,EAAAE,OAkBJkiD,EAASl5D,QAEvBk5D,EAASj3D,QAAQ,SAACwG,EAAGuD,GAGnB,IAAKvD,EAAG9I,OAAS8I,EAAG+wD,cAAgB/wD,EAAGgxD,gBACrC,OAAO,EAGT,IAAM9vD,EAAc9F,EAAKqR,MAAMzM,EAAGkB,aAC9B6vD,EAAc31D,EAAKqR,MAAMzM,EAAG+wD,aAC1BC,EAAkB51D,EAAKqR,MAAMzM,EAAGgxD,iBAEtC,OAAQhxD,EAAGH,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdG,EAAGH,QACD0D,EAAM,GAAKitD,EAAmBjhD,GAAG,GACnC,OAIC9P,EAAaO,EAAG9I,QACnBuI,EAAaO,EAAG9I,MAAQ,CACtB+5D,MAAM,KACNC,SAAS,KACTC,SAAS,KACTvyB,UAAUxjC,EAAKqR,MAAM,KAIzBhN,EAAaO,EAAG9I,MAAM0nC,UAAYn/B,EAAaO,EAAG9I,MAAM0nC,UAAUlyB,KAAKxL,GAChC,OAAnCzB,EAAaO,EAAG9I,MAAMg6D,WACxBzxD,EAAaO,EAAG9I,MAAM+5D,MAAQD,EAC9BvxD,EAAaO,EAAG9I,MAAMg6D,SAAWH,EAAYlnD,MAAMmnD,IAIvD,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBACHD,EAAcA,EAAYlnD,MAAMzO,EAAKqR,OAAO,IAO3C8jD,EAAgBvwD,EAAG9I,SACtBs5D,EAAqBA,EAAmB9jD,KAAKqkD,IACtB9pC,IAAI,KACzBupC,EAAqBp1D,EAAKqR,MAAM,IAKlC8jD,EAAgBvwD,EAAG9I,OAAQ,KAO7Bw5D,EAAct1D,EAAKqR,MAAM,GACzBkkD,EAAiBv1D,EAAKqR,MAAM,GAChCrY,OAAO8J,OAAOuB,GAAcjG,QAAS,SAAAwG,GACnC,IAAMmxD,EAAWnxD,EAAGkxD,SAASjzC,IAAIje,EAAG4+B,WAAWjyB,MAAM,GACrD+jD,EAAcA,EAAYhkD,KAAKykD,EAAStnD,MAAM7J,EAAG4+B,YACjD+xB,EAAiBA,EAAejkD,KAAK1M,EAAG4+B,aAG1C8xB,EAAcA,EAAYzyC,IAAI0yC,GAAgB9mD,OAAO,GA5FjCwE,EAAAqO,OAAA,SAiGbg0C,GAjGa,yBAAAriD,EAAArB,SAAAoB,EAAA3Z,SA7PJA,KAgWlB28D,oBAhWkBh9D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAgWI,SAAA+Q,IAAA,IAAAjb,EAAAE,EAAArB,EAAAnB,EAAAs7B,EAAAy1B,EAAAC,EAAAY,EAAA31D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,UAAOzK,EAAPsvD,EAAA95D,OAAA,QAAAoE,IAAA01D,EAAA,GAAAA,EAAA,GAAqB,GACzCpvD,GAD4CA,EAAxBovD,EAAA95D,OAAA,QAAAoE,IAAA01D,EAAA,GAAAA,EAAA,GAAgC,OACtBj2D,EAAK1G,MAAMuN,QADrB,CAAAib,EAAA1Q,KAAA,eAAA0Q,EAAAR,OAAA,SAIX,IAJW,cAOd9b,EAAkBxF,EAAKy1D,0BAExB9uD,GAAkBA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAKqH,IAGxBnB,EAAe,GACjBs7B,EAAc3/B,EAAKqR,MAAM,GACzB+jD,EAAqBp1D,EAAKqR,MAAM,GAfhByQ,EAAA1Q,KAAA,GAgBGpR,EAAK01D,YAAY7uD,EAAQ,EAAE,SAASF,GAhBvC,eAgBd0uD,EAhBcvzC,EAAA3O,OAoBJkiD,EAASl5D,QAEvBk5D,EAASj3D,QAAQ,SAACwG,EAAGuD,GAMnB,GAJK9D,EAAaO,EAAG9I,QACnBuI,EAAaO,EAAG9I,MAAQ,KAGtBuI,EAAaO,EAAG9I,MAAMiJ,SAASH,EAAGH,QAAtC,CAKA,IAAKG,EAAG9I,OAAS8I,EAAG+wD,cAAgB/wD,EAAGgxD,gBACrC,OAAO,EAGT,IAAMM,EAAkBv2B,EACpBg2B,EAAc31D,EAAKqR,MAAMzM,EAAG+wD,aAC1BC,EAAkB51D,EAAKqR,MAAMzM,EAAGgxD,iBAGtC,OAAQhxD,EAAGH,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdG,EAAGH,QACD0D,EAAM,GAAKitD,EAAmBjhD,GAAG,GACnC,OAGJwrB,EAAcg2B,EAAYlnD,MAAMmnD,GAAiBtkD,KAAK4kD,EAAgBznD,MAAM2mD,IAAqBvyC,IAAIuyC,EAAmB9jD,KAAKqkD,IAC/H,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBAEHA,EAAcA,EAAYlnD,MAAMzO,EAAKqR,OAAO,KAOhD+jD,EAAqBA,EAAmB9jD,KAAKqkD,IACtB9pC,IAAI,KACzB8T,EAAc3/B,EAAKqR,MAAM,GACzB+jD,EAAqBp1D,EAAKqR,MAAM,IAGlChN,EAAaO,EAAG9I,MAAMqK,KAAKvB,EAAGH,WAvEdqd,EAAAR,OAAA,SA+Ebqe,GA/Ea,yBAAA7d,EAAAlQ,SAAAgQ,EAAAvoB,SAhWJA,KAiblB+mC,eAjbkBpnC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAibD,SAAA4R,IAAA,IAAA9b,EAAAE,EAAA4hB,EAAAvhB,EAAA4nD,EAAAxuD,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA2R,GAAA,cAAAA,EAAAzR,KAAAyR,EAAAxR,MAAA,UAAOzK,EAAPmoD,EAAA3yD,OAAA,QAAAoE,IAAAuuD,EAAA,GAAAA,EAAA,GAAqB,IACpCjoD,GADuCA,EAAxBioD,EAAA3yD,OAAA,EAAA2yD,EAAA,QAAAvuD,IACeP,EAAK1G,MAAMuN,UAExBF,GAAkBA,EAAcxK,QAAW6D,EAAK1G,MAAMkM,gBAHxD,CAAAod,EAAAxR,KAAA,eAAAwR,EAAAtB,OAAA,SAIN,IAJM,cAOTmH,EAAS,GAPA7F,EAAAxR,KAAA,EAQYpR,EAAKiH,gBAAgBJ,EAAQ,EAAE,SAASF,GARpD,cAQTO,EARS0b,EAAAzP,KAUfxM,EAAcvI,QAAS,SAAAkH,GAErBmjB,EAAOnjB,GAAiB,GACxB,IAAIq6B,EAAc3/B,EAAKqR,MAAM,GAEzB8kD,EAAmBn2D,EAAKqR,MAAM,GAC5BN,EAAc/X,OAAO8J,OAAOoE,GAAcnH,OAAO,SAAA6E,GAAE,OAAKA,EAAGE,QAAUQ,IAEvEyL,GAAeA,EAAY5U,QAE7B4U,EAAY3S,QAAQ,SAACwG,EAAGuD,GAGtB,IAAKvD,EAAG9I,MAAS8I,EAAGjF,QAAwB,YAAdiF,EAAGjF,SAA0BiF,EAAG+M,aAAe/M,EAAG8M,WAC9E,OAAO,EAGT,IAAMwkD,EAAkBv2B,EACpBhuB,EAAa3R,EAAKqR,MAAMzM,EAAG+M,YACzBD,EAAa1R,EAAKqR,MAAMzM,EAAG8M,YAGjC,OAAQ9M,EAAGH,QACT,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,WACHk7B,EAAchuB,EAAWlD,MAAMiD,GAAYJ,KAAK4kD,EAAgBznD,MAAM0nD,IAAoBtzC,IAAIszC,EAAkB7kD,KAAKK,IACvH,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHA,EAAaA,EAAWlD,MAAMzO,EAAKqR,OAAO,KAO9C8kD,EAAoBA,EAAkB7kD,KAAKK,IACrBka,IAAI,KACxB8T,EAAc3/B,EAAKqR,MAAM,GACzB8kD,EAAoBn2D,EAAKqR,MAAM,MAOrCoX,EAAOnjB,GAAiBq6B,IA9DX/c,EAAAtB,OAAA,SAiERmH,GAjEQ,yBAAA7F,EAAAhR,SAAA6Q,EAAAppB,SAjbCA,KAoflB+8D,kBApfkBp9D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAofE,SAAAqS,IAAA,IAAAvc,EAAAE,EAAAK,EAAAmvD,EAAAC,EAAAh2D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UAAOzK,EAAP2vD,EAAAn6D,OAAA,QAAAoE,IAAA+1D,EAAA,GAAAA,EAAA,GAAqB,IACvCzvD,GAD0CA,EAAxByvD,EAAAn6D,OAAA,EAAAm6D,EAAA,QAAA/1D,IACYP,EAAK1G,MAAMuN,UAExBF,GAAkBA,EAAcxK,QAAW6D,EAAK1G,MAAMkM,gBAHrD,CAAA+d,EAAAnS,KAAA,eAAAmS,EAAAjC,OAAA,SAIT,IAJS,cAAAiC,EAAAnS,KAAA,EAOSpR,EAAKiH,gBAAgBJ,EAAQ,EAAE,SAASF,GAPjD,cAOZO,EAPYqc,EAAApQ,KASZkjD,EAAW,GAEjB1vD,EAAcvI,QAAQ,SAACkH,GACrB,IAAI0L,EAAahR,EAAKqR,MAAM,GACxBklD,EAAiB,KACrBF,EAAS/wD,GAAiBixD,EAE1B,IAAMxlD,EAAc/X,OAAO8J,OAAOoE,GAAcnH,OAAO,SAAA6E,GAAE,OAAKA,EAAGE,QAAUQ,IACvEyL,GAAeA,EAAY5U,QAE7B4U,EAAY3S,QAAQ,SAACwG,EAAGuD,GAEtB,IAAKvD,EAAG9I,MAAS8I,EAAGjF,QAAwB,YAAdiF,EAAGjF,SAA0BiF,EAAGkB,YAC5D,OAAO,EAGT,OAAQlB,EAAGH,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACHuM,EAAaA,EAAWM,KAAK1M,EAAGkB,aAC3BywD,IACHA,EAAiB3xD,GAErB,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHoM,EAAaA,EAAWO,MAAM3M,EAAGkB,aAOjCkL,EAAWQ,GAAG,KAChBR,EAAahR,EAAKqR,MAAM,GACxBklD,EAAiB,QAMvBF,EAAS/wD,GAAiBixD,IAtDVhzC,EAAAjC,OAAA,SAyDX+0C,GAzDW,yBAAA9yC,EAAA3R,SAAAsR,EAAA7pB,SApfFA,KA+iBlBm9D,aAAe,SAACC,GACd,OAAO,IAAIh2C,QAAQ,SAAAI,GAAO,OAAIkC,WAAWlC,EAAS41C,MAhjBlCp9D,KAkjBlBq9D,oBAljBkB19D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAkjBI,SAAAiT,IAAA,IAAAnd,EAAAE,EAAA8vD,EAAAC,EAAAt2D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,cAAOzK,EAAPiwD,EAAAz6D,OAAA,QAAAoE,IAAAq2D,EAAA,GAAAA,EAAA,GAAqB,GAAG/vD,EAAxB+vD,EAAAz6D,OAAA,EAAAy6D,EAAA,QAAAr2D,EAAAwjB,EAAA3S,KAAA,EACUpR,EAAKo2D,kBAAkBzvD,EAAcE,GAD/C,YACd8vD,EADc5yC,EAAA5Q,MAAA,CAAA4Q,EAAA3S,KAAA,eAAA2S,EAAAzC,OAAA,SAGXtoB,OAAOmF,KAAKw4D,GAAiB5jC,OAAQ,SAAC8jC,EAAI/xD,GAI/C,OAHI6xD,EAAgB7xD,KAClB+xD,EAAI/xD,GAAS6xD,EAAgB7xD,GAAOI,WAE/B2xD,GACP,KARgB,cAAA9yC,EAAAzC,OAAA,SAWb,MAXa,wBAAAyC,EAAAnS,SAAAkS,EAAAzqB,SAljBJA,KA+jBlB8mC,mBA/jBkB,eAAA22B,EAAA99D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+jBG,SAAAq/C,EAAO3qD,EAAYsB,GAAnB,IAAAopD,EAAAE,EAAA1kC,EAAAsrC,EAAAr3B,EAAA,OAAAzT,EAAApzB,EAAAoY,KAAA,SAAAu/C,GAAA,cAAAA,EAAAr/C,KAAAq/C,EAAAp/C,MAAA,cAAAo/C,EAAAp/C,KAAA,EACqBqP,QAAQkD,IAAI,CAClD3jB,EAAKyyB,gBAAgBltB,EAAY81B,KAAKv2B,MAAM+B,GAC5C7G,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAO,gBAAiB,CAAC+B,MAHlD,UAAAopD,EAAAO,EAAAr9C,KAAAg9C,EAAAn3D,OAAAqnC,EAAA,EAAArnC,CAAAi3D,EAAA,GACdxkC,EADc0kC,EAAA,GACD4G,EADC5G,EAAA,IAMf1kC,IAAgBsrC,EAND,CAAAvG,EAAAp/C,KAAA,gBAOjB2lD,EAAe/2D,EAAKgU,iBAAiB+iD,EAAaxxD,EAAYvH,UACxD0hC,EAAkBjU,EAAahd,MAAMsoD,GAR1BvG,EAAAlvC,OAAA,SASVoe,GATU,eAAA8wB,EAAAlvC,OAAA,SAYZ,MAZY,yBAAAkvC,EAAA5+C,SAAAs+C,EAAA72D,SA/jBH,gBAAAwY,EAAAuB,GAAA,OAAA0jD,EAAAhlD,MAAAzY,KAAAiH,YAAA,GAAAjH,KA6kBlB29D,cA7kBkBh+D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA6kBF,SAAA++C,IAAA,IAAAjpD,EAAAE,EAAAK,EAAA+vD,EAAAlH,EAAAzvD,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA++C,GAAA,cAAAA,EAAA7+C,KAAA6+C,EAAA5+C,MAAA,UAAOzK,EAAPopD,EAAA5zD,OAAA,QAAAoE,IAAAwvD,EAAA,GAAAA,EAAA,GAAqB,IAEnClpD,GAFsCA,EAAxBkpD,EAAA5zD,OAAA,EAAA4zD,EAAA,QAAAxvD,IAEOP,EAAK1G,MAAMuN,UAEfF,GAAkBA,EAAcxK,QAAW6D,EAAK1G,MAAMkM,gBAJzD,CAAAwqD,EAAA5+C,KAAA,eAAA4+C,EAAA1uC,OAAA,SAKL,IALK,cAAA0uC,EAAA5+C,KAAA,EAQapR,EAAKiH,gBAAgBJ,EAAQ,EAAE,SAASF,GAAc,GARnE,cAQRO,EARQ8oD,EAAA78C,KAUR8jD,EAAc,GAEpBtwD,EAAcvI,QAAQ,SAACkH,GACrB,IAAI0L,EAAahR,EAAKqR,MAAM,GAC5B4lD,EAAY3xD,GAAiB0L,EAE7B,IAAMD,EAAc/X,OAAO8J,OAAOoE,GAAcnH,OAAO,SAAA6E,GAAE,OAAKA,EAAGE,QAAUQ,IACvEyL,GAAeA,EAAY5U,QAE7B4U,EAAY3S,QAAQ,SAACwG,EAAGuD,GAEtB,IAAKvD,EAAG9I,MAAS8I,EAAGjF,QAAwB,YAAdiF,EAAGjF,SAA0BiF,EAAGkB,YAC5D,OAAO,EAGT,OAAQlB,EAAGH,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHuM,EAAaA,EAAWM,KAAK1M,EAAGkB,aAClC,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHkL,EAAaA,EAAWO,MAAM3M,EAAGkB,aAOjCkL,EAAWQ,GAAG,KAChBR,EAAahR,EAAKqR,MAAM,MAM9B4lD,EAAY3xD,GAAiB0L,IApDjBg/C,EAAA1uC,OAAA,SAyDP21C,GAzDO,yBAAAjH,EAAAp+C,SAAAg+C,EAAAv2D,SA7kBEA,KAwoBlB69D,oBAxoBkBl+D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAwoBI,SAAAogD,IAAA,IAAApqD,EAAAC,EAAAqwD,EAAAxwD,EAAA61C,EAAA1pC,EAAAskD,EAAA7b,EAAA8b,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArkD,EAAAskD,EAAAC,EAAA53D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAogD,GAAA,cAAAA,EAAAlgD,KAAAkgD,EAAAjgD,MAAA,UAAOvK,EAAPqxD,EAAA/7D,OAAA,QAAAoE,IAAA23D,EAAA,IAAAA,EAAA,GAAqBpxD,EAArBoxD,EAAA/7D,OAAA,QAAAoE,IAAA23D,EAAA,GAAAA,EAAA,GAAsC,EAAEf,EAAxCe,EAAA/7D,OAAA,QAAAoE,IAAA23D,EAAA,GAAAA,EAAA,GAAuD,SAASvxD,EAAhEuxD,EAAA/7D,OAAA,QAAAoE,IAAA23D,EAAA,GAAAA,EAAA,GAA8E,GAAG1b,EAAjF0b,EAAA/7D,OAAA,QAAAoE,IAAA23D,EAAA,IAAAA,EAAA,IACpBrxD,EAAUA,GAAoB7G,EAAK1G,MAAMuN,UAExBF,GAAkBA,EAAcxK,OAH7B,CAAAk1D,EAAAjgD,KAAA,eAAAigD,EAAA/vC,OAAA,SAIX,IAJW,UAOpBza,EAAUA,EAAQnC,cAEZoO,EAAmB9S,EAAK1G,MAAMwZ,iBAG9BskD,EAAuBp3D,EAAK+G,gBAAgB,CAAC,UAAU,qBAC7DD,EAAmB3B,KAAKkB,IAAI+wD,EAAqBtwD,GAE3Cy0C,EAAkBv7C,EAAK+G,gBAAgB,CAAC,UAAU,oBAClDswD,EAAgBr3D,EAAK+G,gBAAgB,CAAC,UAAU,YAAY,cAE9DktD,EAAU,GACVqD,EAAmB,KACnBC,EAAwB,MAGxBF,EAAcpkC,UAAWokC,EAAcvb,UAAUP,GAvBjC,CAAA8V,EAAAjgD,KAAA,YAwBZomD,EAAkBH,EAAcvb,UAAUP,GAGhDgc,EAAqB,GAAAh2D,OAAMi2D,EAAN,cAAAj2D,OAAkCuR,EAAlC,YAAAvR,OAA6DwtC,EAAIopB,wBAAjE,2CAAA52D,OAAkIsF,EAAlI,gBAAAtF,OAAwJ61D,EAAxJ,cAAA71D,OAAyL41D,EAAzL,aACrBG,EAAmBt3D,EAAKo4D,iBAAiBb,GAErC/a,GACFhvB,QAAQC,IAAI,oCAAoC6pC,KAI9CA,GAAoBA,EAAiB3sD,KAAK0tD,QAAUr/D,OAAO8J,OAAOw0D,EAAiB3sD,KAAK0tD,QAAQl8D,QAnClF,CAAAk1D,EAAAjgD,KAAA,gBAqCVqmD,EAAez+D,OAAO8J,OAAOw0D,EAAiB3sD,KAAK0tD,QAAQhxD,MAC3DqwD,EAAwBD,GAAgBA,EAAanwD,YAAcC,SAASkwD,EAAanwD,aAAa,EAAIR,EAE1G6wD,EAxCU,GAAAp2D,OAwCsBi2D,EAxCtB,cAAAj2D,OAwCkDuR,EAxClD,YAAAvR,OAwC6EwtC,EAAIopB,wBAxCjF,2CAAA52D,OAwCkJsF,EAxClJ,gBAAAtF,OAwCwKm2D,EAxCxK,cAAAn2D,OAwC0M41D,EAxC1M,aAAA9F,EAAAjgD,KAAA,GAyCMpR,EAAKs4D,kBAAkBX,EAA2B,IAzCxD,cAyCZC,EAzCYvG,EAAAl+C,OA2CCykD,EAAUjtD,KAAK0tD,QAAUT,EAAUjtD,KAAK0tD,OAAOl8D,QA3ChD,CAAAk1D,EAAAjgD,KAAA,gBAAAigD,EAAAjgD,KAAA,GA6CIpR,EAAKu4D,mBAAmBX,EAAUjtD,KAAK0tD,OAAO1xD,GAAc,GAAK,GA7CrE,SA6CdixD,EA7CcvG,EAAAl+C,OA+CGna,OAAO8J,OAAO80D,GAAWz7D,SAElC07D,EAAqB7+D,OAAO8J,OAAO80D,GAAWh2D,IAAK,SAAAwF,GAAM,OAAKG,SAASH,EAAOE,eACxDnC,KAAKkB,IAALyL,MAAA3M,KAAInM,OAAAw/D,EAAA,EAAAx/D,CAAQ6+D,KAGfH,IAEvB1+D,OAAO8J,OAAO80D,GAAWx5D,QAAQ,SAACwG,GAChB5L,OAAOmF,KAAKm5D,EAAiB3sD,KAAK0tD,QAAQtzD,SAASH,EAAGuC,WAEpEmwD,EAAiB3sD,KAAK0tD,OAAOzzD,EAAGuC,SAAWvC,KAK/C5E,EAAKy4D,iBAAiBlB,EAAsBD,EAAiB3sD,KAAK0tD,UA/DxD,QAAAhH,EAAAjgD,KAAA,iBAoEhBkmD,EAAmB,KApEH,WAuEdQ,EAAMR,EAEN9a,GACFhvB,QAAQC,IAAI,cAAcqqC,GAGvBA,EA7Ea,CAAAzG,EAAAjgD,KAAA,gBAAAigD,EAAAjgD,KAAA,GA+EJpR,EAAKw4B,YAAY++B,GA/Eb,YA+EhBO,EA/EgBzG,EAAAl+C,OAmFH2kD,EAAIntD,MAAoC,IAA5BpD,SAASuwD,EAAIntD,KAAKhL,QAnF3B,CAAA0xD,EAAAjgD,KAAA,SAoFV2mD,EAAe,EACfC,GAAgB,EArFN,eAAA3G,EAAAjgD,KAAA,GAuFNpR,EAAKw2D,aAAa,KAvFZ,eAAAnF,EAAAjgD,KAAA,GAwFApR,EAAKw4B,YAAY++B,GAxFjB,QAwFZO,EAxFYzG,EAAAl+C,KAyFZ4kD,IACAC,KAAgBF,IAAOA,EAAIntD,OAAOpD,SAASuwD,EAAIntD,KAAKhL,QA1FxC,WA4FLo4D,EAAa,IAAMC,EA5Fd,CAAA3G,EAAAjgD,KAAA,iBAgGZ0mD,GAAOA,EAAIntD,MAAQpD,SAASuwD,EAAIntD,KAAKhL,QAAQ,IACzCgU,EAAYpM,SAAS5B,KAAKouB,MAAM,MAChCkkC,EAAiBj4D,EAAKqvD,8BAA8B,iBAAiB,KAC5DkI,GAAyB,CACtC5sD,KAAKmtD,EACLnkD,aAEF3T,EAAKsvD,8BAA8B,iBAAiB2I,IAvGtC,aA2GdH,GAAOA,EAAIntD,MAAQmtD,EAAIntD,KAAK0tD,QA3Gd,CAAAhH,EAAAjgD,KAAA,SA4GhB6iD,EAAU6D,EAAIntD,KAAK0tD,OA5GHhH,EAAAjgD,KAAA,wBAAAigD,EAAA/vC,OAAA,SA8GT,IA9GS,eAAA+vC,EAAA/vC,OAAA,SAkHb,CACL2yC,UACAqD,mBACAC,0BArHkB,yBAAAlG,EAAAz/C,SAAAq/C,EAAA53D,SAxoBJA,KAgwBlBq8D,YAhwBkB18D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAgwBJ,SAAAggD,IAAA,IAAAhqD,EAAAC,EAAAqwD,EAAAxwD,EAAAstD,EAAAnD,EAAAxwD,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA8/C,GAAA,cAAAA,EAAA5/C,KAAA4/C,EAAA3/C,MAAA,cAAOvK,EAAPiqD,EAAA30D,OAAA,QAAAoE,IAAAuwD,EAAA,IAAAA,EAAA,GAAqBhqD,EAArBgqD,EAAA30D,OAAA,QAAAoE,IAAAuwD,EAAA,GAAAA,EAAA,GAAsC,EAAEqG,EAAxCrG,EAAA30D,OAAA,QAAAoE,IAAAuwD,EAAA,GAAAA,EAAA,GAAuD,SAASnqD,EAAhEmqD,EAAA30D,OAAA,QAAAoE,IAAAuwD,EAAA,GAAAA,EAAA,GAA8E,GAA9EC,EAAA3/C,KAAA,EACUpR,EAAKiH,gBAAgBJ,EAAQC,EAAiBqwD,EAAexwD,GADvE,cACNstD,EADMlD,EAAA59C,KAAA49C,EAAAzvC,OAAA,SAGLthB,EAAK04D,eAAezE,EAAQttD,IAHvB,wBAAAoqD,EAAAn/C,SAAAi/C,EAAAx3D,SAhwBIA,KAqwBlBo/D,iBAAmB,SAACjnB,EAASsmB,GAC3B,IAAMa,EAAa,GACnB3/D,OAAOmF,KAAK25D,GAAK15D,QAAQ,SAAAgK,GACvB,IAAMxD,EAAKkzD,EAAI1vD,IACXxD,EAAG0C,aAAiB1C,EAAGjF,QAAsC,YAA5BiF,EAAGjF,OAAO+E,gBAC7Ci0D,EAAWvwD,GAAUxD,KAKzB,IAAMg0D,EAAgB,CACpBjuD,KAAK,CACH0tD,OAAOM,IAGX34D,EAAK64D,kBAAkBrnB,GAAS,EAAMonB,IApxBtBv/D,KAsxBlB4N,gBAtxBkBjO,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAsxBA,SAAAioD,IAAA,IAAAjyD,EAAAC,EAAAqwD,EAAAxwD,EAAA61C,EAAA2U,EAAA8C,EAAAqD,EAAAC,EAAArwD,EAAA6xD,EAAAC,EAAA14D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAgoD,GAAA,cAAAA,EAAA9nD,KAAA8nD,EAAA7nD,MAAA,cAAOvK,EAAPmyD,EAAA78D,OAAA,QAAAoE,IAAAy4D,EAAA,IAAAA,EAAA,GAAqBlyD,EAArBkyD,EAAA78D,OAAA,QAAAoE,IAAAy4D,EAAA,GAAAA,EAAA,GAAsC,EAAE7B,EAAxC6B,EAAA78D,OAAA,QAAAoE,IAAAy4D,EAAA,GAAAA,EAAA,GAAuD,SAASryD,EAAhEqyD,EAAA78D,OAAA,QAAAoE,IAAAy4D,EAAA,GAAAA,EAAA,GAA8E,GAAGxc,EAAjFwc,EAAA78D,OAAA,QAAAoE,IAAAy4D,EAAA,IAAAA,EAAA,GAAAC,EAAA7nD,KAAA,EAKNpR,EAAKk3D,oBAAoBrwD,EAAQC,EAAiBqwD,EAAexwD,EAAc61C,GALzE,UAAA2U,EAAA8H,EAAA9lD,KAEd8gD,EAFc9C,EAEd8C,QACAqD,EAHcnG,EAGdmG,iBACAC,EAJcpG,EAIdoG,sBAIErwD,EAAe,IACfowD,EATY,CAAA2B,EAAA7nD,KAAA,gBAAA6nD,EAAA7nD,KAAA,GAWOpR,EAAKk5D,iBAAiBjF,EAAQttD,GAXrC,QAWdO,EAXc+xD,EAAA9lD,KAAA8lD,EAAA7nD,KAAA,wBAaR2nD,EAAqB//D,OAAOmF,KAAK6B,EAAK1G,MAAMkM,iBAbpCyzD,EAAA7nD,KAAA,GAeOpR,EAAKu4D,mBAAmBtE,EAAQ8E,GAfvC,SAed7xD,EAfc+xD,EAAA9lD,OAkBMna,OAAOmF,KAAK+I,GAAc/K,QAC5C6D,EAAKy4D,iBAAiBlB,EAAsBrwD,GAnBhC,eAuBZs1C,GACFhvB,QAAQC,IAAI,4BAA4BvmB,GAxB1B+xD,EAAA33C,OAAA,SA2BTtoB,OACE8J,OAAOoE,GACPnH,OAAO,SAAA6E,GAAE,OAAKA,EAAGE,OAAS6B,EAAc5B,SAASH,EAAGE,MAAM5C,iBAC1D8C,KAAK,SAACnM,EAAEoM,GAAH,OAAUpM,EAAEqM,UAAYD,EAAEC,WAAa,EAAI,KA9BzC,yBAAA+zD,EAAArnD,SAAAknD,EAAAz/D,SAtxBAA,KAszBlBq/D,eAtzBkB,eAAAS,EAAAngE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAszBD,SAAAuoD,EAAOnF,GAAP,IAAAttD,EAAAnB,EAAA6vD,EAAAgE,EAAA/4D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAqoD,GAAA,cAAAA,EAAAnoD,KAAAmoD,EAAAloD,MAAA,UAAezK,EAAf0yD,EAAAl9D,OAAA,QAAAoE,IAAA84D,EAAA,GAAAA,EAAA,GAA6B,GAEvCpF,GAAYA,EAAQ93D,QAAqC,oBAApB83D,EAAQ71D,QAFnC,CAAAk7D,EAAAloD,KAAA,eAAAkoD,EAAAh4C,OAAA,SAGN,IAHM,cAMT9b,EAAkBxF,EAAK1G,MAAMkM,gBAAkBxF,EAAK1G,MAAMkM,gBAAkBxF,EAAKy1D,0BAElF9uD,GAAkBA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAKqH,KAGxB6vD,EAAWpB,EAAQl0D,OAAQ,SAAA6E,GAAE,OAAK+B,EAAc5B,SAASH,EAAGE,QAAU,CAAC,UAAU,WAAW,aAAa,cAAc,kBAAkB,mBAAmB,iBAAiB,mBAAmBC,SAASH,EAAGH,WAErMtI,QACXk5D,EAASrwD,KAAK,SAACnM,EAAEoM,GAAH,OAAUpM,EAAEqM,UAAYD,EAAEC,WAAa,EAAI,IAf5Co0D,EAAAh4C,OAAA,SAkBR+zC,GAlBQ,wBAAAiE,EAAA1nD,SAAAwnD,EAAA//D,SAtzBC,gBAAAk2D,GAAA,OAAA4J,EAAArnD,MAAAzY,KAAAiH,YAAA,GAAAjH,KA00BlBk/D,mBA10BkB,eAAAgB,EAAAvgE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA00BG,SAAA2oD,EAAOvF,GAAP,IAAAttD,EAAApC,EAAA20D,EAAAhyD,EAAAuyD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAz5D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA+oD,GAAA,cAAAA,EAAA7oD,KAAA6oD,EAAA5oD,MAAA,UAAezK,EAAfozD,EAAA59D,OAAA,QAAAoE,IAAAw5D,EAAA,GAAAA,EAAA,GAA6B,GAAGx1D,IAAhCw1D,EAAA59D,OAAA,QAAAoE,IAAAw5D,EAAA,KAAAA,EAAA,GAAgDb,IAAhDa,EAAA59D,OAAA,QAAAoE,IAAAw5D,EAAA,KAAAA,EAAA,GACd/5D,EAAK1G,MAAMuN,SAAYotD,GAAYA,EAAQ93D,QAAqC,oBAApB83D,EAAQ71D,QADtD,CAAA47D,EAAA5oD,KAAA,eAAA4oD,EAAA14C,OAAA,SAEV,IAFU,UAKd3a,GAAkBA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAK6B,EAAK1G,MAAMkM,kBAGrC0B,EAAe,GACfuyD,EAAoB,GACpBC,EAA4B,GAG1BC,EAAmB35D,EAAK+G,gBAAgB,CAAC,QAAQ,gBACjD6yD,EAAoB55D,EAAK+G,gBAAgB,CAAC,QAAQ,iBAClD8yD,EAAoB75D,EAAK+G,gBAAgB,CAAC,QAAQ,sBAClD+yD,EAAuB95D,EAAK+G,gBAAgB,CAAC,QAAQ,oBAI3DJ,EAAcvI,QAAQ,SAAA0G,GACpB,IAAMS,EAAcvF,EAAK1G,MAAMkM,gBAAgBV,GACzCuvD,EAA2Br0D,EAAK+G,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChFutD,EAAwB/uD,EAAYskC,WAAatkC,EAAYskC,UAAUxB,kBAAoB9iC,EAAYskC,UAAUxB,kBAAkB95B,QAAU,KAC7IgmD,EAA4BhvD,EAAYskC,WAAatkC,EAAYskC,UAAUxB,mBAAqB9iC,EAAYskC,UAAUxB,kBAAkBqX,aAAen6C,EAAYskC,UAAUxB,kBAAkBqX,aAAe,GAC9Mua,EAA2Bj6D,EAAK+G,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,sBAElFg4C,EAAiB/+C,EAAK+G,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkBxB,EAAY81B,KAAKv2B,QAC3G0vD,EAA6BzV,GAAkBA,EAAe1W,kBAAoB0W,EAAe1W,kBAAkB95B,QAAU,KAG7H2rD,EAAmBl6D,EAAK+G,gBAAgB,CAAC,QAAQ,kBAAkBxB,EAAY81B,KAAKv2B,QAE1FmvD,EAAQ71D,QAAS,SAAAwG,GACf,IAAIgP,EAAgBrO,EAAYvH,SAC1Bm8D,EAAY50D,EAAY81B,KAAKv2B,MAC7Bs1D,EAAcnG,EAAQl0D,OAAO,SAAAyxB,GAAC,OAAIA,EAAE11B,OAAS8I,EAAG9I,OAChDu+D,EAAeD,EAAYj+D,OAAO,GAAKi+D,EAAYr6D,OAAO,SAAAu6D,GAAG,OAAIA,EAAItO,gBAAgBtnD,gBAAkBa,EAAYgJ,QAAQ7J,gBAAevI,OAAO,EACjJu4D,EAA0C,IAAvB0F,EAAYj+D,QAAgByI,EAAGkJ,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,cAC3KiwD,EAA6C,IAAvByF,EAAYj+D,QAAgByI,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,cAC5K61D,EAAqB/F,GAA8B5vD,EAAGkJ,KAAKpJ,gBAAkB8vD,EAA2B9vD,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,eAAiBE,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,cAEnP81D,EAAsBH,GAAgBD,EAAYt0C,KAAM,SAAAw0C,GAAG,OAAIA,EAAIxsD,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,gBAAkB41D,EAAI7G,GAAG/uD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,eAAkB2vD,GAA4BiG,EAAI7G,GAAG/uD,gBAAkB2vD,EAAyB9lD,QAAQ7J,eAAiB01D,EAAYr6D,OAAO,SAAA06D,GAAI,OAAIA,EAAKzO,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,gBAAevI,OAAO,KAC3Zu+D,EAAqBL,GAAgBD,EAAYt0C,KAAM,SAAAw0C,GAAG,OAAIA,EAAItO,gBAAgBtnD,gBAAkBa,EAAYgJ,QAAQ7J,eAAiB01D,EAAYr6D,OAAO,SAAA06D,GAAI,OAAIA,EAAKzO,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,gBAAevI,QAAUm+D,EAAI7G,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,gBAEzS+vD,EAAgB8F,GAAuBjG,IAA0B1vD,EAAGkJ,KAAKpJ,gBAAkB4vD,EAAsB5vD,eAAiB6vD,EAA0B3yD,IAAI,SAACmB,GAAQ,OAAOA,EAAE2B,gBAAkBK,SAASH,EAAGkJ,KAAKpJ,iBAAoBE,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,cACvSi2D,EAAiBV,IAA6Br1D,EAAGkJ,KAAKpJ,gBAAkBu1D,EAAyB1rD,QAAQ7J,eAAiBu1D,EAAyBva,aAAa99C,IAAI,SAACmB,GAAQ,OAAOA,EAAE2B,gBAAkBK,SAASH,EAAGkJ,KAAKpJ,iBAAmBE,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,cACtWkwD,EAAcyF,IAAiB5F,GAAiB7vD,EAAGkJ,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,gBAAkBE,EAAG6uD,GAAG/uD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,eAAkB2vD,GAA4BzvD,EAAG6uD,GAAG/uD,gBAAkB2vD,EAAyB9lD,QAAQ7J,eAAiB01D,EAAYr6D,OAAO,SAAAu6D,GAAG,OAAIA,EAAItO,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,gBAAevI,OAAO,GACvY04D,EAAawF,IAAiB5F,IAAkB+F,GAAuB51D,EAAGonD,gBAAgBtnD,gBAAkBa,EAAYgJ,QAAQ7J,eAAiB01D,EAAYr6D,OAAO,SAAAu6D,GAAG,OAAIA,EAAItO,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,gBAAevI,QAAUyI,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,cAC9Sk2D,EAAeR,EAAYj+D,OAAO,GAAKi+D,EAAYr6D,OAAO,SAAAu6D,GAAG,OAAI/0D,EAAY4I,UAAUvM,IAAI,SAAAvD,GAAC,OAAIA,EAAEkQ,QAAQ7J,gBAAeK,SAASu1D,EAAItO,gBAAgBtnD,iBAAiBvI,OAAO,GAAKyI,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,cAGjPyqD,EAAmB+K,GAAoBA,EAAiB3rD,QAAU2rD,EAAiB3rD,QAAUhJ,EAAY81B,KAAK9sB,QAG9GssD,EAAUT,EAAYt0C,KAAM,SAAAlhB,GAAE,OAAKA,EAAGonD,gBAAgBtnD,gBAAkBk1D,EAAkBrrD,QAAQ7J,gBAAkBE,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGkJ,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,iBAC7No2D,OAAwBv6D,IAAZs6D,EAEZE,EAAmBD,GAAal2D,EAAGonD,gBAAgBtnD,gBAAkByqD,EAAiBzqD,eAAiBE,EAAG6uD,GAAG/uD,gBAAkBm1D,EAAkBtrD,QAAQ7J,eAAiBE,EAAGkJ,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiB1E,EAAKqR,MAAMzM,EAAGxJ,OAAO+Y,GAAG,GAChQ6mD,EAAkBF,GAAal2D,EAAGonD,gBAAgBtnD,gBAAkByqD,EAAiBzqD,eAAiBE,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGkJ,KAAKpJ,gBAAkBm1D,EAAkBtrD,QAAQ7J,eAAiB1E,EAAKqR,MAAMzM,EAAGxJ,OAAO+Y,GAAG,GAE/P8mD,EAAmBH,GAAal2D,EAAGonD,gBAAgBtnD,gBAAkBa,EAAYgJ,QAAQ7J,eAAiBE,EAAGkJ,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAG6uD,GAAG/uD,gBAAkBo1D,EAAqBvrD,QAAQ7J,eAAiB1E,EAAKqR,MAAMzM,EAAGxJ,OAAO+Y,GAAG,GACtQ+mD,EAAoBJ,GAAal2D,EAAGonD,gBAAgBtnD,gBAAkBa,EAAYgJ,QAAQ7J,eAAiBE,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGkJ,KAAKpJ,gBAAkBo1D,EAAqBvrD,QAAQ7J,eAAiB1E,EAAKqR,MAAMzM,EAAGxJ,OAAO+Y,GAAG,GAEvQgnD,EAAeL,GAAal2D,EAAGonD,gBAAgBtnD,gBAAkBk1D,EAAkBrrD,QAAQ7J,eAAiBE,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGkJ,KAAKpJ,gBAAkBi1D,EAAiBprD,QAAQ7J,eAAiB1E,EAAKqR,MAAMzM,EAAGxJ,OAAO+Y,GAAG,GACpQinD,EAAgBN,GAAal2D,EAAGonD,gBAAgBtnD,gBAAkBk1D,EAAkBrrD,QAAQ7J,eAAiBE,EAAGkJ,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAG6uD,GAAG/uD,gBAAkBi1D,EAAiBprD,QAAQ7J,eAAiB1E,EAAKqR,MAAMzM,EAAGxJ,OAAO+Y,GAAG,GAErQknD,EAAqBz2D,EAAGonD,gBAAgBtnD,gBAAkBk1D,EAAkBrrD,QAAQ7J,gBAAkB02D,IAAkBJ,GAAmEp2D,EAAGkJ,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,cACxO42D,EAAoB12D,EAAGonD,gBAAgBtnD,gBAAkBk1D,EAAkBrrD,QAAQ7J,gBAAkBy2D,IAAiBJ,GAAoEn2D,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,cAErO62D,GAAeT,IAAcpG,IAAqBkG,IAAiBF,IAAuBxzD,EAAatC,EAAG9I,OAAS8I,EAAGkJ,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,cAC/OowD,GAAYgG,IAAcnG,IAAwBgG,IAAmBH,IAAwBtzD,EAAatC,EAAG9I,OAAS8I,EAAG6uD,GAAG/uD,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAAiBE,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,cAMtP,GAAIgwD,GAAoBC,GAAuBF,GAAiBG,GAAeC,GAAcC,GAAYyG,GAAeX,GAAgBD,GAAkBI,GAAoBC,GAAmBG,GAAgBC,GAAiBC,GAAsBC,GAAqBL,GAAoBC,EAAkB,CAEjT,IAAIz2D,EAAS,KACT0C,EAAUvC,EAAG9I,KAEb84D,EACFnwD,EAAS,UACAowD,EACTpwD,EAAS,SACAgwD,GAAiBkG,EAC1Bl2D,EAAS,UACAiwD,EACTjwD,EAAS,OACAkwD,EACTlwD,EAAS,UACAqwD,EACTrwD,EAAS,OACA82D,EACT92D,EAAS,UACAm2D,EACTn2D,EAAS,WACAs2D,EACTt2D,EAAS,UACAu2D,EACTv2D,EAAS,WACA02D,EACT12D,EAAS,aACA22D,EACT32D,EAAS,cACAw2D,EACTx2D,EAAS,iBACAy2D,EACTz2D,EAAS,kBACA62D,EACT72D,EAAS,kBACA42D,IACT52D,EAAS,oBAGX,IAAIkxD,EAAc,KAoBlB,GAnBImF,IACF3zD,GAAW,IAAIvC,EAAGqkB,YAClB0sC,EAAc31D,EAAKgU,iBAAiB6mD,EAAQz/D,MAAMw+D,EAAkB57D,WAG/Ds9D,GAAqBD,KACxBl0D,GAAS,IAAI1C,IAMbG,EAAGonD,gBAAgBtnD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,cAChEkP,EAAgB,GACPknD,IACTlnD,EAAgBrM,SAAS3C,EAAG42D,eAI1Bt0D,EAAaC,GAEf,OAAQD,EAAaC,GAAS1C,QAC5B,IAAK,UACCyC,EAAaC,GAAS1C,SAAWA,GAAUowD,IAC7C3tD,EAAaC,GAASs0D,WAAaz7D,EAAKgU,iBAAiBpP,EAAGxJ,MAAMwY,IAEtE,MACA,QACE,IAAKinD,EAAQ,CACX,IAAMa,EAAWx0D,EAAaC,GAAS/L,MAAMkW,KAAKtR,EAAKgU,iBAAiBpP,EAAGxJ,MAAMwY,IACjF1M,EAAaC,GAAS/L,MAAQsgE,QAMpC,GAAIJ,GAAqBD,EAClB3B,EAA0B30D,SAASH,EAAG9I,KAAK4I,iBAC9CixD,EAAc31D,EAAKgU,iBAAiBpP,EAAGxJ,MAAMw+D,EAAkB57D,UAC/Dy7D,EAAkBtzD,KAAlBnN,OAAAkH,EAAA,EAAAlH,CAAA,GAA2B4L,EAA3B,CAA+BuC,UAASrC,QAAOq1D,YAAWxE,cAAalxD,SAAQrJ,MAAO4E,EAAKgU,iBAAiBpP,EAAGxJ,MAAMwY,YAWvH,OARA1M,EAAaC,GAAbnO,OAAAkH,EAAA,EAAAlH,CAAA,GAA6B4L,EAA7B,CAAiCuC,UAASrC,QAAOq1D,YAAWxE,cAAalxD,SAAQrJ,MAAO4E,EAAKgU,iBAAiBpP,EAAGxJ,MAAMwY,KAGlH8lD,EAA0B30D,SAASH,EAAG9I,KAAK4I,gBAC9Cg1D,EAA0BvzD,KAAKvB,EAAG9I,KAAK4I,eAIjCD,GACN,IAAK,WACH,IAAMk3D,EAAOvB,EAAYr6D,OAAO,SAAAu6D,GAAG,OAAKA,IAAQ11D,IAChD,GAAI+2D,EAAKx/D,OAAO,EAAE,CAChB,IAAMm+D,EAAMqB,EAAK,GACjBz0D,EAAaC,GAASy0D,eAAiB57D,EAAKgU,iBAAiBsmD,EAAIl/D,MAAMk/D,EAAIkB,cAC3Et0D,EAAaC,GAAS8hB,YAAcqxC,EAAIrxC,YAE5C,MACA,IAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,cACL,IAAK,iBACL,IAAK,kBACH/hB,EAAaC,GAAS8hB,YAAcnkB,QAWlD20D,EAAkBr7D,QAAS,SAAAwG,GACpB80D,EAA0B30D,SAASH,EAAG9I,KAAK4I,iBAC9CwC,EAAatC,EAAGuC,SAAWvC,MAI3BL,EAxMe,CAAAy1D,EAAA5oD,KAAA,gBAAA4oD,EAAA5oD,KAAA,GAyMIpR,EAAK67D,6BAA6B30D,EAAaP,EAAcuyD,GAzMjE,QAyMjBhyD,EAzMiB8yD,EAAA7mD,KAAA,eAAA6mD,EAAA14C,OAAA,SA8MZpa,GA9MY,yBAAA8yD,EAAApoD,SAAA4nD,EAAAngE,SA10BH,gBAAAq2D,GAAA,OAAA6J,EAAAznD,MAAAzY,KAAAiH,YAAA,GAAAjH,KA0hClByiE,qBAAuB,SAACC,EAAMvzD,GAE5B,IAAM3B,EAAU7G,EAAK1G,OAAS0G,EAAK1G,MAAMuN,QAAU7G,EAAK1G,MAAMuN,QAAU,KAClEvB,EAAgBtF,EAAK1G,OAAS0G,EAAK1G,MAAMgM,cAAgBtF,EAAK1G,MAAMgM,cAAgB,KAE1F,IAAKuB,IAAYvB,IAAkBtF,EAAK1G,MAAMkM,kBAAoBxF,EAAK1G,MAAMkM,gBAAgBF,GAC3F,OAAO,EAGT,IACM02D,EADch8D,EAAK1G,MAAMkM,gBAAgBF,GAClB+1B,KAAKv2B,MAE9Bm3D,EAAYj8D,EAAKk8D,wBAChBD,EAAUp1D,KACbo1D,EAAUp1D,GAAW,IAGlBo1D,EAAUp1D,GAASm1D,KACtBC,EAAUp1D,GAASm1D,GAAY,IAGjCC,EAAUp1D,GAASm1D,GAAUD,GAASvzD,EACtCxI,EAAKm8D,yBAAyBF,IAhjCd5iE,KAkjClB8iE,yBAA2B,SAAAz1D,GACzB1G,EAAK6jB,gBAAgB,eAAerd,KAAKC,UAAUC,KAnjCnCrN,KAwjClB6iE,sBAAwB,WAAmD,IAAlDr1D,EAAkDvG,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAA1C,KAAK07D,EAAqC17D,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAA5B,KAAKgF,EAAuBhF,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KAC1D27D,EAAYj8D,EAAKo8D,cAAc,gBAAe,EAAK,IACnD11D,EAAe1G,EAAK1G,MAAMoN,aAAX1N,OAAAkH,EAAA,EAAAlH,CAAA,GAA+BgH,EAAK1G,MAAMoN,cAAiB,GAC5E+hB,EAASwzC,EAsBb,OApBIp1D,IACEo1D,EAAUp1D,IACZ4hB,EAASwzC,EAAUp1D,GACfm1D,IACFvzC,EAASA,EAAOuzC,GAAYvzC,EAAOuzC,GAAY,GAE3C12D,GACFtM,OAAOmF,KAAKuI,GAActI,QAAQ,SAAA29D,GAChC,IAAMn3D,EAAK8B,EAAaq1D,IACnBtzC,EAAOszC,IAAUn3D,EAAGE,OAASF,EAAGE,MAAM5C,gBAAkBoD,EAAcpD,gBACzEumB,EAAOszC,GAASr1D,EAAaq1D,QAMrCtzC,EAAS,IAINA,GAjlCSpvB,KAmlClBwiE,6BAnlCkB,eAAAQ,EAAArjE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAmlCa,SAAAyrD,EAAOp1D,GAAP,IAAAP,EAAAuyD,EAAAqD,EAAAN,EAAAO,EAAAC,EAAAC,EAAA/C,EAAAgD,EAAAr8D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA2rD,GAAA,cAAAA,EAAAzrD,KAAAyrD,EAAAxrD,MAAA,cAAoBzK,EAApBg2D,EAAAxgE,OAAA,QAAAoE,IAAAo8D,EAAA,GAAAA,EAAA,GAAkC,GAAGzD,IAArCyD,EAAAxgE,OAAA,QAAAoE,IAAAo8D,EAAA,KAAAA,EAAA,GAExBh2D,GAAkBA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAK6B,EAAK1G,MAAMkM,kBAGrC+2D,EAAa,GAI4B,kBAHzCN,EAAYj8D,EAAKk8D,yBAGAl8D,EAAK1G,MAAMuN,WAC9Bo1D,EAAUj8D,EAAK1G,MAAMuN,SAAW,IAI5B21D,EAAoB,GACpBC,EAAsB,GACtBC,EAAuB18D,EAAK+G,gBAAgB,CAAC,QAAQ,oBAC3D/N,OAAOmF,KAAKu+D,GAAsBt+D,QAAS,SAAA0G,GACzC,IAAMo1D,EAAmBwC,EAAqB53D,GACxC2kC,EAAkBzpC,EAAK+G,gBAAgB,CAAC,QAAQ,SAASmzD,EAAiBlkC,YAC1E6mC,EAAmBpzB,EAAgBl7B,QAAQ7J,cACjD83D,EAAkBK,GAAoBpzB,EACtC+yB,EAAkBK,GAAkB/3D,MAAQo1D,EAAiBlkC,UAC7DymC,EAAoBt2D,KAAK02D,KAGrBlD,EAAmB35D,EAAK+G,gBAAgB,CAAC,QAAQ,gBA3B1B61D,EAAAxrD,KAAA,GAgCvBpR,EAAKyQ,aAAa9J,EAAlB,eAAAm2D,EAAA9jE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAgC,SAAAksD,EAAOz3D,GAAP,IAAAC,EAAAy2D,EAAA7B,EAAA6C,EAAAjsD,EAAA,OAAAkb,EAAApzB,EAAAoY,KAAA,SAAAgsD,GAAA,cAAAA,EAAA9rD,KAAA8rD,EAAA7rD,MAAA,UAE9B7L,EAAcvF,EAAK1G,MAAMkM,gBAAgBF,GACzC02D,EAAWz2D,EAAY81B,KAAKv2B,MAC5Bq1D,EAAY50D,EAAY81B,KAAKv2B,MAGoB,kBAA5Cm3D,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,KACvCC,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAY,IAGtCgB,EAX8BhkE,OAAAkH,EAAA,EAAAlH,CAAA,GAWfijE,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,MAE7CjrD,EAAc/X,OAAO8J,OAAOoE,GAAcnH,OAAO,SAAA6E,GAAE,OAAKA,EAAGE,QAAUQ,OACxDyL,EAAY5U,OAdK,CAAA8gE,EAAA7rD,KAAA,eAAA6rD,EAAA7rD,KAAA,EAgB5BpR,EAAKyQ,aAAaM,EAAlB,eAAAmsD,EAAAlkE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA8B,SAAAssD,EAAOv4D,EAAGuD,GAAV,IAAA4zD,EAAAqB,EAAA1rD,EAAAC,EAAA0rD,EAAAzH,EAAA0H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzD,EAAA0D,EAAAzO,EAAA0O,EAAA,OAAA5xC,EAAApzB,EAAAoY,KAAA,SAAA6sD,GAAA,cAAAA,EAAA3sD,KAAA2sD,EAAA1sD,MAAA,UAC5B2qD,EAD4B,KAAAx6D,OACfqD,EAAGM,UADY,OAE5Bk4D,EAAWnB,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAASE,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAASn3D,EAE/G8M,EAAa,MAEb0rD,EAAS1rD,YAAe1R,EAAKqR,MAAM+rD,EAAS1rD,YAAY/T,QAN1B,CAAAmgE,EAAA1sD,KAAA,QAOhCM,EAAa1R,EAAKqR,MAAM+rD,EAAS1rD,YAPDosD,EAAA1sD,KAAA,uBAAA0sD,EAAA1sD,KAAA,EASbpR,EAAKs7B,kBAAkB/1B,EAAYX,EAAG0C,YAAY1C,EAAGM,WATxC,OAShCwM,EATgCosD,EAAA3qD,KAUhCiqD,EAAS1rD,WAAaA,EAVU,QAa9BC,EAAa3R,EAAKqR,MAAMzM,EAAGxJ,OAC3BiiE,EAAmB3rD,EAAWjD,MAAMkD,GAGnCyrD,EAAS3wC,kBACZ2wC,EAAS3wC,gBAAkB7nB,EAAG9I,MAlBEgiE,EAAAlV,GAsB1BhkD,EAAGH,OAtBuBq5D,EAAA1sD,KAuB3B,SAvB2B0sD,EAAAlV,GAAA,GAwB3B,YAxB2BkV,EAAAlV,GAAA,GAyB3B,SAzB2BkV,EAAAlV,GAAA,GA0B3B,YA1B2BkV,EAAAlV,GAAA,GA2B3B,YA3B2BkV,EAAAlV,GAAA,GAmC3B,YAnC2BkV,EAAAlV,GAAA,GAoC3B,WApC2BkV,EAAAlV,GAAA,GA2C3B,aA3C2BkV,EAAAlV,GAAA,GAkD3B,YAlD2BkV,EAAAlV,GAAA,GAmD3B,aAnD2BkV,EAAAlV,GAAA,GA2D3B,oBA3D2BkV,EAAAlV,GAAA,GA4D3B,qBA5D2BkV,EAAAlV,GAAA,GAqE3B,eArE2BkV,EAAAlV,GAAA,GAsE3B,gBAtE2BkV,EAAAlV,GAAA,GAkH3B,mBAlH2BkV,EAAAlV,GAAA,GAmH3B,oBAnH2BkV,EAAAlV,GAAA,2BA4BzBwU,EAASt3D,cACZs3D,EAASzrD,WAAaA,EACtByrD,EAAShiE,MAAQiiE,EACjBD,EAASt3D,YAAcu3D,EACvBD,EAASn0C,YAAc3jB,GAhCKw4D,EAAAx8C,OAAA,2BAqCzB87C,EAASt3D,cACZs3D,EAAShiE,MAAQuW,EACjByrD,EAASt3D,YAAc6L,EACvByrD,EAASzrD,WAAaA,EAAWkR,IAAInR,IAxCTosD,EAAAx8C,OAAA,2BA4CzB87C,EAASt3D,cACZs3D,EAASzrD,WAAaA,EACtByrD,EAASt3D,YAAcu3D,EACvBD,EAAShiE,MAAQgiE,EAASxB,gBA/CEkC,EAAAx8C,OAAA,uBAoDzB87C,EAASt3D,YApDgB,CAAAg4D,EAAA1sD,KAAA,gBAAA0sD,EAAA1sD,KAAA,GAqDEpR,EAAK+9D,mBAAmBn5D,EAAG0C,aArD7B,QAqDtBsuD,EArDsBkI,EAAA3qD,KAsD5BiqD,EAASzrD,WAAaA,EACtByrD,EAASt3D,YAAcu3D,EACvBD,EAASxH,gBAAkBA,EAxDC,eAAAkI,EAAAx8C,OAAA,uBA6DzB87C,EAASxH,gBA7DgB,CAAAkI,EAAA1sD,KAAA,gBAAA0sD,EAAA1sD,KAAA,GA8DEpR,EAAK+9D,mBAAmBn5D,EAAG0C,aA9D7B,QA8DtBsuD,EA9DsBkI,EAAA3qD,KA+D5BiqD,EAASxH,gBAAkBA,EAC3BwH,EAASt3D,YAAc9F,EAAKqR,MAAM+rD,EAASzH,aAAalnD,MAAM2uD,EAASxH,iBAhE3C,eAmE9BwH,EAASzrD,WAAa3R,EAAKqR,MAAM,GAnEHysD,EAAAx8C,OAAA,uBAuEzB87C,EAASxH,gBAvEgB,CAAAkI,EAAA1sD,KAAA,gBAAA0sD,EAAA1sD,KAAA,GAwEEpR,EAAK+9D,mBAAmBn5D,EAAG0C,aAxE7B,QAwEtBsuD,EAxEsBkI,EAAA3qD,KAyE5BiqD,EAASxH,gBAAkBA,EAzEC,WA4EzBwH,EAASt3D,YA5EgB,CAAAg4D,EAAA1sD,KAAA,YA8E5BgsD,EAASt3D,YAAc9F,EAAKqR,MAAM,GAClC+rD,EAASzrD,WAAa3R,EAAKqR,MAAM,IAEVkrD,EAAW33D,EAAGuC,SAjFT,CAAA22D,EAAA1sD,KAAA,SAAA0sD,EAAAE,GAiFoBzB,EAAW33D,EAAGuC,SAjFlC22D,EAAA1sD,KAAA,wBAAA0sD,EAAA1sD,KAAA,GAiFoD,IAAIqP,QAAJ,eAAAw9C,EAAAjlE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAAqtD,EAAOr9C,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAAktD,GAAA,cAAAA,EAAAhtD,KAAAgtD,EAAA/sD,MAAA,OAC3FpR,EAAK1G,MAAM2nB,KAAKC,IAAIk9C,sBAAsBx5D,EAAG9I,KAAK,SAACqlB,EAAIvc,GACjDuc,GACFL,EAAOK,GAETN,EAAQjc,KALiF,wBAAAu5D,EAAAvsD,SAAAssD,EAAA7kE,SAAb,gBAAAglE,EAAAC,GAAA,OAAAL,EAAAnsD,MAAAzY,KAAAiH,YAAA,IAjFpD,QAAAw9D,EAAAE,GAAAF,EAAA3qD,KAAA,SAiFtBqqD,EAjFsBM,EAAAE,MA6FrBzB,EAAW33D,EAAGuC,WACjBo1D,EAAW33D,EAAGuC,SAAWq2D,GAGrBC,EAAeD,EAAe5rC,KAAK7xB,OAAQ,SAAA0tB,GAAG,OAAKgvC,EAAoB13D,SAAS0oB,EAAIlf,QAAQ7J,gBAAkB+oB,EAAIoE,OAAOpE,EAAIoE,OAAO11B,OAAO,GAAGuI,gBAAhC,4BAAAnD,OAA8Eo4D,EAAiBprD,QAAQwjB,QAAQ,IAAI,IAAIrtB,iBAE3O1E,EAAKghB,UAAU,eAAey8C,GAE1BA,GAAgBA,EAAathE,QAC/BshE,EAAar/D,QAAS,SAAAqvB,GACpB,IAAI3nB,EAAcyB,SAASkmB,EAAI9iB,KAAK,IAC9B4zD,EAAmB/B,EAAkB/uC,EAAIlf,QAAQ7J,eACjDkP,EAAgB2qD,EAAiBvgE,SACvC8H,EAAc9F,EAAKgU,iBAAiBlO,EAAY8N,GAChDwpD,EAASt3D,YAAcs3D,EAASt3D,YAAYwL,KAAKxL,GACjD9F,EAAKghB,UAAU,oBAAoBpc,EAAG9I,KAAK,IAAIyiE,EAAiBz5D,MAAMgB,EAAYE,QAAQ,GAAGo3D,EAASt3D,YAAYE,QAAQ,OA5GpG,eAAA83D,EAAAx8C,OAAA,uBAoHzB87C,EAASxH,gBApHgB,CAAAkI,EAAA1sD,KAAA,gBAAA0sD,EAAA1sD,KAAA,GAqHEpR,EAAK+9D,mBAAmBn5D,EAAG0C,aArH7B,QAqHtBsuD,EArHsBkI,EAAA3qD,KAsH5BiqD,EAASxH,gBAAkBA,EAtHC,WAyH9BwH,EAASt3D,YAAc9F,EAAKqR,MAAM+rD,EAAShiE,OAEtCgiE,EAASzrD,WA3HgB,CAAAmsD,EAAA1sD,KAAA,aA6HLmrD,EAAW33D,EAAGuC,SA7HT,CAAA22D,EAAA1sD,KAAA,SAAA0sD,EAAAU,GA6HoBjC,EAAW33D,EAAGuC,SA7HlC22D,EAAA1sD,KAAA,wBAAA0sD,EAAA1sD,KAAA,GA6HoD,IAAIqP,QAAJ,eAAAg+C,EAAAzlE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAA6tD,EAAO79C,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAA0tD,GAAA,cAAAA,EAAAxtD,KAAAwtD,EAAAvtD,MAAA,OAC3FpR,EAAK1G,MAAM2nB,KAAKC,IAAIk9C,sBAAsBx5D,EAAG9I,KAAK,SAACqlB,EAAIvc,GACjDuc,GACFL,EAAOK,GAETN,EAAQjc,KALiF,wBAAA+5D,EAAA/sD,SAAA8sD,EAAArlE,SAAb,gBAAAulE,EAAAC,GAAA,OAAAJ,EAAA3sD,MAAAzY,KAAAiH,YAAA,IA7HpD,QAAAw9D,EAAAU,GAAAV,EAAA3qD,KAAA,SA6HtBqqD,EA7HsBM,EAAAU,MAuIpBtE,EAAmBl6D,EAAK+G,gBAAgB,CAAC,QAAQ,kBAAkBozD,IACnEyD,EAAoB1D,GAAoBA,EAAiBl8D,SAAWk8D,EAAiBl8D,SAAW,GAChGmxD,EAAmB+K,GAAoBA,EAAiB3rD,QAAU2rD,EAAiB3rD,QAAUhJ,EAAY81B,KAAK9sB,QAG/GguD,EAAW33D,EAAGuC,WACjBo1D,EAAW33D,EAAGuC,SAAWq2D,IAGrBC,EAAeD,EAAe5rC,KAAK7xB,OAAQ,SAAA0tB,GAAG,OAAKA,EAAIlf,QAAQ7J,gBAAgByqD,MACjEsO,EAAathE,SAC/BwV,EAAapK,SAASk2D,EAAa,GAAG9yD,KAAK,IAC3CgH,EAAa3R,EAAKgU,iBAAiBrC,EAAWisD,GAC9CR,EAASzrD,WAAaA,IApJE,uBAAAmsD,EAAAx8C,OAAA,oBA8JlC87C,EAASt4D,MAAQQ,EAGjB4B,EAAatC,EAAGuC,SAAWi2D,EAG3BnB,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAASqB,SAG1CJ,EAASjB,GAvKkB,yBAAA+B,EAAAlsD,SAAAurD,EAAA9jE,SAA9B,gBAAAylE,EAAAC,GAAA,OAAA7B,EAAAprD,MAAAzY,KAAAiH,YAAA,IAhB4B,WA4LhC44D,EA5LgC,CAAA+D,EAAA7rD,KAAA,gBAAA6rD,EAAA7rD,KAAA,GA6LbpR,EAAKk5D,iBAAiBhyD,EAAa,CAAC5B,GAAetF,EAAK1G,MAAMoN,cA7LjD,QA6LlCQ,EA7LkC+1D,EAAA9pD,KAAA,yBAAA8pD,EAAArrD,SAAAmrD,EAAA1jE,SAAhC,gBAAAi4D,GAAA,OAAAwL,EAAAhrD,MAAAzY,KAAAiH,YAAA,IAhCuB,eAkOzB27D,GACFj8D,EAAKm8D,yBAAyBF,GAnOHW,EAAAt7C,OAAA,SAsOtBpa,GAtOsB,yBAAA01D,EAAAhrD,SAAA0qD,EAAAjjE,SAnlCb,gBAAAq3D,GAAA,OAAA2L,EAAAvqD,MAAAzY,KAAAiH,YAAA,GAAAjH,KA2zClB6/D,iBA3zCkB,eAAA8F,EAAAhmE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA2zCC,SAAAouD,EAAO/3D,GAAP,IAAAP,EAAAu4D,EAAAjD,EAAAze,EAAA2hB,EAAA7+D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAmuD,GAAA,cAAAA,EAAAjuD,KAAAiuD,EAAAhuD,MAAA,cAAoBzK,EAApBw4D,EAAAhjE,OAAA,QAAAoE,IAAA4+D,EAAA,GAAAA,EAAA,GAAkC,GAAGD,EAArCC,EAAAhjE,OAAA,QAAAoE,IAAA4+D,EAAA,GAAAA,EAAA,GAAkD,KAE9Dx4D,GAAkBA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAK6B,EAAK1G,MAAMkM,mBAGrCy2D,EAAYj8D,EAAKo8D,cAAc,gBAAe,EAAK,KAGxCp8D,EAAK1G,MAAMuN,WACxBo1D,EAAUj8D,EAAK1G,MAAMuN,SAAW,IAGlCK,EAAelO,OAAOC,OAAO,GAAGiO,GAE1Bs2C,EAAYx9C,EAAK+G,gBAAgB,CAAC,UAAU,oBAfjCq4D,EAAAhuD,KAAA,EAmBXpR,EAAKyQ,aAAa9J,EAAlB,eAAA04D,EAAArmE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAgC,SAAAyuD,EAAOh6D,GAAP,IAAAC,EAAAy2D,EAAA,OAAA/vC,EAAApzB,EAAAoY,KAAA,SAAAsuD,GAAA,cAAAA,EAAApuD,KAAAouD,EAAAnuD,MAAA,cAE9B7L,EAAcvF,EAAK1G,MAAMkM,gBAAgBF,GACzC02D,EAAWz2D,EAAY81B,KAAKv2B,MAG7Bm3D,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,KACjCC,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAY,IAG5CkD,EAAeA,GAAgBlmE,OAAO8J,OAAOo8D,GAAc/iE,OAAS+iE,EAAel/D,EAAKk8D,sBAAsBl8D,EAAK1G,MAAMuN,QAAQm1D,EAAS12D,GAVtGi6D,EAAAnuD,KAAA,EA6B9BpR,EAAKyQ,aAAazX,OAAOmF,KAAK+gE,GAA9B,eAAAM,EAAAxmE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA4C,SAAA4uD,EAAO1D,EAAM12D,GAAb,IAAAT,EAAA86D,EAAAC,EAAAC,EAAA90C,EAAA+0C,EAAAC,EAAA13D,EAAA23D,EAAAtL,EAAAz2D,EAAAgiE,EAAAtuD,EAAAuuD,EAAAC,EAAAC,EAAA17D,EAAA27D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApM,EAAAtI,EAAA2U,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA90C,EAAApzB,EAAAoY,KAAA,SAAA+vD,GAAA,cAAAA,EAAA7vD,KAAA6vD,EAAA5vD,MAAA,WAC1CxM,EAAKs6D,EAAanD,KAGZn3D,EAAGE,OAASF,EAAGE,MAAM5C,gBAAkBoD,EAAcpD,iBAAkB0C,EAAG44C,WAAaj2C,SAAS3C,EAAG44C,aAAej2C,SAASi2C,IAJvF,CAAAwjB,EAAA5vD,KAAA,eAAA4vD,EAAA1/C,OAAA,UAKvC,GALuC,UAQ1Co+C,EAAazD,GAAaA,EAAUj8D,EAAK1G,MAAMuN,UAAYo1D,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,IAAaC,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAE9I4D,EAAiB,CACrBsB,cAAc,UACdC,gBAAgB,SAChBC,kBAAkB,UAClBC,oBAAoB,UACpBC,sBAAsB,UACtBC,uBAAuB,UACvBC,uBAAuB,UACvBC,yBAAyB,UACzBC,0BAA0B,WAEtB7B,EAAgB,CAAC,UAAU,WAC3B90C,EAA4B,YAAdlmB,EAAGjF,OACjBkgE,EAAYD,EAAc76D,SAASH,EAAGjF,QACtCmgE,EAAyB,2BAAdl7D,EAAG88D,OACdt5D,EAASxD,EAAG6nB,gBAAkB7nB,EAAG6nB,gBAAkB,KACnDszC,EAAkB/mE,OAAOmF,KAAKwhE,GAAgB56D,SAASH,EAAG88D,UAG5Dt5D,GAAUlB,EAAakB,IAAWlB,EAAakB,GAAQsJ,YA7BX,CAAAsvD,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UA8BvC,GA9BuC,aAiC5Cu+C,GAAaz3D,IAAWlB,EAAakB,IAAW23D,GAAmBn7D,EAAGooB,OAAO7wB,QAjCjC,CAAA6kE,EAAA5vD,KAAA,gBAmCxCqjD,EAA8C,YAA9BkL,EAAe/6D,EAAG88D,QAClC1jE,EAAWy2D,EAAgB,GAAKlvD,EAAYvH,SAClDkJ,EAAY,IAAA3F,OAAKqD,EAAG+8D,UAAa,CAC/BhiE,OAAO,UACPmF,MAAMQ,EACNb,OAAOk7D,EAAe/6D,EAAG88D,QACzBx8D,UAAUqC,SAAS3C,EAAG+8D,QAAQ,KAC9B7lE,KAAKsM,EAASxD,EAAG6nB,gBAAkB,KACnCxD,YAAYwrC,EAAgBlvD,EAAY81B,KAAKv2B,MAAQQ,EACrDlK,MAAOwJ,EAAGxJ,MAAQwJ,EAAGxJ,MAAQ4E,EAAKgU,iBAAiBpP,EAAGooB,OAAO,GAAGhvB,GAAU8kB,YA5C9Bk+C,EAAA1/C,OAAA,UA+CvC,GA/CuC,WAmD3CwJ,GAAgB1iB,GAAW23D,EAnDgB,CAAAiB,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UAoDvC,GApDuC,WAuD5C0+C,EAASp7D,EAAGo7D,OAASp7D,EAAGo7D,OAAS,KAvDW,CAAAgB,EAAA5vD,KAAA,gBAAA4vD,EAAA5vD,KAAA,GA2D9B,IAAIqP,QAAJ,eAAAmhD,EAAA5oE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAAgxD,EAAOhhD,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAA6wD,GAAA,cAAAA,EAAA3wD,KAAA2wD,EAAA1wD,MAAA,OAC3BpR,EAAK1G,MAAM2nB,KAAKC,IAAIV,eAAe5b,EAAG6nB,gBAAgB,SAACtL,EAAIwQ,GACrDxQ,GACFL,EAAOK,GAETN,EAAQ8Q,KALiB,wBAAAmwC,EAAAlwD,SAAAiwD,EAAAxoE,SAAb,gBAAA0oE,EAAAC,GAAA,OAAAJ,EAAA9vD,MAAAzY,KAAAiH,YAAA,IA3D8B,QA2D9C0/D,EA3D8CgB,EAAA7tD,KAAA,WAwE3C6sD,IAAYF,GAAYE,EAAOlyD,KAAKpJ,gBAAkB1E,EAAK1G,MAAMuN,QAAQnC,eAxE9B,CAAAs8D,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UAyEvC,GAzEuC,eAAA0/C,EAAA5vD,KAAA,GA4EvBpR,EAAKs7B,kBAAkB/1B,EAAYy6D,EAAO14D,YAAY04D,EAAO96D,WA5EtC,QA4E1CwM,EA5E0CsvD,EAAA7tD,KA8EhD6sD,EAAOrgE,OAAS,YAChBqgE,EAAOv7D,OAASk7D,EAAe/6D,EAAG88D,QAClC1B,EAAOhU,gBAAkBzmD,EAAYgJ,QACrCyxD,EAAO96D,UAAYqC,SAAS3C,EAAG+8D,QAAQ,KAEnC1B,EAAU,KAnFkCe,EAAApY,GAoFxChkD,EAAG88D,OApFqCV,EAAA5vD,KAqFzC,kBArFyC4vD,EAAApY,GAAA,GAsFzC,wBAtFyCoY,EAAApY,GAAA,GAgHzC,oBAhHyCoY,EAAApY,GAAA,GA+HzC,2BA/HyCoY,EAAApY,GAAA,GAkNzC,8BAlNyCoY,EAAApY,GAAA,GAmNzC,6BAnNyCoY,EAAApY,GAAA,GAoNzC,0BApNyCoY,EAAApY,GAAA,GAqNzC,2BArNyCoY,EAAApY,GAAA,GAsNzC,sBAtNyCoY,EAAApY,GAAA,wBAuFvChkD,EAAGooB,OAvFoC,CAAAg0C,EAAA5vD,KAAA,gBAwFtCsuD,IACFzD,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAASn3D,GAzFTo8D,EAAA1/C,OAAA,UA2FnC,GA3FmC,WA8FxC0+C,EAAOvM,GAAG/uD,gBAAkBa,EAAY81B,KAAK9sB,QAAQ7J,cA9Fb,CAAAs8D,EAAA5vD,KAAA,gBAgGtCsuD,UACKzD,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAjGPiF,EAAA1/C,OAAA,UAoGnC,GApGmC,WAuG5C2+C,EAAUr7D,EAAGooB,OAAShtB,EAAKgU,iBAAiBpP,EAAGooB,OAAO,GAAGznB,EAAYvH,UAAU8kB,WAAa,EAvGhD,CAAAk+C,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UA0GnC,GA1GmC,eA6G5C0+C,EAAO5kE,MAAQ6kE,EACfD,EAAOl6D,YAAcm6D,EA9GuBe,EAAA1/C,OAAA,wBAiHvC1c,EAAGooB,OAjHoC,CAAAg0C,EAAA5vD,KAAA,gBAkHtCsuD,IACFzD,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAASn3D,GAnHTo8D,EAAA1/C,OAAA,UAqHnC,GArHmC,eAwHvC0+C,EAAOtuD,aACJwuD,EAAqBlgE,EAAKgU,iBAAiBpP,EAAGooB,OAAO,GAAG,IAAIve,MAAMiD,GACxEsuD,EAAOtuD,WAAaA,EACpBsuD,EAAO5kE,MAAQ8kE,EACfF,EAAOl6D,YAAco6D,GA5HqBc,EAAA1/C,OAAA,wBAgIxC6+C,EAAgCv7D,EAAG+sB,UAAY/sB,EAAG+sB,UAAY,KAhItB,CAAAqvC,EAAA5vD,KAAA,gBAAA4vD,EAAA5vD,KAAA,GAmIH,IAAIqP,QAAJ,eAAAwhD,EAAAjpE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAAqxD,EAAOrhD,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAAkxD,GAAA,cAAAA,EAAAhxD,KAAAgxD,EAAA/wD,MAAA,OAClDpR,EAAK1G,MAAM2nB,KAAKC,IAAIk9C,sBAAsBx5D,EAAG6nB,gBAAgB,SAACtL,EAAIvc,GAC5Duc,GACFL,EAAOK,GAETN,EAAQjc,KALwC,wBAAAu9D,EAAAvwD,SAAAswD,EAAA7oE,SAAb,gBAAA+oE,EAAAC,GAAA,OAAAJ,EAAAnwD,MAAAzY,KAAAiH,YAAA,IAnIG,QAmI1C6/D,EAnI0Ca,EAAA7tD,KAAA,WA6IvCgtD,EA7IuC,CAAAa,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UA8InC,GA9ImC,WAkJvC1c,EAAG+sB,YACN/sB,EAAG+sB,UAAYwuC,EACXT,IACFzD,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAASn3D,IAIjDH,EAAS,KACT27D,EAAqC,KACrCC,EAA0C,GACxCC,EAAsBtgE,EAAK+G,gBAAgB,CAAC,WAAW,UAAU,kBAGnExB,EAAYskC,WAAatkC,EAAYskC,UAAUF,cAC7Cw2B,EAA8BvuC,MAChCwuC,EAAqC76D,EAAYskC,UAAUF,YAAYp7B,QAAQwjB,QAAQ,IAAI,IAAIrtB,cAC/F27D,EAA0CF,EAA8BvuC,KAAK7xB,OAAO,SAAC6E,GAAS,OAAOA,EAAG2J,QAAQ7J,gBAAgBa,EAAYgJ,QAAQ7J,eAAiBE,EAAGitB,OAAOjtB,EAAGitB,OAAO11B,OAAO,GAAGuI,gBAA9B,4BAAAnD,OAA4E6+D,MACxOD,EAA8B5tB,SACvC8tB,EAA0CrnE,OAAO8J,OAAOq9D,EAA8B5tB,QAAQxyC,OAAO,SAAC6E,GAAS,OAAOA,EAAG2J,QAAQ7J,gBAAgBa,EAAYgJ,QAAQ7J,iBAGnK27D,EAAwClkE,SAC1CsI,EAAS,YAKR47D,EAAwClkE,SACvCgkE,EAA8BvuC,MAChCwuC,EAAqC76D,EAAY81B,KAAK9sB,QAAQwjB,QAAQ,IAAI,IAAIrtB,gBAC9E27D,EAA0CF,EAA8BvuC,KAAK7xB,OAAO,SAAC6E,GAAS,OAAOA,EAAG2J,QAAQ7J,gBAAgBa,EAAYgJ,QAAQ7J,eAAiBE,EAAGitB,OAAOjtB,EAAGitB,OAAO11B,OAAO,GAAGuI,gBAA9B,4BAAAnD,OAA4E6+D,MAGpMjkE,QAAUmkE,IACrDF,EAAqCE,EAAoB/xD,QAAQwjB,QAAQ,IAAI,IAAIrtB,cACjF27D,EAA0CF,EAA8BvuC,KAAK7xB,OAAO,SAAC6E,GAAS,OAAOA,EAAG2J,QAAQ7J,gBAAgBa,EAAYgJ,QAAQ7J,eAAiBE,EAAGitB,OAAOjtB,EAAGitB,OAAO11B,OAAO,GAAGuI,gBAA9B,4BAAAnD,OAA4E6+D,OAE1OD,EAA8B5tB,SACvC8tB,EAA0CrnE,OAAO8J,OAAOq9D,EAA8B5tB,QAAQxyC,OAAO,SAAC6E,GAAS,OAAOA,EAAG2J,QAAQ7J,gBAAgBa,EAAYgJ,QAAQ7J,iBAGnK27D,EAAwClkE,SAC1CsI,EAAS,YAIR47D,EAAwClkE,OAhMD,CAAA6kE,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UAiMnC,GAjMmC,WAoMtCi/C,EAAmBF,EAAwC,GAE3DG,EAAcD,EAAiB51D,KAAOpD,SAASg5D,EAAiB51D,KAAK,IAAO41D,EAAiB+B,KAAO/B,EAAiB+B,IAAI33D,KAAQpD,SAASg5D,EAAiB+B,IAAI33D,KAAK,IAAM,KAtMpI,CAAAq2D,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UAyMnC,GAzMmC,eA4MtCm/C,EAAmBzgE,EAAKgU,iBAAiBwsD,EAAYj7D,EAAYvH,UACvEgiE,EAAOv7D,OAASA,EAChBu7D,EAAO5kE,MAAQqlE,EACfT,EAAOl6D,YAAc26D,EA/MuBO,EAAA1/C,OAAA,wBAuNvC/b,EAAYskC,WAActkC,EAAYskC,UAAUF,YAvNT,CAAAq3B,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UAwNnC,GAxNmC,WA2NxCo/C,EAAqB97D,EAAG+sB,UAAY/sB,EAAG+sB,UAAY,KA3NX,CAAAqvC,EAAA5vD,KAAA,gBAAA4vD,EAAA5vD,KAAA,GA8Nd,IAAIqP,QAAJ,eAAA8hD,EAAAvpE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAA2xD,EAAO3hD,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAAwxD,GAAA,cAAAA,EAAAtxD,KAAAsxD,EAAArxD,MAAA,OACvCpR,EAAK1G,MAAM2nB,KAAKC,IAAIk9C,sBAAsBx5D,EAAG6nB,gBAAgB,SAACtL,EAAIvc,GAC5Duc,GACFL,EAAOK,GAETN,EAAQjc,KAL6B,wBAAA69D,EAAA7wD,SAAA4wD,EAAAnpE,SAAb,gBAAAqpE,EAAAC,GAAA,OAAAJ,EAAAzwD,MAAAzY,KAAAiH,YAAA,IA9Nc,QA8N1CogE,EA9N0CM,EAAA7tD,KAAA,WAwOvCutD,EAxOuC,CAAAM,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UAyOnC,GAzOmC,WA6OvC1c,EAAG+sB,YACN/sB,EAAG+sB,UAAY+uC,EACXhB,IACFzD,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAASn3D,IAI/C0vD,EAAwB/uD,EAAYskC,UAAUxB,kBAAkB95B,QAAQ7J,cAAcqtB,QAAQ,IAAI,IAClGi6B,EAAkBzmD,EAAY81B,KAAK9sB,QAAQ7J,cAAcqtB,QAAQ,IAAI,KACrE4uC,EAA+BD,EAAmB9uC,KAAK7xB,OAAO,SAAC6E,GAAS,OAAOA,EAAGitB,OAAO11B,QAAQ,GAAKyI,EAAGitB,OAAOjtB,EAAGitB,OAAO11B,OAAO,GAAGuI,gBAA9B,4BAAAnD,OAA4E+yD,IAA2B1vD,EAAGitB,OAAOjtB,EAAGitB,OAAO11B,OAAO,GAAGuI,gBAA9B,4BAAAnD,OAA4EyqD,MAE7P7vD,OAxPU,CAAA6kE,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UAyPnC,GAzPmC,WA4PtCs/C,EAA4BD,EAA6Bt5D,OAEzDw5D,EAAc7gE,EAAK1G,MAAM2nB,KAAKC,IAAIoN,IAAIs0C,UAAU,CACpD,CACE1W,aAAc,UACdjtD,KAAM,SACNrB,KAAM,YAERgjE,EAA0Bj2D,KAAKi2D,EAA0B/uC,UAEtCgvC,EAAYgC,OAtQW,CAAA7B,EAAA5vD,KAAA,gBAAA4vD,EAAA1/C,OAAA,UAuQnC,GAvQmC,eA0QtCw/C,EAAiBD,EAAYgC,OAC7B9B,EAAsB/gE,EAAKgU,iBAAiB8sD,EAAev7D,EAAYvH,UAC7EgiE,EAAO5kE,MAAQ2lE,EAAoBj+C,WA5QSk+C,EAAA1/C,OAAA,6BAAA0/C,EAAA1/C,OAAA,sBAkRhD0+C,EAAOtuD,WAAaA,EACpBsuD,EAAOl7D,MAAQQ,EACf06D,EAAO/2C,YAAc3jB,EACrB06D,EAAOruD,WAAaD,EAAWjD,MAAMzO,EAAKqR,MAAM2uD,EAAO5kE,QAGvD8L,EAAakB,GAAU43D,EAIlBp7D,EAAGo7D,SACNp7D,EAAGo7D,OAASA,EACZ/D,EAAUj8D,EAAK1G,MAAMuN,SAASm1D,GAAUD,GAASn3D,GA9RH,0BAAAo8D,EAAApvD,SAAA6tD,EAAApmE,SAA5C,gBAAAypE,EAAAC,GAAA,OAAAvD,EAAA1tD,MAAAzY,KAAAiH,YAAA,IA7B8B,wBAAAi/D,EAAA3tD,SAAA0tD,EAAAjmE,SAAhC,gBAAA2pE,GAAA,OAAA3D,EAAAvtD,MAAAzY,KAAAiH,YAAA,IAnBW,cAoVb27D,GACFj8D,EAAKm8D,yBAAyBF,GArVfmD,EAAA99C,OAAA,SAwVVpa,GAxVU,yBAAAk4D,EAAAxtD,SAAAqtD,EAAA5lE,SA3zCD,gBAAA4pE,GAAA,OAAAjE,EAAAltD,MAAAzY,KAAAiH,YAAA,GAAAjH,KAqpDlBw/D,kBAAoB,SAACrnB,GAA8B,IAArB0xB,EAAqB5iE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,IAAAA,UAAA,GAATqK,EAASrK,UAAAnE,OAAA,EAAAmE,UAAA,QAAAC,EAC3CwB,EAAMmhE,GAAgB1xB,EACxBymB,EAAiBj4D,EAAKqvD,8BAA8B,iBAAiB,IACnE17C,EAAYpM,SAAS5B,KAAKouB,MAAM,KAKtC,OAJAkkC,EAAel2D,GAAO,CACpB4I,OACAgJ,aAEK3T,EAAKsvD,8BAA8B,iBAAiB2I,IA7pD3C5+D,KA+pDlB8pE,iBAAmB,WACjB,OAAOnjE,EAAKo8D,cAAc,iBAAgB,IAhqD1B/iE,KAkqDlB+pE,iBAAmB,SAACC,GAClB,OAAOrjE,EAAK6jB,gBAAgB,gBAAgBw/C,IAnqD5BhqE,KAqqDlB++D,iBAAmB,SAAC5mB,GAAyB,IAAhB0xB,EAAgB5iE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,IAAAA,UAAA,GACrCyB,EAAMmhE,GAAgB1xB,EACxBymB,EAAiBj4D,EAAKqvD,8BAA8B,iBAAiB,IAEzE,OAAI4I,GAAkBA,EAAel2D,GAC5Bk2D,EAAel2D,GAAK4I,KAEtB,MA5qDStR,KA8qDlBm/B,YA9qDkB,eAAA8qC,EAAAtqE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA8qDJ,SAAA0yD,EAAM/xB,GAAN,IAAAgyB,EAAA5rB,EAAAjtC,EAAA84D,EAAAnjE,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAyyD,GAAA,cAAAA,EAAAvyD,KAAAuyD,EAAAtyD,MAAA,cAAeoyD,EAAfC,EAAAtnE,OAAA,QAAAoE,IAAAkjE,EAAA,IAAAA,EAAA,GAAoC7rB,EAApC6rB,EAAAtnE,OAAA,QAAAoE,IAAAkjE,EAAA,GAAAA,EAAA,GAA2C,KAA3CC,EAAAtyD,KAAA,EACOqQ,IACJC,IAAI8vB,EAASoG,GACb+rB,MAAM,SAAAxiD,GACyB,oBAAnBqiD,GACTA,EAAeriD,KALrB,cACNxW,EADM+4D,EAAAvwD,KAAAuwD,EAAApiD,OAAA,SAQL3W,GARK,wBAAA+4D,EAAA9xD,SAAA2xD,EAAAlqE,SA9qDI,gBAAAuqE,GAAA,OAAAN,EAAAxxD,MAAAzY,KAAAiH,YAAA,GAAAjH,KAwrDlBi/D,kBAxrDkB,eAAAuL,EAAA7qE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAwrDE,SAAAizD,EAAOtyB,GAAP,IAAAgG,EAAAusB,EAAAb,EAAAtrB,EAAA71C,EAAA4R,EAAAskD,EAAAttD,EAAAq5D,EAAA1jE,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAgzD,GAAA,cAAAA,EAAA9yD,KAAA8yD,EAAA7yD,MAAA,UAAgBomC,EAAhBwsB,EAAA7nE,OAAA,QAAAoE,IAAAyjE,EAAA,GAAAA,EAAA,GAAoB,GAAGD,EAAvBC,EAAA7nE,OAAA,QAAAoE,IAAAyjE,EAAA,IAAAA,EAAA,GAAyCd,EAAzCc,EAAA7nE,OAAA,QAAAoE,IAAAyjE,EAAA,IAAAA,EAAA,GAAqDpsB,EAArDosB,EAAA7nE,OAAA,QAAAoE,IAAAyjE,EAAA,GAAAA,EAAA,GAA4D,KACxEjiE,EAAMmhE,GAAgB1xB,EACtB79B,EAAYpM,SAAS5B,KAAKouB,MAAM,QAGhCkkC,EAAiBj4D,EAAKqvD,8BAA8B,iBAAiB,MAErD4I,EAAel2D,IAAQk2D,EAAel2D,GAAK4R,WAAaA,EAAUskD,EAAel2D,GAAK4R,UAAU6jC,GAPpG,CAAAysB,EAAA7yD,KAAA,eAAA6yD,EAAA3iD,OAAA,SAQR22C,EAAel2D,GAAK4I,MAAQo5D,EAAc9L,EAAel2D,GAAK4I,KAAKA,KAAOstD,EAAel2D,GAAK4I,MARtF,cAAAs5D,EAAA7yD,KAAA,GAWCpR,EAAKw4B,YAAYgZ,GAAS,EAAMoG,GAXjC,eAWZjtC,EAXYs5D,EAAA9wD,KAalB8kD,EAAel2D,GAAO,CACpB4I,OACAgJ,aAEF3T,EAAKsvD,8BAA8B,iBAAiB2I,GAjBlCgM,EAAA3iD,OAAA,SAkBV3W,GAAQo5D,EAAcp5D,EAAKA,KAAOA,GAlBxB,yBAAAs5D,EAAAryD,SAAAkyD,EAAAzqE,SAxrDF,gBAAA6qE,GAAA,OAAAL,EAAA/xD,MAAAzY,KAAAiH,YAAA,GAAAjH,KA4sDlBkzB,oBAAsB,SAAA3M,GACpB,IAAI6I,EAAS,QACb,GAAIlhB,SAASqY,EAAMukD,MAAM,CACvB,IAAMC,EAAY78D,SAASqY,EAAMukD,MACjC,OAAQC,GACN,KAAK,KACH37C,EAAS,SACX,MACA,QACEA,EAAM,SAAAlnB,OAAY6iE,SAGbxkD,EAAMklB,UACfrc,EAAS7I,EAAMklB,QAAQ16B,MAAM,MAAM,IAGrC,OAAOqe,GA5tDSpvB,KA8tDlB68B,iBAAmB,WACjB,OAAOxnB,KA/tDSrV,KAiuDlBghC,aAAe,SAACF,EAAKkqC,GAEnB,IADAlqC,EAAOnhC,OAAOC,OAAO,GAAGkhC,IACfh+B,OAAO,EAAE,CAChB,IAAMmoE,EAAOnqC,EAAKoqC,QAClB,IAAKpqC,EAAKh+B,OACR,OAAOkoE,EAAMC,GAAQD,EAAMC,GAAQ,KAC9B,GAAID,EAAMC,GACf,OAAOtkE,EAAKq6B,aAAaF,EAAKkqC,EAAMC,IAGxC,OAAO,MA3uDSjrE,KA6uDlB0N,gBAAkB,SAACozB,GAAuB,IAAlBqqC,EAAkBlkE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,IAAAA,UAAA,GAExC,GADAkkE,EAAUA,GAAoB91D,IAC1ByrB,EAAKh+B,OAAO,EAAE,CAChB,IAAMmoE,EAAOnqC,EAAKoqC,QAClB,IAAKpqC,EAAKh+B,OACR,OAAOqoE,EAAQF,GAAQE,EAAQF,GAAQ,KAClC,GAAIE,EAAQF,GACjB,OAAOtkE,EAAK+G,gBAAgBozB,EAAKqqC,EAAQF,IAG7C,OAAO,MAvvDSjrE,KAyvDlBorE,eAAiB,WACf,OAAOh8D,OAAOk1C,SAASC,OAAOl5C,cAAcK,SAAS2J,IAAcygC,QAAQzqC,gBA1vD3DrL,KA4vDlBqrE,aAAe,WACb,OAAOj8D,OAAOk1C,SAASC,OAAOl5C,cAAcK,SAAS2J,IAAc4gC,QAAQ5qC,gBA7vD3DrL,KA+vDlBmzB,yBA/vDkB,eAAAm4C,EAAA3rE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+vDS,SAAA+zD,EAAOz4C,GAAP,IAAAxgB,EAAAk5D,EAAAryB,EAAAsyB,EAAAC,EAAAC,EAAA1kE,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAg0D,GAAA,cAAAA,EAAA9zD,KAAA8zD,EAAA7zD,MAAA,UAAiBzF,EAAjBq5D,EAAA7oE,OAAA,QAAAoE,IAAAykE,EAAA,GAAAA,EAAA,GAA0B,KAE7CH,EAAmBn2D,IAAc2jC,UAAUC,OAAOC,OAClDC,EAAeqyB,EAAiBryB,aAChCsyB,EAAWr8D,OAAOk1C,SAASC,OAAOl5C,cAAcK,SAAS2J,IAAcygC,QAAQzqC,gBAEjFmgE,EAAiB5xC,UAAWxqB,OAAOy8D,KAAQ1yB,IAAgBsyB,EANtC,CAAAG,EAAA7zD,KAAA,eASnByzD,EAAiBpyB,uBAE2B,IAA1C/jC,IAAcusC,QAAQM,iBAClBwpB,EAAiBr2D,IAAcusC,QAAQC,kBAAkBxsC,IAAcusC,QAAQM,iBACrFpvB,EAAUE,eAAV,IAAA9qB,OAA+BwjE,IAEtBvyB,IAAiBsyB,IAC1B34C,EAAUE,eAAiB,UAhBR44C,EAAA7zD,KAAA,EAoBhB,IAAIqP,QAAJ,eAAA0kD,EAAAnsE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAAu0D,EAAOvkD,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAAo0D,GAAA,cAAAA,EAAAl0D,KAAAk0D,EAAAj0D,MAAA,OAClB+a,EAAUm5C,YAAc,WACtBzkD,GAAQ,IAEVsL,EAAUo5C,gBAAkB,WAC1BzkD,KAGFrY,OAAOy8D,GAAG,OAAQ,QAAS/4C,GART,wBAAAk5C,EAAAzzD,SAAAwzD,EAAA/rE,SAAb,gBAAAmsE,EAAAC,GAAA,OAAAN,EAAArzD,MAAAzY,KAAAiH,YAAA,IApBgB,OA+BC,oBAAbqL,GACTA,IAhCqB,aAoCD,oBAAbA,GACTA,IArCuBs5D,EAAA3jD,OAAA,UAwClB,GAxCkB,yBAAA2jD,EAAArzD,SAAAgzD,EAAAvrE,SA/vDT,gBAAAqsE,GAAA,OAAAf,EAAA7yD,MAAAzY,KAAAiH,YAAA,GAAAjH,KAyyDlBssE,eAzyDkB,eAAAC,EAAA5sE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAyyDD,SAAAg1D,EAAO5mE,EAAMsP,EAAS+f,GAAtB,IAAAgC,EAAA,OAAArE,EAAApzB,EAAAoY,KAAA,SAAA60D,GAAA,cAAAA,EAAA30D,KAAA20D,EAAA10D,MAAA,cAAA00D,EAAA30D,KAAA,EAEPmf,EAAW,IAAItwB,EAAK1G,MAAM2nB,KAAKC,IAAI6kD,SAASz3C,EAAK/f,GAF1Cu3D,EAAAxkD,OAAA,SAGN,CAACriB,OAAMqxB,aAHD,OAAAw1C,EAAA30D,KAAA,EAAA20D,EAAAld,GAAAkd,EAAA,SAKb9lE,EAAK2yD,eAAe,6BAA6B1zD,EAAKsP,EAAtDu3D,EAAAld,IALa,cAAAkd,EAAAxkD,OAAA,SAOR,MAPQ,wBAAAwkD,EAAAl0D,SAAAi0D,EAAAxsE,KAAA,YAzyDC,gBAAA2sE,EAAAC,EAAAC,GAAA,OAAAN,EAAA9zD,MAAAzY,KAAAiH,YAAA,GAAAjH,KAkzDlB8sE,kBAAoB,WAA0B,IAAzBzf,EAAyBpmD,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KACnC,OAAON,EAAKo8D,cAAc,kBAAiB,EAAM1V,IAnzDjCrtD,KAqzDlB+sE,qBAAuB,SAACC,EAAS/oB,GAU/B,OATK+oB,EAAS93D,SAAWvO,EAAK1G,MAAMuN,UAClCw/D,EAAS93D,QAAUvO,EAAK1G,MAAMuN,SAE3Bw/D,EAAS9a,WACZ8a,EAAS9a,SAAWvrD,EAAKmmE,qBAEG,qBAAnBE,EAASC,OAA0BD,EAASC,cAC9CD,EAASC,QAEbD,EAAS93D,aAGd+uC,EAAWA,IAAuBt9C,EAAK1G,MAAMgkD,SAAWt9C,EAAK1G,MAAMgkD,SAA+C,oBAA5Bt9C,EAAK1G,MAAMitE,aAA8BvmE,EAAK1G,MAAMitE,eAAiB,QAElJjpB,EAASkpB,aAAaH,KAp0DfhtE,KAw0DlBotE,2BAA6B,SAACC,GAC5B,OAAOA,EAAa,2BAA2BA,EAAa,MAz0D5CrtE,KA20DlBstE,uBAAyB,SAACp4D,GACxB,OAAOA,EAAU,gCAAgCA,EAAU,MA50D3ClV,KA80DlBwE,YAAc,SAACkI,GAA6D,IAArD6gE,EAAqDtmE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAtC,EAAGo9B,EAAmCp9B,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAzB,IAAKumE,EAAoBvmE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAR,IAClE,IACEsmE,EAAezhE,KAAK2hE,IAAIF,GACxBA,EAAejpE,MAAMipE,GAAgB,EAAIA,EAEzC,IAAMG,EAAehhE,EAAS,EAAI,IAAM,GAEpCV,EAAIkC,SAASxB,EAASZ,KAAK2hE,IAAIE,OAAOjhE,IAAW,GAAGC,QAAQ4gE,IAAe9jD,WAC3E8T,EAAKvxB,EAAElJ,OAAS,EAAKkJ,EAAElJ,OAAS,EAAI,EAExC,OAAO4qE,GAAgBnwC,EAAIvxB,EAAEpJ,OAAO,EAAG26B,GAAKiwC,EAAY,IAAMxhE,EAAEpJ,OAAO26B,GAAG7E,QAAQ,iBAAkB,KAAO80C,IAAcD,EAAelpC,EAAUv4B,KAAK2hE,IAAI/gE,EAASV,GAAGW,QAAQ4gE,GAAc3uD,MAAM,GAAK,IACxM,MAAOvV,GACP,OAAO,OA11DOrJ,KA61DlB4tE,qBA71DkBjuE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA61DK,SAAAq2D,IAAA,IAAAC,EAAA3Y,EAAAtoC,EAAA81B,EAAAxK,EAAAyK,EAAAvO,EAAA05B,EAAAC,EAAA/mE,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAq2D,GAAA,cAAAA,EAAAn2D,KAAAm2D,EAAAl2D,MAAA,UAAO+1D,EAAPE,EAAAlrE,OAAA,QAAAoE,IAAA8mE,EAAA,IAAAA,EAAA,GAEf7Y,EAFe,qBAAAjtD,OAEsB4lE,KACrCjhD,EAAalmB,EAAKunE,cAAc/Y,IAHjB,CAAA8Y,EAAAl2D,KAAA,eAAAk2D,EAAAhmD,OAAA,SAKZ4E,GALY,cAQf81B,EAAYh8C,EAAK+G,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAcnF,IAAK,SAAA4lE,GAAI,OAAIA,EAAK9iE,gBACnG8sC,EAAWxxC,EAAK+G,gBAAgB,CAAC,UAAU,YAAY,WAAW,YAAY,cAT/DugE,EAAAl2D,KAAA,EAUCpR,EAAKs4D,kBAAkB9mB,EAAS,MAAK,GAVtC,YAUjByK,EAViBqrB,EAAAn0D,MAAA,CAAAm0D,EAAAl2D,KAAA,gBAanB6qC,EAAYjjD,OAAO8J,OAAOm5C,GAEpBvO,EAAWnmC,SAAS5B,KAAKouB,MAAM,KACjCozC,IACFlrB,EAAaA,EAAUl8C,OAAQ,SAAA1B,GAAC,OAAKA,EAAEopE,IAAI1e,QAAQhrB,OAAO2P,GAAYrvC,EAAEopE,IAAI1e,QAAQjrB,IAAI4P,KAKpF05B,EAAiB,GAtBJE,EAAAl2D,KAAA,GAuBbpR,EAAKyQ,aAAawrC,EAAlB,eAAAyrB,EAAA1uE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA6B,SAAA82D,EAAOtpE,GAAP,IAAAiJ,EAAAsgE,EAAA,OAAA37C,EAAApzB,EAAAoY,KAAA,SAAA42D,GAAA,cAAAA,EAAA12D,KAAA02D,EAAAz2D,MAAA,YAE7B/S,EAAEopE,IAAI1e,QAAQjrB,KAAK4P,GAAYsO,EAAUj3C,SAAS1G,EAAEkQ,QAAQ7J,gBAF/B,CAAAmjE,EAAAz2D,KAAA,QAG/Bg2D,EAAejhE,KAAK9H,GAHWwpE,EAAAz2D,KAAA,sBAKzB9J,EAAcjJ,EAAEopE,IAAI1e,QAAQhN,SAE9B6rB,GAAoB,EAPOC,EAAAz2D,KAAA,EAQzBpR,EAAKyQ,aAAcpS,EAAEopE,IAAI1e,QAAQ+e,SAASnxB,WAA1C,eAAAoxB,EAAA/uE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAsD,SAAAm3D,EAAOv2C,GAAP,IAAA4hB,EAAA5nB,EAAA,OAAAQ,EAAApzB,EAAAoY,KAAA,SAAAg3D,GAAA,cAAAA,EAAA92D,KAAA82D,EAAA72D,MAAA,WACtDw2D,EADsD,CAAAK,EAAA72D,KAAA,eAAA62D,EAAA3mD,OAAA,oBAI7C,qBAATmQ,EAAExyB,KAJoD,CAAAgpE,EAAA72D,KAAA,YAKlDiiC,EAAY5hB,EAAEzE,OAAOk7C,QACLloE,EAAK23B,kBAAkB0b,GANW,CAAA40B,EAAA72D,KAAA,gBAAA62D,EAAA72D,KAAA,EAQ3BpR,EAAKyyB,gBAAgB4gB,EAAUh1C,EAAEkQ,SAAQ,EAAKjH,GARnB,QAQhDmkB,EARgDw8C,EAAA90D,OAUlCnT,EAAKqR,MAAMoa,GAActX,GAAG,OAC9CyzD,GAAoB,GAXgC,QAAAK,EAAA72D,KAAA,kCAAA62D,EAAAr2D,SAAAo2D,EAAA3uE,SAAtD,gBAAA8uE,GAAA,OAAAJ,EAAAj2D,MAAAzY,KAAAiH,YAAA,IARyB,OA8B3BsnE,GACFR,EAAejhE,KAAK9H,GA/BS,wBAAAwpE,EAAAj2D,SAAA+1D,EAAAtuE,SAA7B,gBAAA+uE,GAAA,OAAAV,EAAA51D,MAAAzY,KAAAiH,YAAA,IAvBa,eAAAgnE,EAAAhmD,OAAA,SA2DZthB,EAAKmmB,cAAcqoC,EAAc4Y,IA3DrB,yBAAAE,EAAA11D,SAAAs1D,EAAA7tE,SA71DLA,KA45DlB6Z,gBA55DkB,eAAAm1D,EAAArvE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA45DA,SAAAy3D,EAAO/5D,GAAP,IAAAsE,EAAAulC,EAAAD,EAAAowB,EAAAz1B,EAAA01B,EAAAC,EAAAja,EAAAtoC,EAAAwiD,EAAAC,EAAAC,EAAAp3B,EAAAxkB,EAAA+Q,EAAA6Z,EAAAnvB,EAAA9d,EAAAk+D,EAAAC,EAAAxoE,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA83D,GAAA,cAAAA,EAAA53D,KAAA43D,EAAA33D,MAAA,UAAeyB,EAAfi2D,EAAA3sE,OAAA,QAAAoE,IAAAuoE,EAAA,GAAAA,EAAA,GAAsB,KAAK1wB,EAA3B0wB,EAAA3sE,OAAA,QAAAoE,IAAAuoE,EAAA,GAAAA,EAAA,GAA0C,KAAK3wB,EAA/C2wB,EAAA3sE,OAAA,QAAAoE,IAAAuoE,EAAA,GAAAA,EAAA,GAA4D,KAAKP,EAAjEO,EAAA3sE,OAAA,QAAAoE,IAAAuoE,EAAA,IAAAA,EAAA,GAA2Fh2B,EAA3Fg2B,EAAA3sE,OAAA,QAAAoE,IAAAuoE,EAAA,GAAAA,EAAA,GAAqG,KAAKN,EAA1GM,EAAA3sE,OAAA,QAAAoE,IAAAuoE,EAAA,GAAAA,EAAA,GAAgH,KAAKL,EAArHK,EAAA3sE,OAAA,QAAAoE,IAAAuoE,EAAA,GAAAA,EAAA,GAA2H,KAC/F,IAAxCp6D,IAAcusC,QAAQM,iBAAwB7sC,IAAcC,MAAMskB,QADtD,CAAA81C,EAAA33D,KAAA,eAAA23D,EAAAznD,OAAA,SAEP,IAFO,UAMVktC,EANU,gBAAAjtD,OAMsBgN,EANtB,KAAAhN,OAMiCsR,EANjC,KAAAtR,OAM2CuxC,EAN3C,KAAAvxC,OAMwDinE,EANxD,KAAAjnE,OAMiEknE,KAC7EviD,EAAalmB,EAAKunE,cAAc/Y,IAPpB,CAAAua,EAAA33D,KAAA,eAWRs3D,EAAqBxiD,EAAWnmB,OAAQ,SAAAgjC,GAAC,OAA0B,OAAnBA,EAAEqV,gBAA0BA,GAAkBrV,EAAEqV,gBAAgBA,KAAsC,OAAjBrV,EAAEoV,cAAwBA,GAAgBpV,EAAEoV,cAAcA,OAE3KuwB,EAAmBvsE,OAAO,GAbtC,CAAA4sE,EAAA33D,KAAA,cAcNy3D,EAAeH,EAAmBrhE,MAAMsD,MAdlC,CAAAo+D,EAAA33D,KAAA,gBAAA23D,EAAAznD,OAAA,SAgBHunD,EAAa9oE,OAAQ,SAAAqM,GAAC,QAAOgsC,GAAkBhsC,EAAEuH,WAAWykC,MAAqBD,GAAgB/rC,EAAEuH,WAAWwkC,MAhB3G,eAAA4wB,EAAAznD,OAAA,SAkBL,MAlBK,QAAAynD,EAAA33D,KAAA,iBAsBd8U,EAAa,GAtBC,eAyBV0iD,EAAUl6D,IAAcC,MAAMslC,MAChCzC,EA1BY,GAAAjwC,OA0BEqnE,EAAQp3B,UA1BVjwC,OA0BqBgN,IAEjC6pC,GAAkBD,GAA2B,OAAXtlC,GAAiC,OAAdigC,KACjD9lB,EAAS,GAEXorB,GAAkB7wC,SAAS6wC,KACzBmwB,EACFv7C,EAAO7mB,KAAP,SAAA5E,OAAqB62C,KAEfra,EAAQqa,EAAgB,OAC9BprB,EAAO7mB,KAAP,SAAA5E,OAAqBw8B,MAIrBoa,GAAgB5wC,SAAS4wC,IAC3BnrB,EAAO7mB,KAAP,OAAA5E,OAAmB42C,IAGN,OAAXtlC,GACFma,EAAO7mB,KAAP,UAAA5E,OAAsBsR,IAGN,OAAdigC,GAAsBvrC,SAASurC,IACjC9lB,EAAO7mB,KAAP,aAAA5E,OAAyBuxC,IAGb,OAAV01B,GACFx7C,EAAO7mB,KAAP,SAAA5E,OAAqBinE,IAGT,OAAVC,GAAkBlhE,SAASkhE,IAC7Bz7C,EAAO7mB,KAAP,SAAA5E,OAAqBknE,IAGnBz7C,EAAO7wB,SACTq1C,GAAY,IAAIxkB,EAAOne,KAAK,OAI1B+oC,EAAS53C,EAAK+G,gBAAgB,CAAC,QAAQ,WAjE7BgiE,EAAA33D,KAAA,GAkEGpR,EAAKw4B,YAAYgZ,GAAS,EAAMoG,GAlEnC,WAkEZnvB,EAlEYsgD,EAAA51D,KAAA,CAAA41D,EAAA33D,KAAA,gBAAA23D,EAAAznD,OAAA,SAoEP,IApEO,eAuEV3W,EAAO8d,EAAO9d,KAEhBk+D,EAAe,KACJ,OAAXh2D,IACFg2D,EAAel+D,EAAK5K,OAAQ,SAAAqM,GAAC,OAAMA,EAAEyG,SAAWA,KAGlDqT,EAAW/f,KAAK,CACd0M,SACAslC,eACAC,iBACAztC,KAAKk+D,IAGP7oE,EAAKmmB,cAAcqoC,EAActoC,GArFjB6iD,EAAAznD,OAAA,SAuFT3W,GAvFS,yBAAAo+D,EAAAn3D,SAAA02D,EAAAjvE,SA55DA,gBAAA2vE,GAAA,OAAAX,EAAAv2D,MAAAzY,KAAAiH,YAAA,GAAAjH,KAq/DlByvD,iBAr/DkB,eAAAmgB,EAAAjwE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAq/DC,SAAAq4D,EAAOn8C,GAAP,OAAAd,EAAApzB,EAAAoY,KAAA,SAAAk4D,GAAA,cAAAA,EAAAh4D,KAAAg4D,EAAA/3D,MAAA,cACjB2b,EAAeA,GAA8B/sB,EAAK1G,MAAMgM,cADvC6jE,EAAA/3D,KAAA,EAEJpR,EAAKoxB,oBAAoBrE,EAAa,YAFlC,cAAAo8C,EAAA7nD,OAAA,SAAA6nD,EAAAh2D,MAAA,wBAAAg2D,EAAAv3D,SAAAs3D,EAAA7vE,SAr/DD,gBAAA+vE,GAAA,OAAAH,EAAAn3D,MAAAzY,KAAAiH,YAAA,GAAAjH,KAy/DlBu3D,UAAY,SAACyY,EAAKC,EAAYl+D,GAC5B,GAAIi+D,GAAQC,GAAel+D,EAAgB,CACzC,IAAIm1B,EAASvnC,OAAOmF,KAAKkrE,GAAMt2C,OAAO,SAACw2C,EAAYj7D,GACjD,IAAMk7D,EAAaxpE,EAAKqR,MAAMi4D,EAAYh7D,IACpCm7D,EAAMzpE,EAAKqR,MAAMg4D,EAAK/6D,IAC5B,OAAOtO,EAAKqR,MAAMk4D,GAAaj4D,KAAKk4D,EAAW/6D,MAAMg7D,KACrD,GAEF,GAAIlpC,EACF,OAAOvgC,EAAKqR,MAAMkvB,GAAQ1d,IAAIzX,GAGlC,OAAO,MArgES/R,KAugElB+rC,oBAAsB,SAAC0N,GAAyB,IAAf42B,EAAeppE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAN,EAMxC,MAL0B,CACxBqpE,KAAK,KACLC,IAAI,MACJC,KAAK,QAEkB/2B,GAAW42B,GA7gEpBrwE,KA+gElBywE,yBAA2B,SAACtC,GAC1B,OAAOxnE,EAAK1G,MAAMiM,YAAY4I,UAAU2X,KAAK,SAAAid,GAAC,OAAIA,EAAEx0B,QAAQ7J,gBAAkB8iE,EAAK9iE,iBAhhEnErL,KAkhElB2yC,aAAe,SAAA5wC,GACb,OAAO4E,EAAKqR,MAAMjW,GAAO4wC,aAAaqmB,IAAU0X,aAAa/jE,WAnhE7C3M,KAqhElB2wE,uBAAyB,SAAAp2D,GACvB,OAAO5T,EAAKqR,MAAL,KAAA9P,OAAgBqS,KAthEPva,KAwhElBg0B,qBAAuB,SAAC5B,EAAa7X,KAA6BtT,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,KAAAA,UAAA,OAC1D2pE,EAA0BjqE,EAAKgqE,uBAAuBp2D,GAC5D,OAAO5T,EAAKqR,MAAMoa,GAAchd,MAAMw7D,GAAyBj+B,aAAaqmB,IAAU0X,aAAa/jE,WA1hEnF3M,KA4hElB2a,iBAAmB,SAACyX,EAAa7X,GAAoC,IAAtBs2D,EAAsB5pE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KACpD2pE,EAA0BjqE,EAAKgqE,uBAAuBp2D,GACxDnC,EAAUzR,EAAKqR,MAAMoa,GAAc5I,IAAIonD,GAI3C,OAHIC,IAAiBA,EAAavsE,UAChC8T,EAAUA,EAAQhD,MAAMy7D,IAEnBz4D,GAliESpY,KAoiElB8wE,oBApiEkBnxE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAoiEI,SAAAu5D,IAAA,IAAAr9C,EAAAs9C,EAAAC,EAAAhqE,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAs5D,GAAA,cAAAA,EAAAp5D,KAAAo5D,EAAAn5D,MAAA,cACpB2b,GAD2BA,EAAPu9C,EAAAnuE,OAAA,QAAAoE,IAAA+pE,EAAA,GAAAA,EAAA,GAAoB,OACKtqE,EAAK1G,MAAMiM,YAAY81B,KAAKv2B,MADrDylE,EAAAn5D,KAAA,EAESpR,EAAKoxB,oBAAoBrE,EAAc,SAAU,GAAI,IAAI42C,MAAM,SAAAxiD,GAC1FnhB,EAAK2yD,eAAe,yBAA0BxxC,KAH5B,cAEdkpD,EAFcE,EAAAp3D,KAAAo3D,EAAAjpD,OAAA,SAMb+oD,GANa,wBAAAE,EAAA34D,SAAAw4D,EAAA/wE,SApiEJA,KA4iElB+iE,cAAgB,SAACr6D,GAA4C,IAAxCyoE,IAAwClqE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,KAAAA,UAAA,GAAxBmqE,EAAwBnqE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KAC9CmoB,EAASgiD,EACb,GAAIhiE,OAAO+a,aAAa,CACtB,IAAMrO,EAAOqO,aAAaC,QAAQ1hB,GAC9BoT,IACFsT,EAAStT,EACLq1D,IACF/hD,EAASjiB,KAAKkd,MAAMvO,KAI1B,OAAKsT,GACIgiD,GAxjEOpxE,KA4jElBqxE,gBAAkB,WAAoB,IAAnBC,EAAmBrqE,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAC7B,GAAImI,OAAO+a,aAAa,CAEtB,IAAKmnD,IAAgBA,EAAYxuE,OAC/B,OAAOsM,OAAO+a,aAAaonD,QAI7B,IADA,IAAMC,EAAqB,GAClBxlE,EAAE,EAAEA,EAAEoD,OAAO+a,aAAarnB,OAAOkJ,IAAI,CAC5C,IAAMylE,EAAYriE,OAAO+a,aAAazhB,IAAIsD,GACrCslE,EAAY5lE,SAAS+lE,IACxBD,EAAmB1kE,KAAK2kE,GAG5BD,EAAmBzsE,QAAQ,SAAC0sE,GAC1B9qE,EAAK+qE,iBAAiBD,OA3kEVzxE,KA+kElB0xE,iBAAmB,SAAChpE,GAClB,QAAI0G,OAAO+a,eACT/a,OAAO+a,aAAawnD,WAAWjpE,IACxB,IAllEO1I,KAslElBwqB,gBAAkB,SAAC9hB,EAAI3G,GAA0B,IAApBqL,EAAoBnG,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,IAAAA,UAAA,GAC/C,GAAImI,OAAO+a,aACT,IAGE,OAFApoB,EAAQqL,EAAYD,KAAKC,UAAUrL,GAASA,EAC5CqN,OAAO+a,aAAaynD,QAAQlpE,EAAI3G,IACzB,EACP,MAAOwkB,GAEPnX,OAAO+a,aAAawnD,WAAWjpE,GAGnC,OAAO,GAjmES1I,KAmmElB6xE,eAnmEkB,eAAAC,EAAAnyE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAmmED,SAAAu6D,EAAO7lE,GAAP,IAAA8lE,EAAA/B,EAAAz0D,EAAAy2D,EAAAC,EAAAC,EAAA,OAAAv/C,EAAApzB,EAAAoY,KAAA,SAAAw6D,GAAA,cAAAA,EAAAt6D,KAAAs6D,EAAAr6D,MAAA,WACV7L,GAAevF,EAAK1G,MAAMiM,cAC7BA,EAAcvF,EAAK1G,MAAMiM,aAEtBA,EAJU,CAAAkmE,EAAAr6D,KAAA,eAAAq6D,EAAAnqD,OAAA,UAKN,GALM,cAQT+pD,EAA0B,GARjBI,EAAAr6D,KAAA,EASWpR,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAO,kBAT5D,WASTwkE,EATSmC,EAAAt4D,OAWMm2D,EAAYntE,OAXlB,CAAAsvE,EAAAr6D,KAAA,eAAAq6D,EAAAnqD,OAAA,UAYN,GAZM,OAef,IAfezM,EAAA,SAeNy2D,GACP,IAAMI,EAAyB,IAAIjrD,QAAJ,eAAAkrD,EAAA3yE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAA+6D,EAAO/qD,EAASC,GAAhB,IAAA+qD,EAAA,OAAA5/C,EAAApzB,EAAAoY,KAAA,SAAA66D,GAAA,cAAAA,EAAA36D,KAAA26D,EAAA16D,MAAA,cAAA06D,EAAA36D,KAAA,EAAA26D,EAAA16D,KAAA,EAEVpR,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAO,kBAAkB,CAACwmE,IAF1D,OAElCO,EAFkCC,EAAA34D,KAGxC0N,EAAQgrD,GAHgCC,EAAA16D,KAAA,gBAAA06D,EAAA36D,KAAA,EAAA26D,EAAAljB,GAAAkjB,EAAA,SAKxCt+C,QAAQC,IAARq+C,EAAAljB,IACA/nC,EAAQ,MANgC,yBAAAirD,EAAAl6D,SAAAg6D,EAAAvyE,KAAA,YAAb,gBAAA0yE,EAAAC,GAAA,OAAAL,EAAA75D,MAAAzY,KAAAiH,YAAA,IAS/B+qE,EAAwBllE,KAAKulE,IAVtBJ,EAAc,EAAEA,EAAchC,EAAYntE,OAAOmvE,IAAgBz2D,EAAjEy2D,GAfM,OAAAG,EAAAr6D,KAAA,GA4BcqP,QAAQkD,IAAI0nD,GA5B1B,WA4BTE,EA5BSE,EAAAt4D,KA8BVm2D,GAAgBiC,EA9BN,CAAAE,EAAAr6D,KAAA,gBAAAq6D,EAAAnqD,OAAA,UA+BN,GA/BM,eAkCTkqD,EAAOlC,EAAYvpE,OAAQ,SAACksE,EAAM9jE,GAAP,OAAiB8jE,IAAUV,EAAepjE,KAlC5DsjE,EAAAnqD,OAAA,SAoCRkqD,EAAKrvE,OAAO,GApCJ,yBAAAsvE,EAAA75D,SAAAw5D,EAAA/xE,SAnmEC,gBAAA6yE,GAAA,OAAAf,EAAAr5D,MAAAzY,KAAAiH,YAAA,GAAAjH,KAyoElB8yE,eAzoEkB,eAAAC,EAAApzE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAyoED,SAAAw7D,EAAO9mE,EAAYsB,GAAnB,IAAA2gC,EAAA8kC,EAAAC,EAAAC,EAAAC,EAAA9iC,EAAAtB,EAAA,OAAApc,EAAApzB,EAAAoY,KAAA,SAAAy7D,GAAA,cAAAA,EAAAv7D,KAAAu7D,EAAAt7D,MAAA,UAEV7L,GAAgBsB,EAFN,CAAA6lE,EAAAt7D,KAAA,eAAAs7D,EAAAprD,OAAA,UAGN,GAHM,UAMXkmB,GAAmB,EACnB8kC,EAAqB,KACrBC,EAA2B,KAE3BC,EAA8B,MAG9BjnE,EAAYskC,YAAatkC,EAAYskC,UAAU5W,QAbpC,CAAAy5C,EAAAt7D,KAAA,YAcPq7D,EAAkBlnE,EAAYskC,UAAUF,YAAY1qC,KACpD0qC,EAAc3pC,EAAK23B,kBAAkB80C,GACrCpkC,EAAoBroC,EAAK23B,kBAAkBpyB,EAAYskC,UAAUxB,kBAAkBppC,OAIrF0qC,IAAetB,EApBN,CAAAqkC,EAAAt7D,KAAA,gBAAAs7D,EAAAt7D,KAAA,GAsBsBpR,EAAK8oD,iBAAiB2jB,GAtB5C,eAsBXF,EAtBWG,EAAAv5D,KAAAu5D,EAAAt7D,KAAA,GAgCgBpR,EAAK2sE,mBAAmBF,EAAgB5lE,GAhCxD,SAgCXylE,EAhCWI,EAAAv5D,QAmCTq5D,EAA8BxsE,EAAKgU,iBAAiBs4D,EAAmBC,GAEvE/kC,EAAmBxnC,EAAKqR,MAAMi7D,GAAoBn4D,GAAG,IArC5C,eAAAu4D,EAAAprD,OAAA,SA6CR,CACLkmB,mBACA8kC,qBACAC,2BACAC,gCAjDa,yBAAAE,EAAA96D,SAAAy6D,EAAAhzE,SAzoEC,gBAAAuzE,EAAAC,GAAA,OAAAT,EAAAt6D,MAAAzY,KAAAiH,YAAA,GAAAjH,KA8rElBkoE,uBA9rEkB,eAAAuL,EAAA9zE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA8rEO,SAAAk8D,EAAOz8C,EAAU83B,EAAan7B,EAAkBthB,EAAUqhE,GAA1D,IAAAC,EAAAjrD,EAAA,OAAAiK,EAAApzB,EAAAoY,KAAA,SAAAi8D,GAAA,cAAAA,EAAA/7D,KAAA+7D,EAAA97D,MAAA,cAAA87D,EAAA/7D,KAAA,EAAA+7D,EAAA97D,KAAA,EASEpR,EAAK1G,MAAM2nB,KAAKC,IAAIisD,cATtB,OASfnrD,EATekrD,EAAA/5D,MAWV85D,EAAA38C,EAASuY,SACjB04B,uBADQzvD,MAAAm7D,EAAA,CACe7kB,GADf7mD,OAAAvI,OAAAw/D,EAAA,EAAAx/D,CAC+Bi0B,KACvCtpB,KAAK,CACJmK,KAAMs6C,EACNpmC,aAIDya,GAAG,kBAAmB,SAAS3gC,GAChCzC,KAAK2nB,UAAL,yCAAAzf,OAAwDzF,IACxDkxE,MACCI,KAAK,eAAgB,SAASC,EAAoBC,GACnDj0E,KAAK2nB,UAAU,iCAAiCssD,GAChDN,EAAiBM,KAxBEJ,EAAA97D,KAAA,gBAAA87D,EAAA/7D,KAAA,EAAA+7D,EAAAtkB,GAAAskB,EAAA,SA2BrBltE,EAAKghB,UAALksD,EAAAtkB,IACAj9C,EAAS,KAADuhE,EAAAtkB,IA5Ba,yBAAAskB,EAAAt7D,SAAAm7D,EAAA1zE,KAAA,YA9rEP,gBAAAk0E,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAb,EAAAh7D,MAAAzY,KAAAiH,YAAA,GAAAjH,KA8tElBu0E,0BAA4B,SAAAC,GAC1B,IAAK7tE,EAAK1G,MAAM2nB,KAAK0wC,MAAMmc,YAAYD,GACrC,MAAM,IAAIE,MACR,gBAAgBxsE,OAAOssE,EAAW,iCAGtC,IAAIr8C,EAAIq8C,EAAU51D,MAAM,EAAG,IACvBwZ,EAAI,KAAKlwB,OAAOssE,EAAU51D,MAAM,GAAI,MACpClV,EAAI,KAAKxB,OAAOssE,EAAU51D,MAAM,IAAK,MAGzC,OAFAlV,EAAI/C,EAAK1G,MAAM2nB,KAAK0wC,MAAMqc,YAAYjrE,GACjC,CAAC,GAAI,IAAIgC,SAAShC,KAAIA,GAAK,IACzB,CACLyuB,EAAGA,EACHC,EAAGA,EACH1uB,EAAGA,IA5uEW1J,KAgvElB40E,gCAAkC,SAACC,EAAO5iB,EAAS6iB,EAAmBniB,GACpE,OAAOuF,EAAc6c,aACnB,CAAC,UAAU,UAAU,UAAU,SAC/B,CAACF,EAAOliB,EAAiBV,EAAS+iB,mBAASF,MAnvE7B90E,KAuvElBi1E,oBAvvEkB,eAAAC,EAAAv1E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAuvEI,SAAA29D,EAAOpmB,GAAP,IAAAqmB,EAAAC,EAAA,OAAAziD,EAAApzB,EAAAoY,KAAA,SAAA09D,GAAA,cAAAA,EAAAx9D,KAAAw9D,EAAAv9D,MAAA,cACdq9D,EAAezuE,EAAK+G,gBAAgB,CAAC,UAAU,YAAY,aAD7C4nE,EAAAv9D,KAAA,EAEFpR,EAAKw4B,YAAL,GAAAj3B,OAAoBktE,EAAa3yB,UAAUS,OAA3C,iBAAAh7C,OAAiE6mD,EAAjE,WAAA7mD,OAAsFktE,EAAazhD,OAAO6vB,OAAQ,KAAK,CACvIhF,QAAQ,CACN+2B,YAAYH,EAAazhD,OAAOyvB,UAJhB,YAEdiyB,EAFcC,EAAAx7D,QAQTu7D,EAAI/jE,KARK,CAAAgkE,EAAAv9D,KAAA,eAAAu9D,EAAArtD,OAAA,SASXotD,EAAI/jE,MATO,cAAAgkE,EAAArtD,OAAA,SAYb,MAZa,wBAAAqtD,EAAA/8D,SAAA48D,EAAAn1E,SAvvEJ,gBAAAw1E,GAAA,OAAAN,EAAAz8D,MAAAzY,KAAAiH,YAAA,GAAAjH,KAswElBy1E,iBAtwEkB,eAAAC,EAAA/1E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAswEC,SAAAm+D,EAAOjiD,EAAaI,EAAWC,EAAa8gD,EAAMviE,EAASqhE,GAA3D,IAAAiC,EAAA3+C,EAAA69C,EAAA/lB,EAAAkD,EAAA4jB,EAAArB,EAAAsB,EAAA39C,EAAAC,EAAA1uB,EAAA,OAAAkpB,EAAApzB,EAAAoY,KAAA,SAAAm+D,GAAA,cAAAA,EAAAj+D,KAAAi+D,EAAAh+D,MAAA,UACXkf,EAAWtwB,EAAK23B,kBAAkB5K,GADvB,CAAAqiD,EAAAh+D,KAAA,eAIfzF,EAAS,KAAK,sBAJCyjE,EAAA9tD,OAAA,UAKR,GALQ,UAQZgP,EAASuY,QAAQ1b,GARL,CAAAiiD,EAAAh+D,KAAA,eASfzF,EAAS,KAAK,oBATCyjE,EAAA9tD,OAAA,UAUR,GAVQ,cAaX6sD,GAAoBc,EAAA3+C,EAASuY,SAAQ1b,GAAjBrb,MAAAm9D,EAAAj2E,OAAAw/D,EAAA,EAAAx/D,CAAgCo0B,IAAciiD,YAbvDD,EAAAj+D,KAAA,EAgBTi3C,EAAcpoD,EAAK1G,MAAMuN,QACzBykD,EAAUtrD,EAAK+G,gBAAgB,CAAC,UAAU,oBAC1CmoE,EAAgBlvE,EAAKiuE,gCAAgCC,EAAO5iB,EAAS6iB,EAAmB79C,EAASg/C,UAlBxFF,EAAAh+D,KAAA,GAoBSpR,EAAK1G,MAAM2nB,KAAKC,IAAIquD,SAASC,KACnD,KAAON,EAAcpsD,SAAS,OAC9BslC,GAtBa,eAoBTylB,EApBSuB,EAAAj8D,KAAAg8D,EAyBKnvE,EAAK4tE,0BAA0BC,GAA3Cr8C,EAzBO29C,EAyBP39C,EAAGC,EAzBI09C,EAyBJ19C,EAAG1uB,EAzBCosE,EAyBDpsE,EAEd/C,EAAK4tB,0BAA0Bb,EAAcI,EAAYC,EAAa7rB,OAAO,CAAC2sE,EAAO18C,EAAGC,EAAG1uB,IAAK4I,EAAUqhE,GA3B3FoC,EAAA9tD,OAAA,UA6BR,GA7BQ,eAAA8tD,EAAAj+D,KAAA,GAAAi+D,EAAAxmB,GAAAwmB,EAAA,SA+BfzjE,EAAS,KAADyjE,EAAAxmB,IA/BOwmB,EAAA9tD,OAAA,UAgCR,GAhCQ,yBAAA8tD,EAAAx9D,SAAAo9D,EAAA31E,KAAA,aAtwED,gBAAAo2E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,EAAAj9D,MAAAzY,KAAAiH,YAAA,GAAAjH,KA0yElB02E,8BA1yEkB,eAAAC,EAAAh3E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA0yEc,SAAAo/D,EAAOljD,EAAamjD,EAAa11B,EAAW21B,EAASC,GAArD,IAAA9/C,EAAA1rB,EAAA,OAAAqnB,EAAApzB,EAAAoY,KAAA,SAAAo/D,GAAA,cAAAA,EAAAl/D,KAAAk/D,EAAAj/D,MAAA,UACxBkf,EAAWtwB,EAAK23B,kBAAkB5K,GADV,CAAAsjD,EAAAj/D,KAAA,eAAAi/D,EAAA/uD,OAAA,UAIrB,GAJqB,cAO9BkM,QAAQC,IAAI,YAAY6C,EAASg/C,SAASY,EAAalJ,OAAOoJ,GAAUD,GAP1CE,EAAAj/D,KAAA,EAUbpR,EAAK1G,MAAMg3E,qBAAqBC,QAAQ,CACvD/1B,aACA7vC,KAAKwlE,EACLrrE,MAAMorE,EACNzc,GAAGnjC,EAASg/C,SACZkB,MAAMxJ,OAAOoJ,KAfe,cAUxBxrE,EAVwByrE,EAAAl9D,KAAAk9D,EAAA/uD,OAAA,SAkBvB1c,GAlBuB,wBAAAyrE,EAAAz+D,SAAAq+D,EAAA52E,SA1yEd,gBAAAo3E,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAb,EAAAl+D,MAAAzY,KAAAiH,YAAA,GAAAjH,KA+zElBy3E,iCA/zEkB,eAAAC,EAAA/3E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+zEiB,SAAAmgE,EAAOC,EAAIC,EAASvlE,EAASqhE,GAA7B,IAAAvgD,EAAA0kD,EAAAvsE,EAAAwsE,EAAA,OAAAnlD,EAAApzB,EAAAoY,KAAA,SAAAogE,GAAA,cAAAA,EAAAlgE,KAAAkgE,EAAAjgE,MAAA,cAE7Bqb,EAAkB,KAFW4kD,EAAAlgE,KAAA,EAAAkgE,EAAAjgE,KAAA,EAKNpR,EAAK1G,MAAMg3E,qBAAqBgB,sBAAsB,CAACL,MAAIC,aALrD,OAKzBC,EALyBE,EAAAl+D,KAM/BsZ,EAAkB0kD,EAAW/oE,OAC7BolB,QAAQC,IAAI,wBAAwBhB,GAPL4kD,EAAAjgE,KAAA,uBAAAigE,EAAAlgE,KAAA,EAAAkgE,EAAAzoB,GAAAyoB,EAAA,SAS/B7jD,QAAQC,IAAI,8BAAZ4jD,EAAAzoB,IACAj9C,EAAS,MAAK,GAViB0lE,EAAA/vD,OAAA,UAWxB,GAXwB,WAc5BmL,EAd4B,CAAA4kD,EAAAjgE,KAAA,gBAe/Boc,QAAQC,IAAI,0BACZ9hB,EAAS,MAAK,GAhBiB0lE,EAAA/vD,OAAA,UAiBxB,GAjBwB,eAoB3B1c,EAAK,CACT88D,OAAO,gBACPj1C,mBAEFe,QAAQC,IAAI,mCAAmChB,GAC/CugD,EAAiBpoE,GAGXwsE,EAAyB3oE,OAAO8oE,YAAY,WAChDvxE,EAAK1G,MAAM2nB,KAAKC,IAAIk9C,sBAAsB3xC,EAAiB,SAACtL,EAAKmsD,GAC/D9/C,QAAQC,IAAI,mCAAmChB,EAAgBtL,EAAImsD,IAC/DnsD,GAAOmsD,IACT7kE,OAAO+oE,cAAcJ,GACrBxsE,EAAG+sB,UAAY27C,EACf1oE,EAAGjF,QAAUwhB,GAAOmsD,EAAQ3tE,OAAS,UAAY,QAEjDgM,EAAS/G,EAAGuc,GAE4B,oBAA7B1Y,OAAOgpE,mBAChBhpE,OAAOgpE,kBAAkB7sE,EAAG6nB,EAAgB7nB,EAAGjF,OAAO,UAI3D,KA3C8B0xE,EAAA/vD,OAAA,UA6C1B,GA7C0B,yBAAA+vD,EAAAz/D,SAAAo/D,EAAA33E,KAAA,YA/zEjB,gBAAAq4E,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAj/D,MAAAzY,KAAAiH,YAAA,GAAAjH,KA+2ElBy4E,+BA/2EkB,eAAAC,EAAA/4E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+2Ee,SAAAmhE,EAAOjlD,EAAaohD,EAAkBxiE,EAASqhE,GAA/C,IAAA18C,EAAA83B,EAAA8lB,EAAA5iB,EAAA4jB,EAAArB,EAAAoE,EAAAzgD,EAAAC,EAAA1uB,EAAA,OAAAkpB,EAAApzB,EAAAoY,KAAA,SAAAihE,GAAA,cAAAA,EAAA/gE,KAAA+gE,EAAA9gE,MAAA,UACzBkf,EAAWtwB,EAAK23B,kBAAkB5K,GADT,CAAAmlD,EAAA9gE,KAAA,eAI7BzF,EAAS,KAAK,sBAJeumE,EAAA5wD,OAAA,UAKtB,GALsB,cAAA4wD,EAAA/gE,KAAA,EASvBi3C,EAAcpoD,EAAK1G,MAAMuN,QATFqrE,EAAA9gE,KAAA,EAUTkf,EAASuY,QAAQspC,SAAS/pB,GAAagqB,OAV9B,cAUvBlE,EAVuBgE,EAAA/+D,KAWvBm4C,EAAUtrD,EAAK+G,gBAAgB,CAAC,UAAU,oBAC1CmoE,EAAgBlvE,EAAKiuE,gCAAgCC,EAAO5iB,EAAS6iB,EAAmB79C,EAASg/C,UAZ1E4C,EAAA9gE,KAAA,GAcLpR,EAAK1G,MAAM2nB,KAAKC,IAAIquD,SAASC,KACnD,KAAON,EAAcpsD,SAAS,OAC9BslC,GAhB2B,eAcvBylB,EAduBqE,EAAA/+D,KAAA8+D,EAmBTjyE,EAAK4tE,0BAA0BC,GAA3Cr8C,EAnBqBygD,EAmBrBzgD,EAAGC,EAnBkBwgD,EAmBlBxgD,EAAG1uB,EAnBekvE,EAmBflvE,EAEd/C,EAAK4tB,0BAA0Bb,EAAc,yBAA0B,CAACq7B,EAAa+lB,EAAmB38C,EAAGC,EAAG1uB,GAAI4I,EAAUqhE,GArB/FkF,EAAA5wD,OAAA,UAuBtB,GAvBsB,eAAA4wD,EAAA/gE,KAAA,GAAA+gE,EAAAtpB,GAAAspB,EAAA,SAyB7B1kD,QAAQ5N,MAARsyD,EAAAtpB,IACAj9C,EAAS,KAADumE,EAAAtpB,IA1BqBspB,EAAA5wD,OAAA,UA2BtB,GA3BsB,yBAAA4wD,EAAAtgE,SAAAogE,EAAA34E,KAAA,aA/2Ef,gBAAAg5E,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAjgE,MAAAzY,KAAAiH,YAAA,GAAAjH,KA84ElBo5E,kBA94EkB,eAAAC,EAAA15E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA84EE,SAAA8hE,EAAO3mB,EAAiB4mB,EAAWC,EAAOC,EAAS13E,EAAO8yE,EAAO6E,EAAUznB,GAA3E,IAAA+M,EAAA2a,EAAAl+B,EAAAm+B,EAAAnuC,EAAAn6B,EAAA,OAAAshB,EAAApzB,EAAAoY,KAAA,SAAAiiE,GAAA,cAAAA,EAAA/hE,KAAA+hE,EAAA9hE,MAAA,eACF7Q,IAAZ+qD,EADc,CAAA4nB,EAAA9hE,KAAA,eAAA8hE,EAAA9hE,KAAA,EAEKpR,EAAK1G,MAAM2nB,KAAKC,IAAIiyD,aAFzB,OAEV9a,EAFU6a,EAAA//D,KAGhBm4C,EAAU/jD,SAAS8wD,GAHH,cAMZ2a,EAAS,CACb,CAAE/zE,KAAM,OAAQrB,KAAM,UACtB,CAAEqB,KAAM,UAAWrB,KAAM,UACzB,CAAEqB,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,oBAAqBrB,KAAM,YAG/Bk3C,EAAS,CACb,CAAE71C,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,WAAYrB,KAAM,YAGtBq1E,EAAa,CACjB/jC,QAAS,IACTjwC,KAAM2zE,EACNtnB,QAASA,EACT8nB,kBAAmBpnB,GAGflnB,EAAU,CACd+tC,QACAC,UACA13E,QACA8yE,QACA6E,YAGIpoE,EAAOnE,KAAKC,UAAU,CAC1B4sE,MAAO,CACLC,aAAcN,EACdO,OAAQz+B,GAEV0+B,YAAa,SACbR,OAAQC,EACRnuC,QAASA,IA3COouC,EAAA5xD,OAAA,SA8CX,IAAIb,QAAQ,SAACI,EAASC,GAC3B9gB,EAAK1G,MAAM2nB,KAAKwyD,gBAAgB9vE,KAAK,CACnC+vE,QAAS,MACT7rE,GAAIlC,KAAKouB,MAAMjR,WAAW6wD,UAAU,GACpCjS,OAAQ,uBACR10C,OAAQ,CAAC6lD,EAAOloE,GAChBmD,KAAM+kE,GACL,SAACjzD,EAAO8uD,GACT,GAAI9uD,EACF,OAAOkB,EAAOlB,GAGhBiB,EAAQ6tD,EAAIrW,aA1DE,yBAAA6a,EAAAthE,SAAA+gE,EAAAt5E,SA94EF,gBAAAu6E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAzB,EAAA5gE,MAAAzY,KAAAiH,YAAA,GAAAjH,KA68ElBk0B,WA78EkB,eAAA6mD,EAAAp7E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA68EL,SAAAwjE,EAAOC,EAAkBC,EAAQC,GAAjC,IAAAC,EAAAC,EAAAC,EAAAtc,EAAA/M,EAAAgoB,EAAAsB,EAAArjD,EAAA28C,EAAAqF,EAAAv+B,EAAA89B,EAAAM,EAAAt0B,EAAAk0B,EAAAluC,EAAA+tC,EAAAE,EAAA33E,EAAAuP,EAAAkqE,EAAAv0E,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA6jE,GAAA,cAAAA,EAAA3jE,KAAA2jE,EAAA1jE,MAAA,UAAsDqjE,EAAtDI,EAAA14E,OAAA,QAAAoE,IAAAs0E,EAAA,GAAAA,EAAA,GAAiE,EACtEH,EAAe10E,EAAK23B,kBAAkB28C,GACtCK,EAAkB30E,EAAK23B,kBAAkB68C,GAE1CE,GAAiBC,EAJX,CAAAG,EAAA1jE,KAAA,eAAA0jE,EAAAxzD,OAAA,UAKF,GALE,cAAAwzD,EAAA1jE,KAAA,EAQUpR,EAAK1G,MAAM2nB,KAAKC,IAAI6zD,IAAIC,QARlC,UAQL3c,EARKyc,EAAA3hE,KASPm4C,EAAU/jD,SAAS8wD,GAEjBib,EAAe,CACnB,CAAEr0E,KAAM,OAAQrB,KAAM,UACtB,CAAEqB,KAAM,UAAWrB,KAAM,UACzB,CAAEqB,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,oBAAqBrB,KAAM,YAG/Bg3E,EAAe50E,EAAK+G,gBAAgB,CAAC,SAASutE,IAI9C/iD,EAASpsB,KAAK22B,OAAM,IAAIn2B,MAAOgN,UAAY,IAAO,OAC5CiiE,EAAajsC,YAvBd,CAAAmsC,EAAA1jE,KAAA,gBAAA0jE,EAAA1jE,KAAA,GAuBkCsjE,EAAa7rC,QAAQ+rC,EAAajsC,aAAa4rC,GAAQnC,OAvBzF,QAAA0C,EAAAlsB,GAAAksB,EAAA3hE,KAAA2hE,EAAA1jE,KAAA,iBAAA0jE,EAAAlsB,GAuBkG,KAvBlG,QAuBPslB,EAvBO4G,EAAAlsB,GAwBP6rB,EAAW,IACbvG,EAAQ3mE,SAAS2mE,GAAO3mE,SAASktE,IAEnCvG,EAAQA,EAAMprD,WAERywD,EAASqB,EAAah3E,KACtBo3C,EAAa4/B,EAAa5/B,WAE1B89B,EAAU6B,EAAgBrF,SAC1B8D,EAAoBsB,EAAapF,SAEjCxwB,EAAa81B,EAAa31E,MAAQq1E,EAElCtB,EAAS,CACb1nB,UACArsD,KAAM6/C,EACNs0B,oBACAlkC,QAAS0lC,EAAa1lC,QAAQpsB,YAAc,KAG1CgiB,EAAU,GA5CHgwC,EAAA9W,GA8CHhpB,EA9CG8/B,EAAA1jE,KA+CJ,OA/CI0jE,EAAA9W,GAAA,2BAgDD6U,EAAQ0B,EACRxB,EAAWxhD,EAEXn2B,EAAQ4E,EAAKgsC,aAAahsC,EAAKqR,MAAM,GAAGy6B,IAAI,KAAKv6B,MAAM,IAC7DuzB,EAAU,CACR1pC,QACA8yE,QACA2E,QACAC,UACAC,YAzDK+B,EAAAxzD,OAAA,2BA6DPwjB,EAAU,CACRyvC,SACArG,QACA38C,SACAuhD,UACAmC,SAAS,GAlEJH,EAAAxzD,OAAA,2BAuEL3W,EAAOnE,KAAKC,UAAU,CAC1BusE,SACAluC,UACAuuC,MAAO,CACLE,SACAD,gBAEFE,YAAa,WA9EJsB,EAAAxzD,OAAA,SAmFJ,IAAIb,QAAQ,SAACI,EAASC,GAC3B9gB,EAAK1G,MAAM2nB,KAAKwyD,gBAAgB9vE,KAAK,CACnCmK,KAAMymE,EACNb,QAAS,MACT1mD,OAAQ,CAACunD,EAAQ5pE,GACjB+2D,OAAQ,uBACR75D,GAAIlC,KAAKouB,MAAMjR,WAAW6wD,UAAU,IACnC,SAAC/zD,EAAOs1D,GACT,GAAIt1D,GAAUs1D,GAAYA,EAASt1D,MACjC,OAAOiB,EAAQ,MACV,GAAIq0D,GAAYA,EAAS7c,OAAQ,CACtC,IAAMprC,EAAmBjtB,EAAK4tE,0BAA0BsH,EAAS7c,QAGjE,OAFAprC,EAAiBihD,MAAQA,EACzBjhD,EAAiBsE,OAASA,EACnB1Q,EAAQoM,SAjGV,yBAAA6nD,EAAAljE,SAAAyiE,EAAAh7E,SA78EK,gBAAA87E,EAAAC,EAAAC,GAAA,OAAAjB,EAAAtiE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAojFlBy1E,iBApjFkB,eAAAwG,EAAAt8E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAojFC,SAAA0kE,EAAOjB,EAAkBC,EAAQC,EAAqBrnD,EAAYC,EAAczhB,EAAUqhE,GAA1F,IAAA0H,EAAAC,EAAA1nD,EAAAsE,EAAA28C,EAAA18C,EAAAC,EAAA1uB,EAAAyyE,EAAAC,EAAAC,EAAA1oD,EAAA2oD,EAAAr1E,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA2kE,GAAA,cAAAA,EAAAzkE,KAAAykE,EAAAxkE,MAAA,UAAAukE,EAAAx5E,OAAA,QAAAoE,IAAAo1E,EAAA,GAAAA,EAAA,GAA4H,KAEvIjB,EAAe10E,EAAK23B,kBAAkB28C,GACtCK,EAAkB30E,EAAK23B,kBAAkB68C,GAE1CE,GAAiBC,EALL,CAAAiB,EAAAxkE,KAAA,eAMfzF,EAAS,KAAK,sBANCiqE,EAAAt0D,OAAA,UAOR,GAPQ,cAAAs0D,EAAAxkE,KAAA,EAUcpR,EAAKutB,WAAW+mD,EAAkBC,EAAQC,GAVxD,QAUXvnD,EAVW2oD,EAAAziE,OAaPoe,EAA2BtE,EAA3BsE,OAAQ28C,EAAmBjhD,EAAnBihD,MAAO18C,EAAYvE,EAAZuE,EAAGC,EAASxE,EAATwE,EAAG1uB,EAAMkqB,EAANlqB,EACvByyE,EAAe,CAACjkD,EAAQxuB,EAAGyuB,EAAGC,GAE9BgkD,EAAYd,EAAgBkB,eAAe/vD,KAAM,SAAAgwD,GAAC,OAAIA,EAAE72E,OAASkuB,IACjEuoD,GAAWD,GAAYA,EAAUM,OAAOjwD,KAAM,SAAAzgB,GAAC,MAAe,UAAXA,EAAEpG,QACtDtB,MAAM4J,SAAS2mE,KAAWwH,GAC7BF,EAAaQ,QAAQ9H,GAEjBlhD,EAASI,EAAa7rB,OAAOi0E,GACnCx1E,EAAK4tB,0BAA0B4mD,EAAqBrnD,EAAYH,EAAQrhB,EAAUqhE,IAElFrhE,EAAS,KAAK,oBAxBC,yBAAAiqE,EAAAhkE,SAAA2jE,EAAAl8E,SApjFD,gBAAA48E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAjB,EAAAxjE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAglFlBm9E,aAhlFkB,eAAAC,EAAAz9E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAglFH,SAAA6lE,EAAO3pD,EAAai/B,EAAgBmiB,EAAkBxiE,EAASqhE,GAA/D,IAAAsG,EAAAqD,EAAArrB,EAAA2nB,EAAA3iD,EAAA83B,EAAA8lB,EAAAppC,EAAA8xC,EAAA,OAAA3qD,EAAApzB,EAAAoY,KAAA,SAAA4lE,GAAA,cAAAA,EAAA1lE,KAAA0lE,EAAAzlE,MAAA,cAEPkiE,EAAe,CACnB,CAAEr0E,KAAM,OAAQrB,KAAM,UACtB,CAAEqB,KAAM,UAAWrB,KAAM,UACzB,CAAEqB,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,oBAAqBrB,KAAM,YAG/B+4E,EAAkB,CACtB,CAAE13E,KAAM,QAASrB,KAAM,WACvB,CAAEqB,KAAM,OAAQrB,KAAM,WACtB,CAAEqB,KAAM,oBAAqBrB,KAAM,UAZxBi5E,EAAAzlE,KAAA,EAeSpR,EAAK1G,MAAM2nB,KAAKC,IAAIiyD,aAf7B,UAeP7nB,EAfOurB,EAAA1jE,KAiBP8/D,EAAa,CACjB3nB,UACApc,QAAS,IACTjwC,KAAM8tB,EACNqmD,kBAAmBpnB,GAGf17B,EAAWtwB,EAAK23B,kBAAkB5K,GAxB3B,CAAA8pD,EAAAzlE,KAAA,gBA2BXzF,EAAS,KAAK,sBA3BHkrE,EAAAv1D,OAAA,UA4BJ,GA5BI,eA+BT8mC,EAAcpoD,EAAK1G,MAAMuN,QA/BhBgwE,EAAAzlE,KAAA,GAgCKkf,EAASuY,QAAQspC,SAAS/pB,GAAagqB,OAhC5C,QAgCTlE,EAhCS2I,EAAA1jE,MAiCT2xB,EAAU,IACNopC,MAAQA,EAChBppC,EAAQh3B,KAAOs6C,EACftjB,EAAQqpC,kBAAoBA,EAEtByI,EAAapwE,KAAKC,UAAU,CAChC4sE,MAAO,CACLC,eACAqD,mBAEF3D,OAAQC,EACRO,YAAa,kBACb1uC,YAKF9kC,EAAK1G,MAAM2nB,KAAKwyD,gBAAgB9vE,KAC9B,CACE+vE,QAAS,MACT7rE,GAAI,aACJiG,KAAMs6C,EACNsZ,OAAQ,uBACR10C,OAAQ,CAACo7B,EAAawuB,IAExB,SAACh3D,EAAOs1D,GACN,GAAIt1D,GAAUs1D,GAAYA,EAASt1D,MACjC,OAAOjU,EAAS,KAAKiU,GAChB,GAAIs1D,GAAYA,EAAS7c,OAAQ,CACtC,IAAMprC,EAAmBjtB,EAAK4tE,0BAA0BsH,EAAS7c,QACzD7mC,EAAYvE,EAAZuE,EAAGC,EAASxE,EAATwE,EAAG1uB,EAAMkqB,EAANlqB,EAEd/C,EAAK4tB,0BAA0Bb,EAAc,yBAA0B,CAACq7B,EAAa+lB,EAAmB38C,EAAGC,EAAG1uB,GAAI4I,EAAUqhE,MAjErH,yBAAA6J,EAAAjlE,SAAA8kE,EAAAr9E,SAhlFG,gBAAAy9E,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAA3kE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAupFlBk1B,mBAvpFkB,eAAA4oD,EAAAn+E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAupFG,SAAAumE,EAAOrqD,EAAasqD,EAAaC,GAAjC,IAAAC,EAAAC,EAAA/lE,EAAAgmE,EAAA,OAAAxrD,EAAApzB,EAAAoY,KAAA,SAAAymE,GAAA,cAAAA,EAAAvmE,KAAAumE,EAAAtmE,MAAA,cAAAsmE,EAAAtmE,KAAA,EAITqP,QAAQkD,IAAI,CACpB3jB,EAAKyyB,gBAAgB1F,EAAauqD,GAAW,GAC7Ct3E,EAAK23E,aAAa5qD,EAAasqD,EAAaC,KAN3B,cAAAC,EAAAG,EAAAvkE,KAAAqkE,EAAAx+E,OAAAqnC,EAAA,EAAArnC,CAAAu+E,EAAA,GAEjB9lE,EAFiB+lE,EAAA,GAGjBC,EAHiBD,EAAA,GAQnBx3E,EAAKghB,UAAU,qBAAqB+L,EAAa/sB,EAAKqR,MAAMomE,GAAWzxE,UAAUhG,EAAKqR,MAAMI,GAASzL,UAAWyxE,GAAaz3E,EAAKqR,MAAMomE,GAAWj2C,IAAIxhC,EAAKqR,MAAMI,KAR/IimE,EAAAp2D,OAAA,SASZm2D,GAAaz3E,EAAKqR,MAAMomE,GAAWj2C,IAAIxhC,EAAKqR,MAAMI,KATtC,wBAAAimE,EAAA9lE,SAAAwlE,EAAA/9E,SAvpFH,gBAAAu+E,EAAAC,EAAAC,GAAA,OAAAX,EAAArlE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAkqFlBs+E,aAlqFkB,eAAAI,EAAA/+E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAkqFH,SAAAmnE,EAAOjrD,EAAasqD,EAAaC,GAAjC,OAAArrD,EAAApzB,EAAAoY,KAAA,SAAAgnE,GAAA,cAAAA,EAAA9mE,KAAA8mE,EAAA7mE,MAAA,UACR2b,GAAiBsqD,GAAiBC,EAD1B,CAAAW,EAAA7mE,KAAA,eAAA6mE,EAAA32D,OAAA,UAEJ,GAFI,cAIbthB,EAAKghB,UAAU,eAAe+L,EAAasqD,EAAaC,GAJ3CW,EAAA7mE,KAAA,EAKApR,EAAKoxB,oBAChBrE,EAAc,YAAa,CAACuqD,EAAYD,IAN7B,cAAAY,EAAA32D,OAAA,SAAA22D,EAAA9kE,MAAA,wBAAA8kE,EAAArmE,SAAAomE,EAAA3+E,SAlqFG,gBAAA6+E,EAAAC,EAAAC,GAAA,OAAAL,EAAAjmE,MAAAzY,KAAAiH,YAAA,GAAAjH,KA2qFlBu0B,0BAA4B,SAACb,EAAaI,EAAWH,EAAOrhB,EAASqhE,EAAiBqL,GACpFr4E,EAAK1G,MAAMs0B,0BAA0Bb,EAAcI,EAAYH,EAAQ,KAAM,SAACpoB,GACpD,oBAAb+G,GACTA,EAAS/G,IAEV,SAACA,GAC8B,oBAArBooE,GACTA,EAAiBpoE,IAElB,KAAMyzE,IAprFOh/E,KAsrFlBi/E,aAAe,SAACvrD,EAAaxe,EAAQ5C,EAASqhE,GAC5ChtE,EAAK1G,MAAMs0B,0BAA0Bb,EAAc,UAAW,CAC5Dxe,EACAvO,EAAK1G,MAAM2nB,KAAK0wC,MAAM4mB,iBAAiB,MACvC,KAAK,SAAC3zE,GACkB,oBAAb+G,GACTA,EAAS/G,IAEV,SAACA,GAC8B,oBAArBooE,GACTA,EAAiBpoE,MAhsFLvL,KAosFlBqzB,YAAc,SAACK,EAAaxe,EAAQ5C,EAASqhE,GAC3ChtE,EAAK1G,MAAMs0B,0BAA0Bb,EAAc,UAAW,CAC5Dxe,EACAvO,EAAK1G,MAAM2nB,KAAK0wC,MAAM4mB,iBAAiB,OACvC,KAAK,SAAC3zE,GACkB,oBAAb+G,GACTA,EAAS/G,IAEV,SAACA,GAC8B,oBAArBooE,GACTA,EAAiBpoE,MA9sFLvL,KAktFlBm/E,eAltFkB,eAAAC,EAAAz/E,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAktFD,SAAA6nE,EAAOC,EAAM7zE,EAAMS,EAAYsB,GAA/B,IAAAiwC,EAAA8hC,EAAAnwD,EAAA8b,EAAAs0C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1nE,EAAA2nE,EAAA5oB,EAAApe,EAAAinC,EAAA9+B,EAAA++B,EAAAC,EAAAC,EAAAv/C,EAAAw/C,EAAAC,EAAA56C,EAAA66C,EAAAC,EAAAC,EAAAC,EAAArpE,EAAA6kD,GAAArkD,GAAA8oE,GAAAC,GAAAC,GAAAC,GAAAt7C,GAAAu7C,GAAAC,GAAA/oD,GAAA7G,GAAApY,GAAAioE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA1rE,GAAA2rE,GAAAC,GAAAt8E,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA4rE,GAAA,cAAAA,EAAA1rE,KAAA0rE,EAAAzrE,MAAA,OAAuC0lC,IAAvC8lC,GAAAzgF,OAAA,QAAAoE,IAAAq8E,GAAA,KAAAA,GAAA,GAAyDhE,EAAzDgE,GAAAzgF,OAAA,QAAAoE,IAAAq8E,GAAA,IAAAA,GAAA,GAEXn0D,EAAS,KACP8b,EAAYvkC,EAAK+G,gBAAgB,CAAC,cAGlC8xE,EAAe74E,EAAK+G,gBAAgB,CAAC,aAAa/G,EAAK1G,MAAMwZ,mBAC/DgkC,GAAgB+hC,GAAqD,qBAA9BA,EAAa/hC,eACtDA,EAAe+hC,EAAa/hC,cAI1BgiC,EAA0B,KAC1B94E,EAAK1G,MAAMwZ,kBAAoB9S,EAAK1G,MAAMgM,eACtCyzE,EAAiB/4E,EAAK1G,MAAM2jC,oBAAoBj9B,EAAK1G,MAAMwZ,kBAAkB9S,EAAK1G,MAAMgM,mBAE5FwzE,EAA0B,IACFC,EAAej0E,OAASi0E,GAExC//E,OAAOmF,KAAKomC,GAAWx/B,SAASD,MAC1Cg0E,EAA0B,IACFh0E,GAASS,GArBpBs3E,EAAAj0B,GAwBP+vB,EAxBOkE,EAAAzrE,KAyBR,oBAzBQyrE,EAAAj0B,GAAA,GA4CR,sBA5CQi0B,EAAAj0B,GAAA,GAuDR,aAvDQi0B,EAAAj0B,GAAA,GA0DR,qBA1DQi0B,EAAAj0B,GAAA,GA6DR,2BA7DQi0B,EAAAj0B,GAAA,GAiER,kCAjEQi0B,EAAAj0B,GAAA,GAyFR,iBAzFQi0B,EAAAj0B,GAAA,GAmGR,qBAnGQi0B,EAAAj0B,GAAA,GA0GR,SA1GQi0B,EAAAj0B,GAAA,GAiHR,0BAjHQi0B,EAAAj0B,GAAA,GAoIR,qBApIQi0B,EAAAj0B,GAAA,GAoKR,sBApKQi0B,EAAAj0B,GAAA,IAqLR,QArLQi0B,EAAAj0B,GAAA,IAsMR,QAtMQi0B,EAAAj0B,GAAA,IAsNR,WAtNQi0B,EAAAj0B,GAAA,IAsOR,eAtOQi0B,EAAAj0B,GAAA,IAmPR,qBAnPQi0B,EAAAj0B,GAAA,IAyPR,eAzPQi0B,EAAAj0B,GAAA,IAgQR,eAhQQi0B,EAAAj0B,GAAA,IAgRR,QAhRQi0B,EAAAj0B,GAAA,IAmRR,iBAnRQi0B,EAAAj0B,GAAA,IAiSR,qBAjSQi0B,EAAAj0B,GAAA,IAuSR,6BAvSQi0B,EAAAj0B,GAAA,IA4TR,sBA5TQi0B,EAAAj0B,GAAA,IAsVR,kBAtVQi0B,EAAAj0B,GAAA,IAsWR,aAtWQi0B,EAAAj0B,GAAA,6BAAAi0B,EAAAzrE,KAAA,GA8BDqP,QAAQkD,IAAI,CACpB3jB,EAAKk1D,sBACLl1D,EAAKg2D,oBAAoB,GAAGnvD,GAC5B7G,EAAK88E,qBAAqBj2E,GAAQ,KAjCzB,eAAAmyE,EAAA6D,EAAA1pE,KAAA8lE,EAAAjgF,OAAAqnC,EAAA,EAAArnC,CAAAggF,EAAA,GA2BTE,EA3BSD,EAAA,GA4BTE,EA5BSF,EAAA,GA6BTG,EA7BSH,EAAA,GAoCPE,GAAoBC,IACtB3wD,EAASzoB,EAAKqR,MAAM+nE,GAAmB3qE,MAAM0qE,GACzCD,IACFzwD,EAASA,EAAOlX,MAAMkX,EAAOha,MAAMyqE,MAvC5B2D,EAAAv7D,OAAA,4BAAAu7D,EAAAzrE,KAAA,GA6C2CqP,QAAQkD,IAAI,CAChE3jB,EAAKw4E,eAAe,kBAAkB1zE,EAAMS,EAAYsB,GACxD7G,EAAKw4E,eAAe,yBAAyB1zE,EAAMS,EAAYsB,KA/CtD,eAAAwyE,EAAAwD,EAAA1pE,KAAAmmE,EAAAtgF,OAAAqnC,EAAA,EAAArnC,CAAAqgF,EAAA,GA6CNE,EA7CMD,EAAA,GA6CWE,EA7CXF,EAAA,GAkDPC,GAAoBC,GAA0BD,EAAiBplE,GAAG,IAAMqlE,EAAuBrlE,GAAG,KACpGsU,EAAS+wD,EAAuB32D,IAAI02D,GAAkBhoE,MAAM,GAAG9C,MAAM,MAnD5DouE,EAAAv7D,OAAA,4BAAAu7D,EAAAzrE,KAAA,GAwDIpR,EAAK+8E,cAxDT,eAwDXt0D,EAxDWo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,4BAAAu7D,EAAAzrE,KAAA,GA2DIpR,EAAKk1D,sBA3DT,eA2DXzsC,EA3DWo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,4BAAAu7D,EAAAzrE,KAAA,GA8DIpR,EAAKg9E,6BAA6Bn2E,GA9DtC,eA8DX4hB,EA9DWo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,4BAAAu7D,EAAAzrE,KAAA,GAsEDqP,QAAQkD,IAAI,CACpB3jB,EAAKw4E,eAAe,WAAW1zE,EAAMS,EAAYsB,GACjD7G,EAAKw4E,eAAe,kBAAkB1zE,EAAMS,EAAYsB,GACxD7G,EAAKw4E,eAAe,yBAAyB1zE,EAAMS,EAAYsB,KAzEtD,eAAA4yE,EAAAoD,EAAA1pE,KAAAumE,EAAA1gF,OAAAqnC,EAAA,EAAArnC,CAAAygF,EAAA,GAmETE,EAnESD,EAAA,GAoETE,EApESF,EAAA,GAqETG,EArESH,EAAA,GA4EPI,EAA4B,KAE5BD,GAA+BF,GAAYC,IACvCG,EAAiBH,EAAgBnrE,MAAMkrE,EAAS92D,IAAI,MAC1Di3D,EAA4BD,EAA4BvoE,KAAKyoE,IAI/DtxD,EAAS,CACPqxD,4BACAD,+BAtFSgD,EAAAv7D,OAAA,4BAAAu7D,EAAAzrE,KAAA,GA0FkCqP,QAAQkD,IAAI,CACvD3jB,EAAKw4E,eAAe,aAAa1zE,EAAMS,EAAYsB,GAAQ,GAC3D7G,EAAKw4E,eAAe,oBAAoB1zE,EAAMS,EAAYsB,GAAQ,KA5FzD,eAAAmzE,EAAA6C,EAAA1pE,KAAA8mE,EAAAjhF,OAAAqnC,EAAA,EAAArnC,CAAAghF,EAAA,GA0FNE,EA1FMD,EAAA,GA0FME,EA1FNF,EAAA,GA+FPC,GAAeC,GAAsBD,EAAY/lE,GAAG,KACtDsU,EAAS0xD,EAAmBt3D,IAAIq3D,GAAa3oE,MAAM,GAAG9C,MAAM,MAhGnDouE,EAAAv7D,OAAA,4BAAAu7D,EAAAzrE,KAAA,GAoGoBpR,EAAKw4E,eAAe,mBAAmB1zE,EAAMS,EAAYsB,GApG7E,eAoGLuzE,EApGKyC,EAAA1pE,QAsGHT,EAAgBnL,SAAS5B,KAAKouB,MAAM,KAC1CtL,GAAU/V,EAAc0nE,GAAkB,OAvGjCyC,EAAAv7D,OAAA,yBA2GPtoB,OAAOmF,KAAKomC,GAAWx/B,SAASD,GA3GzB,CAAA+3E,EAAAzrE,KAAA,gBAAAyrE,EAAAzrE,KAAA,GA4GMpR,EAAKi9E,gBAAgBn4E,EAAOg0E,GA5GlC,QA4GTrwD,EA5GSo0D,EAAA1pE,KAAA0pE,EAAAzrE,KAAA,wBAAAyrE,EAAAzrE,KAAA,GA8GMpR,EAAKk9E,aAAa33E,EAAYuxC,GA9GpC,QA8GTruB,EA9GSo0D,EAAA1pE,KAAA,eAAA0pE,EAAAv7D,OAAA,qBAAAu7D,EAAA7e,GAkHHl5D,EAlHG+3E,EAAAzrE,KAmHJ,SAnHIyrE,EAAA7e,GAAA,GAsHJ,SAtHI6e,EAAA7e,GAAA,2BAAA6e,EAAAzrE,KAAA,GAoHQpR,EAAKm9E,wBAAwBt2E,EAAQiyE,GApH7C,eAoHPrwD,EApHOo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,2BAuHDmwC,EAAezxD,EAAKo9E,kBAvHnBP,EAAAzrE,KAAA,GAwHQqgD,EAAa9B,oBAAoB9oD,EAAQiyE,GAxHjD,eAwHPrwD,EAxHOo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,2BAAAu7D,EAAAv7D,OAAA,2BA6HPmH,IAAWzoB,EAAKqR,MAAMoX,GAAQ9qB,UAChC8qB,EAASzoB,EAAKqR,MAAMoX,GAAQ5F,IAAI,SAE9B4F,EAASzoB,EAAK2wD,qBAAqBloC,EAAOljB,EAAYkwC,wBAhI/ConC,EAAAv7D,OAAA,4BAqILmwC,EAAezxD,EAAKo9E,kBACpB/pC,EAAYrzC,EAAK+G,gBAAgB,CAAC,aAAa,QAAQ,cACvDuzE,EAAiBt6E,EAAK+G,gBAAgB,CAAC,YAAYssC,IAvI9CwpC,EAAAzrE,KAAA,GAwIIqgD,EAAavC,SAAS3pD,EAAY81B,KAAK9sB,SAxI3C,aAwIXka,EAxIWo0D,EAAA1pE,MAAA,CAAA0pE,EAAAzrE,KAAA,UA4ITqX,EAASzoB,EAAKgU,iBAAiByU,EAAO6xD,EAAet8E,UAE/Cw9C,EAAgBx7C,EAAKqR,MAAMrR,EAAK+G,gBAAgB,CAAC,UAAU,mBA9IxD81E,EAAAre,GA+ID8b,EAAe7kC,sBA/IdonC,EAAAzrE,KAgJF,QAhJEyrE,EAAAre,GAAA,IAoJF,SApJEqe,EAAAre,GAAA,IAwJF,UAxJEqe,EAAAre,GAAA,IA4JF,SA5JEqe,EAAAre,GAAA,8BAiJC+b,EAAe/+B,EAAc34B,IAAI,YACvC4F,EAASA,EAAOha,MAAM8rE,GAlJjBsC,EAAAv7D,OAAA,6BAqJCk5D,EAAgBh/B,EAAc34B,IAAI,SACxC4F,EAASA,EAAOha,MAAM+rE,GAtJjBqC,EAAAv7D,OAAA,6BAyJCm5D,EAAiBj/B,EAAc34B,IAAI,IACzC4F,EAASA,EAAOha,MAAMgsE,GA1JjBoC,EAAAv7D,OAAA,6BA6JLmH,EAASA,EAAOha,MAAM+sC,GA7JjBqhC,EAAAv7D,OAAA,6BAAAu7D,EAAAv7D,OAAA,6BAAAu7D,EAAAv7D,OAAA,sBAqKL4Z,EAAsB49C,EAAwB94E,EAAK1G,MAAMgM,eArKpDu3E,EAAAQ,GAsKHv4E,EAtKG+3E,EAAAzrE,KAuKJ,SAvKIyrE,EAAAQ,GAAA,IA0KJ,SA1KIR,EAAAQ,GAAA,8BAAAR,EAAAzrE,KAAA,IAwKQpR,EAAKs9E,oBAAoBpiD,GAxKjC,gBAwKPzS,EAxKOo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,6BA2KDmwC,EAAezxD,EAAKo9E,kBA3KnBP,EAAAzrE,KAAA,IA4KQqgD,EAAavC,SAASh0B,EAAoBG,KAAK9sB,SA5KvD,gBA4KPka,EA5KOo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,6BAAAu7D,EAAAv7D,OAAA,6BAiLPmH,IAAWzoB,EAAKqR,MAAMoX,GAAQ9qB,UAChC8qB,EAASzoB,EAAKqR,MAAMoX,GAAQ5F,IAAI,OAlLvBg6D,EAAAv7D,OAAA,sBAAAu7D,EAAAU,GAsLHz4E,EAtLG+3E,EAAAzrE,KAuLJ,SAvLIyrE,EAAAU,GAAA,IA0LJ,SA1LIV,EAAAU,GAAA,8BAAAV,EAAAzrE,KAAA,IAwLQpR,EAAKw9E,cAAc1E,GAxL3B,gBAwLPrwD,EAxLOo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,6BA2LDmwC,EAAezxD,EAAKo9E,kBA3LnBP,EAAAzrE,KAAA,IA4LQqgD,EAAab,UAAUkoB,GA5L/B,gBA4LPrwD,EA5LOo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,6BAAAu7D,EAAAzrE,KAAA,IA+LiBpR,EAAKsgC,aAAa/6B,GAAY,EAAMuxC,GA/LrD,gBA+LD/W,EA/LC88C,EAAA1pE,OAgM+B,OAArB4sB,EAAUQ,SACzB9X,EAASsX,EAAUQ,QAjMds8C,EAAAv7D,OAAA,6BAAAu7D,EAAAv7D,OAAA,6BAAAu7D,EAAAzrE,KAAA,IAuMapR,EAAKsgC,aAAa/6B,GAAY,EAAMuxC,GAvMjD,cAuML8jC,EAvMKiC,EAAA1pE,OA2M2B,OAArBynE,EAAUp6C,OA3MhB,CAAAq8C,EAAAzrE,KAAA,aA4MTqX,EAASmyD,EAAUp6C,QAEfo4C,EA9MK,CAAAiE,EAAAzrE,KAAA,iBAAAyrE,EAAAzrE,KAAA,IA+MgBpR,EAAK+8E,cA/MrB,UA+MDlC,EA/MCgC,EAAA1pE,QAiNLsV,EAASA,EAAOnX,KAAKupE,IAjNhB,gBAAAgC,EAAAv7D,OAAA,6BAAAu7D,EAAAzrE,KAAA,IA2NDqP,QAAQkD,IAAI,CACpB3jB,EAAKs7B,kBAAkB/1B,GACvBvF,EAAKo2D,kBAAkB,CAACtxD,GAAO+B,GAC/B7G,EAAKw4E,eAAe,mBAAmB1zE,EAAMS,EAAYsB,KA9NhD,YAAAi0E,EAAA+B,EAAA1pE,KAAA4nE,EAAA/hF,OAAAqnC,EAAA,EAAArnC,CAAA8hF,EAAA,GAwNTppE,EAxNSqpE,EAAA,GAyNTxkB,GAzNSwkB,EAAA,GA0NT7oE,GA1NS6oE,EAAA,KAiOPrpE,GAAc6kD,IAAkBA,GAAezxD,IAjOxC,CAAA+3E,EAAAzrE,KAAA,iBAAAyrE,EAAAzrE,KAAA,IAkO4BpR,EAAKs7B,kBAAkB/1B,EAAYgxD,GAAezxD,GAAOwC,aAlOrF,SAkOH0zE,GAlOG6B,EAAA1pE,KAmOTsV,EAASzoB,EAAKqR,MAAMK,GAAYmR,IAAIm4D,IAAwBzpE,MAAM,GAAG9C,MAAM,KAAKoU,IAAI3Q,IAAMzD,MAAM,KAnOvF,gBAAAouE,EAAAv7D,OAAA,6BAAAu7D,EAAAzrE,KAAA,IA0ODqP,QAAQkD,IAAI,CACpB3jB,EAAKw4E,eAAe,mBAAmB1zE,EAAMS,EAAYsB,GACzD7G,EAAKw4E,eAAe,eAAe1zE,EAAMS,EAAYsB,KA5O5C,gBAAAo0E,GAAA4B,EAAA1pE,KAAA+nE,GAAAliF,OAAAqnC,EAAA,EAAArnC,CAAAiiF,GAAA,GAwOTE,GAxOSD,GAAA,GAyOTr7C,GAzOSq7C,GAAA,GA+OPC,IAAoBt7C,KACtBpX,EAASoX,GAAapxB,MAAM,KAAKoU,IAAIs4D,KAhP5B0B,EAAAv7D,OAAA,0BAoPeza,EApPf,CAAAg2E,EAAAzrE,KAAA,iBAAAyrE,EAAAzrE,KAAA,IAoP+BpR,EAAK02D,oBAAoB,CAAC5xD,GAAO+B,GApPhE,SAAAg2E,EAAAY,GAAAZ,EAAA1pE,KAAA0pE,EAAAzrE,KAAA,mBAAAyrE,EAAAY,IAoP2E,EApP3E,gBAoPLrC,GApPKyB,EAAAY,KAqPcrC,GAAkBt2E,KACzC2jB,EAAS2yD,GAAkBt2E,IAtPlB+3E,EAAAv7D,OAAA,0BA0PFza,EA1PE,CAAAg2E,EAAAzrE,KAAA,iBAAAyrE,EAAAzrE,KAAA,IA0PcpR,EAAKmgC,mBAAmB56B,EAAYsB,GA1PlD,SAAAg2E,EAAAa,GAAAb,EAAA1pE,KAAA0pE,EAAAzrE,KAAA,mBAAAyrE,EAAAa,IA0P6D,EA1P7D,gBA0PXj1D,EA1PWo0D,EAAAa,GAAAb,EAAAv7D,OAAA,0BAiQPtoB,OAAOmF,KAAKomC,GAAWx/B,SAASD,GAjQzB,CAAA+3E,EAAAzrE,KAAA,iBAkQHkpE,GAAiB/1C,EAAUz/B,GAC3BwtB,GAAiBtyB,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS,QAnQrD81E,EAAA1rE,KAAA,IAAA0rE,EAAAzrE,KAAA,IAqQQpR,EAAKgvD,yBAAyB18B,GAAegoD,IArQrD,SAqQP7xD,EArQOo0D,EAAA1pE,KAAA0pE,EAAAzrE,KAAA,mBAAAyrE,EAAA1rE,KAAA,IAAA0rE,EAAAc,GAAAd,EAAA,oBAyQJp0D,IAAUzoB,EAAKqR,MAAMoX,GAAQ9qB,UAChC8qB,EAAS,KA1QFo0D,EAAAzrE,KAAA,0BAAAyrE,EAAAzrE,KAAA,IA6QMpR,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAO,cA7QvD,SA6QT2jB,EA7QSo0D,EAAA1pE,KAAA,gBAAA0pE,EAAAv7D,OAAA,6BAAAu7D,EAAAzrE,KAAA,IAiRIpR,EAAK49E,iBAAiBr4E,EAAYsB,GAjRtC,gBAiRX4hB,EAjRWo0D,EAAA1pE,KAAA0pE,EAAAv7D,OAAA,0BAoRPtoB,OAAOmF,KAAKomC,GAAWx/B,SAASD,GApRzB,CAAA+3E,EAAAzrE,KAAA,iBAAAyrE,EAAAzrE,KAAA,IAqRMpR,EAAKyyB,gBAAgB3tB,EAAM+B,GArRjC,UAqRT4hB,EArRSo0D,EAAA1pE,QAsRMsV,EAAO9qB,UACpB8qB,EAAS,KAvRFo0D,EAAAzrE,KAAA,uBA0RUvK,EA1RV,CAAAg2E,EAAAzrE,KAAA,iBAAAyrE,EAAAzrE,KAAA,IA0R0BpR,EAAKyyB,gBAAgBltB,EAAYT,MAAM+B,GA1RjE,SAAAg2E,EAAAgB,GAAAhB,EAAA1pE,KAAA0pE,EAAAzrE,KAAA,mBAAAyrE,EAAAgB,IA0R4E,EA1R5E,UA0RLpyD,GA1RKoxD,EAAAgB,MA2RYpyD,GAAa9tB,UAChC8tB,GAAe,KAEjBhD,EAASgD,GA9RA,gBAAAoxD,EAAAv7D,OAAA,0BAkScza,EAlSd,CAAAg2E,EAAAzrE,KAAA,iBAAAyrE,EAAAzrE,KAAA,IAkS8BpR,EAAKyyB,gBAAgBltB,EAAY81B,KAAKv2B,MAAM+B,GAlS1E,SAAAg2E,EAAAiB,GAAAjB,EAAA1pE,KAAA0pE,EAAAzrE,KAAA,mBAAAyrE,EAAAiB,IAkSqF,EAlSrF,gBAkSLzqE,GAlSKwpE,EAAAiB,MAoSTr1D,EAASpV,IApSAwpE,EAAAv7D,OAAA,6BAAAu7D,EAAAzrE,KAAA,IAwSgDqP,QAAQkD,IAAI,CACrE3jB,EAAKw4E,eAAe,MAAM1zE,EAAMS,EAAYsB,GAAQ,GACpD7G,EAAKw4E,eAAe,aAAa1zE,EAAMS,EAAYsB,GAAQ,GAC3D7G,EAAKw4E,eAAe,oBAAoB1zE,EAAMS,EAAYsB,GAAQ,KA3SzD,gBAAAy0E,GAAAuB,EAAA1pE,KAAAooE,GAAAviF,OAAAqnC,EAAA,EAAArnC,CAAAsiF,GAAA,GAwSNE,GAxSMD,GAAA,GAwSIE,GAxSJF,GAAA,GAwSgBG,GAxShBH,GAAA,GA8SPI,GAAuB,KAEvBD,IAA0BF,IAAaC,KACnC1B,GAAiB0B,GAAYhtE,MAAM+sE,GAAU34D,IAAI,MACvD84D,GAAuBD,GAAuBpqE,KAAKyoE,KAKrDtxD,EAAS,CACPkzD,wBACAD,2BAzTSmB,EAAAv7D,OAAA,0BA6TPtoB,OAAOmF,KAAKomC,GAAWx/B,SAASD,GA7TzB,CAAA+3E,EAAAzrE,KAAA,iBA8THkpE,GAAiB/1C,EAAUz/B,GA9TxB+3E,EAAAzrE,KAAA,IA+TMpR,EAAK+9E,uBAAuBzD,GAAezzE,EAAQiyE,GA/TzD,SA+TTrwD,EA/TSo0D,EAAA1pE,KAAA0pE,EAAAzrE,KAAA,0BAAAyrE,EAAAzrE,KAAA,IAqUCqP,QAAQkD,IAAI,CACpB3jB,EAAKs7B,kBAAkB/1B,GACvBvF,EAAKw4E,eAAe,mBAAmB1zE,EAAMS,EAAYsB,GACzDiwC,EAAe92C,EAAKmkC,6BAA6Bt9B,EAAQiyE,EAAwBh0E,GAAS,OAxUnF,SAAAg3E,GAAAe,EAAA1pE,KAAA4oE,GAAA/iF,OAAAqnC,EAAA,EAAArnC,CAAA8iF,GAAA,GAkUPE,GAlUOD,GAAA,GAmUPE,GAnUOF,GAAA,GAoUPG,GApUOH,GAAA,GA2ULE,IAAqBD,KACjBvwD,GAAewwD,GAAkBxtE,MAAMutE,IACzCI,GAAoB3wD,GACpBywD,KAAqBl8E,EAAKqR,MAAM6qE,IAAkBv+E,UACpDy+E,GAAoBA,GAAkB9qE,KAAKtR,EAAKqR,MAAM6qE,MAExDzzD,EAAS2zD,IAjVF,gBAAAS,EAAAv7D,OAAA,6BAAAu7D,EAAAzrE,KAAA,IAuV4CqP,QAAQkD,IAAI,CACjE3jB,EAAKw4E,eAAe,kBAAkB1zE,EAAMS,EAAYsB,GACxD7G,EAAKw4E,eAAe,yBAAyB1zE,EAAMS,EAAYsB,KAzVtD,gBAAAw1E,GAAAQ,EAAA1pE,KAAAmpE,GAAAtjF,OAAAqnC,EAAA,EAAArnC,CAAAqjF,GAAA,GAuVNE,GAvVMD,GAAA,GAuVWE,GAvVXF,GAAA,GA4VNC,KACHA,GAAmBv8E,EAAKqR,MAAM,IAG3BmrE,KACHA,GAA0Bx8E,EAAKqR,MAAM,IAGvCoX,EAAS+zD,GAAwBjrE,MAAMgrE,IApW5BM,EAAAv7D,OAAA,6BAAAu7D,EAAAzrE,KAAA,IAuWiCqP,QAAQkD,IAAI,CACtD3jB,EAAKw4E,eAAe,aAAa1zE,EAAMS,EAAYsB,GAAQ,GAC3D7G,EAAKw4E,eAAe,oBAAoB1zE,EAAMS,EAAYsB,GAAQ,KAzWzD,gBAAA41E,GAAAI,EAAA1pE,KAAAupE,GAAA1jF,OAAAqnC,EAAA,EAAArnC,CAAAyjF,GAAA,GAuWNzrE,GAvWM0rE,GAAA,GAuWKC,GAvWLD,GAAA,GA4WN1rE,KACHA,GAAahR,EAAKqR,MAAM,IAErBsrE,KACHA,GAAqB38E,EAAKqR,MAAM,KAGlCoX,EAASk0D,GAAmBprE,MAAMP,KAIvBQ,GAAGxR,EAAKqR,MAAM,MACvBoX,EAASzoB,EAAKqR,MAAM,IAxXXwrE,EAAAv7D,OAAA,6BAAAu7D,EAAAv7D,OAAA,6BAAAu7D,EAAAv7D,OAAA,SA+XRmH,GA/XQ,0BAAAo0D,EAAAjrE,SAAA8mE,EAAAr/E,KAAA,gBAltFC,gBAAA2kF,EAAAC,EAAAC,EAAAC,GAAA,OAAA1F,EAAA3mE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAmlGlB+kF,mBAnlGkB,eAAAC,EAAArlF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAmlGG,SAAAytE,EAAOnkB,GAAP,IAAA7yD,EAAAknD,EAAAtoC,EAAAq4D,EAAAC,EAAAl+E,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAwtE,GAAA,cAAAA,EAAAttE,KAAAstE,EAAArtE,MAAA,UAAiB9J,EAAjBk3E,EAAAriF,OAAA,QAAAoE,IAAAi+E,EAAA,GAAAA,EAAA,GAA6B,SAC1ChwB,EADa,mBAAAjtD,OACsB44D,EADtB,KAAA54D,OACmC+F,KAChD4e,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAHvB,CAAA8gF,EAAArtE,KAAA,eAAAqtE,EAAAn9D,OAAA,SAIVthB,EAAKqR,MAAM6U,IAJD,cAAAu4D,EAAArtE,KAAA,EAOSpR,EAAKoxB,oBAAoB+oC,EAAU,cAAc,GAAG,GAAG7yD,GAPhE,YAOfi3E,EAPeE,EAAAtrE,MAAA,CAAAsrE,EAAArtE,KAAA,gBASjBmtE,EAAkBv+E,EAAKqR,MAAMktE,GATZE,EAAAn9D,OAAA,SAUVthB,EAAKsvD,8BAA8Bd,EAAc+vB,IAVvC,eAAAE,EAAAn9D,OAAA,SAaZ,MAbY,yBAAAm9D,EAAA7sE,SAAA0sE,EAAAjlF,SAnlGH,gBAAAqlF,GAAA,OAAAL,EAAAvsE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAkmGlBslF,yBAlmGkB,eAAAC,EAAA5lF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAkmGS,SAAAguE,EAAOt5E,EAAYsB,GAAnB,IAAAS,EAAAw3E,EAAAC,EAAAn1B,EAAAl4C,EAAAqlD,EAAAioB,EAAAC,EAAA3+E,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAiuE,GAAA,cAAAA,EAAA/tE,KAAA+tE,EAAA9tE,MAAA,UAA2B9J,EAA3B23E,EAAA9iF,OAAA,QAAAoE,IAAA0+E,EAAA,GAAAA,EAAA,GAAuC,SAChEp4E,EAAUA,GAAW7G,EAAK1G,MAAMuN,QADP,CAAAq4E,EAAA9tE,KAAA,eAAA8tE,EAAA59D,OAAA,SAGhB,MAHgB,cAAA49D,EAAA9tE,KAAA,EAUfqP,QAAQkD,IAAI,CACpB3jB,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAO,MAAO,GAAI,GAAIwC,GAChEtH,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAO,aAAc,GAAI,GAAIwC,GACvEtH,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAO,gBAAiB,CAAC+B,GAAU,GAAIS,KAb1D,UAAAw3E,EAAAI,EAAA/rE,KAAA4rE,EAAA/lF,OAAAqnC,EAAA,EAAArnC,CAAA8lF,EAAA,GAOvBl1B,EAPuBm1B,EAAA,GAQvBrtE,EARuBqtE,EAAA,GASvBhoB,EATuBgoB,EAAA,GAgBzBn1B,EAAM5pD,EAAKqR,MAAMu4C,GACjBl4C,EAAa1R,EAAKqR,MAAMK,GACxBqlD,EAAe/2D,EAAKqR,MAAM0lD,GAErBrlD,EAAW/T,SAAYo5D,EAAap5D,SAAYisD,EAAIjsD,SAAYqC,EAAKqR,MAAM0lD,GAAcooB,GAAG,KAAMn/E,EAAKqR,MAAMK,GAAYyC,GAAGnU,EAAKqR,MAAM0lD,IApBnH,CAAAmoB,EAAA9tE,KAAA,gBAqBjB4tE,EAAYh/E,EAAKgsC,aAAahsC,EAAKqR,MAAMK,GAAYH,MAAMhK,SAASqiD,EAAI/mC,IAAI,KAAKpU,MAAMiD,EAAWH,MAAMwlD,OArBvFmoB,EAAA59D,OAAA,SAsBhB09D,GAtBgB,eAAAE,EAAA59D,OAAA,SAyBlB5P,GAzBkB,yBAAAwtE,EAAAttE,SAAAitE,EAAAxlF,SAlmGT,gBAAA+lF,EAAAC,GAAA,OAAAT,EAAA9sE,MAAAzY,KAAAiH,YAAA,GAAAjH,KA6nGlBiiC,kBA7nGkB,eAAAgkD,EAAAtmF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA6nGE,SAAA0uE,EAAOh6E,GAAP,IAAA+B,EAAAqM,EAAA66C,EAAAtoC,EAAAloB,EAAA0T,EAAAmB,EAAAulC,EAAAD,EAAAqnC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7/E,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAmvE,GAAA,cAAAA,EAAAjvE,KAAAivE,EAAAhvE,MAAA,UAAmB9J,EAAnB64E,EAAAhkF,OAAA,QAAAoE,IAAA4/E,EAAA,GAAAA,EAAA,GAA+B,SAASxsE,EAAxCwsE,EAAAhkF,OAAA,QAAAoE,IAAA4/E,EAAA,IAAAA,EAAA,GAEZ3xB,EAFY,kBAAAjtD,OAEsBgE,EAAY81B,KAAKv2B,MAFvC,KAAAvD,OAEgD+F,KAE1D4e,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAL1B,CAAAyiF,EAAAhvE,KAAA,eAAAgvE,EAAA9+D,OAAA,SAMPthB,EAAKqR,MAAM6U,IANJ,cAUdloB,EAAWuH,EAAYvH,SAVToiF,EAAAhvE,KAAA,EAYKpR,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAM,aAAa,GAAG,GAAGwC,GAZxE,WAYdoK,EAZc0uE,EAAAjtE,QAeCQ,EAfD,CAAAysE,EAAAhvE,KAAA,gBAgBVyB,EAAyC,SAAhC7S,EAAK1G,MAAMwZ,iBACpBslC,EAAiB7wC,SAASoM,GAAY,KACtCwkC,EAAe5wC,SAASoM,GAAY,KAlB1BysE,EAAAhvE,KAAA,GAmBQpR,EAAKkT,gBAAgB3N,EAAYgJ,QAAQsE,EAAOulC,EAAeD,GAAa,GAnBpF,QAmBVqnC,EAnBUY,EAAAjtE,KAqBZssE,EAAc,CAChB90E,KAAK,KACLo1E,SAAS,MAGPL,EAAa,CACf/0E,KAAK,KACLo1E,SAAS,MAGXP,EAAUphF,QAAS,SAAAgO,GACjB,IAAM2zE,EAAW56E,KAAK2hE,IAAIv/D,SAAS6E,EAAEuH,WAAWpM,SAASoM,IACrDpM,SAAS6E,EAAEuH,WAAWpM,SAASoM,MAAgB8rE,EAAYM,UAAYA,EAASN,EAAYM,YAC9FN,EAAYM,SAAWA,EACvBN,EAAY90E,KAAOyB,GAGjB7E,SAAS6E,EAAEuH,WAAWpM,SAASoM,KAAe+rE,EAAWK,WAC3DL,EAAWK,SAAWA,EACtBL,EAAW/0E,KAAOyB,KAKlBqzE,EAAY90E,MAAQ+0E,EAAW/0E,OAC3Bg1E,EAAmB3/E,EAAKqR,MAAMouE,EAAY90E,KAAKoJ,WAC/C6rE,EAAkB5/E,EAAKqR,MAAMquE,EAAW/0E,KAAKoJ,WAC7C8rE,EAAa7/E,EAAKqR,MAAMouE,EAAY90E,KAAKgJ,WACzCmsE,EAAY9/E,EAAKqR,MAAMquE,EAAW/0E,KAAKgJ,WACvCosE,EAAWD,EAAUvuE,MAAMsuE,GAC3BG,EAAYJ,EAAgBruE,MAAMouE,GAClCM,EAAoBD,EAAUn9D,IAAIk9D,GAClCG,EAA0BlgF,EAAKqR,MAAMsC,GAAWpC,MAAMsuE,GAC5DnuE,EAAaiuE,EAAiBruE,KAAK2uE,EAAkBxxE,MAAMyxE,KAtD7C,eA2DdxuE,IAAe1R,EAAKqR,MAAMK,GAAY/T,UACxC+T,EAAa1R,EAAKgU,iBAAiBtC,EAAW1T,MAI3C0T,GAAc1R,EAAKqR,MAAMK,GAAY/T,SAAWqC,EAAKqR,MAAMK,GAAYF,GAAG,MAC7EE,EAAa1R,EAAKqR,MAAM,IAIxBrR,EAAKsvD,8BAA8Bd,EAAc98C,GArEjC0uE,EAAA9+D,OAAA,SA0EX5P,GA1EW,yBAAA0uE,EAAAxuE,SAAA2tE,EAAAlmF,SA7nGF,gBAAAgnF,GAAA,OAAAf,EAAAxtE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAysGlBinF,gBAAkB,WAOhB,OANItgF,EAAK1G,MAAMgnF,iBAAyD,oBAA/BtgF,EAAK1G,MAAMgnF,iBAElDtgF,EAAK1G,MAAMgnF,mBAIN,GAhtGSjnF,KAqtGlB8sB,cAAgB,SAACpkB,EAAI4I,GAAiB,IAAZ6sC,EAAYl3C,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAR,IAI5B,OAHIN,EAAK1G,MAAM6sB,eAAqD,oBAA7BnmB,EAAK1G,MAAM6sB,eAChDnmB,EAAK1G,MAAM6sB,cAAcpkB,EAAI4I,EAAK6sC,GAE7B7sC,GAztGStR,KA2tGlBi2D,8BAAgC,SAACvtD,EAAI4I,GAAiB,IAAZ6sC,EAAYl3C,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAR,IAI5C,OAHIN,EAAK1G,MAAM6sB,eAAqD,oBAA7BnmB,EAAK1G,MAAM6sB,eAChDnmB,EAAK1G,MAAM6sB,cAAcpkB,EAAI4I,EAAK6sC,GAAI,GAEjC7sC,GA/tGStR,KAiuGlBg2D,8BAAgC,SAACttD,GAA0B,IAAtB4jB,EAAsBrlB,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KAChD,OAAON,EAAKunE,cAAcxlE,EAAI4jB,GAAa,IAluG3BtsB,KAouGlBkuE,cAAgB,SAACxlE,GAAgD,IAA5C4jB,EAA4CrlB,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAA/B,KAAKigF,EAA0BjgF,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,IAAAA,UAAA,GAC3D4lB,EAAa,KAejB,OAdAnkB,EAAMA,EAAI2C,cAEN1E,EAAK1G,MAAM4sB,YAAclmB,EAAK1G,MAAM4sB,WAAWnkB,GACjDmkB,EAAalmB,EAAK1G,MAAM4sB,WAAWnkB,GAE1Bw+E,IAGPr6D,GAFFA,EAAalmB,EAAKo8D,cAAc,gBACdl2C,EAAWnkB,GACdmkB,EAAWnkB,GAEX,MAIbmkB,GAAcA,EAAWvb,QAAUub,EAAW0nB,gBAAkB1nB,EAAW0nB,gBAAgBrmC,SAAS5B,KAAKouB,MAAM,MAC1G7N,EAAWvb,KAEbgb,GAvvGStsB,KAyvGlBo3D,iBAzvGkB,eAAA+vB,EAAAxnF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAyvGC,SAAA4vE,EAAOnJ,EAAW/xE,GAAlB,IAAAm7E,EAAAC,EAAAxqB,EAAAyqB,EAAAC,EAAA,OAAA50D,EAAApzB,EAAAoY,KAAA,SAAA6vE,GAAA,cAAAA,EAAA3vE,KAAA2vE,EAAA1vE,MAAA,cAAA0vE,EAAA1vE,KAAA,EAIPqP,QAAQkD,IAAI,CACpB3jB,EAAKyyB,gBAAgBltB,EAAY81B,KAAKv2B,MAAMwyE,GAAW,GACvDt3E,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAM,iBANjC,cAAA47E,EAAAI,EAAA3tE,KAAAwtE,EAAA3nF,OAAAqnC,EAAA,EAAArnC,CAAA0nF,EAAA,GAEfvqB,EAFewqB,EAAA,GAGfC,EAHeD,EAAA,GASbE,EAAY7gF,EAAKqR,MAAM,GACvB8kD,GAAqByqB,IACvBC,EAAY7gF,EAAKqR,MAAM8kD,GAAmBtzC,IAAI7iB,EAAKqR,MAAMuvE,KAX1CE,EAAAx/D,OAAA,SAcVu/D,GAdU,wBAAAC,EAAAlvE,SAAA6uE,EAAApnF,SAzvGD,gBAAA0nF,EAAAC,GAAA,OAAAR,EAAA1uE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAywGlBitC,WAAa,SAAC3P,GACZ,OAAOluB,OAAOC,KAAKiuB,EAAI,SAAS,aA1wGhBt9B,KA4wGlBupC,mBA5wGkB5pC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA4wGG,SAAAowE,IAAA,IAAAp6E,EAAAs7B,EAAAzvB,EAAAkyB,EAAAs8C,EAAA5gF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAkwE,GAAA,cAAAA,EAAAhwE,KAAAgwE,EAAA/vE,MAAA,UAAOvK,EAAPq6E,EAAA/kF,OAAA,QAAAoE,IAAA2gF,EAAA,GAAAA,EAAA,GAAe,KAC5B/+C,EAAkB,GACxBt7B,EAAUA,GAAW7G,EAAK1G,MAAMuN,QAFb,CAAAs6E,EAAA/vE,KAAA,eAAA+vE,EAAA7/D,OAAA,SAKV6gB,GALU,UAQbzvB,EAAgBnL,SAAS5B,KAAKouB,MAAM,OACpC6Q,EAAsB5kC,EAAK+G,gBAAgB,CAAC,QAAQ,mBAClCksB,QAVL,CAAAkuD,EAAA/vE,KAAA,gBAAA+vE,EAAA/vE,KAAA,GAWXpR,EAAKyQ,aAAam0B,EAAoBtrC,MAAMq0C,UAA5C,eAAAyzC,EAAApoF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAuD,SAAAwwE,EAAOvzC,GAAP,IAAAhpC,EAAAw8E,EAAA/7E,EAAAkM,EAAA65B,EAAAj9B,EAAAkzE,EAAAl7C,EAAA1mC,EAAAiuC,EAAA,OAAA3hB,EAAApzB,EAAAoY,KAAA,SAAAuwE,GAAA,cAAAA,EAAArwE,KAAAqwE,EAAApwE,MAAA,cACrDtM,EAAQ,QACRw8E,EAAiBxzC,EAAS5B,OAC1B3mC,EAAc+7E,EAAex8E,GAHwB08E,EAAApwE,KAAA,EAKrDpR,EAAK1G,MAAM+0B,aAAa9oB,EAAYtG,KAAKsG,EAAYgJ,QAAQhJ,EAAY+oB,KALpB,cAAAkzD,EAAApwE,KAAA,EAOrCpR,EAAKyyB,gBAAgBltB,EAAYtG,KAAK4H,GAPD,QAOrD4K,EAPqD+vE,EAAAruE,OAQ5C1B,EAAQ0C,GAAG,KAClBm3B,EAAawC,EAASxC,WACtBj9B,EAAeu2B,EAAoB5pC,MACnCumF,EAAgB38C,EAAoBx7B,MACpCi9B,EAAezB,EAAoByB,aACnC1mC,EAASmuC,EAAS/B,qBAAqBr5B,EAAgB,UAAY,SACnEk7B,EAAiB8kB,IAAoC,IAA7B5kB,EAAS/B,qBAA0B9X,MAAMtf,OAAO,uBAAuB,OACrGwtB,EAAgBh8B,KAAK,CACnBrB,QACAnF,SACA8R,UACA65B,aACAj9B,eACAg4B,eACAk7C,gBACA3zC,oBAvBuD,wBAAA4zC,EAAA5vE,SAAAyvE,EAAAhoF,SAAvD,gBAAAooF,GAAA,OAAAL,EAAAtvE,MAAAzY,KAAAiH,YAAA,IAXW,eAAA6gF,EAAA7/D,OAAA,SAwCZ6gB,GAxCY,yBAAAg/C,EAAAvvE,SAAAqvE,EAAA5nF,SA5wGHA,KAszGlBkvC,4BAtzGkB,eAAAm5C,EAAA1oF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAszGY,SAAA8wE,EAAO31B,GAAP,IAAAzQ,EAAA8b,EAAAG,EAAAoqB,EAAAl7E,EAAA,OAAAulB,EAAApzB,EAAAoY,KAAA,SAAA4wE,GAAA,cAAAA,EAAA1wE,KAAA0wE,EAAAzwE,MAAA,UACtBmqC,EAAkBv7C,EAAK+G,gBAAgB,CAAC,UAAU,sBAClDswD,EAAgBr3D,EAAK+G,gBAAgB,CAAC,UAAU,YAAY,eAChDksB,UAAWokC,EAAcvb,UAAUP,GAHzB,CAAAsmC,EAAAzwE,KAAA,gBAIpBomD,EAAkBH,EAAcvb,UAAUP,GAC1CqmC,EALoB,GAAArgF,OAKGi2D,EALH,aAAAj2D,OAK8BwtC,EAAIopB,wBALlC,2CAAA52D,OAKmGyqD,EALnG,cAAA61B,EAAAzwE,KAAA,EAMCpR,EAAKs4D,kBAAkBspB,EAAkB,MAAK,GAN/C,YAMpBl7E,EANoBm7E,EAAA1uE,OAOyB,kBAAxBzM,EAAa2xD,OAPd,CAAAwpB,EAAAzwE,KAAA,gBAAAywE,EAAAvgE,OAAA,SAQjB5a,EAAa2xD,OAAOt4D,OAAQ,SAAA6E,GAAE,MAAgB,+CAAZA,EAAGkJ,MAAyDlJ,EAAG6uD,GAAG/uD,gBAAkBsnD,EAAgBtnD,iBARrH,eAAAm9E,EAAAvgE,OAAA,SAWrB,MAXqB,yBAAAugE,EAAAjwE,SAAA+vE,EAAAtoF,SAtzGZ,gBAAAyoF,GAAA,OAAAJ,EAAA5vE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAm0GlBwpC,mBAn0GkB7pC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAm0GG,SAAAkxE,IAAA,IAAAl7E,EAAAm7E,EAAAr9C,EAAA6pB,EAAAtoC,EAAAoc,EAAA98B,EAAAy8E,EAAA3hF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAixE,GAAA,cAAAA,EAAA/wE,KAAA+wE,EAAA9wE,MAAA,UAAOvK,EAAPo7E,EAAA9lF,OAAA,QAAAoE,IAAA0hF,EAAA,GAAAA,EAAA,GAAe,KAAKD,EAApBC,EAAA9lF,OAAA,QAAAoE,IAAA0hF,EAAA,GAAAA,EAAA,GAAqC,KACxDp7E,EAAUA,GAAW7G,EAAK1G,MAAMuN,QADb,CAAAq7E,EAAA9wE,KAAA,eAAA8wE,EAAA5gE,OAAA,SAGV,MAHU,WAMbqjB,EAAqB3kC,EAAK+G,gBAAgB,CAAC,QAAQ,kBACjCksB,QAPL,CAAAivD,EAAA9wE,KAAA,eAAA8wE,EAAA5gE,OAAA,SAQV,MARU,UAWbktC,EAXa,mBAAAjtD,OAWsBsF,EAXtB,KAAAtF,OAWiCygF,KAC9C97D,EAAalmB,EAAKunE,cAAc/Y,IAZnB,CAAA0zB,EAAA9wE,KAAA,gBAAA8wE,EAAA5gE,OAAA,SAcV4E,GAdU,eAiBboc,EAAkB,GAClB98B,EAAkBm/B,EAAmBrrC,MAAMkM,gBAlB9B08E,EAAA9wE,KAAA,GAmBbpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAA28E,EAAAnpF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAAuxE,EAAOt9E,GAAP,IAAAS,EAAA8iC,EAAAlB,EAAA2B,EAAAu5C,EAAAC,EAAA95C,EAAAO,EAAAC,EAAAC,EAAAtC,EAAAhD,EAAAF,EAAA9jC,EAAAqnC,EAAA,OAAA/a,EAAApzB,EAAAoY,KAAA,SAAAsxE,GAAA,cAAAA,EAAApxE,KAAAoxE,EAAAnxE,MAAA,cAC7C7L,EAAcC,EAAgBV,GAC9BujC,EAAoB9iC,EAAY8iC,kBAFak6C,EAAAnxE,KAAA,EAG7CpR,EAAK1G,MAAM+0B,aAAaga,EAAkBppC,KAAKopC,EAAkB95B,QAAQ85B,EAAkB/Z,KAH9C,cAAAi0D,EAAAnxE,KAAA,EAItBpR,EAAKoxB,oBAAoBiX,EAAkBppC,KAAK,aAJ1B,OAI7CkoC,EAJ6Co7C,EAAApvE,KAK1C21B,EAAa,EAL6B,YAK1BA,GAAcvhC,SAAS4/B,IALG,CAAAo7C,EAAAnxE,KAAA,gBAAAmxE,EAAAnxE,KAAA,GAWvCqP,QAAQkD,IAAI,CACpB3jB,EAAKuoC,4BAA4BF,EAAkB95B,SACnDvO,EAAKoxB,oBAAoBiX,EAAkBppC,KAAK,cAAc,CAAC6pC,IAC/D9oC,EAAKoxB,oBAAoBiX,EAAkBppC,KAAK,sBAAsB,CAAC6pC,IACvE9oC,EAAKoxB,oBAAoBiX,EAAkBppC,KAAK,gBAAgB,CAACe,EAAK1G,MAAMuN,QAAQiiC,MAfrC,WAAAu5C,EAAAE,EAAApvE,KAAAmvE,EAAAtpF,OAAAqnC,EAAA,EAAArnC,CAAAqpF,EAAA,GAO/C75C,EAP+C85C,EAAA,GAQ/Cv5C,EAR+Cu5C,EAAA,GAS/Ct5C,EAT+Cs5C,EAAA,GAU/Cr5C,EAV+Cq5C,EAAA,GAiB7C37C,EAAc,KACdhD,EAAe,KACfF,EAAgB,KAChBsF,GAA6B,OAAfA,IAChBpC,EAAc3mC,EAAKgU,iBAAiB+0B,EAAWxjC,EAAYvH,WAExC,OAAjBirC,EAvB6C,CAAAs5C,EAAAnxE,KAAA,YAwB/C43B,EAAchpC,EAAKgU,iBAAiBg1B,EAAY,MAChDC,EAAejpC,EAAKgU,iBAAiBi1B,EAAa1jC,EAAYvH,WAC7CmW,GAAG,GA1B2B,CAAAouE,EAAAnxE,KAAA,YA2B7CqyB,EAAgBwF,GAGhBtF,EAAesF,EAAax6B,MAAMu6B,GAAanmB,IAAI8jB,IAClCxyB,GAAG60B,KAClBrF,EAAeqF,GAGXrpC,EAASmpC,EAAa3B,GAAkBxD,EAAaxvB,GAAG,GAAK,WAAa,UAEvD,OAArB6tE,GAA6BA,EAAiBt9E,gBAAkB/E,EArCvB,CAAA4iF,EAAAnxE,KAAA,gBAAAmxE,EAAAjhE,OAAA,kBAyCvC0lB,EAAgBwB,GAAmBA,EAAgBrsC,OAASqsC,EAAgB,GAAK,KAEvFlG,EAAgBx9B,GAAS,CACvBnF,SACAgnC,cACAhD,eACAF,gBACAuD,iBAhD2C,QAKe8B,IALfy5C,EAAAnxE,KAAA,iCAAAmxE,EAAA3wE,SAAAwwE,EAAA/oF,SAA/C,gBAAAmpF,GAAA,OAAAL,EAAArwE,MAAAzY,KAAAiH,YAAA,IAnBa,eAAA4hF,EAAA5gE,OAAA,SA0EZthB,EAAKmmB,cAAcqoC,EAAclsB,IA1ErB,yBAAA4/C,EAAAtwE,SAAAmwE,EAAA1oF,SAn0GHA,KA+4GlB+/B,cA/4GkB,eAAAqpD,EAAAzpF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+4GF,SAAA6xE,EAAOpL,GAAP,IAAAqL,EAAAr7E,EAAAknD,EAAAtoC,EAAAuF,EAAAm3D,EAAAtiF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA4xE,GAAA,cAAAA,EAAA1xE,KAAA0xE,EAAAzxE,MAAA,UAAkBuxE,IAAlBC,EAAAzmF,OAAA,QAAAoE,IAAAqiF,EAAA,KAAAA,EAAA,GAAmCt7E,EAAnCs7E,EAAAzmF,OAAA,QAAAoE,IAAAqiF,EAAA,GAAAA,EAAA,GAA+C,SACxDtL,EADS,CAAAuL,EAAAzxE,KAAA,eAAAyxE,EAAAvhE,OAAA,UAEL,GAFK,UAMRktC,EANQ,cAAAjtD,OAMsB+1E,EANtB,KAAA/1E,OAMoCohF,EANpC,KAAAphF,OAMmD+F,GAC7C,WAAhBA,EAPU,CAAAu7E,EAAAzxE,KAAA,aAQN8U,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAT9B,CAAAklF,EAAAzxE,KAAA,eAAAyxE,EAAAvhE,OAAA,SAUHthB,EAAKqR,MAAM6U,IAVR,cAAA28D,EAAAzxE,KAAA,GAcWpR,EAAK1G,MAAM2nB,KAAKC,IAAI6sC,WAAWupB,GAd1C,aAcV7rD,EAdUo3D,EAAA1vE,MAAA,CAAA0vE,EAAAzxE,KAAA,YAiBRuxE,IACFl3D,EAAezrB,EAAKgU,iBAAiByX,EAAa,MAGpDA,EAAezrB,EAAKqR,MAAMoa,IAGR9tB,QAxBN,CAAAklF,EAAAzxE,KAAA,YAyBU,WAAhB9J,EAzBM,CAAAu7E,EAAAzxE,KAAA,gBAAAyxE,EAAAvhE,OAAA,SA0BDthB,EAAKsvD,8BAA8Bd,EAAc/iC,IA1BhD,eAAAo3D,EAAAvhE,OAAA,SA4BDmK,GA5BC,eAAAo3D,EAAAvhE,OAAA,SAgCP,MAhCO,yBAAAuhE,EAAAjxE,SAAA8wE,EAAArpF,SA/4GE,gBAAAypF,GAAA,OAAAL,EAAA3wE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAi7GlBo5B,gBAj7GkB,eAAAswD,EAAA/pF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAi7GA,SAAAmyE,EAAOj2D,EAAauqD,GAApB,IAAAqL,EAAAr7E,EAAAknD,EAAAtoC,EAAA+8D,EAAAC,EAAAtvE,EAAA6X,EAAA03D,EAAA7iF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAmyE,GAAA,cAAAA,EAAAjyE,KAAAiyE,EAAAhyE,MAAA,UAA+BuxE,IAA/BQ,EAAAhnF,OAAA,QAAAoE,IAAA4iF,EAAA,KAAAA,EAAA,GAAgD77E,EAAhD67E,EAAAhnF,OAAA,QAAAoE,IAAA4iF,EAAA,GAAAA,EAAA,GAA4D,SACvE7L,EADW,CAAA8L,EAAAhyE,KAAA,eAAAgyE,EAAA9hE,OAAA,UAEP,GAFO,UAMVktC,EANU,gBAAAjtD,OAMsBwrB,EANtB,KAAAxrB,OAMsC+1E,EANtC,KAAA/1E,OAMoDohF,EANpD,KAAAphF,OAMmE+F,GAC/D,WAAhBA,EAPY,CAAA87E,EAAAhyE,KAAA,aAQR8U,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAT5B,CAAAylF,EAAAhyE,KAAA,eAAAgyE,EAAA9hE,OAAA,SAULthB,EAAKqR,MAAM6U,IAVN,cAAAk9D,EAAAhyE,KAAA,GAiBNqP,QAAQkD,IAAI,CACpB3jB,EAAK8oD,iBAAiB/7B,GACtB/sB,EAAK2sE,mBAAmB5/C,EAAauqD,EAAWhwE,KAnBlC,WAAA27E,EAAAG,EAAAjwE,KAAA+vE,EAAAlqF,OAAAqnC,EAAA,EAAArnC,CAAAiqF,EAAA,GAedrvE,EAfcsvE,EAAA,KAgBdz3D,EAhBcy3D,EAAA,KAAAE,EAAAhyE,KAAA,YAuBVuxE,IACFl3D,EAAezrB,EAAKgU,iBAAiByX,EAAa7X,KAGpD6X,EAAezrB,EAAKqR,MAAMoa,IAGR9tB,QA9BJ,CAAAylF,EAAAhyE,KAAA,YA+BQ,WAAhB9J,EA/BQ,CAAA87E,EAAAhyE,KAAA,gBAAAgyE,EAAA9hE,OAAA,SAgCHthB,EAAKsvD,8BAA8Bd,EAAc/iC,IAhC9C,eAAA23D,EAAA9hE,OAAA,SAkCHmK,GAlCG,QAAA23D,EAAAhyE,KAAA,iBAsCdpR,EAAK2yD,eAAe,gCAAgC5lC,GAtCtC,eAAAq2D,EAAA9hE,OAAA,SAwCT,MAxCS,yBAAA8hE,EAAAxxE,SAAAoxE,EAAA3pF,SAj7GA,gBAAAgqF,EAAAC,GAAA,OAAAP,EAAAjxE,MAAAzY,KAAAiH,YAAA,GAAAjH,KA29GlBkqF,gBAAkB,SAACC,GACjB,GAA+B,oBAApBA,EAAShkE,OAAsB,CACxCgkE,EAAShkE,SACTgkE,EAASC,kBAAkB,EAAG,OAC9B,IAAM/U,EAAM9kD,SAAS85D,YAAY,QAEjC,OADAF,EAASC,kBAAkB,EAAG,GACvB/U,EAET,OAAO,GAn+GSr1E,KAq+GlBsqF,WAAa,SAAChtD,EAAIr9B,EAAMqS,GACtB,IAAMmrB,EAASlN,SAAS9wB,cAAc,UACtCg+B,EAAOxtB,IAAMqtB,EAGTr9B,GACFN,OAAOmF,KAAK7E,GAAO8E,QAAQ,SAACwlF,EAAKv+E,GAC/ByxB,EAAO8sD,GAAQtqF,EAAMsqF,KAID,oBAAbj4E,IACLmrB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BvrB,MAIJmrB,EAAOK,OAASxrB,GAIfmrB,EAAOjvB,IAAO+hB,SAASC,eAAeiN,EAAOjvB,KAChD+hB,SAASo+B,KAAK1wB,YAAYR,IA9/GZz9B,KAigHlBwqF,YAAc,SAAA7wB,GACZ,IACExsD,KAAKkd,MAAMsvC,GACX,MAAOtwD,GACP,OAAO,EAET,OAAO,GAvgHSrJ,KAygHlByqF,aAAe,SAACv1E,GACd,QAAOA,GAAmD,OAAzCA,EAAQw8C,MAAM,wBA1gHf1xD,KA4gHlBszE,mBA5gHkB,eAAAoX,EAAA/qF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA4gHG,SAAAmzE,EAAOj3D,EAAaxe,GAApB,IAAAjH,EAAA28E,EAAA3jF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAizE,GAAA,cAAAA,EAAA/yE,KAAA+yE,EAAA9yE,MAAA,cAA4B9J,EAA5B28E,EAAA9nF,OAAA,QAAAoE,IAAA0jF,EAAA,GAAAA,EAAA,GAAwC,SAC3D11E,EAAUA,GAAoBvO,EAAK1G,MAAMiM,YAAY81B,KAAK9sB,QADvC21E,EAAA9yE,KAAA,EAENpR,EAAKoxB,oBAAoBrE,EAAc,YAAa,CAACxe,GAAU,GAAIjH,GAF7D,cAAA48E,EAAA5iE,OAAA,SAAA4iE,EAAA/wE,MAAA,wBAAA+wE,EAAAtyE,SAAAoyE,EAAA3qF,SA5gHH,gBAAA8qF,EAAAC,GAAA,OAAAL,EAAAjyE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAghHlBgrF,mBAhhHkB,eAAAC,EAAAtrF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAghHG,SAAA0zE,EAAOx3D,EAAaxe,GAApB,OAAA0d,EAAApzB,EAAAoY,KAAA,SAAAuzE,GAAA,cAAAA,EAAArzE,KAAAqzE,EAAApzE,MAAA,cACnB7C,EAAUA,GAAoBvO,EAAK1G,MAAMiM,YAAY81B,KAAK9sB,QADvCi2E,EAAApzE,KAAA,EAENpR,EAAKoxB,oBAAoBrE,EAAc,YAAa,CAACxe,IAF/C,cAAAi2E,EAAAljE,OAAA,SAAAkjE,EAAArxE,MAAA,wBAAAqxE,EAAA5yE,SAAA2yE,EAAAlrF,SAhhHH,gBAAAorF,EAAAC,GAAA,OAAAJ,EAAAxyE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAohHlBsrF,QAphHkB,eAAAC,EAAA5rF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAohHR,SAAAg0E,EAAO93D,GAAP,OAAAd,EAAApzB,EAAAoY,KAAA,SAAA6zE,GAAA,cAAAA,EAAA3zE,KAAA2zE,EAAA1zE,MAAA,cACR2b,EAAeA,GAA8B/sB,EAAK1G,MAAMiM,YAAY81B,KAAKv2B,MADjEggF,EAAA1zE,KAAA,EAEKpR,EAAKoxB,oBAAoBrE,EAAc,WAF5C,cAAA+3D,EAAAxjE,OAAA,SAAAwjE,EAAA3xE,MAAA,wBAAA2xE,EAAAlzE,SAAAizE,EAAAxrF,SAphHQ,gBAAA0rF,GAAA,OAAAH,EAAA9yE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAwhHlB2rF,gBAxhHkB,eAAAC,EAAAjsF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAwhHA,SAAAq0E,EAAO/3D,GAAP,IAAAH,EAAAm4D,EAAAC,EAAA9kF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAo0E,GAAA,cAAAA,EAAAl0E,KAAAk0E,EAAAj0E,MAAA,cAAmB4b,EAAnBo4D,EAAAjpF,OAAA,QAAAoE,IAAA6kF,EAAA,GAAAA,EAAA,GAA4B,GAAID,EAAhCC,EAAAjpF,OAAA,QAAAoE,IAAA6kF,EAAA,GAAAA,EAAA,GAA6C,GAA7CC,EAAAj0E,KAAA,EACHpR,EAAKoxB,oBAAoBpxB,EAAK1G,MAAMiM,YAAY81B,KAAKv2B,MAAOqoB,EAAYH,EAAQm4D,GAAYxhB,MAAM,SAAAxiD,GAC7GnhB,EAAK2yD,eAAe,yBAA0BxxC,KAFhC,cAAAkkE,EAAA/jE,OAAA,SAAA+jE,EAAAlyE,MAAA,wBAAAkyE,EAAAzzE,SAAAszE,EAAA7rF,SAxhHA,gBAAAisF,GAAA,OAAAL,EAAAnzE,MAAAzY,KAAAiH,YAAA,GAAAjH,KA6hHlBksF,YA7hHkB,eAAAC,EAAAxsF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA6hHJ,SAAA40E,EAAO14D,EAAcI,GAArB,IAAAu4D,EAAA14D,EAAAm4D,EAAA70D,EAAAq1D,EAAArlF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA20E,GAAA,cAAAA,EAAAz0E,KAAAy0E,EAAAx0E,MAAA,UAAiC4b,EAAjC24D,EAAAxpF,OAAA,QAAAoE,IAAAolF,EAAA,GAAAA,EAAA,GAA0C,GAAIR,EAA9CQ,EAAAxpF,OAAA,QAAAoE,IAAAolF,EAAA,GAAAA,EAAA,GAA2D,GACnEr1D,EAAWtwB,EAAK23B,kBAAkB5K,GAD1B,CAAA64D,EAAAx0E,KAAA,eAIVpR,EAAK2yD,eAAe,sBAAuB5lC,GAJjC64D,EAAAtkE,OAAA,SAKH,MALG,cAAAskE,EAAAx0E,KAAA,GAQCs0E,EAAAp1D,EAASuY,SAAQ1b,GAAjBrb,MAAA4zE,EAAA1sF,OAAAw/D,EAAA,EAAAx/D,CAAgCg0B,IAAQu4D,YAAYJ,GARrD,cAAAS,EAAAtkE,OAAA,SAAAskE,EAAAzyE,MAAA,wBAAAyyE,EAAAh0E,SAAA6zE,EAAApsF,SA7hHI,gBAAAwsF,EAAAC,GAAA,OAAAN,EAAA1zE,MAAAzY,KAAAiH,YAAA,GAAAjH,KAuiHlB0sF,iBAviHkB,eAAAC,EAAAhtF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAuiHC,SAAAo1E,EAAOrhF,EAAGshF,EAAQC,EAAW/oB,GAA7B,IAAAzrC,EAAAy0D,EAAA,OAAAn6D,EAAApzB,EAAAoY,KAAA,SAAAo1E,GAAA,cAAAA,EAAAl1E,KAAAk1E,EAAAj1E,MAAA,UAEbugB,EAAYyrC,GAAYA,EAASzrC,UAAYyrC,EAASzrC,UAAY,KAFrD,CAAA00D,EAAAj1E,KAAA,eAAAi1E,EAAAj1E,KAAA,EAKI,IAAIqP,QAAJ,eAAA6lE,EAAAttF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAA01E,EAAO1lE,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAAu1E,GAAA,cAAAA,EAAAr1E,KAAAq1E,EAAAp1E,MAAA,OAC9BpR,EAAK1G,MAAM2nB,KAAKC,IAAIk9C,sBAAsBx5D,EAAG9I,KAAK,SAACqlB,EAAIvc,GACjDuc,GACFL,EAAOK,GAETN,EAAQjc,KALoB,wBAAA4hF,EAAA50E,SAAA20E,EAAAltF,SAAb,gBAAAotF,EAAAC,GAAA,OAAAJ,EAAAx0E,MAAAzY,KAAAiH,YAAA,IALJ,OAKfqxB,EALe00D,EAAAlzE,KAAA,UAgBZwe,EAhBY,CAAA00D,EAAAj1E,KAAA,eAAAi1E,EAAA/kE,OAAA,SAiBR,MAjBQ,WAoBX8kE,EAAoBz0D,EAAUC,KAAK7xB,OAAO,SAAC6E,GAAS,OAAOA,EAAGitB,OAAOjtB,EAAGitB,OAAO11B,OAAO,GAAGuI,gBAA9B,4BAAAnD,OAA4E2kF,MAEtH/pF,OAtBN,CAAAkqF,EAAAj1E,KAAA,gBAAAi1E,EAAA/kE,OAAA,SAuBR,MAvBQ,eAAA+kE,EAAAl1E,KAAA,GAAAk1E,EAAA/kE,OAAA,SA2BR,CACLqQ,EACA3xB,EAAK1G,MAAM2nB,KAAKC,IAAIoN,IAAIs0C,UAAUujB,EAAWC,EAAkB,GAAGz7E,KAAKy7E,EAAkB,GAAGv0D,UA7B/E,eAAAw0D,EAAAl1E,KAAA,GAAAk1E,EAAAz9B,GAAAy9B,EAAA,UAAAA,EAAA/kE,OAAA,SAgCR,MAhCQ,yBAAA+kE,EAAAz0E,SAAAq0E,EAAA5sF,KAAA,cAviHD,gBAAAstF,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAl0E,MAAAzY,KAAAiH,YAAA,GAAAjH,KA0kHlB0tF,gBAAkB,SAACC,GACjB,IAAMC,EAAmBjnF,EAAKqR,MAAMrR,EAAK+G,gBAAgB,CAAC,UAAU,mBAAmB8b,IAAI,UAAUA,IAAI,OACzG,OAAO7iB,EAAKqR,MAAM21E,GAAQnkE,IAAIokE,IA5kHd5tF,KA8kHlB6tF,eA9kHkBluF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA8kHD,SAAAs2E,IAAA,OAAAl7D,EAAApzB,EAAAoY,KAAA,SAAAm2E,GAAA,cAAAA,EAAAj2E,KAAAi2E,EAAAh2E,MAAA,cAAAg2E,EAAAh2E,KAAA,EACFpR,EAAK1G,MAAM2nB,KAAKC,IAAIgmE,iBADlB,cAAAE,EAAA9lE,OAAA,SAAA8lE,EAAAj0E,MAAA,wBAAAi0E,EAAAx1E,SAAAu1E,EAAA9tF,SA9kHCA,KAilHlBguF,sBAjlHkB,eAAAC,EAAAtuF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAilHM,SAAA02E,EAAOx6D,EAAaI,GAApB,IAAAH,EAAAsD,EAAAk3D,EAAAlnF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAw2E,GAAA,cAAAA,EAAAt2E,KAAAs2E,EAAAr2E,MAAA,UAA+B4b,EAA/Bw6D,EAAArrF,OAAA,QAAAoE,IAAAinF,EAAA,GAAAA,EAAA,GAAwC,GACzDz6D,EADiB,CAAA06D,EAAAr2E,KAAA,eAAAq2E,EAAAnmE,OAAA,SAEb,MAFa,UAKhBgP,EAAWtwB,EAAK23B,kBAAkB5K,GALlB,CAAA06D,EAAAr2E,KAAA,eAQpBpR,EAAK2yD,eAAe,sBAAuB5lC,GARvB06D,EAAAnmE,OAAA,SASb,MATa,cAAAmmE,EAAAr2E,KAAA,EAYTkf,EAASo3D,cAAcv6D,EAAYH,GAZ1B,cAAAy6D,EAAAnmE,OAAA,SAAAmmE,EAAAt0E,MAAA,yBAAAs0E,EAAA71E,SAAA21E,EAAAluF,SAjlHN,gBAAAsuF,EAAAC,GAAA,OAAAN,EAAAx1E,MAAAzY,KAAAiH,YAAA,GAAAjH,KA+lHlB+3B,oBA/lHkB,eAAAy2D,EAAA7uF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+lHI,SAAAi3E,EAAO/6D,EAAcI,GAArB,IAAAH,EAAAm4D,EAAA79E,EAAAgpB,EAAAy3D,EAAA3sF,EAAA4sF,EAAA1nF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAg3E,GAAA,cAAAA,EAAA92E,KAAA82E,EAAA72E,MAAA,UAAiC4b,EAAjCg7D,EAAA7rF,OAAA,QAAAoE,IAAAynF,EAAA,GAAAA,EAAA,GAA0C,GAAI7C,EAA9C6C,EAAA7rF,OAAA,QAAAoE,IAAAynF,EAAA,GAAAA,EAAA,GAA2D,GAAI1gF,EAA/D0gF,EAAA7rF,OAAA,QAAAoE,IAAAynF,EAAA,GAAAA,EAAA,GAA6E,SAE5Fj7D,EAFe,CAAAk7D,EAAA72E,KAAA,eAAA62E,EAAA3mE,OAAA,SAGX,MAHW,UAMdgP,EAAWtwB,EAAK23B,kBAAkB5K,GANpB,CAAAk7D,EAAA72E,KAAA,eASlBpR,EAAKghB,UAAU,sBAAuB+L,GATpBk7D,EAAA3mE,OAAA,SAUX,MAVW,UAafgP,EAASuY,QAAQ1b,GAbF,CAAA86D,EAAA72E,KAAA,gBAclBpR,EAAKghB,UAAU,oBAAqBmM,GAdlB86D,EAAA3mE,OAAA,SAeX,MAfW,eAkBpBha,EAA8B,WAAhBA,GAA4BA,IAAgB3J,MAAM2J,GAAeC,SAASD,GAAeA,EAlBnF2gF,EAAA92E,KAAA,GAqBlBnR,EAAKghB,UAAL,yBAAAzf,OAAwCwrB,EAAxC,OAAAxrB,OAA0D4rB,IArBxC86D,EAAA72E,KAAA,IAsBE22E,EAAAz3D,EAASuY,SAAQ1b,GAAjBrb,MAAAi2E,EAAA/uF,OAAAw/D,EAAA,EAAAx/D,CAAgCg0B,IAAQolD,KAAK+S,EAAW79E,GAAaq8D,MAAM,SAAA/jD,GAC7F5f,EAAKghB,UAAL,GAAAzf,OAAkBwrB,EAAlB,qBAAAxrB,OAAkD4rB,EAAlD,YAAwEvN,KAvBxD,eAsBZxkB,EAtBY6sF,EAAA90E,KAyBlBnT,EAAKghB,UAAL,yBAAAzf,OAAwCwrB,EAAxC,OAAAxrB,OAA0D4rB,EAA1D,OAAA5rB,OAA0EnG,IAzBxD6sF,EAAA3mE,OAAA,SA0BXlmB,GA1BW,QAAA6sF,EAAA92E,KAAA,GAAA82E,EAAAr/B,GAAAq/B,EAAA,UA4BlBjoF,EAAKghB,UAAU,4BAAfinE,EAAAr/B,IA5BkB,yBAAAq/B,EAAAr2E,SAAAk2E,EAAAzuF,KAAA,cA/lHJ,gBAAA6uF,EAAAC,GAAA,OAAAN,EAAA/1E,MAAAzY,KAAAiH,YAAA,GAAAjH,KA8nHlBoX,aA9nHkB,eAAA23E,EAAApvF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA8nHH,SAAAw3E,EAAOhkB,EAAO14D,GAAd,IAAAxD,EAAAmgF,EAAAhoF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAs3E,GAAA,cAAAA,EAAAp3E,KAAAo3E,EAAAn3E,MAAA,cAAAk3E,EAAAnsF,OAAA,QAAAoE,IAAA+nF,EAAA,KAAAA,EAAA,KAAAC,EAAAn3E,KAAA,eAAAm3E,EAAAn3E,KAAA,EAELqP,QAAQkD,IAAI0gD,EAAMziE,IAAK,SAACmhC,EAAE56B,GAC9B,OAAOwD,EAASo3B,EAAG56B,EAAOk8D,MAHjB,OAAAkkB,EAAAn3E,KAAA,gBAMFjJ,EAAQ,EANN,YAMSA,EAAQk8D,EAAMloE,QANvB,CAAAosF,EAAAn3E,KAAA,gBAAAm3E,EAAAn3E,KAAA,GAOHzF,EAAS04D,EAAMl8D,GAAQA,EAAOk8D,GAP3B,QAM+Bl8D,IAN/BogF,EAAAn3E,KAAA,iCAAAm3E,EAAA32E,SAAAy2E,EAAAhvF,SA9nHG,gBAAAmvF,EAAAC,GAAA,OAAAL,EAAAt2E,MAAAzY,KAAAiH,YAAA,GAAAjH,KAyoHlBqvF,QAAU,SAACjf,GACT,OAAQzpE,EAAKqR,MAAM,GAAGC,KAAKtR,EAAKqR,MAAMo4D,GAAK5mD,IAAI,KAAMipB,IAAI,IAAIv6B,MAAM,IA1oHnDlY,KA4oHlBsvF,iBA5oHkB,eAAAC,EAAA5vF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA4oHC,SAAAg4E,EAAOtjF,GAAP,IAAAujF,EAAA,OAAA78D,EAAApzB,EAAAoY,KAAA,SAAA83E,GAAA,cAAAA,EAAA53E,KAAA43E,EAAA33E,MAAA,cAAA23E,EAAA33E,KAAA,EACSpR,EAAKqkF,mBAAmB9+E,EAAYT,MAAMS,EAAY81B,KAAK9sB,SADpE,cACbu6E,EADaC,EAAA51E,QAGf21E,EAAgB9oF,EAAKgU,iBAAiB80E,EAAcvjF,EAAYvH,WAHjD+qF,EAAAznE,OAAA,SAKVwnE,GALU,wBAAAC,EAAAn3E,SAAAi3E,EAAAxvF,SA5oHD,gBAAA2vF,GAAA,OAAAJ,EAAA92E,MAAAzY,KAAAiH,YAAA,GAAAjH,KAmpHlB6jF,aAnpHkB,eAAA+L,EAAAjwF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAmpHH,SAAAq4E,EAAO3jF,GAAP,IAAAuxC,EAAA0X,EAAAtoC,EAAAyoC,EAAAC,EAAAu6B,EAAA7oF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAm4E,GAAA,cAAAA,EAAAj4E,KAAAi4E,EAAAh4E,MAAA,UAAmB0lC,IAAnBqyC,EAAAhtF,OAAA,QAAAoE,IAAA4oF,EAAA,KAAAA,EAAA,GAEP36B,EAFO,aAAAjtD,OAEsBgE,EAAY81B,KAAK9sB,QAFvC,KAAAhN,OAEkDu1C,KACzD5wB,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAJ7B,CAAAyrF,EAAAh4E,KAAA,eAAAg4E,EAAA9nE,OAAA,SAKJthB,EAAKqR,MAAM6U,IALP,cAAAkjE,EAAAh4E,KAAA,EAQiBpR,EAAK4L,mBAAmBrG,GAAY,EAAMuxC,GAR3D,YAQP6X,EAROy6B,EAAAj2E,QASUw7C,EAAgBM,0BAT1B,CAAAm6B,EAAAh4E,KAAA,YAULw9C,EAAYD,EAAgBM,0BAC7BjvD,EAAKqR,MAAMu9C,GAAWjxD,QAXhB,CAAAyrF,EAAAh4E,KAAA,gBAAAg4E,EAAA9nE,OAAA,SAYFthB,EAAKsvD,8BAA8Bd,EAAcI,IAZ/C,eAAAw6B,EAAA9nE,OAAA,SAgBN,MAhBM,yBAAA8nE,EAAAx3E,SAAAs3E,EAAA7vF,SAnpHG,gBAAAgwF,GAAA,OAAAJ,EAAAn3E,MAAAzY,KAAAiH,YAAA,GAAAjH,KAwqHlBuS,mBAxqHkB,eAAA09E,EAAAtwF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAwqHG,SAAA04E,EAAOhkF,GAAP,IAAAikF,EAAA1yC,EAAA0X,EAAAtoC,EAAA9a,EAAAujD,EAAA86B,EAAAC,EAAAr+E,EAAAC,EAAAw9E,EAAAa,EAAAv1E,EAAAw1E,EAAAtpF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA44E,GAAA,cAAAA,EAAA14E,KAAA04E,EAAAz4E,MAAA,UAAmBo4E,EAAnBI,EAAAztF,OAAA,QAAAoE,IAAAqpF,EAAA,IAAAA,EAAA,GAAuC9yC,IAAvC8yC,EAAAztF,OAAA,QAAAoE,IAAAqpF,EAAA,KAAAA,EAAA,GAEdrkF,EAAY81B,KAFE,CAAAwuD,EAAAz4E,KAAA,eAAAy4E,EAAAvoE,OAAA,UAGV,GAHU,UAObktC,EAPa,mBAAAjtD,OAOsBgE,EAAY81B,KAAK9sB,QAPvC,KAAAhN,OAOkDu1C,KAC/D5wB,EAAalmB,EAAKunE,cAAc/Y,IARnB,CAAAq7B,EAAAz4E,KAAA,eAAAy4E,EAAAvoE,OAAA,SAUV4E,GAVU,cAaf9a,EAAkBpL,EAAKqR,MAAM,GAE3Bs9C,EAAkB,CACtBpuB,OAAQ,KACRuoD,cAAc,KACd19E,gBAAgB,KAChBs+E,kBAAkB,GAClBr+E,qBAAqB,KACrBC,yBAAyB,KACzBw+E,yBAAyB,KACzB76B,0BAA0B,KAC1B86B,mCAAmC,MAG/BN,EAAgB,GAChBC,EAAoB,GACpBr+E,EAAuB,GACvBC,EAA2B,GA9Bdu+E,EAAAz4E,KAAA,GAgCbpR,EAAKyQ,aAAalL,EAAY4I,UAA9B,eAAA67E,EAAAhxF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAwC,SAAAo5E,EAAO77E,EAAa/I,GAApB,IAAA0nB,EAAAze,EAAA47E,EAAAC,EAAAv2E,EAAAw2E,EAAAlgB,EAAAmgB,EAAA,OAAAp+D,EAAApzB,EAAAoY,KAAA,SAAAq5E,GAAA,cAAAA,EAAAn5E,KAAAm5E,EAAAl5E,MAAA,cACtC2b,EAAe3e,EAAatJ,MAC5BwJ,EAAeF,EAAaG,QAAQ7J,cAFE4lF,EAAAl5E,KAAA,EAQlCqP,QAAQkD,IAAI,CACpB3jB,EAAK8oD,iBAAiB/7B,GACtB/sB,EAAKqkF,mBAAmBt3D,EAAaxnB,EAAY81B,KAAK9sB,SACpDH,EAAaq6B,UAAUyhC,aAAelqE,EAAKoxB,oBAAoBrE,EAAa3e,EAAaq6B,UAAUyhC,aAAajrE,KAAKmP,EAAaq6B,UAAUyhC,aAAal9C,QAAU,OAX3H,UAAAk9D,EAAAI,EAAAn3E,KAAAg3E,EAAAnxF,OAAAqnC,EAAA,EAAArnC,CAAAkxF,EAAA,GAK1Ct2E,EAL0Cu2E,EAAA,GAM1CC,EAN0CD,EAAA,GAO1CjgB,EAP0CigB,EAAA,GAcvCC,EAduC,CAAAE,EAAAl5E,KAAA,gBAAAk5E,EAAAhpE,OAAA,kBAkBxC4oD,GAAgB97D,EAAapQ,WAC/ByrF,EAAcn7E,GAAgB47D,EAC9BA,EAAelqE,EAAKgU,iBAAiBk2D,EAAa97D,EAAapQ,YAG7DqsF,EAAqBrqF,EAAKgU,iBAAiBo2E,EAAgBx2E,EAAcs2D,IAEtD14D,GAAGxR,EAAKqR,MAAM,SACnC+4E,EAAkBpqF,EAAKqR,MAAM,GAC7Bg5E,EAAqBrqF,EAAKqR,MAAM,IAGlCq4E,EAAkBp7E,GAAgB87E,EAClC/+E,EAAqBiD,GAAgB+7E,EACrCj/E,EAAkBA,EAAgBkG,KAAK+4E,GAhCK,yBAAAC,EAAA14E,SAAAq4E,EAAA5wF,SAAxC,gBAAAkxF,EAAAC,GAAA,OAAAR,EAAAl4E,MAAAzY,KAAAiH,YAAA,IAhCa,eAqEnBquD,EAAgBm6B,cAAgB9oF,EAAKqR,MAAM,GAC3Cs9C,EAAgBM,0BAA4BjvD,EAAKqR,MAAMjG,GAtEpCy+E,EAAAz4E,KAAA,GAyEOpR,EAAK2oF,iBAAiBpjF,GAzE7B,YAyEfujF,EAzEee,EAAA12E,QA2EjBw7C,EAAgBm6B,cAAgBA,EAChCn6B,EAAgBM,0BAA4BN,EAAgBM,0BAA0B39C,KAAKw3E,IAK7F9vF,OAAOmF,KAAKkN,GAAsBjN,QAAQ,SAACkQ,EAAajJ,GACtD,IACMolF,EADqBp/E,EAAqBiD,GACEuU,IAAIzX,GACtDE,EAAyBgD,GAAgBm8E,IAG3C97B,EAAgBvjD,gBAAkBA,EAClCujD,EAAgBtjD,qBAAuBA,EACvCsjD,EAAgBrjD,yBAA2BA,GAEvCwrC,EA3Fe,CAAA+yC,EAAAz4E,KAAA,gBAAAy4E,EAAAz4E,KAAA,GA4FepR,EAAK0qF,qBAAqBnlF,EAAY81B,KAAK9sB,SA5F1D,aA4FXo7E,EA5FWE,EAAA12E,MA+FKw3E,MA/FL,CAAAd,EAAAz4E,KAAA,gBAAAy4E,EAAAz4E,KAAA,GAgGsBpR,EAAK4qF,uBAAuBrlF,GAAY,GAhG9D,SAgGT6O,EAhGSy1E,EAAA12E,QAkGbw2E,EAAkBgB,MAAQhB,EAAkBgB,MAAM9nE,IAAIzO,IAGxDu6C,EAAgBM,0BAA4BN,EAAgBM,0BAA0B39C,KAAKq4E,EAAkBgB,OArG9F,eAAAd,EAAAz4E,KAAA,GA2G8BpR,EAAKu7B,oBAAoBozB,EAAgBvjD,gBAAgB7F,EAAYT,MAAMS,GA3GzG,eA2GnBopD,EAAgBm7B,yBA3GGD,EAAA12E,KAAA02E,EAAAz4E,KAAA,GA4GwCpR,EAAKu7B,oBAAoBozB,EAAgBM,0BAA0B1pD,EAAYT,MAAMS,GA5G7H,eA4GnBopD,EAAgBo7B,mCA5GGF,EAAA12E,KA8Gfq2E,IACF76B,EAAgBpuB,OAASvgC,EAAK4wD,UAAU44B,EAAcn+E,EAAqBD,IA/G1Dy+E,EAAAvoE,OAAA,SAkHZthB,EAAKmmB,cAAcqoC,EAAcG,IAlHrB,yBAAAk7B,EAAAj4E,SAAA23E,EAAAlwF,SAxqHH,gBAAAwxF,GAAA,OAAAvB,EAAAx3E,MAAAzY,KAAAiH,YAAA,GAAAjH,KA4xHlByxF,8BA5xHkB,eAAAC,EAAA/xF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA4xHc,SAAAm6E,EAAO7wD,GAAP,IAAAkjB,EAAA4tC,EAAA,OAAAh/D,EAAApzB,EAAAoY,KAAA,SAAAi6E,GAAA,cAAAA,EAAA/5E,KAAA+5E,EAAA95E,MAAA,cACxBisC,EAAMr9C,EAAKgqE,uBAAuB,IADVkhB,EAAA95E,KAAA,EAETpR,EAAKoxB,oBAAoB,gBAAgB,eAAe,CAACisB,EAAIr3C,UAAUm0B,IAF9D,cAExB8wD,EAFwBC,EAAA/3E,KAAA+3E,EAAA5pE,OAAA,SAGvB2pE,GAHuB,wBAAAC,EAAAt5E,SAAAo5E,EAAA3xF,SA5xHd,gBAAA8xF,GAAA,OAAAJ,EAAAj5E,MAAAzY,KAAAiH,YAAA,GAAAjH,KAiyHlBk5B,2BAjyHkB,eAAA64D,EAAApyF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAiyHW,SAAAw6E,EAAOt+D,EAAau+D,GAApB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAx5D,EAAAy5D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAv8D,EAAA,OAAA7D,EAAApzB,EAAAoY,KAAA,SAAAq7E,GAAA,cAAAA,EAAAn7E,KAAAm7E,EAAAl7E,MAAA,cAAAk7E,EAAAl7E,KAAA,EAMjBqP,QAAQkD,IAAI,CACpB3jB,EAAKoxB,oBAAoBrE,EAAa,UACtC/sB,EAAKoxB,oBAAoBrE,EAAa,UACtC/sB,EAAKoxB,oBAAoBrE,EAAa,eACtC/sB,EAAKoxB,oBAAoBrE,EAAa,iBAVb,UAAAw+D,EAAAe,EAAAn5E,KAAAq4E,EAAAxyF,OAAAqnC,EAAA,EAAArnC,CAAAuyF,EAAA,GAEzBE,EAFyBD,EAAA,GAGzBE,EAHyBF,EAAA,GAIzBG,EAJyBH,EAAA,GAKzBI,EALyBJ,EAAA,KAavBC,GAAkBC,GAAkBC,GAAgBC,GAb7B,CAAAU,EAAAl7E,KAAA,gBAcnBy6E,EAAgB,CACpBt9E,QAAQk9E,GAEJK,EAAgB,CACpBv9E,QAAQm9E,GAEJp5D,EAAiBtyB,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS,QApBrCulF,EAAAl7E,KAAA,GAyBfqP,QAAQkD,IAAI,CACpB3jB,EAAKwyB,2BAA2BF,EAAeu5D,GAC/C7rF,EAAKwyB,2BAA2BF,EAAew5D,KA3BxB,WAAAC,EAAAO,EAAAn5E,KAAA64E,EAAAhzF,OAAAqnC,EAAA,EAAArnC,CAAA+yF,EAAA,GAuBvBE,EAvBuBD,EAAA,GAwBvBE,EAxBuBF,EAAA,IA8BrBC,IAAgBC,EA9BK,CAAAI,EAAAl7E,KAAA,gBAkCjB+6E,EAAcF,EAAax9E,MAAMzO,EAAKgU,iBAAiB23E,EAAa,GAAG,KACvES,EAAcF,EAAaz9E,MAAMzO,EAAKgU,iBAAiB23E,EAAa,GAAG,KAEvEU,EAAgBF,EAAY76E,KAAK86E,GACjCt8D,EAAiBu8D,EAAcxpE,IAAI7iB,EAAKgU,iBAAiB43E,EAAY,KAtCpDU,EAAAhrE,OAAA,SA0ChBwO,GA1CgB,eAAAw8D,EAAAhrE,OAAA,SA8CpB,MA9CoB,yBAAAgrE,EAAA16E,SAAAy5E,EAAAhyF,SAjyHX,gBAAAkzF,EAAAC,GAAA,OAAApB,EAAAt5E,MAAAzY,KAAAiH,YAAA,GAAAjH,KAi1HlBm5B,2BAj1HkB,eAAAi6D,EAAAzzF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAi1HW,SAAA67E,EAAOC,EAAgBC,GAAvB,IAAAp+B,EAAAtoC,EAAA2mE,EAAAxvC,EAAAljB,EAAAu0C,EAAA7Y,EAAA,OAAA5pC,EAAApzB,EAAAoY,KAAA,SAAA67E,GAAA,cAAAA,EAAA37E,KAAA27E,EAAA17E,MAAA,UAGrBo9C,EAHqB,2BAAAjtD,OAGsBorF,EAAgBp+E,QAHtC,KAAAhN,OAGiDqrF,EAAgBr+E,WACtF2X,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QALf,CAAAmvF,EAAA17E,KAAA,eAAA07E,EAAAxrE,OAAA,SAMlBthB,EAAKqR,MAAM6U,IANO,cAAA4mE,EAAA37E,KAAA,EAUnB07E,EAAW7sF,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS,OAAO,YACzDs2C,EAAMr9C,EAAKgqE,uBAAuB,KAElC7vC,EAAO,IACRh0B,KAAKwmF,EAAgBp+E,SAGtBs+E,EAASnoF,gBAAkBioF,EAAgBp+E,QAAQ7J,eAAiBmoF,EAASnoF,gBAAkBkoF,EAAgBr+E,QAAQ7J,eACzHy1B,EAAKh0B,KAAK0mF,GAEZ1yD,EAAKh0B,KAAKymF,EAAgBr+E,SApBDu+E,EAAA17E,KAAA,GAsBPpR,EAAKoxB,oBAAoB,kBAAkB,eAAe,CAACisB,EAAIr3C,UAAUm0B,IAtBlE,aAsBnBu0C,EAtBmBoe,EAAA35E,MAAA,CAAA25E,EAAA17E,KAAA,gBAyBjBykD,EAAQ71D,EAAKqR,MAAMq9D,EAAI,IAAI7rD,IAAIw6B,GAzBdyvC,EAAAxrE,OAAA,SA0BhBthB,EAAKsvD,8BAA8Bd,EAAcqH,IA1BjC,eAAAi3B,EAAAxrE,OAAA,SA4BlB,MA5BkB,eAAAwrE,EAAA37E,KAAA,GAAA27E,EAAAlkC,GAAAkkC,EAAA,SAAAA,EAAAxrE,OAAA,SA8BlB,MA9BkB,yBAAAwrE,EAAAl7E,SAAA86E,EAAArzF,KAAA,aAj1HX,gBAAA0zF,EAAAC,GAAA,OAAAP,EAAA36E,MAAAzY,KAAAiH,YAAA,GAAAjH,KAk3HlB21D,yBAl3HkB,eAAAi+B,EAAAj0F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAk3HS,SAAAq8E,EAAOP,EAAgBC,GAAvB,IAAAp+B,EAAAtoC,EAAA2mE,EAAAxvC,EAAAljB,EAAA8wD,EAAAp1B,EAAA,OAAA5pC,EAAApzB,EAAAoY,KAAA,SAAAk8E,GAAA,cAAAA,EAAAh8E,KAAAg8E,EAAA/7E,MAAA,UAGnBo9C,EAHmB,yBAAAjtD,OAGsBorF,EAAgBp+E,QAHtC,KAAAhN,OAGiDqrF,EAAgBr+E,WACpF2X,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QALjB,CAAAwvF,EAAA/7E,KAAA,eAAA+7E,EAAA7rE,OAAA,SAMhBthB,EAAKqR,MAAM6U,IANK,cAAAinE,EAAAh8E,KAAA,EAUjB07E,EAAW7sF,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS,OAAO,YACzDs2C,EAAMr9C,EAAKgqE,uBAAuB,KAElC7vC,EAAO,IACRh0B,KAAKwmF,EAAgBp+E,SAEtBs+E,EAASnoF,gBAAkBioF,EAAgBp+E,QAAQ7J,eAAiBmoF,EAASnoF,gBAAkBkoF,EAAgBr+E,QAAQ7J,eACzHy1B,EAAKh0B,KAAK0mF,GAEZ1yD,EAAKh0B,KAAKymF,EAAgBr+E,SAnBH4+E,EAAA/7E,KAAA,GAqBFpR,EAAKoxB,oBAAoB,gBAAgB,eAAe,CAACisB,EAAIr3C,UAAUm0B,IArBrE,aAqBjB8wD,EArBiBkC,EAAAh6E,MAAA,CAAAg6E,EAAA/7E,KAAA,gBAwBfykD,EAAQ71D,EAAKqR,MAAM45E,EAAO,IAAIpoE,IAAIw6B,GAxBnB8vC,EAAA7rE,OAAA,SAyBdthB,EAAKsvD,8BAA8Bd,EAAcqH,IAzBnC,eAAAs3B,EAAA7rE,OAAA,SA2BhB,MA3BgB,eAAA6rE,EAAAh8E,KAAA,GAAAg8E,EAAAvkC,GAAAukC,EAAA,SAAAA,EAAA7rE,OAAA,SA6BhB,MA7BgB,yBAAA6rE,EAAAv7E,SAAAs7E,EAAA7zF,KAAA,aAl3HT,gBAAA+zF,EAAAC,GAAA,OAAAJ,EAAAn7E,MAAAzY,KAAAiH,YAAA,GAAAjH,KAw6HlBi0F,wBAx6HkB,eAAAC,EAAAv0F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAw6HQ,SAAA28E,EAAO3mF,GAAP,IAAAF,EAAA0uD,EAAAo4B,EAAAC,EAAAC,EAAArtF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA28E,GAAA,cAAAA,EAAAz8E,KAAAy8E,EAAAx8E,MAAA,UAAezK,EAAfgnF,EAAAxxF,OAAA,QAAAoE,IAAAotF,EAAA,GAAAA,EAAA,GAA6B,GACrD9mF,EAAUA,GAAoB7G,EAAK1G,MAAMuN,QAEpCF,GAAkBA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAK6B,EAAK1G,MAAMkM,kBAGpCqB,GAAYF,GAAkBA,EAAcxK,OAPzB,CAAAyxF,EAAAx8E,KAAA,eAAAw8E,EAAAtsE,OAAA,SAQf,IARe,cAAAssE,EAAAx8E,KAAA,EAWDpR,EAAK01D,YAAY7uD,EAAQ,EAAE,SAASF,GAXnC,OAWlB0uD,EAXkBu4B,EAAAz6E,KAalBs6E,EAAqB,GACvBC,EAAuB1tF,EAAKqR,MAAM,GAItCgkD,EAASj3D,QAAS,SAAAwG,GAEhB,IAAMu1D,EAAYv1D,EAAGu1D,UACfxoD,EAAa3R,EAAKqR,MAAMzM,EAAG+M,YAMjC,OAJK87E,EAAmBtzB,KACtBszB,EAAmBtzB,GAAan6D,EAAKqR,MAAM,IAGrCzM,EAAGH,QACT,IAAK,UACL,IAAK,aACHgpF,EAAmBtzB,GAAaszB,EAAmBtzB,GAAW7oD,KAAKK,GACrE,MACA,IAAK,WACL,IAAK,cACCA,EAAWwC,GAAGs5E,EAAmBtzB,MACnCuzB,EAAuBA,EAAqBp8E,KAAKK,EAAWJ,MAAMk8E,EAAmBtzB,MAEvFszB,EAAmBtzB,GAAaszB,EAAmBtzB,GAAW5oD,MAAMI,GAChE87E,EAAmBtzB,GAAW3oD,GAAG,KACnCi8E,EAAmBtzB,GAAan6D,EAAKqR,MAAM,IAU7Cq8E,EAAqBv5E,GAAG,IAC1Bnb,OAAOmF,KAAKsvF,GAAoBrvF,QAAS,SAAA0G,GACvC,IAAM2mB,EAAegiE,EAAmB3oF,GACpC2mB,GAAgBA,EAAatX,GAAG,KAC9BsX,EAAatX,GAAGu5E,GAClBD,EAAmB3oF,GAAS2oF,EAAmB3oF,GAAOyM,MAAMm8E,IAE5DA,EAAuBA,EAAqBn8E,MAAMk8E,EAAmB3oF,IACrE2oF,EAAmB3oF,GAAS,QAzDd,yBAAA8oF,EAAAh8E,SAAA47E,EAAAn0F,SAx6HR,gBAAAw0F,GAAA,OAAAN,EAAAz7E,MAAAzY,KAAAiH,YAAA,GAAAjH,KA0+HlBy0F,2BA1+HkB,eAAAC,EAAA/0F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA0+HW,SAAAm9E,EAAOC,EAAQC,GAAf,IAAAr0B,EAAAs0B,EAAA,OAAAliE,EAAApzB,EAAAoY,KAAA,SAAAm9E,GAAA,cAAAA,EAAAj9E,KAAAi9E,EAAAh9E,MAAA,cAAAg9E,EAAAh9E,KAAA,EACKpR,EAAKquF,0BADV,YACrBx0B,EADqBu0B,EAAAj7E,MAAA,CAAAi7E,EAAAh9E,KAAA,eAAAg9E,EAAAh9E,KAAA,EAGGpR,EAAKoxB,oBAAoByoC,EAAkB56D,KAAM,6BAA8B,CAACgvF,EAASC,IAH5F,cAGnBC,EAHmBC,EAAAj7E,KAAAi7E,EAAA9sE,OAAA,SAKlB6sE,GALkB,cAAAC,EAAA9sE,OAAA,SAOpB,MAPoB,wBAAA8sE,EAAAx8E,SAAAo8E,EAAA30F,SA1+HX,gBAAAi1F,EAAAC,GAAA,OAAAR,EAAAj8E,MAAAzY,KAAAiH,YAAA,GAAAjH,KAm/HlB0jF,YAn/HkB/jF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAm/HJ,SAAA29E,IAAA,IAAAhgC,EAAAtoC,EAAAuoE,EAAAx6B,EAAA95B,EAAAw/C,EAAA,OAAA1tD,EAAApzB,EAAAoY,KAAA,SAAAy9E,GAAA,cAAAA,EAAAv9E,KAAAu9E,EAAAt9E,MAAA,UAGNo9C,EAHM,gBAINtoC,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAL9B,CAAA+wF,EAAAt9E,KAAA,eAAAs9E,EAAAptE,OAAA,SAMHthB,EAAKqR,MAAM6U,IANR,YASNuoE,EAAiBzuF,EAAK+G,gBAAgB,CAAC,QAAQ,WATzC,CAAA2nF,EAAAt9E,KAAA,gBAAAs9E,EAAAt9E,KAAA,EAWYpR,EAAKw4B,YAAYi2D,EAAej9C,UAX5C,YAWJyiB,EAXIy6B,EAAAv7E,QAYK8gD,EAAQtpD,KAZb,CAAA+jF,EAAAt9E,KAAA,YAaF+oB,EAAOnhC,OAAO8J,OAAO2rF,EAAet0D,QACtCw/C,EAAW35E,EAAKq6B,aAAaF,EAAK85B,EAAQtpD,OAdtC,CAAA+jF,EAAAt9E,KAAA,YAgBNuoE,EAAW35E,EAAKqR,MAAMsoE,GAAUlrE,MAAM,KACjCzO,EAAKqR,MAAMsoE,GAAUh8E,QAjBpB,CAAA+wF,EAAAt9E,KAAA,gBAAAs9E,EAAAptE,OAAA,SAkBGthB,EAAKsvD,8BAA8Bd,EAAcmrB,IAlBpD,eAAA+U,EAAAptE,OAAA,SAuBL,MAvBK,yBAAAotE,EAAA98E,SAAA48E,EAAAn1F,SAn/HIA,KA4gIlBo8D,wBAA0B,WACxB,IAAKz1D,EAAK1G,MAAM2jC,oBACd,OAAO,EAET,IAAM04B,EAAc31D,EAAK+G,gBAAgB,CAAC,QAAQ,oBAC5C4nF,EAAiB3uF,EAAK1G,MAAM2jC,oBAAX,KASvB,OARwBjkC,OAAOmF,KAAKwwF,GAAgB57D,OAAQ,SAACvtB,EAAgBV,GAC3E,IAAMS,EAAcopF,EAAe7pF,GAInC,OAHI9L,OAAOmF,KAAKw3D,GAAa5wD,SAASQ,EAAY81B,KAAKv2B,QAAU6wD,EAAYpwD,EAAY81B,KAAKv2B,OAAOmuB,UACnGztB,EAAgBV,GAASS,GAEpBC,GACP,KAxhIcnM,KA4hIlBu1F,oBA5hIkB51F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA4hII,SAAAg+E,IAAA,IAAAh1B,EAAAvyD,EAAAwnF,EAAAC,EAAAC,EAAAt9E,EAAAu9E,EAAAC,EAAAC,EAAA,OAAAljE,EAAApzB,EAAAoY,KAAA,SAAAm+E,GAAA,cAAAA,EAAAj+E,KAAAi+E,EAAAh+E,MAAA,cAAAg+E,EAAAh+E,KAAA,EACYpR,EAAKquF,0BADjB,YACdx0B,EADcu1B,EAAAj8E,MAAA,CAAAi8E,EAAAh+E,KAAA,gBAAAg+E,EAAAh+E,KAAA,EAGQpR,EAAKknF,iBAHb,YAGZ5/E,EAHY8nF,EAAAj8E,MAAA,CAAAi8E,EAAAh+E,KAAA,gBAKV09E,EAA0B,GALhBM,EAAAh+E,KAAA,GAMwBqP,QAAQkD,IAAI,CAClD3jB,EAAKoxB,oBAAoByoC,EAAkB56D,KAAK,qBAChDe,EAAKoxB,oBAAoByoC,EAAkB56D,KAAK,oBAAoB,GAAG,GAAGqI,EAAYwnF,KARxE,WAAAC,EAAAK,EAAAj8E,KAAA67E,EAAAh2F,OAAAqnC,EAAA,EAAArnC,CAAA+1F,EAAA,GAMXr9E,EANWs9E,EAAA,GAMAC,EANAD,EAAA,IAWZt9E,IAAcu9E,EAXF,CAAAG,EAAAh+E,KAAA,gBAaR89E,EAAmBlvF,EAAKqR,MAAMrR,EAAK+G,gBAAgB,CAAC,UAAU,mBAAmB8b,IAAIisE,GACrFK,EAAWnvF,EAAKqR,MAAMK,GAAYmR,IAAIosE,GAAgB19E,MAAM,GAAG9C,MAAMygF,GAd7DE,EAAA9tE,OAAA,SAePthB,EAAK0oF,QAAQyG,GAAU1gF,MAAM,MAftB,eAAA2gF,EAAA9tE,OAAA,SAmBb,MAnBa,yBAAA8tE,EAAAx9E,SAAAi9E,EAAAx1F,SA5hIJA,KAijIlBg2F,oBAjjIkBr2F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAijII,SAAAy+E,IAAA,IAAA11B,EAAA,OAAA3tC,EAAApzB,EAAAoY,KAAA,SAAAs+E,GAAA,cAAAA,EAAAp+E,KAAAo+E,EAAAn+E,MAAA,cAAAm+E,EAAAn+E,KAAA,EACYpR,EAAKwvF,uBADjB,YACd51B,EADc21B,EAAAp8E,MAAA,CAAAo8E,EAAAn+E,KAAA,eAAAm+E,EAAAn+E,KAAA,EAGLpR,EAAKoxB,oBAAoBwoC,EAAkB36D,KAAK,eAH3C,cAAAswF,EAAAjuE,OAAA,SAAAiuE,EAAAp8E,MAAA,cAAAo8E,EAAAjuE,OAAA,SAKb,MALa,wBAAAiuE,EAAA39E,SAAA09E,EAAAj2F,SAjjIJA,KAwjIlByjF,qBAxjIkB9jF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAwjIK,SAAA4+E,IAAA,IAAA5oF,EAAA87E,EAAA/oB,EAAA81B,EAAApvF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA0+E,GAAA,cAAAA,EAAAx+E,KAAAw+E,EAAAv+E,MAAA,cAAOvK,EAAP6oF,EAAAvzF,OAAA,QAAAoE,IAAAmvF,EAAA,GAAAA,EAAA,GAAe,KAAK/M,IAApB+M,EAAAvzF,OAAA,QAAAoE,IAAAmvF,EAAA,KAAAA,EAAA,GAAAC,EAAAv+E,KAAA,EACWpR,EAAKwvF,uBADhB,YACf51B,EADe+1B,EAAAx8E,MAAA,CAAAw8E,EAAAv+E,KAAA,gBAGnBvK,EAAUA,GAAoB7G,EAAK1G,MAAMuN,QAHtB8oF,EAAAv+E,KAAA,EAINpR,EAAKyyB,gBAAgBmnC,EAAkB36D,KAAK4H,EAAQ87E,GAJ9C,cAAAgN,EAAAruE,OAAA,SAAAquE,EAAAx8E,MAAA,eAAAw8E,EAAAruE,OAAA,SAMd,MANc,yBAAAquE,EAAA/9E,SAAA69E,EAAAp2F,SAxjILA,KAgkIlB0kE,mBAhkIkB/kE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAgkIG,SAAA++E,IAAA,IAAAtoF,EAAAq7E,EAAAt6C,EAAAutB,EAAAgE,EAAAi2B,EAAAvvF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA6+E,GAAA,cAAAA,EAAA3+E,KAAA2+E,EAAA1+E,MAAA,cAAO9J,EAAPuoF,EAAA1zF,OAAA,QAAAoE,IAAAsvF,EAAA,GAAAA,EAAA,GAAmB,SAASlN,IAA5BkN,EAAA1zF,OAAA,QAAAoE,IAAAsvF,EAAA,KAAAA,EAAA,GAAAC,EAAA1+E,KAAA,EACapR,EAAKquF,0BADlB,cACbhmD,EADaynD,EAAA38E,KAAA28E,EAAA1+E,KAAA,EAESpR,EAAKoxB,oBAAoBiX,EAAkBppC,KAAK,oBAAoB,GAAG,GAAGqI,GAFnF,YAEfsuD,EAFek6B,EAAA38E,MAAA,CAAA28E,EAAA1+E,KAAA,gBAIjBwkD,EAAkB51D,EAAKqR,MAAMukD,GACzB+sB,IACI/oB,EAAoB55D,EAAK+G,gBAAgB,CAAC,QAAQ,iBACxD6uD,EAAkB51D,EAAKgU,iBAAiB4hD,EAAgBgE,EAAkB57D,WAP3D8xF,EAAAxuE,OAAA,SASVs0C,GATU,eAAAk6B,EAAAxuE,OAAA,SAWZ,MAXY,yBAAAwuE,EAAAl+E,SAAAg+E,EAAAv2F,SAhkIHA,KA6kIlB2jF,6BA7kIkB,eAAA+S,EAAA/2F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA6kIa,SAAAm/E,EAAOnpF,GAAP,IAAAopF,EAAAC,EAAAt6B,EAAAwjB,EAAA,OAAAntD,EAAApzB,EAAAoY,KAAA,SAAAk/E,GAAA,cAAAA,EAAAh/E,KAAAg/E,EAAA/+E,MAAA,cAAA++E,EAAA/+E,KAAA,EACmBqP,QAAQkD,IAAI,CAC1D3jB,EAAK+9D,mBAAmB,UACxB/9D,EAAK88E,qBAAqBj2E,KAHC,UAAAopF,EAAAE,EAAAh9E,KAAA+8E,EAAAl3F,OAAAqnC,EAAA,EAAArnC,CAAAi3F,EAAA,GACxBr6B,EADwBs6B,EAAA,KACR9W,EADQ8W,EAAA,MAKJt6B,EALI,CAAAu6B,EAAA/+E,KAAA,eAAA++E,EAAA7uE,OAAA,SAMpBthB,EAAKqR,MAAM+nE,GAAmB3qE,MAAMmnD,IANhB,cAAAu6B,EAAA7uE,OAAA,SAQtB,MARsB,wBAAA6uE,EAAAv+E,SAAAo+E,EAAA32F,SA7kIb,gBAAA+2F,GAAA,OAAAL,EAAAj+E,MAAAzY,KAAAiH,YAAA,GAAAjH,KAulIlBg1F,wBAvlIkBr1F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAulIQ,SAAAw/E,IAAA,IAAAC,EAAA,OAAArkE,EAAApzB,EAAAoY,KAAA,SAAAs/E,GAAA,cAAAA,EAAAp/E,KAAAo/E,EAAAn/E,MAAA,YAClBk/E,EAAsBtwF,EAAK+G,gBAAgB,CAAC,QAAQ,qBADlC,CAAAwpF,EAAAn/E,KAAA,WAGKpR,EAAK23B,kBAAkB24D,EAAoBrxF,QACzCqxF,EAAoBhiE,IAJ3B,CAAAiiE,EAAAn/E,KAAA,eAAAm/E,EAAAn/E,KAAA,EAKSpR,EAAK1G,MAAM+0B,aAAaiiE,EAAoBrxF,KAAKqxF,EAAoB/hF,QAAQ+hF,EAAoBhiE,KAL1G,OAAAiiE,EAAAp9E,KAAA,cAAAo9E,EAAAjvE,OAAA,SAQjBgvE,GARiB,wBAAAC,EAAA3+E,SAAAy+E,EAAAh3F,SAvlIRA,KAimIlBm3F,oBAjmIkBx3F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAimII,SAAA4/E,IAAA,IAAAC,EAAA,OAAAzkE,EAAApzB,EAAAoY,KAAA,SAAA0/E,GAAA,cAAAA,EAAAx/E,KAAAw/E,EAAAv/E,MAAA,YACds/E,EAAkB1wF,EAAK+G,gBAAgB,CAAC,QAAQ,iBADlC,CAAA4pF,EAAAv/E,KAAA,WAGKpR,EAAK23B,kBAAkB+4D,EAAgBzxF,QACrCyxF,EAAgBpiE,IAJvB,CAAAqiE,EAAAv/E,KAAA,eAAAu/E,EAAAv/E,KAAA,EAKSpR,EAAK1G,MAAM+0B,aAAaqiE,EAAgBzxF,KAAKyxF,EAAgBniF,QAAQmiF,EAAgBpiE,KAL9F,OAAAqiE,EAAAx9E,KAAA,cAAAw9E,EAAArvE,OAAA,SAQbovE,GARa,wBAAAC,EAAA/+E,SAAA6+E,EAAAp3F,SAjmIJA,KA2mIlBm2F,qBA3mIkBx2F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA2mIK,SAAA+/E,IAAA,IAAAC,EAAA,OAAA5kE,EAAApzB,EAAAoY,KAAA,SAAA6/E,GAAA,cAAAA,EAAA3/E,KAAA2/E,EAAA1/E,MAAA,YACfy/E,EAAmB7wF,EAAK+G,gBAAgB,CAAC,QAAQ,kBADlC,CAAA+pF,EAAA1/E,KAAA,WAGKpR,EAAK23B,kBAAkBk5D,EAAiB5xF,QACtC4xF,EAAiBviE,IAJxB,CAAAwiE,EAAA1/E,KAAA,eAAA0/E,EAAA1/E,KAAA,EAKSpR,EAAK1G,MAAM+0B,aAAawiE,EAAiB5xF,KAAK4xF,EAAiBtiF,QAAQsiF,EAAiBviE,KALjG,OAAAwiE,EAAA39E,KAAA,cAAA29E,EAAAxvE,OAAA,SAQduvE,GARc,wBAAAC,EAAAl/E,SAAAg/E,EAAAv3F,SA3mILA,KAqnIlB03F,qBArnIkB/3F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAqnIK,SAAAmgF,IAAA,IAAA1oD,EAAA,OAAArc,EAAApzB,EAAAoY,KAAA,SAAAggF,GAAA,cAAAA,EAAA9/E,KAAA8/E,EAAA7/E,MAAA,YACfk3B,EAAwBtoC,EAAK+G,gBAAgB,CAAC,QAAQ,uBADvC,CAAAkqF,EAAA7/E,KAAA,WAGKpR,EAAK23B,kBAAkB2Q,EAAsBrpC,QAC3CqpC,EAAsBha,IAJ7B,CAAA2iE,EAAA7/E,KAAA,eAAA6/E,EAAA7/E,KAAA,EAKSpR,EAAK1G,MAAM+0B,aAAaia,EAAsBrpC,KAAKqpC,EAAsB/5B,QAAQ+5B,EAAsBha,KALhH,OAAA2iE,EAAA99E,KAAA,cAAA89E,EAAA3vE,OAAA,SAQdgnB,GARc,wBAAA2oD,EAAAr/E,SAAAo/E,EAAA33F,SArnILA,KA+nIlB63F,0BA/nIkBl4F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+nIU,SAAAsgF,IAAA,IAAAtqF,EAAAuyE,EAAAgY,EAAA79E,EAAAsmD,EAAA6C,EAAA20B,EAAAC,EAAAv9C,EAAAw9C,EAAAjxF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAugF,GAAA,cAAAA,EAAArgF,KAAAqgF,EAAApgF,MAAA,UAAOvK,EAAP0qF,EAAAp1F,OAAA,QAAAoE,IAAAgxF,EAAA,GAAAA,EAAA,GAAe,KAAKnY,EAApBmY,EAAAp1F,OAAA,QAAAoE,IAAAgxF,EAAA,GAAAA,EAAA,GAAsC,KAAKH,EAA3CG,EAAAp1F,OAAA,QAAAoE,IAAAgxF,EAAA,GAAAA,EAAA,GAAwD,MAC7E1qF,GAAW7G,EAAK1G,MAAMuN,UACzBA,EAAU7G,EAAK1G,MAAMuN,SAGlBA,EALqB,CAAA2qF,EAAApgF,KAAA,eAAAogF,EAAAlwE,OAAA,SAMjB,MANiB,cASpB/N,EAAiB,GATGi+E,EAAApgF,KAAA,EAUMpR,EAAK+wF,uBAVX,cAUpBl3B,EAVoB23B,EAAAr+E,KAWpBupD,EAAuB18D,EAAK+G,gBAAgB,CAAC,QAAQ,oBAXjCyqF,EAAApgF,KAAA,GAaKpR,EAAKqvF,sBAbV,WAapBgC,EAboBG,EAAAr+E,KAcrBimE,EAdqB,CAAAoY,EAAApgF,KAAA,gBAAAogF,EAAApgF,KAAA,GAeEpR,EAAK88E,qBAAqBj2E,GAAQ,GAfpC,QAexBuyE,EAfwBoY,EAAAr+E,KAAA,YAkBtBimE,IAAqBiY,EAlBC,CAAAG,EAAApgF,KAAA,gBAmBlBkgF,EAAkBtxF,EAAKqR,MAAM+nE,GAAmBv2D,IAAI7iB,EAAKqR,MAAMggF,IAC/Dt9C,EAAU/6C,OAAOmF,KAAKu+D,GAAsBvgE,OAE9Ci1F,IACFA,EAAepxF,EAAKqR,MAAM+/E,GAAcvuE,IAAIkxB,IAvBtBy9C,EAAApgF,KAAA,GA4BlBpR,EAAKyQ,aAAazX,OAAOmF,KAAKu+D,GAA9B,eAAA+0B,EAAAz4F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAqD,SAAA6gF,EAAO5sF,GAAP,IAAAo1D,EAAAvlB,EAAAg9C,EAAAt+E,EAAA,OAAA4Y,EAAApzB,EAAAoY,KAAA,SAAA2gF,GAAA,cAAAA,EAAAzgF,KAAAygF,EAAAxgF,MAAA,cACnD8oD,EAAmBwC,EAAqB53D,GACxC6vC,EAAYulB,EAAiBrvB,gBAAgB8J,UAFMi9C,EAAAxgF,KAAA,EAG3BpR,EAAKoxB,oBAAoByoC,EAAkB56D,KAAK,WAAW,CAAC01C,IAHjC,QAGnDg9C,EAHmDC,EAAAz+E,QAKnDE,EAAmBrT,EAAKqR,MAAMsgF,GAAiBljF,MAAM6iF,GACrDF,IAEF/9E,EAAmBA,EAAiB9B,MAAM8B,EAAiB5E,MAAM2iF,KAEnE79E,EAAeohC,GAAa30C,EAAKgsC,aAAa34B,IAVS,wBAAAu+E,EAAAhgF,SAAA8/E,EAAAr4F,SAArD,gBAAAw4F,GAAA,OAAAJ,EAAA3/E,MAAAzY,KAAAiH,YAAA,IA5BkB,eAAAkxF,EAAAlwE,OAAA,SA2CnBtoB,OAAO8J,OAAOyQ,IA3CK,yBAAAi+E,EAAA5/E,SAAAu/E,EAAA93F,SA/nIVA,KA8qIlBy4F,sBA9qIkB94F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA8qIM,SAAAkhF,IAAA,IAAAlrF,EAAAuyE,EAAAuJ,EAAAqP,EAAAz+E,EAAA/N,EAAAq0D,EAAA6C,EAAA20B,EAAAC,EAAAW,EAAA3xF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAihF,GAAA,cAAAA,EAAA/gF,KAAA+gF,EAAA9gF,MAAA,UAAOvK,EAAPorF,EAAA91F,OAAA,QAAAoE,IAAA0xF,EAAA,GAAAA,EAAA,GAAe,KAAK7Y,EAApB6Y,EAAA91F,OAAA,QAAAoE,IAAA0xF,EAAA,GAAAA,EAAA,GAAsC,KAAKtP,EAA3CsP,EAAA91F,OAAA,QAAAoE,IAAA0xF,EAAA,IAAAA,EAAA,GAA6DD,EAA7DC,EAAA91F,OAAA,QAAAoE,IAAA0xF,EAAA,IAAAA,EAAA,IAEjBprF,GAAW7G,EAAK1G,MAAMuN,UACzBA,EAAU7G,EAAK1G,MAAMuN,SAGlBA,EANiB,CAAAqrF,EAAA9gF,KAAA,eAAA8gF,EAAA5wE,OAAA,SAOb,MAPa,cAUhB/N,EAAiB,GACjB/N,EAAkBxF,EAAKy1D,0BAXPy8B,EAAA9gF,KAAA,GAYUpR,EAAK+wF,uBAZf,eAYhBl3B,EAZgBq4B,EAAA/+E,KAahBupD,EAAuB18D,EAAK+G,gBAAgB,CAAC,QAAQ,oBAbrCmrF,EAAA9gF,KAAA,GAeSpR,EAAKqvF,sBAfd,WAehBgC,EAfgBa,EAAA/+E,KAgBjBimE,EAhBiB,CAAA8Y,EAAA9gF,KAAA,gBAAA8gF,EAAA9gF,KAAA,GAiBMpR,EAAK88E,qBAAqBj2E,GAAQ,GAjBxC,QAiBpBuyE,EAjBoB8Y,EAAA/+E,KAAA,YAoBlBimE,IAAqBiY,EApBH,CAAAa,EAAA9gF,KAAA,gBAqBdkgF,EAAkBtxF,EAAKqR,MAAM+nE,GAAmBv2D,IAAI7iB,EAAKqR,MAAMggF,IArBjDa,EAAA9gF,KAAA,GAuBdpR,EAAKyQ,aAAazX,OAAOmF,KAAKu+D,GAA9B,eAAAy1B,EAAAn5F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAqD,SAAAuhF,EAAOttF,GAAP,IAAAo1D,EAAAvlB,EAAApvC,EAAA8sF,EAAAC,EAAA1yD,EAAAvsB,EAAAk/E,EAAA9mE,EAAA,OAAAQ,EAAApzB,EAAAoY,KAAA,SAAAuhF,GAAA,cAAAA,EAAArhF,KAAAqhF,EAAAphF,MAAA,cACnD8oD,EAAmBwC,EAAqB53D,GACxC6vC,EAAYulB,EAAiBrvB,gBAAgB8J,UAC7CpvC,EAAcC,EAAgB00D,EAAiBlkC,WAHIw8D,EAAAphF,KAAA,EAO/CqP,QAAQkD,IAAI,CACpB3jB,EAAKs7B,kBAAkB/1B,GACvBvF,EAAKoxB,oBAAoByoC,EAAkB56D,KAAK,WAAW,CAAC01C,MATL,OAAA09C,EAAAG,EAAAr/E,KAAAm/E,EAAAt5F,OAAAqnC,EAAA,EAAArnC,CAAAq5F,EAAA,GAKvDzyD,EALuD0yD,EAAA,GAMvDj/E,EANuDi/E,EAAA,GAYnDC,EAAmBvyF,EAAKqR,MAAMgC,GAAkB5E,MAAMzO,EAAKqR,MAAMuuB,IACnEnU,EAAe8mE,EAAiB9jF,MAAM6iF,GACtC3O,IACFl3D,EAAezrB,EAAKgU,iBAAiByX,EAAa,KAGpDlY,EAAe2mD,EAAiBlkC,WAAag8D,EAAehyF,EAAKgsC,aAAavgB,GAAgBA,EAlBrC,yBAAA+mE,EAAA5gF,SAAAwgF,EAAA/4F,SAArD,gBAAAo5F,GAAA,OAAAN,EAAArgF,MAAAzY,KAAAiH,YAAA,IAvBc,eAAA4xF,EAAA5wE,OAAA,SA6Cf0wE,EAAeh5F,OAAO8J,OAAOyQ,GAAkBA,GA7ChC,yBAAA2+E,EAAAtgF,SAAAmgF,EAAA14F,SA9qINA,KA+tIlBq5F,gBA/tIkB,eAAAC,EAAA35F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+tIA,SAAA+hF,EAAO9tF,EAAMiB,GAAb,IAAAtC,EAAAwqF,EAAAzoF,EAAAk3D,EAAAm2B,EAAAvyF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA6hF,GAAA,cAAAA,EAAA3hF,KAAA2hF,EAAA1hF,MAAA,cAAoB3N,EAApBovF,EAAA12F,OAAA,QAAAoE,IAAAsyF,EAAA,IAAAA,EAAA,GACV5E,EAAU,GACVzoF,EAAkBxF,EAAKy1D,0BACvBiH,EAAuB18D,EAAK+G,gBAAgB,CAAC,QAAQ,oBAH3C+rF,EAAA1hF,KAAA,EAKVpR,EAAKyQ,aAAazX,OAAOmF,KAAKu+D,GAA9B,eAAAq2B,EAAA/5F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAqD,SAAAmiF,EAAO74B,GAAP,IAAAD,EAAArvB,EAAA8J,EAAApvC,EAAAq6B,EAAA,OAAA3T,EAAApzB,EAAAoY,KAAA,SAAAgiF,GAAA,cAAAA,EAAA9hF,KAAA8hF,EAAA7hF,MAAA,UACnD8oD,EAAmBwC,EAAqBvC,GACxCtvB,EAAkBqvB,EAAiBrvB,gBACnC8J,EAAY9J,EAAgB8J,YAC9BwlB,IAAcr1D,GAASD,WAAWkB,GAAQ,GAJW,CAAAktF,EAAA7hF,KAAA,YAKjD7L,EAAcC,EAAgB00D,EAAiBlkC,WACrDjwB,EAAS/F,EAAKgU,iBAAiBjO,EAAO,IACjCtC,EAPkD,CAAAwvF,EAAA7hF,KAAA,gBAAA6hF,EAAA7hF,KAAA,EAQxBpR,EAAKs7B,kBAAkB/1B,GARC,OAQ/Cq6B,EAR+CqzD,EAAA9/E,KASrDpN,EAASA,EAAO8c,IAAI+c,GATiC,QAWvD75B,EAAS/F,EAAKqtB,qBAAqBtnB,EAAOm0D,EAAiBl8D,UAC3DiwF,EAAQt5C,GAAa5uC,EAZkCktF,EAAA7hF,KAAA,iBAcvD68E,EAAQt5C,GAAa,EAdkC,yBAAAs+C,EAAArhF,SAAAohF,EAAA35F,SAArD,gBAAA65F,GAAA,OAAAH,EAAAjhF,MAAAzY,KAAAiH,YAAA,IALU,cAAAwyF,EAAAxxE,OAAA,SAuBTtoB,OAAO8J,OAAOmrF,IAvBL,wBAAA6E,EAAAlhF,SAAAghF,EAAAv5F,SA/tIA,gBAAA85F,EAAAC,GAAA,OAAAT,EAAA7gF,MAAAzY,KAAAiH,YAAA,GAAAjH,KAwvIlBg6F,oBAxvIkB,eAAAC,EAAAt6F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAwvII,SAAA0iF,EAAOtF,GAAP,IAAAxqF,EAAA4kC,EAAAmrD,EAAAlzF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAwiF,GAAA,cAAAA,EAAAtiF,KAAAsiF,EAAAriF,MAAA,cAAe3N,IAAf+vF,EAAAr3F,OAAA,QAAAoE,IAAAizF,EAAA,KAAAA,EAAA,GAAAC,EAAAriF,KAAA,EACYpR,EAAK+wF,uBADjB,YACd1oD,EADcorD,EAAAtgF,MAAA,CAAAsgF,EAAAriF,KAAA,eAAAqiF,EAAAriF,KAAA,EAGLpR,EAAKoxB,oBAAoBiX,EAAkBppC,KAAK,oBAAoB,CAACgvF,EAAQxqF,IAHxE,cAAAgwF,EAAAnyE,OAAA,SAAAmyE,EAAAtgF,MAAA,cAAAsgF,EAAAnyE,OAAA,SAKb,MALa,wBAAAmyE,EAAA7hF,SAAA2hF,EAAAl6F,SAxvIJ,gBAAAq6F,GAAA,OAAAJ,EAAAxhF,MAAAzY,KAAAiH,YAAA,GAAAjH,KA+vIlBs6F,iBA/vIkB,eAAAC,EAAA56F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA+vIC,SAAAgjF,EAAO/uF,EAAMiB,GAAb,IAAAtC,EAAAqwF,EAAA/9B,EAAA3hB,EAAAL,EAAAk6C,EAAA8F,EAAAC,EAAAC,EAAAnuF,EAAAouF,EAAAC,EAAA7zF,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAmjF,GAAA,cAAAA,EAAAjjF,KAAAijF,EAAAhjF,MAAA,cAAoB3N,IAApB0wF,EAAAh4F,OAAA,QAAAoE,IAAA4zF,EAAA,KAAAA,EAAA,GAAiCL,EAAjCK,EAAAh4F,OAAA,QAAAoE,IAAA4zF,EAAA,GAAAA,EAAA,GAAgD,KAC7Dp+B,EAAW,KADEq+B,EAAAhjF,KAAA,EAEapR,EAAKquF,0BAFlB,YAEXj6C,EAFWggD,EAAAjhF,MAAA,CAAAihF,EAAAhjF,KAAA,YAKT2iC,EAAU/zC,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS,aAEvDhB,EAAS/F,EAAKqR,MAAMtL,MACLA,EAAOpI,UAAWoI,EAAO8lB,IAAI,GAR7B,CAAAuoE,EAAAhjF,KAAA,gBAAAgjF,EAAA9yE,OAAA,SASN,MATM,YAYX2sE,EAAU6F,IACE7F,EAAQ9xF,SAAW43C,EAbpB,CAAAqgD,EAAAhjF,KAAA,gBAAAgjF,EAAAhjF,KAAA,GAcGpR,EAAK0yF,gBAAgB5tF,EAAMiB,GAd9B,QAcbkoF,EAdamG,EAAAjhF,KAAA,eAAAihF,EAAAhjF,KAAA,GAoBLqP,QAAQkD,IAAI,CACpB3jB,EAAKoxB,oBAAoBgjB,EAAgBn1C,KAAK,qBAC9Ce,EAAKoxB,oBAAoBgjB,EAAgBn1C,KAAK,oBAAoB,CAACgvF,EAAQxqF,MAtB9D,WAAAswF,EAAAK,EAAAjhF,KAAA6gF,EAAAh7F,OAAAqnC,EAAA,EAAArnC,CAAA+6F,EAAA,GAkBbE,EAlBaD,EAAA,GAmBbluF,EAnBakuF,EAAA,IAyBXC,IAAgBnuF,EAzBL,CAAAsuF,EAAAhjF,KAAA,gBA0BbrL,EAAS/F,EAAKgU,iBAAiBjO,EAAO,IACtCkuF,EAAej0F,EAAKgU,iBAAiBigF,EAAa,IAClDnuF,EAAc9F,EAAKgU,iBAAiBlO,EAAY,IAC1CouF,EAAKpuF,EAAY2I,MAAMwlF,GAGzBH,IAAmBrwF,IACrBsC,EAASA,EAAO0I,MAAMwlF,IAItBl+B,EADEtyD,EACSywF,EAAGrxE,IAAI9c,GAAQwL,MAAM,GAAG9C,OAAO,GAE/B1I,EAAO8c,IAAIqxE,GAAI3iF,MAAM,GAAG9C,OAAO,GAvC/B2lF,EAAA9yE,OAAA,SA4CNy0C,GA5CM,eAAAq+B,EAAA9yE,OAAA,SA+CV,MA/CU,yBAAA8yE,EAAAxiF,SAAAiiF,EAAAx6F,SA/vID,gBAAAg7F,EAAAC,GAAA,OAAAV,EAAA9hF,MAAAzY,KAAAiH,YAAA,GAAAjH,KAgzIlBk7F,WAhzIkB,eAAAC,EAAAx7F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAgzIL,SAAA4jF,EAAO3vF,EAAMS,GAAb,IAAAmvF,EAAAC,EAAAC,EAAApmC,EAAAtoC,EAAA2uE,EAAAC,EAAAxiE,EAAAyiE,EAAApmC,EAAAqmC,EAAA10F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAgkF,GAAA,cAAAA,EAAA9jF,KAAA8jF,EAAA7jF,MAAA,UAAyBsjF,EAAzBM,EAAA74F,OAAA,QAAAoE,IAAAy0F,EAAA,GAAAA,EAAA,GAA0C,KAAKL,EAA/CK,EAAA74F,OAAA,QAAAoE,IAAAy0F,EAAA,GAAAA,EAAA,GAAkE,MACvEJ,EAAkB50F,EAAK+G,gBAAgB,CAAC,YAAY,UACrCksB,QAFV,CAAAgiE,EAAA7jF,KAAA,eAAA6jF,EAAA3zE,OAAA,UAGF,GAHE,UAMLktC,EANK,cAAAjtD,OAMyBgE,EAAY81B,KAAKv2B,MAN1C,KAAAvD,OAMmDmzF,EANnD,KAAAnzF,OAMuEozF,KAC5EzuE,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAR/B,CAAAs3F,EAAA7jF,KAAA,eAAA6jF,EAAA3zE,OAAA,SASFthB,EAAKqR,MAAM6U,IATT,cAYP2uE,EAAU70F,EAAKqR,MAAM,GAZd4jF,EAAA7jF,KAAA,GAaoBpR,EAAKs9E,oBAAoB/3E,EAAYmvF,GAbzD,aAaLI,EAbKG,EAAA9hF,MAAA,CAAA8hF,EAAA7jF,KAAA,YAiBHkhB,EAAiBtyB,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS,QAGzD4tF,EApBI,CAAAM,EAAA7jF,KAAA,gBAAA6jF,EAAA9jF,KAAA,GAAA8jF,EAAA7jF,KAAA,GAsBsBpR,EAAKgvD,yBAAyB18B,EAAesiE,GAtBnE,QAsBLD,EAtBKM,EAAA9hF,KAAA8hF,EAAA7jF,KAAA,iBAAA6jF,EAAA9jF,KAAA,GAAA8jF,EAAArsC,GAAAqsC,EAAA,kBA0BFN,IAAsBA,EAAmBh3F,UAC5Cg3F,EAAqB30F,EAAKqR,MAAM,IA3B3B,eA+BH0jF,EAAY/0F,EAAKqR,MAAMsjF,GAAoBlmF,MAAMqmF,GA/B9CG,EAAA7jF,KAAA,GAiCqBpR,EAAK4L,mBAAmBrG,GAAY,GAAM,GAjC/D,SAiCHopD,EAjCGsmC,EAAA9hF,QAoCP0hF,EAAUE,EAAUlyE,IAAI8rC,EAAgBm7B,0BAA0Br7E,MAAM,KACnEzO,EAAKqR,MAAMwjF,GAASl3F,SACvBqC,EAAKsvD,8BAA8Bd,EAAcqmC,IAtC5C,eAAAI,EAAA3zE,OAAA,SA2CJuzE,GA3CI,yBAAAI,EAAArjF,SAAA6iF,EAAAp7F,KAAA,cAhzIK,gBAAA67F,EAAAC,GAAA,OAAAX,EAAA1iF,MAAAzY,KAAAiH,YAAA,GAAAjH,KA61IlB+7F,aA71IkB,eAAAC,EAAAr8F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA61IH,SAAAykF,EAAOC,GAAP,IAAAC,EAAA,OAAAvpE,EAAApzB,EAAAoY,KAAA,SAAAwkF,GAAA,cAAAA,EAAAtkF,KAAAskF,EAAArkF,MAAA,cAAAqkF,EAAArkF,KAAA,EACSpR,EAAKoxB,oBAAoB,cAAc,aAAa,CAACmkE,IAD9D,YACTC,EADSC,EAAAtiF,MAAA,CAAAsiF,EAAArkF,KAAA,eAAAqkF,EAAAn0E,OAAA,SAGJthB,EAAKqR,MAAMmkF,IAHP,cAAAC,EAAAn0E,OAAA,SAKN,MALM,wBAAAm0E,EAAA7jF,SAAA0jF,EAAAj8F,SA71IG,gBAAAq8F,GAAA,OAAAL,EAAAvjF,MAAAzY,KAAAiH,YAAA,GAAAjH,KAo2IlBikF,oBAp2IkB,eAAAqY,EAAA38F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAo2II,SAAA+kF,EAAOrwF,GAAP,IAAAmvF,EAAAmB,EAAArnC,EAAAtoC,EAAA4vE,EAAAnnC,EAAAonC,EAAAC,EAAAC,EAAAT,EAAAU,EAAA16C,EAAA26C,EAAArB,EAAAsB,EAAA91F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAolF,GAAA,cAAAA,EAAAllF,KAAAklF,EAAAjlF,MAAA,UAAmBsjF,EAAnB0B,EAAAj6F,OAAA,QAAAoE,IAAA61F,EAAA,GAAAA,EAAA,GAAoC,KAAKP,IAAzCO,EAAAj6F,OAAA,QAAAoE,IAAA61F,EAAA,KAAAA,EAAA,GAEd5nC,EAFc,uBAAAjtD,OAEyBgE,EAAY81B,KAAKv2B,MAF1C,KAAAvD,OAEmDmzF,EAFnD,KAAAnzF,OAEuEs0F,KACrF3vE,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAJtB,CAAA04F,EAAAjlF,KAAA,eAAAilF,EAAA/0E,OAAA,SAKXthB,EAAKqR,MAAM6U,IALA,YAQd4vE,EAAavwF,EAAY4I,UAAU2X,KAAM,SAAAznB,GAAC,MAAgB,aAAXA,EAAEY,QARnC,CAAAo3F,EAAAjlF,KAAA,gBAAAilF,EAAAjlF,KAAA,GAYYpR,EAAK4L,mBAAmBrG,GAAY,GAAM,GAZtD,WAYZopD,EAZY0nC,EAAAljF,OAaZ4iF,EAAyBpnC,EAAgBrjD,yBAAyBwqF,EAAWvnF,QAAQ7J,kBAG7DqxF,EAAuBv0D,IAAI,MAhBvC,CAAA60D,EAAAjlF,KAAA,gBAAAilF,EAAAjlF,KAAA,GAsBNqP,QAAQkD,IAAI,CACpB3jB,EAAKo1F,aAAaU,EAAWvnF,SAC7BvO,EAAKoxB,oBAAoB0kE,EAAWhxF,MAAM,iBAxB5B,WAAAkxF,EAAAK,EAAAljF,KAAA8iF,EAAAj9F,OAAAqnC,EAAA,EAAArnC,CAAAg9F,EAAA,GAoBdR,EApBcS,EAAA,GAqBdC,EArBcD,EAAA,IA2BZT,IAAaU,EA3BD,CAAAG,EAAAjlF,KAAA,YA8BTsjF,EA9BS,CAAA2B,EAAAjlF,KAAA,gBAAAilF,EAAAjlF,KAAA,GA+BapR,EAAKoxB,oBAAoB0kE,EAAWhxF,MAAM,YAAY,CAACS,EAAY81B,KAAK9sB,UA/BrF,QA+BZmmF,EA/BY2B,EAAAljF,KAAA,YAkCVuhF,EAlCU,CAAA2B,EAAAjlF,KAAA,YAqCNoqC,EAAgBx7C,EAAK+G,gBAAgB,CAAC,UAAU,kBAGhDovF,EAAoBn2F,EAAKqR,MAAMqjF,GAAkB7xE,IAAI7iB,EAAKqR,MAAM6kF,IAClEpB,EAAmB90F,EAAKqR,MAAMmkF,GAAW/mF,MAAM0nF,GAE/CN,IACFf,EAAmBA,EAAiBjyE,IAAI,MAAMpU,MAAMzO,EAAKqR,MAAMmqC,KAG5Dx7C,EAAKqR,MAAMyjF,GAAkBn3F,QA/CtB,CAAA04F,EAAAjlF,KAAA,gBAAAilF,EAAA/0E,OAAA,SAgDHthB,EAAKsvD,8BAA8Bd,EAAcsmC,IAhD9C,eAAAuB,EAAA/0E,OAAA,SAuDb,MAvDa,yBAAA+0E,EAAAzkF,SAAAgkF,EAAAv8F,SAp2IJ,gBAAAi9F,GAAA,OAAAX,EAAA7jF,MAAAzY,KAAAiH,YAAA,GAAAjH,KA65IlB8jF,wBA75IkBnkF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA65IQ,SAAA0lF,IAAA,IAAA1vF,EAAArB,EAAAijB,EAAA+tE,EAAAl2F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAwlF,GAAA,cAAAA,EAAAtlF,KAAAslF,EAAArlF,MAAA,UAAOvK,EAAP2vF,EAAAr6F,OAAA,QAAAoE,IAAAi2F,EAAA,GAAAA,EAAA,GAAe,KAAKhxF,EAApBgxF,EAAAr6F,OAAA,QAAAoE,IAAAi2F,EAAA,GAAAA,EAAA,GAAoC,KACvD3vF,IACHA,EAAU7G,EAAK1G,MAAMuN,UAElBrB,GAAmBxF,EAAK1G,MAAMwZ,mBACjCtN,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBj9B,EAAK1G,MAAMwZ,mBAGzDjM,GAAYrB,EARO,CAAAixF,EAAArlF,KAAA,eAAAqlF,EAAAn1E,OAAA,UASf,GATe,cAYpBmH,EAASzoB,EAAKqR,MAAM,GAZAolF,EAAArlF,KAAA,EAalBpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAAkxF,EAAA19F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAA8lF,EAAO7xF,GAAP,IAAAS,EAAAqxF,EAAAC,EAAAvmC,EAAAwkC,EAAA,OAAA7oE,EAAApzB,EAAAoY,KAAA,SAAA6lF,GAAA,cAAAA,EAAA3lF,KAAA2lF,EAAA1lF,MAAA,UAC7C7L,EAAcC,EAAgBV,IACjBS,EAAY4I,UAAU2X,KAAM,SAAAznB,GAAC,MAAgB,aAAXA,EAAEY,OAFJ,CAAA63F,EAAA1lF,KAAA,gBAAA0lF,EAAA1lF,KAAA,EAOvCqP,QAAQkD,IAAI,CACpB3jB,EAAKywD,iBAAiB5pD,EAAQtB,GAAY,GAC1CvF,EAAKs9E,oBAAoB/3E,EAAY,MAAK,KATK,OAAAqxF,EAAAE,EAAA3jF,KAAA0jF,EAAA79F,OAAAqnC,EAAA,EAAArnC,CAAA49F,EAAA,GAK/CtmC,EAL+CumC,EAAA,IAM/C/B,EAN+C+B,EAAA,KAYzBvmC,IACtB7nC,EAASA,EAAOnX,KAAKwjF,EAAiBrmF,MAAM6hD,KAbG,yBAAAwmC,EAAAllF,SAAA+kF,EAAAt9F,SAA/C,gBAAA09F,GAAA,OAAAL,EAAA5kF,MAAAzY,KAAAiH,YAAA,IAbkB,cAAAm2F,EAAAn1E,OAAA,SA+BjBmH,GA/BiB,yBAAAguE,EAAA7kF,SAAA2kF,EAAAl9F,SA75IRA,KA87IlBmkF,cA97IkBxkF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA87IF,SAAAmmF,IAAA,IAAAxxF,EAAAijB,EAAArd,EAAA6rF,EAAA32F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAimF,GAAA,cAAAA,EAAA/lF,KAAA+lF,EAAA9lF,MAAA,eAAO5L,EAAPyxF,EAAA96F,OAAA,QAAAoE,IAAA02F,EAAA,GAAAA,EAAA,GAAuB,OACbj3F,EAAK1G,MAAMwZ,mBACjCtN,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBj9B,EAAK1G,MAAMwZ,mBAE1D2V,EAASzoB,EAAKqR,MAAM,GACpBjG,EAAkBpL,EAAKqR,MAAM,GALnB6lF,EAAA9lF,KAAA,EAMRpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAA2xF,EAAAn+F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAAumF,EAAOtyF,GAAP,IAAAS,EAAA8xF,EAAAC,EAAAC,EAAA5oC,EAAA,OAAA1iC,EAAApzB,EAAAoY,KAAA,SAAAumF,GAAA,cAAAA,EAAArmF,KAAAqmF,EAAApmF,MAAA,cAC7C7L,EAAcC,EAAgBV,GADe0yF,EAAApmF,KAAA,EAEXqP,QAAQkD,IAAI,CAClD3jB,EAAKu0F,WAAWzvF,EAAMS,GACtBvF,EAAK4L,mBAAmBrG,GAAY,GAAM,KAJO,OAAA8xF,EAAAG,EAAArkF,KAAAmkF,EAAAt+F,OAAAqnC,EAAA,EAAArnC,CAAAq+F,EAAA,GAE5CE,EAF4CD,EAAA,GAEpC3oC,EAFoC2oC,EAAA,GAO/CC,GAAW5oC,IACblmC,EAASA,EAAOnX,KAAKimF,EAAQ9oF,MAAMkgD,EAAgBvjD,kBACnDA,EAAkBA,EAAgBkG,KAAKq9C,EAAgBvjD,kBATN,wBAAAosF,EAAA5lF,SAAAwlF,EAAA/9F,SAA/C,gBAAAo+F,GAAA,OAAAN,EAAArlF,MAAAzY,KAAAiH,YAAA,IANQ,cAoBdmoB,EAASA,EAAO5F,IAAIzX,GApBN8rF,EAAA51E,OAAA,SAsBPmH,GAtBO,wBAAAyuE,EAAAtlF,SAAAolF,EAAA39F,SA97IEA,KAs9IlBq+F,aAt9IkB1+F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAs9IH,SAAA8mF,IAAA,IAAAC,EAAA36D,EAAA,OAAAhR,EAAApzB,EAAAoY,KAAA,SAAA4mF,GAAA,cAAAA,EAAA1mF,KAAA0mF,EAAAzmF,MAAA,cAGbohD,MAAMslC,UAAUC,IAAM,WACpB,OAAO1+F,KAAK05B,OAAO,SAASilE,EAAIC,GAAM,OAAOD,EAAKC,GAAO,IAG3DzlC,MAAMslC,UAAUzxF,IAAM,WACpB,OAAOlB,KAAKkB,IAAIyL,MAAM,KAAMzY,OAG9Bm5D,MAAMslC,UAAUI,IAAM,WACpB,OAAO7+F,KAAK0+F,MAAM1+F,KAAK8C,QAGnBy7F,EAAM,GACN36D,EAAsBj9B,EAAK1G,MAAM2jC,oBAhB1B46D,EAAAzmF,KAAA,EAiBPpR,EAAKyQ,aAAazX,OAAOmF,KAAK8+B,GAA9B,eAAAk7D,EAAAn/F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAoD,SAAAunF,EAAO70D,GAAP,IAAA/9B,EAAAqN,EAAA,OAAAoZ,EAAApzB,EAAAoY,KAAA,SAAAonF,GAAA,cAAAA,EAAAlnF,KAAAknF,EAAAjnF,MAAA,cAClD5L,EAAkBy3B,EAAoBsG,GACtC1wB,EAAsB,SAAb0wB,EAFyC80D,EAAAjnF,KAAA,EAGlDpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAA8yF,EAAAt/F,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAgD,SAAA0nF,EAAOzzF,GAAP,IAAAS,EAAA0uC,EAAAukD,EAAArqF,EAAA0sB,EAAA49D,EAAAC,EAAAC,EAAA,OAAA1sE,EAAApzB,EAAAoY,KAAA,SAAA2nF,GAAA,cAAAA,EAAAznF,KAAAynF,EAAAxnF,MAAA,cAC9C7L,EAAcC,EAAgBV,GADgB8zF,EAAAxnF,KAAA,EAEhCpR,EAAKkT,gBAAgB3N,EAAYgJ,QAAQsE,EAAO,KAAK,MAAK,EAAM,KAAK,OAFrC,OAE9CohC,EAF8C2kD,EAAAzlF,KAG9CqlF,EAAS,GACXrqF,EAAY,KACV0sB,EAAO,GACP49D,EAAS,GACTC,EAAW,GAEXC,EAAU1kD,EAAMA,EAAM93C,OAAO,GAEnC83C,EAAM71C,QAAS,SAAAozB,GACRrjB,IACHqqF,EAAOryF,KAAK,SACZqyF,EAAOryF,KAAK,QAGZgI,EAAY,GACZwqF,EAAQE,cAAcz6F,QAAS,SAAA06F,GAC7B,IAAMC,EAAgBxzF,EAAY4I,UAAU2X,KAAM,SAAAkzE,GAAE,OAAMA,EAAGzqF,QAAQ7J,gBAAkBo0F,EAAGxqF,aAAa5J,gBACnGq0F,GACF5qF,EAAUhI,KAAK4yF,KAKnBP,EAAOryF,KAAK,YACZqyF,EAAOryF,KAAK,cAEZsyF,EAAM,KAAW,GACjBC,EAAQ,KAAW,GAEnBvqF,EAAU/P,QAAS,SAAAC,GACjBm6F,EAAOryF,KAAK,OAAO9H,EAAEY,MACrBu5F,EAAOryF,KAAK,SAAS9H,EAAEY,MAEvBw5F,EAAOp6F,EAAEY,MAAQ,GACjBy5F,EAASr6F,EAAEY,MAAQ,KAGrB47B,EAAK10B,KAAKqyF,EAAO3pF,KAAK,OAGxB,IAAMnJ,EAAOgtD,IAAmB,IAAZlhC,EAAE7d,WAAgBgB,OAAO,cACvCskF,EAAOj5F,EAAKqR,MAAMmgB,EAAE0nE,UAAUr2E,IAAI,MAAM7c,QAAQ,GAChDmzF,EAAQt0F,WAAW2sB,EAAE4nE,WAErB9+D,EAAM,GACZA,EAAIn0B,KAAJ,GAAA5E,OAAYuD,EAAZ,KAAAvD,OAAqBgiC,IACrBjJ,EAAIn0B,KAAKT,GACT40B,EAAIn0B,KAAK8yF,GACT3+D,EAAIn0B,KAAKgzF,GAELzzF,GAAM,eACR+yF,EAAM,KAAStyF,KAAKtB,WAAWo0F,IAC/BP,EAAQ,KAASvyF,KAAKtB,WAAWs0F,KAGnChrF,EAAU/P,QAAS,SAAAi7F,GACjB,IAAMC,EAAQ9nE,EAAEqnE,cAAc/yE,KAAM,SAAAznB,GAAC,OAAKA,EAAEiQ,aAAa5J,gBAAkB20F,EAAM9qF,QAAQ7J,gBACrF60F,EAAQ,GACRC,EAAS,GACb,GAAIF,EAAM,CAGR,GAFAE,EAAUx5F,EAAKqR,MAAMioF,EAAMG,WAAW97F,QAAwC,UAA9BkH,WAAWy0F,EAAMG,WACjEF,EAASv5F,EAAKqR,MAAMioF,EAAML,MAAMt7F,QAA6C,UAAnCqC,EAAKqR,MAAMioF,EAAML,MAAMp2E,IAAI,MAClB,qBAAxCy2E,EAAK,GAAA/3F,OAAI83F,EAAMp6F,KAAV,kBAA+C,CAC7D,IAAMy6F,EAAiB15F,EAAKqR,MAAMioF,EAAK,GAAA/3F,OAAI83F,EAAMp6F,KAAV,mBAAgC4jB,IAAI,MACtE62E,EAAe/7F,UAClB47F,EAAQA,EAAMjoF,KAAKooF,IAInBh0F,GAAM,eACH/H,MAAMkH,WAAW00F,KACpBd,EAAOY,EAAMp6F,MAAMkH,KAAKtB,WAAW00F,IAEhC57F,MAAMkH,WAAW20F,KACpBd,EAASW,EAAMp6F,MAAMkH,KAAKtB,WAAW20F,KAK3Cl/D,EAAIn0B,KAAKozF,GACTj/D,EAAIn0B,KAAKqzF,KAGX3+D,EAAK10B,KAAKm0B,EAAIzrB,KAAK,QAGrB7V,OAAOmF,KAAKs6F,GAAQr6F,QAAS,SAAAC,GAC3B,IAAMs7F,EAAUlB,EAAOp6F,GAAG05F,MAAMU,EAAOp6F,GAAGlC,OAC1C6D,EAAKghB,UAAL,GAAAzf,OAAkBuD,EAAlB,KAAAvD,OAA2BgiC,EAA3B,KAAAhiC,OAAuClD,EAAvC,iBAAAkD,OAAwDo4F,MAG1D3gG,OAAOmF,KAAKu6F,GAAUt6F,QAAS,SAAAC,GAC7B,IAAMulC,EAAW80D,EAASr6F,GAAG05F,MAAMW,EAASr6F,GAAGlC,OAC/C6D,EAAKghB,UAAL,GAAAzf,OAAkBuD,EAAlB,KAAAvD,OAA2BgiC,EAA3B,KAAAhiC,OAAuClD,EAAvC,kBAAAkD,OAAyDqiC,MAO3Dg0D,EAAIzxF,KAAK00B,EAAKhsB,KAAK,OAvGiC,yBAAA+pF,EAAAhnF,SAAA2mF,EAAAl/F,SAAhD,gBAAAugG,GAAA,OAAAtB,EAAAxmF,MAAAzY,KAAAiH,YAAA,IAHkD,wBAAA+3F,EAAAzmF,SAAAwmF,EAAA/+F,SAApD,gBAAAwgG,GAAA,OAAA1B,EAAArmF,MAAAzY,KAAAiH,YAAA,IAjBO,OA+HbN,EAAKghB,UAAU42E,EAAI/oF,KAAK,OA/HX,wBAAAgpF,EAAAjmF,SAAA+lF,EAAAt+F,SAt9IGA,KAulJlB4jF,gBAvlJkBjkF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAulJA,SAAAipF,IAAA,IAAAp+D,EAAAl2B,EAAAm3B,EAAAlU,EAAAsxE,EAAAz5F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA+oF,GAAA,cAAAA,EAAA7oF,KAAA6oF,EAAA5oF,MAAA,cAAOsqB,EAAPq+D,EAAA59F,OAAA,QAAAoE,IAAAw5F,EAAA,GAAAA,EAAA,GAAgB,KAAKv0F,EAArBu0F,EAAA59F,OAAA,QAAAoE,IAAAw5F,EAAA,GAAAA,EAAA,GAAqC,KAAKp9D,EAA1Co9D,EAAA59F,OAAA,QAAAoE,IAAAw5F,EAAA,GAAAA,EAAA,GAAuD,KACnEtxE,EAASzoB,EAAKqR,MAAM,GAEnB7L,IACHA,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBj9B,EAAK1G,MAAMwZ,mBAJ9CknF,EAAA5oF,KAAA,EAOVpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAAy0F,EAAAjhG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAAqpF,EAAOp1F,GAAP,IAAAS,EAAAoB,EAAAwzF,EAAA,OAAAluE,EAAApzB,EAAAoY,KAAA,SAAAmpF,GAAA,cAAAA,EAAAjpF,KAAAipF,EAAAhpF,MAAA,cAC7C7L,EAAcC,EAAgBV,GAC9B6B,EAAgB+0B,EAAW,CAACA,GAAY,KAFK0+D,EAAAhpF,KAAA,EAGpBpR,EAAK0qF,qBAAqBnlF,EAAY81B,KAAK9sB,QAAQouB,EAAah2B,GAH5C,QAG7CwzF,EAH6CC,EAAAjnF,OAI3BgnF,EAAiBxP,QACvCliE,EAASA,EAAOnX,KAAK6oF,EAAiBxP,QALW,wBAAAyP,EAAAxoF,SAAAsoF,EAAA7gG,SAA/C,gBAAAghG,GAAA,OAAAJ,EAAAnoF,MAAAzY,KAAAiH,YAAA,IAPU,cAAA05F,EAAA14E,OAAA,SAeTmH,GAfS,wBAAAuxE,EAAApoF,SAAAkoF,EAAAzgG,SAvlJAA,KAwmJlB+jF,gBAAkB,WAIhB,OAHKp9E,EAAKyxD,eACRzxD,EAAKyxD,aAAe,IAAI5D,EAAa7tD,EAAK1G,QAErC0G,EAAKyxD,cA5mJIp4D,KA8mJlBihG,kBAAoB,SAAC/0F,GACnB,IAAMkjB,EAAS,GACT8b,EAAYvkC,EAAK+G,gBAAgB,CAAC,cAiBxC,OAhBA/N,OAAOmF,KAAKomC,GAAWnmC,QAAS,SAAAs9B,GAC9B,IAAM4+C,EAAiB/1C,EAAU7I,GAC5B4+C,EAAernD,UAGY,SAA5BqnD,EAAejlC,SACZilC,EAAe/kC,eAAexwC,SAASQ,EAAY81B,KAAKv2B,SAC3D2jB,EAAOiT,GAAY4+C,GAGC/0E,EAAY4I,UAAU2X,KAAM,SAAAznB,GAAC,OAAKA,EAAE40B,SAAW50B,EAAEY,KAAKyF,gBAAkB41E,EAAejlC,SAAS3wC,kBAEpH+jB,EAAOiT,GAAY4+C,MAIlB7xD,GAjoJSpvB,KAmoJlBs3D,qBAAuB,SAAC4pC,EAAMznD,GAC5B,IAAM0I,EAAgBx7C,EAAKqR,MAAMrR,EAAK+G,gBAAgB,CAAC,UAAU,mBAEjE,IADAwzF,EAAQv6F,EAAKqR,MAAMkpF,MACLA,EAAM58F,QAAQ,CAC1B,OAAQm1C,GACN,IAAK,MACH,IAAMynC,EAAe/+B,EAAc34B,IAAI,YACvC03E,EAAQA,EAAM9rF,MAAM8rE,GACtB,MACA,IAAK,OACH,IAAMC,EAAgBh/B,EAAc34B,IAAI,SACxC03E,EAAQA,EAAM9rF,MAAM+rE,GACtB,MACA,IAAK,QACH,IAAMC,EAAiBj/B,EAAc34B,IAAI,IACzC03E,EAAQA,EAAM9rF,MAAMgsE,GACtB,MACA,IAAK,OACH8f,EAAQA,EAAM9rF,MAAM+sC,GAKxB,OAAO++C,EAET,OAAO,MA5pJSlhG,KA8pJlBmhG,kCA9pJkB,eAAAC,EAAAzhG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA8pJkB,SAAA6pF,EAAO7zF,GAAP,IAAAtB,EAAAoB,EAAAg0F,EAAAp2D,EAAAq2D,EAAAt6F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA4pF,GAAA,cAAAA,EAAA1pF,KAAA0pF,EAAAzpF,MAAA,cAAe7L,EAAfq1F,EAAAz+F,OAAA,QAAAoE,IAAAq6F,EAAA,GAAAA,EAAA,GAA2B,KAAKj0F,EAAhCi0F,EAAAz+F,OAAA,QAAAoE,IAAAq6F,EAAA,GAAAA,EAAA,GAA8C,KAC1ED,EAA4B,GAC5Bp2D,EAAYvkC,EAAK+G,gBAAgB,CAAC,cAFN8zF,EAAAzpF,KAAA,EAI5BpR,EAAKyQ,aAAazX,OAAOmF,KAAKomC,GAA9B,eAAAu2D,EAAA9hG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAyC,SAAAkqF,EAAOr/D,GAAP,IAAA4+C,EAAA90E,EAAAijB,EAAAgpC,EAAA,OAAAxlC,EAAApzB,EAAAoY,KAAA,SAAA+pF,GAAA,cAAAA,EAAA7pF,KAAA6pF,EAAA5pF,MAAA,WACzCzK,GAAkBA,EAAc5B,SAAS22B,GADA,CAAAs/D,EAAA5pF,KAAA,eAAA4pF,EAAA15E,OAAA,qBAKvCg5D,EAAiB/1C,EAAU7I,IAEbzI,QAPyB,CAAA+nE,EAAA5pF,KAAA,eAAA4pF,EAAA15E,OAAA,kBAWvC9b,EAAkB,IACRD,EAAYT,OAASS,EAEjCkjB,EAAS,KAdgCuyE,EAAApyC,GAerCltB,EAfqCs/D,EAAA5pF,KAgBtC,SAhBsC4pF,EAAApyC,GAAA,GAmBtC,SAnBsCoyC,EAAApyC,GAAA,2BAAAoyC,EAAA5pF,KAAA,GAiB1BpR,EAAKm9E,wBAAwBt2E,EAAQrB,GAjBX,eAiBzCijB,EAjByCuyE,EAAA7nF,KAAA6nF,EAAA15E,OAAA,2BAoBnCmwC,EAAezxD,EAAKo9E,kBApBe4d,EAAA5pF,KAAA,GAqB1BqgD,EAAa9B,oBAAoB9oD,EAAQrB,GArBf,eAqBzCijB,EArByCuyE,EAAA7nF,KAAA6nF,EAAA15E,OAAA,2BAAA05E,EAAA15E,OAAA,oBA2BzCmH,IACFA,EAASA,EAAO5F,IAAI,MAChBy3D,EAAe7kC,wBACjBhtB,EAASzoB,EAAK2wD,qBAAqBloC,EAAO6xD,EAAe7kC,wBAE3DklD,EAA0Bj/D,GAAYjT,GAhCK,yBAAAuyE,EAAAppF,SAAAmpF,EAAA1hG,SAAzC,gBAAA4hG,GAAA,OAAAH,EAAAhpF,MAAAzY,KAAAiH,YAAA,IAJ4B,cAAAu6F,EAAAv5E,OAAA,SAwC3Bq5E,GAxC2B,wBAAAE,EAAAjpF,SAAA8oF,EAAArhG,SA9pJlB,gBAAA6hG,GAAA,OAAAT,EAAA3oF,MAAAzY,KAAAiH,YAAA,GAAAjH,KAwsJlB8hG,8BAxsJkB,eAAAC,EAAApiG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAwsJc,SAAAwqF,EAAO91F,GAAP,IAAAoB,EAAA20F,EAAA/2D,EAAAg3D,EAAAj7F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAuqF,GAAA,cAAAA,EAAArqF,KAAAqqF,EAAApqF,MAAA,cAAmBzK,EAAnB40F,EAAAp/F,OAAA,QAAAoE,IAAAg7F,EAAA,GAAAA,EAAA,GAAiC,KACzDD,EAAwB,GACxB/2D,EAAYvkC,EAAK+G,gBAAgB,CAAC,cAFVy0F,EAAApqF,KAAA,EAIxBpR,EAAKyQ,aAAazX,OAAOmF,KAAKomC,GAA9B,eAAAk3D,EAAAziG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAyC,SAAA6qF,EAAOhgE,GAAP,IAAA4+C,EAAAqhB,EAAAlqC,EAAA,OAAAxlC,EAAApzB,EAAAoY,KAAA,SAAA2qF,GAAA,cAAAA,EAAAzqF,KAAAyqF,EAAAxqF,MAAA,WACzCzK,GAAkBA,EAAc5B,SAAS22B,GADA,CAAAkgE,EAAAxqF,KAAA,eAAAwqF,EAAAt6E,OAAA,qBAKvCg5D,EAAiB/1C,EAAU7I,IAEbzI,QAPyB,CAAA2oE,EAAAxqF,KAAA,eAAAwqF,EAAAt6E,OAAA,iBAWzCq6E,EAAW,KAX8BC,EAAAhzC,GAYrCltB,EAZqCkgE,EAAAxqF,KAatC,SAbsCwqF,EAAAhzC,GAAA,EAmBtC,SAnBsCgzC,EAAAhzC,GAAA,uBActBrjD,EAAY4I,UAAU2X,KAAM,SAAAznB,GAAC,MAAgB,aAAXA,EAAEY,OAdd,CAAA28F,EAAAxqF,KAAA,gBAAAwqF,EAAAxqF,KAAA,GAgBtBpR,EAAKs9E,oBAAoB/3E,EAAY,MAAK,GAhBpB,QAgBvCo2F,EAhBuCC,EAAAzoF,KAAA,eAAAyoF,EAAAt6E,OAAA,2BAoBnCmwC,EAAezxD,EAAKo9E,kBApBewe,EAAAxqF,KAAA,GAqBxBqgD,EAAavC,SAAS3pD,EAAY81B,KAAK9sB,SArBf,eAqBzCotF,EArByCC,EAAAzoF,KAAAyoF,EAAAt6E,OAAA,2BAAAs6E,EAAAt6E,OAAA,oBA2BzCq6E,IACFA,EAAWA,EAAS94E,IAAI,MACpBy3D,EAAe7kC,wBACjBkmD,EAAW37F,EAAK2wD,qBAAqBgrC,EAASrhB,EAAe7kC,wBAE/D6lD,EAAsB5/D,GAAYigE,GAhCS,yBAAAC,EAAAhqF,SAAA8pF,EAAAriG,SAAzC,gBAAAwiG,GAAA,OAAAJ,EAAA3pF,MAAAzY,KAAAiH,YAAA,IAJwB,cAAAk7F,EAAAl6E,OAAA,SAwCvBg6E,GAxCuB,wBAAAE,EAAA5pF,SAAAypF,EAAAhiG,SAxsJd,gBAAAyiG,GAAA,OAAAV,EAAAtpF,MAAAzY,KAAAiH,YAAA,GAAAjH,KAkvJlB0iG,iBAlvJkB,eAAAC,EAAAhjG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAkvJC,SAAAorF,EAAOn3F,EAAMS,GAAb,IAAAoB,EAAA49B,EAAA23D,EAAAC,EAAA77F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAmrF,GAAA,cAAAA,EAAAjrF,KAAAirF,EAAAhrF,MAAA,cAAyBzK,EAAzBw1F,EAAAhgG,OAAA,QAAAoE,IAAA47F,EAAA,GAAAA,EAAA,GAAuC,KAClD53D,EAAYvkC,EAAK+G,gBAAgB,CAAC,cAClCm1F,EAAgB,GAFLE,EAAAhrF,KAAA,EAIXpR,EAAKyQ,aAAazX,OAAOmF,KAAKomC,GAA9B,eAAA83D,EAAArjG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAyC,SAAAyrF,EAAO5gE,GAAP,IAAA4+C,EAAA7xD,EAAAkmC,EAAA4tC,EAAAC,EAAAC,EAAA1G,EAAAtkC,EAAA,OAAAxlC,EAAApzB,EAAAoY,KAAA,SAAAyrF,GAAA,cAAAA,EAAAvrF,KAAAurF,EAAAtrF,MAAA,WAEzCzK,GAAkBA,EAAc5B,SAAS22B,GAFA,CAAAghE,EAAAtrF,KAAA,eAAAsrF,EAAAp7E,OAAA,qBAMvCg5D,EAAiB/1C,EAAU7I,IAEbzI,UAA6C,IAAlCqnD,EAAe9kC,eARD,CAAAknD,EAAAtrF,KAAA,eAAAsrF,EAAAp7E,OAAA,iBAYzCmH,EAAS,KACTkmC,EAAkB,KAbuB+tC,EAAA9zC,GAerCltB,EAfqCghE,EAAAtrF,KAgBtC,SAhBsCsrF,EAAA9zC,GAAA,GAsCtC,SAtCsC8zC,EAAA9zC,GAAA,oBAAA8zC,EAAA1+B,GAiBjCsc,EAAe9kC,eAjBkBknD,EAAAtrF,MAAAsrF,EAAA1+B,GAAA,yBAAA0+B,EAAAtrF,KAAA,GAoBJqP,QAAQkD,IAAI,CAC3C3jB,EAAKu0F,WAAWzvF,EAAMS,GACtBvF,EAAK4L,mBAAmBrG,GAAY,GAAM,KAtBP,eAAAg3F,EAAAG,EAAAvpF,KAAAqpF,EAAAxjG,OAAAqnC,EAAA,EAAArnC,CAAAujG,EAAA,GAoBpC9zE,EApBoC+zE,EAAA,IAoB7B7tC,EApB6B6tC,EAAA,MA2B7BC,EAAel3F,EAAY4I,UAAU2X,KAAM,SAAAznB,GAAC,MAAgB,aAAXA,EAAEY,SAEnD0vD,EAAgBrjD,yBAAyBmxF,EAAaluF,QAAQ7J,iBAC1DqxF,EAAyBpnC,EAAgBrjD,yBAAyBmxF,EAAaluF,QAAQ7J,eAC7F+jB,EAASA,EAAOha,MAAMsnF,IA/BS2G,EAAAp7E,OAAA,2BAAAo7E,EAAAp7E,OAAA,oBAuCnCmwC,EAAezxD,EAAKo9E,kBAvCesf,EAAAl+B,GAwCjC8b,EAAe9kC,eAxCkBknD,EAAAtrF,KAyClC,QAzCkCsrF,EAAAl+B,GAAA,GA4ClC,iBA5CkCk+B,EAAAl+B,GAAA,GAmDlC,qBAnDkCk+B,EAAAl+B,GAAA,2BAAAk+B,EAAAtrF,KAAA,GA0CtBqgD,EAAanD,OAAOxpD,EAAMS,GA1CJ,eA0CrCkjB,EA1CqCi0E,EAAAvpF,KAAAupF,EAAAp7E,OAAA,2BAAAo7E,EAAAtrF,KAAA,GA6CtBqgD,EAAavC,SAAS3pD,EAAY81B,KAAK9sB,SA7CjB,eA6CrCka,EA7CqCi0E,EAAAvpF,QA+CnCsV,EAASzoB,EAAKgU,iBAAiByU,EAAO,IACtCA,EAASzoB,EAAK2wD,qBAAqBloC,EAAO6xD,EAAe7kC,wBAhDtBinD,EAAAp7E,OAAA,2BAAAo7E,EAAAtrF,KAAA,GAoDtBqgD,EAAa9B,oBAAoBpqD,GApDX,eAoDrCkjB,EApDqCi0E,EAAAvpF,KAAAupF,EAAAp7E,OAAA,2BAAAo7E,EAAAp7E,OAAA,mCAAAo7E,EAAAp7E,OAAA,oBA8D9B,OAAXmH,GAAmBzoB,EAAKqR,MAAMoX,GAAQtU,GAAG,KAC3C+nF,EAAcxgE,GAAYjT,GA/DiB,yBAAAi0E,EAAA9qF,SAAA0qF,EAAAjjG,SAAzC,gBAAAsjG,GAAA,OAAAN,EAAAvqF,MAAAzY,KAAAiH,YAAA,IAJW,cAAA87F,EAAA96E,OAAA,SAuEV46E,GAvEU,wBAAAE,EAAAxqF,SAAAqqF,EAAA5iG,SAlvJD,gBAAAujG,EAAAC,GAAA,OAAAb,EAAAlqF,MAAAzY,KAAAiH,YAAA,GAAAjH,KA2zJlBqxF,qBA3zJkB1xF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA2zJK,SAAAisF,IAAA,IAAAvuF,EAAAouB,EAAAh2B,EAAA49B,EAAAolD,EAAAoT,EAAAz8F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA+rF,GAAA,cAAAA,EAAA7rF,KAAA6rF,EAAA5rF,MAAA,cAAO7C,EAAPwuF,EAAA5gG,OAAA,QAAAoE,IAAAw8F,EAAA,GAAAA,EAAA,GAAe,KAAKpgE,EAApBogE,EAAA5gG,OAAA,QAAAoE,IAAAw8F,EAAA,GAAAA,EAAA,GAAiC,MAAMp2F,EAAvCo2F,EAAA5gG,OAAA,QAAAoE,IAAAw8F,EAAA,GAAAA,EAAA,GAAqD,KACrExuF,IACHA,EAAUvO,EAAK1G,MAAMiM,YAAY81B,KAAK9sB,SAElCg2B,EAAYvkC,EAAK+G,gBAAgB,CAAC,cAClC4iF,EAAoB,GALLqT,EAAA5rF,KAAA,EAOfpR,EAAKyQ,aAAazX,OAAOmF,KAAKomC,GAA9B,eAAA04D,EAAAjkG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAyC,SAAAqsF,EAAOp4F,GAAP,IAAAw1E,EAAA3+C,EAAAwhE,EAAAC,EAAA,OAAAnxE,EAAApzB,EAAAoY,KAAA,SAAAosF,GAAA,cAAAA,EAAAlsF,KAAAksF,EAAAjsF,MAAA,WAEzCzK,GAAkBA,EAAc5B,SAASD,GAFA,CAAAu4F,EAAAjsF,KAAA,eAAAisF,EAAA/7E,OAAA,qBAMvCg5D,EAAiB/1C,EAAUz/B,IAEbmuB,QARyB,CAAAoqE,EAAAjsF,KAAA,eAAAisF,EAAA/7E,OAAA,wBAAA+7E,EAAAjsF,KAAA,EAajBpR,EAAKqkF,mBAAmBv/E,EAAMyJ,GAbb,YAazCotB,EAbyC0hE,EAAAlqF,MAAA,CAAAkqF,EAAAjsF,KAAA,YAiBvC+rF,EAAsB,MACtBxgE,EAlBuC,CAAA0gE,EAAAjsF,KAAA,gBAmBnCgsF,EAAkBp9F,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS41B,IAnBtB0gE,EAAAlsF,KAAA,GAAAksF,EAAAjsF,KAAA,GAqBXpR,EAAKgvD,yBAAyBouC,EAAgB9iB,GArBnC,QAqBvC6iB,EArBuCE,EAAAlqF,KAAAkqF,EAAAjsF,KAAA,iBAAAisF,EAAAlsF,KAAA,GAAAksF,EAAAz0C,GAAAy0C,EAAA,kBA4B3C1T,EAAkB7kF,GAAS9E,EAAKgU,iBAAiB2nB,EAAgB4I,EAAUz/B,GAAO9G,SAASm/F,GAGtFxT,EAAkBgB,QACrBhB,EAAkBgB,MAAQ3qF,EAAKqR,MAAM,IAIvCs4E,EAAkBgB,MAAQhB,EAAkBgB,MAAMr5E,KAAKq4E,EAAkB7kF,IApC9B,yBAAAu4F,EAAAzrF,SAAAsrF,EAAA7jG,KAAA,cAAzC,gBAAAikG,GAAA,OAAAL,EAAAnrF,MAAAzY,KAAAiH,YAAA,IAPe,cAAA08F,EAAA17E,OAAA,SA+CdqoE,GA/Cc,wBAAAqT,EAAAprF,SAAAkrF,EAAAzjG,SA3zJLA,KA42JlBkkG,2BAA6B,SAAChvF,GAC5B,IAAKA,EACH,OAAO,EAET,IAAMg2B,EAAYvkC,EAAK+G,gBAAgB,CAAC,cACxC,OAAO/N,OAAO8J,OAAOyhC,GAAWze,KAAM,SAAAvgB,GAAW,OAAKA,EAAY0tB,SAAW1tB,EAAYgJ,QAAQ7J,gBAAkB6J,EAAQ7J,iBAj3J3GrL,KAm3JlB8qC,6BAn3JkBnrC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAm3Ja,SAAA2sF,IAAA,IAAA32F,EAAArB,EAAAm3B,EAAA8gE,EAAAjvC,EAAAtoC,EAAAuV,EAAAiiE,EAAAC,EAAAr9F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA2sF,GAAA,cAAAA,EAAAzsF,KAAAysF,EAAAxsF,MAAA,UAAOvK,EAAP82F,EAAAxhG,OAAA,QAAAoE,IAAAo9F,EAAA,GAAAA,EAAA,GAAe,KAAKn4F,EAApBm4F,EAAAxhG,OAAA,QAAAoE,IAAAo9F,EAAA,GAAAA,EAAA,GAAoC,KAAKhhE,EAAzCghE,EAAAxhG,OAAA,QAAAoE,IAAAo9F,EAAA,GAAAA,EAAA,GAAsD,KAAKF,IAA3DE,EAAAxhG,OAAA,QAAAoE,IAAAo9F,EAAA,KAAAA,EAAA,GAGvBnvC,EAHuB,6BAAAjtD,OAGsBsF,EAHtB,KAAAtF,OAGiCiF,KAAKC,UAAUjB,GAHhD,KAAAjE,OAGoEo7B,EAHpE,KAAAp7B,OAGoFk8F,KAC3Gv3E,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QALb,CAAAigG,EAAAxsF,KAAA,eAAAwsF,EAAAt8E,OAAA,SAMpBthB,EAAKqR,MAAM6U,IANS,cAAA03E,EAAAxsF,KAAA,GASOpR,EAAKw7B,yBAAyB30B,EAAQrB,EAAgBm3B,EAAa,KAAK8gE,GAT/E,aASvBhiE,EATuBmiE,EAAAzqF,MAAA,CAAAyqF,EAAAxsF,KAAA,gBAWrBssF,EAAoB1kG,OAAO8J,OAAO24B,GAAuB1I,OAAQ,SAAC8jC,EAAKgnC,GAE3E,OADAhnC,EAAMA,EAAIvlD,KAAKtR,EAAKqR,MAAMwsF,KAEzB79F,EAAKqR,MAAM,IAdausF,EAAAt8E,OAAA,SAgBpBthB,EAAKsvD,8BAA8Bd,EAAckvC,IAhB7B,eAAAE,EAAAt8E,OAAA,SAkBtBthB,EAAKqR,MAAM,IAlBW,yBAAAusF,EAAAhsF,SAAA4rF,EAAAnkG,SAn3JbA,KAu4JlBmiC,yBAv4JkBxiC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAu4JS,SAAAitF,IAAA,IAAAj3F,EAAArB,EAAAm3B,EAAAohE,EAAAN,EAAAh1E,EAAAu1E,EAAA19F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAgtF,GAAA,cAAAA,EAAA9sF,KAAA8sF,EAAA7sF,MAAA,cAAOvK,EAAPm3F,EAAA7hG,OAAA,QAAAoE,IAAAy9F,EAAA,GAAAA,EAAA,GAAe,KAAKx4F,EAApBw4F,EAAA7hG,OAAA,QAAAoE,IAAAy9F,EAAA,GAAAA,EAAA,GAAoC,KAAKrhE,EAAzCqhE,EAAA7hG,OAAA,QAAAoE,IAAAy9F,EAAA,GAAAA,EAAA,GAAsD,KAAKD,EAA3DC,EAAA7hG,OAAA,QAAAoE,IAAAy9F,EAAA,GAAAA,EAAA,GAAgF,KAAKP,EAArFO,EAAA7hG,OAAA,QAAAoE,IAAAy9F,EAAA,IAAAA,EAAA,GACpBn3F,IACHA,EAAU7G,EAAK1G,MAAMuN,UAElBrB,GAAmBxF,EAAK1G,MAAM2jC,qBAAuBj9B,EAAK1G,MAAMwZ,mBACnEtN,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBj9B,EAAK1G,MAAMwZ,mBAGxD2V,EAAS,GARUw1E,EAAA7sF,KAAA,GAUnBpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAA04F,EAAAllG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAAstF,EAAOr5F,GAAP,IAAAs5F,EAAAC,EAAA,OAAApyE,EAAApzB,EAAAoY,KAAA,SAAAqtF,GAAA,cAAAA,EAAAntF,KAAAmtF,EAAAltF,MAAA,cAC7CgtF,EAAkB54F,EAAgBV,GAAOu2B,KADIijE,EAAAltF,KAAA,EAIpBpR,EAAKoxB,oBAAoBgtE,EAAgBt5F,MAAM,sBAAsB,CAAC+B,IAJlD,YAI7Cw3F,EAJ6CC,EAAAnrF,MAAA,CAAAmrF,EAAAltF,KAAA,eAAAktF,EAAAltF,KAAA,EAO3CpR,EAAKyQ,aAAa4tF,EAAlB,eAAAE,EAAAvlG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAoC,SAAA2tF,EAAOX,EAAeY,GAAtB,IAAAC,EAAApkB,EAAA6iB,EAAAC,EAAA,OAAAnxE,EAAApzB,EAAAoY,KAAA,SAAA0tF,GAAA,cAAAA,EAAAxtF,KAAAwtF,EAAAvtF,MAAA,cACxCysF,EAAiB79F,EAAKqR,MAAMwsF,GADYc,EAAAvtF,KAAA,EAGVpR,EAAKoxB,oBAAoBgtE,EAAgBt5F,MAAM,YAAY,CAAC25F,IAHlD,YAGlCC,EAHkCC,EAAAxrF,MAAA,CAAAwrF,EAAAvtF,KAAA,cAMhCkpE,EAAiByjB,GAA8C/9F,EAAKu9F,2BAA2BmB,KAE7EjB,IAAoBnjB,EAAel0D,cAAgBk0D,EAAe/rE,SAAW+rE,EAAe/rE,QAAQ7J,gBAAkBg6F,EAAgBh6F,cARxH,CAAAi6F,EAAAvtF,KAAA,YAWhC+rF,EAAsB,MACtBxgE,EAZgC,CAAAgiE,EAAAvtF,KAAA,cAa5BgsF,EAAkBp9F,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS41B,KAb7B,CAAAgiE,EAAAvtF,KAAA,gBAAAutF,EAAAxtF,KAAA,GAAAwtF,EAAAvtF,KAAA,GAgBFpR,EAAKgvD,yBAAyBouC,EAAgB9iB,GAhB5C,QAgB9B6iB,EAhB8BwB,EAAAxrF,KAAAwrF,EAAAvtF,KAAA,iBAAAutF,EAAAxtF,KAAA,GAAAwtF,EAAA/1C,GAAA+1C,EAAA,kBAuBpCd,EAAiB79F,EAAKgU,iBAAiB6pF,EAAevjB,EAAet8E,SAASm/F,GAGzE10E,EAAO6xD,EAAex1E,SACzB2jB,EAAO6xD,EAAex1E,OAAS9E,EAAKqR,MAAM,IAI5CoX,EAAO6xD,EAAex1E,OAAS2jB,EAAO6xD,EAAex1E,OAAOwM,KAAKusF,GA/B7B,yBAAAc,EAAA/sF,SAAA4sF,EAAAnlG,KAAA,cAApC,gBAAAulG,EAAAC,GAAA,OAAAN,EAAAzsF,MAAAzY,KAAAiH,YAAA,IAP2C,wBAAAg+F,EAAA1sF,SAAAusF,EAAA9kG,SAA/C,gBAAAylG,GAAA,OAAAZ,EAAApsF,MAAAzY,KAAAiH,YAAA,IAVmB,eAAA29F,EAAA38E,OAAA,SAuDlBmH,GAvDkB,yBAAAw1E,EAAArsF,SAAAksF,EAAAzkG,SAv4JTA,KAg8JlB0lG,aAh8JkB/lG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAg8JH,SAAAmuF,IAAA,IAAAz5F,EAAAqkD,EAAAq1C,EAAA3+F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAiuF,GAAA,cAAAA,EAAA/tF,KAAA+tF,EAAA9tF,MAAA,eAAO7L,EAAP05F,EAAA9iG,OAAA,QAAAoE,IAAA0+F,EAAA,GAAAA,EAAA,GAAmB,OACZj/F,EAAK1G,MAAMiM,cAC7BA,EAAcvF,EAAK1G,MAAMiM,aAFd25F,EAAA9tF,KAAA,EAIKpR,EAAKoxB,oBAAoB7rB,EAAY81B,KAAKv2B,MAAO,OAJtD,YAIP8kD,EAJOs1C,EAAA/rF,MAAA,CAAA+rF,EAAA9tF,KAAA,eAAA8tF,EAAA59E,OAAA,SAMJthB,EAAKqR,MAAMu4C,GAAK/mC,IAAI7iB,EAAKqR,MAAM,OAN3B,cAAA6tF,EAAA59E,OAAA,SAQN,MARM,wBAAA49E,EAAAttF,SAAAotF,EAAA3lG,SAh8JGA,KA08JlBukF,iBA18JkB5kF,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA08JC,SAAAsuF,IAAA,IAAA55F,EAAAsB,EAAAu4F,EAAAC,EAAA3oD,EAAA1lC,EAAAorE,EAAAkjB,EAAAC,EAAAC,EAAAl/F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAwuF,GAAA,cAAAA,EAAAtuF,KAAAsuF,EAAAruF,MAAA,UAAO7L,EAAPi6F,EAAArjG,OAAA,QAAAoE,IAAAi/F,EAAA,GAAAA,EAAA,GAAmB,KAAK34F,EAAxB24F,EAAArjG,OAAA,QAAAoE,IAAAi/F,EAAA,GAAAA,EAAA,GAAgC,MAC5Cj6F,GAAevF,EAAK1G,MAAMiM,cAC7BA,EAAcvF,EAAK1G,MAAMiM,cAEtBsB,GAAW7G,EAAK1G,MAAMuN,UACzBA,EAAU7G,EAAK1G,MAAMuN,SAGlBA,GAAYtB,EARA,CAAAk6F,EAAAruF,KAAA,eAAAquF,EAAAn+E,OAAA,SASR,MATQ,cAAAm+E,EAAAruF,KAAA,EAgBPqP,QAAQkD,IAAI,CACpB3jB,EAAK++F,aAAax5F,GAClBvF,EAAKw4E,eAAe,aAAajzE,EAAYT,MAAMS,EAAYsB,GAC/D7G,EAAKw4E,eAAe,oBAAoBjzE,EAAYT,MAAMS,EAAYsB,KAnBvD,UAAAu4F,EAAAK,EAAAtsF,KAAAksF,EAAArmG,OAAAqnC,EAAA,EAAArnC,CAAAomG,EAAA,GAaf1oD,EAbe2oD,EAAA,GAcfruF,EAdequF,EAAA,GAefjjB,EAfeijB,EAAA,KAsBb3oD,GAAiB1lC,GAAcorE,GAtBlB,CAAAqjB,EAAAruF,KAAA,gBAuBTkuF,EAAOljB,EAAkB7qE,MAAMP,GAC/BuuF,EAAOD,EAAK7wF,MAAMioC,GAxBT+oD,EAAAn+E,OAAA,SA4BRi+E,GA5BQ,eAAAE,EAAAn+E,OAAA,SA+BV,MA/BU,yBAAAm+E,EAAA7tF,SAAAutF,EAAA9lG,SA18JDA,KA2+JlB0kF,uBA3+JkB,eAAA2hB,EAAA1mG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA2+JO,SAAA8uF,EAAOrlB,GAAP,IAAAzzE,EAAArB,EAAAm3B,EAAAlB,EAAAmkE,EAAAt/F,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA4uF,GAAA,cAAAA,EAAA1uF,KAAA0uF,EAAAzuF,MAAA,cAAsBvK,EAAtB+4F,EAAAzjG,OAAA,QAAAoE,IAAAq/F,EAAA,GAAAA,EAAA,GAA8B,KAAKp6F,EAAnCo6F,EAAAzjG,OAAA,QAAAoE,IAAAq/F,EAAA,GAAAA,EAAA,GAAmD,KAAKjjE,EAAxDijE,EAAAzjG,OAAA,QAAAoE,IAAAq/F,EAAA,GAAAA,EAAA,GAAqE,KAArEC,EAAAzuF,KAAA,EACapR,EAAKw7B,yBAAyB30B,EAAQrB,EAAgBm3B,EAAa29C,GADhF,cACjB7+C,EADiBokE,EAAA1sF,KAAA0sF,EAAAv+E,OAAA,SAEhBma,GAAyBA,EAAsB6+C,EAAex1E,OAAS22B,EAAsB6+C,EAAex1E,OAAS9E,EAAKqR,MAAM,IAFhH,wBAAAwuF,EAAAjuF,SAAA+tF,EAAAtmG,SA3+JP,gBAAAymG,GAAA,OAAAJ,EAAA5tF,MAAAzY,KAAAiH,YAAA,GAAAjH,KA++JlB0mG,YA/+JkB/mG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA++JJ,SAAAmvF,IAAA,IAAAC,EAAA,OAAAh0E,EAAApzB,EAAAoY,KAAA,SAAAivF,GAAA,cAAAA,EAAA/uF,KAAA+uF,EAAA9uF,MAAA,cAAA8uF,EAAA9uF,KAAA,EACYpR,EAAKmgG,eADjB,cACNF,EADMC,EAAA/sF,KAAA+sF,EAAA5+E,OAAA,SAELtoB,OAAO8J,OAAOm9F,GAAWltE,OAAQ,SAACqtE,EAAS3xD,GAChD,IAAM4xD,EAAWrgG,EAAKqR,MAAMo9B,EAAU2xD,UAItC,OAHIC,IAAaA,EAAS1iG,UACxByiG,EAAWA,EAAS9uF,KAAK+uF,IAEpBD,GACPpgG,EAAKqR,MAAM,KARD,wBAAA6uF,EAAAtuF,SAAAouF,EAAA3mG,SA/+JIA,KAy/JlB8mG,aAz/JkBnnG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAy/JH,SAAAyvF,IAAA,IAAA73E,EAAA6J,EAAA,OAAArG,EAAApzB,EAAAoY,KAAA,SAAAsvF,GAAA,cAAAA,EAAApvF,KAAAovF,EAAAnvF,MAAA,cACPqX,EAAS,GACT6J,EAAiBtyB,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS,QAFjDw5F,EAAAnvF,KAAA,EAGPpR,EAAKyQ,aAAazX,OAAOmF,KAAK6B,EAAK1G,MAAM2jC,qBAAzC,eAAAujE,EAAAxnG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA8D,SAAA4vF,EAAOl9D,GAAP,IAAA1wB,EAAArN,EAAA,OAAAymB,EAAApzB,EAAAoY,KAAA,SAAAyvF,GAAA,cAAAA,EAAAvvF,KAAAuvF,EAAAtvF,MAAA,cAC5DyB,EAAsB,SAAb0wB,EACT/9B,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBsG,GAFWm9D,EAAAtvF,KAAA,EAG5DpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAAm7F,EAAA3nG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAA+vF,EAAO97F,GAAP,IAAAu7F,EAAAD,EAAAS,EAAAt7F,EAAAu7F,EAAAC,EAAAC,EAAAtvF,EAAAk6E,EAAArnD,EAAA08D,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAp1E,EAAApzB,EAAAoY,KAAA,SAAAqwF,GAAA,cAAAA,EAAAnwF,KAAAmwF,EAAAlwF,MAAA,cAE/CivF,EAAWrgG,EAAKqR,MAAM,GACtB+uF,EAAWpgG,EAAKqR,MAAM,GACtBwvF,EAAc7gG,EAAKqR,MAAM,GACvB9L,EAAcC,EAAgBV,GAC9Bg8F,EAAgBv7F,EAAY81B,KAAKv2B,MAEvC2jB,EAAOq4E,GAAiB,CACtBT,WACAD,WACAS,cACAt8D,UAAU,IAZuC+8D,EAAAlwF,KAAA,EAkBzCqP,QAAQkD,IAAI,CACpB3jB,EAAKs7B,kBAAkB/1B,GACvBvF,EAAKo+E,mBAAmB74E,KApByB,cAAAw7F,EAAAO,EAAAnuF,KAAA6tF,EAAAhoG,OAAAqnC,EAAA,EAAArnC,CAAA+nG,EAAA,GAgBjDrvF,EAhBiDsvF,EAAA,GAiBjDpV,EAjBiDoV,EAAA,GAuBnDX,EAAWrgG,EAAKgU,iBAAiB43E,EAAY,IAAIn9E,MAAMiD,GAvBJ4vF,EAAAlwF,KAAA,GAwBlCpR,EAAKu7B,oBAAoB8kE,EAASv7F,EAAMS,EAAYsN,GAxBlB,WAwBnDwtF,EAxBmDiB,EAAAnuF,KA0BnDsV,EAAOq4E,GAAeT,SAAWA,EACjCD,EAAWA,EAAS9uF,KAAK+uF,KAGnB97D,EAAYvkC,EAAKs6F,kBAAkB/0F,IA9BU,CAAA+7F,EAAAlwF,KAAA,gBAAAkwF,EAAAlwF,KAAA,GAgC3CpR,EAAKyQ,aAAazX,OAAOmF,KAAKomC,GAAWxkC,OAAQ,SAAA27B,GAAQ,OAAK6I,EAAU7I,GAAUyZ,UAAlF,eAAAosD,EAAAvoG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA8F,SAAA2wF,EAAO9lE,GAAP,IAAA4+C,EAAAmnB,EAAAC,EAAA/lE,EAAAgmE,EAAAC,EAAA,OAAA31E,EAAApzB,EAAAoY,KAAA,SAAA4wF,GAAA,cAAAA,EAAA1wF,KAAA0wF,EAAAzwF,MAAA,cAC5FkpE,EAAiB/1C,EAAU7I,GADiEmmE,EAAAzwF,KAAA,EAKxFqP,QAAQkD,IAAI,CACpB3jB,EAAKqkF,mBAAmB3oD,EAASn2B,EAAY81B,KAAK9sB,SAClDvO,EAAKgvD,yBAAyB18B,EAAegoD,KAPmD,OAAAmnB,EAAAI,EAAA1uF,KAAAuuF,EAAA1oG,OAAAqnC,EAAA,EAAArnC,CAAAyoG,EAAA,GAGhG9lE,EAHgG+lE,EAAA,GAIhGC,EAJgGD,EAAA,GAU9F/lE,GAAmBgmE,IACfC,EAA2B5hG,EAAKgU,iBAAiB2nB,EAAgB2+C,EAAet8E,UAAUyQ,MAAMzO,EAAKqR,MAAMswF,OAChFC,EAAyBjkG,UACxDyiG,EAAWA,EAAS9uF,KAAKswF,GACzBn5E,EAAOq4E,GAAev8D,UAAU7I,GAAYkmE,GAdkD,wBAAAC,EAAAjwF,SAAA4vF,EAAAnoG,SAA9F,gBAAAyoG,GAAA,OAAAP,EAAAzvF,MAAAzY,KAAAiH,YAAA,IAhC2C,YAqD/CiF,EAAYskC,YAAatkC,EAAYskC,UAAUF,YArDA,CAAA23D,EAAAlwF,KAAA,gBAsD3C6vF,EAAiBjoG,OAAOC,OAAO,GAAGsM,IACzB4I,UAAYnV,OAAO8J,OAAOyC,EAAY4I,WACrD8yF,EAAe5lE,KAAOriC,OAAOC,OAAO,GAAGsM,EAAYskC,UAAUF,aAGzDs3D,EAAep3D,UAAUk4D,cAC3Bd,EAAep3D,UAAUk4D,aAAa3jG,QAAS,SAAA4jG,GAC7C,IAAMjJ,EAAgBkI,EAAe9yF,UAAU2X,KAAM,SAAAznB,GAAC,OAAKA,EAAEY,OAAS+iG,EAAY/iG,OAClF,GAAI85F,EAAc,CAChB,IAAMkJ,EAAchB,EAAe9yF,UAAUmY,QAAQyyE,GACrDkI,EAAe9yF,UAAU8zF,GAAeD,KAhEGV,EAAAlwF,KAAA,GAwEvCqP,QAAQkD,IAAI,CACpB3jB,EAAKs7B,kBAAkB2lE,GACvBjhG,EAAKo+E,mBAAmB6iB,EAAe5lE,KAAKp8B,QA1EG,WAAAiiG,EAAAI,EAAAnuF,KAAAguF,EAAAnoG,OAAAqnC,EAAA,EAAArnC,CAAAkoG,EAAA,GAsE/CE,EAtE+CD,EAAA,GAuE/CE,EAvE+CF,EAAA,IA6E7CC,IAAiBC,EA7E4B,CAAAC,EAAAlwF,KAAA,gBA8E/CyvF,EAAc7gG,EAAKgU,iBAAiBqtF,EAAe,IAAI5yF,MAAM2yF,GA9EdE,EAAAlwF,KAAA,GA+E3BpR,EAAKu7B,oBAAoBslE,EAAY/7F,EAAMm8F,EAAepuF,GA/E/B,SA+E/CguF,EA/E+CS,EAAAnuF,QAgF3B0tF,EAAYljG,UAC9B8qB,EAAOq4E,GAAeD,YAAcA,EACpCT,EAAWA,EAAS9uF,KAAKuvF,IAlFoB,QAuFnDp4E,EAAOq4E,GAAeV,SAAWA,EAvFkB,yBAAAkB,EAAA1vF,SAAAgvF,EAAAvnG,SAA/C,gBAAA6oG,GAAA,OAAAvB,EAAA7uF,MAAAzY,KAAAiH,YAAA,IAH4D,wBAAAogG,EAAA9uF,SAAA6uF,EAAApnG,SAA9D,gBAAA8oG,GAAA,OAAA3B,EAAA1uF,MAAAzY,KAAAiH,YAAA,IAHO,cAAAigG,EAAAj/E,OAAA,SAiGNmH,GAjGM,wBAAA83E,EAAA3uF,SAAA0uF,EAAAjnG,SAz/JGA,KA4lKlB+oG,sBA5lKkBppG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA4lKM,SAAAwxF,IAAA,IAAA7zC,EAAAtoC,EAAA0xB,EAAA0qD,EAAAC,EAAAC,EAAA,OAAAv2E,EAAApzB,EAAAoY,KAAA,SAAAwxF,GAAA,cAAAA,EAAAtxF,KAAAsxF,EAAArxF,MAAA,UAChBo9C,EADgB,uBAEhBtoC,EAAalmB,EAAKqvD,8BAA8Bb,IAFhC,CAAAi0C,EAAArxF,KAAA,eAAAqxF,EAAAnhF,OAAA,SAIb4E,GAJa,cAOhB0xB,EAAS53C,EAAK+G,gBAAgB,CAAC,QAAQ,WACvCu7F,EAAetiG,EAAK+G,gBAAgB,CAAC,QAAQ,aAR7B07F,EAAArxF,KAAA,EASSpR,EAAKw4B,YAAY8pE,EAAa9wD,UAAS,EAAMoG,GATtD,aAShB2qD,EATgBE,EAAAtvF,OAWEovF,EAAiB53F,MAAQ43F,EAAiB53F,KAAK+3F,OAASH,EAAiB53F,KAAK+3F,MAAMvmG,OAAO,GAX7F,CAAAsmG,EAAArxF,KAAA,gBAYdoxF,EAAaD,EAAiB53F,KAAK+3F,MAAM,GAZ3BD,EAAAnhF,OAAA,SAabthB,EAAKsvD,8BAA8Bd,EAAcg0C,EAAWF,EAAa9qD,MAb5D,eAAAirD,EAAAnhF,OAAA,SAgBf,MAhBe,yBAAAmhF,EAAA7wF,SAAAywF,EAAAhpG,SA5lKNA,KA8mKlBspG,mBA9mKkB3pG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA8mKG,SAAA+xF,IAAA,IAAAhrD,EAAA0qD,EAAA7qD,EAAAla,EAAAslE,EAAAC,EAAAxiG,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA8xF,GAAA,cAAAA,EAAA5xF,KAAA4xF,EAAA3xF,MAAA,eAAA0xF,EAAA3mG,OAAA,QAAAoE,IAAAuiG,EAAA,KAAAA,EAAA,GACblrD,EAAS53C,EAAK+G,gBAAgB,CAAC,QAAQ,WACvCu7F,EAAetiG,EAAK+G,gBAAgB,CAAC,QAAQ,SAFhCg8F,EAAA3xF,KAAA,EAGApR,EAAKs4D,kBAAkBgqC,EAAa9wD,SAAS8wD,EAAa9qD,KAAI,GAAK,EAAMI,GAHzE,YAGbH,EAHasrD,EAAA5vF,MAAA,CAAA4vF,EAAA3xF,KAAA,gBAMXmsB,EAASv9B,EAAKqR,MAAMomC,EAAKla,QACzBslE,EAAW7iG,EAAKqR,MAAMomC,EAAK2oD,UAPhB2C,EAAAzhF,OAAA,SAQV,CACLic,SACAslE,aAVe,eAAAE,EAAA3xF,KAAA,GAaJpR,EAAKgjG,2BAbD,eAAAD,EAAAzhF,OAAA,SAAAyhF,EAAA5vF,MAAA,yBAAA4vF,EAAAnxF,SAAAgxF,EAAAvpG,SA9mKHA,KA8nKlB2pG,yBA9nKkBhqG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA8nKS,SAAAoyF,IAAA,IAAAnsD,EAAA0X,EAAAtoC,EAAAg9E,EAAA3lE,EAAAslE,EAAAvwE,EAAA7J,EAAA06E,EAAA7iG,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAmyF,GAAA,cAAAA,EAAAjyF,KAAAiyF,EAAAhyF,MAAA,UAAO0lC,IAAPqsD,EAAAhnG,OAAA,QAAAoE,IAAA4iG,EAAA,KAAAA,EAAA,GAGnB30C,EAHmB,sBAAAjtD,OAGmBu1C,KACtC5wB,EAAalmB,EAAKqvD,8BAA8Bb,MACnCtoC,EAAWg9E,QAAWljG,EAAKqR,MAAM6U,EAAWg9E,QAAQvlG,UAAauoB,EAAWqX,QAAWv9B,EAAKqR,MAAM6U,EAAWqX,QAAQ5/B,UAAauoB,EAAW28E,UAAa7iG,EAAKqR,MAAM6U,EAAW28E,UAAUllG,QALpL,CAAAylG,EAAAhyF,KAAA,eAAAgyF,EAAA9hF,OAAA,SAMhB,CACL4hF,OAAOljG,EAAKqR,MAAM6U,EAAWg9E,QAC7B3lE,OAAOv9B,EAAKqR,MAAM6U,EAAWqX,QAC7BslE,SAAS7iG,EAAKqR,MAAM6U,EAAW28E,YATV,cAarBK,EAASljG,EAAKqR,MAAM,GACpBksB,EAASv9B,EAAKqR,MAAM,GACpBwxF,EAAW7iG,EAAKqR,MAAM,GACpBihB,EAAiBtyB,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS,QAhBrCq8F,EAAAhyF,KAAA,GAiBnBpR,EAAKyQ,aAAazX,OAAOmF,KAAK6B,EAAK1G,MAAM2jC,qBAAzC,eAAAomE,EAAArqG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA8D,SAAAyyF,EAAO//D,GAAP,IAAA1wB,EAAArN,EAAA,OAAAymB,EAAApzB,EAAAoY,KAAA,SAAAsyF,GAAA,cAAAA,EAAApyF,KAAAoyF,EAAAnyF,MAAA,cAC5DyB,EAAsB,SAAb0wB,EACT/9B,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBsG,GAFWggE,EAAAnyF,KAAA,EAG5DpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAAg+F,EAAAxqG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAA4yF,EAAO3+F,GAAP,IAAAS,EAAAopD,EAAA5uB,EAAA2jE,EAAAn/D,EAAA08D,EAAA0C,EAAAC,EAAA,OAAA33E,EAAApzB,EAAAoY,KAAA,SAAA4yF,GAAA,cAAAA,EAAA1yF,KAAA0yF,EAAAzyF,MAAA,cAC7C7L,EAAcC,EAAgBV,GADe++F,EAAAzyF,KAAA,EAErBpR,EAAK4L,mBAAmBrG,GAAY,EAAMuxC,GAFrB,cAE7C6X,EAF6Ck1C,EAAA1wF,KAAA0wF,EAAAzyF,KAAA,EAG3BpR,EAAKsgC,aAAa/6B,EAAYopD,EAAgB7X,GAHnB,UAG7C/W,EAH6C8jE,EAAA1wF,MAI/Cw7C,IAAmBA,EAAgBM,2BAA8BN,EAAgBM,0BAA0BtxD,QAJ5D,CAAAkmG,EAAAzyF,KAAA,gBAAAyyF,EAAAzyF,KAAA,GAK1BpR,EAAKu7B,oBAAoBozB,EAAgBM,0BAA0BnqD,EAAMS,EAAYsN,GAL3D,QAK3C6wF,EAL2CG,EAAA1wF,KAMjD0vF,EAAWA,EAASvxF,KAAKoyF,GAErB3jE,GAAaA,EAAUQ,SAAWR,EAAUQ,OAAO5iC,UACrDulG,EAASA,EAAO5xF,KAAKoyF,EAASj1F,MAAMsxB,EAAUQ,SAC9ChD,EAASA,EAAOjsB,KAAKoyF,EAASj1F,MAAMsxB,EAAUS,UAVC,aAe7C+D,EAAYvkC,EAAKs6F,kBAAkB/0F,IAfU,CAAAs+F,EAAAzyF,KAAA,gBAAAyyF,EAAAzyF,KAAA,GAiB3CpR,EAAKyQ,aAAazX,OAAOmF,KAAKomC,GAAWxkC,OAAQ,SAAA27B,GAAQ,OAAK6I,EAAU7I,GAAUyZ,UAAlF,eAAA2uD,EAAA9qG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA8F,SAAAkzF,EAAOroE,GAAP,IAAA4+C,EAAA0pB,EAAAC,EAAAx4E,EAAA0xE,EAAAloC,EAAA,OAAAhpC,EAAApzB,EAAAoY,KAAA,SAAAizF,GAAA,cAAAA,EAAA/yF,KAAA+yF,EAAA9yF,MAAA,cAC5FkpE,EAAiB/1C,EAAU7I,GADiEwoE,EAAA9yF,KAAA,EAKxFqP,QAAQkD,IAAI,CACpB3jB,EAAKqkF,mBAAmB3oD,EAASn2B,EAAY81B,KAAK9sB,SAClDvO,EAAKgvD,yBAAyB18B,EAAegoD,KAPmD,OAAA0pB,EAAAE,EAAA/wF,KAAA8wF,EAAAjrG,OAAAqnC,EAAA,EAAArnC,CAAAgrG,EAAA,GAGhGv4E,EAHgGw4E,EAAA,GAIhG9G,EAJgG8G,EAAA,GAU9Fx4E,GAAgB0xE,IACZloC,EAAwBj1D,EAAKgU,iBAAiByX,EAAa6uD,EAAet8E,UAAUyQ,MAAMzO,EAAKqR,MAAM8rF,OAC7EloC,EAAsBt3D,UAElDklG,EAAWA,EAASvxF,KAAK2jD,IAdqE,wBAAAivC,EAAAtyF,SAAAmyF,EAAA1qG,SAA9F,gBAAA8qG,GAAA,OAAAL,EAAAhyF,MAAAzY,KAAAiH,YAAA,IAjB2C,YAsC/CiF,EAAYskC,YAAatkC,EAAYskC,UAAUF,YAtCA,CAAAk6D,EAAAzyF,KAAA,gBAuC3C6vF,EAAiBjoG,OAAOC,OAAO,GAAGsM,IACzB4I,UAAYnV,OAAO8J,OAAOyC,EAAY4I,WACrD8yF,EAAe5lE,KAAOriC,OAAOC,OAAO,GAAGsM,EAAYskC,UAAUF,aAGzDs3D,EAAep3D,UAAUk4D,cAC3Bd,EAAep3D,UAAUk4D,aAAa3jG,QAAS,SAAA4jG,GAC7C,IAAMjJ,EAAgBkI,EAAe9yF,UAAU2X,KAAM,SAAAznB,GAAC,OAAKA,EAAEY,OAAS+iG,EAAY/iG,OAClF,GAAI85F,EAAc,CAChB,IAAMkJ,EAAchB,EAAe9yF,UAAUmY,QAAQyyE,GACrDkI,EAAe9yF,UAAU8zF,GAAeD,KAjDG6B,EAAAzyF,KAAA,GAsDhBpR,EAAK4L,mBAAmBq1F,GAAe,GAAM,GAtD7B,aAsD3C0C,EAtD2CE,EAAA1wF,QAuDvBwwF,EAAmBv4F,iBAAoBu4F,EAAmBv4F,gBAAgBzN,QAvDnD,CAAAkmG,EAAAzyF,KAAA,gBAAAyyF,EAAAzyF,KAAA,GAwDTpR,EAAKu7B,oBAAoBooE,EAAmBv4F,gBAAgBtG,EAAMm8F,EAAepuF,GAxDxE,QAwDzC+wF,EAxDyCC,EAAA1wF,KAyD/C0vF,EAAWA,EAASvxF,KAAKsyF,GAzDsB,yBAAAC,EAAAjyF,SAAA6xF,EAAApqG,SAA/C,gBAAA+qG,GAAA,OAAAZ,EAAA1xF,MAAAzY,KAAAiH,YAAA,IAH4D,wBAAAijG,EAAA3xF,SAAA0xF,EAAAjqG,SAA9D,gBAAAgrG,GAAA,OAAAhB,EAAAvxF,MAAAzY,KAAAiH,YAAA,IAjBmB,eAoFzB4iG,EAASA,EAAOrgF,IAAIggF,GACpBtlE,EAASA,EAAO1a,IAAIggF,GAEdp6E,EAAS,CACby6E,SACA3lE,SACAslE,YA1FuBO,EAAA9hF,OAAA,SA6FlBthB,EAAKsvD,8BAA8Bd,EAAc/lC,IA7F/B,yBAAA26E,EAAAxxF,SAAAqxF,EAAA5pG,SA9nKTA,KA6tKlBirG,YA7tKkB,eAAAC,EAAAvrG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA6tKJ,SAAA2zF,EAAOj/F,GAAP,IAAAw6B,EAAA,OAAA9T,EAAApzB,EAAAoY,KAAA,SAAAwzF,GAAA,cAAAA,EAAAtzF,KAAAszF,EAAArzF,MAAA,cAAAqzF,EAAArzF,KAAA,EACYpR,EAAKsgC,aAAa/6B,GAD9B,YACNw6B,EADM0kE,EAAAtxF,OAE0B,OAArB4sB,EAAUS,OAFf,CAAAikE,EAAArzF,KAAA,eAAAqzF,EAAAnjF,OAAA,SAGHye,EAAUS,QAHP,cAAAikE,EAAAnjF,OAAA,SAKL,MALK,wBAAAmjF,EAAA7yF,SAAA4yF,EAAAnrG,SA7tKI,gBAAAqrG,GAAA,OAAAH,EAAAzyF,MAAAzY,KAAAiH,YAAA,GAAAjH,KAouKlBypC,mBApuKkB9pC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAouKG,SAAA8zF,IAAA,IAAA7xF,EAAAmvB,EAAA2iE,EAAAtkG,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA4zF,GAAA,cAAAA,EAAA1zF,KAAA0zF,EAAAzzF,MAAA,UAAO0B,EAAP8xF,EAAAzoG,OAAA,QAAAoE,IAAAqkG,EAAA,GAAAA,EAAA,GAAwB,KAEtC5kG,EAAK1G,MAAM2jC,qBAAwBj9B,EAAK1G,MAAMuN,QAFhC,CAAAg+F,EAAAzzF,KAAA,eAAAyzF,EAAAvjF,OAAA,UAGV,GAHU,cAMb2gB,EAAkB,GANL4iE,EAAAzzF,KAAA,EAQbpR,EAAKyQ,aAAazX,OAAOmF,KAAK6B,EAAK1G,MAAM2jC,qBAAzC,eAAA6nE,EAAA9rG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA8D,SAAAk0F,EAAOxhE,GAAP,IAAA/9B,EAAA,OAAAymB,EAAApzB,EAAAoY,KAAA,SAAA+zF,GAAA,cAAAA,EAAA7zF,KAAA6zF,EAAA5zF,MAAA,WAC9D0B,GAAoBA,IAAqBywB,EADqB,CAAAyhE,EAAA5zF,KAAA,eAAA4zF,EAAA1jF,OAAA,wBAI5D9b,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBsG,GAJWyhE,EAAA5zF,KAAA,EAK5DpR,EAAKyQ,aAAazX,OAAOmF,KAAKqH,GAA9B,eAAAy/F,EAAAjsG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAAq0F,EAAOpgG,GAAP,IAAAS,EAAA4/F,EAAA39D,EAAAglC,EAAAxQ,EAAA,OAAA/vC,EAAApzB,EAAAoY,KAAA,SAAAm0F,GAAA,cAAAA,EAAAj0F,KAAAi0F,EAAAh0F,MAAA,cAC7C7L,EAAcC,EAAgBV,GADesgG,EAAAh0F,KAAA,EAKzCpR,EAAKmsE,eAAe5mE,EAAYvF,EAAK1G,MAAMuN,SALF,OAAAs+F,EAAAC,EAAAjyF,KAGjDq0B,EAHiD29D,EAGjD39D,iBACAglC,EAJiD24B,EAIjD34B,4BAGEhlC,IACIw0B,EAAWlpD,EAAmBhO,EAAQS,EAAY81B,KAAKv2B,MAC7Dm9B,EAAgB+5B,GAAY,CAC1Bl3D,QACAy+B,WACAh+B,cACAinE,gCAb+C,wBAAA44B,EAAAxzF,SAAAszF,EAAA7rG,SAA/C,gBAAAgsG,GAAA,OAAAJ,EAAAnzF,MAAAzY,KAAAiH,YAAA,IAL4D,wBAAA0kG,EAAApzF,SAAAmzF,EAAA1rG,SAA9D,gBAAAisG,GAAA,OAAAR,EAAAhzF,MAAAzY,KAAAiH,YAAA,IARa,cAAAukG,EAAAvjF,OAAA,SAgCZ2gB,GAhCY,wBAAA4iE,EAAAjzF,SAAA+yF,EAAAtrG,SApuKHA,KAywKlBksG,2BAzwKkBvsG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAywKW,SAAA20F,IAAA,IAAAnwD,EAAAowD,EAAAC,EAAAC,EAAAC,EAAAtlG,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA40F,GAAA,cAAAA,EAAA10F,KAAA00F,EAAAz0F,MAAA,UAAOikC,EAAPuwD,EAAAzpG,OAAA,QAAAoE,IAAAqlG,EAAA,GAAAA,EAAA,GAAgB,KACtC5lG,EAAK1G,MAAMuN,QADW,CAAAg/F,EAAAz0F,KAAA,eAAAy0F,EAAAvkF,OAAA,UAElB,GAFkB,UAIrBmkF,EAAgB,GAChBC,EAAkB1lG,EAAKqR,MAAM,GAAGwR,IAAI,OACpC8iF,EAAkB3lG,EAAK+G,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,qBANpD,CAAA8+F,EAAAz0F,KAAA,eAAAy0F,EAAAz0F,KAAA,EAQnBpR,EAAKyQ,aAAazX,OAAOmF,KAAKwnG,GAA9B,eAAAG,EAAA9sG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA+C,SAAAk1F,EAAOjhG,GAAP,IAAAS,EAAAygG,EAAAv6E,EAAA,OAAAQ,EAAApzB,EAAAoY,KAAA,SAAAg1F,GAAA,cAAAA,EAAA90F,KAAA80F,EAAA70F,MAAA,UAC7C7L,EAAcogG,EAAgB7gG,GACnB,OAAbuwC,GAAqB9vC,EAAY8vC,SAAS3wC,gBAAkB2wC,EAAS3wC,cAFtB,CAAAuhG,EAAA70F,KAAA,eAAA60F,EAAA3kF,OAAA,qBAK/C0kF,EAAgBhmG,EAAK23B,kBAAkBpyB,EAAYT,UACjCS,EAAY+oB,IANiB,CAAA23E,EAAA70F,KAAA,eAAA60F,EAAA70F,KAAA,EAO3BpR,EAAK1G,MAAM+0B,aAAa9oB,EAAYT,MAAMS,EAAYgJ,QAAQhJ,EAAY+oB,KAP/C,OAOjD03E,EAPiDC,EAAA9yF,KAAA,WAS/C6yF,EAT+C,CAAAC,EAAA70F,KAAA,gBAAA60F,EAAA70F,KAAA,GAUtBpR,EAAKyyB,gBAAgBltB,EAAYT,MAAM9E,EAAK1G,MAAMuN,SAV5B,SAU3C4kB,EAV2Cw6E,EAAA9yF,OAW7BsY,EAAa+V,IAAIkkE,KACnCD,EAAc3gG,GAAS,CACrBS,cACAkM,QAAQga,IAdqC,yBAAAw6E,EAAAr0F,SAAAm0F,EAAA1sG,SAA/C,gBAAA6sG,GAAA,OAAAJ,EAAAh0F,MAAAzY,KAAAiH,YAAA,IARmB,cAAAulG,EAAAvkF,OAAA,SA6BpBmkF,GA7BoB,yBAAAI,EAAAj0F,SAAA4zF,EAAAnsG,SAzwKXA,KA2yKlBkiC,oBA3yKkB,eAAA4qE,EAAAntG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA2yKI,SAAAu1F,EAAO36E,EAAa3mB,EAAMS,GAA1B,IAAAsN,EAAAuB,EAAAiyF,EAAA/lG,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAq1F,GAAA,cAAAA,EAAAn1F,KAAAm1F,EAAAl1F,MAAA,UAAsCyB,EAAtCwzF,EAAAlqG,OAAA,QAAAoE,IAAA8lG,EAAA,IAAAA,EAAA,KAEpB56E,EAAezrB,EAAKqR,MAAMoa,IACTtX,GAAG,GAHA,CAAAmyF,EAAAl1F,KAAA,eAAAk1F,EAAAl1F,KAAA,EAImBpR,EAAK4qF,uBAAuBrlF,EAAYsN,GAJ3D,QAIZuB,EAJYkyF,EAAAnzF,QAMhBsY,EAAeA,EAAahd,MAAM2F,IANlB,cAAAkyF,EAAAhlF,OAAA,SASbmK,GATa,wBAAA66E,EAAA10F,SAAAw0F,EAAA/sG,SA3yKJ,gBAAAktG,EAAAC,EAAAC,GAAA,OAAAN,EAAAr0F,MAAAzY,KAAAiH,YAAA,GAAAjH,KAuzKlBqtG,eAvzKkB,eAAAC,EAAA3tG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAuzKD,SAAA+1F,EAAOr4F,EAAQsE,GAAf,IAAAulC,EAAAD,EAAA0uD,EAAAp9B,EAAAq9B,EAAAxmG,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA81F,GAAA,cAAAA,EAAA51F,KAAA41F,EAAA31F,MAAA,cAAsBgnC,EAAtB0uD,EAAA3qG,OAAA,QAAAoE,IAAAumG,EAAA,GAAAA,EAAA,GAAqC,KAAK3uD,EAA1C2uD,EAAA3qG,OAAA,QAAAoE,IAAAumG,EAAA,GAAAA,EAAA,GAAuD,KAAvDC,EAAA31F,KAAA,EAEUpR,EAAKkT,gBAAgB3E,EAAQsE,EAAOulC,EAAeD,GAAa,EAAK,MAF/E,YAET0uD,EAFSE,EAAA5zF,QAIG0zF,EAAW1qG,OAJd,CAAA4qG,EAAA31F,KAAA,eAKPq4D,EAAMo9B,EAAW9zE,OAAQ,SAACglE,EAAIvmE,GAClC,IAAM0nE,EAAWl5F,EAAKgU,iBAAiBwd,EAAE0nE,SAAS,IAClD,OAAOnB,EAAIzmF,KAAK4nF,IAChBl5F,EAAKqR,MAAM,IARA01F,EAAAzlF,OAAA,SAWNmoD,EAAI5mD,IAAIgkF,EAAW1qG,SAXb,cAAA4qG,EAAAzlF,OAAA,SAcR,MAdQ,wBAAAylF,EAAAn1F,SAAAg1F,EAAAvtG,SAvzKC,gBAAA2tG,EAAAC,GAAA,OAAAN,EAAA70F,MAAAzY,KAAAiH,YAAA,GAAAjH,KA20KlBuxF,uBA30KkB,eAAAsc,EAAAluG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA20KO,SAAAs2F,EAAO5hG,EAAYsN,GAAnB,IAAAwB,EAAAzN,EAAA4nD,EAAAtoC,EAAAs5D,EAAAjrE,EAAA+d,EAAA80E,EAAAC,EAAA/mG,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAq2F,GAAA,cAAAA,EAAAn2F,KAAAm2F,EAAAl2F,MAAA,UAA0BiD,EAA1BgzF,EAAAlrG,OAAA,QAAAoE,IAAA8mG,EAAA,GAAAA,EAAA,GAA8C,KAAKzgG,EAAnDygG,EAAAlrG,OAAA,QAAAoE,IAAA8mG,EAAA,GAAAA,EAAA,GAAyD,EAE3EhzF,EAFkB,CAAAizF,EAAAl2F,KAAA,WAGrBiD,EAAsBrU,EAAK+G,gBAAgB,CAAC,QAAQ,SAASxB,EAAYT,MAAM,wBAH1D,CAAAwiG,EAAAl2F,KAAA,eAAAk2F,EAAAhmF,OAAA,SAKZ,MALY,UAUjBktC,EAViB,uBAAAjtD,OAUsBgE,EAAYgJ,QAVlC,KAAAhN,OAU6CsR,EAV7C,KAAAtR,OAUuD8S,KACxE6R,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAZnB,CAAA2pG,EAAAl2F,KAAA,gBAAAk2F,EAAAhmF,OAAA,SAcdthB,EAAKqR,MAAM6U,IAdG,eAAAohF,EAAAl2F,KAAA,GAiBDpR,EAAKkT,gBAAgB3N,EAAYgJ,QAAQsE,EAAO,KAAK,MAAK,EAAM,KAAK,OAAO,GAjB3E,aAiBnB2sE,EAjBmB8nB,EAAAn0F,QAqBNqsE,EAAUrjF,OArBJ,CAAAmrG,EAAAl2F,KAAA,cAsBrBouE,EAAYA,EAAUn4E,QACJrH,EAAKqR,MAAMmuE,EAAUnrE,IAAsB1W,QAvBxC,CAAA2pG,EAAAl2F,KAAA,YAwBbmD,EAAiBvU,EAAKgU,iBAAiBwrE,EAAUnrE,GAAqB,IACvErU,EAAKqR,MAAMkD,GAAgB5W,QAzBb,CAAA2pG,EAAAl2F,KAAA,gBAAAk2F,EAAAhmF,OAAA,SA2BVthB,EAAKsvD,8BAA8Bd,EAAcj6C,IA3BvC,QAAA+yF,EAAAl2F,KAAA,wBA+BfkhB,EAAiBtyB,EAAK+G,gBAAgB,CAAC,QAAQ,SAAS,QA/BzCugG,EAAAl2F,KAAA,GAgCQpR,EAAKgvD,yBAAyB18B,EAAe/sB,GAhCrD,WAgCfgP,EAhCe+yF,EAAAn0F,KAiChBnT,EAAKqR,MAAMkD,GAAgB5W,QAjCX,CAAA2pG,EAAAl2F,KAAA,gBAAAk2F,EAAAhmF,OAAA,SAmCZthB,EAAKsvD,8BAA8Bd,EAAcj6C,IAnCrC,aAuCnB3N,EAAM,GAvCa,CAAA0gG,EAAAl2F,KAAA,gBAAAk2F,EAAAl2F,KAAA,GAwCRpR,EAAK4qF,uBAAuBrlF,EAAYsN,EAAOwB,EAAoBzN,EAAM,GAxCjE,eAAA0gG,EAAAhmF,OAAA,SAAAgmF,EAAAn0F,MAAA,eAAAm0F,EAAAhmF,OAAA,SA2ChB,MA3CgB,yBAAAgmF,EAAA11F,SAAAu1F,EAAA9tG,SA30KP,gBAAAkuG,EAAAC,GAAA,OAAAN,EAAAp1F,MAAAzY,KAAAiH,YAAA,GAAAjH,KAy3KlB6qC,cAz3KkB,eAAAujE,EAAAzuG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAy3KF,SAAA62F,EAAOniG,EAAYsN,GAAnB,IAAA27C,EAAAtoC,EAAA0iD,EAAAhxB,EAAApG,EAAAm2D,EAAAC,EAAApoB,EAAA7wB,EAAA5qB,EAAA,OAAA9X,EAAApzB,EAAAoY,KAAA,SAAA42F,GAAA,cAAAA,EAAA12F,KAAA02F,EAAAz2F,MAAA,UAERo9C,EAFQ,cAAAjtD,OAEsBgE,EAAYgJ,QAFlC,KAAAhN,OAE6CsR,KACrDqT,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAJ5B,CAAAkqG,EAAAz2F,KAAA,eAAAy2F,EAAAvmF,OAAA,SAKLthB,EAAKqR,MAAM6U,IALN,cAQR0iD,EAAUl6D,IAAcC,MAAMslC,MAC9B2D,EAAS53C,EAAK+G,gBAAgB,CAAC,QAAQ,WACvCyqC,EAVQ,GAAAjwC,OAUMqnE,EAAQp3B,UAVdjwC,OAUyBgE,EAAYgJ,QAVrC,YAAAhN,OAUuDsR,EAVvD,uBAAAg1F,EAAAz2F,KAAA,EAcJqP,QAAQkD,IAAI,CACpB3jB,EAAKs4D,kBAAkB9mB,EAASo3B,EAAQpxB,KAAI,GAAK,EAAMI,GACvD53C,EAAK4L,mBAAmBrG,GAAY,GAAM,KAhB9B,cAAAoiG,EAAAE,EAAA10F,KAAAy0F,EAAA5uG,OAAAqnC,EAAA,EAAArnC,CAAA2uG,EAAA,GAYZnoB,EAZYooB,EAAA,GAaZj5C,EAbYi5C,EAAA,GAmBV7jE,EAAa/jC,EAAKqR,MAAM,GAExBmuE,GAAa7wB,GACf31D,OAAOmF,KAAKwwD,EAAgBrjD,0BAA0BlN,QAAS,SAAAkQ,GAC7D,IAAMm8E,EAAyBzqF,EAAKqR,MAAMs9C,EAAgBrjD,yBAAyBgD,IACnF,GAAIm8E,EAAuBt2E,GAAG,OAAUqrE,EAAUrjF,OAAO,EAAE,CACzD,IAAMiS,EAAeoxE,EAAU,GAAGqZ,cAAc/yE,KAAM,SAAAznB,GAAC,OAAKA,EAAEiQ,aAAa5J,gBAAkB4J,EAAa5J,gBAC1G,GAAI0J,EAAa,CACf,IAAM05F,EAAgB9nG,EAAKqR,MAAMjD,EAAaqrF,WACzCqO,EAAcnqG,UACjBomC,EAAaA,EAAWzyB,KAAKw2F,EAAcr5F,MAAMg8E,WAStD1mD,GAAcA,EAAWpmC,SAAWomC,EAAWlY,IAAI,MACtDkY,EAAa/jC,EAAK+nG,iBAAiBxiG,EAAYsN,IAvCnCg1F,EAAAvmF,OAAA,SA0CPthB,EAAKsvD,8BAA8Bd,EAAczqB,IA1C1C,yBAAA8jE,EAAAj2F,SAAA81F,EAAAruG,SAz3KE,gBAAA2uG,EAAAC,GAAA,OAAAR,EAAA31F,MAAAzY,KAAAiH,YAAA,GAAAjH,KAy6KlB0uG,iBAz6KkB,eAAAG,EAAAlvG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAy6KC,SAAAs3F,EAAO5iG,EAAYsN,GAAnB,IAAA27C,EAAAtoC,EAAA0iD,EAAAhxB,EAAApG,EAAAguC,EAAAz7C,EAAApwB,EAAAykC,EAAA1kC,EAAA,OAAAuY,EAAApzB,EAAAoY,KAAA,SAAAm3F,GAAA,cAAAA,EAAAj3F,KAAAi3F,EAAAh3F,MAAA,UAEXo9C,EAFW,iBAAAjtD,OAEsBgE,EAAYgJ,QAFlC,KAAAhN,OAE6CsR,KACxDqT,EAAalmB,EAAKqvD,8BAA8Bb,KACnCxuD,EAAKqR,MAAM6U,GAAYvoB,QAJzB,CAAAyqG,EAAAh3F,KAAA,eAAAg3F,EAAA9mF,OAAA,SAKRthB,EAAKqR,MAAM6U,IALH,cAQX0iD,EAAUl6D,IAAcC,MAAMgpC,OAC9BC,EAAS53C,EAAK+G,gBAAgB,CAAC,QAAQ,WACvCyqC,EAVW,GAAAjwC,OAUGqnE,EAAQp3B,UAVXjwC,OAUsBgE,EAAYgJ,QAVlC,YAAAhN,OAUoDsR,GAVpDu1F,EAAAh3F,KAAA,EAWKpR,EAAKs4D,kBAAkB9mB,EAASo3B,EAAQpxB,KAAI,GAAK,EAAMI,GAX5D,YAWb4nC,EAXa4oB,EAAAj1F,QAaAqsE,EAAUrjF,OAbV,CAAAisG,EAAAh3F,KAAA,cAcX2yB,EAAa/jC,EAAKqR,MAAMmuE,EAAU,GAAG4Z,cACvBr1D,EAAW5vB,GAAG,GAfjB,CAAAi0F,EAAAh3F,KAAA,gBAAAg3F,EAAA9mF,OAAA,SAiBNthB,EAAKmmB,cAAcqoC,EAAczqB,IAjB3B,eAoBPpwB,EAAYpM,SAAS5B,KAAKouB,MAAM,KAChCqkB,EAAiB7wC,SAASoM,GAAY,MArB/By0F,EAAAh3F,KAAA,GAsBKpR,EAAKkT,gBAAgB3N,EAAYgJ,QAAQsE,EAAOulC,EAAe,MAAK,EAAK,KAAK,QAtBnF,WAsBbonC,EAtBa4oB,EAAAj1F,OAwBPO,EAAoB8rE,EAAUz/E,OAAQ,SAAAqM,GAAC,OAAKpM,EAAKqR,MAAMjF,EAAEgtF,WAAWjlF,GAAG,MACvDhY,OAzBT,CAAAisG,EAAAh3F,KAAA,YA0BX2yB,EAAa/jC,EAAKqR,MAAMqC,EAAkB,GAAG0lF,WACxCp5F,EAAKqR,MAAM0yB,GAAYpmC,QA3BjB,CAAAyqG,EAAAh3F,KAAA,gBAAAg3F,EAAA9mF,OAAA,SA4BFthB,EAAKsvD,8BAA8Bd,EAAczqB,IA5B/C,eAAAqkE,EAAA9mF,OAAA,SAkCV,MAlCU,yBAAA8mF,EAAAx2F,SAAAu2F,EAAA9uG,SAz6KD,gBAAAgvG,EAAAC,GAAA,OAAAJ,EAAAp2F,MAAAzY,KAAAiH,YAAA,GAAAjH,KAg9KlBinC,aAh9KkB,eAAAioE,EAAAvvG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAg9KH,SAAA23F,EAAOjjG,GAAP,IAAAopD,EAAA7X,EAAA0X,EAAAtoC,EAAAuiF,EAAAC,EAAAr/B,EAAAmgB,EAAAmf,EAAA9T,EAAA90D,EAAA6oE,EAAAn3C,EAAAo3C,EAAAC,EAAAxoG,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA83F,GAAA,cAAAA,EAAA53F,KAAA43F,EAAA33F,MAAA,UAAmBu9C,EAAnBm6C,EAAA3sG,OAAA,QAAAoE,IAAAuoG,EAAA,IAAAA,EAAA,GAAyChyD,IAAzCgyD,EAAA3sG,OAAA,QAAAoE,IAAAuoG,EAAA,KAAAA,EAAA,GAERvjG,EAAY81B,KAFJ,CAAA0tE,EAAA33F,KAAA,eAAA23F,EAAAznF,OAAA,UAGJ,GAHI,UAOPktC,EAPO,aAAAjtD,OAOsBgE,EAAY81B,KAAK9sB,QAPvC,KAAAhN,OAOkDu1C,KACzD5wB,EAAalmB,EAAKqvD,8BAA8Bb,MACnCtoC,EAAWqa,QAAWvgC,EAAKqR,MAAM6U,EAAWqa,QAAQ5iC,UAAauoB,EAAWsa,QAAWxgC,EAAKqR,MAAM6U,EAAWsa,QAAQ7iC,QAT3H,CAAAorG,EAAA33F,KAAA,eAAA23F,EAAAznF,OAAA,SAUJ,CACLif,OAAOvgC,EAAKqR,MAAM6U,EAAWqa,QAC7BC,OAAOxgC,EAAKqR,MAAM6U,EAAWsa,UAZpB,cAAAuoE,EAAA33F,KAAA,GAgBMpR,EAAK2kF,QAAQp/E,EAAY81B,KAAKv2B,OAhBpC,WAgBP2jG,EAhBOM,EAAA51F,KAAA,CAAA41F,EAAA33F,KAAA,gBAAA23F,EAAAznF,OAAA,UAmBJ,GAnBI,WAsBRqtC,EAtBQ,CAAAo6C,EAAA33F,KAAA,gBAAA23F,EAAA33F,KAAA,GAuBapR,EAAK4L,mBAAmBrG,GAvBrC,QAuBXopD,EAvBWo6C,EAAA51F,KAAA,WA0BRw7C,EA1BQ,CAAAo6C,EAAA33F,KAAA,gBAAA23F,EAAAznF,OAAA,UA2BJ,GA3BI,eA8BPonF,EAAYD,EAAKC,UAAU9mG,IAAI,SAAC4lE,EAAKniE,GAAQ,OAAOmiE,EAAK1kD,WAAWpe,gBACpE2kE,EAAOo/B,EAAKp/B,KAEZmgB,EAAgB,GAChBmf,EAAgB,GAClB9T,EAAU,KAnCDkU,EAAA33F,KAAA,GAqCPpR,EAAKyQ,aAAalL,EAAY4I,UAA9B,eAAA66F,EAAAhwG,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAwC,SAAAo4F,EAAO76F,EAAa/I,GAApB,IAAAiJ,EAAA46F,EAAAC,EAAAC,EAAA,OAAAn9E,EAAApzB,EAAAoY,KAAA,SAAAo4F,GAAA,cAAAA,EAAAl4F,KAAAk4F,EAAAj4F,MAAA,UACtC9C,EAAeF,EAAaG,QAAQuU,WAAWpe,eAEjC,KADdwkG,EAAYR,EAAUpiF,QAAQhY,IAFQ,CAAA+6F,EAAAj4F,KAAA,YAItC+3F,EAAcnpG,EAAKqR,OAAOrR,EAAK6xD,MAAMwX,EAAK6/B,KAC1CE,EAAcppG,EAAK0oF,QAAQygB,EAAYtmF,IAAI,MAAMpU,MAAM,MAEvDqoC,GAAsC,aAAtB1oC,EAAanP,KAPS,CAAAoqG,EAAAj4F,KAAA,eAAAi4F,EAAAj4F,KAAA,EAQxBpR,EAAKu0F,WAAWhvF,EAAYT,MAAMS,GARV,OAQxCsvF,EARwCwU,EAAAl2F,KAAA,OAW1Cw1F,EAAcr6F,GAAgB86F,EAC9B5f,EAAcl7E,GAAgB66F,EAZY,yBAAAE,EAAAz3F,SAAAq3F,EAAA5vG,SAAxC,gBAAAiwG,EAAAC,GAAA,OAAAP,EAAAl3F,MAAAzY,KAAAiH,YAAA,IArCO,WAqDPy/B,EAAY,CAChBQ,OAAQ,KACRC,OAAQ,OAGNmuB,EA1DS,CAAAo6C,EAAA33F,KAAA,YA2DX2uB,EAAUQ,OAASvgC,EAAK4wD,UAAU44B,EAAc76B,EAAgBtjD,qBAAqBsjD,EAAgBvjD,iBACrG20B,EAAUS,OAASxgC,EAAK4wD,UAAU+3C,EAAch6C,EAAgBtjD,qBAAqBsjD,EAAgBvjD,iBAEjGypF,IACF90D,EAAUQ,OAASR,EAAUQ,OAAOjvB,KAAKujF,GACzC90D,EAAUS,OAAST,EAAUS,OAAOlvB,KAAKujF,IAIrC+T,EAAsB5oG,EAAK+G,gBAAgB,CAAC,YAAY,OAAO,aACzC/G,EAAK+G,gBAAgB,CAAC,YAAY,OAAO,cAC1C6hG,EAtEhB,CAAAG,EAAA33F,KAAA,gBAuEHqgD,EAAezxD,EAAKo9E,kBAvEjB2rB,EAAA33F,KAAA,GAwEaqgD,EAAanD,OAAO/oD,EAAYT,MAAMS,GAxEnD,SAwEHsjG,EAxEGE,EAAA51F,QA0EP4sB,EAAUQ,OAASR,EAAUQ,OAAOjvB,KAAKu3F,GACzC9oE,EAAUS,OAAST,EAAUS,OAAOlvB,KAAKu3F,IA3ElC,eAAAE,EAAAznF,OAAA,SA8EJthB,EAAKsvD,8BAA8Bd,EAAczuB,IA9E7C,eAAAgpE,EAAAznF,OAAA,SAiFN,MAjFM,yBAAAynF,EAAAn3F,SAAA42F,EAAAnvG,SAh9KG,gBAAAmwG,GAAA,OAAAjB,EAAAz2F,MAAAzY,KAAAiH,YAAA,GAChBjH,KAAKgE,SAAS/D,gEAkiLC8B,GAMf,IAN8D,IAAzC4C,EAAyCsC,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAhC,EAAErC,EAA8BqC,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAjB,EAAEpC,EAAeoC,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAF,EAEtDmpG,EAAa5kG,WAAWzJ,GAAO,EACjCsgE,EAAWriE,KAAKgY,MAAMjW,GAAO0rE,MAE7B4iC,EAAY,EACThuC,EAASl6B,IAAI,MAClBk6B,EAAWA,EAAS74C,IAAI,KACxB6mF,IAMF,GAHAzrG,EAAekH,KAAKkB,IAAI,EAAEpI,GAGtB7C,GAAO,IAAK,CACd,IAAMuuG,EAAc3rG,EAAW09D,EAASkuC,IAAI,GAAG5jG,QAAQ/H,GAAchC,OAAO,EAAE+B,GAAY,KAC1F09D,EAAWn0D,SAASm0D,GAAU54C,YAAa6mF,EAAc,IAAIA,EAAc,SAE3EjuC,EAAWA,EAAS11D,QAAQhI,GAI9B,GAAI09D,GAAU,GAAMA,EAASv/D,OAAO,EAAG8B,EACrCy9D,EAAW72D,WAAW62D,GAAUmuC,YAAY5rG,QACvC,GAAKy9D,EAASv/D,OAAO,EAAG+B,EAAc,CAC3C,IAAM4rG,EAAa5rG,GAAcw9D,EAASv/D,OAAO,GAEjDu/D,GADeriE,KAAKgY,MAAMjW,GAAO0rE,MAAMhkD,WAAWiP,QAAQ,IAAI,IAAI91B,OAAQy/D,EAASv/D,OAAO,EAAG2tG,GAW/F,OANIL,IACF/tC,EAAW,IAAIA,GAGjBA,GA/BiB,CAAC,GAAI,IAAK,IAAK,IAAI,KA+BfguC,+CAIHj4F,EAAQzW,EAAMgD,EAAS+rG,EAAOC,GAEhDhsG,EAAYL,MAAMK,GAAuB,EAAXA,EAC9B+rG,EAAUpsG,MAAMosG,GAAmB,GAATA,EAC1BC,EAAuBrsG,MAAMqsG,GAA6C,EAAtBA,EAGpD,IAAMC,GAFNx4F,EAAU5M,WAAWxL,KAAKgY,MAAMI,IAAUzL,QAAQhI,IAE3B8kB,WAAWiP,QAAQ,IAAI,IAAI51B,OAC9C8tG,EAAOF,IACT/rG,EAAWmH,KAAKkB,IAAI,EAAErI,GAAUisG,EAAOF,IACvCt4F,EAAU5M,WAAWxL,KAAKgY,MAAMI,IAAUzL,QAAQhI,IAGpD,IAAMksG,EAAU/kG,KAAKiQ,MAAM3D,GACvB04F,GAAW14F,EAAQ,GAAGo4F,YAAY7rG,GAAU/B,OAAO,EAAE+B,GAGzD,GAFAmsG,GAAWA,EAAS,IAAIC,OAAOpsG,IAAY/B,OAAO,EAAE+B,GAEhDgsG,EAAoB,CACtB,IAAMK,EAAiBF,EAAQluG,OAAO,EAAE+tG,GACxCG,EAAUA,EAAQluG,OAAO+tG,GACzB,IAAMM,EAAsB/tG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CAAWrqB,SAAU,OAAQL,MAAO,OAAQM,WAAY,WAAYqvG,EAApE,IAA8EG,GAC1G,OAAQ1sG,MAAMtE,KAAKq4D,QAAQjgD,IApBR,IAoBsBlV,EAAA1D,EAAAC,cAAAyD,EAAA1D,EAAAiR,SAAA,KAAGwgG,EAAmB/tG,EAAA1D,EAAAC,cAAA,SAAOsB,MAAO,CAACQ,SAAS,QAASuvG,GAAvD,IAAwE5tG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CAAWrqB,SAAU,CAAC,EAAE,IAAKI,IAE9I,OAAQ2C,MAAMtE,KAAKq4D,QAAQjgD,IAtBR,IAsBsBlV,EAAA1D,EAAAC,cAAAyD,EAAA1D,EAAAiR,SAAA,KAAGogG,EAAQ3tG,EAAA1D,EAAAC,cAAA,iBAASqxG,GAA4B,MAAVnvG,EAAgB,IAAM,KAAQA,EAAQuB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CAAWrqB,SAAU,CAAC,EAAE,IAAKI,GAAqB,eAK9JsC,uXCrnLTwD,6MAEJzB,MAAQ,CACNkrG,WAAU,+EAGCA,GACXlxG,KAAK4G,SAAS,CACZsqG,+CAIK,IAAA/sG,EAAAnE,KACDixC,EAAajxC,KAAKC,MAAMgxC,WACxB3gC,EAAWtQ,KAAKC,MAAMqQ,WAAa2gC,EACnCppC,EAAgB7H,KAAKC,MAAM4H,gBAAkBopC,EAC7CkgE,EAA4C,qBAAzBnxG,KAAKC,MAAMkxG,WAA4BnxG,KAAKC,MAAMkxG,UACrEC,EAA4C,qBAAzBpxG,KAAKC,MAAMmxG,WAA4BpxG,KAAKC,MAAMmxG,UAErE3rG,EAAY,CAChBT,EAAE,EACF0qB,OAAO,EACPvZ,UAAU,EACV9U,aAAa,EACbqT,YAAY,KACZlN,SAAS,WACT+G,UAAU,UACVjN,gBAAgB,WAGdgP,GAAazI,GAAiB7H,KAAKgG,MAAMkrG,aAC3CzrG,EAAUiqB,OAAS,EACnBjqB,EAAU0Q,UAAY,KACtB1Q,EAAUnE,gBAAkB,eAI1BtB,KAAKC,MAAMwF,WAAa9F,OAAOmF,KAAK9E,KAAKC,MAAMwF,WAAW3C,QAC5DnD,OAAOmF,KAAK9E,KAAKC,MAAMwF,WAAWV,QAAQ,SAAAC,GACxCS,EAAUT,GAAKb,EAAKlE,MAAMwF,UAAUT,KAIxC,IAAM5B,EAAY,CAChBC,IAAO0tB,eACPzgB,EAAWjN,IAAOguG,OAAS,KAC1BF,EAA4B,KAAhB9tG,IAAO2tB,OACpBogF,EAAY/tG,IAAO6tB,QAAU,KAC7B+f,EAAa5tC,IAAO6d,SAAW,KAC/BrZ,EAAgBxE,IAAO4tB,YAAc,MAOvC,OAJIjxB,KAAKC,MAAMmD,WAAaC,IAAOrD,KAAKC,MAAMmD,YAC5CA,EAAU0J,KAAKzJ,IAAOrD,KAAKC,MAAMmD,YAIjC7D,EAAAC,EAAAC,cAAC2F,EAAA,EAADzF,OAAAC,OAAA,GACM6F,EADN,CAEErC,UAAWA,EACXI,QAASxD,KAAKC,MAAMwD,YACpB6tG,WAAY,SAACjoG,GAAD,OAAOlF,EAAKotG,cAAa,IACrCC,YAAa,SAACnoG,GAAD,OAAOlF,EAAKotG,cAAa,MAGpCvxG,KAAKC,MAAMkgB,OAASngB,KAAKC,MAAMkgB,MAAMrd,OAAO,GAC1CvD,EAAAC,EAAAC,cAAC2F,EAAA,EAADzF,OAAAC,OAAA,CACE8F,GAAI,CAAC,EAAE,GACP8D,GAAI,CAAC,EAAE,GACP1J,WAAY,SACZe,cAAe,OACXb,KAAKC,MAAMy7B,kBAEfn8B,EAAAC,EAAAC,cAAC2F,EAAA,EAAQmnC,GAAT5sC,OAAAC,OAAA,CACE4B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,UAAW,OACXP,MAAO,YACP8P,WAAY,WACRhR,KAAKC,MAAMw7B,YAEdz7B,KAAKC,MAAMkgB,OAGZngB,KAAKC,MAAMy1B,aAAe11B,KAAKC,MAAMy1B,YAAY5yB,OAAO,GACtDvD,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACEomC,UAAW,MACXC,QAASzrC,KAAKC,MAAMy1B,aAEpBn2B,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACEoE,GAAI,EACJ5D,KAAM,OACND,KAAM,MACNzE,MAAO,gBAMpBlB,KAAKC,MAAMyR,iBAnGQpR,aAyGbmH,otBCoPAgqG,6MA3VbzrG,MAAQ,2EAGN,OACE9C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,UAAWC,IAAOnB,gBAAiB0G,GAAI,CAAC,EAAE,GAAIjB,GAAI,CAAC,EAAE,GAAI8G,GAAI,CAAC,MAAO,QACxEvL,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,UAAWC,IAAOlB,iBACvBe,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqE,SAAU,WAAYD,OAAQ,IACjCrE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,SAAUf,WAAY,SAAUmG,SAAU,CAAC,OAAQ,QAAS3C,GAAI,OAAQsF,GAAI,EAAGnH,UAAW,SAAUgN,GAAI,CAAC,MAAO,QACnIvL,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQ8sB,GAAT,CAAYpgB,WAAY,YAAamB,WAAY,QAASpQ,GAAI,QAASW,SAAU,CAAC,QAAQ,GAAIE,UAAW,SAAUP,MAAO,SAA1H,oBAGAgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQuuG,GAAT,CAAYlwG,WAAY,MAAOwP,WAAY,CAAC,QAAS,OAAQzP,SAAU,CAAC,EAAE,GAAIE,UAAW,SAAUP,MAAO,SAA1G,+BAIFgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,SAAUf,WAAY,SAAUmG,SAAU,CAAC,OAAQ,QAAS3C,GAAI,OAAQ7B,UAAW,UACtGyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,UAAWC,IAAOf,cAAexC,WAAY,SAAUD,MAAO,OAAQ0O,UAAW,CAAC,OAAO,QAASjN,gBAAiB,QAASJ,MAAO,YAAa8D,EAAG,CAAC,EAAE,GAAImR,UAAW,wCAAyC9U,aAAc,OAAQN,MAAO,CAACyG,SAAS,aACxPtE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,kBAAmB5F,GAAI,GAC9B1F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyF,GAAI,GAAV,wZAGA1F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyF,GAAI,GAAV,sgBAGA1F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyF,GAAI,GAAV,ikBAGA1F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyF,GAAI,GAAV,iuBAGA1F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,+mCAKFD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,kBAAmB9G,GAAI,CAAC,EAAE,IACjCxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,sBAIA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,sGAIAxE,EAAA1D,EAAAC,cAAA,MAAI2D,UAAWC,IAAOhB,MACpBa,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,4CADF,yKAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,iDADF,mjBAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,wCADF,sLAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,mDADF,4IAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,sDADF,mHAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,yDADF,6JAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,yCADF,mOAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,2CADF,wJAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,wCADF,iFAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,4CADF,4CAGAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,0DADF,sJAMJyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,sBAAuB9G,GAAI,CAAC,EAAE,IACrCxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,mCAIA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,mjBAKFxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,WAAY9G,GAAI,CAAC,EAAE,IAC1BxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,gBAKF2B,EAAA1D,EAAAC,cAAA,MAAI2D,UAAWC,IAAOhB,MACpBa,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,+BAA8ByD,EAAA1D,EAAAC,cAAA,WADhC,qTAIAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,2BAA0ByD,EAAA1D,EAAAC,cAAA,WAD5B,kGAIAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,2CAA0CyD,EAAA1D,EAAAC,cAAA,WAD5C,qzBAIAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,kDAAiDyD,EAAA1D,EAAAC,cAAA,WADnD,uMAIAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,iEAAgEyD,EAAA1D,EAAAC,cAAA,WADlE,oWAIAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,4CAA2CyD,EAAA1D,EAAAC,cAAA,WAD7C,8EAGEyD,EAAA1D,EAAAC,cAAA,MAAI2D,UAAWC,IAAOhB,KAAMtB,MAAO,CAAC4wG,UAAU,gBAC5CzuG,EAAA1D,EAAAC,cAAA,0GACAyD,EAAA1D,EAAAC,cAAA,kMACAyD,EAAA1D,EAAAC,cAAA,4KAGJyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,kDAAiDyD,EAAA1D,EAAAC,cAAA,WADnD,iFAGEyD,EAAA1D,EAAAC,cAAA,MAAI2D,UAAWC,IAAOhB,KAAMtB,MAAO,CAAC4wG,UAAU,gBAC5CzuG,EAAA1D,EAAAC,cAAA,mNACAyD,EAAA1D,EAAAC,cAAA,oKACAyD,EAAA1D,EAAAC,cAAA,gQACAyD,EAAA1D,EAAAC,cAAA,wOACAyD,EAAA1D,EAAAC,cAAA,0LACAyD,EAAA1D,EAAAC,cAAA,2JACAyD,EAAA1D,EAAAC,cAAA,qLACAyD,EAAA1D,EAAAC,cAAA,mEACAyD,EAAA1D,EAAAC,cAAA,uVACAyD,EAAA1D,EAAAC,cAAA,qNACAyD,EAAA1D,EAAAC,cAAA,0OACAyD,EAAA1D,EAAAC,cAAA,yHAIJyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,+CAA8CyD,EAAA1D,EAAAC,cAAA,WADhD,sCAGEyD,EAAA1D,EAAAC,cAAA,MAAI2D,UAAWC,IAAOhB,KAAMtB,MAAO,CAAC4wG,UAAU,gBAC5CzuG,EAAA1D,EAAAC,cAAA,0LACAyD,EAAA1D,EAAAC,cAAA,+PACAyD,EAAA1D,EAAAC,cAAA,mUACAyD,EAAA1D,EAAAC,cAAA,yIACAyD,EAAA1D,EAAAC,cAAA,6QARJ,uXAYAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,iDAAgDyD,EAAA1D,EAAAC,cAAA,WADlD,sCAGEyD,EAAA1D,EAAAC,cAAA,MAAI2D,UAAWC,IAAOhB,KAAMtB,MAAO,CAAC4wG,UAAU,gBAC5CzuG,EAAA1D,EAAAC,cAAA,0HACAyD,EAAA1D,EAAAC,cAAA,4GAGJyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,oCAAmCyD,EAAA1D,EAAAC,cAAA,WADrC,80BAMFyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,iBAAkB9G,GAAI,CAAC,EAAE,IAChCxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,qBAGA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,sLAKFxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,qBAAsB9G,GAAI,CAAC,EAAE,IACpCxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,yBAGA2B,EAAA1D,EAAAC,cAAA,MAAI2D,UAAWC,IAAOhB,MACpBa,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,iEAAgEyD,EAAA1D,EAAAC,cAAA,WADlE,sjBAIAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,8EAA6EyD,EAAA1D,EAAAC,cAAA,WAD/E,snCAIAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,iCAAgCyD,EAAA1D,EAAAC,cAAA,WADlC,wVAOJyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,iCAAkC9G,GAAI,CAAC,EAAE,IAChDxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,uCAGA2B,EAAA1D,EAAAC,cAAA,MAAI2D,UAAWC,IAAOhB,MACpBa,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,0CAAyCyD,EAAA1D,EAAAC,cAAA,WAD3C,uRAIAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,mCAAkCyD,EAAA1D,EAAAC,cAAA,WADpC,mOAIAyD,EAAA1D,EAAAC,cAAA,UACEyD,EAAA1D,EAAAC,cAAA,+BAA8ByD,EAAA1D,EAAAC,cAAA,WADhC,sRAOJyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,qBAAsB9G,GAAI,CAAC,EAAE,IACpCxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,yBAGA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,sqBAKFxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,kBAAmB9G,GAAI,CAAC,EAAE,IACjCxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,sBAGA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,klCAKFxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,0BAA2B9G,GAAI,CAAC,EAAE,IACzCxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,+BAGA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,4rBAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,+lBAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,2ZAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,weAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,sWAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,gjCAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,8mBAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,6MAKFxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,0CAA2C9G,GAAI,CAAC,EAAE,IACzDxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,sDAGA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,wwCAKFxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,0CAA2C9G,GAAI,CAAC,EAAE,IACzDxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,+BAGA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,yyBAKFxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,iCAAkC9G,GAAI,CAAC,EAAE,IAChDxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,0CAGA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,woBAIAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,62DAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,40BAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,2xBAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,4bAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,mPAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,2aAGAxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,giCAKFxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,gBAAiB9G,GAAI,CAAC,EAAE,IAC/BxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,qBAGA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,mzBAKFxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqL,GAAI,gBAAiB9G,GAAI,CAAC,EAAE,IAC/BxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAY1O,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGwP,WAAY,UAAWzP,SAAU,CAAC,EAAE,IAAtG,qBAGA2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuE,GAAI,GAAV,62DASVxE,EAAA1D,EAAAC,cAACmyG,EAAA,EAAD,cAtVUtxG,6BCDHuxG,EAAA,CACbhyF,YAAa,CAAC,OAAQ,QAEtBC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDC,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCC,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERzM,MAAO,CACL0M,MAAO,2CACPzM,UAAW,qCACX0M,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnC3gB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5B4gB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,oBAAoB,qBACjCC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACPC,SAAU,IAEZ9Y,OAAQ,CACN+Y,QAAS,UACTG,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKM,KAAK,GAC1BC,OAAQ,UACRP,KAAM,UACNQ,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,UACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cAIbC,YAAY,UACZC,cAAc,UACdC,gBAAgB,UAChBC,SAAS,UACTC,aAAa,UACb3E,gBAAgB,UAChB4E,qBAAqB,UACrBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVpb,QAAS,UACTiY,QAAS,UACTjW,OAAQ,UACRqZ,KAAK,UACLtZ,QAAS,UACTI,QAAS,UACToS,OAAQ,UACRnJ,OAAO,UACPkQ,OAAO,UACPC,UAAU,UACVC,WAAW,UACXG,YAAY,UACZC,WAAW,UACXH,gBAAgB,UAChBC,gBAAgB,iCAChB1W,aAAa,CACXjC,OAAO,CACLd,KAAK,UACLG,KAAK,UACLyZ,MAAM,UACN7Z,OAAO,UACPK,QAAQ,UACRN,QAAQ,UACR+Z,QAAQ,UACR5Z,QAAQ,UACRC,QAAQ,UACR4Z,QAAQ,UACRC,SAAS,UACT1Z,SAAS,UACT2Z,eAAe,UACfC,gBAAgB,WAElBC,SAAS,CACPla,KAAK,UACLG,KAAK,UACLyZ,MAAM,UACN7Z,OAAO,UACPK,QAAQ,UACRN,QAAQ,UACR+Z,QAAQ,UACRC,QAAQ,UACR7Z,QAAQ,UACRC,QAAQ,UACRG,SAAS,UACT0Z,SAAS,UACTC,eAAe,UACfC,gBAAgB,WAElBje,OAAO,CACLsE,UAAU,UACVC,QAAQ,UACRC,OAAO,YAGX2Z,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZvD,KAAM,CACJngB,MAAO,UACPwT,YAAa,UACbpT,gBAAiB,WAEnByjB,QAAS,CACP7jB,MAAO2jB,YAAM,GAAKG,IAAM3D,MACxB/f,gBAAiBwjB,YAAK,GAAKE,IAAM3D,MACjC3M,YAAasQ,IAAM3D,MAErB4D,QAAS,CACP/jB,MAAO2jB,YAAM,GAAKK,IAAO7D,MACzB/f,gBAAiBwjB,YAAK,GAAKI,IAAO7D,MAClC3M,YAAawQ,IAAO7D,MAEtB8D,OAAQ,CACNjkB,MAAO2jB,YAAM,GAAKO,IAAI/D,MACtB/f,gBAAiBwjB,YAAK,GAAKM,IAAI/D,MAC/B3M,YAAa0Q,IAAI/D,MAEnBgE,KAAM,CACJnkB,MAAO,UACPwT,YAAa,UACbpT,gBAAiB,YAGrBgkB,QAAS,CACPnE,QAAS,CACPjgB,MAAOkgB,IAAKhhB,KACZkB,gBAAiB8f,IAAKC,KAEtBkE,eAAgBnE,IAAKC,KACrBmE,mBAAoBpE,IAAKhhB,MAE3BqlB,OAAQ,CACNvkB,MAAOghB,IAAWD,MAClBuD,mBAAoBtD,IAAWD,OAEjC8C,QAAS,CACPQ,eAAgBP,IAAM3D,KACtBmE,mBAAoBR,IAAM5kB,MAE5B+kB,OAAQ,CACNI,eAAgBH,IAAI/D,KACpBmE,mBAAoBJ,IAAIhlB,OAG5BslB,YAAa,CACXC,MAAO,CACLpkB,SAAU,UACVH,OAAQ,OACR8E,SAAU,OACV0f,QAAS,UAEXC,OAAQ,CACNtkB,SAAU,OACVH,OAAQ,OACR8E,SAAU,QAEZ4f,MAAO,CACLvkB,SAAU,SACVH,OAAQ,OACR8E,SAAU,OACV7E,aAAc,gLClOCywG,cAEnB,SAAAA,EAAYC,GAAQ,IAAAprG,EAAAhH,OAAA80D,EAAA,EAAA90D,CAAAK,KAAA8xG,GAAA,IACLE,EAA+BD,EAApCE,IAAY/0E,EAAwB60E,EAAxB70E,WAAeg1E,EADjBvyG,OAAAwyG,EAAA,EAAAxyG,CAC0BoyG,EAD1B,6BAElBprG,EAAAhH,OAAAyyG,EAAA,EAAAzyG,CAAAK,KAAAL,OAAA0yG,EAAA,EAAA1yG,CAAAmyG,GAAA/4B,KAAA/4E,KAAMkyG,KAEDp6D,MAAQ,KACbnxC,EAAKqrG,MAAQA,EACbrrG,EAAKu2B,WAAaA,EANAv2B,6LAUb3G,KAAK83C,QACR93C,KAAK83C,MAAQ,IAAI93C,KAAKgyG,MAAM,CAC1BM,eAAgB,2BAGdtyG,KAAK83C,MAAMy6D,8BACXvyG,KAAK83C,MAAM06D,4RAIV,IAAIprF,QAAJ,eAAA/P,EAAA1X,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAA+P,EAAOC,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAClByP,EAAQrjB,EAAK2zC,MAAMoa,UADD,wBAAAxqC,EAAAnP,SAAAgP,EAAAvnB,SAAb,gBAAA+nB,EAAAC,GAAA,OAAA3Q,EAAAoB,MAAAzY,KAAAiH,YAAA,kLAKQirD,yFACQlyD,KAAK83C,MAAM26D,0BAA5BzlC,0CAEShtE,KAAK83C,MAAM46D,iBAAiB,CACvCC,SAAS3lC,EAAS2lC,SAClBC,WAAW5lC,EAAS4lC,qFAGjB,0QAID5yG,KAAK83C,MAAM+6D,iJAGLjxD,GACZjiD,OAAA0oB,EAAA,EAAA1oB,QAAA0yG,EAAA,EAAA1yG,CAAAmyG,EAAArT,WAAA,0BAAAz+F,MAAA+4E,KAAA/4E,KAA8B,CAAE8yG,iBAAiB,WA3CTC,KCAvBC,cAEnB,SAAAA,EAAYjB,GAAQ,IAAAprG,EAAAhH,OAAA80D,EAAA,EAAA90D,CAAAK,KAAAgzG,GAAA,IACLC,EAAgClB,EAArCE,IAAgBrwD,EAAqBmwD,EAArBnwD,QAAYswD,EADlBvyG,OAAAwyG,EAAA,EAAAxyG,CAC2BoyG,EAD3B,0BAElBprG,EAAAhH,OAAAyyG,EAAA,EAAAzyG,CAAAK,KAAAL,OAAA0yG,EAAA,EAAA1yG,CAAAqzG,GAAAj6B,KAAA/4E,KAAMkyG,KAEDr6D,UAAY,KACjBlxC,EAAKssG,UAAYA,EACjBtsG,EAAKi7C,QAAUA,EANGj7C,mMAUb3G,KAAK63C,YACR73C,KAAK63C,UAAY,IAAI73C,KAAKizG,UAAUjzG,KAAK4hD,mBAEpB5hD,KAAKkzG,0BAAtBhhD,0CAEEA,EAASihD,yCACRjhD,uRAKF,IAAI9qC,QAAJ,eAAA/P,EAAA1X,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAA+P,EAAOC,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAClByP,EAAQrjB,EAAK0zC,UAAUq7D,eADL,wBAAAxrF,EAAAnP,SAAAgP,EAAAvnB,SAAb,gBAAA+nB,EAAAC,GAAA,OAAA3Q,EAAAoB,MAAAzY,KAAAiH,YAAA,kLAKQirD,6EACXA,kCACqBA,EAASkhD,0BAA1BC,YACUA,EAASvwG,gDAChBuwG,EAAS,oCAGb,yQAIgBrzG,KAAKkzG,0BAAtBhhD,0CAEEA,EAASohD,0CACRphD,2IAIGtQ,GACZ5hD,KAAKuzG,YAAY,CACftB,IAAKjyG,KAAKizG,UACVrxD,YAEFjiD,OAAA0oB,EAAA,EAAA1oB,QAAA0yG,EAAA,EAAA1yG,CAAAqzG,EAAAvU,WAAA,0BAAAz+F,MAAA+4E,KAAA/4E,KAA8B,CAAE8yG,iBAAiB,WAnDLC,wBCA3BS,cAEnB,SAAAA,EAAYzB,GAAQ,IAAAprG,EAAAhH,OAAA80D,EAAA,EAAA90D,CAAAK,KAAAwzG,GAAA,IACLC,EAAiE1B,EAAtEE,IAAiBr8D,EAAqDm8D,EAArDn8D,QAAS89D,EAA4C3B,EAA5C2B,UAAWzhD,EAAiC8/C,EAAjC9/C,QAAS0hD,EAAwB5B,EAAxB4B,WAAezB,EADnDvyG,OAAAwyG,EAAA,EAAAxyG,CAC4DoyG,EAD5D,6DAElBprG,EAAAhH,OAAAyyG,EAAA,EAAAzyG,CAAAK,KAAAL,OAAA0yG,EAAA,EAAA1yG,CAAA6zG,GAAAz6B,KAAA/4E,KAAMkyG,KAEDhgD,SAAW,KAChBvrD,EAAKitG,WAAa,KAClBjtG,EAAKivC,QAAUA,EACfjvC,EAAKsrD,QAAUA,EACftrD,EAAK+sG,UAAYA,EACjB/sG,EAAKgtG,WAAaA,EAClBhtG,EAAK8sG,WAAaA,EAVA9sG,+LAcb3G,KAAK4zG,aACR5zG,KAAK4zG,WAAa,IAAI5zG,KAAKyzG,WAAW,CACpCI,UAAU,EACVj+D,QAAS51C,KAAK41C,QACd89D,UAAW1zG,KAAK0zG,UAChBC,WAAY3zG,KAAK2zG,gBAIfzhD,EAAWlyD,KAAKkzG,+CAEdhhD,EAASihD,yCACRjhD,2IAQT,OAHKlyD,KAAKkyD,WACRlyD,KAAKkyD,SAAWlyD,KAAK4zG,WAAWE,iBAAiB9zG,KAAK0zG,UAAW1zG,KAAKiyD,UAEjEjyD,KAAKkyD,oFAGGA,6EACXA,kCAEqBA,EAAS5nD,KAAK,mCAA/B+oG,YACUA,EAASvwG,gDAChBuwG,EAAS,oCAGb,8PAIDnhD,EAAWlyD,KAAKkzG,+CAEdhhD,EAAS6hD,wCACR7hD,2IAIGtQ,GACZ5hD,KAAKuzG,YAAY,CACf3xD,UACAqwD,IAAKjyG,KAAKyzG,WACV79D,QAAS51C,KAAK41C,QACdqc,QAASjyD,KAAKiyD,QACdyhD,UAAW1zG,KAAK0zG,UAChBC,WAAY3zG,KAAK2zG,aAEnBh0G,OAAA0oB,EAAA,EAAA1oB,QAAA0yG,EAAA,EAAA1yG,CAAA6zG,EAAA/U,WAAA,0BAAAz+F,MAAA+4E,KAAA/4E,KAA8B,CAAE8yG,iBAAiB,WAnEJC,KCA5BiB,eAEnB,SAAAA,EAAYjC,GAAQ,IAAAprG,EAAAhH,OAAA80D,EAAA,EAAA90D,CAAAK,KAAAg0G,GAAA,IACLC,EAA6DlC,EAAlEE,IAA4CiC,GAAsBnC,EAAtCoC,eAAsCpC,EAAtBmC,UAAahC,EAD/CvyG,OAAAwyG,EAAA,EAAAxyG,CACwDoyG,EADxD,4CAElBprG,EAAAhH,OAAAyyG,EAAA,EAAAzyG,CAAAK,KAAAL,OAAA0yG,EAAA,EAAA1yG,CAAAq0G,GAAAj7B,KAAA/4E,KAAMkyG,KAEDhgD,SAAW,KAChBvrD,EAAKstG,sBAAwBA,EAC7BttG,EAAKutG,SAAWA,EANEvtG,yLAUb3G,KAAKkyD,WACRlyD,KAAKkyD,SAAW,IAAIlyD,KAAKi0G,sBAAsB,CAC7CC,SAASl0G,KAAKk0G,aAMdl0G,KAAKkyD,yCAEDlyD,KAAKkyD,SAASihD,yCA6BbnzG,KAAKkyD,mRAKPlyD,KAAKkyD,0PAIRlyD,KAAKkyD,gCACPlyD,KAAKkyD,SAAS6hD,0BACP/zG,KAAKkyD,mHA9DkC6gD,KCalDqB,GAMEC,aANFD,kBACAE,GAKED,aALFC,qBACAC,GAIEF,aAJFE,gBACAC,GAGEH,aAHFG,gBACAC,GAEEJ,aAFFI,mBACAC,GACEL,aADFK,gBAGIh/D,GAAMC,yqCAENg/D,GAAgBj/D,GAAIk/D,gCACpBC,GAAiBn/D,GAAIo/D,8BACrBX,GAAiB9+F,IAAcusC,QAAQM,gBACvC6yD,GAAkBr/D,GAAIs/D,gCACtBC,GAAev/D,GAAIw/D,yBACnBC,GAAgBz/D,GAAI0/D,yBAEpBC,GAAuB,GAE7B11G,OAAOmF,KAAKuQ,IAAcusC,QAAQU,UAAUC,QAAQx9C,QAAQ,SAACo/C,EAAUr1C,GACrEumG,GAAqBlxD,GAAa9uC,IAAcusC,QAAQU,UAAUC,OAAO4B,GAAWzO,GAAI4/D,uBAG1F,IAAMC,GAAW,IAAInB,GAAkB,CACrCpxD,kBAAmB,CAACmxD,MAGhBqB,GAAS,IAAIlB,GAAqB,CACtCmB,YAAapgG,IAAcusC,QAAQU,UAAUC,OAAO4xD,IAAgBz+D,GAAI4/D,uBAIpEI,GAAS,IAAInB,GAAgB,CACjCtC,IAAK0D,IACLN,wBACAlB,kBACAQ,iBACAE,oBAGIe,GAAS,IAAIpB,GAAgB,CACjCa,wBACAlB,oBAGI0B,GAAgB,IAAI7B,GAAuB,CAC/CG,kBACAkB,wBACApD,IAAKgC,IACLC,SAASx+D,GAAI4/D,qBACbQ,OAAQ,qCAGJC,GAAY,IAAItB,GAAmB,CACvCxC,IAAK+D,IACL5yD,OAAQ2xD,GACRkB,sBAAsB,IAGlBC,GAAS,IAAIxB,GAAgB,CACjCzC,IAAKkE,IACLC,OAAQnB,GACRrzD,QAASuzD,KAGLlC,GAAY,IAAID,EAAmB,CACvCf,IAAKoE,IACLz0D,QAASvsC,IAAcusC,QAAQC,kBAAkBsyD,IAAgB9oG,gBA0BpD6rC,GAAA,CACbq+D,YACAC,UACAK,iBACAjC,WA3BiB,IAAIJ,EAAoB,CACzCvB,IAAKwB,IACLI,UAAU,EACV5hD,QAASkiD,GACTv+D,QAASvgC,IAAcugC,QACvB89D,UAAW2B,GAAqBlB,IAChCR,WAAY,8CAsBZoC,aACAG,UACAjD,aACAjB,MAtBY,IAAIF,EAAe,CAC/BG,IAAKqE,IACLp5E,WAAW,CACTq5E,SAAU,aACVC,eAAe,EACf50D,QAAS,CACP60D,KAAMphG,IAAcusC,QAAQC,kBAAkBsyD,IAAgB9oG,cAC9D4mD,QAASkiD,GACT/vD,YAAa/uC,IAAcusC,QAAQC,kBAAkBsyD,IAAgB9oG,eAEvEqrG,iBAAiB,KAanBhB,UACAE,oFC/Eae,oLAzBX,OACEzzG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKpC,MAVa,CAClByG,SAAU,QACVqN,OAAQ,EACRxD,KAAM,EACNT,MAAO,EACP/Q,MAAO,OACP0H,OAAQ,MAIiBjG,gBAAiB,uBAAwB0D,EAAG,GACnE9B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAK6B,EAAG,GACN9B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,UAAU1E,MAAM,OAAOyE,KAAK,QAEzCzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,UACnBqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM3B,WAAY,QAAlB,0CAGA0B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,6BACwBnD,KAAKC,MAAM2hD,QAAQjsB,SAAS/vB,KADpD,wDAE8C,IAC5C1C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CAAW7qB,MAAO,CAAEW,cAAe,eAChC1B,KAAKC,MAAM2hD,QAAQg1D,QAAQhxG,MACjB,IALf,6DArBqB5C,IAAM1C,WCkBxBu2G,oLAfX,OACE3zG,EAAA1D,EAAAC,cAAA,YAC4C,IAAxCO,KAAKC,MAAM2hD,QAAQk1D,kBAA8B92G,KAAKC,MAAM2nB,KAE1D1kB,EAAA1D,EAAAC,cAACs3G,GAAD,CACEn1D,QAAS5hD,KAAKC,MAAM2hD,UAGtB,aAVc5+C,IAAM1C,uECiIjB02G,8MA/HbC,cAAgB,WACd,OACE/zG,EAAA1D,EAAAC,cAACyD,EAAA1D,EAAMiR,SAAP,KACEvN,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQuuG,GAAT,CACEnwG,SAAU,EACVC,WAAY,EACZwP,WAAY,UACZ/H,GAAI,GAJN,uCASCiuG,KAAWC,iBACVj0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8F,GAAI,GAAV,8GAE6C,IAC3C/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,qBACL7L,MAAM,oBACN9J,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,iCACL7L,MAAM,gBACN9J,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,+BACL7L,MAAM,kBACN9J,OAAO,SAASC,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BApT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8F,GAAI,GAAV,qGAE0C,IACxC/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,8BACL7L,MAAM,yBACN9J,OAAO,SAASC,IAAI,gCAHtB,SAHF,IAUI,IACFpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,2BACL7L,MAAM,2BACN9J,OAAO,SAASC,IAAI,gCAHtB,WAXF,IAkBI,IACFpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,iCACL7L,MAAM,yBACN9J,OAAO,SAASC,IAAI,gCAHtB,SAnBF,OA0BO,IACLpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,iCACL7L,MAAM,0BACN9J,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCApT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CAAWwrF,MAAI,GAAf,0BADF,2DAE8C,IAC5Cl0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,qBACL7L,MAAM,oBACN9J,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,iCACL7L,MAAM,gBACN9J,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,+BACL7L,MAAM,kBACN9J,OAAO,SAASC,IAAI,gCAHtB,mBAnBF,gFAmCR,OACEpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOk0G,OAAQr3G,KAAKC,MAAMo3G,QACxBn0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAD,CAAWC,UAAWv3G,KAAKC,MAAMu3G,YAC/Bt0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACGz3G,KAAKi3G,0BAxHej0G,IAAM1C,WCiDxBo3G,oLAxCX,OACEx0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOk0G,OAAQr3G,KAAKC,MAAMo3G,QACxBn0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM6B,EAAG,EAAGiB,SAAU,SACpB/C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOmG,KAAR,CACEquG,UAAQ,EACRhiG,KAAM,QACNzU,MAAO,YACPsG,SAAU,WACVF,IAAK,EACLsJ,MAAO,EACPlL,GAAI,EACJvE,GAAI,EACJqC,QAASxD,KAAKC,MAAMu3G,aAGtBt0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,SAAUd,eAAgB,iBAC7CmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMpD,eAAgB,SAAUkJ,GAAI,GAClC/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,UAAU1E,MAAM,OAAOyE,KAAK,QAGzCzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQuuG,GAAT,CAAYzoG,GAAI,GAAhB,uBAEA/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8F,GAAI,GAAV,4GAKA/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,4FACL3V,OAAO,SAASC,IAAI,gCAEpBpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgBjyG,KAAK,SAArB,qCAjCc3C,IAAM1C,WC0CnBu3G,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApB1oG,OAAOgjD,SAChB0lD,EAAoD,qBAA/B1oG,OAAOgjD,SAAS2lD,WACL,qBAAhB3oG,OAAOwY,OACvBkwF,EAAgE,qBAA3C1oG,OAAOwY,KAAKwyD,gBAAgB29B,YAA8B3oG,OAAOwY,KAAKwyD,gBAAgB29B,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhB5oG,OAAOwY,MAA+D,qBAAhCxY,OAAOwY,KAAKwyD,kBACL,qBAAxChrE,OAAOwY,KAAKwyD,gBAAgB69B,SAA2B7oG,OAAOwY,KAAKwyD,gBAAgB69B,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhB9oG,OAAOwY,MAA+D,qBAAhCxY,OAAOwY,KAAKwyD,kBACI,qBAAjDhrE,OAAOwY,KAAKwyD,gBAAgB89B,kBAAoC9oG,OAAOwY,KAAKwyD,gBAAgB89B,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1B/oG,OAAOgpG,eAM9B,MAJ+B,qBAApBhpG,OAAOgjD,WAChB+lD,EAAgD,qBAA7B/oG,OAAOgjD,SAASimD,UAA4BjpG,OAAOgjD,SAASimD,UAG1EF,GAETG,QAAS,WACP,MAAO,cAAcx+D,KAAKyX,UAAUC,YAGtC+mD,UAAW,WACT,IAAMA,IAAY,WAAWz+D,KAAKyX,UAAUC,WAE5C,OAAO+mD,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmB1+D,KAAKyX,UAAUC,YAAepiD,OAAOqpG,UAI1D,OAAOD,IC0BIE,8MA7DbzB,cAAgB,WACd,OACE/zG,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACEv0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQuuG,GAAT,CAAYzoG,GAAI,GAAhB,iBACiBtC,EAAK1G,MAAM2hD,QAAQjsB,SAAS/vB,KAD7C,cAC8D,IAC3DiyG,GAAYC,cAAZ,uBAGH50G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8F,GAAI,GAAV,iCACiC,IAC/B/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CAAW7qB,MAAO,CAAEW,cAAe,eAChCiF,EAAK1G,MAAM2hD,QAAQjsB,SAAS/vB,MAClB,IAJf,wCAKmC,IACjC1C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CAAW7qB,MAAO,CAAEW,cAAe,eAChC,IACAiF,EAAK1G,MAAM2hD,QAAQg1D,QAAQhxG,MACjB,IATf,YAaCiyG,GAAYC,gBAAkBa,KAAYxB,iBACzCj0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAK4iB,GAAI,UAAW/gB,EAAG,EAAGjC,QAAS,CAAC,OAAQ,UAC1CG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqE,SAAU,WAAY3H,MAAO,OAChCqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQwC,KAAM,UAGlBzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM3B,WAAY,GAAlB,oCACA0B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM3B,WAAY,GAAlB,sCAMJ,KAEJ0B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKJ,QAAS,CAAC,QAAS,SACtBG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQK,QAASmD,EAAK1G,MAAMu3G,WAAY33G,MAAO,GAA/C,iFASN,OACEqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOk0G,OAAQr3G,KAAKC,MAAMo3G,QACxBn0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAD,CAAWC,UAAWv3G,KAAKC,MAAMu3G,YAC/Bt0G,EAAA1D,EAAAC,cAACyD,EAAA1D,EAAMiR,SAAP,KACGzQ,KAAKi3G,0BAtDcj0G,IAAM1C,mDCiDvBs4G,OA3Df,SAA6B34G,GAC3B,OACEiD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUuB,OAAX,CAAkB14F,MAAO,6CAA8C24F,SAAU,wDAAyDC,UAAW,0EACrJ71G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACEv0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,CAAC,SAAU,OAC9Bd,eAAgB,gBAChBkJ,GAAI,CAAC,EAAG,IACR/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKlC,KAAM,MAAOpB,MAAO,EAAG6F,GAAI,CAAC,EAAG,GAAI9E,GAAI,CAAC,EAAG,GAAIO,GAAI,GACtD+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMpD,eAAgB,SAAUa,GAAI,GAClCsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAK,cACL1E,MAAM,UACNyE,KAAK,SAGTzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAS5B,SAAU,EAAGE,UAAW,UAAjC,oBACAyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAU,EAAGE,UAAW,UAA9B,6FAKFyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKlC,KAAM,MAAOpB,MAAO,EAAG6F,GAAI,CAAC,EAAG,GAAI9E,GAAI,CAAC,EAAG,GAAIO,GAAI,GACtD+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMpD,eAAgB,SAAUa,GAAI,GAClCsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAK,qBACL1E,MAAM,UACNyE,KAAK,SAGTzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAS5B,SAAU,EAAGE,UAAW,UAAjC,0BACAyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAU,EAAGE,UAAW,UAA9B,6DAIFyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKlC,KAAM,MAAOpB,MAAO,EAAG6F,GAAI,CAAC,EAAG,GAAI9E,GAAI,CAAC,EAAG,GAAIO,GAAI,GACtD+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMpD,eAAgB,SAAUa,GAAI,GAClCsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAK,iBACL1E,MAAM,UACNyE,KAAK,QAEPzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAK,gBACL1E,MAAM,UACNyE,KAAK,SAGTzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAS5B,SAAU,EAAGE,UAAW,UAAjC,wBACAyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAU,EAAGE,UAAW,UAA9B,qGC1CNkmB,GAAY,WAAc,QAAAuxC,EAAAjyD,UAAAnE,OAAV7C,EAAU,IAAAk5D,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVn5D,EAAUm5D,GAAAnyD,UAAAmyD,IAEjB,SAAS4/C,GAAsB/4G,GAC5C,IAAMg5G,EAAUC,2BAEXD,EAAQ5H,QAAW4H,EAAQ1yF,MAErB0yF,EAAQ1yF,MACjBoB,GAAU,gBAAiBsxF,GAE3BtxF,GAAU,kBAAmBsxF,GAJ7BtxF,GAAU,kBAAmBsxF,GAO/B,IAAME,EAAY,eAAA9hG,EAAA1X,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAG,SAAAuP,EAAOqO,EAAcxvB,GAArB,IAAAwzG,EAAA,OAAAxmF,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cACfqhG,EAAmC,aAAlBhkF,EAA+BxvB,EAAOwvB,EACvDjL,eACFA,aAAaynD,QAAQ,iBAAkBwnC,GACvCjvF,aAAaynD,QAAQ,gBAAiBx8C,IAGpCn1B,EAAMk5G,cAA8C,oBAAvBl5G,EAAMk5G,cACrCl5G,EAAMk5G,aAAa/jF,EAAcgkF,GAIK,oBAA7Bn5G,EAAMo5G,oBACfp5G,EAAMo5G,qBAbWpyF,EAAAgB,OAAA,SAgBZmN,GAhBY,wBAAAnO,EAAA1O,SAAAwO,EAAA/mB,SAAH,gBAAA+nB,EAAAC,GAAA,OAAA3Q,EAAAoB,MAAAzY,KAAAiH,YAAA,GAmBZqyG,EAAc,eAAA5/F,EAAA/Z,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAG,SAAA+P,IAAA,OAAAqL,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OACrBkhG,EAAQK,iBACJr5G,EAAMk5G,cAA8C,oBAAvBl5G,EAAMk5G,cACrCl5G,EAAMk5G,aAAa,SAAS,UAHT,wBAAAzxF,EAAAnP,SAAAgP,EAAAvnB,SAAH,yBAAA0Z,EAAAjB,MAAAzY,KAAAiH,YAAA,GAUdqxG,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBoB,EAAa1B,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BE,EAAmBL,GAAYK,mBAC/BsB,EAAwBD,GAAcjB,GAAWD,GAAYH,GAAoBF,EAEjFyB,EAAoBx5G,EAAMw5G,kBAC1BC,EAAez5G,EAAMy5G,aAEvBxiE,GAAWg/D,SACTwD,GACFxiE,GAAWg/D,OAAO7pF,QAAU6qB,GAAWg/D,OAAO7pF,SAAW,GACzD6qB,GAAWg/D,OAAO7pF,QAAQstF,uBAAwB,IAElDziE,GAAWg/D,OAAO7pF,QAAU6qB,GAAWg/D,OAAO7pF,SAAW,GACzD6qB,GAAWg/D,OAAO7pF,QAAQstF,uBAAwB,IAItD,IAAIC,EAAsBj6G,OAAOmF,KAAKoyC,IAAYxwC,OAAO,SAAAgjC,GAAC,MAAU,WAANA,IAE1D+vE,IACFG,EAAsBA,EAAoBlzG,OAAO,SAAAk+B,GAAC,OAA4F,IAAxF60E,EAAkBlxG,IAAI,SAACmB,GAAQ,OAAOA,EAAE2B,gBAAkB4hB,QAAQ2X,EAAEv5B,kBAG5H,IAAMia,EAAUs0F,EAAoBrxG,IAAI,SAAA6sB,GAEtC,OAAQA,GACN,IAAK,WACH,GAAIokF,EAAuB,CACzB,IAAI5zG,EAAO,KACP2zG,EACF3zG,EAAO,WACE0yG,EACT1yG,EAAO,QACEyyG,EACTzyG,EAAO,SACEsyG,EACTtyG,EAAO,WACEoyG,IACTpyG,EAAO,eAGT,IAAMi0G,EAAgBxkG,IAAc6hC,WAAWtxC,EAAKyF,eACpD,GAAIwuG,GAAiBA,EAAcjgF,QAAQ,CACzC,IAAMkgF,EAAaD,EAAclkG,KAAOkkG,EAAclkG,KAAnC,GAAAzN,OAA6CtC,EAAKyF,cAAlD,QACnB,OACEnI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP6I,IAAG,UAAAR,OAAYtC,GACf7F,eAAgB,gBAChBgB,MAAO,CACLE,KAAK,WAGPiC,EAAA1D,EAAAC,cAACqQ,GAAA,EAAD,CACEpM,YAAa,CACXgsB,OAAO,GAETrf,QAASzK,EACTmC,UAAU,EACVlI,MAAO,CAAC,EAAE,KACVmQ,SAAQ,UAAA9H,OAAY4xG,GACpB5pG,WAAY,CAACrQ,MAAM,OAAOuB,OAAO,QACjCqC,YAAW9D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAG,SAAAC,IAAA,OAAAmb,EAAApzB,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBohG,EAAa/jF,EAAcxvB,GAA7C,cAAAiS,EAAAoQ,OAAA,SAAApQ,EAAAiC,MAAA,wBAAAjC,EAAAU,SAAAd,EAAAzX,SACd8Q,WAAa+oG,GAAiBA,EAAc/oG,WAAa+oG,EAAc/oG,WAA1D,iBAAA5I,OAAwFtC,KAEvG1C,EAAA1D,EAAAC,cAACqQ,GAAA,EAAD,CACEpM,YAAa,CACXgsB,OAAO,GAET3nB,UAAU,EACVlI,MAAO,CAAC,EAAE,KACVwQ,QAAS,gBACTL,SAAQ,wBACRc,WAAY,4BACZZ,WAAY,CAACrQ,MAAM,OAAOuB,OAAO,QACjCqC,YAAc,SAAA4F,GAAC,OAAIpJ,EAAM8pE,kBAAiB,OAKlD,OAAO,KAEP,IAAM8vC,EAAgBxkG,IAAc6hC,WAAW9hB,EAAc/pB,eAC7D,OACEnI,EAAA1D,EAAAC,cAACqQ,GAAA,EAAD,CACEpM,YAAa,CACXgsB,OAAO,GAET3nB,UAAU,EACVsI,QAAS,iBACT3H,IAAG,UAAAR,OAAYktB,GACfplB,SAAQ,4BACRE,WAAY,CAACrQ,MAAM,OAAOuB,OAAO,QACjCqC,YAAW9D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAG,SAAAmC,IAAA,OAAAiZ,EAAApzB,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EAAkBohG,EAAa/jF,GAA/B,cAAAxb,EAAAqO,OAAA,SAAArO,EAAAE,MAAA,wBAAAF,EAAArB,SAAAoB,EAAA3Z,SACd8Q,WAAa+oG,GAAiBA,EAAc/oG,WAAa+oG,EAAc/oG,WAA1D,iCACbN,YAAcvQ,EAAM8H,SAAW,CAAChI,eAAe,aAAakB,KAAK,UAAY,CAAClB,eAAe,aAAakB,KAAK,WAIvH,QACE,IAAM44G,EAAgBxkG,IAAc6hC,WAAW9hB,EAAc/pB,eAC7D,GAAIwuG,GAAiBA,EAAcjgF,QAAQ,CACzC,IAAMkgF,EAAaD,EAAcpiE,UAAYoiE,EAAcpiE,UAAaoiE,EAAclkG,KAAOkkG,EAAclkG,KAAnC,GAAAzN,OAA6CktB,EAAc/pB,cAA3D,QAEpEgF,EAAUwpG,EAAcj0G,KAAOi0G,EAAcj0G,KAAOwvB,EACxD,OACElyB,EAAA1D,EAAAC,cAACqQ,GAAA,EAAD,CACEpM,YAAa,CACXgsB,OAAO,GAET3nB,UAAU,EACVsI,QAASA,EACT3H,IAAG,UAAAR,OAAYktB,GACfplB,SAAQ,UAAA9H,OAAY4xG,GACpB5pG,WAAY,CAACrQ,MAAM,OAAOuB,OAAO,QACjCqC,YAAW9D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAG,SAAA+Q,IAAA,OAAAqK,EAAApzB,EAAAoY,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,cAAA0Q,EAAA1Q,KAAA,EAAkBohG,EAAa/jF,GAA/B,cAAA3M,EAAAR,OAAA,SAAAQ,EAAA3O,MAAA,wBAAA2O,EAAAlQ,SAAAgQ,EAAAvoB,SACd8Q,WAAa+oG,GAAiBA,EAAc/oG,WAAa+oG,EAAc/oG,WAA1D,iBAAA5I,OAAwFktB,GACrG5kB,YAAcvQ,EAAM8H,SAAW,CAAChI,eAAe,aAAakB,KAAK,UAAY,CAAClB,eAAe,aAAakB,KAAK,WAIrH,OAAO,QAIb,OACEiC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKtD,MAAO,CAAC,IACXqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,SAAUf,WAAY,UACxCm5G,EAAQ1yF,OACPrjB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAK6B,EAAN,CAAQvD,UAAU,UAAlB,+DAEEyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM6oB,KAAK,uBAAuB3V,OAAO,SAASC,IAAI,gCAAtD,sBAFF,KAMEpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM6oB,KAAK,8BAA8B3V,OAAO,SAASC,IAAI,gCAA7D,eANF,6OAgBA2iG,EAAQ5H,QAAW4H,EAAQ1yF,OAAS0yF,EAAQ7jF,gBAA6C,WAA1B6jF,EAAQ7jF,eACvElyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CACE/3G,MAAO,CAAC,IACRuD,UAAW,CAACC,KAAO2iB,QACnBplB,GAAI,CAAC,EAAG,GACR+E,KAAM,QACN+C,IAAK,QACLlF,QAAO7D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAE,SAAA4R,IAAA,OAAAwJ,EAAApzB,EAAAoY,KAAA,SAAA2R,GAAA,cAAAA,EAAAzR,KAAAyR,EAAAxR,MAAA,cAAAwR,EAAAxR,KAAA,EAAkBuhG,IAAlB,cAAA/vF,EAAAtB,OAAA,SAAAsB,EAAAzP,MAAA,wBAAAyP,EAAAhR,SAAA6Q,EAAAppB,UAERi5G,EAAQ5H,OAAS,uBAAyB,UAIjDnuG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEk5B,SAAU,OACVx7B,cAAe,MACfd,eAAgB,iBAEfulB,kBCoWMy0F,8MApiBb/zG,MAAQ,CACNg0G,WAAU,EACVC,YAAW,EACXjwC,cAAc,GACdkwC,eAAe,KACfC,kBAAiB,EACjBC,kBAAiB,EACjBC,mBAAmB,KACnBC,oBAAmB,EACnBC,oBAAoB,QAItBx2G,cAAgB,OAShBy2G,iBAAmB,SAAAnxG,GACjBA,EAAE0D,iBAEFpG,EAAKC,SAAS,CACZqzG,YAAatzG,EAAKX,MAAMi0G,gBAI5BQ,iBAAmB,WACjB,IAAIP,EAAiB,KASrB,OARI/vF,eACF+vF,EAAiB/vF,aAAaC,QAAQ,oBAEpCzjB,EAAKC,SAAS,CACZszG,mBAICA,KAGTpjG,kBAAoB,WAClBnQ,EAAKzC,YACLyC,EAAK8zG,sBAGPC,mBAAqB,WACnB/zG,EAAKzC,eAGPy2G,WAAa,SAAAtxG,GACX1C,EAAKC,SAAS,CACZqzG,YAAY,EACZC,eAAe,KACfE,kBAAiB,EACjBD,kBAAkB,EAClBI,oBAAoB,UAIxBpB,mDAAe,SAAApyF,EAAOqO,EAAcxvB,GAArB,IAAAwzG,EAAA,OAAAxmF,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cACTqhG,EAAmC,aAAlBhkF,EAA+BxvB,EAAOwvB,EAG3DzuB,EAAK5C,cAAcovB,yBAAyB,CAC1CH,cAAc,UACdC,WAAWmmF,EACXrmF,YAAY,kBAGVpsB,EAAK1G,MAAMk5G,cAAmD,oBAA5BxyG,EAAK1G,MAAMk5G,cAC/CxyG,EAAK1G,MAAMk5G,aAAa/jF,EAAcgkF,GAIxCzyG,EAAKC,SAAS,CACZ2zG,oBAAqBnlF,IAGvBzuB,EAAKi0G,iBAnBQ3zF,EAAAgB,OAAA,SAqBNmN,GArBM,wBAAAnO,EAAA1O,SAAAwO,EAAA/mB,mEA0Bf46G,eAAiB,WACf,IAAMP,EAAqB1zG,EAAKX,MAAMq0G,mBAAqB1zG,EAAKX,MAAMq0G,mBAAmB,EAAI,EACxFA,EAGH3wF,WAAW,WAAQ/iB,EAAKi0G,kBAAmB,KAF3Cj0G,EAAK6wG,aAIP7wG,EAAKC,SAAS,CACZyzG,0BAIJQ,gBAAkB,SAACxxG,EAAEyxG,GACnBzxG,EAAE0D,iBACFpG,EAAKC,SAAS,CACZ2zG,oBAAqBO,OAIzBtD,WAAa,WAEX7wG,EAAKg0G,aAELh0G,EAAK8zG,mBAEL9zG,EAAK1G,MAAMu3G,gBAGbuD,kBAAoB,SAAC1xG,EAAE6wG,GACrB7wG,EAAE0D,iBACFpG,EAAKC,SAAS,CACZszG,mBAGmB,iBAAjBA,IAEFvzG,EAAK5C,cAAcovB,yBAAyB,CAC1CH,cAAe,UACfD,YAAa,cACbE,WAAYinF,IAGdvzG,EAAK5C,cAAcymB,gBAAgB,iBAAiB0vF,OAIxDc,qBAAuB,WAErB,OADqBr0G,EAAK5C,cAAc0mF,aAAa9jF,EAAKX,MAAMgkE,gBAE9DrjE,EAAKojE,kBAAiB,GACtBpjE,EAAK5C,cAAcgmE,iBAAiBpjE,EAAKX,MAAMgkE,eAC/CrjE,EAAKwyG,aAAa,SAAS,UAC3BzvF,WAAW,WAAQ/iB,EAAK6wG,cAAe,MAChC,GAEA7wG,EAAKC,SAAS,CACnB0zG,oBAAmB,OAKzBW,oBAAsB,SAAC5xG,GACrB,IACM2gE,EAAgB3gE,EAAEgN,OAAOtU,MACzBi4G,EAAYrzG,EAAK5C,cAAc0mF,aAAazgB,GAClDrjE,EAAKC,SAAS,CACZozG,YACAhwC,gBACAswC,oBANyB,OAU7BvwC,iBAAmB,SAACqwC,GAClBzzG,EAAKC,SAAS,CACZwzG,wBAIJc,mBAAqB,WAEnB,IAAMC,EACJj4G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM1B,UAAW,SAAUF,SAAU,EAAGmG,GAAI,CAAC,EAAE,IAA/C,kCAAkFxE,EAAA1D,EAAAC,cAAC27G,GAAA,EAAD,CAAYhhD,GAAG,oBAAoBl5D,MAAO,UAAWH,MAAO,CAACG,MAAMyF,EAAK1G,MAAMkI,MAAMC,OAAO+Y,QAAQie,eAAe,aAAc/oB,OAAQ,SAAUC,IAAI,gCAAtJ,sBAIhF+kG,EAA8C,QAA9B10G,EAAKX,MAAMk0G,eAC3BoB,EAAsD,WAA9B30G,EAAKX,MAAMk0G,eAGzC,MAFuD,iBAA9BvzG,EAAKX,MAAMk0G,eAIhCh3G,EAAA1D,EAAAC,cAACyD,EAAA1D,EAAMiR,SAAP,KACEvN,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUuB,OAAX,CAAkB14F,MAAO,qBAAsB24F,SAAU,4DACzD51G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACEv0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,CAAC,SAAU,OAC1Bd,eAAgB,gBAChBkJ,GAAI,CAAC,EAAG,IAER/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKlC,KAAM,MAAOpB,MAAO,EAAG6F,GAAI,CAAC,EAAG,GAAI9E,GAAI,CAAC,EAAG,GAAIO,GAAI,GACtD+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMpD,eAAgB,SAAUa,GAAI,GAClCsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAK,SACL1E,MAAM,UACNyE,KAAK,SAGTzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAS5B,SAAU,EAAGE,UAAW,UAAjC,4BACAyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAU,EAAGE,UAAW,UAA9B,4IAMFyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKlC,KAAM,MAAOpB,MAAO,EAAG6F,GAAI,CAAC,EAAG,GAAI9E,GAAI,CAAC,EAAG,GAAIO,GAAI,GACtD+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMpD,eAAgB,SAAUa,GAAI,GAClCsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAK,uBACL1E,MAAM,UACNyE,KAAK,SAGTzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAS5B,SAAU,EAAGE,UAAW,UAAjC,4BACAyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAU,EAAGX,GAAI,EAAGa,UAAW,UAArC,kJAG2ByB,EAAA1D,EAAAC,cAAA,WACzByD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEgd,MAAM,wCACN3e,WAAY,IACZN,MAAO,OACPO,UAAW,SACXmI,WAAY,OACZoiB,KAAK,IACLxoB,QAASmD,EAAK6zG,kBAPhB,gCAaJt3G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKlC,KAAM,MAAOpB,MAAO,EAAG6F,GAAI,CAAC,EAAG,GAAI9E,GAAI,CAAC,EAAG,IAC9CsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMpD,eAAgB,SAAUa,GAAI,GAClCsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyC,KAAK,SACL1E,MAAM,UACNyE,KAAK,SAGTzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAS5B,SAAU,EAAGE,UAAW,UAAjC,gCACAyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAU,EAAGE,UAAW,UAA9B,6GAWRkF,EAAKX,MAAMo0G,iBAEXl3G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUuB,OAAX,CACE14F,MAAO,qBACPxK,KAAM,uBACNmjG,SAAU,+BAGZ51G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACEv0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACPqG,SAAU,CAAC,EAAE,QACbrF,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP8B,MAAO,oBAEPuB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwyB,UAAQ,EACR91B,MAAO,EACP0E,KAAM,OACNnB,UAAWC,KAAOgjB,MAClB3R,YAAa,aACbpT,gBAAiB,SACjBi6G,QAAS,sBACTx5G,MAAO4E,EAAKX,MAAMgkE,cAClB5gE,SAAW,SAAAC,GAAC,OAAI1C,EAAKs0G,oBAAoB5xG,IACzCysB,YAAa,qCAIfnvB,EAAKX,MAAMs0G,oBACTp3G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,EACJW,SAAU,EACVL,MAAO,MACPM,WAAY,EACZC,UAAW,UALb,mCAWJyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,GAAI,CAAC,EAAE,GACPrE,GAAI,OACJ9B,WAAY,EACZmE,KAAM,SACNpE,SAAU,CAAC,EAAE,GACbF,aAAc,EACdkP,cAAe,UACfnN,UAAW,CAACC,KAAO4iB,gBACnBziB,QAAU,SAAA6F,GAAC,OAAI1C,EAAKq0G,yBATtB,YAcF93G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEsL,GAAI,EACJ3O,WAAY,SACZC,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEyG,WAAY,OACZnI,UAAW,SACX+B,QAAU,SAAA6F,GAAC,OAAI1C,EAAKojE,kBAAiB,KAHvC,0BAQAoxC,IAMNG,EAEAp4G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUuB,OAAX,CAAkB14F,MAAO,qBAAsB24F,SAAU,6BAA8BnjG,KAAM,yBAC7FzS,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACEv0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtD,MAAO,EAAG8H,GAAI,CAAC,EAAE,GAAI9G,cAAe,SAAUd,eAAgB,UAClEmD,EAAA1D,EAAAC,cAACu5G,GAAD,CACEn5G,MAAO,GACPkI,SAAUpB,EAAK1G,MAAM8H,SACrBoxG,aAAcxyG,EAAKwyG,aACnBE,mBAAoB1yG,EAAK6wG,WACzB7xG,KAAMgB,EAAK1G,MAAM8H,SAAW,SAAW,QACvCgiE,iBAAkBpjE,EAAKojE,iBAAiBp7D,KAAtBhP,OAAA67G,GAAA,EAAA77G,QAAA67G,GAAA,EAAA77G,CAAAgH,QAGtBzD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMsL,GAAI,EAAG3O,WAAY,SAAUC,eAAgB,UACjDmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM1B,UAAW,SAAUmI,WAAY,OAAQpG,QAAU,SAAA6F,GAAC,OAAI1C,EAAKo0G,kBAAkB1xG,EAAE,SAAvF,0BAEA8xG,IAMNE,EAEAn4G,EAAA1D,EAAAC,cAACyD,EAAA1D,EAAMiR,SAAP,KACEvN,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUuB,OAAX,CAAkB14F,MAAO,0CAA4CxK,KAAM,yBAC3EzS,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KAEK9wG,EAAKX,MAAMu0G,oBAoCVr3G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAU,EAAGE,UAAW,SAAUD,WAAY,EAAGwP,WAAY,KAAnE,4BAC4BrK,EAAKX,MAAMu0G,oBADvC,uBAGAr3G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuC,GAAI,EACJ3F,eAAgB,SAChBD,WAAY,SACZ2B,UAAW,UACXyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQwC,KAAK,SALf,IAKyBzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqG,GAAI,EAAGtI,MAAO,aAApB,cAA6CyF,EAAKX,MAAMq0G,mBAAxD,iBA5C3Bn3G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtD,MAAO,EAAG8H,GAAI,CAAC,EAAE,GAAI9G,cAAe,SAAUd,eAAgB,UAClEmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKvC,GAAI,GACPsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAU,CAAC,EAAE,GAAIE,UAAW,SAAUD,WAAY,EAAGwP,WAAY,KAAvE,yCAIF9N,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,EAAGC,cAAe,CAAC,SAAS,OAAQf,WAAY,SAAUC,eAAgB,UAClFmD,EAAA1D,EAAAC,cAACqQ,GAAA,EAAD,CACEpM,YAAa,CACXgsB,OAAO,GAETrf,QAAS,aACTL,SAAU,mBACVjI,SAAUpB,EAAK1G,MAAM8H,SACrB+I,WAAY,oBACZrN,YAAc,SAAA4F,GAAC,OAAI1C,EAAKwyG,aAAa,SAAS,WAC9CjpG,WAAavJ,EAAK1G,MAAM8H,SAAW,CAAClI,MAAM,OAAOuB,OAAO,QAAU,CAACR,GAAG,MAAMf,MAAM,OAAOuB,OAAO,UAElG8B,EAAA1D,EAAAC,cAACqQ,GAAA,EAAD,CACEpM,YAAa,CACXgsB,OAAO,GAETrf,QAAS,mBACTtI,SAAUpB,EAAK1G,MAAM8H,SACrBiI,SAAU,oBACVc,WAAY,uBACZrN,YAAc,SAAA4F,GAAC,OAAI1C,EAAKwyG,aAAa,YAAY,cACjDjpG,WAAavJ,EAAK1G,MAAM8H,SAAW,CAAClI,MAAM,OAAOuB,OAAO,QAAU,CAACR,GAAG,MAAMf,MAAM,OAAOuB,OAAO,WAGpG8B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,SAAUC,eAAgB,UAC1CmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM1B,UAAW,SAAUmI,WAAY,OAAQpG,QAAU,SAAA6F,GAAC,OAAI1C,EAAKo0G,kBAAkB1xG,EAAE,YAAvF,6BAkBN8xG,IAORj4G,EAAA1D,EAAAC,cAACyD,EAAA1D,EAAMiR,SAAP,KACEvN,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUuB,OAAX,CAAkB14F,MAAO,kBAAmBxK,KAAM,yBAClDzS,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KAEIv0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP8H,GAAI,CAAC,EAAE,GACP9G,cAAe,SACfd,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKvC,GAAI,GACPsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbyP,WAAY,IACZvP,UAAW,UAJb,wCASFyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEvC,GAAI,CAAC,EAAE,GACPd,WAAY,SACZC,eAAgB,SAChBc,cAAe,CAAC,SAAS,QAEzBqC,EAAA1D,EAAAC,cAACqQ,GAAA,EAAD,CACEpM,YAAa,CACXgsB,OAAO,GAETrf,QAAO,kBACPtI,SAAUpB,EAAK1G,MAAM8H,SACrB+I,WAAY,wBACZd,SAAU,6BACVvM,YAAc,SAAA4F,GAAC,OAAI1C,EAAKo0G,kBAAkB1xG,EAAE,WAC5C6G,WAAYvJ,EAAK1G,MAAM8H,SAAW,CAAClI,MAAM,OAAOuB,OAAO,QAAU,CAACvB,MAAM,OAAOuB,OAAO,OAAOq6G,aAAa,SAE5Gv4G,EAAA1D,EAAAC,cAACqQ,GAAA,EAAD,CACEpM,YAAa,CACXgsB,OAAO,GAETrf,QAAO,aACPtI,SAAUpB,EAAK1G,MAAM8H,SACrB+I,WAAY,oBACZd,SAAU,wBACVvM,YAAc,SAAA4F,GAAC,OAAI1C,EAAKo0G,kBAAkB1xG,EAAE,QAC5C6G,WAAYvJ,EAAK1G,MAAM8H,SAAW,CAAClI,MAAM,OAAOuB,OAAO,QAAU,CAACvB,MAAM,OAAOuB,OAAO,OAAOq6G,aAAa,UAG9Gv4G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,SACZC,eAAgB,UAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEjC,MAAO,UACP0I,WAAY,UACZpG,QAAU,SAAA6F,GAAC,OAAI1C,EAAKojE,kBAAiB,KAHvC,4BAUJoxC,OAMVO,aAAe,WAEb,OAAI/0G,EAAKX,MAAMu0G,qBAAwB5zG,EAAKX,MAAMk0G,gBAAkBvzG,EAAKX,MAAMo0G,iBACtE,KAIPl3G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAU1F,OAAX,KACKjrG,EAAKX,MAAMk0G,iBAcNvzG,EAAKX,MAAMo0G,kBAAgD,iBAA5BzzG,EAAKX,MAAMk0G,iBAC9Ch3G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEC,UAAW,CAACC,KAAO4iB,eAAe5iB,KAAO6iB,OACzC1iB,QAASmD,EAAKg0G,WACdh1G,KAAM,SACNtE,aAAc,EACdkP,cAAe,OACf/O,WAAY,EACZD,SAAU,CAAC,EAAE,GACb+B,GAAI,OACJqE,GAAI,CAAC,EAAE,IATT,QAdAzE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEC,UAAW,CAACC,KAAO4iB,eAAe5iB,KAAO6iB,OACzC1iB,QAAU,SAAA6F,GAAC,OAAI1C,EAAKo0G,kBAAkB1xG,EAAE,iBACxC1D,KAAM,SACNtE,aAAc,EACdkP,cAAe,OACf/O,WAAY,EACZD,SAAU,CAAC,EAAE,GACb+B,GAAI,OACJqE,GAAI,CAAC,EAAE,IATT,kGA9dJ3H,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,KAAcjE,KAAKC,wCA6f9C,OACEiD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOk0G,OAAQr3G,KAAKC,MAAMo3G,QACxBn0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAD,CAAWC,UAAWv3G,KAAKw3G,aACE,IAA1Bx3G,KAAKgG,MAAMi0G,WACV/2G,EAAA1D,EAAAC,cAACyD,EAAA1D,EAAMiR,SAAP,KACGzQ,KAAKk7G,qBACLl7G,KAAK07G,gBAGRx4G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAACk8G,GAAD,MACC37G,KAAK07G,yBA5hBU14G,IAAM1C,WCkCrBs7G,8MA9Cb3E,cAAgB,WACd,OACE/zG,EAAA1D,EAAAC,cAACyD,EAAA1D,EAAMiR,SAAP,KACEvN,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQuuG,GAAT,CAAYzoG,GAAI,GAAhB,4BAEA/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8F,GAAI,GAAV,kFAEqB,IAClB4uG,GAAYC,cAAZ,2CAHH,KASA50G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAK4iB,GAAI,UAAW/gB,EAAG,EAAGjC,QAAS,CAAC,OAAQ,UAC1CG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqE,SAAU,WAAY3H,MAAO,OAChCqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQwC,KAAM,UAGlBzC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM3B,WAAY,GAAlB,0CAGA0B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM3B,WAAY,GAAlB,mHASV,OACE0B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOk0G,OAAQr3G,KAAKC,MAAMo3G,QACxBn0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAD,CAAWC,UAAWv3G,KAAKC,MAAMu3G,YAC/Bt0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACGz3G,KAAKi3G,0BAvCmBj0G,IAAM1C,WCmC5Bu7G,8MA1CbC,iBAAmB,SAAAxsD,GACjB3oD,EAAK1G,MAAMu3G,aACX7wG,EAAK1G,MAAM87G,iBAGb9E,cAAgB,WACd,OACE/zG,EAAA1D,EAAAC,cAACyD,EAAA1D,EAAMiR,SAAP,KACEvN,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQuuG,GAAT,CAAYzoG,GAAI,GAAhB,sDAIA/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8F,GAAI,GAAV,8EAKA/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,CAAC,SAAU,OAAQd,eAAgB,WAAY2F,GAAI,GACtExC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgBp0G,QAASmD,EAAK1G,MAAMu3G,WAAYr2G,GAAI,CAAC,EAAG,GAAIP,GAAI,CAAC,EAAG,IAApE,qBAGAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQK,QAASmD,EAAKm1G,kBAAtB,wFASN,OACE54G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOk0G,OAAQr3G,KAAKC,MAAMo3G,QACxBn0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAD,CAAWC,UAAWv3G,KAAKC,MAAMu3G,YAC/Bt0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACGz3G,KAAKi3G,0BAnCwBj0G,IAAM1C,WCiRjC07G,8MApQbh2G,MAAQ,CACNi2G,eAAe,EACfhC,YAAY,KAGdiC,gBAAkB,WAChBv1G,EAAKC,SAAS,CACZq1G,eAAgBt1G,EAAKX,MAAMi2G,mBAI/BzB,iBAAmB,SAAAnxG,GACjB8qB,QAAQC,IAAI,aAAcztB,EAAKX,MAAMi0G,YACrC5wG,EAAE0D,iBAEFpG,EAAKC,SAAS,CACZqzG,YAAatzG,EAAKX,MAAMi0G,sFAK1B,OACE/2G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOk0G,OAAQr3G,KAAKC,MAAMo3G,QACxBn0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErC,GAAI,CAAC,EAAG,GACRsnC,GAAI,CAAC,EAAG,GACR35B,GAAI,CAAC,OAAQ,GACb7F,GAAI,CAAC,OAAQ,GACb3C,SAAU,QACV+B,SAAU,SACVR,SAAU,YAEVtE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqE,SAAU,YACbtE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEpD,eAAgB,WAChBoB,GAAI,CAAC,GAAI,GACTuE,GAAI,CAAC,SAAU,GACf8B,SAAU,WACVF,IAAK,IACL+J,KAAM,IACNT,MAAO,IACPmV,GAAI,QACJxe,OAAQ,KAERrE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOmG,KAAR,CACEquG,UAAQ,EACRhiG,KAAM,QACNzU,MAAO,YACPsC,QAASxD,KAAKC,MAAMu3G,gBAKI,IAA7Bx3G,KAAKgG,MAAMi2G,gBACc,IAA1Bj8G,KAAKgG,MAAMi0G,WACT/2G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEpC,MAAO,CAAEiH,SAAU,QACnB7B,UAAW,uBAEXjD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKwE,GAAI,CAAC,EAAG,GAAI8G,GAAI,CAAC,EAAG,GAAI7F,GAAI,CAAC,EAAG,IAGnC1F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKg5G,aAAa,SAASz0G,GAAI,GAC7BxE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQuuG,GAAT,+CAIFxuG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,GAAV,+KAG8D,IAC5DsC,EAAA1D,EAAAC,cAAA,kDAAkD,IAClDyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEgd,MAAM,wCACNi8F,GAAI,IACJpwF,KAAK,IACLxoB,QAASxD,KAAKw6G,kBAJhB,+BAUFt3G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,yBAEA1M,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACErD,WAAY,UACZwD,GAAI,EACJ1C,GAAI,CAAC,EAAG,GACR8E,GAAI,CAAC,EAAG,GACR22B,SAAU,CAAC,OAAQ,YAEnBn5B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAK6B,EAAG,CAAC,EAAG,GAAInF,MAAO,CAAC,EAAG,KACzBqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,SACfd,eAAgB,gBAChBqB,OAAQ,QAER8B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQk5G,GAAT,iCACAn5G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAS,KAAf,oKAQF2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgB3uG,GAAI,GAClB/F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,YAAYzE,GAAI,IAD7B,qBAON+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAK6B,EAAG,CAAC,EAAG,GAAInF,MAAO,CAAC,EAAG,KACzBqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtC,cAAe,SACfd,eAAgB,gBAChBqB,OAAQ,QAER8B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQk5G,GAAT,sCAGAn5G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAS,KAAf,gIAMF2B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgB3uG,GAAI,EAAGzF,QAASxD,KAAKk8G,iBACnCh5G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,oBAAoBzE,GAAI,IADrC,8BAWZ+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqE,SAAU,WACVqN,OAAQ,IACRxD,KAAM,IACNT,MAAO,IACPjJ,GAAI,CAAC,EAAG,GACR8G,GAAI,EACJ7F,GAAI,EACJmd,GAAI,SAGJ7iB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8E,UAAW,EAAGyM,YAAa,SACjCxR,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMsL,GAAI,EAAG1O,eAAgB,CAAC,SAAU,aACtCmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQK,QAASxD,KAAKC,MAAMu3G,WAAY33G,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEHG,KAAKgG,MAAMi2G,cACV/4G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKvC,GAAI,GACPsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEpC,MAAO,CAAEiH,SAAU,QACnB7B,UAAW,uBAEXjD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKwE,GAAI,CAAC,EAAG,GAAI8G,GAAI,CAAC,EAAG,GAAI7F,GAAI,CAAC,EAAG,IAEnC1F,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8F,GAAI,EAAGlJ,eAAgB,UAC3BmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAM,IACN5D,MACE/B,KAAKC,MAAMuN,QAAUxN,KAAKC,MAAMuN,QAAU,gBAKhDtK,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAY8F,GAAI,EAAGiM,QAASlV,KAAKC,MAAMuN,UACvCtK,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,MAKdsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqE,SAAU,WACVqN,OAAQ,IACRxD,KAAM,IACNT,MAAO,IACPjJ,GAAI,CAAC,EAAG,GACR8G,GAAI,EACJ7F,GAAI,EACJmd,GAAI,SAGJ7iB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8E,UAAW,EAAGyM,YAAa,SACjCxR,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMuC,GAAI,EAAG3F,eAAgB,CAAC,SAAU,aACtCmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CACE/3G,MAAO,CAAC,EAAG,QACX2D,QAASxD,KAAKk8G,iBAFhB,cAUJ,KAEHl8G,KAAKgG,MAAMi0G,WACV/2G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKvC,GAAI,GACPsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEpC,MAAO,CAAEiH,SAAU,QACnB7B,UAAW,uBAEXjD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKwE,GAAI,CAAC,EAAG,GAAI8G,GAAI,CAAC,EAAG,GAAI7F,GAAI,CAAC,EAAG,IAEnC1F,EAAA1D,EAAAC,cAACk8G,GAAD,QAIJz4G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqE,SAAU,WACVqN,OAAQ,IACRxD,KAAM,IACNT,MAAO,IACPjJ,GAAI,CAAC,EAAG,GACR8G,GAAI,EACJ7F,GAAI,EACJmd,GAAI,SAGJ7iB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEsL,GAAI,EACJ1O,eAAgB,CAAC,SAAU,YAC3BkI,UAAW,EACXyM,YAAa,QAEbxR,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CACE/3G,MAAO,CAAC,EAAG,QACX2D,QAASxD,KAAKw6G,kBAFhB,cAUJ,cA9Pcx3G,IAAM1C,WCoDnBg8G,oLAtDX,OACEp5G,EAAA1D,EAAAC,cAAA,WACEyD,EAAA1D,EAAAC,cAAC88G,GAAD,CACE/E,WAAYx3G,KAAKC,MAAMo5C,OAAO7J,QAAQgtE,wBACtCnF,OAAQr3G,KAAKC,MAAMo5C,OAAO/nC,KAAKmrG,yBAC/BttG,YAAanP,KAAKC,MAAMkP,cAG1BjM,EAAA1D,EAAAC,cAACi9G,GAAD,CACElF,WAAYx3G,KAAKC,MAAMo5C,OAAO7J,QAAQmtE,mBACtCtF,OAAQr3G,KAAKC,MAAMo5C,OAAO/nC,KAAKsrG,oBAC/BztG,YAAanP,KAAKC,MAAMkP,cAG1BjM,EAAA1D,EAAAC,cAACo9G,GAAD,CACErF,WAAYx3G,KAAKC,MAAMo5C,OAAO7J,QAAQstE,uBACtCzF,OAAQr3G,KAAKC,MAAMo5C,OAAO/nC,KAAKyrG,wBAC/Bn7D,QAAS5hD,KAAKC,MAAM2hD,UAGtB1+C,EAAA1D,EAAAC,cAACu9G,GAADr9G,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8H,SAAU/H,KAAKC,MAAM8H,SACrBoxG,aAAcn5G,KAAKC,MAAMk5G,aACzBztC,eAAgB1rE,KAAKC,MAAM2hD,QAAQg1D,QACnCqG,gBAAiBj9G,KAAKC,MAAMg9G,gBAC5BzF,WAAYx3G,KAAKC,MAAMo5C,OAAO7J,QAAQ0tE,qBACtC7F,OAASr3G,KAAKC,MAAMo5C,OAAO/nC,KAAK6rG,wBAA0Bn9G,KAAKC,MAAMm9G,oBAGvEl6G,EAAA1D,EAAAC,cAAC49G,GAAD,CACE7F,WAAYx3G,KAAKC,MAAMo5C,OAAO7J,QAAQ8tE,4BACtCjG,OAAQr3G,KAAKC,MAAMo5C,OAAO/nC,KAAKisG,yBAC/B7xC,eAAgB1rE,KAAKC,MAAM2hD,QAAQg1D,UAErC1zG,EAAA1D,EAAAC,cAAC+9G,GAAD,CACEhG,WACEx3G,KAAKC,MAAMo5C,OAAO7J,QAAQiuE,iCAE5BpG,OAAQr3G,KAAKC,MAAMo5C,OAAO/nC,KAAKosG,oBAC/B3B,YAAa/7G,KAAKC,MAAM87G,cAG1B74G,EAAA1D,EAAAC,cAACk+G,GAAD,CACEnG,WAAYx3G,KAAKC,MAAMo5C,OAAO7J,QAAQouE,mBACtCvG,OAAQr3G,KAAKC,MAAMo5C,OAAO/nC,KAAKusG,oBAC/BnyC,eAAgB1rE,KAAKC,MAAM2hD,QAAQg1D,QACnCppG,QAASxN,KAAKC,MAAMuN,kBAjDIxK,IAAM1C,iCC2EzBw9G,8MA1Eb/5G,cAAgB,gFAEV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,KAAcjE,KAAKC,oDAK9CD,KAAKkE,wDAILlE,KAAKkE,yDAILlE,KAAKkE,uFAGUmF,sEACfA,EAAE0D,iBAEG/M,KAAKC,MAAMuN,wCACRxN,KAAKC,MAAMg5G,QAAQ8E,uBAAuB,CAAC,kBACjD/9G,KAAKC,MAAMk5G,aAAa,SAAS,aAEnCn5G,KAAKC,MAAMo5C,OAAO7J,QAAQwuE,gKAGnB,IAAA75G,EAAAnE,KAEDo5G,EAAiBp5G,KAAK+D,cAAc+oE,oBACpCmxC,EAAY7E,GAAmD,WAAjCA,EAAe/tG,eAAkF,kBAA3CrL,KAAKC,MAAMo5C,OAAO/nC,KAAK4sG,iBAAgCl+G,KAAKC,MAAMo5C,OAAO/nC,KAAK4sG,gBAAgB7yG,cAAcK,SAAS,UAE/M,OACExI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOk0G,OAAQr3G,KAAKC,MAAMo3G,QACxBn0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAD,CAAWC,UAAY,SAAAluG,GAAC,OAAIlF,EAAKqzG,WAAWnuG,KAC1CnG,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUuB,OAAX,CAAkB14F,MAAQ89F,EAAW,eAAH,mBAAyCtoG,KAAM,uBACjFzS,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACEv0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8F,GAAI,EAAGpJ,MAAO,EAAGgB,cAAe,SAAUyC,GAAI,QAClDJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAK6B,EAAN,CAAQ9D,MAAO,YAAaO,UAAW,UAAvC,iEACkEw8G,EAAW,SAAW,UADxF,IACoG/6G,EAAA1D,EAAAC,cAAA,WAClGyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CAAW1qB,MAAO,MAAOM,WAAY,GAArC,IAA0CxB,KAAKC,MAAMo5C,OAAO/nC,KAAK4sG,gBAAjE,KAA8Fh7G,EAAA1D,EAAAC,cAAA,WAE5Fw+G,EACE/6G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,sCACgC1oB,EAAA1D,EAAAC,cAAA,2BADhC,QAC+DyD,EAAA1D,EAAAC,cAAA,0BAD/D,0BAC+GyD,EAAA1D,EAAAC,cAAA,+BAD/G,QACkJyD,EAAA1D,EAAAC,cAAA,iCADlJ,uCACsNyD,EAAA1D,EAAAC,cAAA,YAGpN,0DAIVyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,EAAGC,cAAe,SAAUf,WAAY,SAAUC,eAAgB,UAC1EmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE8F,GAAI,EACJ3F,GAAI,CAAC,EAAG,GACRjC,aAAc,EACdkI,UAAW,OACX5D,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,SACtCvE,QAAO,eAAA6T,EAAA1X,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAG,SAAA+P,EAAOle,GAAP,OAAAupB,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,cAAA2P,EAAA3P,KAAA,EAAqB5T,EAAKqzG,WAAWnuG,GAArC,wBAAAqe,EAAAnP,SAAAgP,EAAAvnB,SAAH,gBAAAgoB,GAAA,OAAA3Q,EAAAoB,MAAAzY,KAAAiH,YAAA,IANT,qBA3DqBjE,IAAM1C,WC2E1B69G,8MAvEbp6G,cAAgB,gFAEV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,KAAcjE,KAAKC,oDAK9CD,KAAKkE,wDAILlE,KAAKkE,yDAILlE,KAAKkE,uFAGUmF,mEACfA,EAAE0D,iBACF/M,KAAKC,MAAMo5C,OAAO7J,QAAQ4uE,iKAGnB,IAAAj6G,EAAAnE,KAEDq+G,EAAmE,kBAA5Cr+G,KAAKC,MAAMo5C,OAAO/nC,KAAKgtG,kBAAiCt+G,KAAKC,MAAMo5C,OAAO/nC,KAAKgtG,iBAAiBjzG,cAAcK,SAAS,UAC9I6yG,EAAmE,kBAA5Cv+G,KAAKC,MAAMo5C,OAAO/nC,KAAKgtG,kBAAiCt+G,KAAKC,MAAMo5C,OAAO/nC,KAAKgtG,iBAAiBjzG,cAAcK,SAAS,8BAEpJ,OACExI,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOk0G,OAAQr3G,KAAKC,MAAMo3G,QACxBn0G,EAAA1D,EAAAC,cAAC63G,GAAA,EAAD,CAAWC,UAAY,SAAAluG,GAAC,OAAIlF,EAAKqzG,WAAWnuG,KAC1CnG,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUuB,OAAX,CAAkB14F,MAAQ,oBAAsBxK,KAAM,uBACtDzS,EAAA1D,EAAAC,cAAC63G,GAAA,EAAUG,KAAX,KACEv0G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM8F,GAAI,EAAGpJ,MAAO,EAAGgB,cAAe,SAAUyC,GAAI,QAClDJ,EAAA1D,EAAAC,cAAC0D,EAAA,EAAK6B,EAAN,CAAQ9D,MAAO,YAAaO,UAAW,UAAvC,kEACiEyB,EAAA1D,EAAAC,cAAA,WAC/DyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CAAW1qB,MAAO,MAAOM,WAAY,GAArC,IAA0CxB,KAAKC,MAAMo5C,OAAO/nC,KAAKgtG,iBAAjE,KAA+Fp7G,EAAA1D,EAAAC,cAAA,WAE7F4+G,EACEn7G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAKyoB,KAAN,CACErqB,SAAU,GAEV2B,EAAA1D,EAAAC,cAAA,WAHF,iCAGsCyD,EAAA1D,EAAAC,cAAA,2BAHtC,QAGqEyD,EAAA1D,EAAAC,cAAA,0BAHrE,0BAGqHyD,EAAA1D,EAAAC,cAAA,+BAHrH,QAGwJyD,EAAA1D,EAAAC,cAAA,iCAHxJ,uCAG4NyD,EAAA1D,EAAAC,cAAA,WAH5N,sEAIqEyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM5B,SAAU,EAAGL,MAAO,OAAQ0I,WAAY,OAAQyM,OAAQ,SAAUC,IAAK,+BAAgC0V,KAAM,iHAAnH,qBAJrE,KAMEuyF,EAAgB,8FAAgG,0DAI1Hr7G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMvC,GAAI,EAAGC,cAAe,SAAUf,WAAY,SAAUC,eAAgB,UAC1EmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE8F,GAAI,EACJ3F,GAAI,CAAC,EAAG,GACRjC,aAAc,EACdkI,UAAW,OACX5D,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,SACtCvE,QAAO,eAAA6T,EAAA1X,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAG,SAAA+P,EAAOle,GAAP,OAAAupB,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,cAAA2P,EAAA3P,KAAA,EAAqB5T,EAAKqzG,WAAWnuG,GAArC,wBAAAqe,EAAAnP,SAAAgP,EAAAvnB,SAAH,gBAAAgoB,GAAA,OAAA3Q,EAAAoB,MAAAzY,KAAAiH,YAAA,IANT,qBAxDsBjE,IAAM1C,qBCI1C63D,EAAQ,MAAU5Z,SAClB,IAAMigE,GAAa7oE,mCAEb8oE,GAA2Bz7G,IAAM07G,cAAc,CACnD92F,KAAM,GACNpa,QAAS,GACTs1C,SAAU,GACVmB,SAAU,GACVzJ,UAAW,GACXmkE,WAAY,GACZzyG,YAAa,GACbmB,aAAc,GACduxG,aAAc,GACdC,eAAgB,GAChBC,SAAU,aACV1B,iBAAkB,GAClBrB,YAAa,aACbgD,kBAAmB,GACnB7xC,aAAc,aACdl4C,aAAc,aACdiiD,qBAAsB,GACtB+nC,oBAAqB,GACrBC,eAAgB,aAChBhC,gBAAiB,aACjBr7D,QAAS,CACPg1D,QAAS,GACTjhF,SAAU,GACVupF,aAAc,aACdpI,iBAAkB,MAEpBqI,oBAAoB,EACpB1vD,iBAAkB,aAClB2vD,iBAAkB,aAClB5vD,kBAAmB,aACnB7rB,sBAAsB,EACtB07E,yBAA0B,GAC1BC,oBAAqB,aACrBC,qBAAsB,aACtBC,0BAA0B,EAC1B15G,0BAA2B,aAC3BuzC,OAAQ,CACN/nC,KAAM,CACJ4sG,gBAAiB,GACjBL,oBAAqB,GACrBjB,oBAAqB,GACrBc,oBAAqB,GACrBP,sBAAuB,GACvBsC,uBAAwB,GACxB1C,wBAAyB,GACzBsC,yBAA0B,GAC1B9B,yBAA0B,GAC1Bd,yBAA0B,GAC1BiD,iCAAkC,IAEpClwE,QAAS,CACPmwE,kBAAmB,aACnB/B,mBAAoB,aACpBgC,sBAAuB,aACvB9C,uBAAwB,aACxB+C,uBAAwB,aACxBrD,wBAAyB,aACzBsD,yBAA0B,aAC1B9B,0BAA2B,aAC3B+B,0BAA2B,aAC3B3B,2BAA4B,aAC5B4B,2BAA4B,aAC5B1C,4BAA6B,aAC7B2C,gCAAiC,aACjCC,gCAAiC,aACjCzC,iCAAkC,aAClC0C,iCAAkC,eAGtChxG,YAAa,CACXmC,KAAM,CACJjE,aAAc,IAEhB+yG,KAAM,GACN5wE,QAAS,MAIT6wE,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJruG,oBAAqB,IAGrBnO,cAAgB,OAuBhB+S,uCAAoB,SAAAiQ,IAAA,OAAA6L,EAAApzB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,OAClBpR,EAAKumE,eAGLvmE,EAAKm4G,WAKL1vG,OAAOoxG,gBAAkB,SAACn4C,GACxB,IAAMl5D,EAAcxI,EAAK85G,oBAGzB,OAFAtxG,EAAYk5D,OAASA,EACrB1hE,EAAK+5G,eAAevxG,GACbA,GAGTC,OAAOgpE,kBAAoB,SAACjpE,EAAY1M,EAAK6D,EAAOqtB,GAWlD,OATAxkB,EAAY7I,OAASA,EACrB6I,EAAYwkB,OAASA,EACrBxkB,EAAY5K,KAAO,WACnB4K,EAAYm5D,QAAUh8D,KAAKouB,MAC3BvrB,EAAYikB,gBAAkB3wB,EAI9BkE,EAAKyxE,kBAAkBjpE,GAChBA,GA3BS,wBAAA8X,EAAA1O,SAAAwO,EAAA/mB,WA+BpB06G,yDAAqB,SAAAnzF,EAAO/mB,EAAWC,GAAlB,IAAAkgH,EAAAC,EAAAC,EAAAC,EAAA7H,EAAA,OAAArmF,EAAApzB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,UAEnBpR,EAAKzC,YAID1D,EAAU40B,gBAAkBzuB,EAAK1G,MAAMm1B,eAAiBzuB,EAAK1G,MAAMm1B,cACrEzuB,EAAKm4G,WACKt+G,EAAUy4G,UAAYtyG,EAAK1G,MAAMg5G,QACvCtyG,EAAK1G,MAAMg5G,QAAQ1yF,iBAAiBmuD,OAAS/tE,EAAK1G,MAAMg5G,QAAQ1yF,MAAMklB,QAAQ3oC,QAC1E69G,EAAeh6G,EAAK1G,MAAMg5G,QAAQ1yF,MAAMklB,QACxCm1E,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBN,IAAwCO,GAE1Cj6G,EAAK1G,MAAMk5G,aAAa,SAAS,MAIjCkH,GAAmB,MAETO,EAGVj6G,EAAKm4G,WAFLn4G,EAAKm5G,yBAAyB,KAAKa,IAK5Bh6G,EAAK1G,MAAMg5G,QAAQ5H,QAA6C,kBAAnC1qG,EAAK1G,MAAMg5G,QAAQ7jF,eAA8D,kBAA3BzuB,EAAK1G,MAAMm1B,eACvGzuB,EAAKm4G,YAEIn4G,EAAK1G,MAAMg5G,QAAQ7jF,eAAiBzuB,EAAK1G,MAAMg5G,QAAQ7jF,gBAAkBzuB,EAAK1G,MAAMm1B,eAAkB50B,EAAUwpE,gBAAkBrjE,EAAK1G,MAAM+pE,gBACxJrjE,EAAKm4G,WAGsBt+G,EAAUwpE,gBAAkBrjE,EAAK1G,MAAM+pE,eAElErjE,EAAKo1G,cAGD8E,EAAergH,EAAUyL,gBAAkBtF,EAAK1G,MAAMgM,cAEtD60G,EAA6BtgH,EAAUojC,qBAAuBj9B,EAAK1G,MAAM2jC,qBAAuBz2B,KAAKC,UAAUzN,OAAOmF,KAAKtE,EAAUojC,wBAA0Bz2B,KAAKC,UAAUzN,OAAOmF,KAAK6B,EAAK1G,MAAM2jC,sBAGvMi9E,GACFl6G,EAAKC,SAAS,CACZ2T,cAAe,OAKf/Z,EAAUg/G,2BAA6B74G,EAAK1G,MAAMu/G,0BACpD74G,EAAKC,SAAS,CACZ44G,yBAAyB74G,EAAK1G,MAAMu/G,2BAIpCr1F,gBACI8uF,EAAU9rG,KAAKkd,MAAMF,aAAaC,QAAQ,cAC/BzjB,EAAK1G,MAAMg5G,QAAQ5H,SAAW4H,EAAQ5H,QAAU1qG,EAAK1G,MAAMg5G,QAAQ7jF,gBAAkB6jF,EAAQ7jF,eAC5GzuB,EAAK5C,cAAcymB,gBAAgB,UAAUrd,KAAKC,UAAU,CAACikG,OAAO1qG,EAAK1G,MAAMg5G,QAAQ5H,OAAOj8E,cAAczuB,EAAK1G,MAAMg5G,QAAQ7jF,mBAI/HyrF,IAA8CC,EAhE/B,CAAAp5F,EAAA3P,KAAA,gBAAA2P,EAAA3P,KAAA,GAiEXpR,EAAK24G,sBAjEM,yBAAA53F,EAAAnP,SAAAgP,EAAAvnB,mEAsErB8+G,8BAAW,SAAAnlG,IAAA,IAAAyb,EAAA2rF,EAAA9H,EAAA0F,EAAA/2F,EAAAo5F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArsC,EAAAgkC,EAAAsI,EAAA5+D,EAAAqZ,EAAAl1D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAOqd,EAAP+mC,EAAAr5D,OAAA,QAAAoE,IAAAi1D,EAAA,GAAAA,EAAA,GAAqB,KAArBviD,EAAA7B,KAAA,EAGsB4pG,OAHtB,YAGHZ,EAHGnnG,EAAAE,OAIiB1K,OAAOgjD,UAAYhjD,OAAOgjD,WAAa2uD,IAC/D3xG,OAAOgjD,SAAW2uD,GAIhB3xG,OAAOgjD,UAAYhjD,OAAOgjD,SAASwvD,6BACrCxyG,OAAOgjD,SAASwvD,4BAA6B,GAGzC3I,EAAUtyG,EAAK1G,MAAMg5G,QAErB0F,EAAa,IAAIkD,IAAK,IAAIA,IAAKv/D,UAAUw/D,aAAazsG,IAAcusC,QAAQU,UAAUC,OAAOltC,IAAcusC,QAAQM,iBAAiBs8D,KAEtI52F,EAAOqxF,EAAQ8I,QAGd3yG,OAAO4iD,oBAAsBinD,EAAQ7jF,gBAAkBhmB,OAAO4iD,mBAAmB58B,gBACpFhmB,OAAO4iD,mBAAqBinD,GAI1B7jF,EACFirF,GAAmB,KAEnBjrF,EAAgBzuB,EAAK1G,MAAMm1B,cAMzB6jF,GAA6B,WAAlB7jF,GAA8BA,IAAkB6jF,EAAQ7jF,gBACjExN,GAAgD,oBAAjCA,EAAKwyD,gBAAgBk5B,QACtC1rF,EAAKwyD,gBAAgBk5B,UACZ2F,EAAQ9mD,WAAkD,oBAA9B8mD,EAAQ9mD,UAAUmhD,SACvD2F,EAAQ9mD,UAAUmhD,UAEpB1rF,EAAO,KACPy4F,GAAmB,MAGfW,EAAwB/H,EAAQ7jF,eAAiB6jF,EAAQ7jF,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkBirF,GAI/IpH,EAAQ5H,SAAU2P,EAhDd,CAAApnG,EAAA7B,KAAA,aAkDHqd,IAAiB4rF,EAlDd,CAAApnG,EAAA7B,KAAA,gBAoDLsoG,GAAmBjrF,EApDdxb,EAAA7B,KAAA,GAqDCkhG,EAAQE,aAAa/jF,GArDtB,eAAAxb,EAAAqO,OAAA,SAuDEL,GAvDF,WAkHLq5F,EAAW,KACXC,EAAe,KAEdt5F,EAYHs5F,EAAet5F,EAAKwyD,gBAXhBhrE,OAAOgjD,UACTzrD,EAAK5C,cAAc4jB,UAAU,+BAC7Bu5F,EAAe9xG,OAAOgjD,UACbhjD,OAAOwY,MAChBjhB,EAAK5C,cAAc4jB,UAAU,uCAC7Bu5F,EAAe9xG,OAAOwY,OAEtBjhB,EAAK5C,cAAc4jB,UAAU,yDAC7Bs5F,EAAW5rG,IAAcusC,QAAQU,UAAUC,OAAOltC,IAAcusC,QAAQM,iBAAiBs8D,IAMzF2C,GAAgB,EAEd/rF,GAAmC,WAAlBA,IAA+B8rF,GAA+C,oBAAxBA,EAAa/N,OAtIjF,CAAAv5F,EAAA7B,KAAA,gBAAA6B,EAAA9B,KAAA,GAAA8B,EAAA7B,KAAA,GAwICmpG,EAAa/N,SAxId,QAAAv5F,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAA21C,GAAA31C,EAAA,UA0ILsnG,EAAe,KACfD,EAAW5rG,IAAcusC,QAAQU,UAAUC,OAAOltC,IAAcusC,QAAQM,iBAAiBs8D,GACzF2C,GAAgB,EA5IX,eAgJHC,EAAe/rG,IAAcusC,QAAQU,UAAUmB,WAEjC29D,EAAaxnF,UAA8F,IAAnFwnF,EAAap+D,kBAAkB/1B,QAAQ5X,IAAcusC,QAAQM,kBACjGm/D,EAA6BD,EAAaztF,OAC1C2tF,EAAqBn3F,cAAgBA,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB43F,cAAWxM,OACxI6L,EAA2Bx9D,OAASy9D,EAEhCJ,EACFG,EAA2BY,mBAAqBf,EACvCD,IACTI,EAA2B5K,KAAOwK,GAG9BM,EAAuB,IAAIW,wBAAqBb,GACtDz5F,EAAO,IAAIi6F,IAAKN,IAGZL,EACFt5F,EAAO,IAAIi6F,IAAKX,GAEPD,IACTr5F,EAAO,IAAIi6F,IAAK,IAAIA,IAAKv/D,UAAUw/D,aAAab,IAC1B,WAAlB7rF,GACFzuB,EAAK1G,MAAMk5G,aAAa,SAAS,OAKjCqI,EA5KG,eAAAh3E,EAAA7qC,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KA4KY,SAAAC,IAAA,IAAAqrC,EAAA,OAAAlwB,EAAApzB,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEnB3I,OAAO+yG,aAAex7G,EAAKX,MAAM4hB,KAGY,oBAAlCjhB,EAAK1G,MAAMmiH,qBACpBz7G,EAAK1G,MAAMmiH,qBACXz7G,EAAK1G,MAAMoiH,sBAAsB,OAPhBxqG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAYXpR,EAAKu4G,eAZM,WAabv4G,EAAKX,MAAM47C,QAAQk1D,iBAbN,CAAAj/F,EAAAE,KAAA,YAeVpR,EAAKX,MAAM29B,qBAfD,CAAA9rB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAgBPpR,EAAK24G,sBAhBE,WAmBXrG,EAAQzrG,QAnBG,CAAAqK,EAAAE,KAAA,aAqBTpR,EAAKX,MAAM88C,SArBF,CAAAjrC,EAAAE,KAAA,YAsBL+qC,EAAWn8C,EAAKX,MAAM88C,UACPztC,IAAcusC,QAAQU,UAAUQ,SACpCC,aAAgBD,EAASw/D,SAAYhC,GAxB3C,CAAAzoG,EAAAE,KAAA,gBAyBTuoG,IAA0B,EAC1Bx9D,EAAS0vD,MAAMyG,EAAQzrG,QAAS,SAAC+Y,EAAOs1D,GAGtC,GAAIt1D,EACF,OAAO5f,EAAKC,SAAS,CACnBk8C,UAAS,GACT,WACAn8C,EAAKo1G,YAAY9C,EAAQzrG,WAI7B8yG,IAA0B,EAEtBzkC,EAASzoD,gBACXzsB,EAAKo1G,YAAY9C,EAAQzrG,SACjBquE,EAAS0mC,cACjB57G,EAAKo1G,YAAY9C,EAAQzrG,WA1CpBqK,EAAAoQ,OAAA,UA6CF,GA7CE,eAAApQ,EAAAE,KAAA,GAiDPpR,EAAKo1G,YAAY9C,EAAQzrG,SAjDlB,QAAAqK,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAmDPpR,EAAKC,SAAS,CAClBu4G,oBAAoB,EACpB3xG,QAAS7G,EAAK1G,MAAM+pE,gBArDT,QAAAnyD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA03C,GAAA13C,EAAA,SA2DjBlR,EAAKm5G,yBAAyB,KAAKjoG,EAAA03C,GAAM9jB,SA3DxB,yBAAA5zB,EAAAU,SAAAd,EAAAzX,KAAA,aA5KZ,yBAAAwqC,EAAA/xB,MAAAzY,KAAAiH,YAAA,GA4OHw6G,EAAe75F,EACfwtD,EAAe//D,IAAcusC,QAAQU,UAAUQ,SAC/Cs2D,EAAiBzyG,EAAK5C,cAAc+oE,sBAEpB,WAAlB13C,GAA8BggD,GAAgBA,EAAax7C,SAAWw7C,EAAapyB,kBAAkBt3C,SAAS2J,IAAcusC,QAAQM,mBAAsBk3D,GAAmBhkC,EAAanyB,gBAAgBv3C,SAAS0tG,EAAe/tG,eAkDhOuc,IAASjhB,EAAKX,MAAM4hB,KACtBjhB,EAAKC,SAAS,CACZghB,OACA+2F,cACC6C,IACMvI,EAAQzrG,SAAW2zG,IAC5BK,IAtD0B,OAAxB76G,EAAKX,MAAM88C,WACP4+D,EAAuBR,GAA8BD,GAErDn+D,EAAW,IAAI0/D,YAASd,EAAqBtsC,EAAazhD,UAEpB,oBAArBmvB,EAAS2/D,SAC9B76F,EAAO,IAAIi6F,IAAK/+D,GAChBA,EAAS2/D,QAAQ3/D,EAAS4/D,MAAO,WAC/B,GAAI/7G,EAAKuL,qBAA8C,IAAxBvL,EAAKX,MAAM88C,UAAsBn8C,EAAKX,MAAM88C,WAAaA,EACtF,OAAO,EAGT,IAAM87D,EAAe97D,EAAS87D,aACxB3nC,EAAuBn0B,EAASm0B,qBAEhC5kE,EAAW,CACfuV,OACAk7B,WACA67D,aACAC,eACA3nC,wBAIErvD,IAASjhB,EAAKX,MAAM4hB,MACtBjhB,EAAKC,SAASyL,EAAUmvG,KAEzBiB,QAAQ3/D,EAAS6/D,MAAO,SAACp8F,EAAOklB,GAEjC7jB,EAAO65F,GAEqB,IAAxB96G,EAAKX,MAAM88C,UACbn8C,EAAKC,SAAS,CACZghB,OACA+2F,aACA77D,UAAS,GACR0+D,MAIP76G,EAAKC,SAAS,CACZghB,OACA+2F,aACA77D,UAAS,GACR0+D,IA9RA5nG,EAAAqO,OAAA,SA4SFL,GA5SE,yBAAAhO,EAAArB,SAAAoB,EAAA3Z,KAAA,gBA+SXg1B,mDAAe,SAAAzM,EAAO3iB,EAAMsP,EAAS+f,GAAtB,IAAA2tF,EAAAhmD,EAAA31D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,cAA2B6qG,EAA3BhmD,EAAA95D,OAAA,QAAAoE,IAAA01D,EAAA,IAAAA,EAAA,GACbj2D,EAAK5C,cAAc4jB,UAAnB,kBAAAzf,OAA+CtC,IADlC6iB,EAAA1Q,KAAA,EAEApR,EAAK2lE,eAAe1mE,EAAMsP,EAAS+f,EAAK2tF,GAFxC,cAAAn6F,EAAAR,OAAA,SAAAQ,EAAA3O,MAAA,wBAAA2O,EAAAlQ,SAAAgQ,EAAAvoB,qEAKfssE,qDAAiB,SAAAljD,EAAOxjB,EAAMsP,EAAS+f,GAAtB,IAAA2tF,EAAA1B,EAAAjqF,EAAAw+B,EAAAxuD,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA2R,GAAA,cAAAA,EAAAzR,KAAAyR,EAAAxR,MAAA,UAA2B6qG,EAA3BntD,EAAA3yD,OAAA,QAAAoE,IAAAuuD,EAAA,IAAAA,EAAA,GACf9uD,EAAK5C,cAAc4jB,UAAnB,qBAAAzf,OAAkDtC,EAAlD,aAAAsC,OAAkEgN,IAE5DgsG,EAAe0B,GAAqBj8G,EAAKX,MAAM24G,WAAah4G,EAAKX,MAAM24G,WAAah4G,EAAKX,MAAM4hB,KAHtF,CAAA2B,EAAAxR,KAAA,eAAAwR,EAAAtB,OAAA,SAMN,MANM,cAAAsB,EAAAzR,KAAA,EAWPmf,EAAW,IAAIiqF,EAAar5F,IAAI6kD,SAASz3C,EAAK/f,GACpDvO,EAAKC,SAAS,SAAAZ,GAAK,OAAArG,OAAAkH,EAAA,EAAAlH,CAAA,GACdqG,EADc,CAEjBw0C,UAAU76C,OAAAw/D,GAAA,EAAAx/D,CAAKqG,EAAMw0C,WAAZtyC,OAAA,CAAuB,CAACtC,OAAMqxB,kBAd5B1N,EAAAtB,OAAA,SAgBN,CAACriB,OAAMqxB,aAhBD,QAAA1N,EAAAzR,KAAA,GAAAyR,EAAAgmC,GAAAhmC,EAAA,SAkBb5iB,EAAK5C,cAAcu1D,eAAe,6BAA6B1zD,EAAKsP,EAApEqU,EAAAgmC,IAlBa,eAAAhmC,EAAAtB,OAAA,SAqBR,MArBQ,yBAAAsB,EAAAhR,SAAA6Q,EAAAppB,KAAA,yEAwBjBktE,aAAe,WAEb,GAAIvmE,EAAKX,MAAMi+C,SACb,OAAOt9C,EAAKX,MAAMi+C,SAGpB,IAAM4+D,EAAextG,IAAcusC,QAAQU,UAAU2B,SACjDA,EAAW,KAEf,GAAI4+D,GAAgBA,EAAajpF,UAA8F,IAAnFipF,EAAa7/D,kBAAkB/1B,QAAQ5X,IAAcusC,QAAQM,iBAAyB,CAChI,IAAM4gE,EAAiBD,EAAalvF,OACpCmvF,EAAelhE,QAAUihE,EAAa3+D,WAAWv9C,EAAKX,MAAM47C,QAAQg1D,QAAQpoG,GAAG6G,IAAcusC,QAAQC,mBACrGoC,EAAW,IAAI8+D,KAASD,GAS1B,OANA1zG,OAAO60C,SAAWA,EAElBt9C,EAAKC,SAAS,CACZq9C,aAGKA,KAGT83D,iCAAc,SAAAlyF,IAAA,IAAArc,EAAAw8D,EAAAovC,EAAA4J,EAAA/+D,EAAAS,EAAAu+D,EAAAC,EAAAjmD,EAAAh2D,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UAAOvK,EAAPyvD,EAAAn6D,OAAA,QAAAoE,IAAA+1D,EAAA,IAAAA,EAAA,GAEN+M,EAAgBrjE,EAAK1G,MAAM+pE,cAC3BovC,EAAiBzyG,EAAK5C,cAAc+oE,kBAAkB,WAExD9C,EALQ,CAAA9/C,EAAAnS,KAAA,eAOVpR,EAAKC,SAAS,CACZ4G,QAAQw8D,EACRm1C,oBAAmB,IAIrBx4G,EAAK6oD,oBAbKtlC,EAAAjC,OAAA,UAeH,GAfG,UAAAiC,EAAApS,KAAA,EAmBLtK,EAnBK,CAAA0c,EAAAnS,KAAA,gBAAAmS,EAAAnS,KAAA,GAoBcpR,EAAKX,MAAM4hB,KAAKC,IAAIurF,cApBlC,SAoBF4P,EApBE94F,EAAApQ,OAqBOkpG,EAAQlgH,SACrB0K,EAAUw1G,EAAQ,IAtBZ,WA0BLx1G,GAAW7G,EAAKX,MAAMwH,UAAYA,EA1B7B,CAAA0c,EAAAnS,KAAA,gBA2BRpR,EAAKC,SAAS,CACZu4G,oBAAoB,IA5Bdj1F,EAAAjC,OAAA,UA8BD,GA9BC,YAkCNza,GAA8B,WAAnB4rG,EAlCL,CAAAlvF,EAAAnS,KAAA,YAoCe,WAAnBqhG,EApCI,CAAAlvF,EAAAnS,KAAA,gBAqCNpR,EAAKC,SAAS,CACZu4G,oBAAoB,EACpB3xG,QAAQ7G,EAAK1G,MAAM+pE,gBAvCf9/C,EAAAjC,OAAA,UAyCC,GAzCD,aA6CFg8B,EAAWt9C,EAAKumE,gBA7Cd,CAAAhjD,EAAAnS,KAAA,gBAAAmS,EAAAnS,KAAA,GAiDsBksC,EAASS,gBAjD/B,SAiDAA,EAjDAx6B,EAAApQ,OAmDe4qC,EAAc5hD,QAAUsM,OAAO+zG,SAE9CF,EAAqB,GACrB94F,eACF84F,EAAqB94F,aAAaC,QAAQ,uBAAyBjd,KAAKkd,MAAMF,aAAaC,QAAQ,uBAAyBjd,KAAKkd,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvLs6B,EAAc3/C,QAAQ,SAAC6/B,EAAE54B,GAEvB,IAAMo3G,EAAiBx+E,EAAEh/B,MAG2B,IAAhDq9G,EAAmBh2F,QAAQm2F,KAC7Bh0G,OAAO+zG,OAAOr2G,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQnG,EAAK5C,cAAc21D,8BAA8B90B,EAAEy+E,YAGtGJ,EAAmBn2G,KAAKs2G,MAKxBj5F,cACFxjB,EAAK5C,cAAcymB,gBAAgB,qBAAqBrd,KAAKC,UAAU61G,KAzErE,QA+ERt8G,EAAK5C,cAAcovB,yBAAyB,CAC1CH,cAAe,UACfD,YAAa,YACbE,WAAYmmF,IAmMdzyG,EAAKC,SAAS,CACZ4G,UAEA2xG,oBAAoB,IAItBx4G,EAAK6oD,oBA5RG,QAAAtlC,EAAAnS,KAAA,oBAAAmS,EAAApS,KAAA,GAAAoS,EAAAqlC,GAAArlC,EAAA,SAoSVvjB,EAAKC,SAAS,CACZu4G,oBAAoB,IAItBx4G,EAAK5C,cAAc4jB,UAAU,yCAA7BuC,EAAAqlC,MAKIrlC,EAAAqlC,IAASrlC,EAAAqlC,GAAM9jB,SAAWvhB,EAAAqlC,GAAM9jB,QAAQ//B,SAAS,yCA9S3C,CAAAwe,EAAAnS,KAAA,gBAAAmS,EAAAjC,OAAA,kBAmTJi7F,EAAUh5F,EAAAqlC,cAAiBmlB,MAC7B/tE,EAAK5C,cAAcqnE,kBAAoB83C,GACzCI,KAAAp5F,EAAAqlC,IArTQ,yBAAArlC,EAAA3R,SAAAsR,EAAA7pB,KAAA,eA8Tdu/G,qBAAuB,SAAAh5F,GACrB,IAAI8yB,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKisG,0BAA2B,EACvClkE,EAAO/nC,KAAKosG,qBAAsB,EAClC/2G,EAAKC,SAAS,CAAEyyC,cAGlBmW,wDAAoB,SAAA/kC,EAAO84F,GAAP,IAAAt5F,EAAAksC,EAAA0oD,EAAAG,EAAAzkG,EAAA,OAAAqY,EAAApzB,EAAAoY,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,cAElBwrG,EAAiBA,EAAiB58G,EAAK5C,cAAciU,MAAMurG,GAAkB,KAF3D74F,EAAA5S,KAAA,EAAA4S,EAAA3S,KAAA,EAM+CqP,QAAQkD,IAAI,CACzE3jB,EAAKX,MAAM4hB,KAAKC,IAAI6sC,WAAW/tD,EAAKX,MAAMwH,SAC1C7G,EAAKyyB,gBAAgBzyB,EAAKX,MAAMwH,SAChC7G,EAAK8oD,qBATS,OAAAxlC,EAAAS,EAAA5Q,KAAAq8C,EAAAx2D,OAAAqnC,GAAA,EAAArnC,CAAAsqB,EAAA,GAMX40F,EANW1oD,EAAA,GAMI6oD,EANJ7oD,EAAA,GAMwB57C,EANxB47C,EAAA,GAYZ0oD,IAGEA,EAAep1F,WAAW/d,SAAS,OACrCmzG,EAAiBl4G,EAAKX,MAAM4hB,KAAK0wC,MAAMK,MAAMkmD,IAI/CA,EAAiBl4G,EAAKX,MAAM4hB,KAAK0wC,MAAMI,QACrCmmD,EACA,SAGFA,EAAiBl4G,EAAK5C,cAAciU,MAAM6mG,GAAgBp1F,WAE1D9iB,EAAKC,SAAS,CACZi4G,mBAGFl4G,EAAK5C,cAAc4jB,UAAU,oBAAqBk3F,IAKhDG,GAEFA,EAAsBr4G,EAAK5C,cAAciU,MAAMgnG,GAG3CuE,GAAkB58G,EAAKX,MAAMg5G,qBAAuBr4G,EAAK5C,cAAciwB,qBAAqBrtB,EAAKX,MAAMg5G,oBAAoBzkG,GAAekP,aAAeu1F,EAAoBv1F,aAC/Ku1F,EAAsBA,EAAoB/mG,KAAKsrG,IAGjDvE,EAAsBr4G,EAAK5C,cAAc4W,iBAAiBqkG,EAAoBzkG,GAAekP,WAK7F9iB,EAAKC,SAALjH,OAAAmH,EAAA,EAAAnH,CAAA,CACEq/G,uBADF,iBAAA92G,OAEoBvB,EAAK1G,MAAMgM,eAAiB+yG,KAIhDr4G,EAAK5C,cAAc4jB,UAAU,kCAAkCq3F,GAxDjDt0F,EAAA3S,KAAA,iBAAA2S,EAAA5S,KAAA,GAAA4S,EAAA6kC,GAAA7kC,EAAA,SA2DhB/jB,EAAK5C,cAAcu1D,eAAe,iCAAlC5uC,EAAA6kC,IA3DgB,yBAAA7kC,EAAAnS,SAAAkS,EAAAzqB,KAAA,qEA+DpBs/G,yCAAsB,SAAAn/C,IAAA,IAAA3lB,EAAAtP,EAAA,OAAAtY,EAAApzB,EAAAoY,KAAA,SAAA+oD,GAAA,cAAAA,EAAA7oD,KAAA6oD,EAAA5oD,MAAA,cAEdyiC,EAAY7zC,EAAK5C,cAAc2J,gBAAgB,CAAC,cAFlCizD,EAAA5oD,KAAA,EAGdpR,EAAK5C,cAAcqT,aAAazX,OAAOmF,KAAK01C,GAA5C,eAAAoc,EAAAj3D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAuD,SAAAq/C,EAAOnjC,GAAP,IAAAJ,EAAA,OAAAV,EAAApzB,EAAAoY,KAAA,SAAAu/C,GAAA,cAAAA,EAAAr/C,KAAAq/C,EAAAp/C,MAAA,UAE9B,QADvBub,EAAeknB,EAAU9mB,IACdxe,SAAyC,OAArBoe,EAAa2B,IAFS,CAAAkiC,EAAAp/C,KAAA,eAGzDpR,EAAK5C,cAAc4jB,UAAU,qCAAsC+L,EAAcJ,EAAape,SAHrCiiD,EAAAp/C,KAAA,EAInDpR,EAAKquB,aAAatB,EAAcJ,EAAape,QAASoe,EAAa2B,KAJhB,wBAAAkiC,EAAA5+C,SAAAs+C,EAAA72D,SAAvD,gBAAA0lE,GAAA,OAAA9O,EAAAn+C,MAAAzY,KAAAiH,YAAA,IAHc,cAWdikC,EAAYvkC,EAAK5C,cAAc2J,gBAAgB,CAAC,cAXlCizD,EAAA5oD,KAAA,EAYdpR,EAAK5C,cAAcqT,aAAazX,OAAOmF,KAAKomC,GAA5C,eAAA4rB,EAAAn3D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAuD,SAAA++C,EAAO9qD,GAAP,IAAAw1E,EAAA,OAAAruD,EAAApzB,EAAAoY,KAAA,SAAA++C,GAAA,cAAAA,EAAA7+C,KAAA6+C,EAAA5+C,MAAA,WACrDkpE,EAAiB/1C,EAAUz/B,IACbmuB,QAFuC,CAAA+8B,EAAA5+C,KAAA,eAAA4+C,EAAA1uC,OAAA,oBAM/BthB,EAAKX,MAAMw0C,UAAU/tB,KAAK,SAAAid,GAAC,OAAIA,EAAE9jC,OAAS6F,IANX,CAAAkrD,EAAA5+C,KAAA,eAQzDpR,EAAK5C,cAAc4jB,UAAU,qCAAsClc,EAAOw1E,EAAe/rE,SARhCyhD,EAAA5+C,KAAA,EASnDpR,EAAKquB,aAAavpB,EAAOw1E,EAAe/rE,QAAS+rE,EAAehsD,KATb,wBAAA0hC,EAAAp+C,SAAAg+C,EAAAv2D,SAAvD,gBAAAglE,GAAA,OAAAlO,EAAAr+C,MAAAzY,KAAAiH,YAAA,IAZc,WAyBhBN,EAAK1G,MAAM2jC,oBAzBK,CAAA+8B,EAAA5oD,KAAA,eAAA4oD,EAAA5oD,KAAA,EA2BZpR,EAAK5C,cAAcqT,aAAazX,OAAOmF,KAAK6B,EAAK1G,MAAM2jC,qBAAvD,eAAAmzB,EAAAp3D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA4E,SAAAuoD,EAAO71B,GAAP,IAAA/9B,EAAA,OAAAymB,EAAApzB,EAAAoY,KAAA,SAAAqoD,GAAA,cAAAA,EAAAnoD,KAAAmoD,EAAAloD,MAAA,cAE1E5L,EAAkBxF,EAAK1G,MAAM2jC,oBAAoBsG,GAFyB+1B,EAAAloD,KAAA,EAI1EpR,EAAK5C,cAAcqT,aAAazX,OAAOmF,KAAKqH,GAA5C,eAAAq3G,EAAA7jH,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA6D,SAAAioD,EAAOh0D,GAAP,IAAAS,EAAAokC,EAAAtB,EAAA,OAAApc,EAAApzB,EAAAoY,KAAA,SAAAgoD,GAAA,cAAAA,EAAA9nD,KAAA8nD,EAAA7nD,MAAA,UAC3D7L,EAAcC,EAAgBV,GAEX9E,EAAKX,MAAMw0C,UAAU/tB,KAAK,SAAAid,GAAC,OAAIA,EAAE9jC,OAAS6F,IAHF,CAAAm0D,EAAA7nD,KAAA,eAK/DpR,EAAK5C,cAAc4jB,UAAU,qCAAqClc,EAAOS,EAAYgJ,SALtB0qD,EAAA7nD,KAAA,EAMzDpR,EAAKquB,aAAavpB,EAAOS,EAAYgJ,QAAShJ,EAAY+oB,KAND,UAUpCtuB,EAAKX,MAAMw0C,UAAU/tB,KAAK,SAAAid,GAAC,OAAIA,EAAE9jC,OAASsG,EAAY81B,KAAKv2B,QAVvB,CAAAm0D,EAAA7nD,KAAA,gBAY/DpR,EAAK5C,cAAc4jB,UAAU,qCAAqCzb,EAAY81B,KAAKv2B,MAAOS,EAAY81B,KAAK9sB,SAZ5C0qD,EAAA7nD,KAAA,GAazDpR,EAAKquB,aAAa9oB,EAAY81B,KAAKv2B,MAAOS,EAAY81B,KAAK9sB,QAAShJ,EAAY81B,KAAK/M,KAb5B,WAiBjE/oB,EAAY4I,UAAU/P,QAAtB,eAAA4yD,EAAAh4D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA8B,SAAAogD,EAAO5yD,EAAEgH,GAAT,OAAA4mB,EAAApzB,EAAAoY,KAAA,SAAAogD,GAAA,cAAAA,EAAAlgD,KAAAkgD,EAAAjgD,MAAA,UACApR,EAAKX,MAAMw0C,UAAU/tB,KAAK,SAAAid,GAAC,OAAIA,EAAE9jC,OAASZ,EAAEyG,QAD5C,CAAAusD,EAAAjgD,KAAA,eAG1BpR,EAAK5C,cAAc4jB,UAAU,6BAA6B3iB,EAAEyG,MAAM,YAAYzG,GAHpDgzD,EAAAjgD,KAAA,EAIpBpR,EAAKquB,aAAahwB,EAAEyG,MAAOzG,EAAEkQ,QAASlQ,EAAEiwB,KAJpB,wBAAA+iC,EAAAz/C,SAAAq/C,EAAA53D,SAA9B,gBAAAwlE,EAAAoE,GAAA,OAAAjS,EAAAl/C,MAAAzY,KAAAiH,YAAA,KASIiF,EAAYskC,UA1BiD,CAAAovB,EAAA7nD,KAAA,aA4B3D7L,EAAYskC,UAAUF,YA5BqC,CAAAsvB,EAAA7nD,KAAA,gBA6BvDu4B,EAAcpkC,EAAYskC,UAAUF,YAC1C3pC,EAAK5C,cAAc4jB,UAAU,6BAA6B2oB,EAAY1qC,KAAK,YAAY0qC,GA9B1BsvB,EAAA7nD,KAAA,GA+BvDpR,EAAKquB,aAAasb,EAAY1qC,KAAM0qC,EAAYp7B,QAASo7B,EAAYrb,KA/Bd,WAmC3D/oB,EAAYskC,UAAUk4D,cACxBx8F,EAAYskC,UAAUk4D,aAAa3jG,QAAnC,eAAA8yD,EAAAl4D,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAA2C,SAAAggD,EAAOxyD,EAAEgH,GAAT,OAAA4mB,EAAApzB,EAAAoY,KAAA,SAAA8/C,GAAA,cAAAA,EAAA5/C,KAAA4/C,EAAA3/C,MAAA,UACbpR,EAAKX,MAAMw0C,UAAU/tB,KAAK,SAAAid,GAAC,OAAIA,EAAE9jC,OAASZ,EAAEyG,QAD/B,CAAAisD,EAAA3/C,KAAA,eAGvCpR,EAAK5C,cAAc4jB,UAAU,6BAA6B3iB,EAAEyG,MAAM,YAAYzG,GAHvC0yD,EAAA3/C,KAAA,EAIjCpR,EAAKquB,aAAahwB,EAAEyG,MAAOzG,EAAEkQ,QAASlQ,EAAEiwB,KAJP,wBAAAyiC,EAAAn/C,SAAAi/C,EAAAx3D,SAA3C,gBAAA2pE,EAAAF,GAAA,OAAA5R,EAAAp/C,MAAAzY,KAAAiH,YAAA,KASEiF,EAAYskC,UAAUxB,kBA7CqC,CAAA4wB,EAAA7nD,KAAA,gBA8CvDi3B,EAAoB9iC,EAAYskC,UAAUxB,kBAChDroC,EAAK5C,cAAc4jB,UAAU,6BAA6BqnB,EAAkBppC,KAAK,YAAYopC,GA/ChC4wB,EAAA7nD,KAAA,GAgDvDpR,EAAKquB,aAAaga,EAAkBppC,KAAMopC,EAAkB95B,QAAS85B,EAAkB/Z,KAhDhC,yBAAA2qC,EAAArnD,SAAAknD,EAAAz/D,SAA7D,gBAAAulE,GAAA,OAAAi+C,EAAA/qG,MAAAzY,KAAAiH,YAAA,IAJ0E,wBAAAg5D,EAAA1nD,SAAAwnD,EAAA//D,SAA5E,gBAAAilE,GAAA,OAAAlO,EAAAt+C,MAAAzY,KAAAiH,YAAA,IA3BY,cAAA05D,EAAA14C,OAAA,SAsFbthB,EAAKC,SAAS,CACnB+8B,sBAAqB,KAvFH,yBAAAg9B,EAAApoD,SAAA4nD,EAAAngE,WA2FtBs+B,wDAAoB,SAAAumC,EAAOnxC,GAAP,IAAAuD,EAAA/qB,EAAA,OAAA0mB,EAAApzB,EAAAoY,KAAA,SAAAktD,GAAA,cAAAA,EAAAhtD,KAAAgtD,EAAA/sD,MAAA,WACdkf,EAAWtwB,EAAKX,MAAMw0C,UAAU/tB,KAAK,SAAAid,GAAC,OAAIA,EAAE9jC,OAAS8tB,OAExC/sB,EAAK1G,MAAMiM,YAHV,CAAA44D,EAAA/sD,KAAA,eAIV7L,EAAcvF,EAAK1G,MAAMiM,YAJf44D,EAAA/sD,KAAA,EAKCpR,EAAKquB,aAAatB,EAAcxnB,EAAYgJ,QAAShJ,EAAY+oB,KALlE,OAKhBgC,EALgB6tC,EAAAhrD,KAAA,cAAAgrD,EAAA78C,OAAA,SAQXgP,EAAWA,EAASA,SAAW,MARpB,wBAAA6tC,EAAAvsD,SAAAssD,EAAA7kE,iEAWpByvD,sCAAmB,SAAAqU,IAAA,IAAAvpD,EAAA,OAAAqY,EAAApzB,EAAAoY,KAAA,SAAA6sD,GAAA,cAAAA,EAAA3sD,KAAA2sD,EAAA1sD,MAAA,UACbwC,EAAgB,KAEf5T,EAAKX,MAAMuU,cAHC,CAAAkqD,EAAA1sD,KAAA,eAAA0sD,EAAA1sD,KAAA,EAKOpR,EAAK5C,cAAc0rD,iBAAiB9oD,EAAK1G,MAAMgM,eALtD,OAKfsO,EALekqD,EAAA3qD,KAOfnT,EAAKC,SAAS,CACZ2T,kBARakqD,EAAA1sD,KAAA,uBAAA0sD,EAAA1sD,KAAA,GAWQ,IAAIqP,QAAJ,eAAA84C,EAAAvgE,OAAA0+B,EAAA,EAAA1+B,CAAAizB,EAAApzB,EAAAgY,KAAa,SAAA6tD,EAAO79C,EAASC,GAAhB,OAAAmL,EAAApzB,EAAAoY,KAAA,SAAA0tD,GAAA,cAAAA,EAAAxtD,KAAAwtD,EAAAvtD,MAAA,OAClCyP,EAAQ7gB,EAAKX,MAAMuU,eADe,wBAAA+qD,EAAA/sD,SAAA8sD,EAAArlE,SAAb,gBAAA0oE,EAAAC,GAAA,OAAAzI,EAAAznD,MAAAzY,KAAAiH,YAAA,IAXR,QAWfsT,EAXekqD,EAAA3qD,KAAA,eAAA2qD,EAAAx8C,OAAA,SAgBV1N,GAhBU,yBAAAkqD,EAAAlsD,SAAAurD,EAAA9jE,WAmBnBo5B,sDAAkB,SAAAsqC,EAAOl2D,GAAP,IAAAypB,EAAA,OAAArE,EAAApzB,EAAAoY,KAAA,SAAAgsD,GAAA,cAAAA,EAAA9rD,KAAA8rD,EAAA7rD,MAAA,cAAA6rD,EAAA7rD,KAAA,EACOpR,EAAK23B,kBAAkB33B,EAAK1G,MAAMgM,eADzC,UACVgrB,EADU2sC,EAAA9pD,KAAA,CAAA8pD,EAAA7rD,KAAA,eAIdpR,EAAK5C,cAAcu1D,eAAe,sBAAuB3yD,EAAK1G,MAAMgM,eAJtD23D,EAAA37C,OAAA,SAKP,MALO,UAQXgP,EAASuY,QAAT,UARW,CAAAo0B,EAAA7rD,KAAA,eASdpR,EAAK2yD,eAAe,+BATNsK,EAAA37C,OAAA,SAUP,MAVO,cAAA27C,EAAA7rD,KAAA,GAaHkf,EAASuY,QAAQi0E,UAAUj2G,GAASurE,OAAOzO,MAAM,SAAA/jD,GAC5D5f,EAAK5C,cAAc4jB,UAAnB,iBAAAzf,OAA8CvB,EAAK1G,MAAMgM,cAAzD,YAAkFsa,KAdpE,eAAAq9C,EAAA37C,OAAA,SAAA27C,EAAA9pD,MAAA,yBAAA8pD,EAAArrD,SAAAmrD,EAAA1jE,iEAkBlB0jH,2BAA6B,WAE3B,IAAMrhE,EACyB,qBAAtB17C,EAAK1G,MAAMs+C,QACiC,qBAA5C53C,EAAK1G,MAAMs+C,OAAO8D,sBACrB17C,EAAK1G,MAAMs+C,OAAO8D,sBAClB,EAEA08D,EACJp4G,EAAKX,MAAM64G,eAAiBx8D,EAE9B17C,EAAKC,SAAS,CACZm4G,yBAIJj5G,gEAA4B,SAAAm9D,EAAOm/C,GAAP,OAAAxvF,EAAApzB,EAAAoY,KAAA,SAAA2rD,GAAA,cAAAA,EAAAzrD,KAAAyrD,EAAAxrD,MAAA,OAErBpR,EAAKX,MAAMwH,UACd7G,EAAK1G,MAAMoiH,sBAAsBD,GAEjCz7G,EAAKg9G,uBALmB,wBAAApgD,EAAAhrD,SAAA0qD,EAAAjjE,iEAS5B4jH,mBAAqB,WAEnB,IAAMz/D,EACyB,qBAAtBx9C,EAAK1G,MAAMs+C,QAC2B,qBAAtC53C,EAAK1G,MAAMs+C,OAAO2D,gBACrBv7C,EAAK1G,MAAMs+C,OAAO2D,gBAClB7sC,IAAcusC,QAAQM,gBAIxBA,EAAkB,CACpBt8C,KAHgByP,IAAcusC,QAAQC,kBAAkBsC,GAAa9uC,IAAcusC,QAAQC,kBAAkBsC,GAAa,UAI1H31C,GAAI21C,GAGFvC,EAAOjiD,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAM47C,SAC9BA,EAAQjsB,SAAWusB,EAEnBv7C,EAAKC,SAAS,CAAEg7C,eAGlBiiE,kCAAe,SAAAr7C,IAAA,OAAA51C,EAAApzB,EAAAoY,KAAA,SAAA6wD,GAAA,cAAAA,EAAA3wD,KAAA2wD,EAAA1wD,MAAA,cAAA0wD,EAAA3wD,KAAA,EAAA2wD,EAAAxgD,OAAA,SAEJthB,EAAKX,MAAM4hB,KAAKC,IAAI6zD,IAAIC,MAAM,SAACp1D,EAAO49B,GAC3C,IAAIyyD,EAAOj3G,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAM47C,QAAQg1D,SACtCA,EAAQpoG,GAAK21C,EACb,IAAIvC,EAAOjiD,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAM47C,SAC9BA,EAAQg1D,QAAUA,EAClBjwG,EAAKC,SAAS,CAAEg7C,eAPP,OAAA6mB,EAAA3wD,KAAA,EAAA2wD,EAAAlZ,GAAAkZ,EAAA,SAUX9hE,EAAK5C,cAAc4jB,UAAU,6BAA7B8gD,EAAAlZ,IAVW,wBAAAkZ,EAAAlwD,SAAAiwD,EAAAxoE,KAAA,cAcf8jH,oCAAiB,SAAAj7C,IAAA,OAAAj2C,EAAApzB,EAAAoY,KAAA,SAAAkxD,GAAA,cAAAA,EAAAhxD,KAAAgxD,EAAA/wD,MAAA,cAAA+wD,EAAAhxD,KAAA,EAAAgxD,EAAA7gD,OAAA,SAENthB,EAAKX,MAAM4hB,KAAKC,IAAI6zD,IAAIqoC,eAAe,SAACx9F,EAAO69B,GACpD,IAAIwyD,EAAOj3G,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAM47C,QAAQg1D,SACtCA,EAAQhxG,KAAOw+C,EACf,IAAIxC,EAAOjiD,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAM47C,SAC9BA,EAAQg1D,QAAUA,EAClBjwG,EAAKC,SAAS,CAAEg7C,eAPL,OAAAknB,EAAAhxD,KAAA,EAAAgxD,EAAAvZ,GAAAuZ,EAAA,SAUbniE,EAAK5C,cAAc4jB,UAAU,+BAA7BmhD,EAAAvZ,IAVa,wBAAAuZ,EAAAvwD,SAAAswD,EAAA7oE,KAAA,cAcjBk/G,kCAAe,SAAA/1C,IAAA,IAAAvnB,EAAA,OAAAhvB,EAAApzB,EAAAoY,KAAA,SAAAwxD,GAAA,cAAAA,EAAAtxD,KAAAsxD,EAAArxD,MAAA,cACbpR,EAAKi9G,qBADQx6C,EAAArxD,KAAA,EAGPqP,QAAQkD,IAAI,CAChB3jB,EAAKk9G,eACLl9G,EAAKm9G,mBALM,QAQTliE,EARSjiD,OAAAkH,EAAA,EAAAlH,CAAA,GAQMgH,EAAKX,MAAM47C,UACtBk1D,iBAAmBnwG,EAAKX,MAAM47C,QAAQg1D,QAAQpoG,KAAO7H,EAAKX,MAAM47C,QAAQjsB,SAASnnB,GAMzF7H,EAAKC,SAAS,CAAEg7C,YAfH,wBAAAwnB,EAAA7wD,SAAA4wD,EAAAnpE,WAkBfu0B,gEAA4B,SAAA6xC,EAAO1yC,EAAcswF,GAArB,IAAArwF,EAAA5xB,EAAAuQ,EAAAqhE,EAAAoD,EAAAiI,EAAA7vE,EAAA80G,EAAAz2G,EAAAgtC,EAAAvjB,EAAAitF,EAAAtwC,EAAAgC,EAAA5sD,EAAAm7F,EAAAC,EAAAC,EAAAC,EAAApB,EAAAqB,EAAAt9G,UAAA,OAAA2rB,EAAApzB,EAAAoY,KAAA,SAAA+vD,GAAA,cAAAA,EAAA7vD,KAAA6vD,EAAA5vD,MAAA,UAAqC4b,EAArC4wF,EAAAzhH,OAAA,QAAAoE,IAAAq9G,EAAA,GAAAA,EAAA,GAA8C,GAAIxiH,EAAlDwiH,EAAAzhH,OAAA,QAAAoE,IAAAq9G,EAAA,GAAAA,EAAA,GAA0D,KAAMjyG,EAAhEiyG,EAAAzhH,OAAA,QAAAoE,IAAAq9G,EAAA,GAAAA,EAAA,GAA2E,KAAM5wC,EAAjF4wC,EAAAzhH,OAAA,QAAAoE,IAAAq9G,EAAA,GAAAA,EAAA,GAAoG,KAAMxtC,EAA1GwtC,EAAAzhH,OAAA,QAAAoE,IAAAq9G,EAAA,GAAAA,EAAA,GAAqH,KAAMvlC,EAA3HulC,EAAAzhH,OAAA,QAAAoE,IAAAq9G,EAAA,GAAAA,EAAA,GAAoI,KAEzJ59G,EAAKX,MAAM47C,QAAQk1D,iBAFE,CAAAnvC,EAAA5vD,KAAA,eAIxBpR,EAAKX,MAAMqzC,OAAO7J,QAAQowE,wBAJFj4C,EAAA1/C,OAAA,UAKjB,GALiB,UASrBthB,EAAKX,MAAMwH,QATU,CAAAm6D,EAAA5vD,KAAA,gBAUxBpR,EAAKg9G,sBACmB,oBAAbrxG,GACTA,EAAS,KAAK,yBAZQq1D,EAAA1/C,OAAA,UAcjB,GAdiB,YAkBtBthB,EAAKX,MAAM+4G,kBAlBW,CAAAp3C,EAAA5vD,KAAA,gBAmBxBpR,EAAKg5G,oBACmB,oBAAbrtG,GACTA,EAAS,KAAK,uBArBQq1D,EAAA1/C,OAAA,UAuBjB,GAvBiB,YA8BtB9Y,EAAcxI,EAAK85G,kBAAkBzhC,IAC7B3W,OAAS27C,EAErBr9G,EAAK+5G,eAAevxG,GAGpBA,EAAY5K,KAAO,WACnB4K,EAAY7I,OAAS,UACrB6I,EAAYwkB,OAASA,EAGrBhtB,EAAKyxE,kBAAkBjpE,GAzCG80G,EA2CKt9G,EAAKX,MAA5BwH,EA3CkBy2G,EA2ClBz2G,QAASgtC,EA3CSypE,EA2CTzpE,UACbvjB,EAAWujB,EAAU/tB,KAAK,SAAAid,GAAC,OAAIA,EAAE9jC,OAAS8tB,IA5CpB,CAAAi0C,EAAA5vD,KAAA,eA8CA,oBAAbzF,GACTA,EAAS,KAAK,sBA/CQq1D,EAAA1/C,OAAA,SAiDjBthB,EAAK5C,cAAc4jB,UAAnB,yBAAAzf,OAAsDwrB,KAjDrC,eAoD1BuD,EAAWA,EAASA,SAOhBitF,EAA8B,KA3DRv8C,EAAA7vD,KAAA,GA+DnB/V,IACHA,EAAQ4E,EAAK5C,cAAciU,MAAM,IAGnCrR,EAAK5C,cAAc4jB,UAAU,4BAA4B+L,EAAauD,EAASg/C,SAASzoE,EAAQw2G,EAAerwF,EAAQ5xB,EAAQ,CAAE0S,KAAMjH,EAASzL,SAAU,CAAE0S,KAAMjH,IAnE1Im6D,EAAA5vD,KAAA,IAsER67D,EAAA38C,EAASuY,SAAQw0E,GAAjBvrG,MAAAm7D,EAAAj0E,OAAAw/D,GAAA,EAAAx/D,CAAoCg0B,IACjDu4D,YAAYnqF,EAAQ,CAAE0S,KAAMjH,EAASzL,SAAU,CAAE0S,KAAMjH,IACvD88D,MAAM,SAAAjhE,GAAC,OAAI8qB,QAAQ5N,MAAMld,KAxEJ,eAsEpB2f,EAtEoB2+C,EAAA7tD,QA6EtBkP,GADAA,EAAMriB,EAAK5C,cAAciU,MAAMgR,IACrB/Q,KAAK+Q,EAAI5T,MAAMzO,EAAK5C,cAAciU,MAAM,SAG9C++D,GAAY/tD,EAAI7Q,GAAGxR,EAAK5C,cAAciU,MAAM++D,MAC9C/tD,EAAMriB,EAAK5C,cAAciU,MAAM++D,IAIjC/tD,EAAMriB,EAAKX,MAAM4hB,KAAK0wC,MAAMrgC,KAAKjP,EAAI2pB,aAAaqmB,KAAU0X,eAGxDyzC,EAAuB,SAACnwC,EAAoBC,GAI5CiwC,GACF90G,OAAOub,aAAau5F,GAKtB/0G,EAAYq1G,mBAAqB,EAEjC,IAAMxyF,GAAiB3c,IAAcusC,QAAQK,UAAgC,oBAAb3vC,GAA2D,IAAhCnD,EAAYq1G,kBAGjGC,EAAsB99G,EAAK1G,MAAMs+C,OAAO6D,uBAAyB,EAEjC,IAAlCjzC,EAAYq1G,kBAEdr1G,EAAY7I,OAAS,YACZ6I,EAAYq1G,kBAInBr1G,EAAYq1G,oBAAsBC,EAGhCxwC,EAAQ3tE,OACV6I,EAAY7I,OAAS,UACX2tE,EAAQ3tE,SAClB6I,EAAY7I,OAAS,SAEd6I,EAAYq1G,kBAKnBxyF,IAEEiiD,IACF9kE,EAAYmpB,UAAY27C,GAE1B9kE,EAAYu1G,YAAc,eAC1B/9G,EAAKyxE,kBAAkBjpE,GAEvBmD,EAASnD,GAETxI,EAAK5C,cAAc4jB,UAAU,YAAaqsD,EAAoBC,EAAS9kE,KAIrEi1G,EAAqB,SAArBA,EAAsBhxF,EAAgBuxF,GAC1C,IAAKvxF,EACH,OAAO,EAETzsB,EAAKX,MAAM4hB,KAAKC,IAAIk9C,sBAAsB3xC,EAAgB,SAACtL,EAAIwQ,GACzDA,GAAaA,EAAUhyB,QACzBK,EAAK5C,cAAc4jB,UAAU,wBAAyB2Q,GACtD6rF,EAAqB,EAAE7rF,IAEvB4rF,EAA8B90G,OAAOsa,WAAY,kBAAM06F,EAAmBhxF,EAAgBuxF,IAAWA,MAKrGN,EAAkB,SAAApwC,GAIlBiwC,GACF90G,OAAOub,aAAau5F,GAIlBjwC,IACF9kE,EAAYmpB,UAAY27C,GAE1B9kE,EAAYu1G,YAAc,UAGtBrvG,IAAcusC,QAAQK,UACxB9yC,EAAY7I,OAAS,UACG,oBAAbgM,GACTA,EAASnD,KAGXxI,EAAKyxE,kBAAkBjpE,GAGnB8kE,EAAQ3tE,SACV49G,EAA8B90G,OAAOsa,WAAY,kBAAM06F,EAAmBnwC,EAAQ7gD,gBAAgB,MAAO,QAlLvFu0C,EAAA1/C,OAAA,UA0LjB2tD,EAAA3+C,EAASuY,SAAQw0E,GAAjBvrG,MAAAm9D,EAAAj2E,OAAAw/D,GAAA,EAAAx/D,CAAoCg0B,IACxCrpB,KAAKvI,EAAQ,CAAE0S,KAAMjH,EAASzL,QAAOinB,OAAoB,CAAEvU,KAAMjH,EAASwb,QAC1Eoa,GAAG,kBAAmB,SAAA3gC,GAGrB,GAFAkE,EAAK5C,cAAc4jB,UAAU,sBAAuBllB,IAE/CA,EAEH,OADAkE,EAAK5C,cAAc4jB,UAAU,yCAA0CllB,IAChE,EAGT0M,EAAYikB,gBAAkB3wB,EAC9B0M,EAAY7I,OAAS,UACrB6I,EAAYu1G,YAAc,kBAC1B/9G,EAAKyxE,kBAAkBjpE,GAEnBwkE,GACFA,EAAiBxkE,GAIfxI,EAAK1G,MAAM8H,WACTm8G,GACF90G,OAAOub,aAAau5F,GAEtBA,EAA8B90G,OAAOsa,WAAY,kBAAM06F,EAAmB3hH,EAAK,MAAQ,QAG1F2gC,GAAG,UAAWihF,GACdjhF,GAAG,eAAgB+gF,GACnB/gF,GAAG,QAAS,SAAA7c,GAEX4N,QAAQC,IAAI,WAAW7N,GAEvB,IAAM+9F,KAAa/9F,IAASA,EAAMklB,SAA6C,oBAA3BllB,EAAMklB,QAAQ//B,WAA0B6a,EAAMklB,QAAQ//B,SAAS,qCASnH,GANAyD,EAAY7I,OAAS,QACrB6I,EAAYu1G,YAAc,QAC1B/9G,EAAKyxE,kBAAkBjpE,IAIlBm1G,EAAW,CACdl1G,OAAOwgD,cAAcC,WAAW,uBAAwB,CACtDl6C,KAAM,QACNq6C,WAAY,GACZC,WAAY,GACZf,QAAS,UACTa,WAAY,QACZD,iBAAkB,iBAGpB,IAAMozD,EAAU38F,aAAiBmuD,MAEJ,qBAAlBnuD,EAAMklB,QACf9kC,EAAKo5G,0BAA0B,KAAKx5F,EAAMklB,SACjC9kC,EAAK5C,cAAcqnE,kBAAoB83C,GAChDI,KAAwB/8F,GAIJ,oBAAbjU,GACTA,EAASnD,EAAYoX,MAxPH,eAAAohD,EAAA7vD,KAAA,GAAA6vD,EAAApY,GAAAoY,EAAA,UA6PxBxzC,QAAQC,IAAI,iBAAZuzC,EAAApY,IAEApgD,EAAY7I,OAAS,QACrBK,EAAKyxE,kBAAkBjpE,GAIvBC,OAAOwgD,cAAcC,WAAW,4CAA6C,CAC3El6C,KAAM,QACNq6C,WAAY,GACZC,WAAY,GACZf,QAAS,UACTa,WAAY,QACZD,iBAAkB,+BAGdw0D,KAAa38C,EAAApY,KAASoY,EAAApY,GAAM9jB,UAAUk8B,EAAApY,GAAM9jB,QAAQ//B,SAAS,qCAE7Dw3G,EAAUv7C,EAAApY,cAAiBmlB,MAC5B/tE,EAAK5C,cAAcqnE,kBAAoB83C,IAAYoB,GACtDhB,KAAA37C,EAAApY,IAGsB,oBAAbj9C,GAETA,EAASnD,EAADw4D,EAAApY,IAtRcoY,EAAA1/C,OAAA,UAyRjB,GAzRiB,yBAAA0/C,EAAApvD,SAAA6tD,EAAApmE,KAAA,wEA8R5BygH,kBAAoB,WAAiB,IAAhBzhC,EAAgB/3E,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KACtBkI,EAAWxP,OAAAkH,EAAA,EAAAlH,CAAA,GACVq/E,GAUL,OARA7vE,EAAYmpB,UAAY,GACxBnpB,EAAYm5D,QAAUh8D,KAAKouB,MAC3BvrB,EAAYq1G,kBAAoB,EAChCr1G,EAAY7I,OAAS,cACrB6I,EAAYy1G,YAAct4G,KAAKouB,MAC/BvrB,EAAY1D,MAAQ9E,EAAK1G,MAAMgM,cAC/BkD,EAAY+6B,SAAWvjC,EAAK1G,MAAMwZ,iBAClCtK,EAAYg1C,UAAYx9C,EAAK5C,cAAc2J,gBAAgB,CAAC,UAAU,oBAC/DyB,KAGTuxG,eAAiB,SAAAvxG,GACf,IAAM9B,EAAY1N,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqH,cACrCA,EAAY,KAAAnF,OAAMiH,EAAYm5D,UAAan5D,EAC3CxI,EAAKC,SAAS,CAAEyG,oBAIlB+qE,kBAAoB,SAAAysC,GAClB,IAAMx3G,EAAY1N,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqH,cAC/B8B,EAAWxP,OAAAkH,EAAA,EAAAlH,CAAA,GAAQklH,GAezB,OAdA11G,EAAYy1G,YAAct4G,KAAKouB,MAC/BrtB,EAAY,KAAAnF,OAAM28G,EAAmBv8C,UAAan5D,EAClDxI,EAAKC,SAAS,CAAEyG,iBAIZ8B,EAAYikB,kBAEdzsB,EAAK5C,cAAckjF,kBAGnBtgF,EAAK5C,cAAc0+D,qBAAnB,KAAAv6D,OAA6CiH,EAAYm5D,SAAUn5D,IAG9DA,KAIT+tG,qBAAuB,SAAA7zG,GACJ,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAK6rG,uBAAwB,EAEpCx2G,EAAKC,SAAS,CAAEyyC,cAGlBsqE,oBAAsB,SAAAt6G,GACH,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAK6rG,uBAAwB,EACpCx2G,EAAKC,SAAS,CAAEyyC,OAAQA,OAG1BikE,4BAA8B,SAAAj0G,GACX,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKisG,0BAA2B,EACvC52G,EAAKC,SAAS,CAAEyyC,cAGlB2mE,2BAA6B,SAAA32G,GACV,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKisG,0BAA2B,EACvClkE,EAAO/nC,KAAKouG,kCAAmC,EAC/CrmE,EAAO/nC,KAAK6rG,uBAAwB,EAEpCx2G,EAAKC,SAAS,CAAEyyC,cAGlB+kE,2BAA6B,SAAA/0G,GACV,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKgtG,kBAAmB,EAC/B33G,EAAKC,SAAS,CAAEyyC,cAGlB0mE,0BAA4B,SAAC12G,EAAEkd,GACZ,qBAANld,GAAqBA,GAC9BA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKgtG,iBAAmB/3F,EAE/B5f,EAAKC,SAAS,CAAEyyC,cAGlB2kE,0BAA4B,SAAA30G,GACT,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAK4sG,iBAAkB,EAC9Bv3G,EAAKC,SAAS,CAAEyyC,cAGlBymE,yBAA2B,SAACz2G,EAAEkd,GACX,qBAANld,GAAqBA,GAC9BA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAGjB,oBAAR9yB,IACFA,EAAQ,mCAKV8yB,EAAO/nC,KAAK4sG,gBAAkB33F,EAE9B5f,EAAKC,SAAS,CAAEyyC,cAGlBokE,iCAAmC,SAAAp0G,GAChB,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKosG,qBAAsB,EAClC/2G,EAAKC,SAAS,CAAEyyC,cAGlB4mE,gCAAkC,SAAA52G,GACf,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKosG,qBAAsB,EAClC/2G,EAAKC,SAAS,CAAEyyC,cAGlBmjE,wBAA0B,SAAAnzG,GACP,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKmrG,0BAA2B,EACvC91G,EAAKC,SAAS,CAAEyyC,cAGlBwmE,uBAAyB,SAAAx2G,GACN,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKmrG,0BAA2B,EACvC91G,EAAKC,SAAS,CAAEyyC,cAGlBsjE,mBAAqB,SAAAtzG,GACF,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKsrG,qBAAsB,EAClCj2G,EAAKC,SAAS,CAAEyyC,cAGlByrE,kBAAoB,SAAAz7G,GACD,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKsrG,qBAAsB,EAClCj2G,EAAKC,SAAS,CAAEyyC,cAGlByjE,uBAAyB,SAAAzzG,GACN,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKyrG,yBAA0B,EACtCp2G,EAAKC,SAAS,CAAEyyC,cAGlBumE,sBAAwB,SAAAv2G,GACL,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKyrG,yBAA0B,EACtCp2G,EAAKC,SAAS,CAAEyyC,cAGlBukE,mBAAqB,SAAAv0G,GACF,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKusG,qBAAsB,EAClCl3G,EAAKC,SAAS,CAAEyyC,cAGlBsmE,kBAAoB,SAAAt2G,GACD,qBAANA,GACTA,EAAE0D,iBAGJ,IAAIssC,EAAM15C,OAAAkH,EAAA,EAAAlH,CAAA,GAAQgH,EAAKX,MAAMqzC,QAC7BA,EAAO/nC,KAAKusG,qBAAsB,EAClCl3G,EAAKC,SAAS,CAAEyyC,cAGlBrzC,MAAQ,CACN4hB,KAAM,KACNqxF,QAAQ,KACRzrG,QAAS,KACTgtC,UAAW,GACXsI,SAAU,KACVmB,SAAU,KACV06D,WAAW,KACXtxG,aAAc,GACd03G,YAAa,KACbnG,aAAa,KACbrkG,cAAc,KACdskG,eAAgB,KAChBnsD,iBAAkB,KAClB0qD,iBAAkB,KAClB4H,kBAAmB,KACnB/tC,qBAAqB,KACrB6nC,SAAUn4G,EAAKm4G,SACfC,kBAAmB,KACnBI,oBAAmB,EACnB8F,uBAAuB,GACvBthF,sBAAqB,EACrBo4E,YAAap1G,EAAKo1G,YAClBsD,yBAA0B,KAC1BnyC,aAAcvmE,EAAKumE,aACnBl4C,aAAcruB,EAAKquB,aACnBiqF,eAAgBt4G,EAAKs4G,eACrBhC,gBAAiBt2G,EAAKs2G,gBACtBmC,iBAAkBz4G,EAAKy4G,iBACvB3vD,iBAAkB9oD,EAAK8oD,iBACvBD,kBAAmB7oD,EAAK6oD,kBACxB8vD,oBAAqB34G,EAAK24G,oBAC1BC,qBAAsB54G,EAAK44G,qBAC3BhrF,0BAA2B5tB,EAAK4tB,0BAChCzuB,0BAA2Ba,EAAKb,0BAChC05G,yBAA0B74G,EAAK1G,MAAMu/G,yBACrC59D,QAAS,CACPg1D,QAAS,GACTjhF,SAAU,GACVmhF,iBAAkB,KAClBoI,aAAcv4G,EAAKu4G,cAErB7lE,OAAQ,CACN/nC,KAAM,CACJ4sG,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBsC,uBAAwB,KACxB1C,wBAAyB,KACzBQ,yBAA0B,KAC1B8B,yBAA0B,KAC1BK,iCAAkC,KAClC9C,oBAAqBj2G,EAAKi2G,oBAC1BH,yBAA0B91G,EAAK81G,0BAEjCjtE,QAAS,CACPmwE,kBAAmBh5G,EAAKg5G,kBACxBmF,kBAAmBn+G,EAAKm+G,kBACxBnI,mBAAoBh2G,EAAKg2G,mBACzBiB,mBAAoBj3G,EAAKi3G,mBACzB+F,oBAAqBh9G,EAAKg9G,oBAC1BzG,qBAAsBv2G,EAAKu2G,qBAC3B0C,sBAAuBj5G,EAAKi5G,sBAC5B9C,uBAAwBn2G,EAAKm2G,uBAC7B+C,uBAAwBl5G,EAAKk5G,uBAC7BrD,wBAAyB71G,EAAK61G,wBAC9BsD,yBAA0Bn5G,EAAKm5G,yBAC/B9B,0BAA2Br3G,EAAKq3G,0BAChC+B,0BAA2Bp5G,EAAKo5G,0BAChC3B,2BAA4Bz3G,EAAKy3G,2BACjC4B,2BAA4Br5G,EAAKq5G,2BACjC1C,4BAA6B32G,EAAK22G,4BAClC4C,gCAAiCv5G,EAAKu5G,gCACtCD,gCAAiCt5G,EAAKs5G,gCACtCE,iCAAkCx5G,EAAKw5G,iCACvC1C,iCAAkC92G,EAAK82G,mCAG3CtuG,YAAa,CACXmC,KAAM,CACJjE,aAAc,MAEhB+yG,KAAM,GACN5wE,QAAS,gFAvqDX,IAAMvvC,EAAQN,OAAOC,OAAO,GAAGI,KAAKC,OACpCA,EAAMu6C,UAAYx6C,KAAKgG,MAAMw0C,UACzBx6C,KAAK+D,eACP9D,EAAMuN,QAAUxN,KAAKgG,MAAMwH,QAC3BxN,KAAK+D,cAAcC,SAAS/D,KAE5BA,EAAMuN,QAAUxN,KAAKgG,MAAMwH,QAC3BxN,KAAK+D,cAAgB,IAAIE,KAAchE,mDAKzCD,KAAKkS,oBAAqB,+CAI1BlS,KAAKkE,YACLkL,OAAO0vG,SAAW9+G,KAAK8+G,0CA2pDvB,IAAMoG,EAA+E,kBAA3CllH,KAAKgG,MAAMqzC,OAAO/nC,KAAK4sG,iBAAgCl+G,KAAKgG,MAAMqzC,OAAO/nC,KAAK4sG,gBAAgBp7G,OAAO,EACzIqiH,EAAiF,kBAA5CnlH,KAAKgG,MAAMqzC,OAAO/nC,KAAKgtG,kBAAiCt+G,KAAKgG,MAAMqzC,OAAO/nC,KAAKgtG,iBAAiBx7G,OAAO,EAClJ,OACEI,EAAA1D,EAAAC,cAAA,WACEyD,EAAA1D,EAAAC,cAACg/G,GAAyB2G,SAA1BzlH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8B,MAAO/B,KAAKgG,SAEd9C,EAAA1D,EAAAC,cAAC4lH,GAAD1lH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEo5C,OAAQr5C,KAAKgG,MAAMqzC,OACnBuI,QAAS5hD,KAAKgG,MAAM47C,QACpBp0C,QAASxN,KAAKgG,MAAMwH,QACpBzF,SAAU/H,KAAKC,MAAM8H,SACrBg0G,YAAa/7G,KAAKgG,MAAM+1G,YACxB5C,aAAcn5G,KAAKC,MAAMk5G,aACzB8D,gBAAiBj9G,KAAKgG,MAAMi3G,gBAC5BG,iBAAkBp9G,KAAKgG,MAAMo3G,iBAC7BG,yBAA0Bv9G,KAAKgG,MAAMu3G,yBACrC8B,yBAA0Br/G,KAAKgG,MAAMq5G,4BAEvCn8G,EAAA1D,EAAAC,cAAC6lH,GAAD,CACEjsE,OAAQr5C,KAAKgG,MAAMqzC,OACnB7rC,QAASxN,KAAKgG,MAAMwH,QACpByrG,QAASj5G,KAAKC,MAAMg5G,QACpB5B,OAAQ8N,IAEVjiH,EAAA1D,EAAAC,cAAC8lH,GAAD,CACElsE,OAAQr5C,KAAKgG,MAAMqzC,OACnB7rC,QAASxN,KAAKgG,MAAMwH,QACpByrG,QAASj5G,KAAKC,MAAMg5G,QACpB5B,OAAQ6N,EACR/L,aAAcn5G,KAAKC,MAAMk5G,eAE3Bj2G,EAAA1D,EAAAC,cAAC+lH,GAAD,CACE59F,KAAM5nB,KAAKgG,MAAM4hB,KACjBzf,MAAOnI,KAAKC,MAAMkI,MAClBy5C,QAAS5hD,KAAKgG,MAAM47C,kBA1tDE5+C,IAAM1C,WAAhCigH,GACGkF,SAAWhH,GAAyBgH,SAguD9BlF,8BC5pDA1H,8MA/Jb7yG,MAAQ,KAKRjC,cAAgB,gFAEV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,KAAcjE,KAAKC,4JAK9CD,KAAKkE,kQAKLlE,KAAKkE,iMAGkB1D,EAAWC,sEAElCT,KAAKkE,aAEDlE,KAAKC,MAAM2hD,SAAY5hD,KAAKC,MAAM2hD,QAAQk1D,2DACrC,yIAIF,IAAA3yG,EAAAnE,KAED0lH,EAAoB1lH,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa,YAE3E,OACExK,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEpC,MAAO,CACLsQ,KAAM,IACNT,MAAO,IACPrJ,OAAQ,GACRC,SAAU,aAGZtE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6B,EAAG,EACHlF,WAAY,SACZC,eAAgB,SAChBuB,gBAAiB,YACjBT,cAAe,CAAC,SAAS,QAEzBqC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEjC,MAAO,QACPO,UAAW,UAFb,sCAMAyB,EAAA1D,EAAAC,cAAC2W,GAAA,EAAD,CACEtV,GAAI,EACJ4G,GAAI,EACJhC,GAAI,CAAC,EAAE,GACP8D,GAAI,CAAC,EAAE,GACP4+B,GAAI,OACJlnC,MAAO,QACPH,MAAO,CACLgC,QAAQ,OACR1B,aAAa,MACbR,cAAc,MACdf,WAAW,YAEbwB,gBAAiB,UACjB0qB,KAAM,uEAdR,YAiBE9oB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJ7D,KAAM,QACNzE,MAAO,QACP0E,KAAM,yBAKZ1C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEsL,GAAI,CAAC,EAAE,GACPnL,GAAI,OACJyiB,GAAI,cACJlmB,MAAO,CAAC,MAAM,QACdoG,SAAU,CAAC,OAAO,SAClBnG,WAAY,CAAC,SAAS,eAEtBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,CAAC,EAAG,GACR3J,MAAO,CAAC,GAAK,MAEbqD,EAAA1D,EAAAC,cAAC27G,GAAA,EAAD,CACEhhD,GAAG,KAEHl3D,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqE,SAAU,WACVyI,IAAK,kBACL7O,OAAQ,CAAC,OAAO,YAIpB8B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,CAAC,GAAI,EAAE,IACdC,WAAY,SACZe,cAAe,MACfd,eAAgB,YAGd2lH,GACExiH,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEhC,GAAI,EACJI,SAAU,EACVL,MAAO,QACP0I,WAAY,QACZiG,WAAY,YACZpO,UAAW,CAAC,SAAS,QACrB+B,QAAU,SAAC6F,GAAD,OAAO+F,OAAOk1C,SAAS7hD,KAAK,iBAPxC,eAaDzC,KAAKC,MAAM8H,UACV7E,EAAA1D,EAAAC,cAAAyD,EAAA1D,EAAAiR,SAAA,KACEvN,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEhC,GAAI,EACJI,SAAU,EACVL,MAAO,QACP0I,WAAY,QACZiG,WAAY,YACZpO,UAAW,CAAC,SAAS,QACrB+B,QAAS,SAAC6F,GAAOlF,EAAKJ,cAAco2D,SAAS5pC,SAASC,eAAe,YAAYm1F,UAAU,OAP7F,cAWAziH,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE5B,SAAU,EACVL,MAAO,QACP0I,WAAY,QACZiG,WAAY,YACZpO,UAAW,CAAC,SAAS,QACrB+B,QAAS,SAAC6F,GAAOlF,EAAKJ,cAAco2D,SAAS5pC,SAASC,eAAe,OAAOm1F,UAAU,OANxF,mBA7IC3iH,IAAM1C,sBCNZ,SAASslH,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACR32G,OAAO+qD,SAAS,EAAG,IAClB,CAAC0rD,IAEG,+BCwCMG,8MAxCbhgH,MAAQ,2EAGN,OACE9C,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,UAAWC,KAAOnB,gBAAiByF,GAAI,CAAC,EAAE,GAAI8G,GAAI,CAAC,MAAO,QAC7DvL,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,UAAWC,KAAOlB,iBACvBe,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKqE,SAAU,WAAYD,OAAQ,IACjCrE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,SAAUf,WAAY,SAAUmG,SAAU,CAAC,OAAQ,QAAS3C,GAAI,OAAQ7B,UAAW,SAAUgN,GAAI,CAAC,MAAO,QAC5HvL,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQ8sB,GAAT,CAAYpgB,WAAY,YAAamB,WAAY,QAASpQ,GAAI,QAASW,SAAU,CAAC,QAAQ,GAAIE,UAAW,SAAUP,MAAO,SAA1H,4BAGAgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAYC,WAAY,YAAamB,WAAY,QAASpQ,GAAI,QAASY,WAAY,EAAGD,SAAU,CAAC,QAAQ,GAAIE,UAAW,SAAUP,MAAO,SAAzI,wDAGAgC,EAAA1D,EAAAC,cAAC27G,GAAA,EAAD,CAAYhhD,GAAG,IAAIr5D,MAAO,CAACq+B,eAAe,SACxCl8B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEC,UAAW6iH,KAAchgG,eACzB5kB,aAAc,EACdsE,MAAM3F,KAAKC,MAAM8H,SAAW,UAC5BwB,UAAW,OACXgH,cAAe,QACf/O,WAAY,EACZD,SAAU,CAAC,EAAE,GACb+B,GAAI,OACJqE,GAAI,CAAC,EAAE,GACPjC,GAAI,GAVN,sBAkBRxC,EAAA1D,EAAAC,cAACmyG,EAAA,EAAD,cAnCmBtxG,aCyCZ4lH,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAIz/G,EAAK1G,MAAM2hD,QACb,OAAQj7C,EAAK1G,MAAM2hD,QAAQpzC,IACzB,KAAK,EACH43G,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpBhlH,aAAc,MACdC,gBAAiBtB,KAAKmmH,wBACtB/kH,OAAQ,MACRvB,MAAO,OAGT,OACEqD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKpC,MAAOslH,EAAellH,GAAI,IAC/B+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMpC,MAAO,CAAEW,cAAe,eAC3B1B,KAAKC,MAAM2hD,QAAQh8C,cAxCA5C,IAAM1C,WCW9BgmH,GAAkB,SAAArmH,GAAK,OAC3BiD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAKuC,GAAI,EAAGuC,UAAW,EAAGyM,YAAY,UAAUjG,GAAI,GAClDvL,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQopC,GAAT,CAAY9qC,UAAW,UAAvB,cACAyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEK,QAASvD,EAAMo5C,OAAO7J,QAAQowE,sBAC9Bj6G,KAAK,QACLxE,GAAI,EACJP,GAAI,GAJN,0BASAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEK,QAASvD,EAAMo5C,OAAO7J,QAAQm0E,oBAC9Bh+G,KAAK,QACLxE,GAAI,EACJP,GAAI,GAJN,cAQAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAK,QACLnC,QAASvD,EAAMo5C,OAAO7J,QAAQwwE,2BAC9B7+G,GAAI,EACJP,GAAI,GAJN,sBAQAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAK,QACLnC,QAASvD,EAAMo5C,OAAO7J,QAAQywE,gCAC9B9+G,GAAI,EACJP,GAAI,GAJN,uBAQAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAK,QACLnC,QAAS,SAAA8rD,GACPrvD,EAAMo5C,OAAO7J,QAAQmwE,kBAAkBrwD,IAEzCnuD,GAAI,EACJP,GAAI,GANN,aAUAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAK,QACLnC,QAASvD,EAAMo5C,OAAO7J,QAAQqwE,uBAC9B1+G,GAAI,EACJP,GAAI,GAJN,oBAQAsC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAK,QACLnC,QAASvD,EAAMo5C,OAAO7J,QAAQs1E,kBAC9B3jH,GAAI,EACJP,GAAI,GAJN,eAuOW2lH,oLA1NX,OACErjH,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtD,MAAO,QAASyD,GAAI,OAAQqE,GAAI,GACpCzE,EAAA1D,EAAAC,cAAC0D,EAAA,EAAQyM,GAAT,CAAYnO,UAAW,UAAvB,iBAEAyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQ1E,MAAO,QAASC,GAAI,IACvC+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,wCAIJD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UACfE,KAAKC,MAAM2nB,KACV1kB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQ1E,MAAO,QAASC,GAAI,IAEvC+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQ1E,MAAO,MAAOC,GAAI,IAEvC+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,kCAGAnD,KAAKC,MAAM2nB,KAgBT,KAfF1kB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqG,GAAI,EAAG1J,WAAY,SAAUC,eAAgB,iBACjDmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,OAAOzE,GAAI,EAAGD,MAAM,SAC/BgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMjC,MAAM,QAAZ,8BAGFgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACE6oB,KAAK,4FACL3V,OAAO,SAASC,IAAI,gCAEpBpT,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgBjyG,KAAK,SAArB,6BAQP3F,KAAKC,MAAM2nB,KACV1kB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEuE,GAAI,EACJuB,GAAI,EACJhB,UAAW,EACXqkC,aAAc,EACd53B,YAAa,UACbjT,UAAW,SACX1B,eAAgB,eAChBD,WAAY,UAEZoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEwC,KAAK,QACLnC,QAASxD,KAAKC,MAAM6F,0BACpBob,UAAWlhB,KAAKC,MAAM2nB,MAHxB,sBAOA1kB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,eACAD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAQwC,KAAK,QAAQub,UAAQ,GAA7B,6BAIA,KAEJhe,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UACfE,KAAKC,MAAM2hD,QAAQk1D,iBAClB5zG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQ1E,MAAO,QAASC,GAAI,IAEvC+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQ1E,MAAO,MAAOC,GAAI,IAEvC+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,yBAGDnD,KAAKC,MAAM2nB,OAAS5nB,KAAKC,MAAM2hD,QAAQk1D,iBACtC5zG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqG,GAAI,EAAG1J,WAAY,SAAUC,eAAgB,iBACjDmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,OAAOzE,GAAI,EAAGD,MAAM,SAC/BgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEhC,GAAI,EACJD,MAAM,OACNH,MAAO,CAAEW,cAAe,eAH1B,oBAOAwB,EAAA1D,EAAAC,cAAC+mH,GAAD,CAAiB5kE,QAAS5hD,KAAKC,MAAM2hD,QAAQg1D,WAE/C1zG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEhC,GAAI,EACJD,MAAM,OACNH,MAAO,CAAEW,cAAe,eAH1B,qBAOAwB,EAAA1D,EAAAC,cAAC+mH,GAAD,CAAiB5kE,QAAS5hD,KAAKC,MAAM2hD,QAAQjsB,cAKnDzyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgBjyG,KAAK,QAAQnC,QAASxD,KAAKC,MAAMi/G,cAAjD,kBAIA,KACHl/G,KAAKC,MAAM2nB,MAAQ5nB,KAAKC,MAAM62G,iBAC7B5zG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqG,GAAI,EAAG1J,WAAY,UACvBoD,EAAA1D,EAAAC,cAAC+mH,GAAD,CAAiB5kE,QAAS5hD,KAAKC,MAAM2hD,QAAQg1D,WAE7C,MAGN1zG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UACfE,KAAKC,MAAMuN,SAAWxN,KAAKC,MAAMm9G,iBAChCl6G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQ1E,MAAO,QAASC,GAAI,IAEvC+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQ1E,MAAO,MAAOC,GAAI,IAEvC+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,uCAGAnD,KAAKC,MAAMuN,UACbxN,KAAKC,MAAM2nB,MACV5nB,KAAKC,MAAMy9G,oBAWR,KAVFx6G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqG,GAAI,EAAG1J,WAAY,SAAUC,eAAgB,iBACjDmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,OAAOzE,GAAI,EAAGD,MAAM,SAC/BgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMjC,MAAM,QAAZ,gCAGFgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgBjyG,KAAK,QAAQnC,QAASxD,KAAKC,MAAM87G,aAAjD,YAKH/7G,KAAKC,MAAMuN,SAAWxN,KAAKC,MAAM2nB,KAChC1kB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqG,GAAI,EAAG1J,WAAY,UACvBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQ1E,MAAO,QAASC,GAAI,IACvC+B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMjC,MAAM,QAAZ,oBAAqClB,KAAKC,MAAMuN,SAChDtK,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMjC,MAAOlB,KAAKC,MAAM8+G,kBAAoB,MAAQ,QAApD,mBACmB/+G,KAAKC,MAAM4+G,kBAIhC,KAEH7+G,KAAKC,MAAMy9G,oBACVx6G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqG,GAAI,EAAGzJ,eAAgB,iBAC3BmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQzE,GAAI,EAAGD,MAAM,QAChCgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMjC,MAAM,OAAZ,kCAGFgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgBjyG,KAAK,QAAQnC,QAASxD,KAAKC,MAAM87G,aAAjD,YAIA,KAE8B,OAAhC/7G,KAAKC,MAAMm9G,mBACqB,IAAhCp9G,KAAKC,MAAMm9G,mBACbp9G,KAAKC,MAAM2nB,KAgBP,KAfF1kB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJP,GAAI,EACJnJ,WAAY,SACZC,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,OAAOzE,GAAI,EAAGD,MAAM,SAC/BgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMjC,MAAM,QAAZ,yBAGFgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgBjyG,KAAK,QAAQnC,QAASxD,KAAKC,MAAMg9G,iBAAjD,cAM6B,IAAhCj9G,KAAKC,MAAMm9G,iBACVl6G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEqG,GAAI,EACJP,GAAI,EACJnJ,WAAY,SACZC,eAAgB,iBAEhBmD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMrD,WAAY,UAChBoD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQzE,GAAI,EAAGD,MAAM,QAChCgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMjC,MAAM,OAAZ,yBAGFgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAOy0G,QAAR,CAAgBjyG,KAAK,QAAQnC,QAASxD,KAAKC,MAAMg9G,iBAAjD,aAIA,MAEmC,IAAtCj9G,KAAKC,MAAMw/G,uBACVv8G,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMqG,GAAI,GACRtG,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMyC,KAAK,QAAQzE,GAAI,EAAGD,MAAM,QAChCgC,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMjC,MAAM,OAAZ,yBAEA,MAGNgC,EAAA1D,EAAAC,cAACgnH,GAAoBzmH,KAAKC,OAE1BiD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAaiiH,SAAd,CAAuBtgF,IAAK,SAAA4hF,GAAI,OAAKt3G,OAAOwgD,cAAgB82D,aAtNzC1jH,IAAM1C,+BCqoClBkmD,GAAA,CAAEtxC,QAptCD,6CAotCU+f,IAntCd,CACV,CACE0xF,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,OACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,WAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,UACRrB,KAAQ,WAEV,CACEqB,KAAQ,SACRrB,KAAQ,YAGZqB,KAAQ,UACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,SAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,wBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,UACRrB,KAAQ,YAGZqB,KAAQ,uBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,cACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,qBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,MACRrB,KAAQ,WAEV,CACEqB,KAAQ,MACRrB,KAAQ,WAEV,CACEqB,KAAQ,SACRrB,KAAQ,YAGZqB,KAAQ,eACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,SAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,eACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,WACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,QACRrB,KAAQ,YAGZqB,KAAQ,sBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,UACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,iBACRrB,KAAQ,YAGZqB,KAAQ,kBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,eACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,cACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,eACRrB,KAAQ,YAGZqB,KAAQ,kBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,8BACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,qBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,aACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,QACRrB,KAAQ,YAGZqB,KAAQ,YACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,sBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,gBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,SACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,WAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,UACRrB,KAAQ,YAGZqB,KAAQ,sBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,iBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,MACRrB,KAAQ,WAEV,CACEqB,KAAQ,SACRrB,KAAQ,YAGZqB,KAAQ,WACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,SAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,cACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,qBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,aACRrB,KAAQ,WAEV,CACEqB,KAAQ,WACRrB,KAAQ,WAEV,CACEqB,KAAQ,cACRrB,KAAQ,YAGZqB,KAAQ,QACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,kBACRrB,KAAQ,YAGZqB,KAAQ,mBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,sBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,UACRrB,KAAQ,YAGZqB,KAAQ,qBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,WAEV,CACEqB,KAAQ,GACRrB,KAAQ,WAEV,CACEqB,KAAQ,GACRrB,KAAQ,WAEV,CACEqB,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,QACRrB,KAAQ,WAEV,CACEqB,KAAQ,UACRrB,KAAQ,YAGZqB,KAAQ,YACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,eACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,uBACRrB,KAAQ,YAGZqB,KAAQ,wBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,oBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,QACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,qBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,2BACRrB,KAAQ,YAGZqB,KAAQ,oBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,GACV92E,KAAQ,WACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,SAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,OACnBviH,KAAQ,YAEV,CACEm4E,OAAU,CACR,CACE92E,KAAQ,cACRrB,KAAQ,WAEV,CACEqB,KAAQ,eACRrB,KAAQ,WAEV,CACEqB,KAAQ,qBACRrB,KAAQ,WAEV,CACEqB,KAAQ,+BACRrB,KAAQ,WAEV,CACEqB,KAAQ,QACRrB,KAAQ,UAEV,CACEqB,KAAQ,UACRrB,KAAQ,UAEV,CACEqB,KAAQ,YACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,cACbsyC,gBAAmB,aACnBviH,KAAQ,eAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,sBACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,cACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,eACRrB,KAAQ,YAGZqB,KAAQ,iBACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,SACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,aACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,aACRrB,KAAQ,YAGZqB,KAAQ,OACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,WACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,eACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,eACRrB,KAAQ,YAGZqB,KAAQ,SACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,WACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,eACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,iBACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,eACRrB,KAAQ,YAGZqB,KAAQ,SACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,QACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,WACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,cACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,iBACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,eACRrB,KAAQ,YAGZqB,KAAQ,cACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,aACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,WACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,cACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,mBACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,cACRrB,KAAQ,YAGZqB,KAAQ,kBACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,kBACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,kBACRrB,KAAQ,YAGZqB,KAAQ,kBACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,WACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,WACRrB,KAAQ,YAGZqB,KAAQ,WACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,iBACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,iBACRrB,KAAQ,YAGZqB,KAAQ,iBACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,uBACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,uBACRrB,KAAQ,YAGZqB,KAAQ,6BACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,2BACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,2BACRrB,KAAQ,YAGZqB,KAAQ,mBACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,QACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,eACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,mBACRrB,KAAQ,YAGZqB,KAAQ,kBACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,QACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,OACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,SACRrB,KAAQ,YAGZqB,KAAQ,UACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,OACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,KACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,SACRrB,KAAQ,YAGZqB,KAAQ,WACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEwiH,WAAa,EACbrqC,OAAU,CACR,CACEsqC,SAAW,EACXphH,KAAQ,QACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,UACRrB,KAAQ,WAEV,CACEyiH,SAAW,EACXphH,KAAQ,SACRrB,KAAQ,YAGZqB,KAAQ,WACR4uE,UAAa,qEACbjwE,KAAQ,SAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,aACRrB,KAAQ,YAGZqB,KAAQ,OACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,eACRrB,KAAQ,YAGZqB,KAAQ,SACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,eACRrB,KAAQ,YAGZqB,KAAQ,mBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,eACRrB,KAAQ,YAGZqB,KAAQ,SACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,cACRrB,KAAQ,YAGZqB,KAAQ,cACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,WACRrB,KAAQ,WAEV,CACEqB,KAAQ,cACRrB,KAAQ,YAGZqB,KAAQ,oBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,YAEV,CACEoiH,UAAY,EACZjqC,OAAU,CACR,CACE92E,KAAQ,WACRrB,KAAQ,WAEV,CACEqB,KAAQ,cACRrB,KAAQ,WAEV,CACEqB,KAAQ,mBACRrB,KAAQ,YAGZqB,KAAQ,kBACRghH,QAAW,CACT,CACEhhH,KAAQ,GACRrB,KAAQ,YAGZsiH,SAAW,EACXryC,UAAa,aACbsyC,gBAAmB,aACnBviH,KAAQ,kCC/sCG0iH,GAAA,CAAE/xG,QAFD,6CAEU+f,IADd,CAAC,CAAC0xF,UAAW,EAAKjqC,OAAS,GAAG92E,KAAO,OAAOghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,YAAYsiH,SAAU,EAAMC,gBAAkB,OAAOviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,GAAG92E,KAAO,OAAOghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,UAAUghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,SAASsiH,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,SAASrB,KAAO,YAAYqB,KAAO,WAAWghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAKjqC,OAAS,GAAG92E,KAAO,cAAcghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,YAAYsiH,SAAU,EAAMC,gBAAkB,OAAOviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,eAAeghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,SAASsiH,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAKjqC,OAAS,GAAG92E,KAAO,WAAWghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,YAAYsiH,SAAU,EAAMC,gBAAkB,OAAOviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,OAAOghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,OAAOghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,QAAQrB,KAAO,YAAYqB,KAAO,UAAUghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAKjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,YAAYghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,YAAYsiH,SAAU,EAAMC,gBAAkB,OAAOviH,KAAO,YAAY,CAACoiH,UAAW,EAAKjqC,OAAS,GAAG92E,KAAO,UAAUghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,SAASsiH,SAAU,EAAMC,gBAAkB,OAAOviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,aAAarB,KAAO,YAAYqB,KAAO,eAAeghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAKjqC,OAAS,GAAG92E,KAAO,QAAQghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,YAAYsiH,SAAU,EAAMC,gBAAkB,OAAOviH,KAAO,YAAY,CAACoiH,UAAW,EAAKjqC,OAAS,GAAG92E,KAAO,SAASghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,YAAYsiH,SAAU,EAAMC,gBAAkB,OAAOviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,OAAOghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,OAAOghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,WAAWghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,SAASsiH,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,OAAOghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,OAAOghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,GAAG92E,KAAO,QAAQghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAKjqC,OAAS,GAAG92E,KAAO,YAAYghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,YAAYsiH,SAAU,EAAMC,gBAAkB,OAAOviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,UAAUghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,SAASsiH,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACoiH,UAAW,EAAKjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,YAAYghH,QAAU,CAAC,CAAChhH,KAAO,GAAGrB,KAAO,YAAYsiH,SAAU,EAAMC,gBAAkB,OAAOviH,KAAO,YAAY,CAACoiH,UAAW,EAAMjqC,OAAS,CAAC,CAAC92E,KAAO,MAAMrB,KAAO,WAAW,CAACqB,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,OAAOghH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,YAAY,CAACm4E,OAAS,CAAC,CAAC92E,KAAO,UAAUrB,KAAO,YAAYsiH,SAAU,EAAMC,gBAAkB,aAAaviH,KAAO,eAAe,CAACwiH,WAAY,EAAMrqC,OAAS,CAAC,CAACsqC,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAMphH,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,OAAOrB,KAAO,SAAS,CAACwiH,WAAY,EAAMrqC,OAAS,CAAC,CAACsqC,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAMphH,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,OAAOrB,KAAO,SAAS,CAACwiH,WAAY,EAAMrqC,OAAS,CAAC,CAACsqC,SAAU,EAAKphH,KAAO,YAAYrB,KAAO,YAAYqB,KAAO,kBAAkBrB,KAAO,SAAS,CAACwiH,WAAY,EAAMrqC,OAAS,CAAC,CAACsqC,SAAU,EAAKphH,KAAO,QAAQrB,KAAO,YAAYqB,KAAO,cAAcrB,KAAO,SAAS,CAACwiH,WAAY,EAAKrqC,OAAS,CAAC,CAACsqC,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,UAAU,CAACyiH,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAMphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAMphH,KAAO,MAAMrB,KAAO,UAAUqB,KAAO,UAAUrB,KAAO,SAAS,CAACwiH,WAAY,EAAMrqC,OAAS,CAAC,CAACsqC,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAMphH,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,WAAWrB,KAAO,SAAS,CAACwiH,WAAY,EAAMrqC,OAAS,CAAC,CAACsqC,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAKphH,KAAO,MAAMrB,KAAO,WAAW,CAACyiH,SAAU,EAAMphH,KAAO,MAAMrB,KAAO,YAAYqB,KAAO,WAAWrB,KAAO,uECi3ClkL4H,GAr2CS,CACtB41C,GAAG,CACDxE,KAAK,CACH7B,IAAI,CACFzmB,IAAIymB,GACJjwC,MAAM,MACN9G,SAAS,GACTi1B,SAAQ,EACRstF,mBAAkB,EAClBhmH,MAAM,oBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,OAEfQ,KAAK,CACHO,UAAU,OAEZ+3D,UAAU,CACR17G,MAAM,OAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,eACNyJ,QAAQ,8CAEVJ,UAAU,CACR,CACEnQ,SAAS,GACT8G,MAAM,OACNmuB,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACXrvB,KAAK,WACLsP,QAAQ,6CACRk6B,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,QAMjBioB,KAAK,CACH3mB,IAAI2mB,GACJnwC,MAAM,OACN9G,SAAS,EACTi1B,SAAQ,EACRstF,mBAAkB,EAClBhmH,MAAM,oBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,QAEfQ,KAAK,CACHO,UAAU,QAEZ+3D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,gBACNyJ,QAAQ,8CAEVJ,UAAU,CACR,CACEnQ,SAAS,GACTi1B,SAAQ,EACRnuB,MAAM,QACNwpB,IAAIoyF,GAAOpyF,IACXrvB,KAAK,WACLsP,QAAQ,6CACRk6B,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,UAQrBquB,KAAK,CACHzE,KAAK,CACH7B,IAAI,CACFzmB,IAAIymB,GACJjwC,MAAM,MACN9G,SAAS,GACTi1B,SAAQ,EACRstF,mBAAkB,EAClBhmH,MAAM,oBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,OAEfQ,KAAK,CACHO,UAAU,OAEZ+3D,UAAU,CACR17G,MAAM,OAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,eACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR6R,QAAQ,gHACR6E,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,UACN7F,KAAK,iBACLsP,QAAQ,8CAEVwzF,aAAa,CACX,CACE9iG,KAAK,OACLg0B,SAAQ,EACR3E,IAAIqyF,GACJpyG,QAAQ,6CACRzJ,MAAM,WACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,OAKfqb,kBAAkB,CAChBvjC,MAAM,UACNwpB,IAAImxB,GACJxgD,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACE8kB,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACXrvB,KAAK,WACLsP,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACEsB,IAAIsyF,GACJ3tF,SAAQ,EACRh0B,KAAK,UACLsP,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,aACL+tB,OAAO,MAIb,CACEsB,IAAIuyF,GACJ5hH,KAAK,OACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACEna,IAAIwyF,GACJ7hH,KAAK,MACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACEna,IAAIqyF,GACJ1hH,KAAK,OACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,QAMjBioB,KAAK,CACHj3C,SAAS,EACT8G,MAAM,OACNmuB,SAAQ,EACR3E,IAAI2mB,GACJsrE,mBAAkB,EAClBhmH,MAAM,qBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,QAEf84D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,gBACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR6R,QAAQ,iHACR6E,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,8CAEVwzF,aAAa,CACX,CACEzzE,IAAIqyF,GACJ1hH,KAAK,OACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,YACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,OAKfqb,kBAAkB,CAChB/Z,IAAImxB,GACJ36C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACElP,KAAK,WACLg0B,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACX/f,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACE/tB,KAAK,UACLg0B,SAAQ,EACR3E,IAAIsyF,GACJryG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,aACL+tB,OAAO,MAIb,CACE/tB,KAAK,OACLg0B,SAAQ,EACR3E,IAAIuyF,GACJtyG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACExpC,KAAK,OACLg0B,SAAQ,EACR3E,IAAIqyF,GACJpyG,QAAQ,6CACRzJ,MAAM,SACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,QAMjBmsB,KAAK,CACH7qB,IAAI6qB,GACJr0C,MAAM,OACN9G,SAAS,GACTi1B,SAAQ,EACRstF,mBAAkB,EAClBhmH,MAAM,oBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,QAEfQ,KAAK,CACHO,UAAU,QAEZ+3D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,gBACNyJ,QAAQ,8CAEVJ,UAAU,CACR,CACE8kB,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACXrvB,KAAK,WACLsP,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACEsB,IAAIuyF,GACJ5hH,KAAK,OACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,QAQpBzQ,EAAE,CACA4e,KAAK,CACH7B,IAAI,CACFzmB,IAAIymB,GACJjwC,MAAM,MACN9G,SAAS,GACTi1B,SAAQ,EACRstF,mBAAkB,EAClBhmH,MAAM,oBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,OAEfQ,KAAK,CACHO,UAAU,OAEZ+3D,UAAU,CACR17G,MAAM,OAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,eACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR6R,QAAQ,gHACR6E,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,UACN7F,KAAK,iBACLsP,QAAQ,8CAEVwzF,aAAa,CACX,CACE9iG,KAAK,OACLg0B,SAAQ,EACR3E,IAAIqyF,GACJpyG,QAAQ,6CACRzJ,MAAM,WACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,OAKfqb,kBAAkB,CAChBvjC,MAAM,UACNwpB,IAAImxB,GACJxgD,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACE8kB,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACXrvB,KAAK,WACLsP,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACEsB,IAAIsyF,GACJ3tF,SAAQ,EACRh0B,KAAK,UACLsP,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,aACL+tB,OAAO,MAIb,CACEsB,IAAIuyF,GACJ5hH,KAAK,OACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACEna,IAAIuyF,GACJ5hH,KAAK,SACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,SACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACEna,IAAIwyF,GACJ7hH,KAAK,MACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACEna,IAAIqyF,GACJ1hH,KAAK,OACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,QAMjBioB,KAAK,CACH3mB,IAAI2mB,GACJj3C,SAAS,EACT8G,MAAM,OACNmuB,SAAQ,EACRstF,mBAAkB,EAClBhmH,MAAM,qBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,QAEf84D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,gBACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR6R,QAAQ,iHACR6E,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,8CAEVwzF,aAAa,CACX,CACEzzE,IAAIqyF,GACJ1hH,KAAK,OACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,YACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,OAKfqb,kBAAkB,CAChB/Z,IAAImxB,GACJ36C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACElP,KAAK,WACLg0B,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACX/f,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACE/tB,KAAK,UACLg0B,SAAQ,EACR3E,IAAIsyF,GACJryG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,aACL+tB,OAAO,MAIb,CACE/tB,KAAK,OACLg0B,SAAQ,EACR3E,IAAIuyF,GACJtyG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACEna,IAAIuyF,GACJ7iH,SAAS,GACTi1B,SAAQ,EACRh0B,KAAK,SACL6F,MAAM,UACNyJ,QAAQ,6CACRk6B,UAAU,IAIZ,CACExpC,KAAK,OACLg0B,SAAQ,EACR3E,IAAIqyF,GACJpyG,QAAQ,6CACRzJ,MAAM,SACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,QAMjB+rB,KAAK,CACH/6C,SAAS,EACT8G,MAAM,OACNmuB,SAAQ,EACR3E,IAAIgyF,GAAMhyF,IACViyF,mBAAkB,EAClBhmH,MAAM,qBACNgU,QAAQ,6CACRu4C,KAAK,CACHY,aAAa,QAEf84D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,gBACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR6R,QAAQ,iHACR6E,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,8CAEV85B,kBAAkB,CAChB/Z,IAAImxB,GACJ36C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACElP,KAAK,WACLg0B,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACX/f,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACE/tB,KAAK,UACLg0B,SAAQ,EACR3E,IAAIsyF,GACJryG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,aACL+tB,OAAO,MAIb,CACE/tB,KAAK,OACLg0B,SAAQ,EACR3E,IAAIuyF,GACJtyG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACEna,IAAIuyF,GACJ7iH,SAAS,GACTiB,KAAK,SACLg0B,SAAQ,EACRnuB,MAAM,UACNyJ,QAAQ,6CACRk6B,UAAU,MAMhBwQ,KAAK,CACHj7C,SAAS,GACT8G,MAAM,OACNmuB,SAAQ,EACR3E,IAAIgyF,GAAMhyF,IACViyF,mBAAkB,EAClBQ,oBAAmB,EACnBxmH,MAAM,qBAENgU,QAAQ,6CACRu4C,KAAK,CACHY,aAAa,QAEf84D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,gBACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR6R,QAAQ,iHACR6E,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,8CAEV85B,kBAAkB,CAChB/Z,IAAImxB,GACJ36C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACElP,KAAK,OACLg0B,SAAQ,EACR3E,IAAIuyF,GACJtyG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACExpC,KAAK,SACLg0B,SAAQ,EACR3E,IAAIuyF,GACJtyG,QAAQ,6CACRzJ,MAAM,UACN9G,SAAS,GACTyqC,UAAU,MAMhBuQ,KAAK,CACHh7C,SAAS,GACT8G,MAAM,OACNmuB,SAAQ,EACR3E,IAAIgyF,GAAMhyF,IACViyF,mBAAkB,EAClBQ,oBAAmB,EACnBxmH,MAAM,sBACNgU,QAAQ,6CACRu4C,KAAK,CACHY,aAAa,QAEf84D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,gBACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR6R,QAAQ,iHACR6E,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,8CAEV85B,kBAAkB,CAChB/Z,IAAImxB,GACJ36C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACElP,KAAK,OACLg0B,SAAQ,EACR3E,IAAIuyF,GACJtyG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACEna,IAAIuyF,GACJ5tF,SAAQ,EACRh0B,KAAK,SACL6F,MAAM,UACNyJ,QAAQ,6CACRvQ,SAAS,GACTyqC,UAAU,MAMhB0Q,KAAK,CACH7qB,IAAI6qB,GACJr0C,MAAM,OACN9G,SAAS,GACTi1B,SAAQ,EACRstF,mBAAkB,EAClBhmH,MAAM,oBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,QAEfQ,KAAK,CACHO,UAAU,QAEZ+3D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,gBACNyJ,QAAQ,8CAEVJ,UAAU,CACR,CACE8kB,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACXrvB,KAAK,WACLsP,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACEsB,IAAIuyF,GACJ5hH,KAAK,OACLg0B,SAAQ,EACR1kB,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,MAMhByQ,KAAK,CACHl7C,SAAS,EACT8G,MAAM,OACNmuB,SAAQ,EACR3E,IAAIgyF,GAAMhyF,IACViyF,mBAAkB,EAClBhmH,MAAM,oBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,QAEf84D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,gBACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR6R,QAAQ,iHACR6E,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,8CAEV85B,kBAAkB,CAChB/Z,IAAImxB,GACJ36C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACE8kB,SAAQ,EACRnuB,MAAM,QACNwpB,IAAIoyF,GAAOpyF,IACXrvB,KAAK,WACLsP,QAAQ,6CACRvQ,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACEsB,IAAIsyF,GACJ5iH,SAAS,GACT8G,MAAM,QACNmuB,SAAQ,EACRh0B,KAAK,UACLsP,QAAQ,6CACRk6B,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,aACL+tB,OAAO,MAIb,CACEsB,IAAIuyF,GACJ5hH,KAAK,OACLg0B,SAAQ,EACRnuB,MAAM,QACNyJ,QAAQ,6CACRvQ,SAAS,GACTyqC,UAAU,IAIZ,CACEna,IAAIuyF,GACJ5tF,SAAQ,EACRh0B,KAAK,SACL6F,MAAM,UACNyJ,QAAQ,6CACRvQ,SAAS,GACTyqC,UAAU,OAOlB6O,KAAK,CACHvC,IAAI,CACFzmB,IAAIymB,GACJ/2C,SAAS,GACT8G,MAAM,MACNmuB,SAAQ,EACRstF,mBAAkB,EAClBhmH,MAAM,oBACNgU,QAAQ,6CACRu4C,KAAK,CACHY,aAAa,OAEfQ,KAAK,CACHO,UAAU,OAEZ+3D,UAAU,CACR17G,MAAM,OAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,cACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR0W,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,UACN7F,KAAK,gBACLsP,QAAQ,8CAEVwzF,aAAa,CACX,CACE9iG,KAAK,OACLg0B,SAAQ,EACR3E,IAAIqyF,GACJpyG,QAAQ,6CACRzJ,MAAM,WACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,OAKfqb,kBAAkB,CAChB/Z,IAAImxB,GACJ36C,MAAM,UACN7F,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACElP,KAAK,WACLg0B,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACX/f,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACE/tB,KAAK,UACLg0B,SAAQ,EACR3E,IAAIsyF,GACJryG,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,aACL+tB,OAAO,MAIb,CACE/tB,KAAK,OACLg0B,SAAQ,EACR3E,IAAIuyF,GACJtyG,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACExpC,KAAK,MACLg0B,SAAQ,EACR3E,IAAIwyF,GACJvyG,QAAQ,6CACRzJ,MAAM,OACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACExpC,KAAK,OACLg0B,SAAQ,EACR3E,IAAIqyF,GACJpyG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,QAMjBioB,KAAK,CACHj3C,SAAS,EACT8G,MAAM,OACNmuB,SAAQ,EACR3E,IAAIgyF,GAAMhyF,IACViyF,mBAAkB,EAClBhmH,MAAM,qBACNgU,QAAQ,6CACR9K,QAAQ,CACNw2C,iBAAiB,KAEnB6M,KAAK,CACHY,aAAa,QAEf84D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,eACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR0W,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,WACN7F,KAAK,iBACLsP,QAAQ,8CAEVwzF,aAAa,CACX,CACE9iG,KAAK,OACLg0B,SAAQ,EACR3E,IAAIqyF,GACJpyG,QAAQ,6CACRzJ,MAAM,YACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,OAKfqb,kBAAkB,CAChB/Z,IAAImxB,GACJ36C,MAAM,WACN7F,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACElP,KAAK,WACLg0B,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACX/f,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACE/tB,KAAK,UACLg0B,SAAQ,EACR3E,IAAIsyF,GACJryG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,aACL+tB,OAAO,MAIb,CACE/tB,KAAK,OACLg0B,SAAQ,EACR3E,IAAIuyF,GACJtyG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,IAIZ,CACExpC,KAAK,OACLg0B,SAAQ,EACR3E,IAAIqyF,GACJpyG,QAAQ,6CACRzJ,MAAM,SACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,QACL+tB,OAAO,QAMjB+rB,KAAK,CACH/6C,SAAS,EACT8G,MAAM,OACNmuB,SAAQ,EACR3E,IAAIgyF,GAAMhyF,IACViyF,mBAAkB,EAClBhmH,MAAM,qBACNgU,QAAQ,6CACRu4C,KAAK,CACHY,aAAa,QAEf84D,UAAU,CACR17G,MAAM,QAERu2B,KAAK,CACH/M,IAAImyF,GACJ37G,MAAM,eACNyJ,QAAQ,8CAEVs7B,UAAU,CACR5W,SAAQ,EACR0W,YAAY,CACVrb,IAAI0wB,GACJl6C,MAAM,WACN7F,KAAK,iBACLsP,QAAQ,8CAEV85B,kBAAkB,CAChB/Z,IAAImxB,GACJ36C,MAAM,UACN7F,KAAK,kBACLsP,QAAQ,6CACRmxC,aAAa,GACbjX,UAAU,CACR,CACEztC,MAAM,UACNiE,KAAK,wBAKbkP,UAAU,CACR,CACElP,KAAK,WACLg0B,SAAQ,EACR3E,IAAIoyF,GAAOpyF,IACX/f,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,qBACL+tB,OAAO,MAIb,CACE/tB,KAAK,UACLg0B,SAAQ,EACR3E,IAAIsyF,GACJryG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,CACRyhC,aAAa,CACXjrE,KAAK,aACL+tB,OAAO,MAIb,CACE/tB,KAAK,OACLg0B,SAAQ,EACR3E,IAAIuyF,GACJtyG,QAAQ,6CACRzJ,MAAM,QACN9G,SAAS,GACTyqC,UAAU,SCxzCLu4E,GAhDgB,CAC7B/gG,YAAa,CACX6kB,QAAS,+BACTqkB,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZf,QAAS,UACTv5C,KAAM,eAERiyG,QAAS,CACPn8E,QAAS,6BACTqkB,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZf,QAAS,UACTv5C,KAAM,eAER9K,QAAS,CACP4gC,QAAS,iCACTqkB,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZf,QAAS,aACTv5C,KAAM,eAERkyG,UAAW,CACTp8E,QAAS,wBACTqkB,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZf,QAAS,aACTv5C,KAAM,eAERoP,QAAS,CACP0mB,QAAS,6BACTyjB,QAAS,UACTv5C,KAAM,eAER4Q,MAAO,CACLklB,QAAS,0BACTqkB,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZf,QAAS,UACTv5C,KAAM,UCoJGmyG,8MA1LbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACProH,OAAOmF,KAAKkjH,GAAgBllH,SAC1BnD,OAAOmF,KAAKmjH,GAAmBnlH,UAKrColH,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAYxoH,OAAOmF,KAAKmjH,GAAmBvhH,OAAO,SAAAgC,GACtD,OAAQ/I,OAAOmF,KAAKkjH,GAAgBt8G,SAAShD,KAE/C,OAAOu/G,EAAkBE,GAEzB,OAAOxoH,OAAOmF,KAAKmjH,GAAmB1/G,IAAI,SAAAG,GACxC,OAAOu/G,EAAkBv/G,QAM/B0/G,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2BtoH,OAAOmF,KAAKkjH,GACpCz/G,IAAI,SAAAG,GACH,OACEs/G,EAAet/G,GAAKk8G,cAAgBqD,EAAkBv/G,GAAKk8G,YAEpDqD,EAAkBv/G,GAElB,OAGVhC,OAAO,SAAA2hH,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAAtgH,OAAMqgH,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAI18G,EAAK,KACLm9G,EAAY,GACZC,EAAS,GAEb,GAAIhiH,EAAKohH,uBAAuBC,EAAgBC,GAC9C18G,EAAK5E,EAAKuhH,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAY/hH,EAAKyhH,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAAShiH,EAAK2hH,6BACZI,EAAUpgD,QACV0/C,GAMAU,EAAUpiH,SAAWqiH,EAAOriH,SAC9BiF,EAAKm9G,GAGT,OAAOn9G,KAITq9G,0BAA4B,SAAApoH,GAC1B,IAAI+K,EAAK,KACL5L,OAAOmF,KAAK6B,EAAK1G,MAAMoN,cAAcvK,SACvCyI,EAAK5E,EAAK8hH,sBACRjoH,EAAU6M,aACV1G,EAAK1G,MAAMoN,eAIX9B,GACF5E,EAAKkiH,qBAAqBt9G,MAI9Bs9G,qBAAuB,SAAA15G,GAGrB,IAAI25G,EAAYniH,EAAKoiH,wBAAwB55G,GAC7C25G,EAAU/4D,WAAappD,EAAK1G,MAAMgX,UAClC6xG,EAAUE,WAAY,EAItB55G,OAAOwgD,cAAcC,WAAW,IAAKi5D,MAGvCC,wBAA0B,SAAA55G,GACxB,IAAI85G,EAAuB,GAG3B,OAFa95G,EAAY7I,QAGvB,IAAK,cACH2iH,EAAuBtB,GAAyB/gG,YAChD,MACF,IAAK,UACHqiG,EAAuBtB,GAAyBC,QAChD,MACF,IAAK,UACHqB,EAAuBtB,GAAyB98G,QAChD,MACF,IAAK,YACHo+G,EAAuBtB,GAAyBE,UAChD,MACF,IAAK,UACHoB,EAAuBtB,GAAyB5iG,QAChD,MACF,IAAK,QACHkkG,EAAuBtB,GAAyBphG,MAOpD,IAAI2iG,EAAoB,GACxB,OAAQ/5G,EAAYk5D,QAClB,IAAK,kBACH6gD,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoB/5G,EAAYk5D,OAAO8gD,OAAO,GAAGtgH,cAAgBsG,EAAYk5D,OAAOzlE,OAAO,GAM/F,IAAIwmH,GAFJH,EAAuB97G,KAAKkd,MAAMld,KAAKC,UAAU67G,KAEXx9E,QAAQ/S,QAAQ,WAAWwwF,GAMjE,OALAE,EAAaA,EAAWD,OAAO,GAAGtgH,cAAgBugH,EAAWxqG,MAAM,GACnEqqG,EAAqBx9E,QAAU29E,EAC/BH,EAAqBD,WAAY,EACjCC,EAAqBl5D,WAAappD,EAAK1G,MAAMgX,UAEtCgyG,qFAGUzoH,EAAWC,GAC5BT,KAAK4oH,0BAA0BpoH,oCAI/B,OACE0C,EAAA1D,EAAAC,cAAA,WACEyD,EAAA1D,EAAAC,cAAC0D,EAAA,EAAaiiH,SAAd,CAAuBtgF,IAAK,SAAA4hF,GAAI,OAAKt3G,OAAOwgD,cAAgB82D,aAtLjC1jH,IAAM1C,WCqBnC+oH,GAAUrmH,IAAMsmH,KAAK,kBAAM5pG,EAAArW,EAAA,GAAAkgH,KAAA7pG,EAAA/Q,KAAA,cAC3B66G,GAAYxmH,IAAMsmH,KAAK,kBAAMliG,QAAAkD,IAAA,CAAA5K,EAAArW,EAAA,GAAAqW,EAAArW,EAAA,GAAAqW,EAAArW,EAAA,KAAAkgH,KAAA7pG,EAAA/Q,KAAA,cAC7B86G,GAAazmH,IAAMsmH,KAAK,kBAAMliG,QAAAkD,IAAA,CAAA5K,EAAArW,EAAA,GAAAqW,EAAArW,EAAA,KAAAkgH,KAAA7pG,EAAA/Q,KAAA,cAm5BrB+6G,8MAh5Bb1jH,MAAQ,CACN6mB,WAAW,GACXmoB,SAAU,KACV20E,YAAa,IACbt9E,MAAO,UACPp1B,UAAU,QACV2yG,YAAY,EACZ19G,YAAa,KACb29G,aAAc,KACd7/C,cAAe,KACf50C,cAAe,KACfnpB,cAAe,KACf69G,cAAc3hH,IACd+xG,eAAe,KACfd,eAAgB,KAChBjtG,gBAAiB,KACjB49G,gBAAgB,EAChBtwG,iBAAkB,KAClBuwG,kBAAmB,KACnB5H,mBAAoB,KACpBviH,MAAOuP,OAAO66G,WACdrmF,oBAAqB,KACrBxiC,OAAQgO,OAAO86G,YACfC,uBAAwB,KACxB3K,0BAA0B,KAI5Bz7G,cAAgB,OAShBqmH,kBAAoB,SAAC/gH,GACfA,GACFA,EAAE0D,iBAEJpG,EAAKC,SAAS,CACZojH,kBAAkB,UAItBK,iBAAmB,SAACpqH,GAClB0G,EAAKC,SAAS,CACZojH,kBAAkB/pH,OAItBqqH,mBAAqB,SAACrqH,EAAMO,OAyB5BymF,gBAAkB,WAKhB,OAJAtgF,EAAK5C,cAAcymB,gBAAgB,aAAa,IAAG,GACnD7jB,EAAKC,SAAS,CACZimB,WAAW,MAEN,KAGTC,cAAgB,SAACpkB,EAAI4I,GAAwC,IAAnC6sC,EAAmCl3C,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAA/B,KAAKigF,EAA0BjgF,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,IAAAA,UAAA,GAE3DyB,EAAMA,EAAI2C,cACV,IAAMk/G,EAAiB5jH,EAAKX,MAAM6mB,WAAWnkB,GACvC6xD,EAAcrsD,SAAS5B,KAAKouB,MAAM,KAIpCtL,GAAS,EAEb,IAJoBm7F,IAAsBA,EAAeh2E,gBAAkBg2E,EAAeh2E,gBAAgBgmB,GAAgBptD,KAAKC,UAAUm9G,EAAej5G,QAAUnE,KAAKC,UAAUkE,GAIlK,CACb,IAAMijC,EAAiB4J,EAAMoc,EAAapc,EAAO,KAGjD,GAAI+oC,EAAgB,CAClB,IAAIsjC,EAAmB7jH,EAAK5C,cAAcg/D,cAAc,cACnDynD,IACHA,EAAmB,IAErBA,EAAgB7qH,OAAAkH,EAAA,EAAAlH,CAAA,GACX6qH,EADW7qH,OAAAmH,EAAA,EAAAnH,CAAA,GAEb+I,EAAK,CACJ4I,OACAijC,oBAIJ5tC,EAAK5C,cAAcymB,gBAAgB,aAAaggG,GAAiB,GAInE7jH,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BosB,WAAWltB,OAAAkH,EAAA,EAAAlH,CAAA,GACNc,EAAUosB,WADLltB,OAAAmH,EAAA,EAAAnH,CAAA,GAEP+I,EAAK,CACJ4I,OACAijC,uBAKNnlB,GAAS,EAGX,OAAOA,KAGTizF,sBAAwB,SAACD,GACvBz7G,EAAKC,SAAS,CACZw7G,0BAIJr4C,iBAAmB,SAACC,GAEdA,IAAkBA,EAAc3+D,cAAcqmD,MAAM,gBACtDsY,EAAgB,MAGdA,IAAkBrjE,EAAKX,MAAMgkE,eAC/BrjE,EAAKC,SAAS,CACZojE,gBACAw1C,0BAAyB,OAuN/BpvF,uBAAyB,WACvB,IAAM/d,EAAW,CACfxS,MAAM8G,EAAKX,MAAMnG,MACjBuB,OAAOuF,EAAKX,MAAM5E,QAGdqpH,EAAer7G,OAAO66G,aAAetjH,EAAKX,MAAMnG,MAChD6qH,EAAgBt7G,OAAO86G,cAAgBvjH,EAAKX,MAAM5E,OAExD,OAAIqpH,GAAgBC,GACdD,IACFp4G,EAASxS,MAAQuP,OAAO66G,YAEtBS,IACFr4G,EAASjR,OAASgO,OAAO86G,aAEpBvjH,EAAKC,SAASyL,IAGhB,QAITksC,OAASlpC,IAAcusC,mFAnWjB5hD,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,KAAcjE,KAAKC,iFAuHhCoJ,EAAGshH,4FACV3qH,KAAK4G,SAAS,SAAAZ,GAAK,OAAArG,OAAAkH,EAAA,EAAAlH,CAAA,GAASqG,EAAT,CAAgB2jH,YAAagB,uRAIjDt4G,EAAW,GACXuxB,EAAsB,GACtBse,EAAkB7sC,IAAcusC,QAAQM,gBAG9CviD,OAAOmF,KAAKqH,GAAgB+1C,IAAkBn9C,QAAQ,SAACmlC,GACrDtG,EAAoBsG,GAAY/9B,GAAgB+1C,GAAiBhY,KAGnE73B,EAASuxB,oBAAsBA,GAGzBnqB,EAAmBzZ,KAAKgG,MAAMyT,mBACZzZ,KAAKgG,MAAM49B,oBAAoBnqB,KACrDpH,EAASlG,gBAAkBnM,KAAKgG,MAAM49B,oBAAoBnqB,IAGpDxN,EAAgBjM,KAAKgG,MAAMiG,gBACZoG,EAASlG,gBAAgBF,KAC5CoG,EAASnG,YAAcmG,EAASlG,gBAAgBF,cAM9CjM,KAAK4G,SAASyL,sLAGCoH,EAAiBxN,yFAEhCqG,EAAW,WACfnO,EAAKymH,uBAGDv4G,EAAW,CACfnG,YAAaD,EAAuBjM,KAAKgG,MAAMkG,YAAlB,KAC7BC,gBAAiBF,EAAuBjM,KAAKgG,MAAMmG,gBAAlB,KACjCF,cAAeA,EAA+BjM,KAAKgG,MAAMiG,cAA1BA,EAC/BwN,iBAAkBA,EAAqCzZ,KAAKgG,MAAMyT,iBAA7BA,GAGnCA,GAAoBzZ,KAAKgG,MAAM49B,qBAAuBnqB,IAAqBzZ,KAAKgG,MAAMyT,kBAAoB9Z,OAAOmF,KAAK9E,KAAKgG,MAAM49B,qBAAqBl4B,SAAS+N,EAAiBpO,iBAClLgH,EAASoH,iBAAmBA,EAAiBpO,eAG3CY,GAAiBA,IAAkBjM,KAAKgG,MAAMiG,gBAC3CjM,KAAKgG,MAAMmG,iBAAmBxM,OAAOmF,KAAK9E,KAAKgG,MAAMmG,iBAAiBT,SAASO,EAAcpD,gBAChGwJ,EAASpG,cAAgBA,EAAcpD,cACvCwJ,EAASnG,YAAclM,KAAKgG,MAAMmG,gBAAgBF,IACzCjM,KAAKgG,MAAM49B,qBAAuBjkC,OAAOmF,KAAK9E,KAAKgG,MAAM49B,oBAAoBnqB,IAAmB/N,SAASO,EAAcpD,iBAChIwJ,EAASpG,cAAgBA,EAAcpD,cACvCwJ,EAASnG,YAAclM,KAAKgG,MAAM49B,oBAAoBnqB,GAAkBpH,EAASpG,eACjFoG,EAASlG,gBAAkBnM,KAAKgG,MAAM49B,oBAAoBnqB,cAMxDzZ,KAAK4G,SAASyL,EAASC,oLAGbmH,mFAEVnH,EAAW,WACfnE,EAAKy8G,wBAGHnxG,GAAoBA,IAAqBzZ,KAAKgG,MAAMyT,mBAAoB9Z,OAAOmF,KAAK9E,KAAKgG,MAAM49B,qBAAqBl4B,SAAS+N,EAAiBpO,sCAChJoO,EAAmBA,EAAiBpO,uBAC9BrL,KAAK4G,SAAS,CAClB6S,oBACAnH,oCACQmH,oCACJzZ,KAAK4G,SAAS,CAClB6S,oBACAnH,gLAISrG,qFAEPqG,EAAW,WACflE,EAAKw8G,wBAGH3+G,GAAiBA,IAAkBjM,KAAKgG,MAAMiG,gBAAiBtM,OAAOmF,KAAK9E,KAAKgG,MAAMmG,iBAAiBT,SAASO,EAAcpD,sCAChIoD,EAAgBA,EAAcpD,eACxBwJ,EAAW,CACfpG,kBAEOC,YAAclM,KAAKgG,MAAMmG,gBAAgBF,YAC5CjM,KAAK4G,SAASyL,EAASC,oCACpBrG,oCACHjM,KAAK4G,SAAS,CAClBqF,gBACAC,YAAY,MACZoG,kQAMJtS,KAAKkE,YAELkL,OAAO4I,MAAQhY,KAAK+D,cAAciU,MAGb5I,OAAOk1C,SAASC,OAAOl5C,cAAcK,SAAS2J,IAAcygC,QAAQzqC,iBAEvF+D,OAAO+kB,QAAQ5N,MAAQ,aACvBnX,OAAO+kB,QAAQ02F,KAAO,cAGxBz7G,OAAO07G,OAASA,IAEZ17G,OAAO+a,eACTnqB,KAAK+D,cAAc2tE,iBAAiB,WAGpB1xE,KAAK+D,cAAcg/D,cAAc,WAAU,KAC3C1tD,IAAcwgC,UAC5B71C,KAAK+D,cAAcstE,gBAAgB,CAAC,iBAAiB,kBACrDrxE,KAAK+D,cAAcymB,gBAAgB,UAAUnV,IAAcwgC,YAIzD5+B,EAAYjX,KAAK+D,cAAcg/D,cAAc,aAAY,KAE7D/iE,KAAK+qH,aAAa9zG,GAGpB7H,OAAO47G,YAAc,SAACC,GAEpB,IADA,IAAMC,EAAU36F,SAAS46F,qBAAqB,UACrCn/G,EAAE,EAAEA,EAAEk/G,EAAQpoH,OAAOkJ,IAAI,CAChC,IAAMo/G,EAASF,EAAQl/G,GACnBo/G,EAAOC,gBAAkBJ,GAC3B77G,OAAO07G,OAAOM,GAAQE,QAAQ,qBAAqB,GAAGr4D,WAK5D7jD,OAAO+gB,iBAAiB,SAAUnwB,KAAKowB,wBAEvCpwB,KAAKurH,oBACLvrH,KAAK4qH,qKAIL,IAAK5qH,KAAKgG,MAAMgkE,eAES,WADAhqE,KAAK+D,cAAc+oE,kBAAkB,UAC5B,CAC9B,IAAM9C,EAAgBhqE,KAAK+D,cAAc+lE,mBACrCE,GAAiBA,IAAkBhqE,KAAKgG,MAAMgkE,eAChDhqE,KAAK4G,SAAS,CACZojE,kEAQR56D,OAAOihB,oBAAoB,SAAUrwB,KAAKowB,mEAGzB5vB,EAAUC,GAI3B,GAHAT,KAAKkE,YAEyBzD,EAAUy5G,iBAAmBl6G,KAAKgG,MAAMk0G,eAEpE,GAAkC,YAA9Bl6G,KAAKgG,MAAMk0G,eACbl6G,KAAK+qH,aAAa,SAAQ,OACrB,CAEL,IAAM9zG,EAAYjX,KAAK+D,cAAcg/D,cAAc,aAAY,IAAU/iE,KAAK+D,cAAc2J,gBAAgB,CAAC,YAAY,QAAQ,SACjI1N,KAAK+qH,aAAa9zG,GAItB,IAAM4pG,EAAepgH,EAAUwL,gBAAkBjM,KAAKgG,MAAMiG,cACtDu/G,EAAkB/qH,EAAUgZ,mBAAqBzZ,KAAKgG,MAAMyT,kBAE9DonG,GAAgB2K,IAClBxrH,KAAK4qH,kEAcP,GAPIx7G,OAAOq8G,OAASr8G,OAAO9H,MAAoE,IAA7D8H,OAAO9H,IAAIg9C,SAASt4B,KAAKiB,QAAQ5X,IAAcygC,UAAwD,oBAA9B1mC,OAAOs8G,OAAOV,aACvH57G,OAAOs8G,OAAOV,YAAY57G,OAAOq8G,MAGnCr8G,OAAOi7G,iBAAmBrqH,KAAKqqH,iBAC/Bj7G,OAAOg7G,kBAAoBpqH,KAAKoqH,kBAE5BjgG,aAAa,CACf,IAAMiL,EAAgBjL,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChGgvF,EAAiBjvF,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAEzGpqB,KAAKm5G,aAAa/jF,EAAcgkF,sCA6B1B/sE,GACR,OAAOrsC,KAAK4G,SAAS,CAAEylC,gDAGXhjC,GAIZ,OAHIA,GACFA,EAAE0D,iBAEG/M,KAAK4G,SAAS,CACnBouC,SAAS,KACT+0E,gBAAe,yCAIN1gH,EAAE2rC,GAGb,OAFA3rC,EAAE0D,iBAEK/M,KAAK4G,SAAS,CACnBouC,WACA+0E,gBAAe,6IAMjB/pH,KAAK4G,SAAS,CACZojE,cAAc,OAGhBhqE,KAAK+D,cAAcstE,gBAAgB,CAAC,UAAU,YAAY,qJAG/Cj8C,EAAcgkF,GAAe,IAAAz/E,EAAA35B,KAEpC65G,EAAgBxkG,IAAc6hC,WAAW9hB,EAAc/pB,eAK3D,IAJKwuG,GAAiBT,IACpBS,EAAgBxkG,IAAc6hC,WAAWkiE,EAAe/tG,gBAGpDwuG,IAAkBA,EAAcjgF,SAA+B,aAAlBxE,IAAiCz1B,OAAOmF,KAAKuQ,IAAc6hC,YAAYxrC,SAAS0pB,EAAc/pB,gBAAoB+tG,IAAmBz5G,OAAOmF,KAAKuQ,IAAc6hC,YAAYxrC,SAAS0tG,EAAe/tG,eACpP+pB,EAAgB,SAChBgkF,EAAiB,cACZ,GAAuB,aAAlBhkF,EAA8B,CACxC,IAAMu2F,EAAc9T,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQiB,GACN,IAAK,YACEuS,GAAexT,IAClBiB,EAAiB,UAErB,MACA,IAAK,UACEjB,GAAawT,IAChBvS,EAAiB,aAWzB,OAHAp5G,KAAK+D,cAAcymB,gBAAgB,gBAAiB4K,GACpDp1B,KAAK+D,cAAcymB,gBAAgB,iBAAkB4uF,GAE9Cp5G,KAAK4G,SAAS,CACnBwuB,gBACAgkF,kBACA,WACAz/E,EAAK4xF,2DAIIt0G,GAAqB,IAAX20G,IAAW3kH,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,KAAAA,UAAA,GAC5B6iH,EAAgB,KAGd9zE,EAAkBh2C,KAAK+D,cAAc2J,gBAAgB,CAAC,YAAY,QAAQ,oBAKhF,OAJkB,SAAduJ,GAAyB++B,IAC3B/+B,EAAY,SAGNA,GACN,QACA,IAAK,QACH6yG,EAAgB3hH,IAClB,MACA,IAAK,OACH2hH,EAAgB+B,EAIhBD,GACF5rH,KAAK+D,cAAcymB,gBAAgB,YAAYvT,GAGjDjX,KAAK4G,SAAS,CACZqQ,YACA6yG,4DAIc5P,GAChBl6G,KAAK4G,SAAS,CACZszG,oDAIK,IAAAp/E,EAAA96B,KACD+H,EAAW/H,KAAKgG,MAAMnG,OAAS,IAC/B6lH,EAAoB1lH,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa,YAIrEo+G,EACJ5oH,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEtD,MAAO,EACP0O,UAAW,QACXzO,WAAY,SACZe,cAAe,SACfd,eAAgB,SAChBuB,gBAAiB,YAEjB4B,EAAA1D,EAAAC,cAACH,GAAA,EAAD,CACEe,UAAW,CACT8sC,SAAS,EACT3rC,WAAW,GAEbrB,YAAa,CACXS,GAAG,EACH+E,KAAK,OACLzE,MAAM,WAERhB,UAAW,CACT+I,GAAG,EACHpI,cAAc,UAEhBT,KAAM,MAKZ,OACE8C,EAAA1D,EAAAC,cAAC27G,GAAA,EAAD,KACEl4G,EAAA1D,EAAAC,cAACmmH,GAAD,MACA1iH,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACEgF,MAAOnI,KAAKgG,MAAM8jH,eAElB5mH,EAAA1D,EAAAC,cAACssH,EAAAvsH,EAAD,CACEwsH,QAASnK,IACT3qE,WAAYA,GACZ+0E,YAAa,WAEb/oH,EAAA1D,EAAAC,cAACysH,EAAA,aAAD,KACG,SAAAjT,GACC,OACE/1G,EAAA1D,EAAAC,cAAC0sH,GAAD,CACElT,QAASA,EACTlxG,SAAUA,EACVw2C,OAAQzjB,EAAKyjB,OACbrH,WAAYA,GACZ/uC,MAAO2yB,EAAK90B,MAAM8jH,cAClBj9F,WAAYiO,EAAK90B,MAAM6mB,WACvB3gB,YAAa4uB,EAAK90B,MAAMkG,YACxB89D,cAAelvC,EAAK90B,MAAMgkE,cAC1B/9D,cAAe6uB,EAAK90B,MAAMiG,cAC1BmpB,cAAe0F,EAAK90B,MAAMovB,cAC1BgkF,eAAgBt+E,EAAK90B,MAAMozG,eAC3BD,aAAcr+E,EAAKq+E,aAAaxqG,KAAKmsB,GACrC3uB,gBAAiB2uB,EAAK90B,MAAMmG,gBAC5B2gB,cAAegO,EAAKhO,cAAcne,KAAKmsB,GACvCmsD,gBAAiBnsD,EAAKmsD,gBAAgBt4E,KAAKmsB,GAC3CsnF,mBAAoBtnF,EAAK90B,MAAMo8G,mBAC/Bx+E,oBAAqB9I,EAAK90B,MAAM49B,oBAChCy+E,sBAAuBvnF,EAAKunF,sBAAsB1zG,KAAKmsB,GACvD0kF,yBAA0B1kF,EAAK90B,MAAMw5G,0BAErCt8G,EAAA1D,EAAAC,cAAC0sH,GAAW1G,SAAZ,KACG,SAAApuG,GAmCK,IAlCJuQ,EAkCIvQ,EAlCJuQ,KACAyxB,EAiCIhiC,EAjCJgiC,OACAuI,EAgCIvqC,EAhCJuqC,QACAp0C,EA+BI6J,EA/BJ7J,QACAsxG,EA8BIznG,EA9BJynG,SACA76D,EA6BI5sC,EA7BJ4sC,SACAnB,EA4BIzrC,EA5BJyrC,SACAtI,EA2BInjC,EA3BJmjC,UACArrC,EA0BIkI,EA1BJlI,YACA4sG,EAyBI1kG,EAzBJ0kG,YACA/mF,EAwBI3d,EAxBJ2d,aACA3nB,EAuBIgK,EAvBJhK,aACA6/D,EAsBI71D,EAtBJ61D,aACA0xC,EAqBIvnG,EArBJunG,aAEAC,GAmBIxnG,EApBJkD,cAoBIlD,EAnBJwnG,gBAEA5B,GAiBI5lG,EAlBJ+0G,eAkBI/0G,EAjBJ4lG,iBACAmC,EAgBI/nG,EAhBJ+nG,iBACAhC,EAeI/lG,EAfJ+lG,iBACA3tD,EAcIp4C,EAdJo4C,iBACAD,EAaIn4C,EAbJm4C,kBACAuvD,EAYI1nG,EAZJ0nG,kBACAI,EAWI9nG,EAXJ8nG,mBACAH,EAUI3nG,EAVJ2nG,oBACAtB,EASIrmG,EATJqmG,oBACA4B,EAQIjoG,EARJioG,oBACAroC,EAOI5/D,EAPJ4/D,qBACAsoC,EAMIloG,EANJkoG,qBACA57E,EAKItsB,EALJssB,qBACA87E,EAIIpoG,EAJJooG,uBACAJ,EAGIhoG,EAHJgoG,yBACAv5G,EAEIuR,EAFJvR,0BACAyuB,EACIld,EADJkd,0BAEA,OACArxB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,KACED,EAAA1D,EAAAC,cAAC4sH,GAAA,EAAD,KACEnpH,EAAA1D,EAAAC,cAAC4sH,GAAA,EAAD,CACEvrF,KAAK,yCACL1D,OACE,SAACn9B,GAAD,OACEiD,EAAA1D,EAAAC,cAAC6sH,EAAA,SAAD,CACEC,SAAUT,GAEV5oH,EAAA1D,EAAAC,cAAC+pH,GAAD7pH,OAAAC,OAAA,GACMK,EADN,CAEE2nB,KAAMA,EACNyxB,OAAQA,EACRuI,QAASA,EACTq3D,QAASA,EACTzrG,QAASA,EACTg/G,aAAa,EACb1N,SAAUA,EACVh8D,SAAUA,EACV/6C,SAAUA,EACVk8C,SAAUA,EACVzJ,UAAWA,EACXuhE,YAAaA,EACb6C,aAAcA,EACd1xC,aAAcA,EACdl4C,aAAcA,EACd3nB,aAAcA,EACd2nC,SAAUla,EAAK90B,MAAMgvC,SACrB69D,OAAQ/3E,EAAK+3E,OAAOlkG,KAAKmsB,GACzB+jF,eAAgBA,EAChB5nG,UAAW6jB,EAAK90B,MAAMiR,UACtB9O,MAAO2yB,EAAK90B,MAAM8jH,cAClB7M,gBAAiBA,EACjB2M,WAAY9uF,EAAK90B,MAAM4jH,WACvB/8F,WAAYiO,EAAK90B,MAAM6mB,WACvB4/F,SAAU3xF,EAAK2xF,SAAS99G,KAAKmsB,GAC7BsiF,iBAAkBA,EAClB3tD,iBAAkBA,EAClB2vD,iBAAkBA,EAClBlzG,YAAa4uB,EAAK90B,MAAMkG,YACxBsjD,kBAAmBA,EACnBuvD,kBAAmBA,EACnBI,mBAAoBA,EACpBlzG,cAAe6uB,EAAK90B,MAAMiG,cAC1BmpB,cAAe0F,EAAK90B,MAAMovB,cAC1Bs3F,YAAa5xF,EAAK4xF,YAAY/9G,KAAKmsB,GACnC4iF,oBAAqBA,EACrBsB,oBAAqBA,EACrBM,oBAAqBA,EACrBlG,eAAgBt+E,EAAK90B,MAAMozG,eAC3B2Q,eAAgBjvF,EAAK90B,MAAM+jH,eAC3B9yC,qBAAsBA,EACtBtzC,qBAAsBA,EACtBgpF,aAAc7xF,EAAK6xF,aAAah+G,KAAKmsB,GACrCykF,qBAAsBA,EACtBqN,gBAAiB9xF,EAAK+xF,UAAUl+G,KAAKmsB,GACrCq+E,aAAcr+E,EAAKq+E,aAAaxqG,KAAKmsB,GACrCiwF,aAAcjwF,EAAKiwF,aAAap8G,KAAKmsB,GACrC3uB,gBAAiB2uB,EAAK90B,MAAMmG,gBAC5B2gH,cAAehyF,EAAKgyF,cAAcn+G,KAAKmsB,GACvChO,cAAegO,EAAKhO,cAAcne,KAAKmsB,GACvCrhB,iBAAkBqhB,EAAK90B,MAAMyT,iBAC7BgmG,uBAAwBA,EACxBx4B,gBAAiBnsD,EAAKmsD,gBAAgBt4E,KAAKmsB,GAC3C2V,iBAAkB3V,EAAK2V,iBAAiB9hC,KAAKmsB,GAC7CukF,yBAA0BA,EAC1Bz7E,oBAAqB9I,EAAK90B,MAAM49B,oBAChCm3E,kBAAmBjgF,EAAKigF,kBAAkBpsG,KAAKmsB,GAC/Ch1B,0BAA2BA,EAC3ByuB,0BAA2BA,EAC3B8tF,sBAAuBvnF,EAAKunF,sBAAsB1zG,KAAKmsB,UAQ/D4qF,GACExiH,EAAA1D,EAAAC,cAAC4sH,GAAA,EAAD,CACEvrF,KAAK,kCACL1D,OACE,SAACn9B,GAAD,OACEiD,EAAA1D,EAAAC,cAAC6sH,EAAA,SAAD,CACEC,SAAUT,GAEV5oH,EAAA1D,EAAAC,cAACgqH,GAAD9pH,OAAAC,OAAA,GACMK,EADN,CAEE2nB,KAAMA,EACNyxB,OAAQA,EACRuI,QAASA,EACTq3D,QAASA,EACTzrG,QAASA,EACTsxG,SAAUA,EACVh8D,SAAUA,EACV/6C,SAAUA,EACVk8C,SAAUA,EACV8oE,cAAc,EACdvyE,UAAWA,EACXuhE,YAAaA,EACb7uC,aAAcA,EACdl4C,aAAcA,EACd3nB,aAAcA,EACd2nC,SAAUla,EAAK90B,MAAMgvC,SACrB69D,OAAQ/3E,EAAK+3E,OAAOlkG,KAAKmsB,GACzB+jF,eAAgBA,EAChB5nG,UAAW6jB,EAAK90B,MAAMiR,UACtB9O,MAAO2yB,EAAK90B,MAAM8jH,cAClB7M,gBAAiBA,EACjB2M,WAAY9uF,EAAK90B,MAAM4jH,WACvB/8F,WAAYiO,EAAK90B,MAAM6mB,WACvB4/F,SAAU3xF,EAAK2xF,SAAS99G,KAAKmsB,GAC7BsiF,iBAAkBA,EAClB3tD,iBAAkBA,EAClB2vD,iBAAkBA,EAClBlzG,YAAa4uB,EAAK90B,MAAMkG,YACxBsjD,kBAAmBA,EACnBuvD,kBAAmBA,EACnBI,mBAAoBA,EACpBlzG,cAAe6uB,EAAK90B,MAAMiG,cAC1BmpB,cAAe0F,EAAK90B,MAAMovB,cAC1Bs3F,YAAa5xF,EAAK4xF,YAAY/9G,KAAKmsB,GACnC4iF,oBAAqBA,EACrBsB,oBAAqBA,EACrBM,oBAAqBA,EACrBlG,eAAgBt+E,EAAK90B,MAAMozG,eAC3B2Q,eAAgBjvF,EAAK90B,MAAM+jH,eAC3BpmF,qBAAsBA,EACtBgpF,aAAc7xF,EAAK6xF,aAAah+G,KAAKmsB,GACrCykF,qBAAsBA,EACtBqN,gBAAiB9xF,EAAK+xF,UAAUl+G,KAAKmsB,GACrCq+E,aAAcr+E,EAAKq+E,aAAaxqG,KAAKmsB,GACrCiwF,aAAcjwF,EAAKiwF,aAAap8G,KAAKmsB,GACrC3uB,gBAAiB2uB,EAAK90B,MAAMmG,gBAC5B2gH,cAAehyF,EAAKgyF,cAAcn+G,KAAKmsB,GACvChO,cAAegO,EAAKhO,cAAcne,KAAKmsB,GACvCrhB,iBAAkBqhB,EAAK90B,MAAMyT,iBAC7BgmG,uBAAwBA,EACxBx4B,gBAAiBnsD,EAAKmsD,gBAAgBt4E,KAAKmsB,GAC3C2V,iBAAkB3V,EAAK2V,iBAAiB9hC,KAAKmsB,GAC7CukF,yBAA0BA,EAC1Bz7E,oBAAqB9I,EAAK90B,MAAM49B,oBAChCm3E,kBAAmBjgF,EAAKigF,kBAAkBpsG,KAAKmsB,GAC/Ch1B,0BAA2BA,EAC3ByuB,0BAA2BA,EAC3B8tF,sBAAuBvnF,EAAKunF,sBAAsB1zG,KAAKmsB,UAOrE53B,EAAA1D,EAAAC,cAAC4sH,GAAA,EAAD,KACEnpH,EAAA1D,EAAAC,cAACutH,GAAD,CACE3zE,OAAQA,EACRuI,QAASA,EACTq3D,QAASA,EACTzrG,QAASA,EACTsxG,SAAUA,EACV/2G,SAAUA,EACVyyC,UAAWA,EACXuhE,YAAaA,EACb/mF,aAAcA,EACdggB,SAAUla,EAAK90B,MAAMgvC,SACrB6pE,eAAgBA,EAChBhM,OAAQ/3E,EAAK+3E,OAAOlkG,KAAKmsB,GACzBmiF,gBAAiBA,EACjB2M,WAAY9uF,EAAK90B,MAAM4jH,WACvBxM,iBAAkBA,EAClB3tD,iBAAkBA,EAClB2vD,iBAAkBA,EAClBlzG,YAAa4uB,EAAK90B,MAAMkG,YACxBsjD,kBAAmBA,EACnBuvD,kBAAmBA,EACnB9yG,cAAe6uB,EAAK90B,MAAMiG,cAC1BmpB,cAAe0F,EAAK90B,MAAMovB,cAC1BsoF,oBAAqBA,EACrBsB,oBAAqBA,EACrB5F,eAAgBt+E,EAAK90B,MAAMozG,eAC3B2Q,eAAgBjvF,EAAK90B,MAAM+jH,eAC3BpmF,qBAAsBA,EACtBgpF,aAAc7xF,EAAK6xF,aAAah+G,KAAKmsB,GACrCykF,qBAAsBA,EACtBqN,gBAAiB9xF,EAAK+xF,UAAUl+G,KAAKmsB,GACrCq+E,aAAcr+E,EAAKq+E,aAAaxqG,KAAKmsB,GACrC3uB,gBAAiB2uB,EAAK90B,MAAMmG,gBAC5B2gH,cAAehyF,EAAKgyF,cAAcn+G,KAAKmsB,GACvC2kF,uBAAwBA,EACxBJ,yBAA0BA,EAC1Bv5G,0BAA2BA,EAC3B2mH,SAAW,SAAApjH,GAAOyxB,EAAK2xF,SAASpjH,MAGZ,eAArByxB,EAAK90B,MAAMqmC,MACVnpC,EAAA1D,EAAAC,cAACwtH,GAAD,CACErlG,KAAMA,EACNpa,QAASA,EACTqxG,eAAgBA,EAChBG,oBAAqBA,EACrBD,kBAAmBA,EACnBhD,YAAaA,EACbwD,qBAAsBA,EACtB7B,oBAAqBA,EACrBN,iBAAkBA,EAClBiC,yBAA0BA,EAC1BD,iBAAkBA,EAClBK,uBAAwBA,EACxBxC,gBAAiBA,EACjBn3G,0BAA2BA,EAC3BuzC,OAAQA,EACRuI,QAASA,EACTzyC,YAAaA,IAEb,KAEkB,YAArB2rB,EAAK90B,MAAMqmC,MACVnpC,EAAA1D,EAAAC,cAAC4sH,GAAA,EAAD,KACEnpH,EAAA1D,EAAAC,cAAC4sH,GAAA,EAAD,CAAOa,OAAK,EAACpsF,KAAK,IAChB1D,OAAS,SAACn9B,GAAD,OACPiD,EAAA1D,EAAAC,cAAC6sH,EAAA,SAAD,CACEC,SAAUT,GAEV5oH,EAAA1D,EAAAC,cAAC4pH,GAAD1pH,OAAAC,OAAA,GACMK,EADN,CAEE2nB,KAAMA,EACNg6B,QAASA,EACTp0C,QAASA,EACTzF,SAAUA,EACVk8C,SAAUA,EACVzJ,UAAWA,EACXyvE,WAAYnvF,EAAK90B,MAAMnG,MACvBgzG,OAAQ/3E,EAAK+3E,OAAOlkG,KAAKmsB,GACzBovF,YAAapvF,EAAK90B,MAAM5E,OACxBy9G,eAAgBA,EAChB5nG,UAAW6jB,EAAK90B,MAAMiR,UACtB9O,MAAO2yB,EAAK90B,MAAM8jH,cAClBj9F,WAAYiO,EAAK90B,MAAM6mB,WACvB+8F,WAAY9uF,EAAK90B,MAAM4jH,WACvBD,YAAa7uF,EAAK90B,MAAM2jH,YACxBz9G,YAAa4uB,EAAK90B,MAAMkG,YACxB6yG,kBAAmBA,EACnBvvD,kBAAmBA,EACnBwa,cAAelvC,EAAK90B,MAAMgkE,cAC1B/9D,cAAe6uB,EAAK90B,MAAMiG,cAC1B+yG,oBAAqBA,EACrBoL,kBAAmBtvF,EAAKsvF,kBACxBzmF,qBAAsBA,EACtBgpF,aAAc7xF,EAAK6xF,aAAah+G,KAAKmsB,GACrCiwF,aAAcjwF,EAAKiwF,aAAap8G,KAAKmsB,GACrCwvF,mBAAoBxvF,EAAKwvF,mBACzBn+G,gBAAiB2uB,EAAK90B,MAAMmG,gBAC5B2gB,cAAegO,EAAKhO,cAAcne,KAAKmsB,GACvCqyF,kBAAmBryF,EAAK+xF,UAAUl+G,KAAKmsB,GACvCkvF,kBAAmBlvF,EAAK90B,MAAMgkH,kBAC9B/iC,gBAAiBnsD,EAAKmsD,gBAAgBt4E,KAAKmsB,GAC3C8I,oBAAqB9I,EAAK90B,MAAM49B,oBAChCm3E,kBAAmBjgF,EAAKigF,kBAAkBpsG,KAAKmsB,GAC/Ch1B,0BAA2BA,EAC3B2mH,SAAW,SAAApjH,GAAOyxB,EAAK2xF,SAASpjH,OAElCnG,EAAA1D,EAAAC,cAAC0kC,GAAA3kC,EAAD,CACE4tH,QAAS,IACTvpH,WAAY,KACZygD,SAAU,SACV+oE,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1BxsH,MAAO,CAACyS,WAAY,yBAAyBjM,OAAO,WACpDiJ,YAAa,CAACzN,QAASgF,EAAW,QAAU,OAAQzG,gBAAgB,UAAWJ,MAAO,QAASssH,UAAWzlH,EAAW,MAAQ,SAE7H7E,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMtC,cAAe,MAAOf,WAAY,CAAC,aAAa,UAAWC,eAAgB,aAAcoG,UAAW,CAAC,QAAQ,WAAYpF,MAAQgH,EAAW,CAAC0lH,UAAU,UAAY,MACvKvqH,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAOJ,QAAS,CAAC,OAAO,SAAUkN,IAAK,oBAAqBpQ,MAAO,OAAQuB,OAAQ,SACnF8B,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAMilC,GAAI,CAAC,EAAE,GAAIlnC,MAAO,YAAaK,SAAU,EAAGE,UAAW,WAA7D,4RAC2RyB,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CAAM6oB,KAAM,gEAAiE3V,OAAQ,SAAUC,IAAI,+BAA+B1M,WAAY,QAA9I,iBAD3R,+LASV1G,EAAA1D,EAAAC,cAAC4sH,GAAA,EAAD,CAAOa,OAAK,EAACpsF,KAAK,qBAChB59B,EAAA1D,EAAAC,cAACiuH,EAAD,OAEFxqH,EAAA1D,EAAAC,cAAC4sH,GAAA,EAAD,KACEnpH,EAAA1D,EAAAC,cAACkuH,GAAD,QAGF,OAGRzqH,EAAA1D,EAAAC,cAACmuH,GAAD,CACEvgH,aAAcA,EACd4J,UAAW6jB,EAAK90B,MAAMiR,4BAj4BhC3W,aCjBEutH,QACW,cAA7Bz+G,OAAOk1C,SAASwpE,UAEe,UAA7B1+G,OAAOk1C,SAASwpE,UAEhB1+G,OAAOk1C,SAASwpE,SAASp8D,MACvB,2DCX2B,cAA7BtiD,OAAOk1C,SAASwpE,UAClBxK,IAAY,CACVyK,IAAK,6DACLC,WAFU,SAEC1+D,EAAO2+D,GAChB,IAAI7+F,EAASkgC,EACP/oC,EAAQ0nG,EAAKC,kBAMnB,OALI3nG,GAASA,EAAMklB,SACbllB,EAAMklB,QAAQimB,MAAM,iDACtBtiC,GAAS,GAGNA,KAKb++F,IAAS/wF,OAAOl6B,EAAA1D,EAAAC,cAAC2uH,GAAD,MAAS79F,SAASC,eAAe,SD0G3C,kBAAmB+gC,WACrBA,UAAU88D,cAAcC,MAAM/E,KAAK,SAAAgF,GACjCA,EAAaC,yHE/Hbv/G,mLACK,IAAAtI,EAAA3G,KACDyuH,EAAiBzuH,KAAKC,MAAMuP,eAC5B3H,EAAkD,oBAA3B7H,KAAKC,MAAMwD,YACxC,OACEyN,EAAA1R,EAAAC,cAAC0R,EAAA,EAADxR,OAAAC,OAAA,CACE6F,UAAW,CACT7E,GAAG,EACHf,MAAM,EACN8H,GAAG,CAAC,EAAE,GACND,GAAG,CAAC,EAAE,SAER8G,GAAIxO,KAAKC,MAAMsP,QACXvP,KAAKC,MAAMiP,SARjB,CASE9L,UAAWpD,KAAKC,MAAMwL,MACtB5D,cAAeA,EACfpE,YAAcoE,EAAgB,SAAAwB,GAAC,OAAI1C,EAAK1G,MAAMwD,YAAYkD,EAAK1G,QAAS,OAExEiR,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD,CACE3Q,cAAe,MACf2N,GAAIxO,KAAKC,MAAMqP,OAGbtP,KAAKC,MAAM4O,KAAKtG,IAAI,SAACmmH,EAAQC,GAC3B,OAAwB,IAApBD,EAAQE,UAAyC,IAAnBF,EAAQxiF,QAAoBvlC,EAAK1G,MAAM8H,SAChE,KAGPmJ,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD7R,OAAAC,OAAA,CACE8I,IAAG,OAAAR,OAASymH,IACRD,EAAQzuH,OAEZiR,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD7R,OAAAC,OAAA,CACEC,MAAO,EACPC,WAAY,SACZe,cAAe,OACX6tH,EAAQviF,aAGVuiF,EAAQziF,OAAO1jC,IAAI,SAACokB,EAAUkiG,GAC5B,OAA0B,IAAtBliG,EAAUiiG,UAA2C,IAArBjiG,EAAUuf,QAAoBvlC,EAAK1G,MAAM8H,SACpE,KAGPmJ,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD7R,OAAAC,OAAA,CACEwB,OAAQ,OACRP,cAAe,SACff,WAAY,aACZC,eAAgB,UACZ4sB,EAAUwf,YALhB,CAMEprC,MAAO4rB,EAAU5rB,OAAS,CACxBiH,SAAS,UAEXnI,MAAO6uH,EAAQziF,OAAOnpC,OAAO,EAAI,OAAS,EAC1C0L,GAAE,SAAAtG,OAAWymH,EAAX,KAAAzmH,OAAuB2mH,EAAvB,KAAA3mH,OAAqCykB,EAAU/mB,MACjD8C,IAAG,SAAAR,OAAWymH,EAAX,KAAAzmH,OAAuB2mH,EAAvB,KAAA3mH,OAAqCykB,EAAU/mB,QAElDsL,EAAA1R,EAAAC,cAACgvH,EAAD9uH,OAAAC,OAAA,GACM+G,EAAK1G,MADX,CAEE0sB,UAAWA,EACXmiG,SAAUJ,EAAQzuH,MAClBof,SAAQ,SAAAnX,OAAWymH,EAAX,KAAAzmH,OAAuB2mH,EAAvB,KAAA3mH,OAAqCykB,EAAU/mB,yBA7D9DtF,aA8ER2O,iHC9ETL,mLACK,IAAAjI,EAAA3G,KACP,OACEkR,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD,CACE3R,MAAO,EACP8H,GAAI,CAAC,EAAE,GACPiB,GAAI,CAAC,EAAE,GACP/H,cAAe,OAGbb,KAAKC,MAAM4O,KAAKtG,IAAI,SAACmmH,EAAQC,GAE3B,OAAwB,IAApBD,EAAQE,UAAyC,IAAnBF,EAAQxiF,QAAoBvlC,EAAK1G,MAAM8H,SAChE,KAGD2mH,EAAQvuG,OAASuuG,EAAQvuG,MAAMrd,OACrCoO,EAAA1R,EAAAC,cAACsvH,EAAA,EAADpvH,OAAAC,OAAA,GACM+G,EAAK1G,MACLyuH,EAAQzuH,MAFd,CAGEusC,KAAMkiF,EAAQliF,KACdrsB,MAAOuuG,EAAQvuG,MACfzX,IAAG,cAAAR,OAAgBymH,KAElBD,EAAQvuG,OAGXjP,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD7R,OAAAC,OAAA,CAAM8I,IAAG,cAAAR,OAAgBymH,IAAgBD,EAAQzuH,kBA3BrCK,aAoCXsO,gPC7BTsiC,6MAEJlrC,MAAQ,CACN6uE,MAAM,EACN5qE,SAAQ,EACRmB,OAAO,UACPsb,WAAW,CACT+L,QAAQ,CACN1jB,OAAO,KACP9E,SAAQ,GAEVO,QAAQ,CACNuE,OAAO,KACP9E,SAAQ,GAEVI,OAAO,CACL0E,OAAO,KACP9E,SAAQ,IAGZunB,WAAW,GACXkc,WAAU,EACVshF,aAAa,KACbC,cAAc,KACdC,eAAc,EACdt9F,gBAAe,EACfuc,iBAAiB,KACjBrc,oBAAoB,GACpBmhD,mBAAmB,KACnBk8C,sBAAqB,EACrBzuE,yBAAwB,EACxBwyB,yBAAyB,KACzB5kC,0BAA0B,QAI5BvqC,cAAgB,OAUhBo4B,UAAY,SAAC/wB,GACI,OAAXA,GACFzE,EAAKC,SAAS,CACZwE,cAKNgkH,oBAAsB,SAACF,GACrBvoH,EAAKC,SAAS,CACZsoH,kBAG4C,oBAAnCvoH,EAAK1G,MAAMmvH,qBACpBzoH,EAAK1G,MAAMmvH,oBAAoBF,MAInCn9F,iBAAmB,SAAC1oB,GAClB,IAAK1C,EAAKX,MAAMoF,OACd,OAAO,EAET,IAAMsB,EAASrD,EAAEgN,OAAOtU,MAAMe,SAAWwB,MAAM+E,EAAEgN,OAAOtU,OAAS4E,EAAK5C,cAAciU,MAAM3O,EAAEgN,OAAOtU,OAAS4E,EAAK5C,cAAciU,MAAM,GAErIrR,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BqxB,oBAAoBnyB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACfc,EAAUqxB,oBADInyB,OAAA2vH,EAAA,EAAA3vH,CAAA,GAEhBgH,EAAKX,MAAMoF,OAAS,OAEvBomB,WAAW7xB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAU+wB,WADL7xB,OAAA2vH,EAAA,EAAA3vH,CAAA,GAEPgH,EAAKX,MAAMoF,OAASsB,UAK3B6lB,oBAAsB,WAAiB,IAAhB7lB,EAAgBzF,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAKN,EAAKX,MAAMoF,OACd,OAAO,EAEJsB,IACHA,EAAS/F,EAAKX,MAAMwrB,WAAW7qB,EAAKX,MAAMoF,SAE5C,IAAIwmB,GAAiB,EACrB,GAAIllB,EAEF,OADAklB,EAAiBllB,EAAO8lB,IAAI,GACpB7rB,EAAKX,MAAMoF,QACjB,IAAK,UACL,IAAK,SACHwmB,EAAiBA,GAAkBllB,EAAOoO,GAAGnU,EAAKX,MAAMipH,eAM9DtoH,EAAKC,SAAS,CACZgrB,sBAIJM,cAAgB,WACd,IAAKvrB,EAAKX,MAAMoF,QAAgE,OAAtDzE,EAAKX,MAAM8rB,oBAAoBnrB,EAAKX,MAAMoF,QAClE,OAAO,EAGT,IAAIsB,EAAS,KACPylB,EAAqBxrB,EAAK5C,cAAciU,MAAMrR,EAAKX,MAAM8rB,oBAAoBnrB,EAAKX,MAAMoF,SAASoe,IAAI,KAE3G,OAAO7iB,EAAKX,MAAMoF,QAChB,IAAK,UACL,IAAK,SACHsB,EAAS/F,EAAKX,MAAMipH,cAAgBtoH,EAAK5C,cAAciU,MAAMrR,EAAKX,MAAMipH,eAAe75G,MAAM+c,GAAsB,KAMvHxrB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5B+wB,WAAW7xB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAU+wB,WADL7xB,OAAA2vH,EAAA,EAAA3vH,CAAA,GAEPgH,EAAKX,MAAMoF,OAASsB,UAK3B4lB,uBAAyB,SAAC7L,GACxB,IAAK9f,EAAKX,MAAMoF,OACd,OAAO,EAETzE,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BqxB,oBAAoBnyB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACfc,EAAUqxB,oBADInyB,OAAA2vH,EAAA,EAAA3vH,CAAA,GAEhBgH,EAAKX,MAAMoF,OAASqb,UAK3B8oG,mCAAgB,SAAAxoG,IAAA,IAAAyK,EAAAvnB,EAAAmpE,EAAAo8C,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5oG,EAAAxnB,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,UAERyZ,EAAa7qB,EAAKX,MAAMwrB,WAAW7qB,EAAKX,MAAMoF,SAEhDzE,EAAKX,MAAM4rB,gBAAmBJ,IAAc7qB,EAAK5C,cAAciU,MAAMwZ,GAAYgB,IAAI,GAJ3E,CAAAvL,EAAAlP,KAAA,eAAAkP,EAAAgB,OAAA,UAKL,GALK,OAQRhe,GAAU,EARFgd,EAAAsoC,GAUN5oD,EAAKX,MAAMoF,OAVL6b,EAAAlP,KAWP,WAXOkP,EAAAsoC,GAAA,qBAaL5oD,EAAK1G,MAAMiM,YAAYskC,WAAc7pC,EAAK1G,MAAMiM,YAAYskC,UAAUF,YAbjE,CAAArpB,EAAAlP,KAAA,eAAAkP,EAAAgB,OAAA,UAcD,GAdC,cAiBJmrD,EAAkBzsE,EAAK1G,MAAMiM,YAAYskC,UAAUF,YAAY1qC,KAE/D4pH,EAAoB7oH,EAAK5C,cAAciwB,qBAAqBxC,EAAW,KAGtD,EACD,KAUhBk+F,GADAD,EAAgG,IAClD3sH,SAAyD,IAA/C2sH,EAA6BxiG,QAAQ,KAActmB,EAAK5C,cAAciU,MAAM,MAAWrR,EAAK5C,cAAciU,MAAM,KAExK23G,EAAiB,SAACpkH,EAAGgb,GACzB,IAAMkL,EAA4B,YAAdlmB,EAAGjF,OAGjBwsB,EAAY,CAChBE,cAAa,aACbD,YAAapsB,EAAK1G,MAAMgM,cACxBgnB,WAAY1nB,EAAGjF,OACf2tB,WAAY/lB,SAASsjB,IAGnBjL,IACFuM,EAAUG,WAAatsB,EAAK5C,cAAcmvB,oBAAoB3M,KAI5DA,GAA8B,UAArBuM,EAAUxsB,SACrBK,EAAK5C,cAAcovB,yBAAyBL,GAG9CnsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAUimB,WADL/mB,OAAA2vH,EAAA,EAAA3vH,CAAA,GAEPgH,EAAKX,MAAMoF,OAAQ,CAClB2D,OAAO,KACP9E,SAAQ,QAKVwnB,GACF9qB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5B+wB,WAAW7xB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAU+wB,WADL7xB,OAAA2vH,EAAA,EAAA3vH,CAAA,GAEPgH,EAAKX,MAAMoF,OAASzE,EAAK5C,cAAciU,MAAM,SAMhD43G,EAAwB,SAACrkH,GAC7B,IAAMwD,EAASxD,EAAG6nB,gBAClBzsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAUimB,WADL/mB,OAAA2vH,EAAA,EAAA3vH,CAAA,GAEPgH,EAAKX,MAAMoF,OAFJzL,OAAA0vH,EAAA,EAAA1vH,CAAA,GAGHc,EAAUimB,WAAW/f,EAAKX,MAAMoF,QAH7B,CAIN2D,iBAMRpI,EAAK1G,MAAMs0B,0BAA0B6+C,EAAiB,kBAAmB,CACvEo8C,GAnEqB,EAmEcC,GAClC,KAAME,EAAgBC,EAAuBF,GA1FtCzoG,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,oBAgGdthB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAUimB,WADL/mB,OAAA2vH,EAAA,EAAA3vH,CAAA,GAEPgH,EAAKX,MAAMoF,OAFJzL,OAAA0vH,EAAA,EAAA1vH,CAAA,GAGHc,EAAUimB,WAAW/f,EAAKX,MAAMoF,QAH7B,CAINnB,iBArGQ,yBAAAgd,EAAA1O,SAAAwO,EAAA/mB,WAoJhB6vH,8BAAgC,SAACnvE,GAC/B/5C,EAAKC,SAAS,CACZ85C,+BAIJovE,oDAAiC,SAAAvoG,IAAA,IAAA0nB,EAAA8gF,EAAA38C,EAAA48C,EAAA,OAAAhpG,EAAAxnB,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,WAC3BpR,EAAK1G,MAAMiM,YAAYskC,YAAa7pC,EAAK1G,MAAMiM,YAAYskC,UAAUxB,kBAD1C,CAAAtnB,EAAA3P,KAAA,YAEvBk3B,EAAwBtoC,EAAK1G,MAAMiM,YAAYskC,UAAUxB,kBACzD+gF,EAAwB9gF,EAAsBrpC,MAC1Be,EAAK5C,cAAcu6B,kBAAkByxF,GAJlC,CAAAroG,EAAA3P,KAAA,gBAMrBq7D,EAAkBzsE,EAAK1G,MAAMiM,YAAYskC,UAAUF,YAAY1qC,KAN1C8hB,EAAA3P,KAAA,EAOCpR,EAAK5C,cAAcmxB,mBAAmBk+C,EAAgBnkC,EAAsB/5B,QAAQvO,EAAK1G,MAAMuN,SAPhG,cAOrBwiH,EAPqBtoG,EAAA5N,KAAA4N,EAAAO,OAAA,SAQpB+nG,GARoB,eAAAtoG,EAAAO,OAAA,UAWxB,GAXwB,yBAAAP,EAAAnP,SAAAgP,EAAAvnB,WAcjC8yE,oCAAiB,SAAAr7D,IAAA,IAAAxN,EAAAkkC,EAAA6gF,EAAAiB,EAAA/8C,EAAA5kC,EAAAy5D,EAAAknB,EAAAh8C,EAAA7hC,EAAA8+E,EAAAC,EAAA/8C,EAAA9iC,EAAAtB,EAAAxE,EAAAC,EAAAiD,EAAAr7B,EAAA+9G,EAAA,OAAAppG,EAAAxnB,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEVpR,EAAK1G,MAAMiM,aAAgBvF,EAAK1G,MAAMuN,QAF5B,CAAAqK,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,UAGN,GAHM,UAMXhe,GAAU,EACdtD,EAAKC,SAAS,CACZqD,UACAyc,WAAW,CACT+L,QAAQ,CACN1jB,OAAO,KACP9E,SAAQ,GAEVO,QAAQ,CACNuE,OAAO,KACP9E,SAAQ,GAEVI,OAAO,CACL0E,OAAO,KACP9E,SAAQ,MAKVkkC,GAAmB,EACnB6gF,EAAe,aACfiB,EAAyB,KACzB/8C,EAA2B,KAC3B5kC,GAA4B,EAC5By5D,EAAgBphG,EAAK5C,cAAciU,MAAM,GACzCi3G,EAAgBtoH,EAAK5C,cAAciU,MAAM,GACzCi7D,EAAqBtsE,EAAK5C,cAAciU,MAAM,GAC5Co5B,OAA6ClqC,IAA7BP,EAAK1G,MAAMmxC,eAA8BzqC,EAAK1G,MAAMmxC,eAGtEzqC,EAAK1G,MAAMiM,YAAYskC,YAAa7pC,EAAK1G,MAAMiM,YAAYskC,UAAU5W,QApC1D,CAAA/hB,EAAAE,KAAA,YAqCPm4G,EAAkBvpH,EAAK1G,MAAMiM,YAAYskC,UAAUF,YACnD6/E,EAAiBD,EAAgBj7F,IACjCm+C,EAAkB88C,EAAgBtqH,MACpC0qC,EAAc3pC,EAAK5C,cAAcu6B,kBAAkB80C,MAGnC+8C,EA3CP,CAAAt4G,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4CSpR,EAAK1G,MAAM+0B,aAAao+C,EAAgB88C,EAAgBh7G,QAAQi7G,GA5CzE,QA4CX7/E,EA5CWz4B,EAAAiC,KAAA,YA+CTk1B,EAAoBroC,EAAK5C,cAAcu6B,kBAAkB33B,EAAK1G,MAAMiM,YAAYskC,UAAUxB,kBAAkBppC,SAEtFe,EAAK1G,MAAMiM,YAAYskC,UAAUxB,kBAAkB/Z,IAjDhE,CAAApd,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkDepR,EAAK1G,MAAM+0B,aAAaruB,EAAK1G,MAAMiM,YAAYskC,UAAUxB,kBAAkBppC,KAAKe,EAAK1G,MAAMiM,YAAYskC,UAAUxB,kBAAkB95B,QAAQvO,EAAK1G,MAAMiM,YAAYskC,UAAUxB,kBAAkB/Z,KAlD7M,QAkDX+Z,EAlDWn3B,EAAAiC,KAAA,YAqDTw2B,IAAetB,EArDN,CAAAn3B,EAAAE,KAAA,gBAuDXi3G,EAAeroH,EAAK1G,MAAMiM,YAAYskC,UAAUF,YAAY7kC,MAvDjDoM,EAAAE,KAAA,GA8DDqP,QAAQkD,IAAI,CAEpB3jB,EAAK5C,cAAc0rD,iBAAiB2jB,GAEpCzsE,EAAKmpH,iCAELnpH,EAAK5C,cAAcuvE,mBAAmBF,EAAgBzsE,EAAK1G,MAAMuN,SAEhE4jC,EAAgBzqC,EAAK5C,cAAcg0B,oBAAoBq7C,EAAgB,cAAgB,OAtE/E,QAAA5oC,EAAA3yB,EAAAiC,KAAA2wB,EAAA9qC,OAAA4qB,EAAA,EAAA5qB,CAAA6qC,EAAA,GA0DT0oC,EA1DSzoC,EAAA,GA2DT6D,EA3DS7D,EAAA,GA4DTwoC,EA5DSxoC,EAAA,GA6DTs9D,EA7DSt9D,EAAA,GA2EPwoC,IAEFg8C,EAAgBtoH,EAAK5C,cAAc4W,iBAAiBs4D,EAAmBC,GACnE60B,IACFA,EAAgBphG,EAAK5C,cAAc4W,iBAAiBotF,EAAcphG,EAAK1G,MAAMiM,YAAYvH,UACzFsrH,EAAyBtpH,EAAK5C,cAAciU,MAAMi3G,GAAe75G,MAAMzO,EAAK5C,cAAciU,MAAM+vF,KAGlG55D,EAAmBxnC,EAAK5C,cAAciU,MAAMi7D,GAAoBn4D,GAAG,IAnF1D,WAwFf7Q,GAAU,EAGJyjC,EAAY/mC,EAAK1G,MAAMytC,UAEvBr7B,EAAW,CACfpI,UACAyjC,YACAshF,eACAC,gBACA9gF,mBACA8kC,qBACAg9C,yBACA/8C,2BACA5kC,8BAGE3nC,EAAK1G,MAAM6iD,SAzGA,CAAAjrC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0GgBpR,EAAK5C,cAAckxE,oBAAoBtuE,EAAK1G,MAAMuN,SA1GlE,SA0GP4iH,EA1GOv4G,EAAAiC,QA2GUs2G,EAAex0C,UACpCvpE,EAAS88G,sBAAuB,GA5GrB,cAgHoC,oBAAxCxoH,EAAK1G,MAAMsuC,0BACpB5nC,EAAK1G,MAAMsuC,yBAAyBJ,GAjHvBt2B,EAAAoQ,OAAA,SAuHRthB,EAAKC,SAASyL,IAvHN,yBAAAwF,EAAAU,SAAAd,EAAAzX,WA0HjBqwH,0DAAsB,SAAA12G,EAAOtQ,GAAP,IAAA4lC,EAAA,OAAAjoB,EAAAxnB,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAChB1O,GACFA,EAAE0D,iBAEEkiC,EAAwBtoC,EAAK1G,MAAMiM,YAAYskC,UAAUxB,kBACrCroC,EAAK5C,cAAcu6B,kBAAkB2Q,EAAsBrpC,OAEnFe,EAAKs4E,aAAa,KAAKt4E,EAAK1G,MAAMiM,YAAYskC,UAAUF,YAAY1qC,KAAKqpC,EAAsB/5B,SAP7E,wBAAA0E,EAAArB,SAAAoB,EAAA3Z,iEAWtBisB,uCAAoB,SAAA1D,IAAA,OAAAvB,EAAAxnB,EAAAoY,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,OAClBpR,EAAKC,SAAS,CACZ8f,WAAY,CACV+L,QAAQ,CACN1jB,OAAO,KACP9E,SAAQ,GAEVO,QAAQ,CACNuE,OAAO,KACP9E,SAAQ,GAEVI,OAAO,CACL0E,OAAO,KACP9E,SAAQ,MAbI,wBAAAwe,EAAAlQ,SAAAgQ,EAAAvoB,WAmBpBswH,uDAAmB,SAAAlnG,EAAO/f,GAAP,IAAA4lC,EAAAvc,EAAAC,EAAA,OAAA3L,EAAAxnB,EAAAoY,KAAA,SAAA2R,GAAA,cAAAA,EAAAzR,KAAAyR,EAAAxR,MAAA,UACb1O,GACFA,EAAE0D,iBAEEkiC,EAAwBtoC,EAAK1G,MAAMiM,YAAYskC,UAAUxB,mBACrCroC,EAAK5C,cAAcu6B,kBAAkB2Q,EAAsBrpC,MALpE,CAAA2jB,EAAAxR,KAAA,eAAAwR,EAAAxR,KAAA,EASyBpR,EAAKmpH,iCAT9B,OAAAvmG,EAAAzP,KA8EbnT,EAAKC,SAAS,CACZ0nC,2BAA0B,KAlEtB5b,EAAkB,SAACnnB,EAAGgb,GAE1B,IAAMuM,EAAY,CAChBE,cAAe,UACfD,YAAa,UACbE,WAAY1nB,EAAKA,EAAGjF,OAAS,MAGzBmrB,EAAclmB,GAAoB,YAAdA,EAAGjF,OAIzBigB,IACFuM,EAAUG,WAAatsB,EAAK5C,cAAcmvB,oBAAoB3M,KAI5DA,GAA8B,UAArBuM,EAAUxsB,SACrBK,EAAK5C,cAAcovB,yBAAyBL,GAG9CnsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5B6tC,0BAA2B7c,EAC3B/K,WAAW/mB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAUimB,WADL,CAER+L,QAAQ,CACN1jB,OAAO,KACP9E,SAAQ,QAK4B,oBAA/BtD,EAAK1G,MAAMyyB,iBAAkCjB,GACtD9qB,EAAK1G,MAAMyyB,gBAAgBnnB,GAG7B5E,EAAKmsE,kBAGDngD,EAAyB,SAACpnB,GAC9B,IAAMwD,EAASxD,EAAG6nB,gBAClBzsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAUimB,WADL,CAER+L,QAAQ9yB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACHc,EAAUimB,WAAW+L,QADnB,CAEL1jB,iBAMRpI,EAAK5C,cAAcsvB,YAAY1sB,EAAK1G,MAAMiM,YAAYskC,UAAUF,YAAY1qC,KAAKqpC,EAAsB/5B,QAAQwd,EAAgBC,GAE/HhsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAUimB,WADL,CAER+L,QAAQ,CACN1jB,OAAO,KACP9E,SAAQ,KAGZqkC,2BAA0B,MA3Ef,wBAAA/kB,EAAAhR,SAAA6Q,EAAAppB,iEAqFnBwK,8CAAU,SAAAqf,EAAOxgB,EAAEknH,GAAT,IAAAthF,EAAAD,EAAAwhF,EAAAC,EAAA/+E,EAAAg/E,EAAAzB,EAAAx9E,EAAAk/E,EAAApvE,EAAA/P,EAAAo/E,EAAA97C,EAAAvlC,EAAAF,EAAA,OAAAroB,EAAAxnB,EAAAoY,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UACR1O,EAAE0D,iBAEIkiC,EAAwBtoC,EAAK1G,MAAMiM,YAAYskC,UAAUxB,oBACzDA,EAAoBroC,EAAK5C,cAAcu6B,kBAAkB2Q,EAAsBrpC,OAJ7E,CAAAskB,EAAAnS,KAAA,YAaEy4G,EAAkB,SAACjlH,EAAGgb,IAErBA,GAAShb,GAAoB,UAAdA,EAAGjF,OACrBigB,EAAQ,CACNklB,QAAQ,kBAEAlgC,GAAMgb,IAChBhb,EAAK,CACHjF,OAAO,UAIX,IAAMmrB,EAAclmB,GAAoB,YAAdA,EAAGjF,OAGvBwsB,EAAY,CAChBE,cAAe,UACfD,YAAaw9F,EACbt9F,WAAY1nB,EAAKA,EAAGjF,OAAS,KAC7B2tB,WAAY/lB,SAAS+gH,IAGnB1oG,IACFuM,EAAUG,WAAatsB,EAAK5C,cAAcmvB,oBAAoB3M,KAI5DA,GAA8B,UAArBuM,EAAUxsB,SACrBK,EAAK5C,cAAcovB,yBAAyBL,GAK1CrB,GAEFriB,OAAOwgD,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,+BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZf,QAAS,YAGPvoD,EAAK1G,MAAMuuC,mBAA6D,oBAAjC7nC,EAAK1G,MAAMuuC,mBACpD7nC,EAAK1G,MAAMuuC,kBAAkBjjC,KAI/B6D,OAAOwgD,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZf,QAAS,YAIXvoD,EAAKmsE,kBAGPnsE,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5B0tC,kBAAiB1c,EACjB/K,WAAW/mB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAUimB,WADL,CAERlc,QAAQ,CACNuE,OAAO,KACP9E,SAAQ,SAMVwmH,EAAyB,SAACllH,GAC9B,IAAMwD,EAASxD,EAAG6nB,gBAClBzsB,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAUimB,WADL,CAERlc,QAAQ7K,OAAA0vH,EAAA,EAAA1vH,CAAA,GACHc,EAAUimB,WAAWlc,QADnB,CAELuE,iBAMF2iC,EAAiB,WACoB,oBAA9B/qC,EAAK1G,MAAMyxC,gBACpB/qC,EAAK1G,MAAMyxC,kBAITg/E,EAAY/pH,EAAK1G,MAAM6iD,UAAYn8C,EAAKX,MAAM06C,0BAA4B/5C,EAAKX,MAAMmpH,qBAGrFF,EAAgBtoH,EAAKX,MAAMipH,cAC3Bx9E,EAAY9qC,EAAK1G,MAAMqxC,oBAAsB3qC,EAAK5C,cAAc4uC,aAAahsC,EAAK5C,cAAciwB,qBAAqBrtB,EAAKX,MAAMwrB,WAAW7qB,EAAKX,MAAMoF,QAAQzE,EAAKX,MAAMktE,2BAA6BvsE,EAAK5C,cAAc4uC,aAAahsC,EAAKX,MAAMitE,oBAGnP09C,EAAsE,qBAA9ChqH,EAAK1G,MAAMiM,YAAYw7G,mBAAqC/gH,EAAK1G,MAAMiM,YAAYw7G,mBAAqB/gH,EAAK5C,cAAc2J,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAGnM6zC,EAAwB,MAExBovE,EApHA,CAAAzmG,EAAAnS,KAAA,cAwHAwpC,EADEmvE,EACsB/pH,EAAK5C,cAAc2J,gBAAgB,CAAC,WAAW,UAAU,UAAU,gCAEnE/G,EAAK5C,cAAc2J,gBAAgB,CAAC,WAAW,UAAU,UAAU,2BA1H3F,CAAAwc,EAAAnS,KAAA,gBAAAmS,EAAAnS,KAAA,GA8H8BpR,EAAK5C,cAAcm+B,oBAAoB+sF,EAActoH,EAAK1G,MAAMgM,cAActF,EAAK1G,MAAMiM,aAAY,GA9HnI,QAAAge,EAAApQ,KA+HoBquB,IAAIxhC,EAAK5C,cAAciU,MAAMupC,MAC/CovE,GAAiB,GAhInB,QAuI2B,oBAF3Bn/E,EAAkB7qC,EAAK1G,MAAMuxC,gBAAkB7qC,EAAK1G,MAAMuxC,gBAAkB,CAACC,EAAU9qC,EAAK1G,MAAMiM,YAAYskC,UAAUF,YAAYp7B,QAAQvO,EAAK1G,MAAMiM,YAAY81B,KAAK9sB,QAAQvO,EAAK1G,MAAMiM,YAAYgJ,QAAQy7G,MAGjNn/E,EAAkBA,EAAgBC,IAIhCi/E,GACI57C,GAAoB87C,EAAA5hF,EAAkBQ,SAAQ+gF,GAA1B93G,MAAAm4G,EAAAjxH,OAAAkxH,EAAA,EAAAlxH,CAA8C6xC,IAAiBwkC,YACzFrvE,EAAK5C,cAAc00E,+BAA+BxpC,EAAsBrpC,KAAMkvE,EAAmB07C,EAAiBC,KAG5GlhF,EAAiB5oC,EAAK5C,cAAcu6B,kBAAkB33B,EAAK1G,MAAMiM,YAAYtG,MAC7EypC,EAAeJ,EAAsBG,UAAU3iB,KAAM,SAAAgwD,GAAC,OAAIA,EAAE72E,OAAS2qH,IACvE5pH,EAAK1G,MAAMytC,WAAa6B,EAC1B5oC,EAAK5C,cAAc0xE,iBAAiB9uE,EAAK1G,MAAMiM,YAAYtG,KAAMe,EAAK1G,MAAMuN,QAASyhC,EAAsBrpC,KAAMypC,EAAaoW,WAAYjU,EAAiBg/E,EAAiBC,EAAwB/+E,GAGpM/qC,EAAK5C,cAAcwwB,0BAA0B0a,EAAsBrpC,KAAM2qH,EAAiB/+E,EAAiBg/E,EAAiBC,IAMhI9pH,EAAKC,SAAS,SAACnG,GAAD,MAAgB,CAC5BimB,WAAW/mB,OAAA0vH,EAAA,EAAA1vH,CAAA,GACNc,EAAUimB,WADL,CAERlc,QAAQ,CACNuE,OAAO,KACP9E,SAAQ,QAlKV,eAAAigB,EAAAjC,OAAA,UAyKD,GAzKC,yBAAAiC,EAAA3R,SAAAsR,EAAA7pB,4IA7fJA,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,oDAiN9CD,KAAKkE,YACLlE,KAAK8yE,yGAOYtyE,EAAUC,GAC3BT,KAAKkE,YAEL,IAAMirB,EAAiB3uB,EAAUgN,UAAYxN,KAAKC,MAAMuN,QAClDsjH,EAAkBtwH,EAAUsiD,WAAa9iD,KAAKC,MAAM6iD,SACpDiuE,EAAmBvwH,EAAUktC,YAAc1tC,KAAKC,MAAMytC,WACvCltC,EAAUyL,gBAAkBjM,KAAKC,MAAMgM,gBAAmBzL,EAAU0L,aAAelM,KAAKC,MAAMiM,aAE/FijB,GAAkB2hG,GAAmBC,IACvD/wH,KAAK8yE,iBAGP,IAAMr+C,EAAgBz0B,KAAKgG,MAAMoF,SAAW3K,EAAU2K,OAChD4lH,EAA6BhxH,KAAKgG,MAAM8rB,oBAAoB9xB,KAAKgG,MAAMoF,UAAY3K,EAAUqxB,oBAAoB9xB,KAAKgG,MAAMoF,SAC9HqpB,GAAiBu8F,IACnBhxH,KAAKkyB,gBAGmBzxB,EAAU+wB,aAAexxB,KAAKgG,MAAMwrB,YAE5DxxB,KAAKuyB,sBAGyB9xB,EAAU6tC,4BAA8BtuC,KAAKgG,MAAMsoC,2BAGvC,oBAA/BtuC,KAAKC,MAAMyyB,iBACpB1yB,KAAKC,MAAMyyB,gBAAgB1yB,KAAKgG,MAAMsoC,4DAkbnC,IAAAnqC,EAAAnE,KAEP,IAAKA,KAAKC,MAAMiM,cAAgBlM,KAAKC,MAAMgM,cACzC,OAAO,KAGT,IAAM4lB,EAAmB7xB,KAAKC,MAAMytC,WAAa1tC,KAAKgG,MAAMsoC,0BACtDiH,EAAqBv1C,KAAK+D,cAAc2J,gBAAgB,CAAC,QAAQ,mBACjEujH,EAAwB17E,EAAmB3b,SAAkG,qBAAhF2b,EAAmBt1C,MAAMkM,gBAAgBnM,KAAKC,MAAMiM,YAAY81B,KAAKv2B,OAClI+pC,EAA+BD,EAAmBzF,eAIlDohF,EAAyB,SAACjxH,GAAD,OAC7BkxH,EAAA3xH,EAAAC,cAAC2xH,EAAA,EAAD,CACE3rH,UAAW,CACTgJ,GAAG,EACH7F,GAAG,EACHjB,GAAG,EACH/G,GAAG,EACHmC,QAAQ,OACRjD,WAAW,SACXe,cAAc,SACdd,eAAe,SACf2F,GAAGvB,EAAK6B,MAAMkpH,cAAgB,EAAI,IAGpCiC,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACExxH,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,UAEhBoxH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE1rH,KAAM,QACNzE,MAAO,WACP0E,KAAM,iBAGVurH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE17F,UAAU,EACVzsB,QAAS/E,EAAK6B,MAAMkpH,cACpBvtH,MAAK,wCACLyH,SAAW,SAAAC,GAAC,OAAIlF,EAAKirH,oBAAoB/lH,EAAEgN,OAAOnN,cAKlDooH,EAAkBtxH,KAAK+D,cAAc2J,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAgB1N,KAAKgG,MAAMmpH,qBAExH,OACEnvH,KAAKgG,MAAMiE,SAAWjK,KAAKC,MAAMuN,QAC/B2jH,EAAA3xH,EAAAC,cAAC2xH,EAAA,EAAD,CACE3rH,UAAW,CACTT,EAAE,EACFU,GAAG,EACH6I,UAAU,QACVxN,MAAM,CACJgC,QAAQ,OACRjD,WAAW,SACXC,eAAe,YAInBoxH,EAAA3xH,EAAAC,cAAC8xH,EAAA,EAAD,CACErxH,UAAW,CACTW,cAAc,OAEhBV,YAAa,CACXwF,KAAK,QAEPtF,UAAW,CACTmJ,GAAG,GAELpJ,KAAM,2BAITJ,KAAKgG,MAAMmoC,mBAAqBnuC,KAAKgG,MAAMkpH,cAC1CiC,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CAAKxxH,MAAO,IAEPG,KAAKC,MAAMoxC,iBACZ8/E,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ7E,cAAe,UAEfswH,EAAA3xH,EAAAC,cAAC2xH,EAAA,EAAD,CACE3rH,UAAW,CACTT,EAAE,IAGJmsH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEvxH,WAAY,SACZe,cAAe,UAEfswH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE1rH,KAAM,QACNzE,MAAO,WACP0E,KAAO5F,KAAKC,MAAMoxC,gBAAkB,YAAc,YAEpD8/E,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAEwB,OAAjCzB,KAAKC,MAAMuxH,kBAA6BxxH,KAAKC,MAAMuxH,kBAAoB,KACtC,OAAjCxxH,KAAKC,MAAMuxH,mBACXL,EAAA3xH,EAAAC,cAAA,WARJ,OAUSO,KAAKC,MAAMoxC,gBAA4B,GAAV,QAVtC,SAU0D8/E,EAAA3xH,EAAAC,cAAA,cAASO,KAAKgG,MAAMipH,cAActiH,QAAQ,GAA1C,IAA+C3M,KAAKgG,MAAMgpH,aAA1D,IAAyEhvH,KAAKgG,MAAMiqH,uBAAX,IAAA/nH,OAAwClI,KAAKgG,MAAMiqH,uBAAuBtjH,QAAQ,GAAlF,KAAAzE,OAAwFlI,KAAKC,MAAMgM,cAAnG,KAAsH,IAVzP,eAUiRklH,EAAA3xH,EAAAC,cAAA,WAClP,OAA3BO,KAAKC,MAAMwxH,YAAuBzxH,KAAKC,MAAMwxH,YAAc,+EAOzCvqH,IAA3BlH,KAAKC,MAAMkxC,aAA6BnxC,KAAKC,MAAMkxC,cAClDggF,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ7E,cAAe,WAGZb,KAAKC,MAAMoxC,iBACV8/E,EAAA3xH,EAAAC,cAACyxH,EAAD,MAEJC,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CAAMzwH,GAAI,GAAV,sBAGAuwH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEvxH,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAEhBoxH,EAAA3xH,EAAAC,cAAC2xH,EAAA,EAAD,CACE3rH,UAAW,CACTT,EAAE,EACFnF,MAAM,IACNuxB,YAAY,WACVjtB,EAAKg4B,UAAU,aAGnBt0B,eAAe,EACfyI,SAAiC,YAAtBtQ,KAAKgG,MAAMoF,QAEtB+lH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEpoH,GAAI,EACJnJ,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBoxH,EAAA3xH,EAAAC,cAACiyH,EAAA,EAAD,CACEviH,YAAa,CACX/D,OAAO,WAETuhB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,MAITgwH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE9vH,SAAU,EACVC,WAAY,GAFd,aAQJ2vH,EAAA3xH,EAAAC,cAAC2xH,EAAA,EAAD,CACE3rH,UAAW,CACTT,EAAE,EACFnF,MAAM,IACNuxB,YAAY,WACVjtB,EAAKg4B,UAAU,YAGnBt0B,eAAe,EACfyI,SAAiC,WAAtBtQ,KAAKgG,MAAMoF,QAEtB+lH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEpoH,GAAI,EACJnJ,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBoxH,EAAA3xH,EAAAC,cAACiyH,EAAA,EAAD,CACEviH,YAAa,CACX/D,OAAO,UAETuhB,UAAW,CACT/mB,KAAK,OACL3F,MAAM,CACJkB,GAAG,MAITgwH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE9vH,SAAU,EACVC,WAAY,GAFd,cAYY,YAAtBxB,KAAKgG,MAAMoF,OACT+lH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ9E,GAAI,EACJC,cAAe,UAGZowH,GAAyBz7E,IAAiCx1C,KAAKC,MAAMoxC,iBACpE8/E,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEzwH,GAAI,EACJf,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,UAEhBoxH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE5vH,UAAW,SACXmI,WAAY,UACZoiB,KAAI,sBAAA9jB,OAAwBqtC,EAAmBlJ,MAA3C,KAAAnkC,OAAoDlI,KAAKC,MAAMiM,YAAY81B,KAAKv2B,QAHtF,wDAOA0lH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE7nH,GAAI,EACJ7D,KAAM,MACNzE,MAAO,UACP0E,KAAM,qBAKZisB,EACE7xB,KAAKgG,MAAM0gB,WAAWlc,QAAQP,QAC5BknH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ7E,cAAe,UAEfswH,EAAA3xH,EAAAC,cAACkyH,EAAA,EAAD,CACE/pG,KAAM5nB,KAAKC,MAAM2nB,KACjBnlB,KAAMzC,KAAKgG,MAAM0gB,WAAWlc,QAAQuE,OACpC2c,WAAU,kCACVO,kBAAmBjsB,KAAKisB,kBAAkBtd,KAAK3O,MAC/C2rB,SAAW3rB,KAAKC,MAAM0rB,SAAW3rB,KAAKC,MAAM0rB,SAAW,yBACvDI,eAAiB/rB,KAAKC,MAAM6iD,UAAY9iD,KAAKgG,MAAM06C,wBAA0B,8BAAgC,4BAG/G1gD,KAAKC,MAAMqxC,oBACb6/E,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ7E,cAAe,UAEfswH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEzwH,GAAI,EACJf,MAAO,EACPgB,cAAe,UAEfswH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEzwH,GAAI,EACJd,WAAY,SACZe,cAAe,MACfd,eAAgBC,KAAKC,MAAM41B,oBAAsB,gBAAkB,YAGjE71B,KAAKC,MAAM41B,qBACTs7F,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACExxH,MAAO,EACPoG,SAAU,MACVnG,WAAY,SACZe,cAAe,OAEfswH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE9vH,SAAU,EACVC,WAAY,EACZC,UAAW,OACXV,MAAO,CACLkF,SAAS,OACT+B,SAAS,SACTpG,WAAW,SACX0tB,aAAa,YAEfpuB,MAAOlB,KAAKC,MAAM41B,oBAAoB30B,MAAQlB,KAAKC,MAAM41B,oBAAoB30B,MAAQ,aAEpFlB,KAAKC,MAAM41B,oBAAoBz1B,OAMtCJ,KAAKgG,MAAMipH,eACTkC,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACExxH,MAAO,EACPoG,SAAU,MACVnG,WAAY,SACZe,cAAe,MACfd,eAAgB,YAEhBoxH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE9vH,SAAU,EACVC,WAAY,EACZN,MAAO,YACPO,UAAW,QACXmI,WAAY,YACZpG,QAAU,SAAC6F,GAAD,OAAOlF,EAAKmuB,uBAAuB,OAN/C,YAQYtyB,KAAKgG,MAAMipH,cAActiH,QAAQ,GAR7C,IAQkD3M,KAAKC,MAAMgM,iBAMrEklH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEjlH,IAAK,EACL7H,KAAM,SACNoxB,UAAU,EACVv0B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZkT,YAAa,aACbpT,gBAAiB,SACjB6U,UAAW,kBACX2f,YAAa,gBACb1sB,SAAUpJ,KAAK+xB,iBAAiBpjB,KAAK3O,MACrC0vB,OAAM,aAAAxnB,OAAelI,KAAKC,MAAMkI,MAAMC,OAAOC,SAC7CtG,MAAO/B,KAAKgG,MAAMwrB,WAAWxxB,KAAKgG,MAAMoF,QAAUpL,KAAK+D,cAAciU,MAAMhY,KAAKgG,MAAMwrB,WAAWxxB,KAAKgG,MAAMoF,SAASuB,UAAY,KAEnIwkH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ5F,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAKwI,IAAK,SAAAke,GAAU,OAC5B0qG,EAAA3xH,EAAAC,cAACmyH,EAAA,EAAD,CACEnrG,WAAYA,EACZ/d,IAAG,YAAAR,OAAcue,GACjB2K,YAAa,kBAAIjtB,EAAKmuB,uBAAuB7L,IAC7CnW,SAAUnM,EAAK6B,MAAM8rB,oBAAoB3tB,EAAK6B,MAAMoF,UAAY8C,SAASuY,SAMnF0qG,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ7F,MAAO,EACPC,WAAY,SACZC,eAAgB,UAGdC,KAAKC,MAAMiM,YAAYskC,UAAUxB,kBAAkBI,UAAU7mC,IAAI,SAAC8mC,EAAarjC,GAC7E,IAAM6lH,EAAexiF,EAAazpC,KAClC,OACEurH,EAAA3xH,EAAAC,cAACqyH,EAAA,EAAD,CACEpuH,YAAa,CACX7D,MAAM,CAAC,EAAE,IACTqhB,SAAS/c,EAAK6B,MAAM4rB,eACpBroB,UAAUpF,EAAKlE,MAAMkI,MAAMC,OAAOoC,SAEpC9B,IAAG,WAAAR,OAAa8D,GAChBvI,YAAc,SAAA4F,GAAC,OAAIlF,EAAKqG,QAAQnB,EAAEwoH,KAEhCxiF,EAAa1tC,WAQ3BwvH,EAAA3xH,EAAAC,cAAC2xH,EAAA,EAAD,CACE3rH,UAAW,CACTT,EAAE,EACFU,GAAG,IAGLyrH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEvxH,WAAY,SACZe,cAAe,UAGbb,KAAKC,MAAM8xH,eACTZ,EAAA3xH,EAAAC,cAAC4xH,EAAA,EACKrxH,KAAKC,MAAM8xH,gBAGjBZ,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE1rH,KAAM,QACNzE,MAAO,WACP0E,KAAO5F,KAAKC,MAAMsxC,cAAgBvxC,KAAKC,MAAMsxC,cAAiBvxC,KAAKC,MAAMoxC,gBAAkB,YAAc,WAI/G8/E,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTzB,KAAKC,MAAM0xC,cACTw/E,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAKzlG,KAAN,CACEomG,mBAAoBhyH,KAAKC,MAAM+xH,mBAC/BnwH,wBAAyB,CACvBC,OAAO9B,KAAKC,MAAM0xC,iBAKtBw/E,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAKzlG,KAAN,CACE1qB,MAAO,YADT,oDAGqDlB,KAAKC,MAAMoxC,gBAAkBrxC,KAAKgG,MAAMipH,cAActiH,QAAQ,GAAK,MAHxH,IAGiI3M,KAAKgG,MAAMgpH,aAAehvH,KAAKC,MAAMoxC,gBAAX,kBAAAnpC,OAA+ClI,KAAKC,MAAMiM,YAAYT,MAAtE,KAAAvD,OAA+ElI,KAAKC,MAAMwZ,iBAA1F,aAAwH,GAHnR,MAQN03G,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACExxH,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,iBAGhBuxH,GACEH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3pH,GAAI,EACJC,GAAI,EACJjC,GAAI,EACJ7F,MAAO,EACPwB,aAAc,EACdvB,WAAY,SACZe,cAAe,SACfd,eAAgB,SAChBuB,gBAAiB,cACjBouB,OAAM,aAAAxnB,OAAelI,KAAKC,MAAMkI,MAAMC,OAAOmb,YAE7C4tG,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTzB,KAAKC,MAAM6iD,SAAX,0HAGE,4GAIN9iD,KAAKC,MAAM6iD,UACTquE,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJiwB,UAAU,EACVh0B,MAAO,gCACPuH,QAASlJ,KAAKgG,MAAM06C,wBACpBt3C,SAAW,SAAAC,GAAC,OAAIlF,EAAK0rH,8BAA8BxmH,EAAEgN,OAAOnN,aAMpElJ,KAAKC,MAAMiM,YAAYskC,UAAUxB,kBAAkBI,UAAU7mC,IAAI,SAAC8mC,EAAarjC,GAC7E,IAAM6lH,EAAexiF,EAAazpC,KAClC,OACEurH,EAAA3xH,EAAAC,cAACqyH,EAAA,EAAD,CACEpuH,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,IACT0J,UAAUpF,EAAKlE,MAAMkI,MAAMC,OAAOoC,SAEpC9B,IAAG,WAAAR,OAAa8D,GAChBvI,YAAc,SAAA4F,GAAC,OAAIlF,EAAKqG,QAAQnB,EAAEwoH,KAEhCxiF,EAAa1tC,YAS3B3B,KAAKgG,MAAM0gB,WAAW+L,QAAQxoB,QAChCknH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ7E,cAAe,UAEfswH,EAAA3xH,EAAAC,cAACkyH,EAAA,EAAD,CACE/pG,KAAM5nB,KAAKC,MAAM2nB,KACjB+D,SAAQ,uBACRlpB,KAAMzC,KAAKgG,MAAM0gB,WAAW+L,QAAQ1jB,OACpC2c,WAAU,gCACVO,kBAAmBjsB,KAAKisB,kBAAkBtd,KAAK3O,SAInDmxH,EAAA3xH,EAAAC,cAAC2xH,EAAA,EAAD,CACE3rH,UAAW,CACTT,EAAE,EACFU,GAAG,IAGLyrH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEvxH,WAAY,SACZe,cAAe,UAEfswH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE1rH,KAAM,QACNC,KAAM,WACN1E,MAAO,aAETiwH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTzB,KAAKC,MAAMgyH,YAAcjyH,KAAKC,MAAMgyH,YAApC,mBAAA/pH,OAAuElI,KAAKC,MAAMoxC,gBAA0B,GAAR,MAApG,KAAAnpC,OAAmHlI,KAAKgG,MAAMgpH,aAA9H,mDAGJmC,EAAA3xH,EAAAC,cAACqyH,EAAA,EAAD,CACEpuH,YAAa,CACXgC,GAAG,EACH7F,MAAM,CAAC,EAAE,KAEX4D,YAAazD,KAAKswH,iBAAiB3hH,KAAK3O,OAL1C,cAeTA,KAAKgG,MAAM0gB,WAAW1mB,KAAKgG,MAAMoF,QAAQnB,QAmExCknH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ7E,cAAe,UAEfswH,EAAA3xH,EAAAC,cAACkyH,EAAA,EAAD,CACE/pG,KAAM5nB,KAAKC,MAAM2nB,KACjBqE,kBAAmBjsB,KAAKisB,kBAAkBtd,KAAK3O,MAC/CyC,KAAMzC,KAAKgG,MAAM0gB,WAAW1mB,KAAKgG,MAAMoF,QAAQ2D,OAC/C2c,WAAU,cAAAxjB,OAAgBlI,KAAKgG,MAAMoF,OAA3B,eACVugB,SAAQ,GAAAzjB,OAAKlI,KAAK+D,cAAc0R,WAAWzV,KAAKgG,MAAMoF,QAA9C,oBA3EZ+lH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ7E,cAAe,UAEfswH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACEjlH,IAAK,EACL7H,KAAM,SACNoxB,UAAU,EACVv0B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZ4B,UAAWC,IAAOgjB,MAClB3R,YAAa,aACbpT,gBAAiB,SACjB6U,UAAW,kBACX/M,SAAUpJ,KAAK+xB,iBAAiBpjB,KAAK3O,MACrC0vB,OAAM,aAAAxnB,OAAelI,KAAKC,MAAMkI,MAAMC,OAAOC,SAC7CytB,YAAW,UAAA5tB,OAAYlI,KAAKgG,MAAMgpH,aAAvB,WACXjtH,MAAoD,OAA7C/B,KAAKgG,MAAMwrB,WAAWxxB,KAAKgG,MAAMoF,QAAmBpL,KAAK+D,cAAciU,MAAMhY,KAAKgG,MAAMwrB,WAAWxxB,KAAKgG,MAAMoF,SAASqe,WAAa,KAE7I0nG,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ5F,WAAY,SACZe,cAAe,MACfd,eAAgB,iBAEhBoxH,EAAA3xH,EAAAC,cAACmyH,EAAA,EAAD,CACEnrG,WAAY,GACZ2K,YAAa,kBAAIjtB,EAAKmuB,uBAAuB,KAC7ChiB,SAAUtQ,KAAKgG,MAAM8rB,oBAAoB9xB,KAAKgG,MAAMoF,UAAY8C,SAAS,MAE3EijH,EAAA3xH,EAAAC,cAACmyH,EAAA,EAAD,CACEnrG,WAAY,GACZ2K,YAAa,kBAAIjtB,EAAKmuB,uBAAuB,KAC7ChiB,SAAUtQ,KAAKgG,MAAM8rB,oBAAoB9xB,KAAKgG,MAAMoF,UAAY8C,SAAS,MAE3EijH,EAAA3xH,EAAAC,cAACmyH,EAAA,EAAD,CACEnrG,WAAY,GACZ2K,YAAa,kBAAIjtB,EAAKmuB,uBAAuB,KAC7ChiB,SAAUtQ,KAAKgG,MAAM8rB,oBAAoB9xB,KAAKgG,MAAMoF,UAAY8C,SAAS,MAE3EijH,EAAA3xH,EAAAC,cAACmyH,EAAA,EAAD,CACEnrG,WAAY,IACZ2K,YAAa,kBAAIjtB,EAAKmuB,uBAAuB,MAC7ChiB,SAAUtQ,KAAKgG,MAAM8rB,oBAAoB9xB,KAAKgG,MAAMoF,UAAY8C,SAAS,QAG7EijH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACE3rH,GAAI,EACJ3F,eAAgB,UAEhBoxH,EAAA3xH,EAAAC,cAACqyH,EAAA,EAAD,CACEpuH,YAAa,CACX7D,MAAM,CAAC,EAAE,IACTqhB,SAASlhB,KAAKgG,MAAM4rB,eACpB7wB,MAAM,CACJW,cAAc,eAGlB+B,YAAazD,KAAKgG,MAAM4rB,eAAiB,KAAO5xB,KAAKuvH,cAAc5gH,KAAK3O,OAEvEA,KAAKgG,MAAMoF,WAsB1B+lH,EAAA3xH,EAAAC,cAAC4xH,EAAA,EAAD,CACExxH,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,WAGZC,KAAKC,MAAMoxC,iBAAmBrxC,KAAKgG,MAAMmoC,kBACzCgjF,EAAA3xH,EAAAC,cAACyxH,EAAD,MAGFlxH,KAAKC,MAAMyR,SAAW1R,KAAKC,MAAMyR,SAAW,aAp1CpCpR,aA61CP4wC,iKCj2CTlF,6MAEJhmC,MAAQ,KAGRjC,cAAgB,gFAGV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,2JAK9CD,KAAKkE,iMAGkB1D,EAAWC,mEAClCT,KAAKkE,kJAGE,IAAAC,EAAAnE,KAEHsN,EAAgBtN,KAAKC,MAAMqN,cAK/B,OAJKA,GAAkBA,EAAcxK,SACnCwK,EAAgB3N,OAAOmF,KAAK9E,KAAKC,MAAMkM,kBAIvChH,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CAAMoJ,GAAG,wBAAwB3O,MAAO,EAAGgB,cAAe,UACxDsE,EAAA3F,EAAAC,cAACyyH,EAAA,EAADvyH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4O,KAAM7O,KAAKC,MAAM4O,KACjB9G,SAAU/H,KAAKC,MAAM8H,YAEvB5C,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CAAMoJ,GAAG,cAAc3N,cAAe,UAElCyM,EAAc/E,IAAI,SAAAkD,GAChB,IAAMS,EAAc/H,EAAKlE,MAAMkM,gBAAgBV,GAC/C,OAAKS,EAIH/G,EAAA3F,EAAAC,cAAC0yH,EAAA,EAADxyH,OAAAC,OAAA,CACE6L,MAAOA,GACHtH,EAAKlE,MAFX,CAGEyI,IAAG,SAAAR,OAAWuD,GACdS,YAAaA,EACboD,MAAK,aAAApH,OAAeuD,GACpB8D,OAAM,cAAArH,OAAgBuD,GACtB+D,eAAgBrL,EAAKlE,MAAMuP,gBAAkBusB,OAVxC,gBA1CEz7B,aA+DV0rC,2BCrEfhqC,EAAAC,QAAA,CAAkBmwH,OAAA,uBAAA1uG,KAAA,uDCDlBhE,EAAA3M,EAAA6M,EAAA,sBAAAwB,IAAA1B,EAAA3M,EAAA6M,EAAA,sBAAAoF,IAAAtF,EAAA3M,EAAA6M,EAAA,sBAAAsF,IAAAxF,EAAA3M,EAAA6M,EAAA,sBAAAwF,IAAA,IAAAitG,EAAA3yG,EAAA,IAGMwC,EAAa,CACjBD,MAAO,UACPY,MAAO,OACPzB,KAAM,UACNkxG,SAAU,UACVttG,MAAO,UACPE,OAAQ,UACRE,IAAK,UACLmtG,QAAS,UACTC,cAAe,WAIXpqH,EAAS,CACbmqH,QAAS,CACPlxG,KAAMa,EAAWqwG,QACjBnyH,KAAMqyH,YAAcvwG,EAAWqwG,SAC/B/wG,MAAO,CAAC,KAAMsD,YAAK,GAAK5C,EAAWqwG,UACnC7wG,KAAM,CAAC,KAAMmD,YAAM,GAAK3C,EAAWqwG,WAErCnxG,KAAM,CACJC,KAAMa,EAAWd,KACjBhhB,KAAMqyH,YAAcvwG,EAAWd,MAC/BI,MAAO,CAAC,KAAMsD,YAAK,GAAK5C,EAAWd,OACnCM,KAAM,CAAC,KAAMmD,YAAM,GAAK3C,EAAWd,QAErC4D,MAAO,CACL3D,KAAMa,EAAW8C,MACjB5kB,KAAM8hB,EAAWW,MACjBrB,MAAO,CAAC,KAAMsD,YAAK,GAAK5C,EAAW8C,QACnCtD,KAAM,CAAC,KAAMmD,YAAM,GAAK3C,EAAW8C,SAErCE,OAAQ,CACN7D,KAAMa,EAAWgD,OACjB9kB,KAAMqyH,YAAcvwG,EAAWgD,QAC/B1D,MAAO,CAAC,KAAMsD,YAAK,GAAK5C,EAAWgD,SACnCxD,KAAM,CAAC,KAAMmD,YAAM,GAAK3C,EAAWgD,UAErCE,IAAK,CACH/D,KAAMa,EAAWkD,IACjBhlB,KAAMqyH,YAAcvwG,EAAWkD,KAC/B5D,MAAO,CAAC,KAAMsD,YAAK,GAAK5C,EAAWkD,MACnC1D,KAAM,CAAC,KAAMmD,YAAM,GAAK3C,EAAWkD,QAKjChE,EAAOhZ,EAAOgZ,KACd4D,EAAQ5c,EAAO4c,MACfE,EAAS9c,EAAO8c,OAChBE,EAAMhd,EAAOgd,IAOJlD,wGCzDTwwG,mLAEK,IAAA/rH,EAAA3G,KAED2yH,EAAgB,kBACpBzhH,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD,CACEtQ,MAAiC,OAAzByF,EAAK1G,MAAM+iC,UAAsB,UAAY,UACrDp9B,KAAgC,OAAzBe,EAAK1G,MAAM+iC,UAAsB,cAAgB,gBACxDr9B,KAAOgB,EAAK1G,MAAM2yH,SAAWjsH,EAAK1G,MAAM2yH,SAAajsH,EAAK1G,MAAM8H,SAAW,QAAU,SAIzF,OACEmJ,EAAA1R,EAAAC,cAAC+R,EAAA,EAAD,CACE1R,WAAY,SACZe,cAAe,MACfhB,MAAQG,KAAKC,MAAMJ,MAAQG,KAAKC,MAAMJ,MAAQ,EAC9CE,eAAgBC,KAAKC,MAAMF,eAAiBC,KAAKC,MAAMF,eAAiB,YAGpEC,KAAKC,MAAM4yH,SAAgC,SAArB7yH,KAAKC,MAAM4yH,UACjC3hH,EAAA1R,EAAAC,cAACkzH,EAAD,MAEH3yH,KAAKC,MAAMyR,SAEW,UAArB1R,KAAKC,MAAM4yH,SACT3hH,EAAA1R,EAAAC,cAACkzH,EAAD,cA1BkBryH,aAiCfoyH,6yECnCf1wH,EAAAC,QAAA,CAAkBisB,YAAA,qCAAAK,gBAAA,yCAAA7M,KAAA,8BAAAyM,kBAAA,iECAlBnsB,EAAAC,QAAA,CAAkB6wH,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,0ghBCeZn+E,6MAEJ7uC,MAAQ,CACNioD,eAAe,KACflZ,iBAAiB,GACjByb,gBAAgB,KAChByiE,iBAAiB,KACjBC,mBAAmB,KACnBjnH,cAActF,EAAK1G,MAAM+0C,YAkF3BjxC,cAAgB,OA+ChBovH,0DAAsB,SAAA17G,EAAOpO,EAAE6oD,EAAShE,GAAlB,IAAA2D,EAAAC,EAAAh1B,EAAAI,EAAAk2F,EAAA,OAAAC,EAAA7zH,EAAAoY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEd85C,EAFc,eAAAn4C,EAAA/Z,OAAA2zH,EAAA,EAAA3zH,CAAA0zH,EAAA7zH,EAAAgY,KAEF,SAAAuP,EAAOxb,GAAP,OAAA8nH,EAAA7zH,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,OAEhB3I,OAAOwgD,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,QAAA5nD,OAAUvB,EAAKX,MAAMiG,cAArB,wBAChB8jD,WAAY,QACZC,WAAY,GACZC,WAAY,GACZf,QAAS,YAGXvoD,EAAK1G,MAAMuvD,oBAVK,wBAAAvoC,EAAA1O,SAAAwO,EAAA/mB,SAFE,gBAAA+Z,GAAA,OAAAL,EAAAjB,MAAAzY,KAAAiH,YAAA,GAed6qD,EAfc,eAAAzqC,EAAA1nB,OAAA2zH,EAAA,EAAA3zH,CAAA0zH,EAAA7zH,EAAAgY,KAeJ,SAAA+P,EAAOle,GAAP,OAAAgqH,EAAA7zH,EAAAoY,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,cAAA2P,EAAAO,OAAA,UACP,GADO,wBAAAP,EAAAnP,SAAAgP,EAAAvnB,SAfI,gBAAAk2D,GAAA,OAAA7uC,EAAA5O,MAAAzY,KAAAiH,YAAA,GAmBd61B,EAAkBznB,IAAc83C,SAAS7K,UAAU4P,GACnDh1B,EAAaJ,GAAmBA,EAAgBK,cAAgBL,EAAgBK,cAAcx2B,EAAK1G,MAAMoV,IAAc64C,EAAU2D,EAAUC,GAAW,KApBxIj6C,EAAA03C,GAuBZ2C,EAvBYr6C,EAAAE,KAAA,qBAyBsB,oBAA3B+kB,EAAgBM,SACnBg2F,EAAezzH,OAAOC,OAAO,GAAG+G,EAAKX,OAC3C82B,EAAgBM,OAAOF,EAAW,KAAKk2F,EAAa/9G,MA3BtCwC,EAAAoQ,OAAA,sBAiChB5S,IAAc2jC,UAAUC,OAAOC,OAAOtf,QAjCtB,CAAA/hB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkCZpR,EAAK5C,cAAcovB,yBAAyB,CAChDH,cAAe,MACfD,YAAa,kBACbE,WAAYi/B,IArCI,QAwClBvrD,EAAK6wG,WAAWnuG,GAxCEwO,EAAAE,KAAA,iBA0ClBpR,EAAK6wG,WAAWnuG,GA1CE,yBAAAwO,EAAAU,SAAAd,EAAAzX,qEA8CtBuzH,OAAS,SAAClqH,GACRA,EAAE0D,iBAEEpG,EAAKX,MAAMitH,iBACbtsH,EAAKC,SAAS,CACZqsH,iBAAiB,OAEVtsH,EAAKX,MAAMioD,eACpBtnD,EAAKC,SAAS,CACZqnD,eAAe,KACfuC,gBAAgB,KAChByiE,iBAAiB,OAEVtsH,EAAKX,MAAMiG,cACpBtF,EAAKC,SAAS,CACZqnD,eAAe,KACfuC,gBAAgB,KAChByiE,iBAAiB,KACjBhnH,cAActF,EAAK1G,MAAM+0C,WAG3BruC,EAAKg0G,gBAITA,WAAa,WACXh0G,EAAKC,SAAS,CACZqnD,eAAe,KACfuC,gBAAgB,KAChByiE,iBAAiB,KACjBC,mBAAmB,KACnBjnH,cAActF,EAAK1G,MAAM+0C,WAG3BruC,EAAK6sH,wBAGPhc,WAAa,SAACnuG,GACZ1C,EAAKg0G,aACAh0G,EAAK1G,MAAM60C,YAA+C,oBAA1BnuC,EAAK1G,MAAMu3G,YAC9C7wG,EAAK1G,MAAMu3G,gBAIfic,gBAAkB,SAACvhE,GACjB,IAAK78C,IAAc83C,SAAS7K,UAAU4P,GACpC,OAAO,EAET,IAAIn1B,EAAe1nB,IAAc83C,SAAS7K,UAAU4P,GACpD,GAAoC,oBAAzBn1B,EAAaixB,QAAuB,CAC7C,IAAM0lE,EAAkB32F,EAAaixB,QAAQrnD,EAAKX,OAC9C0tH,GAAmB/zH,OAAOmF,KAAK4uH,GAAiB5wH,SAClDi6B,EAAep9B,OAAOC,OAAOm9B,EAAa22F,IAG9C,OAAO32F,KAGT42F,0BAA4B,SAAC1lE,GAC3B,IAAM2lE,EAAgBjtH,EAAKX,MAAM+uC,iBAAiBkZ,GAClD,OAAI2lE,GAAiBA,EAAcvmE,gBAC1BumE,EAAcvmE,gBAEhB,QAGTwmE,6BAA+B,SAAC5lE,EAAehiD,GAC7C,IAAMinH,EAAqB,GAE3BvzH,OAAOmF,KAAKuQ,IAAc83C,SAAS7K,WAAW/5C,IAAI,SAAC2pD,EAASlmD,GAC1D,IAAM+wB,EAAe1nB,IAAc83C,SAAS7K,UAAU4P,GAChD4hE,GAAmF,IAA3D/2F,EAAa2wB,iBAAiBzgC,QAAQghC,GAC9D8lE,EAAuB9nH,GAAyE,IAAzD8wB,EAAa6wB,gBAAgB3gC,QAAQhhB,IAA6F,IAApE8wB,EAAa6wB,gBAAgB3gC,QAAQtmB,EAAK1G,MAAMgM,iBAA4F,IAAnE8wB,EAAa6wB,gBAAgB3gC,QAAQ5X,IAAcsnB,WAIvO,OAHII,EAAanD,SAAWk6F,GAAyBC,GACnDb,EAAmBpmH,KAAKolD,GAEnBA,IAGT,IAAM8hE,EAAyBrtH,EAAKgtH,0BAA0B1lE,GAE9D,OAAI+lE,GAA0BrtH,EAAKX,MAAM+uC,iBAAiBkZ,GAAgBX,kBAA2E,IAAxD4lE,EAAmBjmG,QAAQ+mG,GAC/G,CAACA,GAGHd,KAGTe,eAAiB,SAAC5qH,EAAE4pH,GAKlB,GAJI5pH,GACFA,EAAE0D,kBAGCkmH,IAAqB59G,IAAc83C,SAAS7K,UAAU2wE,GACzD,OAAOtsH,EAAKC,SAAS,CACnBqsH,iBAAiB,OAIrB,IAAMl2F,EAAe1nB,IAAc83C,SAAS7K,UAAU2wE,GACtD,GAAIl2F,EAAa,CAEf,GAAIp2B,EAAKX,MAAMiG,cAEb,YADAtF,EAAKwsH,oBAAoB9pH,EAAE4pH,EAAiBtsH,EAAKX,OAInD,IAAMkuH,GAAkF,IAAnEn3F,EAAa6wB,gBAAgB3gC,QAAQ5X,IAAcsnB,WAClEw3F,GAAqF,IAApEp3F,EAAa6wB,gBAAgB3gC,QAAQtmB,EAAK1G,MAAMgM,eAGjEE,EAAkB,GACxB,KAAM+nH,GAAgBC,IAAoBA,GASxC,YADAxtH,EAAKwsH,oBAAoB9pH,EAAE4pH,EAAiBtsH,EAAKX,OAP7CkuH,GACF/nH,EAAgBW,KAAKuI,IAAcsnB,WAEjCw3F,GACFhoH,EAAgBW,KAAKnG,EAAK1G,MAAMgM,eAOpCtF,EAAKC,SAAS,CACZuF,kBACA8mH,yBAKNmB,aAAe,SAAC/qH,EAAE4kD,GAKhB,GAJI5kD,GACFA,EAAE0D,kBAGsE,IAAtEpN,OAAOmF,KAAK6B,EAAKX,MAAM+uC,kBAAkB9nB,QAAQghC,GAAuB,CAC1E,IAAMilE,EAAqBvsH,EAAKktH,6BAA6B5lE,EAAetnD,EAAKX,MAAMiG,eAGvFtF,EAAK5C,cAAcovB,yBAAyB,CAC1CH,cAAe,MACfD,YAAa,gBACbE,WAAYg7B,IAGdtnD,EAAKC,SAAS,CACZssH,qBACAjlE,uBAKNjyB,YAAc,SAAC3yB,EAAE4C,GACX5C,GACFA,EAAE0D,iBAIJpG,EAAK5C,cAAcovB,yBAAyB,CAC1CH,cAAe,MACfD,YAAa,eACbE,WAAYhnB,IAGdtF,EAAKC,SAAS,CAAEqF,iBAAhBtM,OAAA2zH,EAAA,EAAA3zH,CAAA0zH,EAAA7zH,EAAAgY,KAAiC,SAAAmC,IAAA,OAAA05G,EAAA7zH,EAAAoY,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,WAC3BpR,EAAKX,MAAMitH,iBADgB,CAAAr5G,EAAA7B,KAAA,eAAA6B,EAAAqO,OAAA,SAEtBthB,EAAKwsH,oBAAoB9pH,EAAE1C,EAAKX,MAAMitH,iBAAiBtsH,EAAKX,QAFtC,OAI7BW,EAAK0tH,sBAJwB,wBAAAz6G,EAAArB,SAAAoB,EAAA3Z,aASnCs0H,oBAAsB,SAAA9jE,GAGhBn7C,IAAc2jC,UAAUC,OAAOC,OAAOtf,SAAW42B,GACnD7pD,EAAK5C,cAAcovB,yBAAyB,CAC1CH,cAAe,MACfD,YAAa,iBACbE,WAAYu9B,EAAgBzuD,QAIhC4E,EAAKC,SAAS,CACZ4pD,uBAIJ+jE,sBAAwB,WACtB,IAAMC,EAAqB,GAwB3B,OAvBA7tH,EAAKX,MAAMktH,mBAAmBnuH,QAAQ,SAACmtD,EAASlmD,GAC9C,IAAM+wB,EAAep2B,EAAK8sH,gBAAgBvhE,GACpC4hE,GAA8F,IAAtE/2F,EAAa2wB,iBAAiBzgC,QAAQtmB,EAAKX,MAAMioD,gBACzE8lE,EAAuBptH,EAAKX,MAAMiG,eAAoF,IAApE8wB,EAAa6wB,gBAAgB3gC,QAAQtmB,EAAKX,MAAMiG,gBAA6F,IAApE8wB,EAAa6wB,gBAAgB3gC,QAAQtmB,EAAK1G,MAAMgM,iBAA4F,IAAnE8wB,EAAa6wB,gBAAgB3gC,QAAQ5X,IAAcsnB,WAGxPI,EAAanD,SAAYk6F,GAA0BC,GAKxDh3F,EAAa4wB,mBAAmB5oD,QAAQ,SAAC0vH,EAAYl3F,GAC9Ci3F,EAAmBC,KACtBD,EAAmBC,GAAe,CAChCnyE,UAAU,GACV3gD,MAAM0T,IAAc6gC,UAAUu+E,GAC9B1yH,MAAM0yH,IAGVD,EAAmBC,GAAanyE,UAAUx1C,KAAKolD,OAI5CvyD,OAAO8J,OAAO+qH,+MAjYhBx0H,KAAKgG,MAAMiG,wDACP,UAITtM,OAAOmF,KAAKuQ,IAAc83C,SAAS7K,WAAWv9C,QAAQ,SAACmtD,EAASlmD,GAE9D,IAAM+wB,EAAe1nB,IAAc83C,SAAS7K,UAAU4P,GACtD,GAAIn1B,EAAanD,SAAWmD,EAAaM,mBAAwF,IAApEN,EAAa6wB,gBAAgB3gC,QAAQ9oB,EAAK6B,MAAMiG,iBAA4F,IAAnE8wB,EAAa6wB,gBAAgB3gC,QAAQ5X,IAAcsnB,YAAmB,CAE1M,IAAMU,EAAkBN,EAAaM,gBAErC19B,OAAOmF,KAAKu4B,GAAiBt4B,QAAQ,SAACu4B,EAAIC,GAIxC,OAFqBD,EAAIvsB,MAAM,KAAK/C,MAAM3C,eAGxC,IAAK,KACH,IAAMmyB,EAAQ,UAAAt1B,OAAagqD,EAAb,KAAAhqD,OAAyBq1B,EAAzB,KAAAr1B,OAA8B/D,EAAK6B,MAAMiG,eAEvD,IAAKskB,SAASC,eAAegN,GAAU,CACrC,IAAMC,EAASlN,SAAS9wB,cAAc,UAChCi+B,EAAuBL,EAAgBC,GACvChrB,EAAWorB,GAAwBA,EAAqBprB,SAAWorB,EAAqBprB,SAAW,KACnGqrB,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAElGA,GAA8B,oBAAZA,GACpBA,EAAQx5B,EAAK6B,MAAMqP,IAAc0nB,GAG/BzqB,GAAgC,oBAAbA,IACjBmrB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BvrB,MAIJmrB,EAAOK,OAASxrB,GAIpBmrB,EAAOjvB,GAAKgvB,EACZC,EAAOr6B,UAAP,UAAA8E,OAA6BgqD,GAC7Bz0B,EAAOxtB,IAAMqtB,EACbG,EAAOM,OAAQ,EAEXL,GAAwBA,EAAqBM,cAC/CN,EAAqBM,cAAcC,YAAYR,GAE/ClN,SAAS2N,KAAKD,YAAYR,GAGhC,MACA,IAAK,MACH,IAAMU,EAAY,cAAAj2B,OAAiBgqD,EAAjB,KAAAhqD,OAA6Bq1B,GAE/C,IAAKhN,SAASC,eAAe2N,GAAc,CACzC,IAAMp9B,EAAQwvB,SAAS9wB,cAAc,QAErCsB,EAAMyN,GAAK2vB,EACXp9B,EAAMuV,IAAM,aACZvV,EAAMirB,KAAOsR,EAEb/M,SAAS2N,KAAKD,YAAYl9B,gJAclCf,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,sDAI1B,IAAAkO,EAAAnO,KACd+0C,EAAmB,IACI/0C,KAAKC,MAAM80C,kBAAoB/0C,KAAKC,MAAM80C,iBAAiBjyC,OAAS9C,KAAKC,MAAM80C,iBAAmBp1C,OAAOmF,KAAKuQ,IAAc83C,SAAS3d,UAE7IzqC,QAAQ,SAAAsjE,GAC3B,IAAM6qD,EAAqB/kH,EAAK0lH,6BAA6BxrD,EAAOl6D,EAAKnI,MAAMiG,eAC/E,GAAIinH,GAAsBA,EAAmBpwH,OAAO,EAAE,CACpD,IAAM4xH,EAAar/G,IAAc83C,SAAS3d,QAAQ64B,GAClDqsD,EAAWxB,mBAAqBA,EAChCn+E,EAAiBszB,GAAUqsD,KAI/B10H,KAAK4G,SAAS,CACZmuC,kEAKF/0C,KAAKkE,YAELlE,KAAK20H,uBACL30H,KAAKq0H,0KAILr0H,KAAKkE,iMAGkB1D,mEAEvBR,KAAKkE,YAEAlE,KAAKC,MAAM+0C,UAAYx0C,EAAUw0C,WAAah1C,KAAKC,MAAM+0C,UAC5Dh1C,KAAKg8B,YAAY,KAAKh8B,KAAKC,MAAM+0C,8IA4Q5B,IAAA5mC,EAAApO,KAEHmgB,EAAQ,KACqB,OAA7BngB,KAAKgG,MAAMiG,cACbkU,EAAQ,aAERA,EAAQ,OAAOngB,KAAKgG,MAAMiG,cACQ,OAA9BjM,KAAKgG,MAAMioD,iBACb9tC,GAAS,MAAMngB,KAAKgG,MAAM+uC,iBAAiB/0C,KAAKgG,MAAMioD,gBAAgBhuD,MAAMoQ,UAIhF,IAAIlE,EAAkBnM,KAAKC,MAAMkM,iBAAmBxM,OAAOmF,KAAK9E,KAAKC,MAAMkM,iBAAiBrJ,OAAO,EAA7E,CAAkFuS,IAAcsnB,WAAhGz0B,OAAAvI,OAAAkxH,EAAA,EAAAlxH,CAA6GA,OAAOmF,KAAK9E,KAAKC,MAAMkM,mBAAoB,CAACkJ,IAAcsnB,WAGzL38B,KAAKC,MAAMkoD,gBACbh8C,EAAkB,GAClBxM,OAAOmF,KAAKuQ,IAAc83C,SAAS7K,WAAWv9C,QAAS,SAAAmtD,GACrD,IAAMn1B,EAAe1nB,IAAc83C,SAAS7K,UAAU4P,GAClDn1B,EAAa6wB,iBACf7wB,EAAa6wB,gBAAgB7oD,QAAQ,SAAA0G,GAC9BU,EAAgBT,SAASD,IAC5BU,EAAgBW,KAAKrB,QAO/B,IAAMmpH,EAAiB,SAAA30H,GAAK,OAC1BkF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAK1P,SAAWkI,EAAKnO,MAAM60C,WAAa,OAAS,CAAC,OAAO,SAE1B,OAA7B1mC,EAAKpI,MAAMiG,cACT9G,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAKhV,GAAI,GACPuE,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACEhV,GAAI,CAAC,EAAE,GACPY,WAAY,EACZC,UAAW,SACXF,SAAU,CAAC,EAAG6M,EAAKnO,MAAM60C,WAAa,EAAI,IAJ5C,mCAQA3vC,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACEhV,GAAI,EACJG,MAAO,CACLs7B,SAAS,QAEXv8B,WAAY,SACZC,eAAgB,SAChBc,cAAe,CAAC,SAAS,QAGzBsL,EAAgB5D,IAAI,SAACkD,EAAMO,GACzB,OACE7G,EAAA3F,EAAAC,cAACo1H,EAAA,EAAD,CACExkH,QAAS5E,EACT/C,IAAG,SAAAR,OAAWuD,GACd1D,SAAUqG,EAAKnO,MAAM8H,SACrBiI,SAAQ,iBAAA9H,OAAmBuD,EAAnB,QACRhI,YAAc,SAAA4F,GAAO+E,EAAK4tB,YAAY3yB,EAAEoC,IACxCyE,WAAa9B,EAAKnO,MAAM8H,SAAW,CAAC3G,OAAO,QAAU,CAAC4D,EAAE,CAAC,EAAE,GAAG5D,OAAO,QACrEsC,YAAe0K,EAAKnO,MAAM8H,SAItB,KAJiC,CACnChH,MAAM,CACJE,KAAO,oBASW,OAA9BmN,EAAKpI,MAAMioD,eACb9oD,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,KACEzQ,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMhV,GAAI,EAAGC,cAAe,SAAUd,eAAgB,SAAUD,WAAY,WAEvEsO,EAAKnO,MAAM60C,YACV3vC,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAOxU,OAAQ,EAAGR,GAAI,EAAGqP,IAAG,iBAAA/H,OAAmBkG,EAAKpI,MAAMiG,cAA9B,UAEhC9G,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMnU,UAAW,SAAUD,WAAY,IAAKD,SAAU,CAAC,EAAG6M,EAAKnO,MAAM60C,WAAa,EAAI,GAAI7rC,GAAI,GAE1FmF,EAAKnO,MAAM60C,YAAc1mC,EAAKnO,MAAM+0C,SAApC,6BAAA9sC,OAA4EkG,EAAKnO,MAAM+0C,SAAvF,+EAAA9sC,OAA+KkG,EAAKpI,MAAMiG,cAA1L,OAIN9G,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMhV,GAAIwN,EAAKnO,MAAM60C,WAAa,EAAI,EAAGj0C,cAAe,CAAC,SAAS,OAAQf,WAAY,SAAUC,eAAgB,UAE5GJ,OAAOmF,KAAKsJ,EAAKpI,MAAM+uC,kBAAkBxsC,IAAI,SAAC8/D,EAAOr8D,GACnD,IAAM0oH,EAAatmH,EAAKpI,MAAM+uC,iBAAiBszB,GAC3Cn4D,EAAawkH,EAAWz0H,OAASy0H,EAAWz0H,MAAMiQ,WAAawkH,EAAWz0H,MAAMiQ,WAAa,GAC3F4kH,EAAqB1mH,EAAKnO,MAAM8H,SAAW,CAAC3G,OAAO,QAAU,CAACA,OAAO,QAG3E,OAFA8O,EAAavQ,OAAOC,OAAOsQ,EAAW4kH,GAGpC3vH,EAAA3F,EAAAC,cAACo1H,EAAA,EAADl1H,OAAAC,OAAA,GACM80H,EAAWz0H,MADjB,CAEEyD,YAAa,CACXgsB,OAAO,GAEThnB,IAAG,UAAAR,OAAYmgE,GACfn4D,WAAaA,EACbnI,SAAWqG,EAAKnO,MAAM8H,SACtBtE,YAAc,SAAA4F,GAAC,OAAI+E,EAAKgmH,aAAa/qH,EAAEg/D,WAOnB,WAA9Bj6D,EAAKpI,MAAMioD,eACT9oD,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAKlQ,GAAI,EAAG9E,GAAI,GACduE,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMnU,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAG0H,GAAI,GACzD9D,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAK/V,MAAO,QACRsF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMhV,GAAIwN,EAAKnO,MAAM60C,WAAa,EAAI,EAAGj0C,cAAe,CAAC,SAAS,OAAQf,WAAY,SAAUC,eAAgB,UAE9GqO,EAAKpI,MAAMktH,mBAAmBpwH,OAAS,EAEnCqC,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,KACEzQ,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMnU,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAGX,GAAI,CAAC,EAAE,IAA9D,2CAIEwN,EAAKpI,MAAMktH,mBAAmB3qH,IAAI,SAAC2pD,EAASlmD,GAC1C,IAAM+wB,EAAe3uB,EAAKqlH,gBAAgBvhE,GAC1C,OACE/sD,EAAA3F,EAAAC,cAACo1H,EAAA,EAADl1H,OAAAC,OAAA,CAAa8I,IAAG,oBAAAR,OAAsBgqD,IAAgBn1B,EAAtD,CAAoEt5B,YAAc,SAAA4F,GAAO+E,EAAK+kH,oBAAoB9pH,EAAE6oD,EAAS9jD,EAAKpI,cAO5Ib,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMnU,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAG0H,GAAI,GAA3D,wEAUd9D,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE/V,MAAO,EACPC,WAAY,SACZe,cAAe,SACfd,eAAgB,eAGbqO,EAAKpI,MAAMitH,kBACZ9tH,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACEhV,GAAI,EACJqF,SAAWmI,EAAKnO,MAAM60C,WAAa,OAAS,UAC5Cj1C,MAASuO,EAAKnO,MAAM60C,aAAe1mC,EAAKnO,MAAM8H,SAAY,IAAO,IAG9DqG,EAAKnO,MAAM60C,YACV3vC,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAM/U,cAAe,SAAUd,eAAgB,SAAUD,WAAY,UACnEqF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAOxU,OAAQ,EAAGR,GAAI,EAAGqP,IAAG,iBAAA/H,OAAmBkG,EAAKpI,MAAMiG,cAA9B,WAGlC9G,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMnU,UAAW,SAAUD,WAAa4M,EAAKnO,MAAM60C,WAAa,EAAI,EAAIvzC,SAAU,EAAGX,GAAI,GAAzF,wBAGAuE,EAAA3F,EAAAC,cAACs1H,EAAA,EAAD,CACEhvG,GAAI,UACJzkB,gBAAiB,UACjBS,MAAOqM,EAAKpI,MAAMwqD,gBAClB16B,YAAa,sBACb1sB,SAAUgF,EAAKkmH,oBACfjoG,QAASje,EAAKmmH,wBACdtuH,SAAWmI,EAAKnO,MAAM60C,aAAe1mC,EAAKnO,MAAM8H,SAAW,OAAS,OACpEitH,iBAAmB,SAACxjG,GAAD,MAAgB,wCACnCpuB,UAAoC,UAAzBgL,EAAKnO,MAAMgX,UAAwB5T,IAAO8iB,OAAS9iB,IAAO+iB,cAI3EjhB,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAM/U,cAAe,SAAUd,eAAgB,SAAUD,WAAY,SAAUyO,UAAW,UAErFH,EAAKpI,MAAMitH,mBACqB,OAA/B7kH,EAAKpI,MAAMwqD,gBACTrrD,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAK/V,MAAO,QACVsF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMnU,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAGX,GAAI,CAAC,EAAE,IAA9D,2CAGAuE,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMhV,GAAIwN,EAAKnO,MAAM60C,WAAa,EAAI,EAAGj0C,cAAe,CAAC,SAAS,OAAQf,WAAY,SAAUC,eAAgB,UAE9GqO,EAAKpI,MAAMwqD,gBAAgBlO,UAAUx/C,OAAS,EAC5CsL,EAAKpI,MAAMwqD,gBAAgBlO,UAAU/5C,IAAI,SAAC2pD,EAASlmD,GACjD,IAAM+wB,EAAe3uB,EAAKqlH,gBAAgBvhE,GAC1C,OACE/sD,EAAA3F,EAAAC,cAACo1H,EAAA,EAADl1H,OAAAC,OAAA,CAAa8I,IAAG,oBAAAR,OAAsBgqD,IAAgBn1B,EAAtD,CAAoEt5B,YAAc,SAAA4F,GAAM+E,EAAK6lH,eAAe5qH,EAAE6oD,SAIlH/sD,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMnU,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAGX,GAAI,GAA3D,sEAQNuE,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMnU,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAGX,GAAI,GAA3D,wDA6BZwN,EAAKnO,MAAM60C,YAA2C,OAA7B1mC,EAAKpI,MAAMiG,gBAAoD,OAAxBmC,EAAKnO,MAAM+0C,UAAmD,OAA9B5mC,EAAKpI,MAAMioD,iBACzG9oD,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE9V,WAAY,SACZC,eAAgB,UAEhBoF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE3M,GAAI,EACJ3F,GAAI,CAAC,EAAG,GACRqC,KAAM,SACNtE,aAAc,EACdkI,UAAW,OACX/F,QAAU,SAAA6F,GAAC,OAAI+E,EAAKmlH,OAAOlqH,KAN7B,cAgBV,OAAIrJ,KAAKC,MAAM60C,WAEX3vC,EAAA3F,EAAAC,cAACm1H,EACK50H,KAAKC,OAMbkF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAOyhG,OAAQr3G,KAAKC,MAAMo3G,QACxBlyG,EAAA3F,EAAAC,cAACw1H,EAAA,EAAD,CAAW1d,UAAWv3G,KAAKw3G,YACzBryG,EAAA3F,EAAAC,cAACw1H,EAAA,EAAUpc,OAAX,CAAkB14F,MAAOA,IAEzBhb,EAAA3F,EAAAC,cAACw1H,EAAA,EAAUxd,KAAX,KACEtyG,EAAA3F,EAAAC,cAACm1H,EAAD,OAEFzvH,EAAA3F,EAAAC,cAACw1H,EAAA,EAAUrjB,OAAX,KACEzsG,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CAAMjO,GAAI,CAAC,EAAE,GAAI9G,cAAe,CAAC,SAAU,OAAQhB,MAAO,EAAGE,eAAgB,UAC3EoF,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE3M,GAAI,EACJ3F,GAAI,CAAC,EAAG,GACRjC,aAAc,EACdkI,UAAW,OACX/F,QAAU,SAAA6F,GAAC,OAAI+E,EAAKopG,WAAWnuG,IAC/B1D,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,UANxC,SAW+B,OAA7B/H,KAAKgG,MAAMiG,gBAAmD,OAAxBjM,KAAKC,MAAM+0C,UAAmD,OAA9Bh1C,KAAKgG,MAAMioD,iBAC/E9oD,EAAA3F,EAAAC,cAACmW,EAAA,EAAD,CACE3M,GAAI,EACJ3F,GAAI,CAAC,EAAG,GACRjC,aAAc,EACdmC,QAAU,SAAA6F,GAAC,OAAI+E,EAAKmlH,OAAOlqH,IAC3BjG,UAAWC,IAAO4iB,eAClBtgB,KAAM3F,KAAKC,MAAM8H,SAAW,QAAU,UANxC,sBA5qBK/E,IAAM1C,WAgsBdu0C,8FC5sBTyiE,EAAY,SAAAjgG,GAAA,IAAE3F,EAAF2F,EAAE3F,SAAU6lG,EAAZlgG,EAAYkgG,UAAct3G,EAA1BN,OAAAu1H,EAAA,EAAAv1H,CAAA0X,EAAA,iCAChB89G,EAAA31H,EAAAC,cAAC21H,EAAA,EAAD,CACEpwH,EAAG,EACH0qB,OAAQ,EACRpsB,GAAI,OACJ2F,GAAI,OACJ7H,OAAQ,OACRC,aAAc,EACd2G,SAAU,OACVnI,MAAQI,EAAMJ,MAAQI,EAAMJ,MAAQ,OACpCqG,SAAWjG,EAAMiG,SAAWjG,EAAMiG,SAAW,OAC7CD,SAAWhG,EAAMgG,SAAWhG,EAAMgG,SAAW,SAE7CkvH,EAAA31H,EAAAC,cAAC21H,EAAA,EAAD,CACE9tH,IAAK,IACLC,OAAQ,EACRqJ,MAAO,IACPpJ,SAAU,YAEV2tH,EAAA31H,EAAAC,cAAC21H,EAAA,EAAO9rH,KAAR,CACEquG,UAAQ,EACRhiG,KAAM,QACNhQ,KAAM,QACNnC,QAAS+zG,EACThuG,UAAYtJ,EAAMsJ,UAAYtJ,EAAMsJ,UAAa,eAGrD4rH,EAAA31H,EAAAC,cAAC21H,EAAA,EAAD,CACEh0H,OAAQ,OACRH,KAAM,WACNJ,cAAe,SACfuC,UAAW,CAAEnD,EAAMo1H,QAAUhyH,IAAO0iB,GAAK,MACzChlB,MAAO,CACLiH,SAAU,OACVstH,iBAAiB,YACjBC,mBAAmB,eACnBC,eAAiBv1H,EAAMuT,WAAqB,KAAR,MACpCiiH,gBAAgB,mCAChBjiH,WAAYvT,EAAMuT,WAAavT,EAAMuT,WAAa,MAEpDlS,gBAAiB,UAEhBoQ,KAKP4lG,EAAUuB,OAAS,SAAC54G,GAAD,OACjBk1H,EAAA31H,EAAAC,cAAC21H,EAAA,EAAD,CACEv1H,MAAO,EACPe,GAAI,CAAC,EAAE,GACPgI,GAAI,CAAC,EAAE,GACP6F,GAAKxO,EAAMwO,GAAKxO,EAAMwO,GAAMxO,EAAM0V,KAAO,EAAI,CAAC,EAAE,GAChD22B,aAAersC,EAAMqsC,aAAersC,EAAMqsC,aAAe,kBAEzD6oF,EAAA31H,EAAAC,cAAC21H,EAAA,EAAD,CACEztH,GAAI,CAAC,EAAE,GACP7H,WAAY,SACZe,cAAe,UAEbZ,EAAM0V,MAAQw/G,EAAA31H,EAAAC,cAAC21H,EAAA,EAAD,CAAOv1H,MAAQI,EAAMy1H,WAAaz1H,EAAMy1H,WAAa,OAASzlH,IAAKhQ,EAAM0V,OACzFw/G,EAAA31H,EAAAC,cAAC21H,EAAA,EAAQxlH,GAATjQ,OAAAC,OAAA,CACEgB,GAAI,EACJW,SAAU,CAAC,EAAE,GACbL,MAAO,YACPO,UAAW,SACXiE,GAAIzF,EAAM0V,KAAO,EAAI,EACrB9F,WAAY,aACR5P,EAAMw7B,YAETx7B,EAAMkgB,OAGPlgB,EAAM64G,UACNqc,EAAA31H,EAAAC,cAAC21H,EAAA,EAAQ7oF,GAAT5sC,OAAAC,OAAA,CACE6O,GAAI,CAAC,EAAE,GACPjN,WAAY,EACZD,SAAU,CAAC,EAAE,GACbyP,WAAY,IACZ9P,MAAO,YACPO,UAAW,UACPxB,EAAM01H,eAET11H,EAAM64G,UAIT74G,EAAM84G,WACNoc,EAAA31H,EAAAC,cAAC21H,EAAA,EAAQ7oF,GAAT,CAAY99B,GAAI,EAAGlN,SAAU,CAAC,EAAE,GAAIE,UAAW,SAAUD,WAAY,EAAGwP,WAAY,IAAK9P,MAAO,aAC7FjB,EAAM84G,cAOjBzB,EAAUG,KAAO,SAAA/9F,GAAA,IAAEhI,EAAFgI,EAAEhI,SAAazR,EAAfN,OAAAu1H,EAAA,EAAAv1H,CAAA+Z,EAAA,qBACfy7G,EAAA31H,EAAAC,cAAC21H,EAAA,EAADz1H,OAAAC,OAAA,CACEC,MAAO,EACP8H,GAAI,CAAC,EAAE,IACH1H,GAEHyR,IAaL4lG,EAAU1F,OAAS,SAAAvqF,GAAA,IAAE3V,EAAF2V,EAAE3V,SAAF/R,OAAAu1H,EAAA,EAAAv1H,CAAA0nB,EAAA,qBACjB8tG,EAAA31H,EAAAC,cAAC21H,EAAA,EAAD,CACEn0H,KAAM,WACNlB,eAAgB,SAChBkI,UAAW,EACXyM,YAAa,aACb/M,GAAI,CAAC,EAAE,GACPD,GAAI,GAEHgK,IAKL4lG,EAAUse,WAAa,SAAAprF,GAAA,IAAEhnC,EAAFgnC,EAAEhnC,QAAF7D,OAAAu1H,EAAA,EAAAv1H,CAAA6qC,EAAA,oBACrB2qF,EAAA31H,EAAAC,cAAC21H,EAAA,EAAD,CACE5tH,SAAU,WACVF,IAAK,IACL+J,KAAM,IACN/C,EAAG,EACHyX,GAAI,SAEJovG,EAAA31H,EAAAC,cAAC21H,EAAA,EAAOxd,QAAR,CACEp0G,QAASA,EACTm0G,UAAQ,EACRhiG,KAAM,YACNhQ,KAAM,YAKG2xG,2KC7IT1F,6MAGJ7tG,cAAgB,gFAEV/D,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,4JAK9CD,KAAKkE,+IAIL,IAAM2xH,GAAW,IAAIvpH,MAAOwpH,cACtBpQ,EAAoB1lH,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa,YACrEqoH,EAAcrQ,EAAoB,IAAM,EAAE,EAChD,OACEsQ,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CACE7tF,GAAI,EACJ55B,GAAI,SACJ1O,WAAY,SACZe,cAAe,SACfuC,UAAWC,IAAO+uH,OAClB9wH,gBAAiB,QACjBvB,eAAgB,cAEhBi2H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CACEp2H,MAAO,EACP8H,GAAI,CAAC,EAAE,GACP5H,eAAgB,UAEhBi2H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CACEp2H,MAAO,EACPuB,OAAQ,CAAC,OAAO,QAChBtB,WAAY,aACZmG,SAAU,CAAC,OAAO,QAClBlG,eAAgB,aAChBc,cAAe,CAAC,SAAS,QAEzBm1H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMp2H,MAAO,CAAC,EAAEk2H,GAAcl1H,cAAe,SAAUO,OAAQ,CAAC,OAAO,SACrE40H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAQrmH,GAAT,CAAYnO,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAI0H,GAAI,EAAG/H,MAAO,aAAlG,aAGA80H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMp2H,MAAO,EAAGgB,cAAe,UAC7Bm1H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CACEttH,GAAI,CAAC,EAAE,GACP1H,MAAO,OACPK,SAAU,CAAC,EAAE,GACbqI,WAAY,OACZiG,WAAY,YACZpO,UAAW,CAAC,SAAS,QACrBuqB,KAAM,mCAENgqG,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,iBAA5B,gBATF,kBAWAJ,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CACEttH,GAAI,CAAC,EAAE,GACP1H,MAAO,OACPK,SAAU,CAAC,EAAE,GACbqI,WAAY,OACZiG,WAAY,YACZpO,UAAW,CAAC,SAAS,QACrBuqB,KAAM,6FAENgqG,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,gBAA5B,gBATF,iBAWAJ,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMrtH,GAAI,CAAC,EAAE,GAAI/I,MAAO,EAAGE,eAAgB,CAAC,SAAS,eACnDi2H,EAAAx2H,EAAAC,cAAC42H,EAAA,EAAD,CACEn1H,MAAO,OACPk5D,GAAG,oBACHh3D,UAAWC,IAAOqgB,MAElBsyG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CACEz0H,WAAY,EACZN,MAAO,OACPK,SAAU,CAAC,EAAE,GACbqI,WAAY,OACZiG,WAAY,YACZpO,UAAW,CAAC,SAAS,SAErBu0H,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,oBAA5B,gBARF,uBAYJJ,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CACEttH,GAAI,CAAC,EAAE,GACP1H,MAAO,OACPK,SAAU,CAAC,EAAE,GACbqI,WAAY,OACZiG,WAAY,YACZpO,UAAW,CAAC,SAAS,QACrBuqB,KAAM,mDAENgqG,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,kBAA5B,wCATF,mBAWAJ,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CACEttH,GAAI,CAAC,EAAE,GACP1H,MAAO,OACPK,SAAU,CAAC,EAAE,GACbqI,WAAY,OACZiG,WAAY,YACZpO,UAAW,CAAC,SAAS,QACrBuqB,KAAM,iEAENgqG,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,iBAA5B,gBATF,oBAcF1Q,GACEsQ,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMp2H,MAAO,CAAC,EAAEk2H,GAAcl1H,cAAe,SAAUO,OAAQ,CAAC,OAAO,SACrE40H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAQrmH,GAAT,CAAYnO,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAI0H,GAAI,EAAG/H,MAAO,aAAlG,cAGA80H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMp2H,MAAO,EAAGgB,cAAe,UAC7Bm1H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMrtH,GAAI,CAAC,EAAE,GAAI/I,MAAO,EAAGE,eAAgB,CAAC,SAAS,eACnDi2H,EAAAx2H,EAAAC,cAAC42H,EAAA,EAAD,CACEn1H,MAAO,OACPk5D,GAAI,cACJh3D,UAAWC,IAAOqgB,MAElBsyG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMx0H,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ0I,WAAY,QACtHosH,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,uBAA5B,gBADF,eAKJJ,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMrtH,GAAI,CAAC,EAAE,GAAI/I,MAAO,EAAGE,eAAgB,CAAC,SAAS,eACnDi2H,EAAAx2H,EAAAC,cAAC42H,EAAA,EAAD,CACEn1H,MAAO,OACPkC,UAAWC,IAAOqgB,KAClB02C,GAAI,yBAEJ47D,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMx0H,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ0I,WAAY,QACtHosH,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,wBAA5B,gBADF,gBAKJJ,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMrtH,GAAI,CAAC,EAAE,GAAI/I,MAAO,EAAGE,eAAgB,CAAC,SAAS,eACnDi2H,EAAAx2H,EAAAC,cAAC42H,EAAA,EAAD,CACEn1H,MAAO,OACPkC,UAAWC,IAAOqgB,KAClB02C,GAAI,2BAEJ47D,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMx0H,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ0I,WAAY,QACtHosH,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,0BAA5B,gBADF,kBAKJJ,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMrtH,GAAI,CAAC,EAAE,GAAI/I,MAAO,EAAGE,eAAgB,CAAC,SAAS,eACnDi2H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CAASlqG,KAAK,6BACZgqG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMx0H,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ0I,WAAY,QACtHosH,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,oBAA5B,gBADF,YAKJJ,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMrtH,GAAI,CAAC,EAAE,GAAI/I,MAAO,EAAGE,eAAgB,CAAC,SAAS,eACnDi2H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CAASlqG,KAAK,sGACZgqG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMx0H,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ0I,WAAY,QACtHosH,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,oBAA5B,gBADF,aAQZJ,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMp2H,MAAO,CAAC,EAAEk2H,GAAcl1H,cAAe,SAAUO,OAAQ,CAAC,OAAO,SACrE40H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAQrmH,GAAT,CAAYnO,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAI0H,GAAI,EAAG/H,MAAO,aAAlG,wBAGA80H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMx0H,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAIL,MAAO,OAAQ0I,WAAY,QACvGosH,EAAAx2H,EAAAC,cAAA,QAAM02H,KAAK,MAAMC,aAAW,SAA5B,gBADF,uBAIFJ,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMp2H,MAAO,CAAC,EAAEk2H,GAAcl1H,cAAe,UAC3Cm1H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAQrmH,GAAT,CAAYnO,UAAW,CAAC,SAAS,QAASoO,WAAY,YAAatO,SAAU,CAAC,EAAE,GAAI0H,GAAI,EAAG/H,MAAO,aAAlG,WAGA80H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAMp1H,cAAe,MAAOd,eAAgB,CAAC,eAAe,eAC1Di2H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CAASlqG,KAAK,mCACZgqG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAOhmH,IAAI,4BAA4B7O,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAI8H,GAAI,CAAC,EAAE,GAAIkN,UAAW,EAAG9U,aAAc,SAEjH20H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CAASlqG,KAAK,4BACZgqG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAOhmH,IAAI,6BAA6B7O,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAI8H,GAAI,CAAC,EAAE,GAAIkN,UAAW,EAAG9U,aAAc,SAElH20H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CAASlqG,KAAK,8BACZgqG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAOhmH,IAAI,4BAA4B7O,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAI8H,GAAI,CAAC,EAAE,GAAIkN,UAAW,EAAG9U,aAAc,SAEjH20H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CAASlqG,KAAK,mCACZgqG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAOhmH,IAAI,2BAA2B7O,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAI8H,GAAI,CAAC,EAAE,GAAIkN,UAAW,EAAG9U,aAAc,SAEhH20H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CAASlqG,KAAK,iCACZgqG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAOhmH,IAAI,2BAA2B7O,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAI8H,GAAI,CAAC,EAAE,GAAIkN,UAAW,EAAG9U,aAAc,SAEhH20H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CAASlqG,KAAK,gDACZgqG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAOhmH,IAAI,6BAA6B7O,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAI8H,GAAI,CAAC,EAAE,GAAIkN,UAAW,EAAG9U,aAAc,SAElH20H,EAAAx2H,EAAAC,cAACy2H,EAAA,EAAD,CAASlqG,KAAK,mCACZgqG,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CAAOhmH,IAAI,+BAA+B7O,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAI8H,GAAI,CAAC,EAAE,GAAIkN,UAAW,EAAG9U,aAAc,aAM5H20H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CACEp2H,MAAO,EACPuB,OAAQ,CAAC,OAAO,QAChBP,cAAe,SACff,WAAY,CAAC,SAAS,YACtBC,eAAgB,CAAC,SAAS,aAE1Bi2H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CACEjxH,EAAG,EACHnF,MAAO,EACPC,WAAY,SACZC,eAAgB,SAChBuB,gBAAiB,YACjBT,cAAe,CAAC,SAAS,QAEzBm1H,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CACE/0H,MAAO,QACPO,UAAW,CAAC,SAAS,aAFvB,QAIUo0H,EAJV,qBAMAG,EAAAx2H,EAAAC,cAAC42H,EAAA,EAAD,CACEn1H,MAAO,OACPk5D,GAAI,oBACJr5D,MAAO,CAACq+B,eAAe,SAEvB42F,EAAAx2H,EAAAC,cAACw2H,EAAA,EAAD,CACE7tF,GAAI,EACJlnC,MAAO,OACPO,UAAW,CAAC,SAAS,aAHvB,+BAzOOnB,aAwPNsxG,2HC7PTjpG,mLACK,IAAAhC,EAAA3G,KAEDs2H,EAAW,SAACr2H,GAAD,OACfV,EAAAC,EAAAC,cAAC2F,EAAA,EAAQmnC,GAAT5sC,OAAAC,OAAA,CACE4B,WAAY,CAAC,EAAE,GACfN,MAAO,YACPH,MAAO,CACLlB,MAAM,OACN+B,WAAW,UAEbL,SAAU,CAAC,OAAO,GAClByP,WAAY,WACR/Q,GAEHA,EAAMyR,WAIX,OACEnS,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACEvF,MAAOG,KAAKC,MAAMJ,OAGfG,KAAKC,MAAMusC,MAAQxsC,KAAKC,MAAMusC,KAAK1pC,OAAO,EACzCvD,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACEtF,WAAY,UAEZP,EAAAC,EAAAC,cAAC62H,EACKt2H,KAAKC,OAEXV,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACErE,MAAO,CACL+G,OAAO,WAETtE,QAAU,SAAA6F,GAAC,OAAI1C,EAAK1G,MAAM+wC,iBAAiBrqC,EAAK1G,MAAMkgB,MAAMxZ,EAAK1G,MAAMusC,QAEvEjtC,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACEomC,UAAW,MACXC,QAAS,iCAETlsC,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACEoE,GAAI,EACJ5D,KAAM,OACN1E,MAAO,YACPkC,UAAWC,IAAOgQ,QAClB1N,KAAO3F,KAAKC,MAAM8H,SAAW,MAAQ,aAM7CxI,EAAAC,EAAAC,cAAC62H,EACKt2H,KAAKC,eArDOK,aA8DfqI,kxlBC9DT03B,mLAEF,IAAM56B,EAAY9F,OAAOC,OAAO,CAC9B8H,GAAG,EACH7H,MAAM,OACN8H,GAAG,CAAC,OAAO,IACX3H,KAAKC,MAAMwF,WAEb,OACGlG,EAAAC,EAAAC,cAAC0R,EAAA,EAAD,CACE1L,UAAWA,EACXoC,eAAe,EACfyI,SAAUtQ,KAAKC,MAAMqQ,SACrB7M,YAAazD,KAAKC,MAAMwD,aAExBlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuJ,GAAI,EACJnJ,WAAY,SACZe,cAAe,MACfd,eAAgB,UAGfC,KAAKC,MAAM8P,MACTxQ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE4vB,MAAO,SACPvf,IAAKjQ,KAAKC,MAAM8P,MAChB3O,OAASpB,KAAKC,MAAM8H,SAAW,QAAU,QACzClI,MAAQG,KAAKC,MAAM8H,SAAW,QAAU,SACpC/H,KAAKC,MAAMiQ,aAEflQ,KAAKC,MAAMs2H,YACbh3H,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE4vB,MAAO,SACP5pB,KAAM5F,KAAKC,MAAM0V,KACjBhQ,KAAO3F,KAAKC,MAAM8H,SAAW,QAAU,QACvC7G,MAAQlB,KAAKC,MAAMqgC,UAAYtgC,KAAKC,MAAMqgC,UAAY,UAClDtgC,KAAKC,MAAMmQ,YAGlB7Q,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyB,GAAI,EACJ6D,EAAG,CAAC,MAAM,OACV3D,aAAc,MACdvB,WAAY,SACZC,eAAgB,SAChBuB,gBAAkBtB,KAAKC,MAAMsgC,YAAcvgC,KAAKC,MAAMsgC,YAAcvgC,KAAKC,MAAMkI,MAAMC,OAAOiF,aAAamX,SAASna,QAElH9K,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE4vB,MAAO,SACP5pB,KAAM5F,KAAKC,MAAM0V,KACjBhQ,KAAO3F,KAAKC,MAAM8H,SAAW,QAAU,QACvC7G,MAAQlB,KAAKC,MAAMqgC,UAAYtgC,KAAKC,MAAMqgC,UAAY,UAClDtgC,KAAKC,MAAMmQ,aAKrB7Q,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE4B,WAAY,EACZD,SAAU,CAAC,EAAE,IACTvB,KAAKC,MAAMI,WAEdL,KAAKC,MAAMG,eA9DIE,aAsEd+/B,gHCtEThL,mLAGF,IAAM5vB,EAAY9F,OAAOC,OAAO,CAC9BoF,EAAE,GACFhF,KAAKC,MAAMwF,WACb,OACElG,EAAAC,EAAAC,cAAC0R,EAAA,EAAD,CACE1L,UAAWA,GAEXlG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEI,WAAY,SACZe,cAAe,UAEftB,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE+F,KAAM,QACNzE,MAAO,WACP0E,KAAM5F,KAAKC,MAAM0V,KAAO3V,KAAKC,MAAM0V,KAAO,eACtC3V,KAAKC,MAAMmQ,YAGfpQ,KAAKC,MAAMG,MACTb,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE8F,GAAI,EACJnE,SAAU,EACVL,MAAO,WACPO,UAAW,SACXI,wBAAyB,CACvBC,OAAO9B,KAAKC,MAAMG,OAEhBJ,KAAKC,MAAMI,YAInBL,KAAKC,MAAMyR,kBAlCDpR,aA0CP+0B,0PCjCT0G,6MAEJ/1B,MAAQ,CACNsoH,OAAM,KAIRvqH,cAAgB,OAChBmO,oBAAqB,IAwDrB+c,+BAAY,SAAAlI,IAAA,IAAAyvG,EAAAh9G,EAAA5S,EAAA+lB,EAAA0C,EAAA1qB,EAAA84C,EAAAruB,EAAA8b,EAAA42D,EAAAzpF,EAAAqB,EAAAy5D,EAAA9rD,EAAAo5D,EAAAD,EAAAh2C,EAAA83C,EAAAD,EAAA53C,EAAAuF,EAAAymF,EAAAp5E,EAAAq5E,EAAAC,EAAAlhF,EAAAzrB,EAAAs2D,EAAAs2C,EAAAr2C,EAAAs2C,EAAA5sG,EAAAksC,EAAA2gE,EAAArzF,EAAA2+C,EAAA5+C,EAAAkH,EAAAqsF,EAAAnvB,EAAAnhE,EAAAo8D,EAAAm0B,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAliE,GAAAtoC,GAAAkyB,GAAApjC,GAAA3P,GAAAsrH,GAAA57G,GAAAH,GAAAg8G,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA33F,GAAA43F,GAAAzxH,UAAA,OAAAsQ,EAAA/X,EAAAoY,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,UAAMy+G,EAANkC,GAAA51H,OAAA,QAAAoE,IAAAwxH,GAAA,GAAAA,GAAA,GAAgB,MAItB/xH,EAAKuL,oBAAuBvL,EAAK1G,MAAMwL,OAAU9E,EAAK1G,MAAMiM,YAJtD,CAAA+a,EAAAlP,KAAA,eAAAkP,EAAAgB,OAAA,UAKD,GALC,UAQJzO,EAAyC,SAAhC7S,EAAK1G,MAAMwZ,iBAEpB7S,EAAyB,OAAd4vH,EACX7pG,EAAYhmB,EAAK1G,MAAM0sB,UACxB6pG,IACHA,EAAY7pG,EAAU/mB,MAGlBypB,EAAa1C,EAAU1sB,MACvB0E,EAAW0qB,GAAcA,EAAW1qB,SAAW0qB,EAAW1qB,SAAagC,EAAK1G,MAAM8H,SAAW,EAAI,EAEjG01C,EAAkD,qBAA5B92C,EAAK1G,MAAMw9C,cAA+B92C,EAAK1G,MAAMw9C,aAE7EruB,EAAS,MACTzoB,EAAK1G,MAAMwL,MAtBL,CAAAwb,EAAAlP,KAAA,UAAAkP,EAAAsoC,GAuBAinE,EAvBAvvG,EAAAlP,KAwBD,iBAxBCkP,EAAAsoC,GAAA,GAgCD,cAhCCtoC,EAAAsoC,GAAA,GAwCD,eAxCCtoC,EAAAsoC,GAAA,GAoDD,QApDCtoC,EAAAsoC,GAAA,GA4DD,oBA5DCtoC,EAAAsoC,GAAA,GAwED,eAxECtoC,EAAAsoC,GAAA,GAgFD,qBAhFCtoC,EAAAsoC,GAAA,GAwFD,kCAxFCtoC,EAAAsoC,GAAA,GA6GD,6BA7GCtoC,EAAAsoC,GAAA,GAkID,aAlICtoC,EAAAsoC,GAAA,GA0ID,gBA1ICtoC,EAAAsoC,GAAA,GAmKD,yBAnKCtoC,EAAAsoC,GAAA,GA2LD,oBA3LCtoC,EAAAsoC,GAAA,GAmND,sBAnNCtoC,EAAAsoC,GAAA,GA2ND,UA3NCtoC,EAAAsoC,GAAA,IAoOD,SApOCtoC,EAAAsoC,GAAA,IA4OD,sBA5OCtoC,EAAAsoC,GAAA,IAqPD,iBArPCtoC,EAAAsoC,GAAA,IA8PD,QA9PCtoC,EAAAsoC,GAAA,IA0QD,WA1QCtoC,EAAAsoC,GAAA,IAgTD,aAhTCtoC,EAAAsoC,GAAA,IA+TD,aA/TCtoC,EAAAsoC,GAAA,IA8UD,qBA9UCtoC,EAAAsoC,GAAA,IA8VD,QA9VCtoC,EAAAsoC,GAAA,IAiXD,oBAjXCtoC,EAAAsoC,GAAA,IAwZD,aAxZCtoC,EAAAsoC,GAAA,IA+jBD,qBA/jBCtoC,EAAAsoC,GAAA,IA+qBD,WA/qBCtoC,EAAAsoC,GAAA,6BAAAtoC,EAAAlP,KAAA,GAyBWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAzBlH,eAyBJruB,EAzBInI,EAAAnN,OA0BUlT,GACZD,EAAKyL,aAAa,CAChBggB,aAAahD,EAAO3F,aA5BpBxC,EAAAgB,OAAA,4BAiCEijB,EAAYvkC,EAAK5C,cAAck9F,kBAAkBt6F,EAAK1G,MAAMiM,aAjC9D+a,EAAAlP,KAAA,GAkCwCpR,EAAK5C,cAAc+9F,8BAA8Bn7F,EAAK1G,MAAMiM,aAlCpG,eAkCE41F,EAlCF76E,EAAAnN,KAmCJnT,EAAKyL,aAAa,CAChB84B,YACA42D,kCArCE76E,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GAyCWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAzClH,eAyCJruB,EAzCInI,EAAAnN,OA0CUlT,IACRyR,EAAa,KAC+B,qBAArC1R,EAAK1G,MAAMiM,YAAY+vC,WAA6Bt1C,EAAK1G,MAAMiM,YAAY+vC,aACpF5jC,EAAa+W,EAAO3F,YAEtB9iB,EAAKyL,aAAa,CAChBiG,gBAhDA4O,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GAqDWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GArDlH,eAqDJruB,EArDInI,EAAAnN,OAsDUlT,GACZD,EAAKyL,aAAa,CAChBm+C,IAAInhC,EAAO3F,aAxDXxC,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GA+DMpR,EAAK5C,cAAc+uE,eAAensE,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GA/DlF,eAAA/jC,EAAAuN,EAAAnN,KA8DFq5D,EA9DEz5D,EA8DFy5D,4BAGEvsE,GAAYusE,IACdxsE,EAAKyL,aAAa,CAChBumH,gBAAgBxlD,EAA4B1pD,aAE9C2F,EAAS+jD,GArEPlsD,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GAyEWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAzElH,eAyEJruB,EAzEInI,EAAAnN,OA0EUlT,GACZD,EAAKyL,aAAa,CAChBuF,WAAWyX,EAAO3F,aA5ElBxC,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GAiFWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAjFlH,eAiFJruB,EAjFInI,EAAAnN,OAkFUlT,GACZD,EAAKyL,aAAa,CAChB4H,iBAAiBoV,EAAO3F,aApFxBxC,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GA4FMpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GA5F7G,eAAAp2B,EAAAJ,EAAAnN,KA0FF2mE,EA1FEp5D,EA0FFo5D,2BACAD,EA3FEn5D,EA2FFm5D,8BAGiCC,IAC7B75E,GACFD,EAAKyL,aAAa,CAChBk8G,OAAM,EACN7tC,4BACAD,gCAIJpxD,EAAS,CACPqxD,4BACAD,gCAzGAv5D,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GAiHMpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAjH7G,eAAAjT,EAAAvjB,EAAAnN,KA+GFwoE,EA/GE93C,EA+GF83C,sBACAD,EAhHE73C,EAgHF63C,yBAG4BC,IACxB17E,GACFD,EAAKyL,aAAa,CAChBk8G,OAAM,EACNhsC,uBACAD,2BAIJjzD,EAAS,CACPkzD,uBACAD,2BA9HAp7D,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GAmIWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAnIlH,eAmIJruB,EAnIInI,EAAAnN,OAoIUlT,GACZD,EAAKyL,aAAa,CAChB+zB,SAAS/W,EAAO3F,aAtIhBxC,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GA2I0CqP,QAAQkD,IAAI,CACxD3jB,EAAKsoB,UAAU,mBACftoB,EAAK5C,cAAc2hG,aAAa/+F,EAAK1G,MAAMiM,eA7IzC,eAAAu+B,EAAAxjB,EAAAnN,KAAAk2B,EAAArwC,OAAAi5H,EAAA,EAAAj5H,CAAA8qC,EAAA,GA2IGgsF,EA3IHzmF,EAAA,GA2ImBqN,EA3InBrN,EAAA,GAgJAymF,GAAmBA,EAAgBhzF,eAAiBgzF,EAAgBjzF,aAAe6Z,IAE/Eq5E,EAAYD,EAAgBhzF,cAAcruB,MAAMioC,GAChDs5E,EAAUF,EAAgBjzF,YAAYpuB,MAAMioC,GAE9Cz2C,GACFD,EAAKyL,aAAa,CAChBk8G,OAAM,EACNqI,UACAD,cAIJtnG,EAAS,CACPunG,UACAD,cA/JAzvG,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GAoKwDqP,QAAQkD,IAAI,CACtE3jB,EAAK5C,cAAc2/E,cACnB/8E,EAAK5C,cAAco7E,eAAe,gBAAgBx4E,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAC7G92C,EAAK5C,cAAco7E,eAAe,kBAAkBx4E,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,KAvK7G,eAAAhI,EAAAxuB,EAAAnN,KAAAkQ,EAAArqB,OAAAi5H,EAAA,EAAAj5H,CAAA81C,EAAA,GAoKG6qC,EApKHt2D,EAAA,GAoKY4sG,EApKZ5sG,EAAA,IAoK+Bu2D,EApK/Bv2D,EAAA,KA0KmB4sG,GAAsBt2C,IACrCu2C,EAAmBt2C,EAAgBzlE,GAAG,GAAKylE,EAAgBnrE,MAAMkrE,EAAS92D,IAAI,MAAMvR,KAAK2+G,GAAsB,EAEjHhwH,GACFD,EAAKyL,aAAa,CAChBk8G,OAAM,EACNuI,mBACAD,uBAIJxnG,EAAS,CACPynG,mBACAD,uBAvLA3vG,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GA4LgDqP,QAAQkD,IAAI,CAC9D3jB,EAAK5C,cAAco7E,eAAe,MAAMx4E,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GACnG92C,EAAK5C,cAAco7E,eAAe,WAAWx4E,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GACxG92C,EAAK5C,cAAco7E,eAAe,aAAax4E,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,KA/LxG,eAAAxzB,EAAAhD,EAAAnN,KAAAq8C,EAAAx2D,OAAAi5H,EAAA,EAAAj5H,CAAAsqB,EAAA,GA4LG6sG,EA5LH3gE,EAAA,GA4La1yB,EA5Lb0yB,EAAA,IA4L2BisB,EA5L3BjsB,EAAA,KAkMe1yB,GAAiBqzF,IAC5BtzF,EAAc4+C,EAAYtnE,GAAG,GAAKsnE,EAAYhtE,MAAM0hH,EAAUttG,IAAI,MAAMvR,KAAKwrB,GAAiB,EAEhG78B,GACFD,EAAKyL,aAAa,CAChBk8G,OAAM,EACN9qF,cACAC,kBAIJrU,EAAS,CACPoU,cACAC,kBA/MAxc,EAAAgB,OAAA,4BAAAhB,EAAAlP,KAAA,GAoNWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GApNlH,eAoNJruB,EApNInI,EAAAnN,OAqNUlT,GACZD,EAAKyL,aAAa,CAChB2wE,kBAAkB3zD,EAAO3F,aAvNzBxC,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IA4NqBpR,EAAK5C,cAAc8mC,cAAclkC,EAAK1G,MAAMiM,YAAYsN,GA5N7E,gBA4NEkxB,EA5NFzjB,EAAAnN,KA6NAlT,GACFD,EAAKyL,aAAa,CAChB0tF,MAAMp1D,IAA0B,IAGpCtb,EAASsb,EAlOLzjB,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IAqOWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GArOlH,gBAqOJruB,EArOInI,EAAAnN,OAsOUlT,GACZD,EAAKyL,aAAa,CAChBymH,SAASzpG,EAAO3F,aAxOhBxC,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IA6OWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GA7OlH,gBA6OJruB,EA7OInI,EAAAnN,OA8OUlT,GACZD,EAAKyL,aAAa,CAChB0mH,2BAA2BttH,WAAW4jB,GAAQ,EAAI,KAAO,OACzD2pG,kBAAkBvtH,WAAW4jB,GAAQziB,QAAQhI,KAjP7CsiB,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IAsPWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAtPlH,gBAsPJruB,EAtPInI,EAAAnN,OAuPUlT,GACZD,EAAKyL,aAAa,CAChBo0B,aAAah7B,WAAW4jB,GAAQziB,QAAQhI,GACxCq0H,sBAAsBxtH,WAAW4jB,GAAQ,EAAI,KAAO,SA1PpDnI,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IA+PWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GA/PlH,gBA+PJruB,EA/PInI,EAAAnN,OAgQUlT,IACRmwH,EAAW,KAC+B,qBAAnCpwH,EAAK1G,MAAMiM,YAAY6vC,SAA2Bp1C,EAAK1G,MAAMiM,YAAY6vC,WAClFg7E,EAAWvrH,WAAW4jB,GAAQziB,QAAQhI,IAExCgC,EAAKyL,aAAa,CAChB2kH,cAtQA9vG,EAAAgB,OAAA,0BA2QAthB,EAAK1G,MAAMiM,YAAYskC,YAAa7pC,EAAK1G,MAAMiM,YAAYskC,UAAUF,YA3QrE,CAAArpB,EAAAlP,KAAA,iBA4QI6vF,EAAiBjoG,OAAOC,OAAO,GAAG+G,EAAK1G,MAAMiM,cACpC81B,KAAOriC,OAAOC,OAAO,GAAG+G,EAAK1G,MAAMiM,YAAYskC,UAAUF,aACxEs3D,EAAe9yF,UAAYnV,OAAO8J,OAAO9C,EAAK1G,MAAMiM,YAAY4I,WAGhE8yF,EAAe5lE,KAAKv2B,MAAQm8F,EAAe5lE,KAAKp8B,KAG5CgiG,EAAep3D,UAAUk4D,cAC3Bd,EAAep3D,UAAUk4D,aAAa3jG,QAAS,SAAA4jG,GAC7C,IAAMjJ,EAAgBkI,EAAe9yF,UAAU2X,KAAM,SAAAznB,GAAC,OAAKA,EAAEY,OAAS+iG,EAAY/iG,OAClF,GAAI85F,EAAc,CAChB,IAAMkJ,EAAchB,EAAe9yF,UAAUmY,QAAQyyE,GACrDkI,EAAe9yF,UAAU8zF,GAAeD,KAzR5C1hF,EAAAlP,KAAA,IA8RapR,EAAK5C,cAAco7E,eAAe,MAAMx4E,EAAK1G,MAAMwL,MAAMm8F,EAAejhG,EAAK1G,MAAMuN,SAAQ,GA9RxG,SA8RF4hB,EA9REnI,EAAAnN,KAAAmN,EAAAlP,KAAA,0BAAAkP,EAAAlP,KAAA,IAiSapR,EAAKsoB,UAAU,YAjS5B,SAiSFG,EAjSEnI,EAAAnN,KAAA,gBAoSAsV,GAAUxoB,IACPwoB,EAAO9qB,QAKVqC,EAAKyL,aAAa,CAChB6mH,QAAO,IALTtyH,EAAKyL,aAAa,CAChB6mH,OAAOztH,WAAW4jB,GAAQziB,QAAQhI,MAvSpCsiB,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IAiTWpR,EAAK5C,cAAco7E,eAAe,MAAMx4E,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,SAAQ,GAjT9G,gBAiTJ4hB,EAjTInI,EAAAnN,OAmTUlT,IACPwoB,EAAO9qB,QAKVqC,EAAKyL,aAAa,CAChB8mH,eAAc,IALhBvyH,EAAKyL,aAAa,CAChB8mH,cAAc1tH,WAAW4jB,GAAQziB,QAAQhI,MAtT3CsiB,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IAgUWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAhUlH,gBAgUJruB,EAhUInI,EAAAnN,OAkUUlT,IACPwoB,EAAO9qB,QAKVqC,EAAKyL,aAAa,CAChBkuE,UAAS,IALX35E,EAAKyL,aAAa,CAChBkuE,SAAS90E,WAAW4jB,GAAQziB,QAAQhI,MArUtCsiB,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IA+UWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GA/UlH,gBA+UJruB,EA/UInI,EAAAnN,OAiVUlT,IACPwoB,EAAO9qB,QAKVqC,EAAKyL,aAAa,CAChBytE,kBAAiB,IALnBl5E,EAAKyL,aAAa,CAChBytE,kBAAqC,IAAnBr0E,WAAW4jB,IAAaziB,QAAQhI,MApVpDsiB,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IA+VWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GA/VlH,cA+VJruB,EA/VInI,EAAAnN,QAiWUlT,EAjWV,CAAAqgB,EAAAlP,KAAA,aAkWGqX,EAAO9qB,QAlWV,CAAA2iB,EAAAlP,KAAA,aAmWM0uB,EAAWj7B,WAAW4jB,GAAQziB,QAAQhI,MACvBgC,EAAK1G,MAAM8H,eAAuCb,IAA1BylB,EAAU8f,aAA6B9f,EAAU8f,aApW9F,CAAAxlB,EAAAlP,KAAA,iBAAAkP,EAAAlP,KAAA,IAqW0CpR,EAAK5C,cAAc2+F,iBAAiB/7F,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,aArW1G,SAAA+a,EAAA09C,GAAA19C,EAAAnN,KAAAmN,EAAAlP,KAAA,mBAAAkP,EAAA09C,GAqWyH,KArWzH,SAqWMk+B,EArWN57E,EAAA09C,GAsWAh+D,EAAKyL,aAAa,CAChBq0B,WACAo8D,kBAxWF57E,EAAAlP,KAAA,mBA2WApR,EAAKyL,aAAa,CAChBq0B,UAAS,IA5WX,gBAAAxf,EAAAgB,OAAA,6BAkXA+uG,EAAuB,EACvBC,GAAwB,GAEtBC,GAAwB,WAC5B,IAAMiC,EAA4B5oG,SAASC,eAAe7pB,EAAK1G,MAAMof,UAAYkR,SAASC,eAAe7pB,EAAK1G,MAAMof,UAAYkR,SAASC,eAAe7pB,EAAK1G,MAAMqP,OACnK,GAAI6pH,EAA0B,CAC5B,IAAMC,EAA6BhqH,OAAO07G,OAAOqO,GACjDnC,EAAuBoC,EAA2BnP,aAAaz+G,WAAW4tH,EAA2BC,IAAI,kBAAkB7tH,WAAW4tH,EAA2BC,IAAI,iBACrKpC,GAAwBmC,EAA2BlP,cAGnD8M,EAAuB9oH,SAAS8oH,GAAsB,EAAIlrH,KAAKM,IAAI4qH,EAAqBC,IAAyBA,GACjHA,GAAwBD,EAGpBA,IAAyBrwH,EAAKX,MAAMgxH,sBAClCpwH,GACFD,EAAKyL,aAAa,CAChB4kH,uBACAC,gCASV7nH,OAAOihB,oBAAoB,SAAU6mG,GAAsBvoH,KAAtBhP,OAAA25H,EAAA,EAAA35H,QAAA25H,EAAA,EAAA35H,CAAAgH,MACrCyI,OAAO+gB,iBAAiB,SAAU+mG,GAAsBvoH,KAAtBhP,OAAA25H,EAAA,EAAA35H,QAAA25H,EAAA,EAAA35H,CAAAgH,MAE9BC,GACFD,EAAKyL,aAAa,CAChB4kH,uBACAC,2BApZAhwG,EAAAgB,OAAA,yBA0ZEkvG,GAAuB39G,EAAS7S,EAAK5C,cAAc2J,gBAAgB,CAAC,QAAQ,WAAW,KAAK,iBAAmB,KAC/G0pH,GAAyB59G,EAAS29G,GAAsB,OAAcrrH,KAAKkB,IAAIrG,EAAK5C,cAAc2J,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmBQ,SAASvH,EAAK5C,cAAc8I,YAAYlG,EAAK5C,cAAc8I,YAAY,IAAIP,MAAQgP,OAAO,uBAAuB,uBAAuB1C,SAAS,EAAE,QAAQ2gH,GAAGjgH,UAAU,MAGxU+9G,GAAe,KACbliE,GA/ZF,YAAAjtD,OA+Z8BvB,EAAK1G,MAAMiM,YAAYgJ,QA/ZrD,KAAAhN,OA+ZgEsR,GAC9DqT,GAAalmB,EAAK5C,cAAcmqE,cAAc/Y,IAEpDkiE,GAAe,CAAC,CACd7oH,GAAG7H,EAAK1G,MAAMwL,MACdvK,MAAOyF,EAAK1G,MAAMiB,MAAQyF,EAAK1G,MAAMiB,MAAQ,OAAOyF,EAAK5C,cAAc2J,gBAAgB,CAAC,QAAQ,SAAS/G,EAAK1G,MAAMwL,MAAM,QAAQ,QAAQ+J,KAAK,KAAK,IACpJlE,KAAM,KAGW,OAAfub,GAxaA,CAAA5F,EAAAlP,KAAA,UAyaFs/G,GAAexqG,GAzab5F,EAAAlP,KAAA,sBA6auB,SAArBpR,EAAK1G,MAAMwL,MA7ab,CAAAwb,EAAAlP,KAAA,UAibA,IAHAs/G,GAAa,GAAG/lH,KAAO,GACjBytC,IAAiB,IAAIzyC,MAAOgN,UAC9BqC,GAAI,GACC3P,GAAE,EAAGA,IAAG,GAAIA,KACbsrH,GAAQ3wH,EAAK5C,cAAc8I,YAAYkyC,IAAgBy6E,IAAIxtH,GAAE,OAC7D0P,GAAI47G,GAAMh8G,OAAO,oBAElBtP,IAAG,GAAKA,IAAG,IAAQA,IAAG,GACzB2P,IAAiB,EAAd7P,KAAK2tH,SAAW,EAInB99G,IAAiB,EAAd7P,KAAK2tH,SAAW,EAGrBpC,GAAa,GAAG/lH,KAAKxE,KAAK,CAAC4O,KAAEC,OA7b/BsL,EAAAlP,KAAA,0BAgcMwD,GAAmB5U,EAAK5C,cAAcgoC,oBAAoB,OAAO,IAhcvE9kB,EAAAlP,KAAA,IAiciCpR,EAAK5C,cAAc8V,gBAAgBlT,EAAK1G,MAAMiM,YAAYgJ,QAAQsE,EAAO49G,GAAuBD,IAAqB,EAAM57G,IAjc5J,SAAA0L,EAAAnN,KAucmB/U,QAAQ,SAACgO,EAAE/G,GAC5B,IAAM0P,EAAI/U,EAAK5C,cAAc8I,YAAwB,IAAZkG,EAAEuH,WAAgBgB,OAAO,oBAC5DK,EAAInQ,WAAW7E,EAAK5C,cAAc4W,iBAAiB5H,EAAE8sF,SAAS,KACpEw3B,GAAa,GAAG/lH,KAAKxE,KAAK,CAAE4O,IAAGC,QA1cjC,SA8cFhV,EAAK5C,cAAc+oB,cAAcqoC,GAAckiE,IA9c7C,gBAmdgC,IAAhCA,GAAa,GAAG/lH,KAAKxO,UACjBy0H,GAAW53H,OAAOC,OAAO,GAAGy3H,GAAa,GAAG/lH,KAAK,KAC9CoK,EAAI/U,EAAK5C,cAAc8I,YAAY0qH,GAAS,oBAAoBiC,IAAI,EAAE,SAASl+G,OAAO,oBAC/F+7G,GAAa,GAAG/lH,KAAKxE,KAAKyqH,KAGxBC,GAAgB,EAChBC,GAAiB,GAEfC,GAAiB,WACrB,IAAMgC,EAAqBnpG,SAASC,eAAe7pB,EAAK1G,MAAMof,UAAYkR,SAASC,eAAe7pB,EAAK1G,MAAMof,UAAYkR,SAASC,eAAe7pB,EAAK1G,MAAMqP,OAC5J,GAAIoqH,EAAmB,CACrB,IAAMC,EAAsBvqH,OAAO07G,OAAO4O,GAC1ClC,GAAgBmC,EAAoB1P,aAAaz+G,WAAWmuH,EAAoBN,IAAI,kBAAkB7tH,WAAWmuH,EAAoBN,IAAI,iBACzI5B,GAAiBkC,EAAoBzP,cACjCsN,KAAkB7wH,EAAKX,MAAMwxH,eAAkB7wH,EAAKX,MAAMyxH,gBAC5D9wH,EAAKyL,aAAa,CAChBolH,iBACAC,eAAgB9wH,EAAKX,MAAMyxH,eAAiB9wH,EAAKX,MAAMyxH,eAAiBA,UAQhFroH,OAAOihB,oBAAoB,SAAUqnG,GAAe/oH,KAAfhP,OAAA25H,EAAA,EAAA35H,QAAA25H,EAAA,EAAA35H,CAAAgH,MACrCyI,OAAO+gB,iBAAiB,SAAUunG,GAAe/oH,KAAfhP,OAAA25H,EAAA,EAAA35H,QAAA25H,EAAA,EAAA35H,CAAAgH,MAG5BgxH,GAAev4G,IAEfw4G,GAAgB,CACpBz6G,UAAU,EACVy8G,UAAU,EACVx8G,SAAQ,EACRC,SAAS,KACT5K,SAAQ,EACRkK,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjBhW,eAAc,EACdO,OAAO,SAAA2K,GAAC,OAAIA,EAAE7R,OACd24H,KAAK,CACHC,YAAkB,eAAgB,CAC9B,CAAEC,OAAQ,EAAG74H,MAAO,WACpB,CAAE64H,OAAQ,GAAI74H,MAAO,cAG3Buc,cAAa9W,EAAK1G,MAAM8H,UAAmB,IAC3C2U,QAAQ,SAAA3a,GAAK,OAAIyJ,WAAWzJ,GAAO4K,QAAQ,GAAG,KAC9CyR,KAAK,CACH,CAAEszC,MAAO,CAAEljD,GAAI7H,EAAK1G,MAAMwL,OAAU+C,GAAI,iBAE1CoG,OAAQ,CAAEtN,IAAK,GAAIsJ,MAAO,EAAGiE,OAAQ,EAAGxD,KAAM,GAC9CqN,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACFxN,EAAQwN,EAAMC,OAAO,GAC3B,OACEm7G,EAAAx6H,EAAAC,cAACw6H,EAAA,EAAD,CACE7oH,MAAOA,GAGiB,kBAAjBwN,EAAMC,QAAuBD,EAAMC,OAAO/b,QAC/C8b,EAAMC,OAAOtW,IAAI,SAAA6I,GACf,IAAM4D,EAAe5D,EAAM4N,QACrBk7G,EAAkB9oH,EAAME,KAAK2N,WAEnC,OACE+6G,EAAAx6H,EAAAC,cAAC06H,EAAA,EAAD,CACEzxH,IAAK0I,EAAM5C,GACXtN,MAAOkQ,EAAMlQ,MACbS,MAAOqT,EACPjT,MAAOm4H,SAUnBvzH,EAAK1G,MAAM4R,YAETlL,EAAK1G,MAAM4R,YAAclS,OAAOmF,KAAK6B,EAAK1G,MAAM4R,YAAY/O,QAC9DnD,OAAOmF,KAAK6B,EAAK1G,MAAM4R,YAAY9M,QAAQ,SAAAC,GACzC4yH,GAAc5yH,GAAK2B,EAAK1G,MAAM4R,WAAW7M,KAK3C4B,GACFD,EAAKyL,aAAa,CAChBk8G,OAAM,EACNqJ,gBACAN,gBACAO,iBACAJ,iBACAC,oBAGJroG,EAASioG,GA7jBLpwG,EAAAgB,OAAA,6BAgkBA4vG,GAAkB,KAClBC,GAAiB,KAYjBC,GAAwB,EACxBC,GAAyB,GAEvBC,GAAyB,WAC7B,IAAMmC,EAA6B7pG,SAASC,eAAe7pB,EAAK1G,MAAMof,UAAYkR,SAASC,eAAe7pB,EAAK1G,MAAMof,UAAYkR,SAASC,eAAe7pB,EAAK1G,MAAMqP,OACpK,GAAI8qH,EAA2B,CAC7B,IAAMC,EAA8BjrH,OAAO07G,OAAOsP,GAClDrC,GAAwBsC,EAA4BpQ,aAAaz+G,WAAW6uH,EAA4BhB,IAAI,kBAAkB7tH,WAAW6uH,EAA4BhB,IAAI,iBACzKrB,GAAyBqC,EAA4BnQ,cACjD6N,KAA0BpxH,EAAKX,MAAM+xH,uBAA0BpxH,EAAKX,MAAMgyH,wBAC5ErxH,EAAKyL,aAAa,CAChB2lH,yBACAC,uBAAwBrxH,EAAKX,MAAMgyH,uBAAyBrxH,EAAKX,MAAMgyH,uBAAyBA,UAQxG5oH,OAAOihB,oBAAoB,SAAU4nG,GAAuBtpH,KAAvBhP,OAAA25H,EAAA,EAAA35H,QAAA25H,EAAA,EAAA35H,CAAAgH,MACrCyI,OAAO+gB,iBAAiB,SAAU8nG,GAAuBtpH,KAAvBhP,OAAA25H,EAAA,EAAA35H,QAAA25H,EAAA,EAAA35H,CAAAgH,MAE5BuxH,GAAevxH,EAAK5C,cAAc8I,YAAYlG,EAAK5C,cAAc8I,YAAY,IAAIP,MAAQsM,SAAS,EAAE,OAAO0C,OAAO,oBAAoB,oBACtI68G,GAAiBD,GAAav/G,QAAQC,SAAS,EAAE,QAGjDw/G,GAAuBtsH,KAAKkB,IAAIrG,EAAK5C,cAAc2J,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmBQ,SAASiqH,GAAeoB,GAAGjgH,UAAU,MAxmBtJ2N,EAAAlP,KAAA,IA2mBmCpR,EAAK5C,cAAc8V,gBAAgBlT,EAAK1G,MAAMiM,YAAYgJ,QAAQsE,EAAO4+G,GAAoB,MAAK,EAAM,OA3mB3I,gBA2mBAC,GA3mBApxG,EAAAnN,KA6mBEw+G,GAAuBD,GAA2B9vH,IAAI,SAACwK,EAAE/G,GAC7D,IAAI2P,EAAI,EACFD,EAAI/U,EAAK5C,cAAc8I,YAAwB,IAAZkG,EAAEuH,WAAgBgB,OAAO,oBAC5DjD,EAAa1R,EAAK5C,cAAc4W,iBAAiB5H,EAAE2H,UAAU/T,EAAK1G,MAAMiM,YAAYvH,UAY1F,OAVKkzH,GAGHl8G,EAAInQ,WAAW6M,EAAWmR,IAAIquG,IAAiB3/G,MAAM,GAAG9C,MAAM,MAF9DyiH,GAAkBx/G,EAKG,OAAnBy/G,KACFA,GAAiB5pH,SAAS6E,EAAEunH,cAGvB,CAAE5+G,IAAGC,OAGR48G,GAAuB,CAAC,CAC5B/pH,GAAG,OACHtN,MAAO,OAAOyF,EAAK5C,cAAc2J,gBAAgB,CAAC,QAAQ,SAAS/G,EAAK1G,MAAMwL,MAAM,QAAQ,QAAQ+J,KAAK,KAAK,IAC9GlE,KAAMgnH,KAIFE,GAAuBp5G,IAEvBq5G,GAAwB,CAC5Bt7G,UAAU,EACVy8G,UAAU,EACVx8G,SAAQ,EACR3K,SAAQ,EACR4K,SAAS,KACTV,WAAW,KACXa,YAAW,EACXI,aAAY,EACZF,aAAY,EACZC,MAAM,YACNF,cAAa,EACbI,iBAAiB,EACjBzV,OAAO,SAAA2K,GAAC,OAAIA,EAAE7R,OACd4c,mBAAmB,GACnBlJ,OAAQ,CAAEtN,IAAK,EAAGsJ,MAAO,EAAGiE,OAAQ,EAAGxD,KAAM,IAG3C1K,EAAK1G,MAAM4R,YAETlL,EAAK1G,MAAM4R,YAAclS,OAAOmF,KAAK6B,EAAK1G,MAAM4R,YAAY/O,QAC9DnD,OAAOmF,KAAK6B,EAAK1G,MAAM4R,YAAY9M,QAAQ,SAAAC,GACzCyzH,GAAsBzzH,GAAK2B,EAAK1G,MAAM4R,WAAW7M,KAKnD4B,GACFD,EAAKyL,aAAa,CAChBk8G,OAAM,EACNkK,wBACAD,wBACAE,yBACAV,yBACAC,4BAGJ5oG,EAASmpG,GA7qBLtxG,EAAAgB,OAAA,6BAgrBE6Y,GAAOnU,EAAUmU,MACvB1R,EAASzoB,EAAK5C,cAAci9B,aAAaF,GAAKn6B,EAAK1G,MAAMiM,eAEvDvF,EAAKyL,aAALzS,OAAA46H,EAAA,EAAA56H,CAAA,GACG62H,EAAWpnG,IAprBZnI,EAAAgB,OAAA,6BAAAhB,EAAAlP,KAAA,IAyrBWpR,EAAK5C,cAAco7E,eAAeq3C,EAAU7vH,EAAK1G,MAAMwL,MAAM9E,EAAK1G,MAAMiM,YAAYvF,EAAK1G,MAAMuN,QAAQiwC,GAzrBlH,gBAyrBJruB,EAzrBInI,EAAAnN,OA0rBUlT,GACZD,EAAKyL,aAALzS,OAAA46H,EAAA,EAAA56H,CAAA,CACE2uH,OAAM,GACLkI,EAAWpnG,IA7rBZnI,EAAAgB,OAAA,6BAAAhB,EAAAgB,OAAA,SAmsBHmH,GAnsBG,0BAAAnI,EAAA1O,SAAAwO,EAAA/mB,oFArDNA,KAAK+D,cACP/D,KAAK+D,cAAcC,SAAShE,KAAKC,OAEjCD,KAAK+D,cAAgB,IAAIE,IAAcjE,KAAKC,8JAK9CD,KAAKkS,oBAAqB,yPAI1BlS,KAAKkE,kQAILlE,KAAKivB,2LAGY5c,wFAASC,iCAAS,KAC9BtS,KAAKkS,4DACDlS,KAAK4G,SAASyL,EAASC,oCAEzB,4LAGgB9R,EAAWC,8FAClCT,KAAKkE,YAEC28G,EAAergH,EAAUiL,QAAUzL,KAAKC,MAAMwL,MAC9C0jB,EAAiB3uB,EAAUgN,UAAYxN,KAAKC,MAAMuN,QAClDuJ,EAAgBvW,EAAUuH,WAAa/H,KAAKC,MAAM8H,SAClDiP,EAAmBxW,EAAUyW,YAAcjX,KAAKC,MAAMgX,UACtDujH,EAAeh6H,EAAUmsB,UAAU/mB,OAAS5F,KAAKC,MAAM0sB,UAAU/mB,KACjE60H,EAAsBj6H,EAAUmjC,uBAAyB3jC,KAAKC,MAAM0jC,sBAAwB3jC,KAAKC,MAAM0jC,qBACvGz2B,EAAsB1M,EAAU6M,cAAgBrN,KAAKC,MAAMoN,cAAgB1N,OAAO8J,OAAOjJ,EAAU6M,cAAc3G,OAAO,SAAA6E,GAAE,MAAiB,YAAZA,EAAGjF,SAAqBxD,SAAWnD,OAAO8J,OAAOzJ,KAAKC,MAAMoN,cAAc3G,OAAO,SAAA6E,GAAE,MAAiB,YAAZA,EAAGjF,SAAqBxD,OAEjP03H,GAAgB3Z,GAAgB1xF,GAAkBjiB,GAAwButH,IAAwBz6H,KAAKgG,MAAMsoH,MAC/GtuH,KAAKoS,aAAa,CAChBk8G,OAAM,GACN,WACAnqH,EAAK8qB,eAEElY,GAAiBC,KACpB8sB,EAAWnkC,OAAOC,OAAO,GAAGI,KAAKgG,OACvChG,KAAKoS,aAAa,CAChBk8G,OAAM,GACN,WACAnqH,EAAKyC,SAASk9B,4IA2sBZ,IAAA31B,EAAAnO,KACA2sB,EAAY3sB,KAAKC,MAAM0sB,UACzByC,EAAS,KAGPsrG,OADsCxzH,IAAzBylB,EAAU3W,YAA4B2W,EAAU3W,WACtCgkH,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAD,CAAQh1H,KAAK,SAAa,KAEjD0pB,EAAa,CACjB7tB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZL,MAAM,WACNhB,UAAU,CACRH,eAAe,eAKf4sB,EAAU1sB,OAASN,OAAOmF,KAAK6nB,EAAU1sB,OAAO6C,QAClDnD,OAAOmF,KAAK6nB,EAAU1sB,OAAO8E,QAAQ,SAAAC,GACnCqqB,EAAWrqB,GAAK2nB,EAAU1sB,MAAM+E,KAKhC2nB,EAAU8T,WAAa9gC,OAAOmF,KAAK6nB,EAAU8T,WAAW39B,QAC1DnD,OAAOmF,KAAK6nB,EAAU8T,WAAW17B,QAAQ,SAAAC,GACH,oBAAzB2nB,EAAU8T,UAAUz7B,KAC7BqqB,EAAWrqB,GAAK2nB,EAAU8T,UAAUz7B,GAAGmJ,EAAKlO,UAKlD,IAAM2E,EAAeyqB,GAAcA,EAAWzqB,aAAeyqB,EAAWzqB,aAAe,EACjFD,EAAW0qB,GAAcA,EAAW1qB,SAAW0qB,EAAW1qB,SAAa3E,KAAKC,MAAM8H,SAAW,EAAI,EACjGlD,EAAewqB,GAAcA,EAAWxqB,aAAewqB,EAAWxqB,aAAiB7E,KAAKC,MAAM8H,SAAW,EAAI,EAEnH,OAAQ4kB,EAAU/mB,MAChB,IAAK,cACH,IAAMg1H,EAAQ56H,KAAKC,MAAMiM,aAAelM,KAAKC,MAAMiM,YAAYyJ,KAAO3V,KAAKC,MAAMiM,YAAYyJ,KAA/E,iBAAAzN,OAAuGlI,KAAKC,MAAMwL,MAAlH,QACd2jB,EACE4qG,EAAAx6H,EAAAC,cAACk7H,EAAA,EAADh7H,OAAAC,OAAA,CACE4rC,UAAW,MACXC,QAASzrC,KAAKC,MAAMwL,OAChBkhB,EAAUkuG,cAEdb,EAAAx6H,EAAAC,cAACk7H,EAAA,EAADh7H,OAAAC,OAAA,CAAOqQ,IAAK2qH,GAAWvrG,KAG7B,MACA,IAAK,OACH,IAAMyrG,EAAQ96H,KAAKC,MAAMiM,aAAelM,KAAKC,MAAMiM,YAAYyJ,KAAO3V,KAAKC,MAAMiM,YAAYyJ,KAA/E,iBAAAzN,OAAuGlI,KAAKC,MAAMwL,MAAlH,QACd2jB,EACE4qG,EAAAx6H,EAAAC,cAACk7H,EAAA,EAADh7H,OAAAC,OAAA,CAAOqQ,IAAK6qH,GAAWzrG,IAE3B,MACA,IAAK,YACHD,EACE4qG,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAarvB,KAAKC,MAAMwL,OAEtC,MACA,IAAK,eACH,IAAM43B,EAAerjC,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa1N,KAAKC,MAAMiM,YAAYg+B,SAAS,SAClG7G,IACFjU,EACE4qG,EAAAx6H,EAAAC,cAACk7H,EAAA,EAADh7H,OAAAC,OAAA,CAAOqQ,IAAKozB,GAAkBhU,KAGpC,MACA,IAAK,eACH,IAAM0rG,EAAe/6H,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa1N,KAAKC,MAAMiM,YAAYg+B,SAAS,UACtG9a,EACE4qG,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAa0rG,GAE3B,MACA,IAAK,eACH3rG,EAASpvB,KAAKgG,MAAMosB,aAClB4nG,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6BxqB,aAAcA,EAAcR,OAAQrE,KAAKgG,MAAMosB,gBAC1EsoG,EACN,MACA,IAAK,MACHtrG,EAASpvB,KAAKgG,MAAMuqD,IAClBypE,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6BxqB,aAAcA,EAAcR,OAAQrE,KAAKgG,MAAMuqD,OAC1EmqE,EACN,MACA,IAAK,aACHtrG,EAASpvB,KAAKgG,MAAMqS,WAClB2hH,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6BxqB,aAAcA,EAAcR,OAAQrE,KAAKgG,MAAMqS,cAC1EqiH,EACN,MACA,IAAK,kBACHtrG,EAASpvB,KAAKgG,MAAM2yH,gBAClBqB,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6BxqB,aAAcA,EAAcR,OAAQrE,KAAKgG,MAAM2yH,mBAC1E+B,EACN,MACA,IAAK,mBACHtrG,EAASpvB,KAAKgG,MAAMgU,iBAClBggH,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6BxqB,aAAcA,EAAcR,OAAQrE,KAAKgG,MAAMgU,oBAC1E0gH,EACN,MACA,IAAK,gCACHtrG,EAASpvB,KAAKgG,MAAMsoH,OAAStuH,KAAKgG,MAAMw6E,6BAA+BxgF,KAAKgG,MAAMy6E,0BAChFu5C,EAAAx6H,EAAAC,cAACw7H,EAAAz7H,EAAD,CACE4kC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACV7/B,SAAUA,EACV8/B,IAAKj5B,WAAWxL,KAAKgG,MAAMy6E,2BAC3B/7C,MAAOl5B,WAAWxL,KAAKgG,MAAMw6E,6BAC7B77C,aAAe,SAAAC,GAAC,OAAIz2B,EAAKpK,cAAcW,iBAAiBkgC,EAAEjgC,EAASC,EAAaC,KAE/E,SAAA44D,GAAA,IAAG54B,EAAH44B,EAAG54B,WAAH44B,EAAe/4B,MAAf,OACCs1F,EAAAx6H,EAAAC,cAAA,QAAMsB,MAAOsuB,EAAWtuB,MAAO+jC,IAAKD,MAGtC61F,EACN,MACA,IAAK,2BACHtrG,EAASpvB,KAAKgG,MAAMsoH,OAAStuH,KAAKgG,MAAMq8E,wBAA0BriF,KAAKgG,MAAMs8E,qBAC3E03C,EAAAx6H,EAAAC,cAACw7H,EAAAz7H,EAAD,CACE4kC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACV7/B,SAAUA,EACV8/B,IAAKj5B,WAAWxL,KAAKgG,MAAMs8E,sBAC3B59C,MAAOl5B,WAAWxL,KAAKgG,MAAMq8E,wBAC7B19C,aAAe,SAAAC,GAAC,OAAIz2B,EAAKpK,cAAcW,iBAAiBkgC,EAAEjgC,EAASC,EAAaC,KAE/E,SAAA+xD,GAAA,IAAG/xB,EAAH+xB,EAAG/xB,WAAH+xB,EAAelyB,MAAf,OACCs1F,EAAAx6H,EAAAC,cAAA,QAAMsB,MAAOsuB,EAAWtuB,MAAO+jC,IAAKD,MAGtC61F,EACN,MACA,IAAK,cACHtrG,EAASpvB,KAAKgG,MAAMsoH,OAAStuH,KAAKgG,MAAM0wH,WAAa12H,KAAKgG,MAAM2wH,QAC9DqD,EAAAx6H,EAAAC,cAACw7H,EAAAz7H,EAAD,CACE4kC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACV7/B,SAAUA,EACV8/B,IAAKj5B,WAAWxL,KAAKgG,MAAM2wH,SAC3BjyF,MAAOl5B,WAAWxL,KAAKgG,MAAM0wH,WAC7B/xF,aAAe,SAAAC,GAAC,OAAIz2B,EAAKpK,cAAcW,iBAAiBkgC,EAAEjgC,EAASC,EAAaC,KAE/E,SAAAiyD,GAAA,IAAGjyB,EAAHiyB,EAAGjyB,WAAHiyB,EAAepyB,MAAf,OACCs1F,EAAAx6H,EAAAC,cAAA,QAAMsB,MAAOsuB,EAAWtuB,MAAO+jC,IAAKD,MAGtC61F,EACN,MACA,IAAK,uBACHtrG,EAASpvB,KAAKgG,MAAMsoH,OAAStuH,KAAKgG,MAAM4wH,oBAAsB52H,KAAKgG,MAAM6wH,iBACvEmD,EAAAx6H,EAAAC,cAACw7H,EAAAz7H,EAAD,CACE4kC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACV7/B,SAAUA,EACV8/B,IAAKj5B,WAAWxL,KAAKgG,MAAM6wH,kBAC3BnyF,MAAOl5B,WAAWxL,KAAKgG,MAAM4wH,oBAC7BjyF,aAAe,SAAAC,GAAC,OAAIz2B,EAAKpK,cAAcW,iBAAiBkgC,EAAEjgC,EAASC,EAAaC,KAE/E,SAAAkyD,GAAA,IAAGlyB,EAAHkyB,EAAGlyB,WAAHkyB,EAAeryB,MAAf,OACCs1F,EAAAx6H,EAAAC,cAAA,QAAMsB,MAAOsuB,EAAWtuB,MAAO+jC,IAAKD,MAGtC61F,EACN,MACA,IAAK,kBACHtrG,EAASpvB,KAAKgG,MAAMsoH,OAAStuH,KAAKgG,MAAMy9B,eAAiBzjC,KAAKgG,MAAMw9B,YAClEw2F,EAAAx6H,EAAAC,cAACw7H,EAAAz7H,EAAD,CACE4kC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACV7/B,SAAUA,EACV8/B,IAAKj5B,WAAWxL,KAAKgG,MAAMw9B,aAC3BkB,MAAOl5B,WAAWxL,KAAKgG,MAAMy9B,eAC7BkB,aAAe,SAAAC,GAAC,OAAIz2B,EAAKpK,cAAcW,iBAAiBkgC,EAAEjgC,EAASC,EAAaC,KAE/E,SAAA2+G,GAAA,IAAG3+E,EAAH2+E,EAAG3+E,WAAH2+E,EAAe9+E,MAAf,OACCs1F,EAAAx6H,EAAAC,cAAA,QAAMsB,MAAOsuB,EAAWtuB,MAAO+jC,IAAKD,MAGtC61F,EACN,MACA,IAAK,oBACHtrG,EAASpvB,KAAKgG,MAAM+8E,kBAClBi3C,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6B1qB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrE,KAAKgG,MAAM+8E,qBAC1H23C,EACN,MACA,IAAK,YACHtrG,EAASpvB,KAAKgG,MAAMklC,UAClB8uF,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAD,CACE96H,MAAO,EACPC,WAAY,SACZe,cAAe,MACfd,eAAgB,cAGdJ,OAAO8J,OAAOzJ,KAAKgG,MAAMklC,WAAW3iC,IAAK,SAAC04E,EAAemkB,GAAhB,OACvC40B,EAAAx6H,EAAAC,cAACs8B,EAAD,CACEtwB,MAAOw1E,EAAex1E,MACtBS,YAAa+0E,EACbv4E,IAAG,SAAAR,OAAWk9F,GACdz4E,UAAW,CACT/mB,KAAK,cACLi1H,aAAa,CACXpvF,QAAQ,GAAAvjC,OAAG+4E,EAAex1E,QAAS0C,EAAKnI,MAAM87F,+BAAiC3zF,EAAKnI,MAAM87F,8BAA8B7gB,EAAex1E,OAApG,KAAAvD,OAAkHiG,EAAKnI,MAAM87F,8BAA8B7gB,EAAex1E,OAAOkB,QAAQhI,GAAzL,KAAAuD,OAAsM+4E,EAAe7kC,sBAArN,yBAAoQ,KAEzSn8C,MAAM,CACJoB,aAAa,MACbmG,SAAS,WACTpG,OAAO,CAAC,QAAQ,OAChBoI,GAAG47F,EAAgB,QAAU,EAC7B79F,OAAO5H,OAAO8J,OAAO0E,EAAKnI,MAAMklC,WAAWpoC,OAAOsiG,EAClDjvF,UAAU,CAAC,kCAAkC,0CAOvDukH,EACN,MACA,IAAK,kBACHtrG,EAASpvB,KAAKgG,MAAMu6E,gBAClBy5C,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6B1qB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrE,KAAKgG,MAAMu6E,mBAC1Hm6C,EACN,MACA,IAAK,aACHtrG,EAASpvB,KAAKgG,MAAM2R,WAClBqiH,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6B1qB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrE,KAAKgG,MAAM2R,cAC1H+iH,EACN,MACA,IAAK,OACHtrG,EAASpvB,KAAKgG,MAAM6yH,SAClBmB,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6B1qB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrE,KAAKgG,MAAM6yH,YAC1H6B,EACN,MACA,IAAK,QAEHtrG,OAA8BloB,IAArBlH,KAAKgG,MAAM85F,OAA4C,OAArB9/F,KAAKgG,MAAM85F,MACpDk6B,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GAAiByvB,EAAjB,CAA6B1qB,SAAU,EAAGN,OAAQrE,KAAKgG,MAAM85F,SAC3D46B,EACN,MACA,IAAK,eACHtrG,EAASpvB,KAAKgG,MAAMwgC,aACkB,qBAA5B7Z,EAAU+f,eAAiC/f,EAAU+f,cAC3DstF,EAAAx6H,EAAAC,cAACy7H,EAAA,EAAD,CACEnzH,SAAU/H,KAAKC,MAAM8H,SACrBi7B,UAAWhjC,KAAKgG,MAAMgzH,uBAEtBgB,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAarvB,KAAKgG,MAAMwgC,aAAlC,MAGFwzF,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAarvB,KAAKgG,MAAMwgC,aAAlC,KAEFk0F,EACJ,MACA,IAAK,oBACHtrG,EAASpvB,KAAKgG,MAAM+yH,kBACkB,qBAA5BpsG,EAAU+f,eAAiC/f,EAAU+f,cAC3DstF,EAAAx6H,EAAAC,cAACy7H,EAAA,EAAD,CACEnzH,SAAU/H,KAAKC,MAAM8H,SACrBi7B,UAAWhjC,KAAKgG,MAAM8yH,4BAEtBkB,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAarvB,KAAKgG,MAAM+yH,kBAAlC,MAGFiB,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAarvB,KAAKgG,MAAM+yH,kBAAlC,KAEF2B,EACJ,MACA,IAAK,gBACHtrG,EAASpvB,KAAKgG,MAAMm1H,cAClBnB,EAAAx6H,EAAAC,cAACy7H,EAAA,EAAD,CACEl4F,UAAW,KACXj7B,SAAU/H,KAAKC,MAAM8H,UAErBiyH,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GACMyvB,EADN,CAEE1qB,SAAUA,EACVE,aAAcA,EACdR,OAAQrE,KAAKgG,MAAMm1H,kBAGrBT,EACN,MACA,IAAK,WACHtrG,EAASpvB,KAAKgG,MAAMmgC,SAClB6zF,EAAAx6H,EAAAC,cAACy7H,EAAA,EAAD,CACEl4F,UAAW,KACXj7B,SAAU/H,KAAKC,MAAM8H,UAErBiyH,EAAAx6H,EAAAC,cAACu7H,EAAA,EAADr7H,OAAAC,OAAA,GACMyvB,EADN,CAEE1qB,SAAUA,EACVE,aAAcA,EACdR,OAAQrE,KAAKgG,MAAMmgC,aAGrBu0F,EACN,MACA,IAAK,mBACH,IAAMU,EAAsBp7H,KAAK+D,cAAc2J,gBAAgB,CAAC,aAAa,QAAQ,cAC/Eq3F,EAAkB/kG,KAAK+D,cAAc2J,gBAAgB,CAAC,YAAY0tH,IACxEhsG,EAASpvB,KAAKgG,MAAMqvD,iBAClB2kE,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAV,IAAwBrvB,KAAKgG,MAAMqvD,iBAAiB1oD,QAAQhI,GAA5D,SAA6EogG,EAAgB3oD,uBAC3Fs+E,EACN,MACA,IAAK,wBACHtrG,EAASpvB,KAAKgG,MAAMo1B,sBAClB4+F,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAarvB,KAAKgG,MAAMo1B,sBAAsBzuB,QAAQhI,GAAhE,IAA4E3E,KAAKC,MAAMiM,YAAYkwC,uBACjGs+E,EACN,MACA,IAAK,oBACHtrG,EAASpvB,KAAKgG,MAAM4wB,kBAClBojG,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAarvB,KAAKgG,MAAM4wB,kBAAkBjqB,QAAQhI,IAC1D+1H,EACN,MACA,IAAK,MACHtrG,EAASpvB,KAAKgG,MAAM+wH,SAClBiD,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAarvB,KAAKgG,MAAM+wH,SAAWzyH,MAAMkH,WAAWxL,KAAKgG,MAAM+wH,WAAmB,GAAN,KACpF2D,EACN,MACA,IAAK,SACHtrG,OAA+BloB,IAAtBlH,KAAKgG,MAAMizH,OAClBe,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,GAAmC,IAAtBrvB,KAAKgG,MAAMizH,OAAmBj5H,KAAKgG,MAAMizH,OAAS,IAAKe,EAAAx6H,EAAAC,cAAA,mBAC5Ei7H,EACN,MACA,IAAK,WACHtrG,OAAsCloB,IAA7BlH,KAAKgG,MAAMkzH,cAClBc,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,GAA0C,IAA7BrvB,KAAKgG,MAAMkzH,cAA0Bl5H,KAAKgG,MAAMkzH,cAAgB,IAAKc,EAAAx6H,EAAAC,cAAA,mBAC1Fi7H,EACN,MACA,IAAK,WACHtrG,OAAiCloB,IAAxBlH,KAAKgG,MAAMs6E,SAClB05C,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,GAAqC,IAAxBrvB,KAAKgG,MAAMs6E,SAAqBtgF,KAAKgG,MAAMs6E,SAAW,IAAK05C,EAAAx6H,EAAAC,cAAA,mBAChFi7H,EACN,MACA,IAAK,mBACHtrG,OAAyCloB,IAAhClH,KAAKgG,MAAM65E,iBAClBm6C,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,GAA6C,IAAhCrvB,KAAKgG,MAAM65E,iBAA6B7/E,KAAKgG,MAAM65E,iBAAmB,IAAKm6C,EAAAx6H,EAAAC,cAAA,mBAChGi7H,EACN,MACA,IAAK,MACHtrG,OAAiCloB,IAAxBlH,KAAKgG,MAAMygC,SAClBuzF,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAD,CACE76H,WAAY,SACZe,cAAe,OAEfm5H,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,GAAqC,IAAxBrvB,KAAKgG,MAAMygC,SAAqBzmC,KAAKgG,MAAMygC,SAAW,IAAKuzF,EAAAx6H,EAAAC,cAAA,mBAEhFO,KAAKgG,MAAM68F,eAAiBljG,OAAOmF,KAAK9E,KAAKgG,MAAM68F,eAAe//F,OAAO,GACvEk3H,EAAAx6H,EAAAC,cAACs8B,EAAD,CACEpP,UAAW,CACT/mB,KAAK,UACL3F,MAAM,CACJmQ,UAAU,CACR5G,GAAG,GAELgiC,UAAU,MACVC,QAAQ9rC,OAAOmF,KAAK9E,KAAKgG,MAAM68F,eAAet6F,IAAK,SAAA85B,GACjD,IAAM+Z,EAAwBjuC,EAAKpK,cAAc2J,gBAAgB,CAAC,YAAY20B,EAAS,0BACjFg5F,EAAcltH,EAAKpK,cAAc2J,gBAAgB,CAAC,YAAY20B,EAAS,mBACzEtgC,EAAQoM,EAAKnI,MAAM68F,cAAcxgE,GAAU11B,QAAQhI,GACvD,OAAQ02H,GACN,QACA,IAAK,MACHt5H,GAAS,IACX,MACA,IAAK,eACHA,EAAK,GAAAmG,OAAMnG,EAAN,KAAAmG,OAAek0C,GAGxB,SAAAl0C,OAAUm6B,EAAV,MAAAn6B,OAAuBnG,KACtByT,KAAK,WAMlBklH,EACN,MACA,IAAK,SACH,IAAMY,EAAyC,oBAApB3uG,EAAUhrB,MAAuBgrB,EAAUhrB,MAAM3B,KAAKC,OAAS0sB,EAAUhrB,MACpGytB,EACE4qG,EAAAx6H,EAAAC,cAACk7H,EAAA,EAADh7H,OAAAC,OAAA,GAAYyvB,EAAZ,CAAwB7rB,QAAS,kBAAM6rB,EAAW5rB,YAAY0K,EAAKlO,UAAUq7H,GAEjF,MACA,IAAK,mBACHlsG,EAASpvB,KAAKgG,MAAMuyH,qBAClByB,EAAAx6H,EAAAC,cAAC87H,EAAA,EAAD57H,OAAAC,OAAA,GACMI,KAAKgG,MAAMyyH,sBADjB,CAEEl0H,KAAMvE,KAAKgG,MAAMwyH,qBACjBlnH,KAAMtR,KAAKgG,MAAMuyH,qBACjB14H,MAAOG,KAAKgG,MAAM+xH,sBAClB32H,OAAQpB,KAAKgG,MAAMgyH,0BAEnB0C,EACN,MACA,IAAK,kBACHtrG,EAASpvB,KAAKgG,MAAMgxH,sBAAwBh3H,KAAKgG,MAAMixH,sBACrD+C,EAAAx6H,EAAAC,cAAC+7H,EAAA,EAAD77H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEE,YAAa,CACXwF,KAAK,QAEPmrB,WAAY,GACZ7kB,cAAejM,KAAKC,MAAMwL,MAC1B5L,MAAOG,KAAKgG,MAAMgxH,qBAClB51H,OAAQpB,KAAKgG,MAAMixH,sBACnB1jH,OAAqC,qBAAtBvT,KAAKC,MAAMsT,QAAyBvT,KAAKC,MAAMsT,OAC9DyC,WAA6C,qBAA1BhW,KAAKC,MAAM+V,YAA6BhW,KAAKC,MAAM+V,cAEtE0kH,EACN,MACA,IAAK,UACHtrG,EACE4qG,EAAAx6H,EAAAC,cAACk7H,EAAA,EACKtrG,EAEJ2qG,EAAAx6H,EAAAC,cAACk7H,EAAA,EAADh7H,OAAAC,OAAA,CACE4J,GAAI,EACJ5D,KAAM,OACND,KAAM,MACNzE,MAAO,aACHmuB,EAAWjf,aAIvB,MACA,IAAK,WACHgf,EAASpvB,KAAKgG,MAAMqxH,aAClB2C,EAAAx6H,EAAAC,cAAC87H,EAAA,EAAD57H,OAAAC,OAAA,GACMI,KAAKgG,MAAM4xH,cADjB,CAEErzH,KAAMvE,KAAKgG,MAAM2xH,aACjBrmH,KAAMtR,KAAKgG,MAAMqxH,aACjBx3H,MAAOG,KAAKgG,MAAMwxH,cAClBp2H,OAAQpB,KAAKgG,MAAMyxH,kBAEnBiD,EACN,MACA,IAAK,SACH,IAAIh6F,EAAkB,KAClBK,EAAc/gC,KAAKgG,MAAM2mB,EAAU/mB,MACvC,OAAQ+mB,EAAUpoB,MAChB,IAAK,SACHw8B,EAAc/gC,KAAK+D,cAAciU,MAAM+oB,GAAatX,WACpDiX,EAAkB58B,IAClBurB,EAAWhrB,OAAS08B,EACtB,MACA,IAAK,OACHL,EAAkBS,IAClB9R,EAAWzpB,KAAOm7B,EAClB,IAAMM,EAAkB1hC,OAAO8J,OAAOkjB,EAAUmU,MAAM9yB,MACtD,GAAIhO,KAAKC,MAAMiM,YAAX,GAAAhE,OAA0Bm5B,EAA1B,UAAkD,CACpD,IAAMC,EAAmBthC,KAAKC,MAAMiM,YAAX,GAAAhE,OAA0Bm5B,EAA1B,UAErBC,GAAoB3hC,OAAOmF,KAAKw8B,GAAkBx+B,QACpDnD,OAAOmF,KAAKw8B,GAAkBv8B,QAAQ,SAAAC,GACpCqqB,EAAWrqB,GAAKs8B,EAAiBt8B,KAIzC,MACA,QACE07B,EAAkBp3B,IAGtB8lB,EAAS2R,EACPi5F,EAAAx6H,EAAAC,cAACihC,EAAoBrR,EAAa0R,GAChC25F,EACN,MACA,QACE,IAAIe,EAAiBz7H,KAAKgG,MAAM2mB,EAAU/mB,MACtC5F,KAAKgG,MAAM2mB,EAAU/mB,OAAS5F,KAAKgG,MAAM2mB,EAAU/mB,MAAM81H,eAC3DD,EAAiBz7H,KAAKgG,MAAM2mB,EAAU/mB,MAAM+G,QAAQhI,IAEtDyqB,EAASpvB,KAAKgG,MAAM2mB,EAAU/mB,MAC5Bo0H,EAAAx6H,EAAAC,cAACk7H,EAAA,EAAStrG,EAAaosG,GACrBf,EAGR,OAAOtrG,SAnvCc9uB,aAuvCVy7B","file":"static/js/main.c7786d45.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.changeInputValue({\n      target:{\n        value:inputValue.toString()\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass Staking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.setState({\n          tokenWrapperProps:null,\n          showTokenWrapperEnabled:false\n        },() => {\n          this.updateData(selectedActionChanged);\n        });\n      }\n    }\n\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.state.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.state.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[normalizedInputValue.toString()],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.state.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${unstakeRewards.toFixed(4)} ${this.state.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n    /*\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Stake':\n        break;\n        case 'Withdraw':\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      inputValue,\n      balanceSelectorInfo\n    });\n    */\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.state.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.state.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.state.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.state.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.state.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = this.functionsUtil.BNify(tokenBalance);\n    newState.stakedBalance = this.functionsUtil.BNify(stakedBalance);\n    newState.poolTokenPrice = this.functionsUtil.BNify(poolTokenPrice);\n    newState.rewardTokenPrice = this.functionsUtil.BNify(rewardTokenPrice);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.state.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedAction = 'Stake';\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    });\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[this.state.stakedBalance.toString()],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.state.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.state.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.state.contractInfo.decimals).div(s.durationSec);\n      distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.state.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.state.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.state.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.state.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier}x`,\n      description:`Deposit liquidity tokens for ${this.state.contractInfo.maxBonusDays} days to achieve a ${this.state.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.state.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.state.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    this.setState({\n      stats,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  toggleShowTokenWrapper = showTokenWrapperEnabled => {\n    this.setState({\n      showTokenWrapperEnabled\n    });\n  }\n\n  selectToken(selectedOption){\n    const selectedToken = selectedOption.value;\n    this.setState({\n      selectedToken,\n      selectedOption\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.tokenConfig && this.state.tokenConfig.poolLink && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Pool link:\n                          </Text>\n                          <ExtLink\n                            mt={1}\n                            color={'link'}\n                            hoverColor={'link'}\n                            href={this.state.tokenConfig.poolLink}\n                          >\n                            <Text\n                              color={'link'}\n                              style={{\n                                maxWidth:'100%',\n                                overflow:'hidden',\n                                whiteSpace:'nowrap',\n                                textOverflow:'ellipsis'\n                              }}\n                            >\n                              {this.state.tokenConfig.poolLink}\n                            </Text>\n                          </ExtLink>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.globalStats.length>0 && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Your Stats:\n                          </Text>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              this.state.globalStats.map( (statInfo,index) =>\n                                <StatsCard\n                                  key={`globalStats_${index}`}\n                                  cardProps={{\n                                    mb:[2,0],\n                                    mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                                    width:[1,'100%']\n                                  }}\n                                  textProps={{\n                                    fontSize:[1,2]\n                                  }}\n                                  {...statInfo}\n                                />\n                              )\n                            }\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stake'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'stake LP Tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStake}\n                              handleClick={ e => this.setAction('Stake') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isUnstake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Withdraw'}\n                              imageSrc={'images/upload.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'withdraw LP tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isUnstake}\n                              handleClick={ e => this.setAction('Withdraw') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStats ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stats'}\n                              imageSrc={'images/stats.svg'}\n                              // subcaption={'view some stats'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStats}\n                              handleClick={ e => this.setAction('Stats') }\n                            />\n                          </Flex>\n                          {\n                            /*\n                            this.state.tokenWrapperProps && (\n                              <Flex\n                                mt={1}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                mb={this.state.showTokenWrapperEnabled ? 0 : 3}\n                              >\n                                <DashboardCard\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    pb:2,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    justifyContent={'row'}\n                                  >\n                                    <Checkbox\n                                      required={false}\n                                      checked={this.state.showTokenWrapperEnabled}\n                                      onChange={ e => this.toggleShowTokenWrapper(e.target.checked) }\n                                      label={ isStake ? `Convert your ${this.state.tokenWrapperProps.startContract.token} to ${this.state.tokenWrapperProps.destContract.token}` : `Convert your ${this.state.tokenWrapperProps.destContract.token} to ${this.state.tokenWrapperProps.startContract.token}`}\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                              </Flex>\n                            )\n                            */\n                          }\n                          {\n                            (isStake || isUnstake) ?\n                              /*\n                              this.state.showTokenWrapperEnabled && this.state.tokenWrapperProps ? (\n                                <TokenWrapper\n                                  {...this.props}\n                                  fullWidth={true}\n                                  action={ isStake ? 'wrap' : 'unwrap' }\n                                  toolProps={this.state.tokenWrapperProps}\n                                />\n                              ) :\n                              */\n                              (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo ? (\n                                <Box\n                                  mt={1}\n                                  width={1}\n                                  mb={[4,3]}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={txAction}\n                                    error={this.state.error}\n                                    steps={this.state.steps}\n                                    infoBox={this.state.infoBox}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.balanceProp}\n                                    contractInfo={this.state.contractInfo}\n                                    permitEnabled={this.state.permitEnabled}\n                                    approveEnabled={this.state.approveEnabled}\n                                    callback={this.transactionSucceeded.bind(this)}\n                                    approveDescription={this.state.approveDescription}\n                                    contractApproved={this.contractApproved.bind(this)}\n                                    balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                    changeInputCallback={this.changeInputCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                          size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                        />\n                                        <Text\n                                          mt={1}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          {\n                                            isStake ? (\n                                              `You don't have any ${this.state.selectedToken} in your wallet.`\n                                            ) : isUnstake && (\n                                              `You don't have any staked ${this.state.selectedToken} to withdraw.`\n                                            )\n                                          }\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Box>\n                              ) : (\n                                <Flex\n                                  mt={3}\n                                  mb={3}\n                                  width={1}\n                                >\n                                  <FlexLoader\n                                    flexProps={{\n                                      flexDirection:'row'\n                                    }}\n                                    loaderProps={{\n                                      size:'30px'\n                                    }}\n                                    textProps={{\n                                      ml:2\n                                    }}\n                                    text={'Loading balance...'}\n                                  />\n                                </Flex>\n                              )\n                            ) : isStats && (\n                              <Flex\n                                mt={1}\n                                mb={3}\n                                width={1}\n                                style={{\n                                  flexWrap:'wrap'\n                                }}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  (!this.state.stats || !this.state.stats.length) ? (\n                                    <Flex\n                                      mt={3}\n                                      mb={3}\n                                      width={1}\n                                    >\n                                      <FlexLoader\n                                        flexProps={{\n                                          flexDirection:'row'\n                                        }}\n                                        loaderProps={{\n                                          size:'30px'\n                                        }}\n                                        textProps={{\n                                          ml:2\n                                        }}\n                                        text={'Loading stats...'}\n                                      />\n                                    </Flex>\n                                  ) : this.state.stats.map( (statInfo,index) =>\n                                    <StatsCard\n                                      key={`stats_${index}`}\n                                      cardProps={{\n                                        width:[1,'49%']\n                                      }}\n                                      {...statInfo}\n                                    />\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'#ff9900'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport LpStaking from '../contracts/LpStaking.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      disabledTokens:[], // Disable IDLE distribution for idleToken\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'LP Staking',\n      route:'lp-staking',\n      subComponent:Staking,\n      desc:'Stake your Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          SLP:{\n            contract:{\n              decimals:24,\n              abi:LpStaking,\n              name:'LpStaking',\n              maxMultiplier:3,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n              // address:'0x95274E30C33083F3E3fEA9454347b9BD59e85225' // Fork\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try{\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error){\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (tokenData && tokenData.length){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // console.log('checkNetwork',this.state.network.current.id,this.state.network.required.id);\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    erc20ForwarderClient:null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}