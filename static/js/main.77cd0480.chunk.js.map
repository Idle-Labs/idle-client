{"version":3,"sources":["TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","SmartNumber/SmartNumber.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","colors.js","FlexLoader/FlexLoader.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","Title/Title.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","TrancheField/TrancheField.js","AssetField/AssetField.js"],"names":["module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","this","showPathMobile","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","width","id","alignItems","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","length","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Component","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","functionsUtil","componentUnmounted","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","Object","assign","display","LoadingSpinner","react_default","index_es","justifyContent","className","styles","mx","ButtonLoader","flexDirection","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","p","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","SmartNumber","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","CardIconButton","cardProps","py","px","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","backgroundColor","margin","my","align","image","src","imageProps","useIconOnly","icon","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","mt","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref11","_ref13$","migrationEnabled","oldContractBalanceFormatted","tokenKey","tokenBalanceConverted","checkMigration","strategy","getIdleTokenPrice","_ref15","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref22","_callee15","stakingDistributions","stakingRewards","_context15","_ref23","_callee14","eventFilters","transfers","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref24","_callee17","_ref25","_ref26","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref27","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref28","_callee19","tokensDistribution","_context19","_ref29","_callee18","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref30","_ref31","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context18","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x15","_x13","_x14","_ref32","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref33","_ref34","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context21","_ref35","_callee20","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context20","trancheTokens","_x19","_x16","_x17","_x18","getTrancheUserTransactions","_ref36","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref37","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref38","_callee24","_context24","_x26","_x27","_x28","_ref39","_callee25","_ref40","_ref41","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref44","_ref45","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref46","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x31","_ref47","_callee28","_context28","_x32","match","_ref48","_callee29","_context29","_x33","_ref49","_callee30","_context30","_x34","items","to_address","_ref50","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","sort","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref56","_callee38","_ref57","_ref58","_context38","getTransactionReceipt","_x36","_ref59","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref60","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref61","_callee41","processTxs","_args41","_context41","_x40","_ref62","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref63","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref64","_callee46","minedTxs","_context46","_ref65","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref66","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref67","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref68","_callee53","txsToProcess","_args53","_context53","_ref69","_callee52","_context52","_ref70","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref71","_callee48","_context48","_x54","_x55","_ref72","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref73","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","_ref74","_callee54","error_callback","config","_args54","_context54","catch","_x60","_ref75","_callee55","apiKeyIndex","apiKey","_args55","_context55","message","_x61","_ref76","_callee56","return_data","_args56","_context56","_x62","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee57","page","googlePageviewInfo","isOrigin","_args57","_context57","ga","_ref78","_callee59","googleEventsInfo","debugEnabled","originOk","_args59","_context59","analytics","google","addPostfixForTestnet","availableNetworks","_ref79","_callee58","_context58","hitCallback","hitCallbackFail","_x64","_x65","_x63","createContract","_ref80","_callee60","_context60","_x66","_x67","_x68","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee63","activeOnly","whitelist","proposals","currTime","validProposals","_args63","_context63","addr","msg","payload","end","_ref82","_callee62","checkedStrategies","_context62","snapshot","metadata","strategies","_ref83","_callee61","_context61","_x70","_x69","getAprsFromApi","_callee64","endpointInfo","aprs","_args64","_context64","_ref85","_callee65","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args65","_context65","_x71","getTokenExchangeRate","_ref86","_callee66","exchangeRateParams","exchangeRate","_context66","_x72","_x73","getTokenDecimals","_ref87","_callee67","_context67","_x74","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee68","idleTokenConfig","feeDistributorConfig","_context68","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee69","contractPaused","_args69","_context69","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref90","_callee71","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context71","lastAllocationsPromise","_ref91","_callee70","lastAllocations","_context70","_x76","_x77","alloc","_x75","_ref92","_callee72","oldContractBalance","oldContractTokenDecimals","oldContractName","_context72","getContractBalance","_x78","_x79","_ref93","_callee73","eventName","_args73","_context73","getContractPastEvents","_x80","_x81","estimateMethodGasUsage","_ref94","_callee74","methodParams","_contract$methods","functionCall","gasLimit","_ref95","_ref96","_args74","_context74","getGasPrice","estimateGas","_x82","_x83","_ref97","_callee75","userAddress","signedParameters","callback_receipt","_contract$methods2","_context75","on","once","confirmationNumber","receipt","_x84","_x85","_x86","_x87","_x88","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref98","_callee76","biconomyInfo","res","_context76","limits","apiId","headers","x-api-key","_x89","sendTxWithPermit","_ref99","_callee77","_contract$methods3","messageToSign","_this$getSignaturePar","_context77","encodeABI","personal","sign","_x90","_x91","_x92","_x93","_x94","_x95","buildBiconomyErc20ForwarderTx","_ref100","_callee78","permitType","callData","buildParams","_context78","txGas","erc20ForwarderClient","buildTx","_x96","_x97","_x98","_x99","_x100","_ref101","_callee80","_context80","_ref102","_callee79","_context79","_x102","_x103","_x101","sendBiconomyTxWithErc20Forwarder","_ref103","_callee81","req","metaInfo","txResponse","fetchReceiptIntervalId","_context81","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x104","_x105","_x106","_x107","sendBiconomyTxWithPersonalSign","_ref104","_callee82","_this$getSignaturePar2","_context82","getNonce","_x108","_x109","_x110","_x111","signPermitEIP2612","_ref105","_callee83","erc20Name","owner","spender","deadline","domain","permit","domainData","_context83","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x112","_x113","_x114","_x115","_x116","_x117","_x118","_x119","signPermit","_ref106","_callee84","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args84","_context84","net","getId","round","nonceMethod","pow","allowed","response","_x120","_x121","_x122","_ref107","_callee85","permitParams","methodAbi","useNonce","_args85","_context85","_jsonInterface","f","unshift","_x123","_x124","_x125","_x126","_x127","_x128","_x129","sendSignedTx","_ref108","_callee86","MetaTransaction","dataToSign","_context86","_x130","_x131","_x132","_x133","_x134","checkTokenApproved","_ref109","_callee87","contractAddr","walletAddr","_ref110","_ref111","allowance","_context87","getAllowance","gte","_x135","_x136","_x137","_ref112","_callee88","_context88","_x138","_x139","_x140","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref113","_callee89","stakedBalance","_args89","_context89","_x141","_x142","getTrancheStakingRewards","_ref114","_callee91","_context91","_ref115","_callee90","tokenGlobalConfig","_context90","_x145","_x143","_x144","_ref116","_callee92","field","addGovTokens","_args92","_context92","loadTrancheField","_x146","_x147","_x148","_x149","_x150","_x151","_x152","_x153","_ref117","_callee93","formatValue","addTokenName","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref118","_ref119","totalSupply","virtualPrice","_ref120","_ref121","staked1","lastPrice1","_ref122","_ref123","deposited1","lastPrice","_ref124","_ref125","redeemable1","staked2","_ref126","_ref127","earningsStart","trancheApy2","deposited3","earningsEnd","_ref128","_ref129","trancheFee","earningsCounter","feesStart","feesEnd","_ref130","_ref131","deposited4","redeemable3","_ref132","_ref133","deposited2","redeemable2","_ref134","_ref135","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref136","_ref137","rewardsTokens","incentiveTokens","govTokens","_args93","_context93","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","_x154","_x155","_x156","_x157","_x158","_x159","_x160","loadAssetField","_ref138","_callee94","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref139","_ref140","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref141","_ref142","amountLentCurve1","redeemableBalanceCurve","_ref143","_ref144","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref145","_ref146","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref147","_ref148","tokenPriceFirstDeposit","_ref149","_ref150","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref151","_ref152","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref153","_ref154","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref155","_ref156","amountLentCurve2","redeemableBalanceCurve1","_ref157","_ref158","redeemableBalance2","_args94","_context94","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x161","_x162","_x163","_x164","getIdleTokenSupply","_ref159","_callee95","idleTokenSupply","_args95","_context95","_x165","getIdleTokenPriceWithFee","_ref160","_callee96","_ref161","_ref162","fee","priceWFee","_args96","_context96","eq","_x166","_x167","_ref163","_callee97","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args97","_context97","_x168","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref164","_callee98","_ref165","_ref166","idleTokensTotalSupply","userShare","_context98","_x169","_x170","open","_callee100","coverProtocolConfig","nexusMutualConfig","_args100","_context100","_ref168","_callee99","coverage","coverageTokens","protocolImage","_context99","tokens","expirationTimestamp","utc","_x171","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref169","_callee102","incidentsInfo","_ref170","_ref171","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context102","directProps","startBlock","contractInfo","buyer","_ref172","_callee101","cover","coverId","claimSubmittedEvent","_ref173","_ref174","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref175","_ref176","_context101","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x173","_x172","getBatchedDepositExecutions","_ref177","_callee103","_context103","_x174","getBatchedDeposits","_callee105","filter_by_status","batchDepositConfig","batchedDeposits","_args105","_context105","_ref179","_callee104","currBatchIndex","batchIndex","_ref180","_ref181","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context104","_x175","getETHBalance","_ref182","_callee106","fixDecimals","_args106","_context106","_x176","_ref183","_callee107","_ref184","_ref185","_args107","_context107","_x177","_x178","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref186","_callee108","_args108","_context108","_x179","_ref187","_callee109","_args109","_context109","_x180","_ref188","_callee110","_args110","_context110","_x181","_x182","getProtocolBalance","_ref189","_callee111","_context111","_x183","_x184","getAprs","_ref190","_callee112","_context112","addresses","_x185","genericIdleCall","_ref191","_callee113","callParams","_args113","_context113","_x186","_ref192","_callee114","_contract$methods4","_args114","_context114","_x187","_x188","_ref193","_callee116","_args116","_context116","_ref194","_callee115","_context115","_x190","_x191","_x189","getTxDecodedLogs","_ref195","_callee118","logAddr","decodeLogs","internalTransfers","_context118","_ref196","_callee117","_context117","_x196","_x197","_x192","_x193","_x194","_x195","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee119","_context119","_ref198","_callee120","_context120","getBlock","_x198","_ref199","_callee121","_args121","_context121","getPastEvents","_x199","_x200","_ref200","_callee122","_args122","_context122","_x201","_x202","cachedContractCall","_ref201","_callee123","_args123","_context123","_x203","_x204","_ref202","_callee124","_contract$methods5","_args124","_context124","_x205","_x206","_ref203","_callee125","async","_args125","_context125","_x207","_x208","getUnlentBalance","_ref204","_callee126","unlentBalance","_context126","_x209","_ref205","_callee127","_args127","_context127","_x210","getLastAllocations","_ref206","_callee129","tokenAllocations","_context129","_ref207","_callee128","_context128","_x212","_x213","_x211","_ref208","_callee130","protocolsAprs","_ref209","_ref210","govTokensBalances","_args130","_context130","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x214","getSushiswapPoolTokenPrice","_ref211","_callee131","_ref212","_ref213","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref214","_ref215","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context131","getSushiswapConversionRate","_x215","_ref216","_callee132","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context132","_x216","_x217","_ref217","_callee133","unires","_context133","addressForPrice","_x218","_x219","getCurveDepositedTokens","_ref218","_callee134","idleTokensBalances","remainingCurveTokens","_args134","_context134","_x220","getCurveUnevenTokenAmounts","_ref219","_callee135","amounts","max_burn_amount","unevenAmounts","_context135","getCurveDepositContract","_x221","_x222","_callee136","curveRatesInfo","_context136","strategyTokens","getCurveAPYContract","_callee137","blocksForPrevTokenPrice","_ref222","_ref223","prevTokenPrice","blocksMultiplier","curveAPR","_context137","getCurveTokenSupply","_callee138","_context138","getCurvePoolContract","_callee139","_args139","_context139","_callee140","_args140","_context140","_ref227","_callee141","_ref228","_ref229","_context141","_x223","_callee142","depositContractInfo","_context142","getCurveZapContract","_callee143","zapContractInfo","_context143","_callee144","poolContractInfo","_context144","getCurveSwapContract","_callee145","migrationContractInfo","_context145","getCurveIdleTokensAmounts","_callee147","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args147","_context147","_ref235","_callee146","coinIndex","curveIdleTokens","_context146","migrationParams","_x224","getCurveTokensAmounts","_callee149","useCoinIndex","_args149","_context149","_ref237","_callee148","_ref238","_ref239","idleTokenPrice","totalTokenSupply","_context148","_x225","getCurveAmounts","_ref240","_callee151","_args151","_context151","_ref241","_callee150","_context150","_x228","_x226","_x227","getCurveTokenAmount","_ref242","_callee152","_args152","_context152","_x229","getCurveSlippage","_ref243","_callee153","uneven_amounts","depositContract","_ref244","_ref245","Sv","_args153","_context153","_x230","_x231","_ref246","_callee154","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref247","_ref248","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args154","_context154","IAaveIncentivesController","emissionPerSecond","_x232","_callee156","_args156","_context156","_ref250","_callee155","_ref251","_ref252","_context155","_x233","getWMaticApr","_ref253","_callee157","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args157","_context157","_x234","_x235","getStkAaveApr","_ref254","_callee158","aaveConversionRate","stkAaveAPR","stkAaveValue","_args158","_context158","_x236","_x237","getCompAPR","_ref255","_callee159","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args159","_context159","_x238","_x239","getCompSpeed","_ref256","_callee160","cTokenAddress","compSpeed","_context160","_x240","_ref257","_callee161","cTokenInfo","compoundAllocationPerc","_ref258","_ref259","cTokenTotalSupply","compoundPoolShare","_args161","_context161","_x241","_callee163","_args163","_context163","_ref261","_callee162","_ref262","_ref263","_context162","_x242","_callee165","_args165","_context165","_ref265","_callee164","_ref266","_ref267","compApr","_context164","_x243","getTokensCsv","_callee168","csv","_context168","prototype","sum","pv","cv","avg","_ref269","_callee167","_context167","_ref270","_callee166","rates","header","aprAvg","scoreAvg","lastRow","_context166","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x245","_x244","_callee170","govToken","convertToken","_args170","_context170","_ref272","_callee169","compTokenBalance","_context169","_x246","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref273","_callee172","govTokensUserDistribution","_args172","_context172","_ref274","_callee171","_context171","_x248","_x247","getGovTokensDistributionSpeed","_ref275","_callee174","govTokensDistribution","_args174","_context174","_ref276","_callee173","govSpeed","_context173","_x250","_x249","getGovTokensAprs","_ref277","_callee176","govTokensAprs","_args176","_context176","_ref278","_callee175","_ref279","_ref280","_ref281","_ref282","cTokenConfig","_context175","aprTooltipMode","_x253","_x251","_x252","_callee178","_args178","_context178","_ref284","_callee177","govTokenBalance","tokenConversionRate","fromTokenConfig","_context177","_x254","_callee179","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args179","_context179","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref286","_callee181","govTokensAmounts","_context181","getGovTokensUserAmounts","_ref287","_callee180","govTokenIndex","_context180","getGovTokenAddessByIndex","_x257","_x258","_x255","_x256","_ref288","_callee182","_context182","_x259","_x260","_ref289","_callee183","_context183","_x261","_x262","_callee186","govTokenConfigForced","_args186","_context186","_ref291","_callee185","_context185","_ref292","_callee184","_context184","_x264","_x265","_x263","getTokenFees","_callee187","_args187","_context187","_callee188","_ref295","_ref296","feePercentage","gain","fees","_args188","_context188","_ref297","_callee189","_args189","_context189","_x266","getTotalTVL","_callee190","tokensTVL","_context190","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee194","_context194","_ref300","_callee193","_context193","_ref301","_callee192","oldTokenTVL","idleTokenName","_ref302","_ref303","oldTokenConfig","_ref307","_ref308","oldTokenPrice","oldTotalSupply","_context192","showAUM","_ref304","_callee191","_ref305","_ref306","govTokenConversionRate","govTokenBalanceConverted","_context191","_x269","oldProtocols","oldProtocol","protocolPos","_x268","_x267","getSubstackLatestFeed","_callee195","idleSubstackFeed","latestFeed","_context195","getTrancheAggregatedStats","_callee199","totalAUM","_args199","_context199","_ref311","_callee198","_context198","_ref312","_callee197","_context197","_ref313","_callee196","_ref314","_ref315","_context196","_x272","_x271","_x270","getAggregatedStats","_callee201","allNetworks","networkIds","_args201","_context201","_ref317","_callee200","tvls","_context200","getAggregatedStats_chain","_x273","_callee205","avgAPR","_args205","_context205","_ref319","_callee204","_context204","_ref320","_callee203","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context203","_ref321","_callee202","_ref322","_ref323","_context202","_x276","_x275","_x274","getTokenApy","_ref324","_callee206","_context206","_x277","getTokensToMigrate","_callee209","_args209","_context209","_ref326","_callee208","_context208","_ref327","_callee207","_ref328","_context207","_x279","_x278","getProtocolsTokensBalances","_callee211","tokenBalances","minTokenBalance","protocolsTokens","_args211","_context211","_ref330","_callee210","tokenContract","_context210","_x280","_ref331","_callee212","_args212","_context212","_x281","_x282","_x283","getAvgAPYStats","_ref332","_callee213","apiResults","_args213","_context213","_x284","_x285","_ref333","_callee214","count","_conversionRate","ToTokenConfig","_args214","_context214","_x286","_x287","getTokenScore","_ref334","_callee215","_ref335","_ref336","tokenScore","_context215","protocolScore","getTokenScoreApi","_x288","_x289","_ref337","_callee216","scores","_context216","_x290","_x291","_ref338","_callee217","idleGovTokenShowAPR","idleAPR","_args217","_context217","_x292","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","defaultOpacity","hidden","interactive","rainbow","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","cDAI","anonymous","indexed","ERC20","5","best","DAI","govTokensDisabled","minAmountForMint","wyre","destCurrency","ramp","swapAsset","defiPrime","IdleTokenV4","aToken","functions","risk","80001","137","crToken","USDC","WETH","42","cToken","1337","IdleTokenV3","yToken","IdleConverterPersonalSignV4","iToken","CHAI","USDT","SUSD","skipMintForDeposit","TUSD","WBTC","RAI","enabledEnvs","fToken","FEI","1","defiScoreDisabled","canDeposit","disabledMessageRedeemKey","disabledMessageDepositKey","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","stakingEnabled","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","Button","claimCallback","TranchePage","userHasFunds","componentLoaded","loadTransactions","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","valueHover","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","SLP","showAPR","showPrice","COMP","stkAAVE","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","iconDark","iconInactive","iconInactiveDark","tools","forum","leaderboard","overview","delegate","landingStrategies","comingSoon","titlePostfix","govTokensEnabled","chartColor","descLong","descShort","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","MATIC","USD","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","idleDAIv2","IdleTokenV2","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","captionPos","envParams","accountId","prod","referrerAccountId","dest","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","contractFound","contractIndex","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","HeadingComponent","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.77cd0480.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName,networkId=null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]){\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash,startLen=7,endLen=4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const params = [{\n      chainId:web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method:'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    if (chainId === 1){\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n\n          // console.log('trancheTokenBalance',protocol,token,tranche,trancheTokenBalance);\n\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      tokensToMigrate:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig,this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token,account)\n      ]);\n\n      if (migrationEnabled){\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy:this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig,account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section,env=null) => {\n    const envUrl = this.getGlobalConfig(['environments',env,'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to:tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests',endpoint,dataToCache);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n\n    // console.log('makeCachedRequest - CACHE',key,dataToCache);\n\n    // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find( env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId=null) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    if (!networkId || !this.getGlobalConfig(['network','enabledNetworks']).includes(networkId)){\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats','aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n    return aprs;\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n      if (filteredCachedData && filteredCachedData.length>0){\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          filteredData = filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n          if (filteredData.length>0){\n            return filteredData;\n          }\n        }\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = this.BNify(0);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        } else {\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find( tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase() ) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key,key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key,{});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key,cachedData,TTL,true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSupplySpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches=null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length){\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches,async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,null),\n            this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,null)\n          ]);\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens=true,allNetworks=false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    let networkIds = [networkId];\n    if (allNetworks){\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n      if (!tvls){\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls){\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0)) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    // console.log('portfolio',this.props.portfolio);\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  {\n                    /*\n                    <TrancheField\n                      fieldInfo={{\n                        name: `tokenIcon`,\n                        props: {\n                          width:'1.4em',\n                          height:'1.4em'\n                        }\n                      }}\n                      {...this.props}\n                      tokenConfig={tokenConfig}\n                      token={strategyInfo.token}\n                      tranche={strategyInfo.tranche}\n                      protocol={strategyInfo.protocol}\n                    />\n                    */\n                  }\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalAmountLent).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.23,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Flex\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments:{\n    live:{\n      requiredNetwork:1,\n      url:\"https://idle.finance\"\n    },\n    beta:{\n      requiredNetwork:1,\n      url:\"https://beta.idle.finance\"\n    },\n    polygon:{\n      requiredNetwork:137,\n      url:\"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        1:[\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"],\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        networkId:1,\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies:{\n    best: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      strategy:'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId:137,\n      enabledEnvs: [],\n      strategy:'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    tranches: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy:'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1,137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/aprs/\",\n        137:\"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#333',\n          rgb:[51, 51, 51],\n          hsl:['0, 0%, 20%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#8247E5',\n          rgb:[130, 71, 229],\n          hsl:['262, 75%, 59%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Ethereum',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        color:'#9064ff',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        color:'#ff4a8d',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        color:'#f6c343',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        version:'v1',\n        name:'Polygon',\n        color:'#8247E5',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        color:'#3099f2',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        color:'#4474f1',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://polygon-rpc.com'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      availableNetworks:[1,137],\n      subComponent:PolygonBridge,\n      image:'images/protocols/polygon.svg',\n      label:'Ethereum ⇔ Polygon Bridge',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:ERC20Predicate,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:EtherPredicate,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            abi:DepositManager,\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4655,\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./networks.json\": 1876,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4868,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4442;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('initWeb3_1',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,currentWeb3,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,currentWeb3,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      const contracts = Object.assign([],this.state.contracts);\n      const contractFound = contracts.find( c => c.name===contractInfo.name );\n      if (!contractFound){\n        contracts.push(contractInfo);\n      } else {\n        const contractIndex = contracts.indexOf(contractFound);\n        contracts[contractIndex] = contractInfo;\n      }\n\n      this.setState({\n        contracts\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      // console.log('initAccount',account,this.props.context.account);\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}