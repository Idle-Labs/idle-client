{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","IconBox/IconBox.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","configs/availableTranches.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","TranchesList/TranchesList.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","TrancheField/TrancheField.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","Title/Title.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","handleClick","backgroundColor","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mx","margin","my","alignItems","flexDirection","justifyContent","align","image","iconBgColor","mr","isSidebar","p","borderRadius","theme","colors","transactions","actionBg","redeem","src","height","isMobile","imageProps","useIconOnly","name","icon","size","color","iconColor","iconProps","fontWeight","fontSize","textProps","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","RoundIconButton","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","IconBox","isVisible","mt","textAlign","dangerouslySetInnerHTML","__html","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","waitText","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","bg","twitterIcon","radioBtn","button","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheLastHarvest","_ref31","_callee19","strategyConfig","idleStrategyAddress","latestHarvestBlock","_ref32","_ref33","blockInfo","totalAmount","_context19","Strategy","genericContractCallCachedTTL","initContract","abi","getBlockInfo","returnValues","_x14","getGovTokenApr","_ref34","_callee20","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref35","_ref36","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context20","getTokenConfig","_address","apr2apy","apr","apy","_x15","_x16","_x17","_x18","getTrancheRewardTokensInfo","_ref37","_callee22","tokensDistribution","_context22","_ref38","_callee21","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref39","_ref40","_firstHarvest","_latestHarvest","firstBlock","_ref41","_ref42","poolSize","elapsedBlocks","elapsedSeconds","_context21","rewardsRate","now","genericContractCallCached","total","_x21","_x19","_x20","_ref43","_callee24","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref44","_ref45","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_context24","sort","_ref46","_callee23","trancheTokenTransferEvent","tokenTransferEvent","_ref47","_ref48","tokenConversionRate","_context23","_x25","trancheTokenAmount","hashKey","trancheTokens","_x22","_x23","_x24","getTrancheUserTransactions","_ref49","_callee25","_context25","_x26","_x27","_x28","getTrancheFirstDepositTx","_ref50","_callee26","_context26","_x29","_x30","_x31","getAmountDepositedTranche","_ref51","_callee27","_context27","_x32","_x33","_x34","_ref52","_callee28","_ref53","_ref54","userAvgPrice","_context28","_x35","_x36","getAmountLent","_callee29","amountLents","_args29","_context29","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee35","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref57","_ref58","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args35","_context35","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref59","_callee30","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context30","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x37","_ref60","_callee31","_context31","_x38","match","_ref61","_callee32","_context32","_x39","_ref62","_callee33","_context33","_x40","items","to_address","_ref63","_callee34","polygonTx","erc20RootToken","_context34","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x41","getPolygonBaseTxs","_callee36","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args36","_context36","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee37","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args37","_context37","filterEthereumTxs","_callee38","_args38","_context38","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee39","resultData","_resultData","allAvailableTokens","_args39","_context39","processStoredTxs","t1","_callee40","contractInstance","_context40","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref69","_callee41","_ref70","_ref71","_context41","getTransactionReceipt","_x42","_ref72","_callee42","_args42","_context42","_x43","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref73","_callee43","processTransactions","idleTokensAddresses","_args43","_context43","mappedTx","_x44","_x45","filterEtherscanTxs","_ref74","_callee44","processTxs","_args44","_context44","_x46","_ref75","_callee45","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args45","_context45","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x47","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref76","_callee50","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args50","_context50","baseTokenConfig","baseTokenAddress","_ref77","_callee49","minedTxs","_context49","_ref78","_callee48","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context48","getCurveTokenPrice","_ref79","_callee46","_context46","_x52","_x53","baseTokensConfig","t2","_ref80","_callee47","_context47","_x54","_x55","_x50","_x51","_x49","_x48","_ref81","_callee56","txsToProcess","_args56","_context56","_ref82","_callee55","_context55","_ref83","_callee54","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context54","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref84","_callee51","_context51","_x60","_x61","_ref85","_callee52","_context52","_x62","_x63","oldContract","events","raw","_ref86","_callee53","_context53","_x64","_x65","decodeLog","_token","_x58","_x59","_x57","_x56","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref87","_callee57","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args57","_context57","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x66","getBestTranche","_callee58","trancheType","maxApy","trancheTypes","trancheStrategyConfig","_args58","_context58","timetamp","splice","availableTrancheInfo","tInfo","_ref89","_callee59","error_callback","config","_args59","_context59","post","catch","_x67","_ref90","_callee60","_args60","_context60","_x68","_ref91","_callee61","apiKeyIndex","apiKey","_args61","_context61","_x69","_ref92","_callee62","return_data","_args62","_context62","_x70","makeCachedPostRequest","_ref93","_callee63","_args63","_context63","_x71","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee64","page","googlePageviewInfo","isOrigin","_args64","_context64","ga","_ref95","_callee66","googleEventsInfo","debugEnabled","originOk","_args66","_context66","analytics","google","addPostfixForTestnet","availableNetworks","_ref96","_callee65","_context65","hitCallback","hitCallbackFail","_x73","_x74","_x72","createContract","_ref97","_callee67","_context67","_x75","_x76","_x77","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee70","activeOnly","whitelist","proposals","validProposals","_args70","_context70","addr","_ref99","_callee69","checkedStrategies","_context69","end","author","snapshot","strategies","_ref100","_callee68","tokenContract","_context68","_x79","_x78","getAprsFromApi","_callee71","endpointInfo","aprs","_args71","_context71","_ref102","_callee72","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args72","_context72","_x80","getTokenExchangeRate","_ref103","_callee73","exchangeRateParams","exchangeRate","_context73","_x81","_x82","getTokenDecimals","_ref104","_callee74","_context74","_x83","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee75","idleTokenConfig","feeDistributorConfig","_context75","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee76","contractPaused","_args76","_context76","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref107","_callee78","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context78","lastAllocationsPromise","_ref108","_callee77","lastAllocations","_context77","_x85","_x86","alloc","_x84","_ref109","_callee79","oldContractBalance","oldContractTokenDecimals","oldContractName","_context79","_x87","_x88","_ref110","_callee80","eventName","startBlock","endBlock","blocksPerCall","lastBlockNumber","calls","toBlock","all_past_events","_args80","_context80","getBlockNumber","getContractPastEvents","fromBlock","_x89","_x90","estimateMethodGasUsage","_ref111","_callee81","methodParams","_contract$methods","functionCall","gasLimit","_ref112","_ref113","_args81","_context81","getGasPrice","estimateGas","_x91","_x92","_ref114","_callee82","userAddress","signedParameters","callback_receipt","_contract$methods2","_context82","on","once","confirmationNumber","receipt","_x93","_x94","_x95","_x96","_x97","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref115","_callee83","biconomyInfo","res","_context83","limits","apiId","headers","x-api-key","_x98","sendTxWithPermit","_ref116","_callee84","_contract$methods3","messageToSign","_this$getSignaturePar","_context84","encodeABI","personal","sign","_x99","_x100","_x101","_x102","_x103","_x104","buildBiconomyErc20ForwarderTx","_ref117","_callee85","permitType","callData","buildParams","_context85","txGas","erc20ForwarderClient","buildTx","_x105","_x106","_x107","_x108","_x109","_ref118","_callee87","_context87","_ref119","_callee86","_context86","_x111","_x112","_x110","sendBiconomyTxWithErc20Forwarder","_ref120","_callee88","req","metaInfo","txResponse","fetchReceiptIntervalId","_context88","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x113","_x114","_x115","_x116","sendBiconomyTxWithPersonalSign","_ref121","_callee89","_this$getSignaturePar2","_context89","getNonce","_x117","_x118","_x119","_x120","signPermitEIP2612","_ref122","_callee90","erc20Name","owner","spender","deadline","domain","permit","domainData","_context90","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x121","_x122","_x123","_x124","_x125","_x126","_x127","_x128","signPermit","_ref123","_callee91","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args91","_context91","net","getId","round","nonceMethod","pow","allowed","response","_x129","_x130","_x131","_ref124","_callee92","permitParams","methodAbi","useNonce","_args92","_context92","_jsonInterface","f","unshift","_x132","_x133","_x134","_x135","_x136","_x137","_x138","sendSignedTx","_ref125","_callee93","MetaTransaction","dataToSign","_context93","_x139","_x140","_x141","_x142","_x143","checkTokenApproved","_ref126","_callee94","contractAddr","walletAddr","_ref127","_ref128","allowance","_context94","getAllowance","gte","_x144","_x145","_x146","_ref129","_callee95","_context95","_x147","_x148","_x149","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee97","highestValue","_args97","_context97","lendRates","aprInfo","tokenAPR","_ref131","_callee96","_context96","_x150","_ref132","_callee98","_args98","_context98","_x151","_x152","calculateGaugeBoost","_ref133","_callee99","gaugeName","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_context99","getTokenTotalSupply","_x153","_x154","_x155","getGaugeNextWeight","_ref134","_callee100","nextGaugeTimestamp","_ref135","_ref136","gaugeWeight","_context100","_x156","getGaugeRewardsTokens","_ref137","_callee102","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndexes","_args102","_context102","rate","maxRewards","_ref138","_callee101","tokenIndex","rewardTokenAddress","_ref139","_ref140","rewardData","rewardTokenBalance","cdoConfig","_ref141","_ref142","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_context101","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x158","_x157","_ref143","_callee104","_args104","_context104","_ref144","_callee103","tokenGlobalConfig","stakingRewardsContract","_context103","_x161","_x159","_x160","_ref145","_callee105","field","addGovTokens","_args105","_context105","loadTrancheField","_x162","_x163","_x164","_x165","_x166","_x167","_x168","_x169","_ref146","_callee106","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref147","_ref148","totalSupply","virtualPrice","_ref149","_ref150","gaugeBalance","lastPrice1","staked1","totalStaked","_ref151","_ref152","deposited1","lastPrice","_ref153","_ref154","redeemable1","staked2","_ref155","_ref156","earningsStart","trancheApy2","deposited3","earningsEnd","_ref157","_ref158","trancheFee","earningsCounter","feesEnd","feesStart","_ref159","_ref160","deposited4","redeemable3","_ref161","_ref162","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref163","_ref164","_ref165","_ref166","earningsPerc","secondsFromFirstTx","_ref167","_ref168","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args106","_context106","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x170","_x171","_x172","_x173","_x174","_x175","_x176","loadAssetField","_ref169","_callee107","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref170","_ref171","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref172","_ref173","amountLentCurve1","redeemableBalanceCurve","_ref174","_ref175","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref176","_ref177","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref178","_ref179","tokenPriceFirstDeposit","_ref180","_ref181","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref182","_ref183","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref184","_ref185","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref186","_ref187","amountLentCurve2","redeemableBalanceCurve1","_ref188","_ref189","redeemableBalance2","_args107","_context107","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x177","_x178","_x179","_x180","getIdleTokenSupply","_ref190","_callee108","idleTokenSupply","_args108","_context108","_x181","getIdleTokenPriceWithFee","_ref191","_callee109","_ref192","_ref193","fee","priceWFee","_args109","_context109","eq","_x182","_x183","_ref194","_callee110","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args110","_context110","_x184","clearCachedData","clear_all","parent_key","useLocalStorage","requiredNetworkId","allCachedData","expirationDate","_ref195","_callee111","_ref196","_ref197","idleTokensTotalSupply","userShare","_context111","_x185","_x186","openWindow","open","getActiveCoverages","_callee113","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args113","_context113","coverages","_ref199","_callee112","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context112","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x187","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref200","_callee115","incidentsInfo","_ref201","_ref202","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context115","directProps","contractInfo","buyer","_ref203","_callee114","cover","coverId","claimSubmittedEvent","_ref204","_ref205","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref206","_ref207","_context114","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x189","_x188","getBatchedDepositExecutions","_ref208","_callee116","_context116","_x190","getBatchedDeposits","_callee118","filter_by_status","batchDepositConfig","batchedDeposits","_args118","_context118","_ref210","_callee117","currBatchIndex","batchIndex","_ref211","_ref212","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context117","_x191","getETHBalance","_ref213","_callee119","fixDecimals","_args119","_context119","_x192","_ref214","_callee120","_ref215","_ref216","_args120","_context120","ERC20","_x193","_x194","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref217","_callee121","_args121","_context121","_x195","_ref218","_callee122","_args122","_context122","_x196","_ref219","_callee123","_args123","_context123","_x197","_x198","getProtocolBalance","_ref220","_callee124","_context124","_x199","_x200","getAprs","_ref221","_callee125","_context125","addresses","_x201","genericIdleCall","_ref222","_callee126","callParams","_args126","_context126","_x202","_ref223","_callee127","_contract$methods4","_args127","_context127","_x203","_x204","_ref224","_callee129","_args129","_context129","_ref225","_callee128","_context128","_x206","_x207","_x205","getTxDecodedLogs","_ref226","_callee131","logAddr","decodeLogs","internalTransfers","_context131","_ref227","_callee130","_context130","_x212","_x213","_x208","_x209","_x210","_x211","blocksToSeconds","blocks","blocksPerSeconds","_callee132","_context132","_callee133","blockInfoToSave","_args133","_context133","getBlock","_ref230","_callee134","_args134","_context134","getPastEvents","_x214","_x215","_ref231","_callee135","_args135","_context135","_x216","_x217","_ref232","_callee136","_args136","_context136","_x218","_x219","cachedContractCall","_ref233","_callee137","_args137","_context137","_x220","_x221","_ref234","_callee138","_contract$methods5","_args138","_context138","_x222","_x223","_ref235","_callee139","async","_args139","_context139","_x224","_x225","getUnlentBalance","_ref236","_callee140","unlentBalance","_context140","_x226","_ref237","_callee141","_args141","_context141","_x227","getLastAllocations","_ref238","_callee143","tokenAllocations","_context143","_ref239","_callee142","_context142","_x229","_x230","_x228","_ref240","_callee144","protocolsAprs","_ref241","_ref242","govTokensBalances","_args144","_context144","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x231","getSushiswapPoolTokenPrice","_ref243","_callee145","_ref244","_ref245","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref246","_ref247","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context145","getSushiswapConversionRate","_x232","_ref248","_callee146","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context146","_x233","_x234","_ref249","_callee147","useWETH","unires","_args147","_context147","addressForPrice","_x235","_x236","getCurveDepositedTokens","_ref250","_callee148","idleTokensBalances","remainingCurveTokens","_args148","_context148","_x237","getCurveUnevenTokenAmounts","_ref251","_callee149","amounts","max_burn_amount","unevenAmounts","_context149","getCurveDepositContract","_x238","_x239","_callee150","curveRatesInfo","_args150","_context150","_callee151","_context151","strategyTokens","getCurveAPYContract","_callee152","blocksForPrevTokenPrice","_ref255","_ref256","prevTokenPrice","blocksMultiplier","curveAPR","_context152","getCurveTokenSupply","_callee153","_context153","getCurvePoolContract","_callee154","_args154","_context154","_callee155","_args155","_context155","_ref260","_callee156","_ref261","_ref262","_context156","_x240","_callee157","depositContractInfo","_context157","getCurveZapContract","_callee158","zapContractInfo","_context158","_callee159","poolContractInfo","_context159","getCurveSwapContract","_callee160","migrationContractInfo","_context160","getCurveIdleTokensAmounts","_callee162","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args162","_context162","_ref268","_callee161","coinIndex","curveIdleTokens","_context161","migrationParams","_x241","getCurveTokensAmounts","_callee164","useCoinIndex","_args164","_context164","_ref270","_callee163","_ref271","_ref272","idleTokenPrice","totalTokenSupply","_context163","_x242","getCurveAmounts","_ref273","_callee166","_args166","_context166","_ref274","_callee165","_context165","_x245","_x243","_x244","getCurveTokenAmount","_ref275","_callee167","_args167","_context167","_x246","getCurveSlippage","_ref276","_callee168","uneven_amounts","depositContract","_ref277","_ref278","Sv","_args168","_context168","_x247","_x248","_ref279","_callee169","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref280","_ref281","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args169","_context169","IAaveIncentivesController","emissionPerSecond","_x249","_callee171","_args171","_context171","_ref283","_callee170","_ref284","_ref285","_context170","_x250","getWMaticApr","_ref286","_callee172","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args172","_context172","_x251","_x252","getStkAaveApr","_ref287","_callee173","aaveConversionRate","stkAaveAPR","stkAaveValue","_args173","_context173","_x253","_x254","getCompAPR","_ref288","_callee174","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args174","_context174","_x255","_x256","getCompSpeed","_ref289","_callee175","cTokenAddress","compSpeed","_context175","_x257","_ref290","_callee176","cTokenInfo","compoundAllocationPerc","_ref291","_ref292","cTokenTotalSupply","compoundPoolShare","_args176","_context176","_x258","_callee178","_args178","_context178","_ref294","_callee177","_ref295","_ref296","_context177","_x259","_callee180","_args180","_context180","_ref298","_callee179","_ref299","_ref300","compApr","_context179","_x260","getTokensCsv","_callee183","csv","_context183","prototype","sum","pv","cv","avg","_ref302","_callee182","_context182","_ref303","_callee181","rates","header","rows","aprAvg","scoreAvg","lastRow","_context181","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x262","_x261","_callee185","convertToken","_args185","_context185","_ref305","_callee184","compTokenBalance","_context184","_x263","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref306","_callee187","govTokensUserDistribution","_args187","_context187","_ref307","_callee186","_context186","_x265","_x264","getGovTokensDistributionSpeed","_ref308","_callee189","govTokensDistribution","_args189","_context189","_ref309","_callee188","govSpeed","_context188","_x267","_x266","getGovTokensAprs","_ref310","_callee191","govTokensAprs","_args191","_context191","_ref311","_callee190","_ref312","_ref313","_ref314","_ref315","cTokenConfig","_context190","aprTooltipMode","_x270","_x268","_x269","_callee193","_args193","_context193","_ref317","_callee192","govTokenBalance","fromTokenConfig","_context192","_x271","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee194","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args194","_context194","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref319","_callee196","govTokensAmounts","_context196","getGovTokensUserAmounts","_ref320","_callee195","govTokenIndex","govTokenAddress","_context195","getGovTokenAddessByIndex","_x274","_x275","_x272","_x273","_ref321","_callee197","_context197","_x276","_x277","_ref322","_callee198","_context198","_x278","_x279","_callee201","govTokenConfigForced","_args201","_context201","_ref324","_callee200","_context200","_ref325","_callee199","_context199","_x281","_x282","_x280","getTokenFees","_callee202","_args202","_context202","_callee203","_ref328","_ref329","feePercentage","gain","fees","_args203","_context203","_ref330","_callee204","_args204","_context204","_x283","getTotalTVL","_callee205","tokensTVL","_context205","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee209","_context209","_ref333","_callee208","_context208","_ref334","_callee207","oldTokenTVL","idleTokenName","_ref335","_ref336","oldTokenConfig","_ref340","_ref341","oldTokenPrice","oldTotalSupply","_context207","showAUM","_ref337","_callee206","_ref338","_ref339","govTokenConversionRate","govTokenBalanceConverted","_context206","_x286","oldProtocols","oldProtocol","protocolPos","_x285","_x284","getSubstackLatestFeed","_callee210","idleSubstackFeed","latestFeed","_context210","getTrancheAggregatedStats","_callee214","totalAUM","_args214","_context214","_ref344","_callee213","_context213","_ref345","_callee212","_context212","_ref346","_callee211","_ref347","_ref348","_context211","_x289","_x288","_x287","getAggregatedStats","_callee216","allNetworks","networkIds","tvls","_args216","_context216","_ref350","_callee215","_context215","_x290","getAggregatedStats_chain","_callee221","avgAPR","_args221","_context221","availableStrategiesNetworks","_ref352","_callee220","_context220","_ref353","_callee219","_context219","_ref354","_callee218","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context218","_ref355","_callee217","_ref356","_ref357","_context217","_x294","_x293","_x292","_x291","getTokenApy","_ref358","_callee222","_context222","_x295","getTokensToMigrate","_callee225","_args225","_context225","_ref360","_callee224","_context224","_ref361","_callee223","_ref362","_context223","_x297","_x296","getProtocolsTokensBalances","_callee227","tokenBalances","minTokenBalance","protocolsTokens","_args227","_context227","_ref364","_callee226","_context226","_x298","getTokenConversionRateField","_ref365","_callee228","_args228","_context228","_x299","_x300","_ref366","_callee229","_args229","_context229","_x301","_x302","_x303","getAvgAPYStats","_ref367","_callee230","apiResults","_args230","_context230","_x304","_x305","_ref368","_callee231","statsTokenConfig","ToTokenConfig","_args231","_context231","addressForPriceFrom","_x306","_ref369","_callee232","count","_conversionRate","_args232","_context232","_x307","_x308","getTokenScore","_ref370","_callee233","_ref371","_ref372","tokenScore","_context233","protocolScore","getTokenScoreApi","_x309","_x310","_ref373","_callee234","scores","_context234","_x311","_x312","_ref374","_callee235","idleGovTokenShowAPR","idleAPR","_args235","_context235","_x313","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","messages","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","MUSD3CRV","PBTCCRV","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","veTokenBalance","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","trancheTokenConfig","claimableRewards","loadGauges","veTokenBalanceUsed","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","gaugeToken","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","userBoostedShare","_this7","userDistributionRate","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","votingWeight","depositedAmount","withdrawnAmount","_this8","votingPowerPercentage","gaugeAddress","_this9","setSelectedAction","setStakeAction","setClaimToken","Button","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","TrancheField","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","borderTop","ImageButton","contractApprovedCallback","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","param3","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","timeout","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","LiquidityGauge","multiRewards","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args8","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","HeadingComponent","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"sghBAIMA,mLAEF,IAAMC,EAAYC,OAAOC,OACvB,CACEC,GAAI,EACJC,MAAO,OACPC,GAAI,CAAC,OAAQ,IAEfC,KAAKC,MAAMP,WAGb,OACEQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,UAAWA,EACXY,eAAe,EACfC,SAAUP,KAAKC,MAAMM,SACrBC,WAAYR,KAAKC,MAAMO,WACvBC,YAAaT,KAAKC,MAAMQ,YACxBC,gBAAiB,QAEjBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,GAAIZ,KAAKC,MAAMY,OAASb,KAAKC,MAAMY,OAAS,EAC5CC,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgBjB,KAAKC,MAAMiB,MAAQlB,KAAKC,MAAMiB,MAAQ,UAErDlB,KAAKC,MAAMkB,MAAQnB,KAAKC,MAAMmB,YAC3BlB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEU,GAAIrB,KAAKC,MAAMqB,UAAY,EAAI,EAC/BC,EAAGvB,KAAKC,MAAMqB,UAAY,EAAI,CAAC,MAAO,OACtCE,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBACEV,KAAKC,MAAMmB,YACPpB,KAAKC,MAAMmB,YACXpB,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAGpD3B,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEsB,MAAO,SACPY,IAAK9B,KAAKC,MAAMkB,MAChBY,OAAQ/B,KAAKC,MAAM+B,SAAW,QAAU,QACxClC,MAAOE,KAAKC,MAAM+B,SAAW,QAAU,SACnChC,KAAKC,MAAMgC,cAIrB/B,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEsB,MAAO,SACPY,IAAK9B,KAAKC,MAAMkB,MAChBY,OAAQ/B,KAAKC,MAAM+B,SAAW,QAAU,QACxClC,MAAOE,KAAKC,MAAM+B,SAAW,QAAU,SACnChC,KAAKC,MAAMgC,aAEfjC,KAAKC,MAAMiC,YACbhC,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEsB,MAAO,SACPiB,KAAMnC,KAAKC,MAAMmC,KACjBC,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCM,MAAOtC,KAAKC,MAAMsC,UAAYvC,KAAKC,MAAMsC,UAAY,UACjDvC,KAAKC,MAAMuC,YAGjBtC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEU,GAAIrB,KAAKC,MAAMqB,UAAY,EAAI,EAC/BC,EAAGvB,KAAKC,MAAMqB,UAAY,EAAI,CAAC,MAAO,OACtCE,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBACEV,KAAKC,MAAMmB,YACPpB,KAAKC,MAAMmB,YACXpB,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAGpD3B,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEsB,MAAO,SACPiB,KAAMnC,KAAKC,MAAMmC,KACjBC,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCM,MAAOtC,KAAKC,MAAMsC,UAAYvC,KAAKC,MAAMsC,UAAY,UACjDvC,KAAKC,MAAMuC,aAIrBtC,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CAAM6C,WAAY,EAAGC,SAAU,CAAC,EAAG,IAAQ1C,KAAKC,MAAM0C,WACnD3C,KAAKC,MAAM2C,eAvFKC,aA+FdpD,sIC/FTqD,6MAGJC,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,+IAGE,IAAAC,EAAAnD,KACHoD,EAAkB,IAChBC,EAAsC,qBAAtBrD,KAAKC,MAAMoD,QAA2BC,MAAMtD,KAAKC,MAAMoD,UAAiC,IAAtBrD,KAAKC,MAAMoD,QAA0C,OAAtBrD,KAAKC,MAAMoD,OAAsC,KAApBrD,KAAKC,MAAMoD,OAE/J,GAAIA,EACF,OAAQrD,KAAKC,MAAMsD,MACjB,IAAK,QACHH,EAAkBpD,KAAK+C,cAAcS,YAAYH,EAAOrD,KAAKC,MAAMwD,WACrE,MACA,QACEL,EAAkBpD,KAAK+C,cAAcW,iBAAiBL,EAAOrD,KAAKC,MAAM0D,SAAS3D,KAAKC,MAAM2D,aAAa5D,KAAKC,MAAM4D,mBAIxHT,EAAkB,IAGpB,IAAMU,EAAY,CAChBhE,MAAM,EACNiB,WAAW,SACXC,cAAc,MACdC,eAAe,UAIbjB,KAAKC,MAAM6D,WAAanE,OAAOoE,KAAK/D,KAAKC,MAAM6D,WAAWE,QAC5DrE,OAAOoE,KAAK/D,KAAKC,MAAM6D,WAAWG,QAAQ,SAAA1C,GACxCuC,EAAUvC,GAAK4B,EAAKlD,MAAM6D,UAAUvC,KAIxC,IAAM2C,EAAWlE,KAAKC,MAAMkE,MAA4B,MAApBf,EAC9BgB,EAAUpE,KAAKC,MAAMmE,QAAUpE,KAAKC,MAAMmE,QAAU,QAE1D,OACEC,EAAAlE,EAAAC,cAACkE,EAAA,EACKR,EAGU,SAAZM,GAAsBF,GACpBG,EAAAlE,EAAAC,cAACkE,EAAA,EAAStE,KAAKC,MAAMsE,UAAYvE,KAAKC,MAAMkE,MAEhDE,EAAAlE,EAAAC,cAACkE,EAAA,EAAStE,KAAKC,MAAQmD,GAET,UAAZgB,GAAuBF,GACrBG,EAAAlE,EAAAC,cAACkE,EAAA,EAAStE,KAAKC,MAAMsE,UAAYvE,KAAKC,MAAMkE,cA9D9BtB,aAqEXC,4BCxEf0B,EAAAC,QAAA,CAAkBC,aAAA,qCAAAC,OAAA,km3lJCAlBH,EAAAC,QAAA,CAAkBG,gBAAA,sCAAAC,eAAA,qCAAAC,YAAA,kCAAAC,KAAA,2BAAAC,cAAA,iJCGZC,mLACK,IAAAC,EAAAlF,KAEDmF,IAAmBnF,KAAKC,MAAMkF,eAEpC,OACEjF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEb,MAAO,EACPsF,GAAI,aACJrE,WAAY,UAGVf,KAAKC,MAAMQ,aACVP,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CACEC,YAAa,CACXC,OAAO,EACPzF,MAAM,OACNiC,OAAO,QAETyD,SAAU,QACVC,SAAU,YACVhF,YAAaT,KAAKC,MAAMQ,cAI3BT,KAAKC,MAAM2C,MAAQ5C,KAAKC,MAAM2C,KAAKoB,OAAO,GACzC9D,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE+E,GAAI,CAAC,EAAE,GACPhD,SAAU,CAAC,EAAE,GACbD,WAAY,EACZH,MAAO,WACPqD,WAAY,YACZC,QAAS5F,KAAKC,MAAMQ,aAEpBT,KAAKC,MAAM2C,QAIZ5C,KAAKC,MAAM+B,UAAYmD,IAAmBnF,KAAKC,MAAM4F,MAAQ7F,KAAKC,MAAM4F,KAAK7B,OAAO,GACpFhE,KAAKC,MAAM4F,KAAKC,IAAI,SAACD,EAAKE,GACxB,IAAMC,EAAOd,EAAKjF,MAAMgG,UAAYf,EAAKjF,MAAMgG,SAASF,IAAkB,KACpElD,EAAYmD,EAAOE,IAAOC,IAChC,OACEjG,EAAAC,EAAAC,cAACyC,EAAD,CACEuD,GAAI,CAAC,EAAE,GACPV,GAAI,CAAC,EAAE,GACPjD,WAAY,EACZC,SAAU,CAAC,EAAE,GACbiD,WAAY,YACZU,MAASnB,EAAKjF,MAAM+B,SAMhB,KAN2B,CAC7BsE,SAAS,MACTC,SAAU,SACVC,WAAY,SACZC,aAAc,WACdC,WAAU,aAAAC,OAAezB,EAAKjF,MAAMwB,MAAMC,OAAOkF,UAEnDC,IAAG,mBAAAF,OAAqBZ,GACxBzD,MAAO0D,EAAO,WAAa,YAC3BJ,QAASI,EAAO,SAAAc,GAAC,OAAI5B,EAAKjF,MAAM8G,YAAYf,IAAQ,MAEnDH,aA5DMhD,aAsEVoC,gHCtET+B,mLAEF,IAAM1B,EAAc3F,OAAOC,OAAO,CAChC2B,EAAE,EACFgE,OAAO,EACPzF,MAAM,OACNiC,OAAO,OACPP,aAAa,MACbyF,UAAU,eACVC,SAASlH,KAAKC,MAAMiH,UACpBlH,KAAKC,MAAMqF,aAIb,OAFAA,EAAY6B,SAAW7B,EAAYxF,MAGhCsH,EAAAjH,EAAAC,cAACiH,EAAA,EAAD,CACE/B,YAAaA,EACb7E,YAAaT,KAAKC,MAAMQ,aAExB2G,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACEhF,MAAO,YACPH,KAAMnC,KAAKC,MAAMwF,SACjBpD,KAAOrC,KAAKC,MAAMuF,SAAWxF,KAAKC,MAAMuF,SAAW,kBAtBhC3C,aA6BfmE,uIC7BTO,6MAEJC,MAAQ,CACN5E,KAAK,QAIPG,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,oQAIL1H,KAAKyH,oBAAqB,uLAGHE,EAAUC,mEACjC5H,KAAKkD,YACeyE,EAAUE,OAAS7H,KAAKC,MAAM4H,MAEhD7H,KAAK0H,6LAIUI,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,iQAIDE,GAA+C,IAA9BjI,KAAKC,MAAMgI,eAC9BrF,EAAO5C,KAAK+C,cAAcmF,YAAYlI,KAAKC,MAAM4H,OACrCI,kCAAuBjI,KAAK+C,cAAcoF,WAAWnI,KAAKC,MAAM4H,oDAAQ,aAAlFO,UAEJxF,EAAOwF,GAETpI,KAAKqI,aAAa,CAChBzF,6IAKF,IAAM0F,EAAUC,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CAAQnG,KAAK,SAC7B,OAAOrC,KAAKwH,MAAM5E,KAAO2F,EAAApI,EAAAC,cAACoI,EAAA,EAAD7I,OAAAC,OAAA,CAAM6I,QAAS,UAAczI,KAAKC,OAAQD,KAAKwH,MAAM5E,MAAe0F,SAxDzEzF,aA4DT0E,0HCzCAmB,mLAfX,OACEC,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,kBACtBH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBlI,GAAI,CAAC,EAAE,KACtD+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBlI,GAAI,CAAC,EAAE,KACtD+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBlI,GAAI,CAAC,EAAE,cAVnCiC,aCFvBkG,mLAEF,OACEJ,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CAAQgG,QAAS5F,KAAKC,MAAMQ,aAAiBT,KAAKC,MAAMqF,aACtDqD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,SACfD,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9I,MAAO,EAAG2I,QAASzI,KAAKC,MAAM+I,UAAY,OAAS,QACvDL,EAAAxI,EAAAC,cAAC6I,EAAD,OAEFN,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9I,MAAO,EAAG2I,QAASzI,KAAKC,MAAM+I,UAAY,OAAS,QACtDhJ,KAAKC,MAAMiJ,qBAbGrG,aAqBZkG,+GCrBTI,mLAGF,IAAMzJ,EAAYC,OAAOC,OAAO,CAC9B2B,EAAE,GACFvB,KAAKC,MAAMP,WACb,OACEQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,UAAWA,EACXa,SAAUP,KAAKC,MAAMM,SACrB6I,UAAWpJ,KAAKC,MAAMmJ,UACtB9I,cAAeN,KAAKC,MAAMK,eAE1BJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEI,WAAY,SACZC,cAAe,UAEfd,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEyC,KAAM,QACNC,MAAO,WACPH,KAAMnC,KAAKC,MAAMmC,KAAOpC,KAAKC,MAAMmC,KAAO,eACtCpC,KAAKC,MAAMuC,YAGfxC,KAAKC,MAAM2C,MACT1C,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEyJ,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,SACXC,wBAAyB,CACvBC,OAAOxJ,KAAKC,MAAM2C,OAEhB5C,KAAKC,MAAM0C,YAInB3C,KAAKC,MAAMwJ,kBArCD5G,aA6CPsG,0KCzCTO,6MACJlC,MAAQ,CACNmC,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,QAI3BjH,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,6JAILlD,KAAKyH,oBAAqB,sJAI1BzH,KAAK0H,gMAGkBC,EAAUC,8EACjC5H,KAAKkD,YAEgByE,EAAUsC,gBAAkBjK,KAAKC,MAAMgK,cAE1DjK,KAAKqI,aAAa,CAChBsB,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,MACzB,WACA7G,EAAKuE,aAEEC,EAAU3F,WAAahC,KAAKC,MAAM+B,UAC3ChC,KAAK0H,6LAIUI,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,2RAQG/H,KAAK+C,cAAcmH,mBAAmBlK,KAAKC,MAAMkK,6BAHzDL,oBACAC,yBACAC,6BAGIJ,EAAa,CACjBQ,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChBhJ,OAAO,SAAAiJ,GAAC,OAAIA,EAAErI,OACdsI,aAAa,SAACC,EAAM/D,GAClBgE,EAAKzC,aAAa,CAChBwB,cAAcgB,KAGlBE,aAAa,SAACF,EAAM/D,GAClBgE,EAAKzC,aAAa,CAChBwB,cAAc,QAGlBmB,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzBC,YAAa,SAAAT,GACX,OAAO,MAETlJ,MAAM,CACJ4J,QAAS,CACPC,UAAWtL,KAAKC,MAAMsL,OAAS,CAC7BC,WAAYxL,KAAKC,MAAMwB,MAAMC,OAAO+J,QAClC,CACFhD,QAAS,SAGbiD,OAAO,CACL9I,KAAK,CACHH,WAAW,IACXC,SAAS1C,KAAKC,MAAM+B,SAAW,GAAK,GACpC2J,WAAY3L,KAAKC,MAAMwB,MAAMmK,MAAMC,YAGvCC,QAAQ,CACNlJ,KAAK,CACHF,SAAS,GACTD,WAAW,IACXkJ,WAAY3L,KAAKC,MAAMwB,MAAMmK,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqBxM,KAAKC,MAAMsL,OAChCkB,sBAAsB,CAAEC,KAAM,SAC9BC,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,MACtD/L,OAAQb,KAAKC,MAAMsL,OAAS,CAACsB,IAAI,EAAEC,MAAM,GAAGC,OAAO,EAAEC,KAAK,GAAMhN,KAAKC,MAAM+B,SAAW,CAAE6K,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,KAGvKrD,EAAY,GAElB3J,KAAKC,MAAMkK,YAAY8C,UAAUhJ,QAAQ,SAACiJ,EAAaC,GACrD,IAAMC,EAAeF,EAAa/K,KAC5BkL,EAAeH,EAAaI,QAAQC,cAC1C,GAAIvD,EAAyBqD,GAAc,CACzC,IAAMG,EAA+BC,WAAWzD,EAAyBqD,GAAcK,MAAM,KAAKC,QAAQ,IAC1GhE,EAAUiE,KAAK,CACbxI,GAAGiI,EACHlL,KAAKiL,EACLjC,MAAMqC,EACNlL,MAAM,OAAOuL,IAAcC,MAAMb,UAAUG,GAAc9K,MAAMyL,IAAIC,KAAK,KAAK,IAC7EC,MAAOJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQnD,EAAK/H,cAAcmL,WAAWd,QAKnJpN,KAAKqI,aAAa,CAChBsB,YACAC,aACAE,kBACAC,uBACAC,iKAMF,IAAMH,IAA6C,OAA7B7J,KAAKwH,MAAMqC,gBAA0B7J,KAAKwH,MAAMuC,qBAAqB/J,KAAKwH,MAAMqC,cAAczE,MAAMpF,KAAKwH,MAAMuC,qBAAqB/J,KAAKwH,MAAMqC,cAAczE,IAC7K+I,EAA4C,OAA7BnO,KAAKwH,MAAMqC,cAA0BgE,IAAcC,MAAMb,UAAUjN,KAAKwH,MAAMqC,cAAc1H,OAAS0L,IAAcC,MAAMb,UAAUjN,KAAKwH,MAAMqC,cAAc1H,MAAMC,KAAOyL,IAAcC,MAAMb,UAAUjN,KAAKwH,MAAMqC,cAAc1H,MAAMC,KAAjM,GAAAuE,OAA2M3G,KAAKwH,MAAMqC,cAAc1H,KAApO,QAAkP,KAE5S,OACEkC,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtO,MAAO,EACPuO,SAAU,YAGRrO,KAAKwH,MAAMsC,kBAAoB9J,KAAKC,MAAMsL,QACxClH,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEE,OAAQ,EACRzB,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACb1D,UAAW,SACXvI,WAAY,SACZsN,SAAU,WACVvO,MAAO,CAAC,MAAM,OACdiC,OAAQ,CAAC,MAAM,OACff,cAAe,SACfC,eAAgB,UAGd4I,EACExF,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtO,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBoD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEG,GAAI,EACJzO,MAAO,CAAC,QAAQ,OAChBiC,OAAQ,CAAC,QAAQ,OACjBD,IAAG,qBAAA6E,OAAuBwH,KAE5B9J,EAAAlE,EAAAC,cAACoO,EAAA,EAAD,CACE9L,SAAU,CAAC,EAAE,GACbiB,SAAU,EACVlB,WAAY,EACZmB,aAAc,EACdP,OAAQwG,IAEVxF,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACE1L,SAAU,CAAC,EAAE,GACbD,WAAY,EACZH,MAAO,aAHT,YAKYtC,KAAKwH,MAAMqC,cAAcoE,QAIvC5J,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtO,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBoD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEG,GAAI,EACJzO,MAAO,CAAC,QAAQ,OAChBiC,OAAQ,CAAC,QAAQ,OACjBD,IAAG,0BAELuC,EAAAlE,EAAAC,cAACoO,EAAA,EAAD,CACEjK,UAAW,CACTmB,GAAG,EACHjD,WAAW,EACXC,SAAS,CAAC,EAAE,IAEdiB,SAAU,EACVlB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbkB,aAAc,EACdP,OAAQrD,KAAKwH,MAAMsC,kBAErBzF,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACE3L,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAHT,iBAYZ+B,EAAAlE,EAAAC,cAACqO,EAAA,EAAD9O,OAAAC,OAAA,CACE2D,KAAMmL,IACNC,YAAY,GACR3O,KAAKC,MACLD,KAAKwH,MAAMoC,WAJjB,CAKEiB,KAAM7K,KAAKwH,MAAMmC,qBA3PG9G,aAkQf6G,gHCtQTkF,6MACJpH,MAAQ,CACNqH,iBAAiB,+EAEN/H,GACXA,EAAEgI,iBACF9O,KAAKgI,SAAS,SAAAR,GAAK,OAAA7H,OAAAoP,EAAA,EAAApP,CAAA,GAAS6H,EAAT,CAAgBqH,iBAAkBrH,EAAMqH,qDAG3D,OACEzH,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CACExD,GAAI,CAAC,EAAE,GACPjB,GAAI,CAAC,EAAE,GACPE,GAAI,CAAC,EAAE,GACPiB,cAAe,SACfD,WAAY,WACZE,eAAgB,SAChBP,gBAAiB,SACjBc,aAAexB,KAAKC,MAAM+O,SAAW,OAAS,OAC9CC,UAAW,GAEX7H,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CAAMtD,cAAe,MAAOD,WAAY,SAAUjB,MAAO,EAAG8F,QAAS5F,KAAKC,MAAMQ,YAAa4F,MAAO,CAAC6I,OAAQ,YAC3G9H,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CAAKxE,MAAO,IACVsH,EAAAjH,EAAAC,cAACkE,EAAA,EAAQ6K,GAAT,CACErO,GAAI,EACJ2B,WAAY,EACZC,SAAU,CAAC,EAAE,GACbiJ,WAAY,YACZrJ,MAAOtC,KAAKC,MAAM+O,SAAW,OAAS,aAErChP,KAAKC,MAAMmP,WAGhBhI,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAO,GACPmB,eAAgB,YAEhBmG,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CACEjC,KAAM,QACNC,MAAOtC,KAAKC,MAAM+O,SAAW,OAAS,YACtC7M,KAAMnC,KAAKC,MAAM+O,SAAW,kBAAoB,wBAItD5H,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAO,GAENE,KAAKC,MAAM+O,UACV5H,EAAAjH,EAAAC,cAACkE,EAAA,EAAK/C,EAAN,CACE+H,UAAW,UACX5G,SAAU,CAAC,EAAE,GACb6G,wBAAyB,CAAEC,OAAQxJ,KAAKC,MAAMoP,mBAnDnCxM,aA6DV+L,oKCzDTU,6MACJ9H,MAAQ,CACN+H,UAAU,KACV5F,UAAU,KACVC,WAAW,KACX4F,WAAW,KACXC,YAAY,QAId1M,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,YACLlD,KAAK0P,qMAGkB/H,EAAWC,oFAClC5H,KAAKkD,YAECyM,EAA4BhI,EAAUiI,qBAAuB5P,KAAKC,MAAM2P,oBACzDC,KAAKC,UAAUnI,EAAUoI,iBAAmBF,KAAKC,UAAU9P,KAAKC,MAAM8P,gBACvEJ,IAClB3P,KAAKgI,SAAS,CACZ2B,UAAU,MACV,WACAxG,EAAK6M,sBAIHC,EAAgBtI,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDkO,EAAmBvI,EAAUwI,YAAcnQ,KAAKC,MAAMkQ,WACxDF,GAAiBC,IACnBlQ,KAAK0P,yVAMHK,EAAgB/P,KAAKC,MAAM8P,gBACRA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAK/D,KAAKC,MAAMmQ,2BAGdpQ,KAAK+C,cAAcsN,gBAAgBrQ,KAAKC,MAAMqQ,QAAQ,EAAE,SAASP,iBAAtFQ,SAIA5G,EAAY,GACd6G,EAAgB,GAChBC,EAAmB,eAEjBzQ,KAAK+C,cAAc2N,aAAaX,EAAhC,eAAAY,EAAAhR,OAAAiR,EAAA,EAAAjR,CAAAkR,EAAA1Q,EAAA2Q,KAA8C,SAAAC,EAAO9G,GAAP,IAAA+G,EAAAC,EAAA,OAAAJ,EAAA1Q,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElDb,EAAcvG,GAAiB,IAEzB+G,EAAcrR,OAAO2R,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,MACxD+G,EAAYhN,SAEzBiN,EAAanG,EAAK/H,cAAc2O,MAAM,GAE1CV,EAAY/M,QAAQ,SAACuN,EAAGzL,GAGtB,IAAKyL,EAAG3J,OAAS2J,EAAGG,QAAWH,EAAGI,QAAwB,YAAdJ,EAAGI,OAC7C,OAAO,EAGTnB,EAAmBA,EAAmBoB,KAAKC,IAAIrB,EAAiBsB,SAASP,EAAGQ,YAAcD,SAASP,EAAGQ,WAEtG,IAAMC,EAAcnH,EAAK/H,cAAc2O,MAAMF,EAAGS,aAEhD,OAAQT,EAAGG,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHV,EAAaA,EAAWiB,KAAKD,GAC/B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHhB,EAAaA,EAAWkB,MAAMF,GAO9BhB,EAAWmB,GAAG,KAChBnB,EAAanG,EAAK/H,cAAc2O,MAAM,IAGxC,IAAMW,EAAUpB,EACVU,EAASH,EAAGG,OACZK,EAAYD,SAASP,EAAGQ,WACxBM,EAAaxH,EAAK/H,cAAc2O,MAAMF,EAAGc,YACzCC,EAAazH,EAAK/H,cAAc2O,MAAMF,EAAGe,YAI1CD,EAAWhP,SAAYgP,EAAWhP,SACrCkN,EAAcvG,GAAe2D,KAAK,CAChC+D,SACAU,UACAL,YACAM,aACAC,aACAN,mBA3D0C,wBAAAd,EAAAqB,SAAAzB,EAAA/Q,SAA9C,gBAAAyS,GAAA,OAAA9B,EAAA+B,MAAA1S,KAAA2S,YAAA,YAqEFpD,EAAY,KACVqD,EAAc5S,KAAK+C,cAAc8P,YAAY,IAAIC,WAE/C9S,KAAKC,MAAM2P,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,4CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAY,yCAIV0D,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB1B,UAAS,IAAIe,MAAOY,UAAU,KAAM,MAEpDC,EAAa,GACbC,EAAyC,SAAhC5T,KAAKC,MAAM4T,2BAEpB7T,KAAK+C,cAAc2N,aAAa/Q,OAAOoE,KAAKyM,GAA5C,eAAAsD,EAAAnU,OAAAiR,EAAA,EAAAjR,CAAAkR,EAAA1Q,EAAA2Q,KAA2D,SAAAiD,EAAOtC,GAAP,IAAAuC,EAAA,OAAAnD,EAAA1Q,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cACzD2C,EAAelJ,EAAK/H,cAAcmR,yBAAyBzC,EAAM3G,EAAK7K,MAAM4T,kBADnBI,EAAA5C,KAAA,EAErCvG,EAAK/H,cAAcoR,gBAAgBH,EAAaJ,EAAOnD,EAAiB,MAAK,EAAM,MAF9C,OAE/DkD,EAAWlC,GAFoDwC,EAAAG,KAAA,wBAAAH,EAAAzB,SAAAuB,EAAA/T,SAA3D,gBAAAqU,GAAA,OAAAP,EAAApB,MAAA1S,KAAA2S,YAAA,YAON,IAFM2B,EAAmB,iBAIvB,IAAMC,EAAgB,GAChBC,EAAiB,GACvBxC,EAAYH,KAAKC,IAAI2B,EAAczB,GACnCsB,EAAoBxI,EAAK/H,cAAc2O,MAAM,GAI7C/R,OAAOoE,KAAKyM,GAAevM,QAAQ,SAAAwN,GAEjC,IAAIgD,EAAgB,KACdC,EAA0B/U,OAAO2R,OAAOqC,EAAWlC,IAAQkD,MAC3DC,EAAoBjB,EAAWlC,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAGqD,WAAW1B,GAAiB3B,EAAGqD,WAAW7C,IACnG4C,GAAqBA,EAAkB5Q,SACzCyQ,EAAgBG,EAAkBD,OAG/BL,EAAiB7C,KACpB6C,EAAiB7C,GAAS3G,EAAK/H,cAAc2O,MAAM,IAGrD,IACMoD,EADchK,EAAK7K,MAAMmQ,gBAAgBqB,GACb9N,SAC9BoR,EAAmBvE,EAAciB,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAGQ,WAAWA,KAAemB,GAAiB3B,EAAGQ,UAAUmB,KAErH,GAAK4B,EAAiB/Q,OA+BpB+Q,EAAiB9Q,QAAQ,SAAAuN,GACvB,OAAQA,EAAGG,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH2C,EAAiB7C,GAAS6C,EAAiB7C,GAAOS,KAAKV,EAAGe,YAC5D,MACA,QACE+B,EAAiB7C,GAAS6C,EAAiB7C,GAAOU,MAAMX,EAAGe,YACvD+B,EAAiB7C,GAAOW,GAAG,KAC7BkC,EAAiB7C,GAAS3G,EAAK/H,cAAc2O,MAAM,YA1C3D,GAAIwB,GAAgBA,EAAazB,GAAO,CACtCsD,EAAmB7B,EAAazB,GAChC,IAAMuD,EAAiBrV,OAAOC,OAAO,GAAGmV,GAAkBJ,MAI1D,GAHuBlH,WAAWuH,EAAe3C,SAG9B,GACjB,GAAIL,EAAUvB,GAAoBgE,EAAc,CAC9C,IAAMlC,EAAa+B,EAAiB7C,GAC9BwD,EAAYnK,EAAK/H,cAAcmS,iBAAiBT,EAAcQ,UAAUH,GAC1EK,EAAa5C,EAAW7E,MAAMuH,GAGlCD,EAAe3C,QAAU8C,EACzBH,EAAe1C,WAAa2C,EAC5BF,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClB1C,QAAQvH,EAAK/H,cAAc2O,MAAM,GACjCY,WAAWxH,EAAK/H,cAAc2O,MAAM,UAIxCqD,EAAmB,CAAC,CAClB1C,QAAQvH,EAAK/H,cAAc2O,MAAM,GACjCY,WAAWxH,EAAK/H,cAAc2O,MAAM,KAuB1C,IAAM0D,EAASzV,OAAOC,OAAO,GAAGmV,GAAkBJ,MAE9CU,EAAgBf,EAAiB7C,GAAO/D,MAAM0H,EAAO9C,YAEzD,GAAI+C,EAAcC,GAAG,GAAG,CAEtB,IAAIC,EAAyB,KACvBC,EAAsB1K,EAAK/H,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,wBACrG,IAAK5K,EAAK7K,MAAM0V,YAAcH,EAAoB,CAChD,IAAMI,EAAiBnB,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KACxOI,IACFL,EAAyBzK,EAAK/H,cAAcmS,iBAAiBU,EAAe,KACjDN,GAAG,KAC5BD,EAAgBA,EAAc3H,MAAM6H,IAK1Cf,EAAe/C,GAAS4D,EACxB/B,EAAoBA,EAAkBpB,KAAKmD,QAE3Cb,EAAe/C,GAAS3G,EAAK/H,cAAc2O,MAAM,GAGnD6C,EAAc9C,GAASsD,IAGzB,IAAIc,EAAa/K,EAAK/H,cAAc8P,YAAsB,IAAVb,GAEhD,GAAkB,OAAdzC,GAAuBsG,EAAWC,cAAcvG,IAAcsG,EAAWE,eAAe,IAAIjD,KAAO,OAAQ,CAO7G,IAAMkD,EAAgBH,EAAWI,OAAO,oBAGxChD,EAAK4C,EAAWI,OAAO,eAAiB,EAExC3C,EAAoB7F,WAAWA,WAAW6F,EAAkB3F,QAAQ,KAEpE6F,EAAsBwC,GAAiBxB,EACvCjB,EAAuByC,GAAiB1C,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBzB,KAAKC,IAAIsB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBzB,KAAKqE,IAAI7C,EAAcC,GAGtFH,EAAgBnB,EAChBkB,EAAeqB,OAjIRvC,EAAUvB,EAAiBuB,GAAWyB,EAAczB,GAAWhS,KAAKC,MAAMkW,iBAAiBC,EAA3FpE,GA6LT,IAzDMqE,EAAqB1W,OAAOoE,KAAKwP,GAAwBzN,IAAI,SAAAwQ,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAEjD,EAAuB+C,GACzBG,SAASjD,EAAsB8C,MAG7BI,EAAY,EAChBL,EAAmBpS,QAAS,SAAC0S,EAAK5Q,GAChC,IAAM6Q,EAAU/E,KAAKgF,MAAMH,EAAUL,EAAmBrS,OAAO,KAC/DqS,EAAmBtQ,GAAO6Q,QAAUA,EACpCF,MA0BIf,EAAa3V,KAAKC,MAAM0V,WAAa3V,KAAKC,MAAM0V,WAAWD,cAAgB,MAGjF/L,EAAUiE,KAAK,CACbxI,GAAGuQ,EACHrT,MAAO,OAAQtC,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,SAASE,EAAWD,cAAc,QAAQ,QAAQ1H,KAAK,KAAK,IACvHnD,KAAKwL,IAGHS,EAAkB,EAClBzD,EAAcD,EAAc,IAC9B0D,EAAkB,GAGhBzD,IAAkBD,IACpBA,EAAgBvB,KAAKqE,IAAI,EAAE7C,EAAc,IAGtB,EACf0D,GAAa1D,EAAcD,GADZ,EAEf4D,EAAc,GACX7J,EAAE,EAAEA,GAHQ,EAGQA,IACrB8J,EAAaxJ,WAAWA,WAAW2F,EAAejG,EAAE4J,GAAYpJ,QAAQ,IAC9EqJ,EAAYpJ,KAAKqJ,GAGfC,EAAkB,EACM,GACtBC,EAAYxX,OAAO2R,OAAO2B,GAAMjP,OAChCoT,EAAgBvF,KAAKqE,IAAI,EAAErE,KAAKwF,KAAKF,EAFf,KAItBvN,EAAa,CACjB0N,OAAO,CACL/T,KAAM,OACN0S,OAAQ,kBAEVsB,OAAO,CACLhU,KAAM,SACNiU,SAAS,EACT1F,IAAKsB,EACL8C,IAAK7C,GAEPoE,QAAQ,gBACRC,QAAQ,SAAAvM,GAAK,OAAIL,EAAK/H,cAAcS,YAAY2H,EAAM2L,IACtDa,WAAY3X,KAAKC,MAAM+B,SAAW,KAAO,CACvC4V,OAAQ,GACRC,SAAS,EACTC,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,WAAW,YACXC,eAAgB,SAChBjC,OAAQ,SAAC9K,GACP,GAAI+L,IAAoBE,IAAkB,EACxC,OAAOtM,EAAK/H,cAAc8P,YAAY1H,EAAM,oBAAoB8K,OAAO,YAI7Ee,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAUrY,KAAKC,MAAM+B,SAAW,KAAO,CACrC4V,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfC,WAAWjB,EACXkB,eAAgB,SAChBjC,OAAQ,SAAAhL,GAAC,OAAIH,EAAK/H,cAAcW,iBAAiBuH,EAAE,KAErDZ,SAAQ,EACRkO,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjBnX,OAAO,SAAAiJ,GAAC,OAAIA,EAAErI,OACdwW,mBAAmB,GACnBC,kBAAkB3F,EAClB4F,WAAW,CAAEtM,KAAM,QAASE,UAAW,IACvCqM,YAAqC,UAAzBjZ,KAAKC,MAAMkQ,UAAwB,GAAM,GACrD1O,MAAM,CACJyX,KAAM,CACJC,MAAO,CACLvW,KAAM,CACJF,SAAS,GACTD,WAAW,IACX2W,KAAKpZ,KAAKC,MAAMwB,MAAMC,OAAOkW,OAC7BjM,WAAW3L,KAAKC,MAAMwB,MAAMmK,MAAMC,aAIxCwN,KAAM,CACJC,KAAM,CACJC,OAAQvZ,KAAKC,MAAMwB,MAAMC,OAAO8X,gBAAiBC,gBAAiB,SAaxE5Y,OAAQb,KAAKC,MAAM+B,SAAW,CAAE6K,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrH0M,aAAa,SAACC,GAAc,IAEpBC,EADYD,EAAVE,MACYC,OAAO,GAC3B,OACEzV,EAAAlE,EAAAC,cAAC2Z,EAAA,EAAD,CACEH,MAAOA,GAEPvV,EAAAlE,EAAAC,cAAC4Z,EAAA,EAAD,CACE1X,MAAOsX,EAAMtX,MACb2L,MAAO2L,EAAMK,QACb9O,MAAK,KAAAxE,OAAOiT,EAAM/O,KAAKqP,cAGO,kBAAxBN,EAAM/O,KAAK4L,UAAyB9W,OAAOoE,KAAK6V,EAAM/O,KAAK4L,UAAUzS,OAAO,GAClFrE,OAAOoE,KAAK6V,EAAM/O,KAAK4L,UAAU3Q,IAAI,SAAA2L,GACnC,GAAIA,IAAUmI,EAAMK,QAClB,OAAO,KAET,IAAM3X,EAAQwI,EAAK/H,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,QAAQ,QACzFrD,EAAUuH,EAAM/O,KAAK4L,SAAShF,GAChC0I,EAAmBrP,EAAK/H,cAAcS,YAAY6O,EAAQ,GAC9D,OAAI5E,WAAW4E,IAAU,IAErBhO,EAAAlE,EAAAC,cAAC4Z,EAAA,EAAD,CACE/L,MAAOwD,EACPnP,MAAOA,EACPuE,IAAG,OAAAF,OAAS8K,GACZtG,MAAK,KAAAxE,OAAOwT,KAIX,UAQnBna,KAAKgI,SAAS,CACZ2B,YACAC,mJAKF,OACEvF,EAAAlE,EAAAC,cAACga,EAAA,EAADza,OAAAC,OAAA,CACE2D,KAAM8W,IACN1L,YAAY,GACR3O,KAAKwH,MAAMoC,WAHjB,CAIEiB,KAAM7K,KAAKwH,MAAMmC,UACjB2Q,SAAUta,KAAKC,MAAMqa,SACrBvY,OAAQ/B,KAAKC,MAAMwP,YACnB8K,eAAgBva,KAAKC,MAAMsa,yBAxfL1X,aA8ffyM,26LC/fTkL,6MAEJhT,MAAQ,KAGRzE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,mKAK9CD,KAAKkD,qBACClD,KAAKya,sMAGY9S,EAAWC,+EAClC5H,KAAKkD,YAECwX,EAAuB/S,EAAUsC,gBAAkBjK,KAAKC,MAAMgK,cAC9D0Q,EAAiB9K,KAAKC,UAAUnI,EAAUiT,WAAa/K,KAAKC,UAAU9P,KAAKC,MAAM2a,SACjFC,EAAsBhL,KAAKC,UAAUnI,EAAUmT,gBAAkBjL,KAAKC,UAAU9P,KAAKC,MAAM6a,cAC3FC,EAAoBpT,EAAUqT,oBAAsBhb,KAAKC,MAAM+a,mBAAqBrT,EAAUsT,uBAAyBjb,KAAKC,MAAMgb,sBAEpIN,GAAkBD,GAAwBG,GAAuBE,IACnE/a,KAAKya,uSAMDS,EAAmB,SAAAjb,GACvB,IAAMP,EAAYC,OAAOC,OACvBK,EAAMkb,WACN,CACE5Z,EAAG,EACHzB,MAAO,EACPuG,MAAO,CAAE6I,OAAQ,YAElB/L,EAAKlD,MAAMkb,WAAahY,EAAKlD,MAAMkb,WAAa,IAMnD,OAHIlb,EAAMmb,aACR1b,EAAUuP,UAAY9L,EAAKlD,MAAMob,SAAW,EAAI,GAGhDhX,EAAAlE,EAAAC,cAACkb,EAAA,EAAD,CACE5b,UAAWA,EACXY,eAAe6C,EAAKlD,MAAMsb,gBAE1BlX,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtO,MAAO,EACPiC,OAAQ,OACRhB,WAAY,SACZC,cAAe,OAEdf,EAAMwJ,YAMT+R,EAA2B,SAAAvb,GAAK,OAAI,MAEpCwb,EAAa,SAAAxb,GACjB,IAAMP,EAAYC,OAAOC,OAAOK,EAAMkb,WAAY,CAChD9R,GAAI,EACJiF,OAAQ,EACRW,UAAW,KACXZ,SAAU,WACV3N,gBAAiByC,EAAKlD,MAAMyb,WAAavY,EAAKlD,MAAMyb,WAAa,WAEnE,OACErX,EAAAlE,EAAAC,cAACkb,EAAA,EAAD,CACE5b,UAAWA,GAEVO,EAAMwJ,WAKPwR,EAAuBjb,KAAKC,MAAMgb,qBAAuBjb,KAAKC,MAAMgb,qBAAuB,SAAAhb,GAC/F,OACEoE,EAAAlE,EAAAC,cAACgO,EAAA,EACKnO,EAAMkb,WAEV9W,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtO,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfqD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACE3L,WAAY,GAEXxC,EAAM0b,YAAYxQ,MAAM8C,UAO7B+M,EAAoBhb,KAAKC,MAAM+a,kBAAoBhb,KAAKC,MAAM+a,kBAAoB,SAAC/a,GACvF,OACEoE,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtO,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfqD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,KACGnO,EAAMgO,SAMT2N,EAAuB5b,KAAKC,MAAM2b,qBAAuB5b,KAAKC,MAAM2b,qBAAuB,SAAC3b,GAEhG,OAAKA,EAAM0b,YAAYE,aAKrBxX,EAAAlE,EAAAC,cAACgO,EAAA,EAADzO,OAAAC,OAAA,GACMK,EADN,CAEEyC,SAAUS,EAAKlD,MAAMwB,MAAMqa,UAAU,GACrCxZ,MAAOa,EAAKlD,MAAMwB,MAAMC,OAAOqa,UAC/BtZ,WAAYU,EAAKlD,MAAMwB,MAAMua,YAAY,GACzCrQ,WAAYxI,EAAKlD,MAAMwB,MAAMmK,MAAMC,UACnCnL,gBAAiByC,EAAKlD,MAAMwB,MAAMC,OAAO+J,OACzC5C,UAAW,CAACC,IAAOmT,YAAsC,SAAzB9Y,EAAKlD,MAAMkQ,UAAuBrH,IAAOoT,KAAO,KAAOjc,EAAM0b,YAAYP,WAAwC,KAA3BtS,IAAOqT,sBAXxH,MAgBLC,EAAe,SAACnc,GAEpB,IAAM2a,EAAU3a,EAAM0b,YAAYf,QAC9ByB,EAAgBpc,EAAM0b,aAAe1b,EAAM0b,YAAYxQ,OAASlL,EAAM0b,YAAYxQ,MAAMA,MAQ5F,OALIkR,IAAuE,IAAtDzB,EAAQ9U,IAAI,SAAAwW,GAAC,OAAIA,EAAEnR,QAAOoR,QAAQF,IAAyBlZ,EAAKlD,MAAM6a,eACzFuB,EAAgBlZ,EAAKlD,MAAM6a,aAAa3P,OAItCkR,GAAiBA,IAAkBpc,EAAMkL,MACpC,KAMP9G,EAAAlE,EAAAC,cAACgO,EAAA,EAADzO,OAAAC,OAAA,CACEG,GAAI,EACJF,GAAI,EACJC,MAAO,GACHG,EAAMkb,WAJZ,CAKEpa,WAAY,SACZC,cAAe,MACfqF,MAAO,CAAE6I,OAAQ,WACjBjO,eAAgB,aAChB4H,UAAWC,IAAO0T,gBAClB9b,gBAAiByC,EAAKlD,MAAMwc,YAAc,SAAYxc,EAAMyc,UAAY,kBAAoB,aAE5FrY,EAAAlE,EAAAC,cAAC4a,EACK/a,cAMND,KAAKgI,SAAS,CAClByT,aACAW,eACAlB,mBACAD,uBACAW,uBACAJ,gKAIK,IAAA1Q,EAAA9K,KACD6b,EAAkD,qBAA5B7b,KAAKC,MAAM4b,cAA+B7b,KAAKC,MAAM4b,aACjF,OACExX,EAAAlE,EAAAC,cAACuc,EAAA,EAAD,CACExa,KAAMnC,KAAKC,MAAMkC,KACjB0Z,aAAcA,EACdjB,QAAS5a,KAAKC,MAAM2a,QACpBE,aAAc9a,KAAKC,MAAM6a,aACzB8B,SAAU,SAAA3R,GAAC,OAAIH,EAAK7K,MAAM2c,SAAS3R,EAAEE,QACrC0R,WAAY,CACVC,KAAM9c,KAAKwH,MAAMiU,WACjBsB,OAAQ/c,KAAKwH,MAAM4U,aACnBY,QAAShd,KAAKwH,MAAM0T,iBACpB+B,MAAOjd,KAAKwH,MAAMoU,qBAClBsB,YAAald,KAAKwH,MAAMyT,qBACxBkC,mBAAoBnd,KAAKwH,MAAMgU,mCAxMX3Y,aA+Mf2X,gKChNT4C,6MAEJ5V,MAAQ,CACN6V,SAAS,KACTC,WAAW,CACTC,OAAO,KACPC,SAAQ,MAKZza,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,qQAILlD,KAAKgI,SAAS,CACZsV,WAAY,CACVC,OAAO,KACPC,SAAQ,qQAONzV,EAAW,SAACyJ,EAAGiM,GAKnB,IAAMC,EAAY,CAChBC,cAAe,cACfC,WAAYza,EAAKlD,MAAM4d,WACvBC,YAAa3a,EAAKlD,MAAM8d,cAGtBN,IACFC,EAAUE,WAAaza,EAAKJ,cAAcib,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAU9L,SACrBzO,EAAKJ,cAAckb,yBAAyBP,GAG1BlM,GAAoB,YAAdA,EAAGI,QAEQ,oBAAxBzO,EAAKlD,MAAM8H,UACpB5E,EAAKlD,MAAM8H,SAASyJ,GAIxBrO,EAAK6E,SAAS,CACZsV,WAAY,CACVC,OAAO,KACPC,SAAQ,GAEVH,SAAS7L,EAAKA,EAAGI,OAAS,QAIxBsM,EAAkB,SAAC1M,GACvB,IAAM+L,EAAS/L,EAAG2M,gBAClBhb,EAAK6E,SAAS,SAACJ,GAAD,MAAgB,CAC5ByV,SAAS,aACTC,WAAW3d,OAAAoP,EAAA,EAAApP,CAAA,GACNiI,EAAU0V,WADL,CAERC,eAKNvd,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5ByV,SAAS,UACTC,WAAW3d,OAAAoP,EAAA,EAAApP,CAAA,GACNiI,EAAU0V,WADL,CAERE,SAAQ,OAIRY,EAASpe,KAAKC,MAAMme,OACuB,oBAApCpe,KAAKC,MAAMoe,qCACpBD,EAASpe,KAAKC,MAAMoe,iDACqC,oBAAzCre,KAAKC,MAAMqe,4DACZte,KAAKC,MAAMqe,oCAA1BF,iCACiD,kBAAjCpe,KAAKC,MAAMse,oBAC3BH,EAASpe,KAAKC,MAAMse,8BAKjBH,GAAWpe,KAAKC,MAAM8d,qCACzB/d,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5ByV,SAAS,KACTC,WAAW3d,OAAAoP,EAAA,EAAApP,CAAA,GACNiI,EAAU0V,WADL,CAERE,SAAQ,0BAGL,WAGLxd,KAAKC,MAAMue,mBACbxe,KAAK+C,cAAc0b,0BAA0Bze,KAAKC,MAAM8d,aAAa/d,KAAKC,MAAM4d,WAAWO,EAAOrW,EAASmW,EAAgB,MAAK,EAAKE,GAErIpe,KAAK+C,cAAc0b,0BAA0Bze,KAAKC,MAAM8d,aAAa/d,KAAKC,MAAM4d,WAAWO,EAAOrW,EAASmW,uIAK7G,IAAMQ,EAAmB1e,KAAKC,MAAM4C,UACpC,OACE8b,EAAAxe,EAAAC,cAACoI,EAAA,EACKxI,KAAKC,MAAM2e,YAGZ5e,KAAKC,MAAMqQ,QAIe,YAAxBtQ,KAAKwH,MAAM6V,UAA0Brd,KAAKC,MAAMwJ,SACjDzJ,KAAKC,MAAMwJ,SACXzJ,KAAKwH,MAAM8V,YAActd,KAAKwH,MAAM8V,WAAWE,QAC/CmB,EAAAxe,EAAAC,cAACye,EAAA,EAADlf,OAAAC,OAAA,CACEkf,KAAM9e,KAAKC,MAAM6e,KACjBC,QAAS/e,KAAKC,MAAM8e,SAChB/e,KAAKC,MAAM+e,iBAHjB,CAIEnX,KAAM7H,KAAKwH,MAAM8V,WAAWC,OAC5B0B,kBAAmBjf,KAAKif,kBAAkBC,KAAKlf,MAC/Cmf,WAAU,cAAAxY,OAAgB3G,KAAKC,MAAM0R,OAA3B,eACVyN,SAAQ,GAAAzY,OAAK3G,KAAK+C,cAAcmL,WAAWlO,KAAKC,MAAM0R,QAA9C,oBAGVgN,EAAAxe,EAAAC,cAACse,EAAD/e,OAAAC,OAAA,CACEgG,QAAS5F,KAAKqf,QAAQH,KAAKlf,OACvBA,KAAKC,MAAMqf,gBAEdtf,KAAKC,MAAMqf,eAAenU,OApB9BwT,EAAAxe,EAAAC,cAACmf,EAAA,EACKvf,KAAKC,eArIW4C,aAiKlBua,0rLCjKToC,6MAEJhY,MAAQ,CACNoT,QAAQ,KACRE,aAAa,KACbE,kBAAkB,KAClBC,qBAAqB,QAIvBlY,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,gDAIhC,IAAAkD,EAAAnD,KACR4a,EAAUjb,OAAOoE,KAAK/D,KAAKC,MAAMmQ,iBAAiBtK,IAAI,SAAA2L,GAE1D,MAAO,CACLtG,MAAMsG,EACNxD,MAAMwD,EACNtH,YAJkBhH,EAAKlD,MAAMmQ,gBAAgBqB,MAQ3CqJ,EAAe9a,KAAKC,MAAMgK,cAAgB2Q,EAAQ6E,KAAK,SAAAxU,GAAC,OAAKA,EAAEE,MAAMuK,gBAAkBvS,EAAKlD,MAAMgK,cAAcyL,gBAAkB,KAyKxI1V,KAAKgI,SAAS,CACZ4S,UACAE,eACAE,kBA1KwB,SAAA/a,GACxB,IAAMwR,EAAQxR,EAAMkL,MACdhB,EAAclK,EAAM4K,KAAKV,YAE/B,OACE9F,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBoD,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,UAEZsD,EAAAlE,EAAAC,cAACsf,EAAA,EAAD,CACEjO,MAAOA,EACPtH,YAAaA,EACbwV,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHvB,MAAM,MACNiC,OAAO,UAIbsC,EAAAlE,EAAAC,cAACsf,EAAA,EAAD,CACEjO,MAAOA,EACPkO,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,iBAMZa,EAAKqE,MAAMvH,MAAM2f,gBACfvb,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,SACZE,eAAgB,YAEhBoD,EAAAlE,EAAAC,cAACsf,EAAA,EAAD/f,OAAAC,OAAA,CACE6R,MAAOA,GACHtO,EAAKqE,MAAMvH,MAFjB,CAGE0f,UAAW,CACTxd,KAAKgB,EAAKqE,MAAMvH,MAAM2f,gBACtB3f,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,aAGV6H,YAAaA,EACbmG,QAASnN,EAAKqE,MAAMvH,MAAMqQ,QAC1BuP,WAAY1c,EAAKlD,MAAM4f,WACvBC,cAAe3c,EAAKlD,MAAM6f,kBAG5B3c,EAAKlD,MAAM8f,aACb1b,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,SACZE,eAAgB,YAEhBoD,EAAAlE,EAAAC,cAACsf,EAAA,EAAD/f,OAAAC,OAAA,CACE6R,MAAOA,GACHtO,EAAKqE,MAAMvH,MAFjB,CAGE0f,UAAW,CACTxd,KAAK,eACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,aAGV6H,YAAaA,EACbmG,QAASnN,EAAKqE,MAAMvH,MAAMqQ,QAC1BuP,WAAY1c,EAAKlD,MAAM4f,WACvBC,cAAe3c,EAAKlD,MAAM6f,oBA2FtC7E,qBAnF2B,SAAAhb,GAC3B,IACM0b,GAA4D,IADlD1b,EAAM0b,YAAYf,QACN2B,QAAQtc,EAAM0b,YAAYxQ,OAAgBlL,EAAM0b,YAAYxQ,MAAQ2P,EAEhG,IAAKa,EACH,OAAO,KAGT,IAAMlK,EAAQkK,EAAYxQ,MACpBhB,EAAcwR,EAAYxR,YAChC,OACE9F,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEyG,MAAO,CACL2Z,KAAK,KAEP/e,eAAgB,iBACZhB,EAAMkb,YAEV9W,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMkb,WAHZ,CAIEpa,WAAY,SACZC,cAAe,MACfqF,MAAO,CAAC6I,OAAO,WACfjO,eAAgB,eAEhBoD,EAAAlE,EAAAC,cAACsf,EAAA,EAAD,CACEjO,MAAOA,EACPtH,YAAaA,EACbwV,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,UAIbsC,EAAAlE,EAAAC,cAACsf,EAAA,EAAD,CACEjO,MAAOA,EACPkO,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,iBAOZa,EAAKlD,MAAM8f,aACT1b,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,SACZE,eAAgB,YAEhBoD,EAAAlE,EAAAC,cAACsf,EAAA,EAAD/f,OAAAC,OAAA,CACE6R,MAAOA,GACHtO,EAAKqE,MAAMvH,MAFjB,CAGE0f,UAAW,CACTxd,KAAK,eACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,aAGV6H,YAAaA,EACbmG,QAASnN,EAAKqE,MAAMvH,MAAMqQ,QAC1BuP,WAAY1c,EAAKlD,MAAM4f,WACvBC,cAAe3c,EAAKlD,MAAM6f,2KAiBxC9f,KAAKkD,YACLlD,KAAKya,iBAELza,KAAKgI,SAAS,CACZ/H,MAAMD,KAAKC,6LAIU0H,EAAUC,yEACjC5H,KAAKkD,YAECwX,EAAuB/S,EAAUsC,gBAAkBjK,KAAKC,MAAMgK,eACrC4F,KAAKC,UAAUnI,EAAUyI,mBAAqBP,KAAKC,UAAU9P,KAAKC,MAAMmQ,kBACzEsK,IAC5B1a,KAAKya,uJAKP,OAAKza,KAAKwH,MAAMoT,SAAY5a,KAAKwH,MAAMsT,cAAiB9a,KAAKwH,MAAMwT,mBAAsBhb,KAAKwH,MAAMyT,sBAAyBjb,KAAKC,MAAMmQ,iBAAoBzQ,OAAOoE,KAAK/D,KAAKC,MAAMmQ,iBAAiBpM,OAKlMK,EAAAlE,EAAAC,cAAC6f,EAAA,EAADtgB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,SACNyY,QAAS5a,KAAKwH,MAAMoT,QACpBO,WAAYnb,KAAKC,MAAMkb,WACvBU,aAAc7b,KAAKC,MAAM4b,aACzBf,aAAc9a,KAAKwH,MAAMsT,aACzB7Q,cAAejK,KAAKC,MAAMgK,cAC1B+Q,kBAAmBhb,KAAKwH,MAAMwT,kBAC9BC,qBAAsBjb,KAAKwH,MAAMyT,qBACjC2B,SAAW5c,KAAKC,MAAM2c,SAAW5c,KAAKC,MAAM2c,SAAW5c,KAAKC,MAAMigB,eAd7D,YApOerd,aAwPb2c,grLCxPTW,6MACJ3Y,MAAQ,CACN4Y,QAAQ,EACR3C,MAAM,KACN4C,OAAM,EACNC,WAAW,EACXhD,YAAW,EACXiD,YAAY,KACZC,aAAY,EACZC,cAAc,KACdC,cAAc,QAGhBjZ,oBAAqB,IAGrB1E,cAAgB,OAmChBiN,uCAAoB,SAAA2Q,IAAA,OAAAC,EAAAzgB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,OAClBnM,EAAK4b,kBADa,wBAAAD,EAAArO,SAAAmO,EAAA3gB,WAIpB+gB,oCAAiB,SAAAhQ,IAAA,IAAAiQ,EAAAlZ,EAAA,OAAA8Y,EAAAzgB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY,IAAI4P,QAAJ,eAAAC,EAAAvhB,OAAAwhB,EAAA,EAAAxhB,CAAAihB,EAAAzgB,EAAA2Q,KAAa,SAAAsQ,EAAOC,EAASC,GAAhB,OAAAV,EAAAzgB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OAEtCnM,EAAKjF,MAAM6e,KAAK0C,IAAIT,eAAe7b,EAAKjF,MAAM4H,KAAK,SAAC4Z,EAAIT,GACtDK,EAAQL,KAH4B,wBAAAO,EAAA/O,SAAA4O,EAAAphB,SAAb,gBAAA0hB,EAAAC,GAAA,OAAAT,EAAAxO,MAAA1S,KAAA2S,YAAA,IADZ,cACTqO,EADS7P,EAAAiD,KAUTtM,EAAW,GACbkZ,EACFlZ,EAASkZ,YAAcA,GAEvBlZ,EAASwV,YAAa,EACtBxV,EAAS2V,MAAQ,kCAGnBvY,EAAK8C,SAASF,GAlBCqJ,EAAAyQ,OAAA,SAmBRZ,GAnBQ,wBAAA7P,EAAAqB,SAAAzB,EAAA/Q,WAqEjB6hB,kCAAe,SAAA9N,IAAA,IAAA+N,EAAAC,EAAA,OAAAnB,EAAAzgB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA5C,KAAA,EACI2Q,IAAMC,IAAI,kDADd,YACPH,EADO7N,EAAAG,MAAA,CAAAH,EAAA5C,KAAA,eAGL0Q,EAAYD,EAAGjX,KACrB3F,EAAK8C,SAAS,CACZ+Z,cALS9N,EAAA2N,OAAA,SAOJG,GAPI,cAAA9N,EAAA2N,OAAA,SASN,MATM,wBAAA3N,EAAAzB,SAAAuB,EAAA/T,WAYfkiB,wCAAqB,SAAAC,IAAA,IAAAL,EAAAM,EAAA,OAAAxB,EAAAzgB,EAAA+Q,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,cAAAgR,EAAAhR,KAAA,EACF2Q,IAAMC,IAAI,qDADR,YACbH,EADaO,EAAAjO,MAAA,CAAAiO,EAAAhR,KAAA,eAGX+Q,EAAeN,EAAGjX,KACxB3F,EAAK8C,SAAS,CACZoa,iBALeC,EAAAT,OAAA,SAOVQ,GAPU,cAAAC,EAAAT,OAAA,SASZ,MATY,wBAAAS,EAAA7P,SAAA2P,EAAAniB,WAYrBsiB,mBAAqB,SAACC,GAEpB,GAAgC,YADTrd,EAAKnC,cAAcyf,qBACvBC,SACjB,OAAO,GAEP,IAAIC,EAAa,KAUjB,GATIxd,EAAKsC,MAAM4a,cACbld,EAAKsC,MAAM4a,aAAane,QAAQ,SAAC1C,EAAE4L,GACjC,IAAKuV,GAAcjV,WAAWlM,EAAEohB,WAAWlV,WAAW8U,GAEpD,OADAG,EAAanhB,GACN,IAKT2D,EAAKsC,MAAMua,WAAaW,EAAW,CACrC,IAAME,EAAW1d,EAAK2d,cAAcH,EAAWxd,EAAKsC,MAAMwZ,YAAY8B,KAGlEC,EAFeH,EAAS,GACN1d,EAAKsC,MAAMua,UAAUiB,WAI3C,OAFAD,EAAahR,SAASgR,EAAWpV,QAAQ,IACzCzI,EAAKnC,cAAckgB,UAAU,qBAAqBP,EAAWxd,EAAKsC,MAAMwZ,YAAY8B,IAAIF,EAASG,GAC1FA,EAIX,OAAO,QAGTG,4CAAyB,SAAAC,IAAA,IAAAzC,EAAAD,EAAA8B,EAAA9O,EAAA2P,EAAAC,EAAA/C,EAAA,OAAAM,EAAAzgB,EAAA+Q,KAAA,SAAAoS,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAjS,MAAA,UACnBqP,EAAgB,EAChBD,EAAgB,EAEfvb,EAAKsC,MAAMwZ,cAAe9b,EAAKuC,mBAJb,CAAA6b,EAAAjS,KAAA,eAAAiS,EAAA1B,OAAA,UAKd,GALc,OAQlB1c,EAAKsC,MAAMwZ,YAAYuC,cACpBhB,EAAW9U,WAAWvI,EAAKnC,cAAc2O,MAAMxM,EAAKsC,MAAMwZ,YAAYuB,UAAUiB,IAAI,KAAKC,YAC/F/C,EAAgBxb,EAAKod,mBAAmBC,IAG1C9B,EAAgBC,GAAgC,EAE5Cxb,EAAKsC,MAAM+Y,cACP9M,GAAgB,IAAIX,MAAOY,UAC3B0P,EAAgBrR,UAAU0B,EAAc1B,SAAS7M,EAAKsC,MAAM+Y,cAAc,KAGhFG,GAAiB0C,EACjB1C,EAAgB7O,KAAKqE,IAAIwK,EAAc,GAEvCxb,EAAKnC,cAAckgB,UAAU,iBAAiBxC,EAAc,gBAAgB2C,EAAc,qBAAqB1C,IAG3G2C,EAAa5C,EAAcC,EAC3BJ,EAAaG,EAAc,EAAIhT,WAAW4V,EAAW5C,GAAiB,EAE5Evb,EAAK8C,SAAS,CACZyY,gBACAC,gBACAJ,eAGFoD,WAAW,WAAKxe,EAAKye,qBAAqB,KAnCnB,yBAAAL,EAAA9Q,SAAA2Q,EAAAnjB,WAsCzB2jB,kBAAoB,WAElB,GAAIze,EAAKuC,mBACP,OAAO,EAGT,IAAIiZ,EAAgBxb,EAAKsC,MAAMkZ,cAC/B,GAAIA,EAEF,KADAA,EAMO,CACL,IAAM2C,EAAane,EAAKsC,MAAMiZ,cAAcC,EACtCJ,EAAa7S,WAAW4V,EAAWne,EAAKsC,MAAMiZ,eACpDvb,EAAK8C,SAAS,CACZsY,aACAI,kBAEFgD,WAAW,WAAKxe,EAAKye,qBAAqB,UAX1Cze,EAAK8C,SAAS,CACZsY,WAAW,EACXD,OAAM,SAYVnb,EAAK8C,SAAS,CACZsY,WAAW,EACXD,OAAM,OAKZuD,+BAAY,SAAAC,IAAA,IAAAC,EAAAvG,EAAAwG,EAAAxD,EAAAzY,EAAAkc,EAAAC,EAAA7B,EAAAL,EAAA,OAAAnB,EAAAzgB,EAAA+Q,KAAA,SAAAgT,GAAA,cAAAA,EAAA9S,KAAA8S,EAAA7S,MAAA,UAGJyS,EAHI,oBAIJvG,EAASrY,EAAKjF,MAAM4H,KAAK0F,cAE3BwW,EAAoB,KACpBxD,EAAc,KACdzY,EAAW,GAEXqc,eACFJ,EAAoBI,aAAaC,QAAQN,MAEvCC,EAAoBlU,KAAKwU,MAAMN,IAI9BA,GAAsBA,EAAkBxG,GAjBnC,CAAA2G,EAAA7S,KAAA,gBAkBRkP,GAAc,IAAIzN,MAAOY,UAlBjBwQ,EAAA7S,KAAA,GAoB+B4P,QAAQqD,IAAI,CACjDpf,EAAKgd,qBACLhd,EAAK2c,iBAtBC,QAAAmC,EAAAE,EAAA9P,KAAA6P,EAAAtkB,OAAA4kB,EAAA,EAAA5kB,CAAAqkB,EAAA,GAoBD5B,EApBC6B,EAAA,GAoBYlC,EApBZkC,EAAA,IAyBRF,EAAoB,IACFxG,GAAU,CAC1BgD,cACAwB,YACAK,gBAIFld,EAAKnC,cAAcyhB,gBAAgBV,EAAiBjU,KAAKC,UAAUiU,IAEnEjc,EAAWic,EAAkBxG,GAExB6E,GAAiBL,IACpBja,EAAS2V,MAAQ,0BAtCX,QA0CVvY,EAAK8C,SAASF,GA1CJ,yBAAAoc,EAAA1R,SAAAqR,EAAA7jB,WA6CZ8gB,qCAAkB,SAAA2D,IAAA,IAAA3c,EAAAsY,EAAA,OAAAQ,EAAAzgB,EAAA+Q,KAAA,SAAAwT,GAAA,cAAAA,EAAAtT,KAAAsT,EAAArT,MAAA,UAEXnM,EAAKjF,MAAM4H,MAAS3C,EAAKjF,MAAM6e,KAFpB,CAAA4F,EAAArT,KAAA,eAAAqT,EAAA9C,OAAA,UAGP,GAHO,cAMV9Z,EAAW,CACf0Y,aAAY,GAEdtb,EAAK8C,SAASF,GATE4c,EAAArT,KAAA,EAaUnM,EAAK6b,iBAbf,WAAA2D,EAAAtQ,KAAA,CAAAsQ,EAAArT,KAAA,gBAAAqT,EAAArT,KAAA,GAgBRnM,EAAK0e,YAhBG,QAiBd,IACE1e,EAAKge,yBACL,MAAOzB,GACP3Z,EAAS2V,MAAQ,yBAInBvY,EAAK8C,SAASF,GAxBA4c,EAAArT,KAAA,kBA0BR+O,EAAUlb,EAAKsC,MAAM4Y,WACf,GACVlb,EAAK8C,SAAS,CACZoY,WACA,WACAuE,OAAOjB,WAAW,WAChBxe,EAAK4b,mBACL,OAjCQ,yBAAA4D,EAAAlS,SAAAiS,EAAAzkB,oFAhRZA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oKAU9C,IAJAD,KAAKyH,oBAAqB,EAEtBrC,EAAKuf,OAAOjB,WAAW,aAAe,GAEnCte,KACHuf,OAAOC,aAAaxf,GAGxBuf,OAAO7D,gBAAkB9gB,KAAK8gB,+JAI9B9gB,KAAKkD,+FAGkByE,mEACvB3H,KAAKkD,aAEAlD,KAAKwH,MAAMgZ,aAAexgB,KAAKC,MAAM6e,MACxC9e,KAAK8gB,2JAiCM4B,EAAYmC,GACzB,IAAIC,EACAC,EACAC,EAAMC,EAUNJ,EAAa,KACfG,EAVc,OACN,MASYtC,EAAU,oBARrB,QACF,KAOgEA,EAAU,WACjFuC,EAPe,QACF,MAMQvC,EAAU,oBALb,KAKoDA,EAAU,WAJ9D,QAMlBsC,EAbc,OACN,MAYYtC,EAAU,qBAVvB,KAUyDA,EAAU,WAC1EuC,EAVe,OAEG,KAQGvC,EAAU,YATlB,MASsDA,EAAU,qBAG/E,IACMwC,EAAO,GAAK,EADLrT,KAAKsT,KAAM,EAAIH,IAoB5B,OAhBEF,EADEI,EAAO,IACG,YACHA,EAAO,IAAMA,GAAQ,IAClB,SAEA,OAGdH,EAAelT,KAAKsT,IAAIF,IACL,IACjBF,EAAe,GAGbF,EAAa,MACfE,GAAgB,KAGX,CAACA,EAAcrC,EAAU,oBAAyBA,EAAU,WAAgBoC,iDAmNnF,GAAI9kB,KAAKwH,MAAMkZ,cAAc,GAAG,CAC9B,IAAM0E,EAAUvT,KAAKgF,MAAM7W,KAAKwH,MAAMkZ,cAAc,IAC9C2E,EAAUrlB,KAAKwH,MAAMkZ,cAAuB,GAAR0E,EAC1C,OAAQ,IAAIA,GAASE,QAAQ,GAAG,KAAK,IAAID,GAASC,QAAQ,GAAG,OAE7D,OAAOtlB,KAAKwH,MAAMkZ,cAAc,qCAI3B,IAAAvd,EAAAnD,KACDulB,EAAiBvlB,KAAK+C,cAAcyf,qBAC1C,OACEgD,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CAAMzkB,cAAe,SAAUD,WAAY,UAEV,OAA7Bf,KAAKwH,MAAMkZ,cACT1gB,KAAKwH,MAAM6Y,MACTmF,EAAArlB,EAAAC,cAACslB,EAAA,EAAD,CACE/iB,UAAW,CACT+C,GAAG,EACHpD,MAAMtC,KAAKC,MAAM0lB,UAAY3lB,KAAKC,MAAM0lB,UAAY,aAEtDC,YAAWjmB,OAAAoP,EAAA,EAAApP,CAAA,CACT0C,KAAK,QACFrC,KAAKC,MAAM2lB,aAEhB9hB,UAAW,CACTwF,UAAU,SACVvI,WAAW,SACXE,eAAe,UAEjB2B,KAAM5C,KAAKC,MAAMkf,WAAanf,KAAKC,MAAMkf,WAAa,8BAGxDqG,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACElX,GAAI,EACJxN,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBukB,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CAAMlX,GAAI,EAAGjM,MAAQtC,KAAKC,MAAM0lB,UAAY3lB,KAAKC,MAAM0lB,UAAY,aAAe3lB,KAAKC,MAAMmf,SAAWpf,KAAKC,MAAMmf,SAAW,kBAA9H,IAAkJoG,EAAArlB,EAAAC,cAACqlB,EAAA,EAAKI,KAAN,CAAWvjB,MAAQtC,KAAKC,MAAM0lB,UAAY3lB,KAAKC,MAAM0lB,UAAY,YAAaljB,WAAY,GAAKzC,KAAK8lB,wBACtPN,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CAAUta,MAAQnL,KAAKwH,MAAM8Y,cAIZ,OAArBtgB,KAAKwH,MAAMiW,OAAmBzd,KAAKwH,MAAM8V,WAoBvCkI,EAAArlB,EAAAC,cAACslB,EAAA,EAAD,CACE/iB,UAAW,CACT+C,GAAG,EACHpD,MAAMtC,KAAKC,MAAM0lB,UAAY3lB,KAAKC,MAAM0lB,UAAY,aAEtDC,YAAWjmB,OAAAoP,EAAA,EAAApP,CAAA,CACT0C,KAAK,QACFrC,KAAKC,MAAM2lB,aAEhB9hB,UAAW,CACTwF,UAAU,SACVvI,WAAW,SACXE,eAAe,UAEjB2B,KAAO5C,KAAKwH,MAAMiW,MAAQzd,KAAKwH,MAAMiW,MAASzd,KAAKC,MAAM4H,KAAQ7H,KAAKC,MAAM8lB,eAAiB/lB,KAAKC,MAAM8lB,eAAiB,gCAAoC/lB,KAAKC,MAAM+lB,eAAiBhmB,KAAKC,MAAM+lB,eAAiB,2BAjCvNR,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACE1kB,WAAY,SACZC,cAAe,UAEfwkB,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACEpjB,KAAM,MACNF,KAAM,UACNG,MAAO,aAETkjB,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACEpc,GAAI,EACJ3G,SAAU,EACV4G,UAAW,SACXhH,MAAOtC,KAAKC,MAAM0lB,UAAY3lB,KAAKC,MAAM0lB,UAAY,YAEpD3lB,KAAKwH,MAAMiW,QAwBpBzd,KAAKC,MAAM4H,KACT2d,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACEpc,GAAI,EACJ4c,OAAQ,SACRtgB,WAAY,YACZugB,IAAK,+BACL5jB,MAAOtC,KAAKC,MAAM0lB,UAAY3lB,KAAKC,MAAM0lB,UAAY,WACrDQ,KAAMnmB,KAAK+C,cAAcqjB,2BAA2BpmB,KAAKC,MAAM4H,OAE/D2d,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACE1kB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBukB,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACE/iB,SAAU,EACV4G,UAAW,SACXhH,MAAOtC,KAAKC,MAAM0lB,UAAY3lB,KAAKC,MAAM0lB,UAAY,YAHvD,WAKW3lB,KAAK+C,cAAcmL,WAAWqX,EAAec,WAExDb,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACE/f,GAAI,EACJrD,KAAM,SACNF,KAAM,YACNG,MAAOtC,KAAKC,MAAM0lB,UAAY3lB,KAAKC,MAAM0lB,UAAY,eAIjB,oBAAjC3lB,KAAKC,MAAMgf,kBAClBuG,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACEpc,GAAI,EACJ8c,KAAI,qBACJvgB,QAAU,SAAAkB,GAAC,OAAI3D,EAAKlD,MAAMgf,qBAC1B3c,MAAOtC,KAAKC,MAAMqmB,gBAAkBtmB,KAAKC,MAAMqmB,gBAAkB,WACjE3gB,WAAY3F,KAAKC,MAAMsmB,qBAAuBvmB,KAAKC,MAAMsmB,qBAAuB,aAEhFf,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACE1kB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBukB,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACE/iB,SAAU,EACV4G,UAAW,SACXhH,MAAOtC,KAAKC,MAAMqmB,gBAAkBtmB,KAAKC,MAAMqmB,gBAAkB,YAHnE,sBAOAd,EAAArlB,EAAAC,cAACqlB,EAAA,EAAD,CACE/f,GAAI,EACJrD,KAAM,SACNF,KAAM,SACNG,MAAOtC,KAAKC,MAAMqmB,gBAAkBtmB,KAAKC,MAAMqmB,gBAAkB,eAIvE,aAzdczjB,aAgebsd,wCCtef,IAAAqG,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAIeE,EAAA,GACbC,YAAa,CAAC,OAAQ,QAEtB9K,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrC6K,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERrb,MAAO,CACLsb,MAAO,2CACPrb,UAAW,qCACXsb,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCC,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAClCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,iBAAkB,qBAC/BC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACP7gB,SAAU,IAEZxF,OAAQ,CACNsmB,QAASC,IAAKC,KACdC,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAK/L,KAAK,GAC1BqM,OAAQ,UACRN,KAAM,UACNO,KAAM,UACNC,YAAa,UACbC,QAAS,UACTC,UAAW,UACX5M,UAAW,UACX6M,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,OACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cACbC,MAAO,UAIP/mB,KAAM,UACN2C,OAAQ,UACRqkB,QAAS,UACTC,QAAS,UACTC,MAAO,UACPC,YAAa,UACbC,cAAe,UACfC,gBAAiB,UACjBC,SAAU,UACVC,aAAc,UACd3Q,gBAAiB,UACjB4Q,qBAAsB,UACtBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACV7jB,QAAS,UACT8jB,SAAU,UACVvD,QAAS,UACTtlB,OAAQ,UACRmE,KAAM,UACN2kB,QAAS,UACTC,QAAS,UACThT,OAAQ,UACRiT,OAAQ,OACRC,UAAW,UACXrf,OAAQ,OACRsf,WAAY,UACZC,gBAAiB,OACjBC,eAAgB,UAChBC,eAAgB,UAChBC,gBAAiB,wCACjBC,YAAa,UACbC,WAAY,OACZC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,WAAY,UACZ9pB,aAAc,CACZgQ,OAAQ,CACN+Z,KAAM,UACNC,KAAM,UACNC,MAAO,UACP/pB,OAAQ,UACRgqB,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTC,QAAS,UACTnB,QAAS,UACToB,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,gBAAiB,WAEnBxqB,SAAU,CACR8pB,KAAM,UACNC,KAAM,UACNC,MAAO,UACP/pB,OAAQ,UACRgqB,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTE,QAAS,UACTD,QAAS,UACTnB,QAAS,UACTsB,SAAU,UACVD,SAAU,UACVE,eAAgB,UAChBC,gBAAiB,WAEnBxa,OAAQ,CACNya,UAAW,UACXC,QAAS,UACTC,OAAQ,YAGZC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZzE,KAAM,CACJ5lB,MAAOsqB,YAAM,GAAK,QAClBlsB,gBAAiBmsB,YAAK,GAAK,QAC3BlgB,YAAa,QAEfmgB,QAAS,CACPxqB,MAAOsqB,YAAM,GAAKjD,IAAMzB,MACxBxnB,gBAAiBmsB,YAAK,GAAKlD,IAAMzB,MACjCvb,YAAagd,IAAMzB,MAErB6E,QAAS,CACPzqB,MAAOsqB,YAAM,GAAKI,IAAO9E,MACzBxnB,gBAAiBmsB,YAAK,GAAKG,IAAO9E,MAClCvb,YAAaqgB,IAAO9E,MAEtB+E,OAAQ,CACN3qB,MAAOsqB,YAAM,GAAKM,IAAIhF,MACtBxnB,gBAAiBmsB,YAAK,GAAKK,IAAIhF,MAC/Bvb,YAAaugB,IAAIhF,MAEnBiF,KAAM,CACJ7qB,MAAOsqB,YAAM,GAAK3E,IAAKC,MACvBxnB,gBAAiB,UACjBiM,YAAa,YAGjBygB,QAAS,CACPpF,QAAS,CACP1lB,MAAO2lB,IAAKrlB,KACZlC,gBAAiBunB,IAAKC,KAEtBmF,eAAgBpF,IAAKC,KACrBoF,mBAAoBrF,IAAKrlB,MAE3B2qB,OAAQ,CACNjrB,MAAOwmB,IAAWD,MAClByE,mBAAoBxE,IAAWD,OAEjCiE,QAAS,CACPO,eAAgB1D,IAAMzB,KACtBoF,mBAAoB3D,IAAM/mB,MAE5BqqB,OAAQ,CACNI,eAAgBH,IAAIhF,KACpBoF,mBAAoBJ,IAAItqB,OAG5B4qB,YAAa,CACXC,MAAO,CACL/qB,SAAU,UACVX,OAAQ,OACRoF,SAAU,OACVumB,QAAS,UAEXC,OAAQ,CACNjrB,SAAU,OACVX,OAAQ,OACRoF,SAAU,QAEZymB,MAAO,CACLlrB,SAAU,SACVX,OAAQ,OACRoF,SAAU,OACV3F,aAAc,4uLC5OdqsB,6MACJrmB,MAAQ,CACN1H,MAAM,KACNiC,OAAO,QAGT0F,oBAAqB,sFAGnBkd,OAAOmJ,iBAAiB,SAAU9tB,KAAK+tB,uBAAuB7O,KAAKlf,sDAInEA,KAAKyH,oBAAqB,EAC1Bkd,OAAOqJ,oBAAoB,SAAUhuB,KAAK+tB,oEAI1C/tB,KAAK+tB,oEAGYpmB,GACbA,EAAU3F,WAAahC,KAAKC,MAAM+B,UACpChC,KAAK+tB,0EAKP,GAAI/tB,KAAKyH,mBACP,OAAO,EAGT,IAAMK,EAAQnI,OAAAoP,EAAA,EAAApP,CAAA,GAAOK,KAAKwH,OAE1B,GAAIxH,KAAKC,MAAMqa,SAAS,CACtB,IAAM2T,EAAiBC,SAASC,eAAenuB,KAAKC,MAAMqa,UAC1D,GAAI2T,EAAe,CACjB,IAAMG,EAAa3gB,WAAWwgB,EAAeI,aAAa,EAAIJ,EAAeI,YAAc,EAEvFD,GAAcA,IAAetmB,EAAShI,QACxCgI,EAAShI,MAAQsuB,IASvB,IAJKtmB,EAAShI,OAASE,KAAKC,MAAMH,OAASE,KAAKC,MAAMH,QAAUgI,EAAShI,QACvEgI,EAAShI,MAAQE,KAAKC,MAAMH,OAG1BE,KAAKC,MAAMsa,eAAe,CAC5B,IAAM+T,EAAkBJ,SAASC,eAAenuB,KAAKC,MAAMsa,gBAC3D,GAAI+T,EAAgB,CAClB,IAAM7e,EAAchC,WAAW6gB,EAAgBD,aAAa,EAAIC,EAAgBD,YAAc,EAC1F5e,GAAeA,IAAgB3H,EAAS/F,SAC1C+F,EAAS/F,OAAS0N,EACb3H,EAAShI,QACZgI,EAAShI,MAAQ2P,MAMpB3H,EAAS/F,QAAU/B,KAAKC,MAAM8B,QAAU/B,KAAKC,MAAM8B,SAAW+F,EAAS/F,SAC1E+F,EAAS/F,OAAS/B,KAAKC,MAAM8B,QAG/B+F,EAAS/F,OAAS+F,EAAS/F,QAAU+F,EAAShI,MAE1CH,OAAOoE,KAAK+D,GAAU9D,OAAO,GAC/BhE,KAAKgI,SAASF,oCAKhB,IAAMymB,EAAYvuB,KAAKC,MAAMsD,KAEvBxB,EAAS/B,KAAKwH,MAAMzF,SAAWuB,MAAMtD,KAAKwH,MAAMzF,QAAUgQ,SAAS/R,KAAKwH,MAAMzF,QAAU,IACxFjC,EAAQE,KAAKwH,MAAM1H,QAAUwD,MAAMtD,KAAKwH,MAAM1H,OAASiS,SAAS/R,KAAKwH,MAAM1H,OAAS,EAEtF8J,EAAajK,OAAOC,OAAO,GAAGI,KAAKC,OAOvC,QANA2J,EAAUjK,OAAAoP,EAAA,EAAApP,CAAA,GACLiK,EADK,CAER7H,SACAjC,WAGgB6O,YAAgB/E,EAAWiB,MAAS/K,GAAUiC,EAc5D/B,KAAKC,MAAM4K,MACbzD,EAAAjH,EAAAC,cAACmuB,EACK3kB,GAfNxC,EAAAjH,EAAAC,cAACouB,EAAA,EAAD,CACE1qB,UAAW,CACT9C,cAAc,MACdytB,UAAU1sB,GAEZ6jB,YAAc5lB,KAAKC,MAAM2lB,YAAc5lB,KAAKC,MAAM2lB,YAAc,CAC9DvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,UAAiC8rB,IAA1B1uB,KAAKC,MAAM0uB,WAA2B3uB,KAAKC,MAAM0uB,WAAa,iCAlGlD9rB,aA4GZgrB,4BCjHfrpB,EAAAC,QAAA,CAAkB4G,QAAA,wDCAlB7G,EAAAC,QAAA,CAAkBmqB,GAAA,6CCAlBpqB,EAAAC,QAAA,CAAkBoqB,YAAA,+DCAlBrqB,EAAAC,QAAA,CAAkBqqB,SAAA,6/5MCAlBtqB,EAAAC,QAAA,CAAkBsqB,OAAA,27NCAlBvqB,EAAAC,QAAA,CAAkBuqB,eAAA,+BAAAC,MAAA,sBAAAC,OAAA,uBAAAC,WAAA,2BAAAC,MAAA,uLCEZC,mLAEF,OACEnvB,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZC,cAAe,OACXhB,KAAKC,MAAM6D,WAEf5D,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACE6C,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACHtC,KAAKC,MAAM0C,WAEd3C,KAAKC,MAAM2C,MAEd1C,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACE0vB,UAAW,MACXC,QAASvvB,KAAKC,MAAMsvB,SAChBvvB,KAAKC,MAAMuvB,cAEftvB,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACE8F,GAAI,EACJW,MAAO,CACL6I,OAAO,WAET/M,KAAM,OACNG,MAAO,YACPD,KAAOrC,KAAKC,MAAM+B,SAAW,QAAU,OACnChC,KAAKC,MAAMuC,qBA9BDK,aAsCXwsB,2BCxCf7qB,EAAAC,QAAA,CAAkBG,gBAAA,6BAAAC,eAAA,4BAAAC,YAAA,yBAAAC,KAAA,kBAAAC,cAAA,6MCMZyqB,6MAEJjoB,MAAQ,KAGRzE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAILlD,KAAK0vB,iMAGkB/nB,EAAWC,2EAClC5H,KAAKkD,YAECysB,EAAchoB,EAAUE,OAAS7H,KAAKC,MAAM4H,KAC5C+nB,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,SACnC3I,EAAUgY,UAAUxd,OAASnC,KAAKC,MAAM0f,UAAUxd,MACnDwtB,GAAeC,IACjC5vB,KAAK0vB,sQAKD/P,EAAY3f,KAAKC,MAAM0f,WACzB3f,KAAKC,MAAM4H,OAAQ7H,KAAKC,MAAMqQ,8BACxBqP,EAAUxd,YACX,gBAEA,gBAGA,kBAGA,gBAEA,kBAEA,mBAEA,kBAEA,+PAST,IAAIC,EAAO,KACPE,EAAQ,KACRutB,EAAS,KACTC,EAAc,KACd3lB,EAAc,KACZwV,EAAY3f,KAAKC,MAAM0f,UACvBqB,EAAchhB,KAAKC,MAAM+gB,YAC3B+O,EAAUtuB,IAAMC,OAAOC,aAAaC,SAASoqB,QAE3CgE,EAAa,CACjBvtB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,WACN+D,MAAM,CACJC,SAAS,OACTC,SAAU,SACVE,aAAc,YAEhB3C,UAAU,CACR7C,eAAe,eAWnB,OANI0e,EAAU1f,OAASN,OAAOoE,KAAK4b,EAAU1f,OAAO+D,QAClDrE,OAAOoE,KAAK4b,EAAU1f,OAAOgE,QAAQ,SAAA1C,GACnCyuB,EAAWzuB,GAAKoe,EAAU1f,MAAMsB,KAI5Boe,EAAUxd,MAChB,IAAK,OAKH,OAJI6e,EAAYrP,SACdrP,EAAQb,IAAMC,OAAOC,aAAagQ,OAAOqP,EAAYrP,OAAOpE,eAAiB9L,IAAMC,OAAOC,aAAagQ,OAAOqP,EAAYrP,OAAOpE,eAAiBjL,EAClJytB,EAAUtuB,IAAMC,OAAOC,aAAaC,SAASof,EAAYrP,OAAOpE,eAAiB9L,IAAMC,OAAOC,aAAaC,SAASof,EAAYrP,OAAOpE,eAAiBwiB,GAElJ/O,EAAYrP,OAAOpE,eACzB,IAAK,UACL,IAAK,WACL,IAAK,cACL,IAAK,kBACHnL,EAAO,gBACT,MACA,IAAK,QACHA,EAAO,aACT,MACA,IAAK,SACL,IAAK,UACL,IAAK,aACL,IAAK,iBACHA,EAAO,cACT,MACA,IAAK,OACHA,EAAO,OACT,MACA,IAAK,UACHA,EAAO,OACT,MACA,IAAK,UAEHA,EAAO,SACT,MACA,IAAK,OAGL,IAAK,UACHA,EAAO,YACT,MACA,IAAK,WACHA,EAAO,cACT,MACA,QACEA,EAAO,UAGXytB,EACExrB,EAAAlE,EAAAC,cAAC6vB,EAAA,EAADtwB,OAAAC,OAAA,CACE2B,EAAG,MACHC,aAAc,OACVwuB,EAHN,CAIEjvB,WAAY,SACZL,gBAAiBqvB,EACjB9uB,eAAgB,WAEhBoD,EAAAlE,EAAAC,cAAC6vB,EAAA,EAAD,CACE9tB,KAAMC,EACNE,MAAOA,EACPpB,MAAO,SACPmB,KAAMrC,KAAKC,MAAM+B,SAAW,MAAQ,WAI5C,MACA,IAAK,OACCgf,EAAYnZ,OACdgoB,EACExrB,EAAAlE,EAAAC,cAAC6vB,EAAA,EAAD,CACEhK,OAAQ,SACRC,IAAK,+BACLC,KAAMnmB,KAAK+C,cAAcqjB,2BAA2BpF,EAAYnZ,OAEhExD,EAAAlE,EAAAC,cAAC8vB,EAAA,EAADvwB,OAAAC,OAAA,CACE8C,SAAU,EACVJ,MAAO,SACH0tB,EAHN,CAIE/nB,gBAAgB,EAChBJ,KAAMmZ,EAAYnZ,UAK5B,MACA,IAAK,SACH,IAAI8J,EAASqP,EAAYrP,OACzB,OAAQqP,EAAYrP,QAClB,IAAK,OACHA,EAAS,UACX,MACA,IAAK,UACHA,EAAS,WAKbke,EACExrB,EAAAlE,EAAAC,cAAC6vB,EAAA,EAASD,EAAare,EAAO+D,eAElC,MACA,IAAK,OACH,IAAMM,EAAgBgL,EAAYnL,WAAWI,OAAO,gBACpD4Z,EACExrB,EAAAlE,EAAAC,cAAC6vB,EAAA,EAASD,EAAaha,GAE3B,MACA,IAAK,aAEH,OADA1T,EAAQb,IAAMC,OAAOC,aAAaiQ,OAAOoP,EAAYpP,OAAOrE,eACpDyT,EAAYpP,QAClB,IAAK,YACHxP,EAAO,OACT,MACA,IAAK,UACHA,EAAO,YACT,MACA,IAAK,SACHA,EAAO,eAKXytB,EACExrB,EAAAlE,EAAAC,cAAC6vB,EAAA,EAADtwB,OAAAC,OAAA,CACE2B,EAAG,CAAC,EAAE,OACNC,aAAc,OACVwuB,EAHN,CAIEjvB,WAAY,SACZjB,MAAO,CAAC,OAAO,QACfiC,OAAQ,CAAC,OAAO,QAChBd,eAAgB,SAChBsE,OAASvF,KAAKC,MAAM+B,SAAX,aAAA2E,OAAmCrE,GAAnC,aAAAqE,OAA0DrE,KAEnE+B,EAAAlE,EAAAC,cAAC6vB,EAAA,EAAD,CACE9tB,KAAMC,EACNE,MAAOA,EACPpB,MAAO,SACPmB,KAAOrC,KAAKC,MAAM+B,SAAW,MAAQ,WAI7C,MACA,IAAK,SACH6tB,EACExrB,EAAAlE,EAAAC,cAAC6vB,EAAA,EAASD,EAAahP,EAAYpP,QAEvC,MACA,IAAK,SACHie,EACExrB,EAAAlE,EAAAC,cAAC+vB,EAAA,EAADxwB,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6B3sB,OAAQ2d,EAAYoP,UAErD,MACA,IAAK,YACLN,EAAc9O,EAAY8O,YAAYpa,cAEpC,IAAM2a,GADRlmB,EAAcnK,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,SAASqa,MAClC3lB,EAAY/H,KAAO+H,EAAY/H,KAA9C,iBAAAuE,OAAsEmpB,EAAtE,QAChBD,EACExrB,EAAAlE,EAAAC,cAAC6vB,EAAA,EAADtwB,OAAAC,OAAA,CAAOkC,IAAKuuB,GAAaL,IAE7B,MACA,IAAK,YACHF,EAAc9O,EAAY8O,YAAYpa,cACtCvL,EAAcnK,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,SAASqa,IACnED,EACExrB,EAAAlE,EAAAC,cAAC6vB,EAAA,EAASD,EAAa7lB,GAAeA,EAAY8D,MAAQ9D,EAAY8D,MAAQ6hB,GAElF,MACA,IAAK,SACH,IAAIQ,EAAkB,KAClBC,EAAcvwB,KAAK+C,cAAcytB,aAAa7Q,EAAU9Z,KAAK7F,KAAKC,MAAM+gB,aAC5E,OAAQrB,EAAUpc,MAChB,IAAK,SACHgtB,EAAcvwB,KAAK+C,cAAc2O,MAAM6e,GAAa9M,WACpD6M,EAAkBxtB,IAClBktB,EAAW3sB,OAASktB,EACpBA,EAAc,KAChB,MACA,IAAK,QACHD,EAAkBG,IAClBT,EAAWluB,IAAMyuB,EACjBA,EAAc,KAChB,MACA,IAAK,OACHD,EAAkBI,IAClBV,EAAW7tB,KAAOouB,EAClBA,EAAc,KAChB,MACA,QACED,EAAkBnqB,IAGtB0pB,EAASU,EACPlsB,EAAAlE,EAAAC,cAACkwB,EAAoBN,EAAaO,GAChClsB,EAAAlE,EAAAC,cAACkwB,EAAoBN,GAK7B,OAAOH,SAhSoBhtB,aAoShB4sB,44uBC7DAkB,EApOb,SAAAA,EAAY1wB,GAAM,IAAAiF,EAAAlF,KAAAL,OAAAixB,EAAA,EAAAjxB,CAAAK,KAAA2wB,GAAA3wB,KANlBC,MAAQ,GAMUD,KALlB6wB,UAAY,KAKM7wB,KAJlBmK,YAAc,KAIInK,KAHlB+C,cAAgB,KAGE/C,KAKlBgD,SAAW,SAAA/C,GACTiF,EAAKjF,MAAQA,EAETiF,EAAKnC,cACPmC,EAAKnC,cAAcC,SAASkC,EAAKjF,OAEjCiF,EAAKnC,cAAgB,IAAIE,EAAciC,EAAKjF,OAG9CiF,EAAK2rB,UAAY3rB,EAAKnC,cAAc0S,gBAAgB,CAAC,aAAa,QAAQ,cAC1EvQ,EAAKiF,YAAcjF,EAAKnC,cAAc0S,gBAAgB,CAAC,YAAYvQ,EAAK2rB,aAfxD7wB,KAkBlB8wB,WAlBkBnxB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAkBL,SAAA6P,IAAA,IAAAtO,EAAA,OAAA2e,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cAAAwP,EAAAxP,KAAA,EACSnM,EAAKnC,cAAckuB,gBAAgB/rB,EAAK2rB,UAAU3rB,EAAKjF,MAAMqQ,SADtE,cACP+B,EADOwO,EAAAzM,QAEKlP,EAAKnC,cAAc2O,MAAMW,GAAS/O,UAChD+O,EAAUnN,EAAKnC,cAAc2O,MAAM,IAH1BmP,EAAAe,OAAA,SAKJvP,GALI,wBAAAwO,EAAArO,SAAAmO,EAAA3gB,SAlBKA,KA0BlBkxB,aA1BkB,eAAApd,EAAAnU,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA0BH,SAAAsQ,EAAOrZ,EAASmW,GAAhB,OAAA8S,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAAAkQ,EAAAK,OAAA,SACN1c,EAAKnC,cAAc0b,0BAA0B,eAAgB,QAAS,GAAI1W,EAAUmW,IAD9E,wBAAAqD,EAAA/O,SAAA4O,EAAAphB,SA1BG,gBAAA0hB,EAAAC,GAAA,OAAA7N,EAAApB,MAAA1S,KAAA2S,YAAA,GAAA3S,KA8BlBmxB,cA9BkBxxB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA8BF,SAAAC,IAAA,IAAAT,EAAA8gB,EAAAC,EAAA1e,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdf,GADqBA,EAAP+gB,EAAArtB,OAAA,QAAA0qB,IAAA2C,EAAA,GAAAA,EAAA,GAAe,OACCnsB,EAAKjF,MAAMqQ,QAD3Ba,EAAAE,KAAA,EAESnM,EAAKnC,cAAcuuB,oBAAoBpsB,EAAK2rB,UAAU,gBAAgB,CAACvgB,IAFhF,YAEV8gB,EAFUjgB,EAAAiD,MAAA,CAAAjD,EAAAE,KAAA,eAAAF,EAAAyQ,OAAA,SAIL1c,EAAKnC,cAAc2O,MAAM0f,IAJpB,cAAAjgB,EAAAyQ,OAAA,SAMP,MANO,wBAAAzQ,EAAAqB,SAAAzB,EAAA/Q,SA9BEA,KAuClBuxB,iBAvCkB5xB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAuCC,SAAAiD,IAAA,OAAAid,EAAA7wB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA2N,OAAA,SACV1c,EAAKnC,cAAcuuB,oBAAoB,iBAAiB,sBAD9C,wBAAArd,EAAAzB,SAAAuB,EAAA/T,SAvCDA,KA2ClBwxB,mBA3CkB7xB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA2CG,SAAAqR,IAAA,OAAA6O,EAAA7wB,EAAA+Q,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,cAAAgR,EAAAT,OAAA,SAOZ1c,EAAKnC,cAAc2O,MAAM,IAPb,wBAAA2Q,EAAA7P,SAAA2P,EAAAniB,SA3CHA,KAqDlByxB,OArDkB,eAAAC,EAAA/xB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAqDT,SAAAqS,EAAO1R,EAAMtH,GAAb,IAAAyL,EAAA+b,EAAAC,EAAAC,EAAAC,EAAA9N,EAAA+N,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzf,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAoS,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAjS,MAAA,UAAyBuE,EAAzBwc,EAAApuB,OAAA,QAAA0qB,IAAA0D,EAAA,GAAAA,EAAA,GAAwC,MACzCT,EAAkBzsB,EAAKnC,cAAc0S,gBAAgB,CAAC,YAAYvQ,EAAK2rB,aACxDwB,QAFd,CAAA/O,EAAAjS,KAAA,eAAAiS,EAAA1B,OAAA,UAGE,GAHF,cAMDgQ,EANC,cAAAjrB,OAM6BwD,EAAYmoB,KAAK7gB,MAN9C,KAAA9K,OAMuDiP,GAQ1Dic,EAAM3sB,EAAKnC,cAAc2O,MAAM,GAd5B4R,EAAAjS,KAAA,EAmBG4P,QAAQqD,IAAI,CACpBpf,EAAKqtB,gBAAgBpoB,GACrBjF,EAAKnC,cAAcmH,mBAAmBC,GAAY,GAAM,KArBnD,UAAA2nB,EAAAxO,EAAAlP,KAAA4P,EAAArkB,OAAA6yB,EAAA,EAAA7yB,CAAAmyB,EAAA,GAiBLC,EAjBK/N,EAAA,GAkBLgO,EAlBKhO,EAAA,IAwBH+N,IAAoBC,EAxBjB,CAAA1O,EAAAjS,KAAA,YA0BC4gB,EAAiB/sB,EAAKnC,cAAc0S,gBAAgB,CAAC,QAAQ,SAAS,QAGvEG,EA7BA,CAAA0N,EAAAjS,KAAA,gBAAAiS,EAAAlS,KAAA,GAAAkS,EAAAjS,KAAA,GA+BsBnM,EAAKnC,cAAc0vB,yBAAyBR,EAAeN,GA/BjF,QA+BD/b,EA/BC0N,EAAAlP,KAAAkP,EAAAjS,KAAA,iBAAAiS,EAAAlS,KAAA,GAAAkS,EAAAoP,GAAApP,EAAA,kBAmCE1N,IAAkBA,EAAetS,UACpCsS,EAAiB1Q,EAAKnC,cAAc2O,MAAM,IApCzC,WAwCAkE,IAAkB1Q,EAAKnC,cAAc2O,MAAMkE,GAAgB+c,IAAI,GAxC/D,CAAArP,EAAAjS,KAAA,gBAAAiS,EAAA1B,OAAA,SAyCI1c,EAAKnC,cAAc2O,MAAM,IAzC7B,eAAA4R,EAAAjS,KAAA,GA4CmBnM,EAAKnC,cAAc6vB,oBAAoBZ,EAAgBa,0BAA0BphB,EAAMtH,GA5C1G,eA4CC+nB,EA5CD5O,EAAAlP,KA8CC+d,EAA4BjtB,EAAKnC,cAAc2O,MAAMkE,GAAgBlI,MAAMqkB,GACjFF,EAAMM,EAA0B3O,IAAI0O,GAAWxkB,MAAM,KA/ChD4V,EAAA1B,OAAA,SAmDE1c,EAAKnC,cAAc+c,cAAc8R,EAAcC,IAnDjD,eAAAvO,EAAA1B,OAAA,SAsDAiQ,GAtDA,yBAAAvO,EAAA9Q,SAAA2Q,EAAAnjB,KAAA,cArDS,gBAAAyS,EAAA4B,GAAA,OAAAqd,EAAAhf,MAAA1S,KAAA2S,YAAA,GAAA3S,KA+GlB8yB,SA/GkB,eAAA7O,EAAAtkB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+GP,SAAA+S,EAAOkP,GAAP,IAAAnB,EAAA/R,EAAAmT,EAAA,OAAAhC,EAAA7wB,EAAA+Q,KAAA,SAAAgT,GAAA,cAAAA,EAAA9S,KAAA8S,EAAA7S,MAAA,UAEHugB,EAFG,gBAAAjrB,OAE6BosB,GAGnB,QAFblT,EAAa3a,EAAKnC,cAAckwB,8BAA8BrB,KAExC1sB,EAAKnC,cAAc2O,MAAMmO,GAAYvc,QALxD,CAAA4gB,EAAA7S,KAAA,eAAA6S,EAAAtC,OAAA,SAMA1c,EAAKnC,cAAc2O,MAAMmO,IANzB,cAAAqE,EAAA7S,KAAA,EAScnM,EAAKnC,cAAcuuB,oBAAoB,iBAAiB,aAAa,CAACyB,IATpF,YASLC,EATK9O,EAAA9P,OAWUlP,EAAKnC,cAAc2O,MAAMshB,GAAY1vB,QAX/C,CAAA4gB,EAAA7S,KAAA,gBAYP2hB,EAAa9tB,EAAKnC,cAAc2O,MAAMshB,GAZ/B9O,EAAAtC,OAAA,SAaA1c,EAAKnC,cAAcmwB,8BAA8BtB,EAAcoB,EAAW,OAb1E,eAAA9O,EAAAtC,OAAA,SAeF,MAfE,yBAAAsC,EAAA1R,SAAAqR,EAAA7jB,SA/GO,gBAAAmzB,GAAA,OAAAlP,EAAAvR,MAAA1S,KAAA2S,YAAA,GAAA3S,KAiIlBuyB,gBAjIkB,eAAAa,EAAAzzB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAiIA,SAAA2T,EAAOta,GAAP,IAAAynB,EAAA/R,EAAAmT,EAAAK,EAAAC,EAAA,OAAAtC,EAAA7wB,EAAA+Q,KAAA,SAAAwT,GAAA,cAAAA,EAAAtT,KAAAsT,EAAArT,MAAA,UAEVugB,EAFU,uBAAAjrB,OAE6BwD,EAAYmoB,KAAK7gB,OAE3C,QADboO,EAAa3a,EAAKnC,cAAckwB,8BAA8BrB,KACxC1sB,EAAKnC,cAAc2O,MAAMmO,GAAYvc,QAJjD,CAAAohB,EAAArT,KAAA,eAAAqT,EAAA9C,OAAA,SAKP1c,EAAKnC,cAAc2O,MAAMmO,IALlB,cAAA6E,EAAArT,KAAA,EASSnM,EAAK4tB,SAAS3oB,EAAYmoB,KAAKhlB,SATxC,YASV0lB,EATUtO,EAAAtQ,MAAA,CAAAsQ,EAAArT,KAAA,YAcRgiB,EAAgBnuB,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,kBAG9D6d,EAAepuB,EAAKnC,cAAc2O,MAAMshB,GAAYtlB,MAAMxI,EAAKnC,cAAc2O,MAAM2hB,IAAgB7P,IAAI,MAExGte,EAAKnC,cAAc2O,MAAM4hB,GAAchwB,QAnB9B,CAAAohB,EAAArT,KAAA,gBAAAqT,EAAA9C,OAAA,SAoBL1c,EAAKnC,cAAcmwB,8BAA8BtB,EAAc0B,IApB1D,eAAA5O,EAAA9C,OAAA,SAwBT,MAxBS,yBAAA8C,EAAAlS,SAAAiS,EAAAzkB,SAjIA,gBAAAuzB,GAAA,OAAAH,EAAA1gB,MAAA1S,KAAA2S,YAAA,GAAA3S,KA4JlBwzB,oBA5JkB7zB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA4JI,SAAA2iB,IAAA,IAAAnjB,EAAAF,EAAAsjB,EAAAC,EAAAC,EAAAC,EAAAlhB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA4iB,GAAA,cAAAA,EAAA1iB,KAAA0iB,EAAAziB,MAAA,UAAOf,EAAPujB,EAAA7vB,OAAA,QAAA0qB,IAAAmF,EAAA,GAAAA,EAAA,GAAe,KAAKzjB,EAApByjB,EAAA7vB,OAAA,QAAA0qB,IAAAmF,EAAA,GAAAA,EAAA,GAAoC,KAAKH,EAAzCG,EAAA7vB,OAAA,QAAA0qB,IAAAmF,EAAA,IAAAA,EAAA,GACfvjB,IACHA,EAAUpL,EAAKjF,MAAMqQ,UAElBF,GAAmBlL,EAAKjF,MAAM4T,mBACjCzD,EAAkBlL,EAAKjF,MAAM8zB,oBAAoB7uB,EAAKjF,MAAM4T,mBAGzDvD,GAAYF,EARG,CAAA0jB,EAAAziB,KAAA,eAAAyiB,EAAAlS,OAAA,UASX,GATW,cAYd+R,EAAmBzuB,EAAKnC,cAAcixB,uBAExCJ,EAAa1uB,EAAKnC,cAAc2O,MAAM,GAdtBoiB,EAAAziB,KAAA,GAednM,EAAKnC,cAAc2N,aAAa/Q,OAAOoE,KAAKqM,GAA5C,eAAA6jB,EAAAt0B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA6D,SAAAojB,EAAOziB,GAAP,IAAAtH,EAAAgqB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvD,EAAA7wB,EAAA+Q,KAAA,SAAAsjB,GAAA,cAAAA,EAAApjB,KAAAojB,EAAAnjB,MAAA,UAC3DlH,EAAciG,EAAgBqB,IAEbvM,EAAKnC,cAAcytB,aAAa,CAAC,iBAAiBmD,GAAkBzuB,EAAKiF,aAE7EsqB,SAAStqB,EAAYmoB,KAAK7gB,OALoB,CAAA+iB,EAAAnjB,KAAA,eAAAmjB,EAAA5S,OAAA,wBAAA4S,EAAAnjB,KAAA,EAYvD4P,QAAQqD,IAAI,CACpBpf,EAAK4tB,SAAS3oB,EAAYmoB,KAAKhlB,SAC/BpI,EAAKnC,cAAc2xB,iBAAiBpkB,EAAQnG,KAdmB,OAAAgqB,EAAAK,EAAApgB,KAAAggB,EAAAz0B,OAAA6yB,EAAA,EAAA7yB,CAAAw0B,EAAA,GAU/DE,EAV+DD,EAAA,GAW/DE,EAX+DF,EAAA,GAiB7DC,GAAaC,IACTC,EAAaF,EAAU3mB,MAAM4mB,GACnCV,EAAaA,EAAW1hB,KAAKqiB,IAnBkC,yBAAAC,EAAAhiB,SAAA0hB,EAAAl0B,SAA7D,gBAAA20B,GAAA,OAAAV,EAAAvhB,MAAA1S,KAAA2S,YAAA,IAfc,eAsChB+gB,IACFE,EAAa1uB,EAAKnC,cAAcmS,iBAAiB0e,EAAW1uB,EAAKiF,YAAYxG,UAC7EiwB,EAAa1uB,EAAKnC,cAAc6xB,qBAAqBhB,EAAW1uB,EAAKiF,YAAY0qB,wBAxC/Df,EAAAlS,OAAA,SA2CbgS,GA3Ca,yBAAAE,EAAAthB,SAAAihB,EAAAzzB,SA5JJA,KA0MlB80B,UA1MkBn1B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA0MN,SAAAikB,IAAA,IAAA3kB,EAAAyf,EAAA/lB,EAAAkrB,EAAAriB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA+jB,GAAA,cAAAA,EAAA7jB,KAAA6jB,EAAA5jB,MAAA,cAAOjB,EAAP4kB,EAAAhxB,OAAA,QAAA0qB,IAAAsG,EAAA,GAAAA,EAAA,GAAuB,QAE/B5kB,EAAkBlL,EAAKjF,MAAM8zB,oBAAoB7uB,EAAKjF,MAAM4T,mBAE1Dgc,EAAS3qB,EAAKnC,cAAc2O,MAAM,GAClC5H,EAAkB5E,EAAKnC,cAAc2O,MAAM,GALrCujB,EAAA5jB,KAAA,EAMJnM,EAAKnC,cAAc2N,aAAa/Q,OAAOoE,KAAKqM,GAA5C,eAAA8kB,EAAAv1B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA6D,SAAAqkB,EAAO1jB,GAAP,IAAAtH,EAAAirB,EAAAC,EAAAC,EAAAtD,EAAA,OAAAhB,EAAA7wB,EAAA+Q,KAAA,SAAAqkB,GAAA,cAAAA,EAAAnkB,KAAAmkB,EAAAlkB,MAAA,cAC3DlH,EAAciG,EAAgBqB,GAD6B8jB,EAAAlkB,KAAA,EAEzB4P,QAAQqD,IAAI,CAClDpf,EAAKusB,OAAOhgB,EAAMtH,GAClBjF,EAAKnC,cAAcmH,mBAAmBC,GAAY,GAAM,KAJO,OAAAirB,EAAAG,EAAAnhB,KAAAihB,EAAA11B,OAAA6yB,EAAA,EAAA7yB,CAAAy1B,EAAA,GAE1DE,EAF0DD,EAAA,GAElDrD,EAFkDqD,EAAA,GAO7DC,GAAWtD,IACbnC,EAASA,EAAO3d,KAAKojB,EAAQ5nB,MAAMskB,EAAgBloB,kBACnDA,EAAkBA,EAAgBoI,KAAK8f,EAAgBloB,kBATQ,wBAAAyrB,EAAA/iB,SAAA2iB,EAAAn1B,SAA7D,gBAAAw1B,GAAA,OAAAN,EAAAxiB,MAAA1S,KAAA2S,YAAA,IANI,cAmBVkd,EAASA,EAAOrM,IAAI1Z,GAnBVmrB,EAAArT,OAAA,SAqBHiO,GArBG,wBAAAoF,EAAAziB,SAAAuiB,EAAA/0B,SAzMVA,KAAKgD,SAAS/C,oECGZw1B,EAAgBC,EAAQ,KAE9B/Q,OAAOgR,SAAW,OAEZ1yB,aAOJ,SAAAA,EAAYhD,GAAO,IAAAiF,EAAAlF,KAAAL,OAAAixB,EAAA,EAAAjxB,CAAAK,KAAAiD,GAAAjD,KAJnBC,MAAQ,GAIWD,KAHnB41B,aAAe,KAGI51B,KAKnBgD,SAAW,SAAA/C,GACTiF,EAAKjF,MAAQA,GANID,KAQnB61B,QAAU,SAAArU,GACR,OAAOtc,EAAKwM,MAAM8P,GAAK7T,QAAQ,IATd3N,KAWnB81B,KAAO,SAAAC,GAAC,OAAI,IAAI7wB,EAAKjF,MAAM6e,KAAKkX,MAAMC,GAAGF,IAXtB/1B,KAYnBk2B,MAAQ,SAAAC,GACN,OAAKjxB,EAAKjF,MAAM6e,KAGT5Z,EAAKjF,MAAM6e,KAAKkX,MAAMI,SAC1BD,GAAO,GAAG1S,WACX,SAJO,MAdQzjB,KAqBnBq2B,MAAQ,SAAA7U,GACN,OAAKtc,EAAKjF,MAAM6e,KAGT5Z,EAAKjF,MAAM6e,KAAKkX,MAAMK,OAC1B7U,GAAO,GAAGiC,WACX,SAJO,MAvBQzjB,KA8BnBs2B,WAAa,SAAAlH,GACX,IAAItoB,EAAIonB,SAAS9tB,cAAc,YAE/B,OADA0G,EAAEyvB,UAAYnH,EACiB,IAAxBtoB,EAAE0vB,WAAWxyB,OAAe,GAAK8C,EAAE0vB,WAAW,GAAGC,WAjCvCz2B,KAmCnB02B,UAAY,SAAAC,GAAC,OAAI,IAAIC,IAAUD,IAnCZ32B,KAoCnB0R,MAAQ,SAAAilB,GAAC,OAAI,IAAIC,IAAuB,kBAAND,EAAiBA,EAAIE,OAAOF,KApC3C32B,KAqCnBijB,UAAY,WAAc,QAAA6T,EAAAnkB,UAAA3O,OAAV/D,EAAU,IAAA82B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAV/2B,EAAU+2B,GAAArkB,UAAAqkB,GAAMnpB,IAAcopB,KAAKC,iBAAiBhyB,EAAK+d,UAALvQ,MAAAxN,EAAI,CAAWiyB,MAASlhB,OAAO,aAA3BtP,OAA2C1G,KArChGD,KAsCnBo3B,eAAiB,WAAc,QAAAC,EAAAC,EAAA3kB,UAAA3O,OAAV/D,EAAU,IAAA82B,MAAAO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAVt3B,EAAUs3B,GAAA5kB,UAAA4kB,GAAM1pB,IAAcopB,KAAKO,gBAAeH,EAAAI,SAAQha,MAAR/K,MAAA2kB,EAAA,CAAcF,MAASlhB,OAAO,aAA9BtP,OAA8C1G,KAtClGD,KAuCnB03B,kBAAoB,SAAC3Z,GAAmC,IAArB4Z,EAAqBhlB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAC7CglB,EAAYA,GAAazyB,EAAKjF,MAAM8e,QAAQ6Y,SAASxyB,GACrD,IAAIyyB,EAAW3yB,EAAKjF,MAAM63B,UAAUrY,KAAK,SAAAsY,GAAC,OAAIA,GAAKA,EAAE51B,MAAQ41B,EAAE51B,OAAS4b,IAMxE,SAJE8Z,EADE3yB,EAAKjF,MAAM8e,SAAW7Z,EAAKjF,MAAM8e,QAAQ6Y,UAAY1yB,EAAKjF,MAAM8e,QAAQiZ,WAAa9yB,EAAKjF,MAAM8e,QAAQkZ,kBAAoBN,IAAczyB,EAAKjF,MAAM8e,QAAQiZ,QAAQ5yB,KAAOF,EAAKjF,MAAMi4B,mBAAqBhzB,EAAKjF,MAAMi4B,kBAAkBP,GAChOzyB,EAAKjF,MAAMi4B,kBAAkBP,GAAWlY,KAAK,SAAAsY,GAAC,OAAIA,GAAKA,EAAE51B,MAAQ41B,EAAE51B,OAAS4b,IAE5E7Y,EAAKjF,MAAM63B,UAAUrY,KAAK,SAAAsY,GAAC,OAAIA,GAAKA,EAAE51B,MAAQ41B,EAAE51B,OAAS4b,MAK/D8Z,EAASA,UAlDC73B,KAoDnBm4B,8BAAgC,SAACpC,GAC/B,OAAOA,EAAEqC,QAAQ,YAAa,MAC3BA,QAAQ,OAAQ,IAChBA,QAAQ,QAAS,IACjBA,QAAQ,UAAW,KACnBA,QAAQ,SAAU,KAzDJp4B,KA2DnBkO,WAAa,SAACmqB,GACZ,OAAOA,EAAMA,EAAI/S,OAAO,EAAG,GAAG5P,cAAgB2iB,EAAI/S,OAAO,GAAK,IA5D7CtlB,KA8DnB6S,YAAc,SAACyD,GAAwB,IAAlBL,EAAkBtD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAC5B,OAAOwkB,IAAO7gB,EAAML,IA/DHjW,KAiEnBs4B,kBAAoB,SAACC,EAAMC,GAOzB,OANIA,GAAQ74B,OAAOoE,KAAKy0B,GAAMx0B,QAC5BrE,OAAOoE,KAAKy0B,GAAMv0B,QAAQ,SAAA1C,GACxBg3B,EAAKh3B,GAAKi3B,EAAKj3B,KAIZg3B,GAxEUv4B,KA0EnBy4B,2BAA6B,SAACF,EAAMC,GAAuB,IAAjBv4B,EAAiB0S,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAYhD,OAXI6lB,GAAQ74B,OAAOoE,KAAKy0B,GAAMx0B,QAC5BrE,OAAOoE,KAAKy0B,GAAMv0B,QAAQ,SAAA1C,GACD,oBAAZi3B,EAAKj3B,GACdg3B,EAAKh3B,GAAKi3B,EAAKj3B,GAAGtB,GACU,kBAAZu4B,EAAKj3B,GACrBg3B,EAAKh3B,GAAL5B,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAe44B,EAAKh3B,GAAO2D,EAAKuzB,2BAA2BF,EAAMC,EAAKj3B,GAAItB,IAE1Es4B,EAAKh3B,GAAKi3B,EAAKj3B,KAIdg3B,GAtFUv4B,KAwFnB24B,UAAY,SAACC,GACX,IAAIC,EAAM3K,SAAS9tB,cAAc,OAEjC,OADAy4B,EAAItC,UAAYqC,EACTC,EAAIC,aAAeD,EAAIE,WAAa,IA3F1B/4B,KA8FnBg5B,SAAW,SAACC,EAAIC,GACd,IAAMC,EAAQxU,OAAOyU,QACfC,EAASJ,EAAKE,EAEhBG,EAAc,EAElBznB,KAAK0nB,cAAgB,SAAUC,EAAGC,EAAG1B,EAAGptB,GAEtC,OADA6uB,GAAK7uB,EAAI,GACD,EAAUotB,EAAI,EAAIyB,EAAIA,EAAIC,GAE1B1B,EAAI,KADZyB,GACsBA,EAAI,GAAK,GAAKC,IAGhB,SAAhBC,IACJJ,GAXgB,GAYhB,IAAIK,EAAM9nB,KAAK0nB,cAAcD,EAAaH,EAAOE,EAAQH,GACzDvU,OAAOqU,SAAS,EAAGW,GACfL,EAAcJ,GAChBvU,OAAOjB,WAAWgW,EAfJ,IAmBlBA,IApHiB15B,KAsHnB45B,8BAAgC,SAACz3B,GAAqC,IAA/B03B,EAA+BlnB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAzBgS,OAAOmV,SAAS3T,KAE3DhkB,EAAOA,EAAKi2B,QAAQ,UAAW,QAC/B,IACE2B,EADU,IAAIC,OAAO,OAAS73B,EAAO,qBACrB83B,KAAKJ,GACvB,OAAKE,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAG3B,QAAQ,MAAO,MAD5B,GADH,MA3HJp4B,KA+HnBm6B,YAAc,SAAC3oB,EAAIrH,GAEjB,IAAKA,EAAYmoB,KACf,OAAO,KAGT,IAAMS,EAAmB5oB,EAAYmoB,KAAKhlB,QACpC8sB,EAA2Bl1B,EAAKuQ,gBAAgB,CAAC,WAAY,UAAW,UAAW,kBACnF4kB,EAAwBlwB,EAAYmwB,WAAanwB,EAAYmwB,UAAUC,kBAAoBpwB,EAAYmwB,UAAUC,kBAAkBjtB,QAAU,KAC7IktB,EAA4BrwB,EAAYmwB,WAAanwB,EAAYmwB,UAAUC,mBAAqBpwB,EAAYmwB,UAAUC,kBAAkBE,aAAetwB,EAAYmwB,UAAUC,kBAAkBE,aAAe,GAC9MC,EAAiBx1B,EAAKuQ,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,kBAAmBtL,EAAYmoB,KAAK7gB,QAC/GkpB,EAA6BD,GAAkBA,EAAeH,kBAAoBG,EAAeH,kBAAkBjtB,QAAU,KAG7HstB,EADqBD,GAA8BnpB,EAAG9E,KAAKa,gBAAkBotB,EAA2BptB,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,eAAiBiE,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAC5M8sB,IAA0B7oB,EAAG9E,KAAKa,gBAAkB8sB,EAAsB9sB,gBAAuH,IAAtGitB,EAA0B10B,IAAI,SAACmF,GAAQ,OAAOA,EAAEsC,gBAAkBgP,QAAQ/K,EAAG9E,KAAKa,iBAA0BiE,EAAGqpB,gBAAgBttB,gBAAkBwlB,EAAiBxlB,cACpSutB,GAAoBF,GAAiBppB,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBwlB,EAAiBxlB,cACzJwtB,GAAuBH,GAAiBppB,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBwlB,EAAiBxlB,cAC1JytB,GAAeJ,IAAkBE,IAAqBC,IAAwBvpB,EAAGynB,GAAG1rB,gBAAkBwlB,EAAiBxlB,eAAkB6sB,GAA4B5oB,EAAGynB,GAAG1rB,gBAAkB6sB,EAAyB9sB,QAAQC,eAC9N0tB,GAAcL,IAAkBE,IAAqBC,GAAuBvpB,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,cACvH2tB,GAAYN,IAAkBE,IAAqBC,IAAwBC,GAAexpB,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBwlB,EAAiBxlB,cAE9MoE,EAAS,KAkBb,OAhBIqpB,EACFrpB,EAAS,UACAspB,EACTtpB,EAAS,SACAipB,EACTjpB,EAAS,UACAmpB,EACTnpB,EAAS,OACAopB,EACTppB,EAAS,UACAupB,EACTvpB,EAAS,OACAupB,IACTvpB,EAAS,WAGJA,GAtKU3R,KAwKnBkI,YAAc,SAACL,GAAmC,IAA7BszB,EAA6BxoB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAlB,EAAGyoB,EAAezoB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAN,EACtC0oB,EAAYxzB,EACVyzB,EAAUD,EAAU/V,OAAO,EAAG6V,GAC9BI,EAAQF,EAAU/V,OAAO+V,EAAUr3B,OAASo3B,GAElD,OADAC,EAAYC,EAAU,MAAQC,GA5Kbv7B,KAgLnBw7B,oBAAsB,SAACC,GACrB,IAAM3c,EAAO5Z,EAAKw2B,kBAIlB,IAAK5c,IAASA,EAAKkX,QAAUlX,EAAK6c,iBAA2D,oBAAjC7c,EAAK6c,gBAAgBC,QAC/E,OAAO,EAMT,GAHAH,EAAU1pB,SAAS0pB,IACGv2B,EAAKuQ,gBAAgB,CAAC,UAAW,oBAAqBgmB,IAG1E,OAAO,EAGT,IAAMrd,EAAS,CAAC,CACdqd,QAAS3c,EAAKkX,MAAM6F,MAAMJ,KAG5B,OAAO3c,EAAK6c,gBAAgBC,QAAQ,CAClCxd,SACA0d,OAAQ,gCAtMO97B,KA0MnB+7B,iBAAmB,SAACN,GAClB,IAAM3c,EAAO5Z,EAAKw2B,kBAIlB,IAAK5c,IAASA,EAAKkX,QAAUlX,EAAK6c,iBAA2D,oBAAjC7c,EAAK6c,gBAAgBC,QAC/E,OAAO,EAGTH,EAAU1pB,SAAS0pB,GACnB,IAAMO,EAAgB92B,EAAKuQ,gBAAgB,CAAC,UAAW,oBAAqBgmB,IAE5E,IAAKO,EACH,OAAO,EAGT,GAAgB,IAAZP,EACF,OAAOv2B,EAAKs2B,oBAAoBC,GAGlC,IAAMQ,EAAYD,EAAcC,WAAaD,EAAc75B,KACrD+5B,EAAiBh3B,EAAKuQ,gBAAgB,CAAC,UAAW,YAAaumB,EAAcvZ,WAC7E0Z,EAAmBj3B,EAAKuQ,gBAAgB,CAAC,UAAW,YAAaumB,EAAc3V,SAAU,UAAWoV,IAEpGrd,EAAS,CAAC,CACd6d,YACAG,QAAS,CAHKF,EAAeG,WAAaH,EAAeG,UAAUZ,IAAcS,EAAeI,IAAIb,GAAWS,EAAer1B,KAI9H40B,QAAS3c,EAAKkX,MAAM6F,MAAMJ,GAC1Bc,eAAgB,CACd54B,SAAU,GACVxB,KAAM65B,EAAcQ,UACpBC,OAAQT,EAAcQ,WAExBE,kBAAmB,CAACP,KAKtB,OAAOrd,EAAK6c,gBAAgBC,QAAQ,CAClCxd,SACA0d,OAAQ,6BAlPO97B,KAqPnBmI,WArPmB,eAAAwI,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAqPN,SAAA6P,EAAOrT,GAAP,IAAAqqB,EAAAgF,EAAA/K,EAAA/R,EAAA+c,EAAAna,EAAAoa,EAAAz0B,EAAA00B,EAAA,OAAA9L,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,UAELsmB,EAAYzyB,EAAK8uB,wBACjB2I,EAAYz3B,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,SAEjD4c,SAAYsK,EAAUI,kBAAkBtI,SAASkD,GALrD,CAAA9W,EAAAxP,KAAA,eAAAwP,EAAAe,OAAA,SAMF,MANE,UASN1c,EAAK83B,aAAa1vB,IAAapI,EAAKjF,MAAM6e,KATpC,CAAA+B,EAAAxP,KAAA,eAAAwP,EAAAe,OAAA,SAUF,MAVE,UAaLgQ,EAbK,cAAAjrB,OAayB2G,KAC9BuS,EAAa3a,EAAK+tB,8BAA8BrB,IAd3C,CAAA/Q,EAAAxP,KAAA,gBAAAwP,EAAAe,OAAA,SAgBF/B,GAhBE,WAmBL+c,EAAM,KACNna,EAAWvd,EAAKjF,MAAM6e,KAAK6c,gBACf,IAAdhE,EArBO,CAAA9W,EAAAxP,KAAA,gBAsBHwrB,EAAM,IAAII,IAAI,CAAExa,WAAUya,WAAYC,wBAAcxF,EAAUlU,cAtB3D5C,EAAAxP,KAAA,GAuBawrB,EAAIO,QAAQ9vB,GAvBzB,aAuBHlF,EAvBGyY,EAAAzM,QAwBMhM,EAAQjG,KAxBd,CAAA0e,EAAAxP,KAAA,gBAAAwP,EAAAxP,KAAA,GAyBoBwrB,EAAI16B,KAAKiG,EAAQjG,MAAMk7B,aAzB3C,aAyBDP,EAzBCjc,EAAAzM,OA0Ba9G,EAAQC,gBAAkBuvB,EAAavvB,cA1BpD,CAAAsT,EAAAxP,KAAA,gBAAAwP,EAAAe,OAAA,SA2BE1c,EAAKguB,8BAA8BtB,EAAexpB,EAAQjG,KAAMy6B,IA3BlE,eAAA/b,EAAAe,OAAA,SAgCJ,MAhCI,yBAAAf,EAAArO,SAAAmO,EAAA3gB,SArPM,gBAAA0hB,GAAA,OAAA/Q,EAAA+B,MAAA1S,KAAA2S,YAAA,GAAA3S,KAuRnBs9B,4BAvRmB39B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAuRW,SAAAqS,IAAA,IAAAoa,EAAAjtB,EAAAktB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1L,EAAAzf,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAoS,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAjS,MAAA,UAAOksB,EAAPnL,EAAApuB,OAAA,QAAA0qB,IAAA0D,EAAA,GAAAA,EAAA,GAA2B,KAAM9hB,EAAjC8hB,EAAApuB,OAAA,QAAA0qB,IAAA0D,EAAA,GAAAA,EAAA,GAA2C,KACjEoL,EAAY,CAChB77B,aAAc,GACdo8B,eAAgB,GAChBC,gBAAiB,GACjBN,OAAQx4B,EAAKwM,MAAM,GACnBisB,aAAcz4B,EAAKwM,MAAM,GACzBksB,cAAe14B,EAAKwM,MAAM,GAC1BmsB,gBAAiB34B,EAAKwM,MAAM,GAC5BosB,kBAAmB54B,EAAKwM,MAAM,IAGhC6rB,EAAoBA,GAAwCr4B,EAAKjF,MAAMs9B,mBACvEjtB,EAAUA,GAAoBpL,EAAKjF,MAAMqQ,UAExBitB,EAfW,CAAAja,EAAAjS,KAAA,eAAAiS,EAAA1B,OAAA,SAgBnB4b,GAhBmB,cAmBtBC,EAAWv4B,EAAKuQ,gBAAgB,CAAC,aAnBX6N,EAAAjS,KAAA,GAqBtBnM,EAAKwL,aAAa/Q,OAAOoE,KAAKw5B,GAA9B,eAAArc,EAAAvhB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAkD,SAAAiD,EAAOkqB,GAAP,IAAAC,EAAA,OAAAlN,EAAA7wB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAChD6sB,EAAiBX,EAAkBU,GADahqB,EAAA5C,KAAA,EAGhDnM,EAAKwL,aAAa/Q,OAAOoE,KAAKm6B,GAA9B,eAAAC,EAAAx+B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+C,SAAAC,EAAOU,GAAP,IAAAtH,EAAA,OAAA6mB,EAAA7wB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC7ClH,EAAc+zB,EAAezsB,GADgBN,EAAAE,KAAA,EAG7CnM,EAAKwL,aAAa/Q,OAAOoE,KAAK05B,GAA9B,eAAAW,EAAAz+B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAyC,SAAAsQ,EAAOid,GAAP,IAAAC,EAAAC,EAAA7M,EAAAI,EAAA0M,EAAAC,EAAAC,EAAAX,EAAAY,EAAA3a,EAAAC,EAAA2a,EAAAC,EAAAC,EAAA1L,EAAA2L,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApO,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cACvCitB,EAAgBn0B,EAAYk0B,IAE9BE,EAAcr5B,EAAKuQ,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,kBAAkBhE,MAChE8sB,EAAYc,cAAgBd,EAAYc,aAAa5tB,MAAMlE,gBAAkB+wB,EAAc7sB,MAAMlE,gBAClHgxB,EAAc,MAL6Bhd,EAAAlQ,KAAA,EAcnC4P,QAAQqD,IAAI,CACpBpf,EAAKo6B,mBAAmBhB,EAAcn8B,KAAKmO,GAC3CpL,EAAKq6B,mBAAmBp1B,EAAam0B,EAAehuB,GACpDiuB,EAAcr5B,EAAKo6B,mBAAmBf,EAAYp8B,KAAMmO,GAAWpL,EAAKwM,MAAM,GAC9ExM,EAAKs6B,yBAAyBlvB,EAAQguB,EAAcA,EAAcmB,UAAUC,SAC5Ex6B,EAAKy6B,wBAAwBrB,EAAcsB,WAAWz9B,KAAKmO,EAAQ,KAAKguB,EAAcmB,UAAUI,iBAnBrD,UAAAnO,EAAAnQ,EAAAnN,KAAA0d,EAAAnyB,OAAA6yB,EAAA,EAAA7yB,CAAA+xB,EAAA,GAS3C8M,EAT2C1M,EAAA,GAU3C2M,EAV2C3M,EAAA,GAW3C4M,EAX2C5M,EAAA,GAY3CiM,EAZ2CjM,EAAA,GAa3C6M,EAb2C7M,EAAA,GAsBzC2M,GAAmBA,EAAgB98B,eACrC67B,EAAU77B,aAAVhC,OAAAmgC,EAAA,EAAAngC,CAA6B69B,EAAU77B,cAAvCgF,OAAAhH,OAAAmgC,EAAA,EAAAngC,CAAwD8+B,EAAgB98B,gBAI1EhC,OAAOoE,KAAKg6B,GAAgB95B,QAAS,SAAA87B,GAC9BvC,EAAUO,eAAegC,KAC5BvC,EAAUO,eAAegC,GAAe,CACtC9tB,YAAY/M,EAAKwM,MAAM,GACvBkE,eAAe1Q,EAAKwM,MAAM,GAC1BsuB,qBAAqB96B,EAAKwM,MAAM,KAGpC,IAAMO,EAAe/M,EAAKwM,MAAMqsB,EAAegC,IAAcz8B,QAAoD4B,EAAKwM,MAAM,GAArDxM,EAAKwM,MAAMqsB,EAAegC,IACjGvC,EAAUO,eAAegC,GAAa9tB,YAAcurB,EAAUO,eAAegC,GAAa9tB,YAAYC,KAAKD,OAKxGusB,GAAuBt5B,EAAKwM,MAAM8sB,GAAqBlpB,GAAG,IAAQqpB,GAAwBz5B,EAAKwM,MAAMitB,GAAsBrpB,GAAG,IAAQopB,GAAsBx5B,EAAKwM,MAAMgtB,GAAoBppB,GAAG,IAzCtJ,CAAAiM,EAAAlQ,KAAA,YA0C3CqtB,EAAqBx5B,EAAKgQ,iBAAiBwpB,EAAmBJ,EAAc36B,UAC5E66B,EAAsBt5B,EAAKgQ,iBAAiBspB,EAAoBF,EAAc36B,UAC9Eg7B,EAAuBz5B,EAAKgQ,iBAAiBypB,EAAqBL,EAAc36B,UAAUuO,KAAKwsB,GAC/FF,EAAsBA,EAAoBtsB,KAAKysB,IAI3Cz5B,EAAKwM,MAAM8sB,GAAqBlpB,GAAG,GAjDI,CAAAiM,EAAAlQ,KAAA,gBAAAkQ,EAAAlQ,KAAA,GAqD/B4P,QAAQqD,IAAI,CACpBpf,EAAK+6B,oBAAoB,eAAgB,GAAIhC,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,GACnGpL,EAAK+6B,oBAAoB,uBAAwB,GAAIhC,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,KAvDpE,WAAA0T,EAAAzC,EAAAnN,KAAA6P,EAAAtkB,OAAA6yB,EAAA,EAAA7yB,CAAAqkB,EAAA,GAmDvC4a,EAnDuC3a,EAAA,GAoDvC4a,EApDuC5a,EAAA,GA0DpC/e,EAAKwM,MAAMktB,GAAct7B,SAAY4B,EAAKwM,MAAMmtB,GAAav7B,QA1DzB,CAAAie,EAAAlQ,KAAA,gBA2DjCytB,EAAeN,EAAoB9wB,MAAMkxB,GA3DRrd,EAAAlQ,KAAA,GAgE7B4P,QAAQqD,IAAI,CACpBpf,EAAKg7B,2BAA2BpB,EAAa30B,GAC7CjF,EAAKg7B,2BAA2BpB,EAAa3sB,MAAMssB,EAAgBW,iBAAiBj1B,GACpFjF,EAAK+6B,oBAAoB,aAAc,GAAIhC,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,KAnE5D,QAAA8iB,EAAA7R,EAAAnN,KAAA2qB,EAAAp/B,OAAA6yB,EAAA,EAAA7yB,CAAAyzB,EAAA,GA6DrC4L,EA7DqCD,EAAA,GA8DrCE,EA9DqCF,EAAA,GA+DrCG,EA/DqCH,EAAA,GAsEjCI,EAAYH,EAAsBxb,IAAIqb,GACtCO,EAAkBX,EAAgB0B,yBAIxC3C,EAAUQ,gBAAgBpwB,KAAK,CAC7B6D,QACA4sB,UACAJ,WACAkB,YACAD,aACAN,eACAK,kBACAG,kBACAZ,sBACAG,uBACAG,aAAaE,IAMfxB,EAAUG,aAAeH,EAAUG,aAAazrB,KAAK8sB,GA5Fd,yBAAAzd,EAAA/O,SAAA4O,EAAAphB,SAAzC,gBAAAqU,GAAA,OAAA+pB,EAAA1rB,MAAA1S,KAAA2S,YAAA,IAH6C,wBAAAxB,EAAAqB,SAAAzB,EAAA/Q,SAA/C,gBAAAyS,GAAA,OAAA0rB,EAAAzrB,MAAA1S,KAAA2S,YAAA,IAHgD,wBAAAsB,EAAAzB,SAAAuB,EAAA/T,SAAlD,gBAAA2hB,GAAA,OAAAT,EAAAxO,MAAA1S,KAAA2S,YAAA,IArBsB,eA+HxB+qB,EAASx4B,EAAKwM,MAAM,GACpBisB,EAAez4B,EAAKwM,MAAM,GAC1BksB,EAAgB14B,EAAKwM,MAAM,GAC3BmsB,EAAkB34B,EAAKwM,MAAM,GAC7BosB,EAAoB54B,EAAKwM,MAAM,GAGnC8rB,EAAUQ,gBAAgB/5B,QAAQ,SAAAm8B,GAChC,IAAMlB,EAAah6B,EAAKwM,MAAM0uB,EAAYlB,YACpCmB,EAAgBD,EAAYtB,aAAatb,IAAIga,EAAUG,cAG7DyC,EAAYC,cAAgBA,EAExBD,EAAYnB,kBACdrB,EAAgBA,EAAc1rB,KAAKkuB,EAAYnB,kBAG7CC,IACFxB,EAASA,EAAOxrB,KAAKgtB,EAAWxxB,MAAM2yB,KAGpCD,EAAYhB,kBACdvB,EAAkBA,EAAgB3rB,KAAKkuB,EAAYhB,kBAIjDgB,EAAYtB,eACdnB,EAAeA,EAAazrB,KAAKkuB,EAAYtB,iBAI7CjB,EAAgBvoB,GAAG,KACrBwoB,EAAoBF,EAAcpa,IAAIqa,GAAiBnwB,MAAM,MAhKnC4V,EAAAjS,KAAA,GAoKtBnM,EAAKwL,aAAa/Q,OAAOoE,KAAKy5B,EAAUO,gBAAxC,eAAA9J,EAAAt0B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAyD,SAAAqR,EAAO4d,GAAP,IAAAO,EAAAC,EAAA,OAAAvP,EAAA7wB,EAAA+Q,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,YACvDivB,EAAoBp7B,EAAKuQ,gBAAgB,CAAC,YAAYsqB,KACtChgB,cAAeyd,EAAUO,eAAegC,GAAa9tB,YAAYqD,GAAG,GAF7B,CAAA+M,EAAAhR,KAAA,eAAAgR,EAAAhR,KAAA,EAGnBnM,EAAKs7B,8BAA8BF,GAHhB,OAGrDC,EAHqDle,EAAAjO,KAI3DopB,EAAUO,eAAegC,GAAanqB,eAAiB2qB,EACvD/C,EAAUO,eAAegC,GAAaC,qBAAuBxC,EAAUO,eAAegC,GAAa9tB,YAAYvE,MAAM6yB,GAIrH5C,EAAeA,EAAazrB,KAAKsrB,EAAUO,eAAegC,GAAaC,sBATZ,wBAAA3d,EAAA7P,SAAA2P,EAAAniB,SAAzD,gBAAAmzB,GAAA,OAAAc,EAAAvhB,MAAA1S,KAAA2S,YAAA,IApKsB,eAiL5B6qB,EAAUE,OAASA,EACnBF,EAAUG,aAAeA,EACzBH,EAAUI,cAAgBA,EAC1BJ,EAAUK,gBAAkBA,EAC5BL,EAAUM,kBAAoBA,EArLFxa,EAAA1B,OAAA,SAyLrB4b,GAzLqB,yBAAAla,EAAA9Q,SAAA2Q,EAAAnjB,SAvRXA,KAkdnBygC,oBAldmB9gC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAkdG,SAAAojB,IAAA,IAAA9jB,EAAAE,EAAAktB,EAAA5pB,EAAA8sB,EAAAC,EAAAjD,EAAAE,EAAAC,EAAAC,EAAA8C,EAAAjuB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAsjB,GAAA,cAAAA,EAAApjB,KAAAojB,EAAAnjB,MAAA,UAAOjB,EAAPwwB,EAAA58B,OAAA,QAAA0qB,IAAAkS,EAAA,GAAAA,EAAA,GAAyB,KAAMtwB,EAA/BswB,EAAA58B,OAAA,QAAA0qB,IAAAkS,EAAA,GAAAA,EAAA,GAAyC,KACvDpD,EAAY,CAChBhtB,cAAe,GACfqwB,gBAAiB,GACjBnD,OAAQx4B,EAAKwM,MAAM,GACnBisB,aAAcz4B,EAAKwM,MAAM,GACzBksB,cAAe14B,EAAKwM,MAAM,GAC1BmsB,gBAAiB34B,EAAKwM,MAAM,GAC5BosB,kBAAmB54B,EAAKwM,MAAM,GAC9BovB,sBAAuB57B,EAAKwM,MAAM,IAGpCtB,EAAkBA,GAAoClL,EAAKjF,MAAMmQ,iBACjEE,EAAUA,GAAoBpL,EAAKjF,MAAMqQ,UAExBF,EAfG,CAAAokB,EAAAnjB,KAAA,eAAAmjB,EAAA5S,OAAA,SAgBX4b,GAhBW,cAmBd5pB,EAAyC,SAAhC1O,EAAKjF,MAAM4T,iBAnBN2gB,EAAAnjB,KAAA,GAqBdnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAgkB,EAAAz0B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAA+S,EAAOpS,GAAP,IAAAtH,EAAA42B,EAAA7L,EAAA8L,EAAAC,EAAAC,EAAA5sB,EAAA6sB,EAAA7uB,EAAAwsB,EAAAE,EAAA,OAAAhO,EAAA7wB,EAAA+Q,KAAA,SAAAgT,GAAA,cAAAA,EAAA9S,KAAA8S,EAAA7S,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgByS,EAAA7S,KAAA,EAQ1C4P,QAAQqD,IAAI,CACpBpf,EAAKk8B,eAAej3B,EAAajF,EAAKjF,MAAMqQ,SAC5CpL,EAAK+rB,gBAAgB9mB,EAAYmoB,KAAK7gB,MAAOnB,KAVK,UAAAywB,EAAA7c,EAAA9P,KAAA8gB,EAAAv1B,OAAA6yB,EAAA,EAAA7yB,CAAAohC,EAAA,GAAAC,EAAA9L,EAAA,GAIhD+L,EAJgDD,EAIhDC,iBACAC,EALgDF,EAKhDE,4BAEF5sB,EAPkD4gB,EAAA,GAahD+L,IACIE,EAAWj8B,EAAKjF,MAAM4T,iBAAmBpC,EAAQtH,EAAYmoB,KAAK7gB,MACxE+rB,EAAUqD,gBAAgBM,GAAY,CACpC1vB,QACAtH,cACA+2B,8BACAG,SAAUn8B,EAAKjF,MAAM4T,oBAIrBS,EAvBgD,CAAA4P,EAAA7S,KAAA,gBAAA6S,EAAA7S,KAAA,GAwBzBnM,EAAKo8B,kBAAkBn3B,GAxBE,eAwB5CmI,EAxB4C4R,EAAA9P,KAyB5C0qB,EAAexqB,EAAiB5G,MAAM4E,GAzBM4R,EAAA7S,KAAA,GA0BdnM,EAAK0tB,oBAAoBkM,EAAcrtB,EAAOtH,EAAayJ,GA1B7C,QA0B5CorB,EA1B4C9a,EAAA9P,KA4B7C9B,EAAWhP,SAAYw7B,EAAax7B,UACvCk6B,EAAUhtB,cAAciB,GAAS,CAC/Ba,aACAwsB,eACAxqB,mBACA0qB,yBAIFxB,EAAUG,aAAeH,EAAUG,aAAazrB,KAAK4sB,GACrDtB,EAAUsD,sBAAwBtD,EAAUsD,sBAAsB5uB,KAAK8sB,IAtCvB,yBAAA9a,EAAA1R,SAAAqR,EAAA7jB,SAAhD,gBAAAuzB,GAAA,OAAAa,EAAA1hB,MAAA1S,KAAA2S,YAAA,IArBc,eAgEd+tB,EAAuB,GAC7B/gC,OAAOoE,KAAKqM,GAAiBnM,QAAQ,SAAAwN,GAC/B+rB,EAAUhtB,cAAciB,KAC1BivB,EAAqBjvB,GAAS+rB,EAAUhtB,cAAciB,MAI1D+rB,EAAUhtB,cAAgBkwB,EAEpBC,EAAkBhhC,OAAOoE,KAAKy5B,EAAUhtB,eAAee,OAAO,SAAAE,GAAK,OAAKvM,EAAKwM,MAAM8rB,EAAUhtB,cAAciB,GAAO6C,kBAAkBgB,GAAG,KAEzIooB,EAASx4B,EAAKwM,MAAM,GACpBksB,EAAgB14B,EAAKwM,MAAM,GAC3BmsB,EAAkB34B,EAAKwM,MAAM,GAC7BosB,EAAoB54B,EAAKwM,MAAM,GA9Ef8iB,EAAAnjB,KAAA,GAiFdnM,EAAKwL,aAAaiwB,EAAlB,eAAAvL,EAAAz1B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAmC,SAAA2T,EAAOhT,GAAP,IAAAtH,EAAAkrB,EAAAkM,EAAAC,EAAApC,EAAAJ,EAAAyC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5Q,EAAA7wB,EAAA+Q,KAAA,SAAAwT,GAAA,cAAAA,EAAAtT,KAAAsT,EAAArT,MAAA,cACjClH,EAAciG,EAAgBqB,GADGiT,EAAArT,KAAA,EAK7B4P,QAAQqD,IAAI,CACpBpf,EAAK28B,aAAa13B,GAClBjF,EAAK48B,mBAAmB33B,EAAamG,KAPA,cAAA+kB,EAAA3Q,EAAAtQ,KAAAmtB,EAAA5hC,OAAA6yB,EAAA,EAAA7yB,CAAA01B,EAAA,GAGrCmM,EAHqCD,EAAA,GAIrCnC,EAJqCmC,EAAA,GAUjCvC,EAAwBxB,EAAUhtB,cAAciB,GAAOutB,sBAEvDyC,EAAWv8B,EAAKwM,MAAM8vB,EAAUO,QAChCL,EAAc1C,EAAsBxb,IAAIga,EAAUsD,uBAbjBpc,EAAArT,KAAA,GAcTnM,EAAK0tB,oBAAoBwM,EAAiB3tB,EAAOtH,EAAayJ,GAdrD,QAcjC+tB,EAdiCjd,EAAAtQ,MAejCwtB,EAAgB5C,EAAsB7sB,MAAMwvB,MAGhD/D,EAAgBA,EAAc1rB,KAAK0vB,IAGjCH,IACF/D,EAASA,EAAOxrB,KAAKuvB,EAAS/zB,MAAMg0B,KAGlCC,IACF9D,EAAkBA,EAAgB3rB,KAAKyvB,IA1BF,yBAAAjd,EAAAlS,SAAAiS,EAAAzkB,SAAnC,gBAAA20B,GAAA,OAAAS,EAAA1iB,MAAA1S,KAAA2S,YAAA,IAjFc,eAiHhBkrB,EAAgBvoB,GAAG,KACrBwoB,EAAoBF,EAAcpa,IAAIqa,GAAiBnwB,MAAM,MAG/D8vB,EAAUE,OAASA,EACnBF,EAAUI,cAAgBA,EAC1BJ,EAAUK,gBAAkBA,EAC5BL,EAAUM,kBAAoBA,EAC9BN,EAAUG,aAAeE,EAAgB3rB,KAAK0rB,GAzH1BpJ,EAAA5S,OAAA,SA6Hb4b,GA7Ha,yBAAAhJ,EAAAhiB,SAAA0hB,EAAAl0B,SAldHA,KAilBnB07B,gBAAkB,WAChB,IAAIsG,EAAc,KAOlB,OANIrd,OAAOsd,SACTD,EAAc,IAAIE,IAAKvd,OAAOsd,UACrBtd,OAAO7F,OAChBkjB,EAAc,IAAIE,IAAKvd,OAAO7F,OAGzBkjB,GAzlBUhiC,KA2lBnBmiC,eAAiB,WACf,IAAMC,EAAkBl9B,EAAKsd,qBACvBwZ,EAAgB92B,EAAKuQ,gBAAgB,CAAC,UAAW,oBAAqB2sB,EAAgBh9B,KACtFqd,EAAWuZ,EAAgBA,EAAcvZ,SAAW,SACpD4f,EAAan9B,EAAKuQ,gBAAgB,CAAC,UAAW,YAAagN,EAAU,QACrE6f,EAAUp9B,EAAKuQ,gBAAgB,CAAC,UAAW,YAAagN,EAAU,MAAO2f,EAAgBh9B,KAAOi9B,EAElGL,EAAc98B,EAAKjF,MAAM6e,KAY7B,OAVKkjB,IAEDA,EADErd,OAAOsd,SACK,IAAIC,IAAKvd,OAAOsd,UACrBtd,OAAO7F,KACF,IAAIojB,IAAKvd,OAAO7F,MAEhB,IAAIojB,IAAK,IAAIA,IAAKK,UAAUC,aAAaF,KAIpDN,GA9mBUhiC,KAgnBnByiC,oBAhnBmB9iC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAgnBG,SAAA2iB,IAAA,IAAA1jB,EAAAO,EAAAF,EAAAsyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlP,EAAAlhB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA4iB,GAAA,cAAAA,EAAA1iB,KAAA0iB,EAAAziB,MAAA,UAAOtB,EAAP8jB,EAAA7vB,OAAA,QAAA0qB,IAAAmF,EAAA,GAAAA,EAAA,GAAuB,GAAIvjB,EAA3BujB,EAAA7vB,OAAA,QAAA0qB,IAAAmF,EAAA,GAAAA,EAAA,GAAqC,OAArCA,EAAA7vB,OAAA,QAAA0qB,IAAAmF,EAAA,KAAAA,EAAA,GACpBvjB,EAAUA,GAAoBpL,EAAKjF,MAAMqQ,QADrB,CAAAwjB,EAAAziB,KAAA,eAAAyiB,EAAAlS,OAAA,SAIX,IAJW,cAOdxR,EAAkBlL,EAAK89B,0BAExBjzB,GAAkBA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAKqM,IAG1BsyB,EAAe,GACbC,EAAkB,GACpBC,EAAqB19B,EAAKwM,MAAM,GAfhBoiB,EAAAziB,KAAA,GAgBGnM,EAAK+9B,YAAY3yB,EAAS,EAAG,SAAUP,GAhB1C,eAgBd8yB,EAhBc/O,EAAA1f,OAkBJyuB,EAAS7+B,QAEvB6+B,EAAS5+B,QAAQ,SAACuN,EAAIzL,GAGpB,IAAKyL,EAAG3J,OAAS2J,EAAG0xB,cAAgB1xB,EAAG2xB,gBACrC,OAAO,EAGT,IAAMlxB,EAAc/M,EAAKwM,MAAMF,EAAGS,aAC9BixB,EAAch+B,EAAKwM,MAAMF,EAAG0xB,aAC1BC,EAAkBj+B,EAAKwM,MAAMF,EAAG2xB,iBAEtC,OAAQ3xB,EAAGG,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdH,EAAGG,QACD5L,EAAQ,GAAK68B,EAAmBttB,GAAG,GACrC,OAICotB,EAAalxB,EAAG3J,QACnB66B,EAAalxB,EAAG3J,MAAQ,CACtBu7B,MAAO,KACPC,SAAU,KACVC,SAAU,KACVC,UAAWr+B,EAAKwM,MAAM,KAI1BgxB,EAAalxB,EAAG3J,MAAM07B,UAAYb,EAAalxB,EAAG3J,MAAM07B,UAAUrxB,KAAKD,GAChC,OAAnCywB,EAAalxB,EAAG3J,MAAMw7B,WACxBX,EAAalxB,EAAG3J,MAAMu7B,MAAQD,EAC9BT,EAAalxB,EAAG3J,MAAMw7B,SAAWH,EAAYx1B,MAAMy1B,IAIrD,MACF,IAAK,WACL,IAAK,cACL,IAAK,kBACHD,EAAcA,EAAYx1B,MAAMxI,EAAKwM,OAAO,IAO3CixB,EAAgBnxB,EAAG3J,SACtB+6B,EAAqBA,EAAmB1wB,KAAKgxB,IACtBvQ,IAAI,KACzBiQ,EAAqB19B,EAAKwM,MAAM,IAKlCixB,EAAgBnxB,EAAG3J,OAAQ,KAO7Bi7B,EAAc59B,EAAKwM,MAAM,GACzBqxB,EAAiB79B,EAAKwM,MAAM,GAChC/R,OAAO2R,OAAOoxB,GAAcz+B,QAAQ,SAAAuN,GAClC,IAAM8xB,EAAW9xB,EAAG6xB,SAAS7f,IAAIhS,EAAG+xB,WAAWpxB,MAAM,GACrD2wB,EAAcA,EAAY5wB,KAAKoxB,EAAS51B,MAAM8D,EAAG+xB,YACjDR,EAAiBA,EAAe7wB,KAAKV,EAAG+xB,aAG1CT,EAAcA,EAAYtf,IAAIuf,GAAgBr1B,OAAO,GA5FjComB,EAAAlS,OAAA,SAiGbkhB,GAjGa,yBAAAhP,EAAAthB,SAAAihB,EAAAzzB,SAhnBHA,KAmtBnBwjC,oBAntBmB7jC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAmtBG,SAAAqkB,IAAA,IAAAplB,EAAAO,EAAAF,EAAAsyB,EAAAe,EAAAb,EAAAC,EAAAa,EAAA/wB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAqkB,GAAA,cAAAA,EAAAnkB,KAAAmkB,EAAAlkB,MAAA,UAAOtB,EAAP2zB,EAAA1/B,OAAA,QAAA0qB,IAAAgV,EAAA,GAAAA,EAAA,GAAuB,GAC3CpzB,GAD+CA,EAA3BozB,EAAA1/B,OAAA,QAAA0qB,IAAAgV,EAAA,GAAAA,EAAA,GAAqC,OAC3Bx+B,EAAKjF,MAAMqQ,QADrB,CAAAilB,EAAAlkB,KAAA,eAAAkkB,EAAA3T,OAAA,SAIX,IAJW,cAOdxR,EAAkBlL,EAAK89B,0BAExBjzB,GAAkBA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAKqM,IAGxBsyB,EAAe,GACjBe,EAAcv+B,EAAKwM,MAAM,GACzBkxB,EAAqB19B,EAAKwM,MAAM,GAfhB6jB,EAAAlkB,KAAA,GAgBGnM,EAAK+9B,YAAY3yB,EAAS,EAAG,SAAUP,GAhB1C,eAgBd8yB,EAhBctN,EAAAnhB,OAoBJyuB,EAAS7+B,QAEvB6+B,EAAS5+B,QAAQ,SAACuN,EAAIzL,GAMpB,GAJK28B,EAAalxB,EAAG3J,QACnB66B,EAAalxB,EAAG3J,MAAQ,KAGtB66B,EAAalxB,EAAG3J,MAAM4sB,SAASjjB,EAAGG,QAAtC,CAKA,IAAKH,EAAG3J,OAAS2J,EAAG0xB,cAAgB1xB,EAAG2xB,gBACrC,OAAO,EAGT,IAAMQ,EAAkBF,EACpBP,EAAch+B,EAAKwM,MAAMF,EAAG0xB,aAC1BC,EAAkBj+B,EAAKwM,MAAMF,EAAG2xB,iBAGtC,OAAQ3xB,EAAGG,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdH,EAAGG,QACD5L,EAAQ,GAAK68B,EAAmBttB,GAAG,GACrC,OAGJmuB,EAAcP,EAAYx1B,MAAMy1B,GAAiBjxB,KAAKyxB,EAAgBj2B,MAAMk1B,IAAqBpf,IAAIof,EAAmB1wB,KAAKgxB,IAC7H,MACF,IAAK,WACL,IAAK,cACL,IAAK,kBAEHA,EAAcA,EAAYx1B,MAAMxI,EAAKwM,OAAO,KAOhDkxB,EAAqBA,EAAmB1wB,KAAKgxB,IACtBvQ,IAAI,KACzB8Q,EAAcv+B,EAAKwM,MAAM,GACzBkxB,EAAqB19B,EAAKwM,MAAM,IAGlCgxB,EAAalxB,EAAG3J,MAAM+F,KAAK4D,EAAGG,WAvEd4jB,EAAA3T,OAAA,SA+Eb6hB,GA/Ea,yBAAAlO,EAAA/iB,SAAA2iB,EAAAn1B,SAntBHA,KAoyBnB4jC,eApyBmBjkC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAoyBF,SAAAikB,IAAA,IAAAhlB,EAAAO,EAAAuf,EAAAtf,EAAAykB,EAAAriB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA+jB,GAAA,cAAAA,EAAA7jB,KAAA6jB,EAAA5jB,MAAA,UAAOtB,EAAPilB,EAAAhxB,OAAA,QAAA0qB,IAAAsG,EAAA,GAAAA,EAAA,GAAuB,IACtC1kB,GAD0CA,EAA3B0kB,EAAAhxB,OAAA,EAAAgxB,EAAA,QAAAtG,IACexpB,EAAKjF,MAAMqQ,UAExBP,GAAkBA,EAAc/L,QAAWkB,EAAKjF,MAAMmQ,gBAHxD,CAAA6kB,EAAA5jB,KAAA,eAAA4jB,EAAArT,OAAA,SAIN,IAJM,cAOTiO,EAAS,GAPAoF,EAAA5jB,KAAA,EAQYnM,EAAKmL,gBAAgBC,EAAS,EAAG,SAAUP,GARvD,cAQTQ,EARS0kB,EAAA7gB,KAUfrE,EAAc9L,QAAQ,SAAAgG,GAEpB4lB,EAAO5lB,GAAiB,GACxB,IAAIw5B,EAAcv+B,EAAKwM,MAAM,GAEzBmyB,EAAoB3+B,EAAKwM,MAAM,GAC7BV,EAAcrR,OAAO2R,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,IAEvE+G,GAAeA,EAAYhN,QAE7BgN,EAAY/M,QAAQ,SAACuN,EAAIzL,GAGvB,IAAKyL,EAAG3J,MAAS2J,EAAGI,QAAwB,YAAdJ,EAAGI,SAA0BJ,EAAGe,aAAef,EAAGc,WAC9E,OAAO,EAGT,IAAMqxB,EAAkBF,EACpBlxB,EAAarN,EAAKwM,MAAMF,EAAGe,YACzBD,EAAapN,EAAKwM,MAAMF,EAAGc,YAGjC,OAAQd,EAAGG,QACT,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,WACH8xB,EAAclxB,EAAW7E,MAAM4E,GAAYJ,KAAKyxB,EAAgBj2B,MAAMm2B,IAAoBrgB,IAAIqgB,EAAkB3xB,KAAKK,IACrH,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHA,EAAaA,EAAW7E,MAAMxI,EAAKwM,OAAO,KAO9CmyB,EAAoBA,EAAkB3xB,KAAKK,IACrBogB,IAAI,KACxB8Q,EAAcv+B,EAAKwM,MAAM,GACzBmyB,EAAoB3+B,EAAKwM,MAAM,MAOrCme,EAAO5lB,GAAiBw5B,IA9DXxO,EAAArT,OAAA,SAiERiO,GAjEQ,yBAAAoF,EAAAziB,SAAAuiB,EAAA/0B,SApyBEA,KAu2BnB8jC,kBAv2BmBnkC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAu2BC,SAAAizB,IAAA,IAAAh0B,EAAAO,EAAAC,EAAAyzB,EAAAC,EAAAtxB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAgzB,GAAA,cAAAA,EAAA9yB,KAAA8yB,EAAA7yB,MAAA,UAAOtB,EAAPk0B,EAAAjgC,OAAA,QAAA0qB,IAAAuV,EAAA,GAAAA,EAAA,GAAuB,IACzC3zB,GAD6CA,EAA3B2zB,EAAAjgC,OAAA,EAAAigC,EAAA,QAAAvV,IACYxpB,EAAKjF,MAAMqQ,UAExBP,GAAkBA,EAAc/L,QAAWkB,EAAKjF,MAAMmQ,gBAHrD,CAAA8zB,EAAA7yB,KAAA,eAAA6yB,EAAAtiB,OAAA,SAIT,IAJS,cAAAsiB,EAAA7yB,KAAA,EAOSnM,EAAKmL,gBAAgBC,EAAS,EAAG,SAAUP,GAPpD,cAOZQ,EAPY2zB,EAAA9vB,KASZ4vB,EAAW,GAEjBj0B,EAAc9L,QAAQ,SAACgG,GACrB,IAAIgH,EAAa/L,EAAKwM,MAAM,GACxByyB,EAAiB,KACrBH,EAAS/5B,GAAiBk6B,EAE1B,IAAMnzB,EAAcrR,OAAO2R,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,IACvE+G,GAAeA,EAAYhN,QAE7BgN,EAAY/M,QAAQ,SAACuN,EAAIzL,GAEvB,IAAKyL,EAAG3J,MAAS2J,EAAGI,QAAwB,YAAdJ,EAAGI,SAA0BJ,EAAGS,YAC5D,OAAO,EAGT,OAAQT,EAAGG,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACHV,EAAaA,EAAWiB,KAAKV,EAAGS,aAC3BkyB,IACHA,EAAiB3yB,GAEnB,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHP,EAAaA,EAAWkB,MAAMX,EAAGS,aAOjChB,EAAWmB,GAAG,KAChBnB,EAAa/L,EAAKwM,MAAM,GACxByyB,EAAiB,QAMvBH,EAAS/5B,GAAiBk6B,IAtDVD,EAAAtiB,OAAA,SAyDXoiB,GAzDW,yBAAAE,EAAA1xB,SAAAuxB,EAAA/jC,SAv2BDA,KAk6BnBokC,uBAAyB,SAACC,GAAwB,IAAfC,EAAe3xB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KACjC4xB,EAASr/B,EAAKuQ,gBAAgB,CAAC,eAAgB6uB,EAAK,QACpDE,EAAUF,GAAOC,EAASA,EAAS5f,OAAOmV,SAAS2K,OACzD,SAAA99B,OAAU69B,EAAV,MAAA79B,OAAsBzB,EAAKuQ,gBAAgB,CAAC,YAAa,cAAzD,KAAA9O,OAA0E09B,IAr6BzDrkC,KAu6BnB0kC,aAAe,SAACC,GACd,OAAO,IAAI1jB,QAAQ,SAAAI,GAAO,OAAIqC,WAAWrC,EAASsjB,MAx6BjC3kC,KA06BnB4kC,oBA16BmBjlC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA06BG,SAAA+zB,IAAA,IAAA90B,EAAAO,EAAAw0B,EAAAC,EAAApyB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA8zB,GAAA,cAAAA,EAAA5zB,KAAA4zB,EAAA3zB,MAAA,cAAOtB,EAAPg1B,EAAA/gC,OAAA,QAAA0qB,IAAAqW,EAAA,GAAAA,EAAA,GAAuB,GAAIz0B,EAA3By0B,EAAA/gC,OAAA,EAAA+gC,EAAA,QAAArW,EAAAsW,EAAA3zB,KAAA,EACUnM,EAAK4+B,kBAAkB/zB,EAAeO,GADhD,YACdw0B,EADcE,EAAA5wB,MAAA,CAAA4wB,EAAA3zB,KAAA,eAAA2zB,EAAApjB,OAAA,SAGXjiB,OAAOoE,KAAK+gC,GAAiBG,OAAO,SAACC,EAAKzzB,GAI/C,OAHIqzB,EAAgBrzB,KAClByzB,EAAIzzB,GAASqzB,EAAgBrzB,GAAOO,WAE/BkzB,GACN,KARe,cAAAF,EAAApjB,OAAA,SAUb,MAVa,wBAAAojB,EAAAxyB,SAAAqyB,EAAA7kC,SA16BHA,KAu7BnBmlC,sCAv7BmB,eAAAC,EAAAzlC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAu7BqB,SAAAu0B,EAAOl7B,EAAYm0B,GAAnB,IAAAgH,EAAAvH,EAAA,OAAA/M,EAAA7wB,EAAA+Q,KAAA,SAAAq0B,GAAA,cAAAA,EAAAn0B,KAAAm0B,EAAAl0B,MAAA,cAChCi0B,EAAuB,GADSC,EAAAl0B,KAAA,EAETnM,EAAK+6B,oBAAoB,iBAAiB,GAAG91B,EAAY8zB,SAAS9zB,EAAYsH,MAAM6sB,EAAcD,QAAQl0B,EAAYm0B,GAF7G,cAEhCP,EAFgCwH,EAAAnxB,KAAAmxB,EAAAl0B,KAAA,EAGhCnM,EAAKwL,aAAa/Q,OAAOoE,KAAKg6B,GAA9B,eAAAyH,EAAA7lC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA8C,SAAA20B,EAAOh0B,GAAP,IAAAi0B,EAAAC,EAAA,OAAA3U,EAAA7wB,EAAA+Q,KAAA,SAAA00B,GAAA,cAAAA,EAAAx0B,KAAAw0B,EAAAv0B,MAAA,cAC5Cq0B,EAAe,CACnBh5B,KAAMvC,EAAY07B,IAAIv4B,QACtB2rB,GAAIqF,EAAcsB,WAAWtyB,SAHmBs4B,EAAAv0B,KAAA,EAK1BnM,EAAK4gC,kBAAkBr0B,EAAO,WAAWtH,EAAYoZ,YAAY,SAAU,CAAChS,OAAQm0B,IAL1D,QAK5CC,EAL4CC,EAAAxxB,OAOjCuxB,EAAU3hC,OAAO,IAChCshC,EAAqB7zB,GAASk0B,GARkB,wBAAAC,EAAApzB,SAAAizB,EAAAzlC,SAA9C,gBAAA+lC,GAAA,OAAAP,EAAA9yB,MAAA1S,KAAA2S,YAAA,IAHgC,cAAA4yB,EAAA3jB,OAAA,SAe/B0jB,GAf+B,wBAAAC,EAAA/yB,SAAA6yB,EAAArlC,SAv7BrB,gBAAAw1B,EAAAwQ,GAAA,OAAAZ,EAAA1yB,MAAA1S,KAAA2S,YAAA,GAAA3S,KAw8BnBimC,mBAx8BmB,eAAAC,EAAAvmC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAw8BE,SAAAq1B,EAAOh8B,EAAYm0B,GAAnB,IAAA8H,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxV,EAAA7wB,EAAA+Q,KAAA,SAAAu1B,GAAA,cAAAA,EAAAr1B,KAAAq1B,EAAAp1B,MAAA,cAAAo1B,EAAAp1B,KAAA,EAIT4P,QAAQqD,IAAI,CACpBpf,EAAKigC,sCAAsCh7B,EAAYm0B,GACvDp5B,EAAK+6B,oBAAoB,cAAc,GAAG91B,EAAY8zB,SAAS9zB,EAAYsH,MAAM6sB,EAAcD,QAAQl0B,EAAYm0B,KANlG,cAAA8H,EAAAK,EAAAryB,KAAAiyB,EAAA1mC,OAAA6yB,EAAA,EAAA7yB,CAAAymC,EAAA,GAEjBE,EAFiBD,EAAA,GAGjBE,EAHiBF,EAAA,GASbG,EAAeF,GAA+B,GATjCG,EAAAp1B,KAAA,EAWbnM,EAAKwL,aAAa/Q,OAAOoE,KAAKwiC,GAA9B,eAAAG,EAAA/mC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA2C,SAAA61B,EAAOl1B,GAAP,IAAAi0B,EAAAC,EAAA,OAAA3U,EAAA7wB,EAAA+Q,KAAA,SAAA01B,GAAA,cAAAA,EAAAx1B,KAAAw1B,EAAAv1B,MAAA,cACzCq0B,EAAe,CACnBzM,GAAI9uB,EAAY07B,IAAIv4B,SAFyBs5B,EAAAv1B,KAAA,EAIvBnM,EAAK4gC,kBAAkBr0B,EAAO,WAAWtH,EAAYoZ,YAAY,SAAU,CAAChS,OAAQm0B,IAJ7D,QAIzCC,EAJyCiB,EAAAxyB,OAM9BuxB,EAAU3hC,OAAS,IAClCwiC,EAAa/0B,GAASk0B,GAPuB,wBAAAiB,EAAAp0B,SAAAm0B,EAAA3mC,SAA3C,gBAAA6mC,GAAA,OAAAH,EAAAh0B,MAAA1S,KAAA2S,YAAA,IAXa,cAAA8zB,EAAA7kB,OAAA,SAsBZ4kB,GAtBY,yBAAAC,EAAAj0B,SAAA2zB,EAAAnmC,SAx8BF,gBAAA8mC,EAAAC,GAAA,OAAAb,EAAAxzB,MAAA1S,KAAA2S,YAAA,GAAA3S,KAg+BnBgnC,sBAh+BmB,eAAAC,EAAAtnC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAg+BK,SAAAo2B,EAAO/8B,GAAP,IAAAg9B,EAAAC,EAAAC,EAAA3B,EAAA4B,EAAAC,EAAAC,EAAA7B,EAAA8B,EAAA,OAAAzW,EAAA7wB,EAAA+Q,KAAA,SAAAw2B,GAAA,cAAAA,EAAAt2B,KAAAs2B,EAAAr2B,MAAA,cAChB81B,EAAiBh9B,EAAYw9B,SADbD,EAAAr2B,KAAA,EAIYnM,EAAK0iC,6BAA6Bz9B,EAAY07B,IAAI1jC,KAAM,WAAY,MAJhF,YAIhBilC,EAJgBM,EAAAtzB,MAAA,CAAAszB,EAAAr2B,KAAA,gBAAAq2B,EAAAr2B,KAAA,EAMdnM,EAAKjF,MAAM4nC,aAAaV,EAAehlC,KAAMilC,EAAqBD,EAAeW,KANnE,cAAAJ,EAAAr2B,KAAA,EAOanM,EAAKosB,oBAAoB6V,EAAehlC,KAAK,sBAP1D,UAOdklC,EAPcK,EAAAtzB,OAShBrC,SAASs1B,GAAoB,GATb,CAAAK,EAAAr2B,KAAA,gBAUZq0B,EAAe,CACnBzM,GAAImO,GAXYM,EAAAr2B,KAAA,GAgBR4P,QAAQqD,IAAI,CACpBpf,EAAK6iC,aAAaV,GAClBniC,EAAK4gC,kBAAkB37B,EAAYsH,MAAO,WAAYM,SAASs1B,GAAqBt1B,SAASs1B,GAAoB,EAAG,CAAC91B,OAAQm0B,MAlB7G,WAAA4B,EAAAI,EAAAtzB,KAAAmzB,EAAA5nC,OAAA6yB,EAAA,EAAA7yB,CAAA2nC,EAAA,GAchBE,EAdgBD,EAAA,KAehB5B,EAfgB4B,EAAA,MAqBD5B,EAAU3hC,OArBT,CAAA0jC,EAAAr2B,KAAA,gBAsBVo2B,EAAc9B,EAAUV,OAAQ,SAAC7U,EAAOoJ,GAE5C,OADApJ,EAASA,EAAOle,KAAKhN,EAAKwM,MAAM8nB,EAAEwO,aAAa78B,SAE/CjG,EAAKwM,MAAM,IAzBGg2B,EAAA9lB,OAAA,SA2BT,CACLwO,OAAOqX,EACP5yB,UAAU2yB,EAAU3yB,UACpB0O,YAAY8jB,EACZlpB,gBAAgBwnB,EAAU,GAAGxnB,kBA/Bf,eAAAupB,EAAA9lB,OAAA,SAqCf,MArCe,yBAAA8lB,EAAAl1B,SAAA00B,EAAAlnC,SAh+BL,gBAAAioC,GAAA,OAAAhB,EAAAv0B,MAAA1S,KAAA2S,YAAA,GAAA3S,KAugCnBkoC,eAvgCmB,eAAAC,EAAAxoC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAugCF,SAAAs3B,EAAOC,EAAUC,EAAiBC,EAAYC,GAA9C,IAAAC,EAAAxW,EAAArc,EAAA8yB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/X,EAAA7wB,EAAA+Q,KAAA,SAAA83B,GAAA,cAAAA,EAAA53B,KAAA43B,EAAA33B,MAAA,cACTo3B,EAAiBvjC,EAAK+jC,eAAeZ,GACrCpW,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UAGrCtzB,EAAiB1Q,EAAKwM,MAAM,GANjBs3B,EAAA33B,KAAA,EAWL4P,QAAQqD,IAAI,CACpBpf,EAAKutB,yBAAyBR,EAAgBwW,GAC9CvjC,EAAK0tB,oBAAoB2V,EAAWD,EAAgB72B,MAAM62B,KAb7C,cAAAI,EAAAM,EAAA50B,KAAAu0B,EAAAhpC,OAAA6yB,EAAA,EAAA7yB,CAAA+oC,EAAA,GASb9yB,EATa+yB,EAAA,GAUbJ,EAVaI,EAAA,GAgBTC,EAAgB1jC,EAAKwM,MAAM82B,GAAiB96B,MAAMxI,EAAKuQ,gBAAgB,CAAC,UAAW,oBACnFozB,EAAyBD,EAAcl7B,MAAMkI,GAC7CkzB,EAAWD,EAAuBrlB,IAAI+kB,GAAY76B,MAAM,KACxDq7B,EAAW7jC,EAAKikC,QAAQL,EAAStlB,IAAI,MAAM9V,MAAM,KAnBxCs7B,EAAApnB,OAAA,SAqBR,CACLwnB,IAAIN,EACJO,IAAIN,IAvBS,yBAAAC,EAAAx2B,SAAA41B,EAAApoC,SAvgCE,gBAAAspC,EAAAC,EAAAC,EAAAC,GAAA,OAAAtB,EAAAz1B,MAAA1S,KAAA2S,YAAA,GAAA3S,KAiiCnB0pC,2BAjiCmB,eAAAC,EAAAhqC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAiiCU,SAAA84B,EAAOz/B,EAAam0B,GAApB,IAAAP,EAAA8L,EAAA,OAAA7Y,EAAA7wB,EAAA+Q,KAAA,SAAA44B,GAAA,cAAAA,EAAA14B,KAAA04B,EAAAz4B,MAAA,cAAAy4B,EAAAz4B,KAAA,EACEnM,EAAK+6B,oBAAoB,iBAAkB,GAAI91B,EAAY8zB,SAAU9zB,EAAYsH,MAAO6sB,EAAcD,QAASl0B,EAAam0B,GAD9H,cACrBP,EADqB+L,EAAA11B,KAErBy1B,EAAqB,GAFAC,EAAAz4B,KAAA,EAGrBnM,EAAKwL,aAAa/Q,OAAOoE,KAAKg6B,GAA9B,eAAAgM,EAAApqC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+C,SAAAk5B,EAAOv4B,GAAP,IAAAw4B,EAAAC,EAAAC,EAAAC,EAAAtB,EAAAC,EAAAsB,EAAAC,EAAA7C,EAAA8C,EAAAC,EAAA5B,EAAAhzB,EAAA60B,EAAAC,EAAAlC,EAAAmC,EAAAC,EAAA/B,EAAAJ,EAAAxW,EAAA4Y,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvF,EAAAC,EAAAuF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAza,EAAA7wB,EAAA+Q,KAAA,SAAAw6B,GAAA,cAAAA,EAAAt6B,KAAAs6B,EAAAr6B,MAAA,UAE/C44B,EAAe,KACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBtB,EAAW5jC,EAAKwM,MAAM,GACtBq3B,EAAW7jC,EAAKwM,MAAM,GACtB24B,EAAoB,KACpBC,EAAaplC,EAAKwM,MAAM,GACxB+1B,EAAcviC,EAAKwM,MAAM,GACzB64B,EAAerlC,EAAKwM,MAAM,GAC1B84B,EAAwB,KACxB5B,EAAgB1jC,EAAKwM,MAAM,GAC3BkE,EAAiB1Q,EAAKwM,MAAM,GAC5B+4B,EAAiBvlC,EAAKwM,MAAM,GAC5Bg5B,EAAkBxlC,EAAKwM,MAAM,GAC7B82B,EAAkBtjC,EAAKwM,MAAM,GAC7Bi5B,EAAoBzlC,EAAKwM,MAAM,GAC/Bk5B,EAAoB1lC,EAAKwM,MAAM,GAC/Bm3B,EAAyB3jC,EAAKwM,MAAM,GAElC+2B,EAAiBvjC,EAAKuQ,gBAAgB,CAAC,QAAS,SAAUhE,IAC1DwgB,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UAGnC2B,EAAoBvM,EAAcmB,UAAUkM,cAC5Cb,EAAqBxM,EAAcmB,UAAUsL,cA5BA,CAAAW,EAAAr6B,KAAA,gBAAAq6B,EAAAr6B,KAAA,GA+BtBnM,EAAKosB,oBAAoBgN,EAAcsB,WAAWz9B,KAAK2oC,GA/BjC,SA+B3CC,EA/B2CW,EAAAt3B,QAiC/Ci2B,EAAoBt4B,SAASg5B,IAAeh5B,SAASe,KAAK84B,MAAM,MAjCjB,YAqC/Cf,EArC+C,CAAAa,EAAAr6B,KAAA,YAuC5Cg5B,EAvC4C,CAAAqB,EAAAr6B,KAAA,gBAAAq6B,EAAAr6B,KAAA,GA6CrC4P,QAAQqD,IAAI,CACpBpf,EAAKutB,yBAAyBR,EAAgBwW,GAC9CvjC,EAAK2mC,0BAA0BvN,EAAcsB,WAAWz9B,KAAK0oC,GAC7D3lC,EAAK2mC,0BAA0Bp6B,EAAM,YAAY,CAAC6sB,EAAcsB,WAAWtyB,UAC3EpI,EAAK+6B,oBAAoB,cAAe,GAAI91B,EAAY8zB,SAAU9zB,EAAYsH,MAAO6sB,EAAcD,QAASl0B,EAAam0B,KAjD5E,eAAA0M,EAAAU,EAAAt3B,KAAA62B,EAAAtrC,OAAA6yB,EAAA,EAAA7yB,CAAAqrC,EAAA,GAyC7Cp1B,EAzC6Cq1B,EAAA,GA0C7CzC,EA1C6CyC,EAAA,GA2C7CxD,EA3C6CwD,EAAA,GA4C7CP,EA5C6CO,EAAA,GAAAS,EAAAr6B,KAAA,GAoDvBnM,EAAKg7B,2BAA2BwK,EAAgBvgC,GApDzB,QAoD/CugC,EApD+CgB,EAAAt3B,KAqD/Co0B,EAAkBtjC,EAAKgQ,iBAAiBszB,EAAgBlK,EAAcsB,WAAWj8B,UACjF4mC,EAAerlC,EAAKwM,MAAM82B,GAAiB96B,MAAM,OACjDk7B,EAAgB1jC,EAAKwM,MAAM82B,GAAiB96B,MAAMxI,EAAKuQ,gBAAgB,CAAC,UAAW,oBACnFg1B,EAAiB7B,EAAcplB,IAAIte,EAAKuQ,gBAAgB,CAAC,UAAW,mBACpEozB,EAAyBD,EAAcl7B,MAAMkI,GAC7CkzB,EAAWD,EAAuBrlB,IAAIknB,GACtC3B,EAAW7jC,EAAKikC,QAAQL,GAAUp7B,MAAM,KACxCk9B,EAAoBL,EA5D2B,QA+DjDC,EAAwB,OAExBX,EAAmBp4B,GAAS,CAC1B64B,aACA7C,cACA8C,eACAN,eACAb,IAAKN,EACLO,IAAKN,EACLH,gBACAwB,gBACAK,iBACAjC,kBACAoC,oBACAJ,wBACA3B,0BA9E+C6C,EAAAr6B,KAAA,wBAkF3Cq0B,EAAe,CACnBh5B,KAAMvC,EAAY07B,IAAIv4B,QACtB2rB,GAAIqF,EAAcsB,WAAWtyB,SApFkBo+B,EAAAr6B,KAAA,GAuFzBnM,EAAK4gC,kBAAkBr0B,EAAO,WAAYtH,EAAYoZ,YAAa,SAAU,CAAEhS,OAAQm0B,IAvF9D,cAuF3CC,EAvF2C+F,EAAAt3B,OAyFhCuxB,EAAU3hC,OAAS,GAzFa,CAAA0nC,EAAAr6B,KAAA,gBA0FzC44B,EAAetE,EAAU3hC,OAAS2hC,EAAU,GAAK,KACjDyE,EAAgBzE,EAAUA,EAAU3hC,OAAS,GAC7ConC,EAAanB,EAAeA,EAAa1mB,YAAcpZ,EAAYoZ,YA5F1BmoB,EAAAr6B,KAAA,GAkGrC4P,QAAQqD,IAAI,CACpBpf,EAAK6iC,aAAaqD,GAClBlmC,EAAK6iC,aAAaqC,EAAc7mB,aAChCre,EAAKutB,yBAAyBR,EAAgBwW,GAC9CvjC,EAAK2mC,0BAA0B1hC,EAAY07B,IAAI1jC,KAAM,mBAAoB,GAAI,GAAIioC,EAAc7mB,eAtGlD,WAAA8nB,EAAAK,EAAAt3B,KAAAk3B,EAAA3rC,OAAA6yB,EAAA,EAAA7yB,CAAA0rC,EAAA,GA8F7CnB,EA9F6CoB,EAAA,GA+F7CnB,EA/F6CmB,EAAA,GAgG7C11B,EAhG6C01B,EAAA,GAiG7CX,EAjG6CW,EAAA,IAyG3CpB,IAAiBC,EAzG0B,CAAAuB,EAAAr6B,KAAA,gBA0GzCk6B,EAAWrmC,EAAKgQ,iBAAiBy1B,EAAmBxgC,EAAY07B,IAAIliC,UAClE6nC,EAAgBpB,EAAc7mB,YAAc6nB,EAC5CK,EAAiBtB,EAAct1B,UAAYq1B,EAAcr1B,UAE/Dy1B,EAAaplC,EAAKgQ,iBAAiBk1B,EAAcpC,aAAa78B,MAAOs9B,EAAe9kC,UACpF8jC,EAAc9B,EAAUV,OAAO,SAAC6G,EAAOtS,GAErC,OADAsS,EAAQA,EAAM55B,KAAKhN,EAAKgQ,iBAAiBskB,EAAEwO,aAAa78B,MAAOs9B,EAAe9kC,YAE7EuB,EAAKwM,MAAM,IAlH+Bg6B,EAAAr6B,KAAA,GAoH5BnM,EAAKg7B,2BAA2BqL,EAASphC,GApHb,QAoH7CohC,EApH6CG,EAAAt3B,KAsH7Cq2B,EAAiBhD,EAAYjkB,IAAIgoB,GACjChD,EAAkBf,EAAYjkB,IAAIioB,GAClClB,EAAe/B,EAAgB96B,MAAM,OACrCk7B,EAAgBJ,EAAgB96B,MAAMxI,EAAKuQ,gBAAgB,CAAC,UAAW,oBACvEozB,EAAyBD,EAAcl7B,MAAMkI,GAC7CkzB,EAAWD,EAAuBrlB,IAAI+nB,GACtCxC,EAAW7jC,EAAKikC,QAAQL,GAAUp7B,MAAM,KAExCk9B,EAAoBN,EACpBE,EAAwB,kBAExBX,EAAmBp4B,GAAS,CAC1B64B,aACA7C,cACA8C,eACAN,eACAb,IAAKN,EACLO,IAAKN,EACLH,gBACAwB,gBACAK,iBACAjC,kBACAoC,oBACAJ,wBACA3B,0BA9I2C,yBAAA6C,EAAAl5B,SAAAw3B,EAAAhqC,SAA/C,gBAAA+rC,GAAA,OAAAhC,EAAAr3B,MAAA1S,KAAA2S,YAAA,IAHqB,cAAAm3B,EAAAloB,OAAA,SA0JpBioB,GA1JoB,wBAAAC,EAAAt3B,SAAAo3B,EAAA5pC,SAjiCV,gBAAAgsC,EAAAC,GAAA,OAAAtC,EAAAj3B,MAAA1S,KAAA2S,YAAA,GAAA3S,KA6rCnBu/B,mBA7rCmB,eAAA2M,EAAAvsC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6rCE,SAAAq7B,EAAOhiC,EAAam0B,EAAehuB,GAAnC,IAAA87B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlrC,EAAAwiC,EAAAV,EAAArE,EAAA0N,EAAA3M,EAAA4M,EAAAC,EAAAC,EAAA,OAAAjc,EAAA7wB,EAAA+Q,KAAA,SAAAg8B,GAAA,cAAAA,EAAA97B,KAAA87B,EAAA77B,MAAA,cACnBf,EAAUA,GAAWpL,EAAKjF,MAAMqQ,QAO1B87B,EAAsB,CAAEnT,GAAI,KAAMvsB,KAAM,OAAQvB,MAAO,SACvDkhC,EAAyBnnC,EAAKuQ,gBAAgB,CAAC,SAAUtL,EAAYsH,MAAO,YAAc26B,GAE1FE,EAAmC,IACRD,EAAuBpT,IAAM,CAAC9uB,EAAY07B,IAAIv4B,SAC/Eg/B,EAAiCD,EAAuB3/B,MAAQ,CAACxH,EAAKjF,MAAMqQ,UAEtEi8B,EAAkC,IACRF,EAAuBpT,IAAM,CAAC/zB,EAAKjF,MAAMqQ,SACzEi8B,EAAgCF,EAAuB3/B,MAAQ,CAACvC,EAAY07B,IAAIv4B,SAjB7D4/B,EAAA77B,KAAA,GA0BT4P,QAAQqD,IAAI,CACpBpf,EAAK4gC,kBAAkB37B,EAAYsH,MAAO,WAAY6sB,EAAc/a,YAAa,SAAU,CAAEhS,OAAQg7B,IACrGrnC,EAAK4gC,kBAAkB37B,EAAYsH,MAAO,WAAY6sB,EAAc/a,YAAa,SAAU,CAAEhS,OAAQ+6B,IACrGpnC,EAAK4gC,kBAAkBxH,EAAcn8B,KAAM,WAAYm8B,EAAc/a,YAAa,SAAU,CAAEhS,OAAQ,CAAE7E,KAAM,CAACxH,EAAKjF,MAAMqQ,SAAU2oB,GAAI,CAAC,iDACzI/zB,EAAK4gC,kBAAkBxH,EAAcn8B,KAAM,WAAYm8B,EAAc/a,YAAa,SAAU,CAAEhS,OAAQ,CAAE7E,KAAM,CAAC,8CAA+CusB,GAAI,CAAC/zB,EAAKjF,MAAMqQ,cA9B7J,eAAAk8B,EAAAU,EAAA94B,KAAAq4B,EAAA9sC,OAAA6yB,EAAA,EAAA7yB,CAAA6sC,EAAA,GAsBjBE,EAtBiBD,EAAA,GAuBjBE,EAvBiBF,EAAA,GAwBjBG,EAxBiBH,EAAA,GAyBjBI,EAzBiBJ,EAAA,GAmCb9qC,EAAe,GACjBwiC,EAAiB,KACjBV,EAAcv+B,EAAKwM,MAAM,GACzB0tB,EAAkBl6B,EAAKwM,MAAM,GAC7Bo7B,EAAuB5nC,EAAKwM,MAAM,GAClCyuB,EAA2Bj7B,EAAKwM,MAAM,GAGpCq7B,EAAuBJ,EAAoBhmC,OAAO+lC,GAAoBS,KAAK,SAAChtC,EAAGs5B,GAAJ,OAAW1nB,SAAS5R,EAAEojB,aAAexR,SAAS0nB,EAAElW,aAAe,GAAK,IAC/IypB,EAAyBH,EAAsBlmC,OAAOimC,GAAsBO,KAAK,SAAChtC,EAAGs5B,GAAJ,OAAW1nB,SAAS5R,EAAEojB,aAAexR,SAAS0nB,EAAElW,aAAe,GAAK,IAErJ0pB,EAAa,GA9CAC,EAAA77B,KAAA,GAgDbnM,EAAKwL,aAAas8B,EAAlB,eAAAI,EAAAztC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA0C,SAAAu8B,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAjG,EAAAkG,EAAA,OAAA1c,EAAA7wB,EAAA+Q,KAAA,SAAAy8B,GAAA,cAAAA,EAAAv8B,KAAAu8B,EAAAt8B,MAAA,UACxCk8B,EAAqBR,EAAqBttB,KAAK,SAAA+Z,GAAC,OAAIA,EAAErb,gBAAgB5Q,gBAAkB+/B,EAA0BnvB,gBAAgB5Q,gBAD1F,CAAAogC,EAAAt8B,KAAA,eAAAs8B,EAAA/rB,OAAA,wBAAA+rB,EAAAt8B,KAAA,EAQpC4P,QAAQqD,IAAI,CACpBpf,EAAK6iC,aAAawF,EAAmBhqB,aACrCre,EAAKg7B,2BAA2B,EAAE/1B,EAAYojC,EAAmBhqB,eAVrB,OAAAiqB,EAAAG,EAAAv5B,KAAAq5B,EAAA9tC,OAAA6yB,EAAA,EAAA7yB,CAAA6tC,EAAA,GAM5ChG,EAN4CiG,EAAA,GAO5CC,EAP4CD,EAAA,GAa9CR,EAAWM,EAAmBhqB,aAAe,CAC3CikB,YACAkG,uBAf4C,yBAAAC,EAAAn7B,SAAA66B,EAAArtC,SAA1C,gBAAA4tC,GAAA,OAAAR,EAAA16B,MAAA1S,KAAA2S,YAAA,IAhDa,eAoEnBq6B,EAAuB/oC,QAAS,SAAAqpC,GAC9B,IAAMC,EAAqBR,EAAqBttB,KAAK,SAAA+Z,GAAC,OAAIA,EAAErb,gBAAgB5Q,gBAAkB+/B,EAA0BnvB,gBAAgB5Q,gBAGxI,GAAKggC,EAAL,CAIA,IAAMt7B,EAAc/M,EAAKgQ,iBAAiBq4B,EAAmBvF,aAAaqE,EAAuBlhC,OAAQhB,EAAYxG,UAC/GkqC,EAAqB3oC,EAAKgQ,iBAAiBo4B,EAA0BtF,aAAa78B,MAAOmzB,EAAc36B,UAGvGi7B,EAAe3sB,EAAYuR,IAAIqqB,GAC/BrG,EAAYyF,EAAWM,EAAmBhqB,aAAaikB,UACvDsG,EAAO,GAAAnnC,OAAM23B,EAAc7sB,MAApB,KAAA9K,OAA6B4mC,EAAmBpvB,iBACvD+f,EAAiBh5B,EAAKuQ,gBAAgB,CAAC,QAAS,YAAatL,EAAY8zB,WAGzEzsB,EAAK,CACTs8B,UACAn8B,OAAQ,KACRM,cACA2sB,eACAzwB,aAPmB+vB,GAAkBA,EAAe97B,KAAjC,oBAAAuE,OAA4Du3B,EAAe97B,MAA3E,oBAAAuE,OAAwGwD,EAAY8zB,SAApH,QAQnB9yB,MAAO8G,EACPL,OAAQ,YACRH,MAAOtH,EAAYsH,MACnB4sB,QAASC,EAAcD,QACvBJ,SAAUC,EAAejwB,MACzB6hB,YAAa3lB,EAAYsH,MACzBs8B,cAAeF,EACfhmC,KAAM0lC,EAAmBpvB,gBACzBoF,YAAagqB,EAAmBhqB,YAChCvR,UAAWw1B,EAAYA,EAAU3yB,UAAY,MAGzCmrB,EAAuB96B,EAAKwM,MAAMO,GAAavE,MAAMu/B,EAAWM,EAAmBhqB,aAAamqB,qBAMpC,+CAA9DJ,EAA0BtF,aAAat7B,KAAKa,eAEzC42B,IACHA,EAAiB3yB,GAGnBA,EAAGG,OAAS,UACZytB,EAAkBA,EAAgBltB,KAAKD,GACvC66B,EAAuBA,EAAqB56B,KAAKD,GACjDwxB,EAAcA,EAAYvxB,KAAK0sB,EAAalxB,MAAMuE,IAClDkuB,EAA2BA,EAAyBjuB,KAAK8tB,IAIY,+CAA5DsN,EAA0BtF,aAAa/O,GAAG1rB,gBACnDiE,EAAGG,OAAS,WACZytB,EAAkBA,EAAgBjtB,MAAMF,GACxCkuB,EAA2BA,EAAyBhuB,MAAM6tB,GACtDZ,EAAgBhtB,GAAG,KACrB+xB,EAAiB,KACjBV,EAAcv+B,EAAKwM,MAAM,GACzB0tB,EAAkBl6B,EAAKwM,MAAM,GAC7Bo7B,EAAuB5nC,EAAKwM,MAAM,GAClCyuB,EAA2Bj7B,EAAKwM,MAAM,KAK1C/P,EAAaiM,KAAK4D,MAGpBiyB,EAAcA,EAAYjgB,IAAIspB,GA7IXI,EAAAtrB,OAAA,SAiJZ,CACL6hB,cACA9hC,eACAwiC,iBACA/E,kBACAe,6BAtJiB,yBAAA+M,EAAA16B,SAAA25B,EAAAnsC,SA7rCF,gBAAAguC,EAAAC,EAAAC,GAAA,OAAAhC,EAAAx5B,MAAA1S,KAAA2S,YAAA,GAAA3S,KAs1CnBmuC,2BAt1CmB,eAAAC,EAAAzuC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAs1CU,SAAAu9B,EAAOlkC,EAAam0B,EAAehuB,GAAnC,IAAAmuB,EAAA,OAAAzN,EAAA7wB,EAAA+Q,KAAA,SAAAo9B,GAAA,cAAAA,EAAAl9B,KAAAk9B,EAAAj9B,MAAA,cAAAi9B,EAAAj9B,KAAA,EACGnM,EAAKq6B,mBAAmBp1B,EAAam0B,EAAehuB,GADvD,YACrBmuB,EADqB6P,EAAAl6B,MAAA,CAAAk6B,EAAAj9B,KAAA,eAAAi9B,EAAA1sB,OAAA,SAGlB6c,EAAgB98B,cAHE,cAAA2sC,EAAA1sB,OAAA,SAKpB,MALoB,wBAAA0sB,EAAA97B,SAAA67B,EAAAruC,SAt1CV,gBAAAuuC,EAAAC,EAAAC,GAAA,OAAAL,EAAA17B,MAAA1S,KAAA2S,YAAA,GAAA3S,KA61CnB0uC,yBA71CmB,eAAAC,EAAAhvC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA61CQ,SAAA89B,EAAOzkC,EAAam0B,EAAehuB,GAAnC,IAAAmuB,EAAA,OAAAzN,EAAA7wB,EAAA+Q,KAAA,SAAA29B,GAAA,cAAAA,EAAAz9B,KAAAy9B,EAAAx9B,MAAA,cAAAw9B,EAAAx9B,KAAA,EACKnM,EAAKq6B,mBAAmBp1B,EAAam0B,EAAehuB,GADzD,YACnBmuB,EADmBoQ,EAAAz6B,MAAA,CAAAy6B,EAAAx9B,KAAA,eAAAw9B,EAAAjtB,OAAA,SAGhB6c,EAAgB0F,gBAHA,cAAA0K,EAAAjtB,OAAA,SAKlB,MALkB,wBAAAitB,EAAAr8B,SAAAo8B,EAAA5uC,SA71CR,gBAAA8uC,EAAAC,EAAAC,GAAA,OAAAL,EAAAj8B,MAAA1S,KAAA2S,YAAA,GAAA3S,KAo2CnBivC,0BAp2CmB,eAAAC,EAAAvvC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAo2CS,SAAAq+B,EAAOhlC,EAAam0B,EAAehuB,GAAnC,IAAAmuB,EAAA,OAAAzN,EAAA7wB,EAAA+Q,KAAA,SAAAk+B,GAAA,cAAAA,EAAAh+B,KAAAg+B,EAAA/9B,MAAA,cAAA+9B,EAAA/9B,KAAA,EACInM,EAAKq6B,mBAAmBp1B,EAAam0B,EAAehuB,GADxD,YACpBmuB,EADoB2Q,EAAAh7B,MAAA,CAAAg7B,EAAA/9B,KAAA,eAAA+9B,EAAAxtB,OAAA,SAGjB6c,EAAgBW,iBAHC,cAAAgQ,EAAAxtB,OAAA,SAKnB,MALmB,wBAAAwtB,EAAA58B,SAAA28B,EAAAnvC,SAp2CT,gBAAAqvC,EAAAC,EAAAC,GAAA,OAAAL,EAAAx8B,MAAA1S,KAAA2S,YAAA,GAAA3S,KA22CnB8hC,mBA32CmB,eAAA0N,EAAA7vC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA22CE,SAAA2+B,EAAOtlC,EAAamG,GAApB,IAAAshB,EAAA/R,EAAA6vB,EAAAC,EAAA7Q,EAAA8Q,EAAAxQ,EAAA,OAAApO,EAAA7wB,EAAA+Q,KAAA,SAAA2+B,GAAA,cAAAA,EAAAz+B,KAAAy+B,EAAAx+B,MAAA,UACbugB,EADa,mBAAAjrB,OACsBwD,EAAYmoB,KAAK7gB,MADvC,KAAA9K,OACgD2J,KAC7DuP,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAHvB,CAAAusC,EAAAx+B,KAAA,eAAAw+B,EAAAjuB,OAAA,SAIV1c,EAAKwM,MAAMmO,IAJD,cAAAgwB,EAAAx+B,KAAA,EAOsB4P,QAAQqD,IAAI,CACnDpf,EAAK+rB,gBAAgB9mB,EAAYmoB,KAAK7gB,MAAOnB,GAC7CpL,EAAK2mC,0BAA0B1hC,EAAYmoB,KAAK7gB,MAAO,gBAAiB,CAACnB,MATxD,UAAAo/B,EAAAG,EAAAz7B,KAAAu7B,EAAAhwC,OAAA6yB,EAAA,EAAA7yB,CAAA+vC,EAAA,GAOd5Q,EAPc6Q,EAAA,GAOAC,EAPAD,EAAA,IAYf7Q,IAAgB8Q,EAZD,CAAAC,EAAAx+B,KAAA,gBAajBu+B,EAAe1qC,EAAKgQ,iBAAiB06B,EAAczlC,EAAYxG,UACzDy7B,EAAkBN,EAAapxB,MAAMkiC,GAd1BC,EAAAjuB,OAAA,SAeV1c,EAAKguB,8BAA8BtB,EAAewN,IAfxC,eAAAyQ,EAAAjuB,OAAA,SAkBZ,MAlBY,yBAAAiuB,EAAAr9B,SAAAi9B,EAAAzvC,SA32CF,gBAAA8vC,EAAAC,GAAA,OAAAP,EAAA98B,MAAA1S,KAAA2S,YAAA,GAAA3S,KA+3CnBgwC,cA/3CmBrwC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+3CH,SAAAm/B,IAAA,IAAAlgC,EAAAO,EAAAC,EAAA2/B,EAAAC,EAAAx9B,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAk/B,GAAA,cAAAA,EAAAh/B,KAAAg/B,EAAA/+B,MAAA,UAAOtB,EAAPogC,EAAAnsC,OAAA,QAAA0qB,IAAAyhB,EAAA,GAAAA,EAAA,GAAuB,IAErC7/B,GAFyCA,EAA3B6/B,EAAAnsC,OAAA,EAAAmsC,EAAA,QAAAzhB,IAEOxpB,EAAKjF,MAAMqQ,UAEfP,GAAkBA,EAAc/L,QAAWkB,EAAKjF,MAAMmQ,gBAJzD,CAAAggC,EAAA/+B,KAAA,eAAA++B,EAAAxuB,OAAA,SAKL,IALK,cAAAwuB,EAAA/+B,KAAA,EAQanM,EAAKmL,gBAAgBC,EAAS,EAAG,SAAUP,GAAe,GARvE,cAQRQ,EARQ6/B,EAAAh8B,KAUR87B,EAAc,GAEpBngC,EAAc9L,QAAQ,SAACgG,GACrB,IAAIgH,EAAa/L,EAAKwM,MAAM,GAC5Bw+B,EAAYjmC,GAAiBgH,EAE7B,IAAMD,EAAcrR,OAAO2R,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,IACvE+G,GAAeA,EAAYhN,QAE7BgN,EAAY/M,QAAQ,SAACuN,EAAIzL,GAEvB,IAAKyL,EAAG3J,MAAS2J,EAAGI,QAAwB,YAAdJ,EAAGI,SAA0BJ,EAAGS,YAC5D,OAAO,EAGT,OAAQT,EAAGG,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHV,EAAaA,EAAWiB,KAAKV,EAAGS,aAChC,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHhB,EAAaA,EAAWkB,MAAMX,EAAGS,aAOjChB,EAAWmB,GAAG,KAChBnB,EAAa/L,EAAKwM,MAAM,MAM9Bw+B,EAAYjmC,GAAiBgH,IApDjBm/B,EAAAxuB,OAAA,SAyDPsuB,GAzDO,yBAAAE,EAAA59B,SAAAy9B,EAAAjwC,SA/3CGA,KA07CnBqwC,aAAe,WACb,IAAMrU,EAAgB92B,EAAKorC,oBAC3B,OAAOtU,EAAgBA,EAAcQ,UAAYt3B,EAAKuQ,gBAAgB,CAAC,eA57CtDzV,KA87CnBswC,kBAAoB,WAClB,IAAM3Y,EAAYzyB,EAAKqrC,sBACjBxxB,EAAU7Z,EAAKuQ,gBAAgB,CAAC,UAAW,oBAAqBkiB,IAEtE,OADA5Y,EAAQ3Z,GAAKuyB,EACN5Y,GAl8CU/e,KAo8CnBwiB,mBAAqB,WACnB,IAAMmV,EAAYzyB,EAAK8uB,uBACjBjV,EAAU7Z,EAAKuQ,gBAAgB,CAAC,UAAW,oBAAqBkiB,IAEtE,OADA5Y,EAAQ3Z,GAAKuyB,EACN5Y,GAx8CU/e,KA08CnBg0B,qBAAuB,WACrB,IAAMwc,EAAiBtrC,EAAKuQ,gBAAgB,CAAC,UAAW,oBACxD,OAAOvQ,EAAKjF,MAAM8e,SAAW7Z,EAAKjF,MAAM8e,QAAQ6Y,UAAW7lB,SAAS7M,EAAKjF,MAAM8e,QAAQ6Y,SAASxyB,KAAkC2M,SAASy+B,IA58C1HxwC,KA88CnBuwC,oBAAsB,WACpB,IAAMC,EAAiBtrC,EAAKuQ,gBAAgB,CAAC,UAAW,oBACxD,OAAOvQ,EAAKjF,MAAM8e,SAAW7Z,EAAKjF,MAAM8e,QAAQiZ,SAAUjmB,SAAS7M,EAAKjF,MAAM8e,QAAQiZ,QAAQ5yB,KAAkC2M,SAASy+B,IAh9CxHxwC,KAk9CnBywC,oBAl9CmB9wC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAk9CG,SAAA4/B,IAAA,IAAApgC,EAAAP,EAAA6hB,EAAA/R,EAAA8wB,EAAAprB,EAAAoO,EAAAid,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxhC,EAAAyhC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzhC,EAAA0hC,EAAA//B,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAyhC,GAAA,cAAAA,EAAAvhC,KAAAuhC,EAAAthC,MAAA,UAAOf,EAAPoiC,EAAA1uC,OAAA,QAAA0qB,IAAAgkB,EAAA,IAAAA,EAAA,GAAwB3iC,EAAxB2iC,EAAA1uC,OAAA,QAAA0qB,IAAAgkB,EAAA,GAAAA,EAAA,GAAwC,IAE5DpiC,EAAUA,GAAoBpL,EAAKjF,MAAMqQ,UAExBpL,EAAKjF,MAAM6e,KAJR,CAAA6zB,EAAAthC,KAAA,eAAAshC,EAAA/wB,OAAA,SAKX,IALW,UAQdgQ,EARc,oBAAAjrB,OAQsB2J,EARtB,KAAA3J,OAQiCkJ,KAAKC,UAAUC,IAEjD,QADb8P,EAAa3a,EAAK0tC,cAAchhB,IATlB,CAAA+gB,EAAAthC,KAAA,eAAAshC,EAAA/wB,OAAA,SAWX/B,GAXW,UAcpBvP,EAAUA,EAAQ/C,cAEdojC,EAAM,GACJprB,EAAiBrgB,EAAKsd,qBACtBmR,EAAmBzuB,EAAK8uB,uBACxB4c,EAAe1rC,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,aAC7Do7B,EAAgB3rC,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,cAC9Dq7B,EAAoB5rC,EAAKuQ,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,gBAC1Fs7B,EAAuB7rC,EAAKuQ,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fu7B,EAAuB9rC,EAAKuQ,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fw7B,EAAuB/rC,EAAKuQ,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fy7B,EAAyBhsC,EAAKuQ,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,qBAE/F07B,EAA+C,YAA5B5rB,EAAe9C,SAAyBkR,EAAmBzuB,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,UAAW,eAAgBke,KAEzJid,EAAave,UAAWue,EAAaiC,UAAU1B,GA7B/B,CAAAwB,EAAAthC,KAAA,gBA8BZ+/B,EAAiBR,EAAaiC,UAAU1B,GACxCE,EAAyBnsC,EAAKuQ,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,oBAClF67B,EAhCY,GAAA3qC,OAgCSyqC,EAhCT,YAAAzqC,OAgCkC2J,EAhClC,0DAAA3J,OAgCkGiqC,EAAa/pC,KAE3H0qC,EAAoBrsC,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,UAAW,eAAgB07B,IAC7FK,EAAkBX,EAAcgC,UAAUtB,GAC1CE,EApCY,GAAA9qC,OAoCW6qC,EApCX,2CAAA7qC,OAoCoEzB,EAAKjF,MAAMqQ,QApC/E,cAqCZohC,EArCY,GAAA/qC,OAqCiB6qC,EArCjB,0CAAA7qC,OAqCyEzB,EAAKjF,MAAMqQ,QArCpF,cAsCZqhC,EAtCY,GAAAhrC,OAsCyB6qC,EAtCzB,kDAAA7qC,OAsCyFzB,EAAKjF,MAAMqQ,QAtCpG,cAAAqiC,EAAAthC,KAAA,GA8CR4P,QAAQqD,IAAI,CACpBpf,EAAK4tC,+BACL5tC,EAAK6tC,kBAAkBzB,EAAiB,KACxCpsC,EAAK8tC,wBAAwBvB,EAAmBZ,EAAc9sC,KAAM,KACpEmB,EAAK8tC,wBAAwBtB,EAAyBb,EAAc9sC,KAAM,KAC1EmB,EAAK8tC,wBAAwBrB,EAAiCd,EAAc9sC,KAAM,OAnDlE,WAAA6tC,EAAAe,EAAAv+B,KAAAy9B,EAAAlyC,OAAA6yB,EAAA,EAAA7yB,CAAAiyC,EAAA,GAyChBE,EAzCgBD,EAAA,GA0ChBE,EA1CgBF,EAAA,GA2ChBthC,EA3CgBshC,EAAA,GA4ChBG,EA5CgBH,EAAA,GA6ChBI,EA7CgBJ,EAAA,GA2DZK,EAAsB,GACtBC,EAAuB,GAC7BxyC,OAAO2R,OAAO+/B,GAAwBptC,QAAQ,SAAAkG,GACxCA,EAAY8oC,YACdd,EAAqBvkC,KAAKzD,EAAY8oC,WAAW3lC,QAAQC,eAEvDpD,EAAY+oC,WACdhB,EAAoBtkC,KAAKzD,EAAY+oC,UAAU5lC,QAAQC,iBAIvD6kC,EAAa,KAEb7hC,GAAgBA,EAAa1F,MAAQ0F,EAAa1F,KAAKsoC,QAAqD,oBAApC5iC,EAAa1F,KAAKsoC,OAAO5hC,QAxEnF,CAAAohC,EAAAthC,KAAA,gBAyEhB+gC,EAAa7hC,EAAa1F,KAAKsoC,OAAO5hC,OAAO,SAAAC,GAAE,OAAI0gC,EAAoBzd,SAASjjB,EAAGqpB,gBAAgBttB,gBAAkB,CAACwjC,EAAqBzjC,QAAQC,cAAe0jC,EAAqB3jC,QAAQC,eAAeknB,SAASjjB,EAAGynB,GAAG1rB,gBAAkBiE,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,gBAzE5QolC,EAAAthC,KAAA,GA0EVnM,EAAKwL,aAAa0hC,EAAlB,eAAAgB,EAAAzzC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA8B,SAAAuiC,EAAO7hC,GAAP,IAAArH,EAAAmpC,EAAAC,EAAAC,EAAAC,EAAA,OAAAziB,EAAA7wB,EAAA+Q,KAAA,SAAAwiC,GAAA,cAAAA,EAAAtiC,KAAAsiC,EAAAriC,MAAA,cAC5BlH,EAAcxK,OAAO2R,OAAO+/B,GAAwB5xB,KAAK,SAAA+Z,GAAC,OAAIA,EAAEr3B,OAASqP,EAAGse,eAC5EwjB,EAF4B3zC,OAAA+4B,EAAA,EAAA/4B,CAAA,GAEV6R,IACbG,OAAS,UACpB2hC,EAAW3b,UAAY4Z,EACvB+B,EAAWK,WAAaxpC,EAAYwpC,WACpCL,EAAWnoC,MAAQjG,EAAKgQ,iBAAiBo+B,EAAWnoC,MAAOhB,EAAYxG,UANrC+vC,EAAAriC,KAAA,EAOVnM,EAAK0uC,aAAaN,EAAWzrC,KAAM3C,EAAKjF,MAAM4zC,YAPpC,OAO5BN,EAP4BG,EAAAt/B,KAQ5Bo/B,EAAiBD,EAAYA,EAAUtc,KAAKxX,KAAK,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBujC,EAAkBxjC,QAAQC,gBAAiB,KACjIkmC,EAAcD,GAAkBtuC,EAAKjF,MAAM6e,KAAKkX,MAAQjkB,SAAS7M,EAAKjF,MAAM6e,KAAKkX,MAAM+d,kBAAkBP,EAAeQ,OAAO,KAAO,KAC5IV,EAAWW,YAAWnC,IAAiB2B,IAAc3B,GAAiB2B,EACtE9C,EAAI/iC,KAAK0lC,GAXyB,yBAAAI,EAAAlhC,SAAA6gC,EAAArzC,SAA9B,gBAAAk0C,GAAA,OAAAd,EAAA1gC,MAAA1S,KAAA2S,YAAA,IA1EU,eAuFV0/B,EAAU9hC,EAAa1F,KAAKsoC,OAAO5hC,OAAO,SAAAC,GAAE,OAAI0gC,EAAoBzd,SAASjjB,EAAGqpB,gBAAgBttB,gBAAkB,CAACwjC,EAAqBzjC,QAAQC,cAAe0jC,EAAqB3jC,QAAQC,eAAeknB,SAASjjB,EAAG9E,KAAKa,gBAAkBiE,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,gBAvF/QolC,EAAAthC,KAAA,GAwFVnM,EAAKwL,aAAa2hC,EAAlB,eAAA8B,EAAAx0C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA2B,SAAAsjC,EAAO5iC,GAAP,IAAArH,EAAAmpC,EAAA,OAAAtiB,EAAA7wB,EAAA+Q,KAAA,SAAAmjC,GAAA,cAAAA,EAAAjjC,KAAAijC,EAAAhjC,MAAA,OACzBlH,EAAcxK,OAAO2R,OAAO+/B,GAAwB5xB,KAAK,SAAA+Z,GAAC,OAAIA,EAAEr3B,OAASqP,EAAGse,eAC5EwjB,EAFyB3zC,OAAA+4B,EAAA,EAAA/4B,CAAA,GAEP6R,IACbG,OAAS,OACpB2hC,EAAWW,UAAW,EACtBX,EAAW3b,UAAY4Z,EACvB+B,EAAWK,WAAaxpC,EAAYwpC,WACpCL,EAAWnoC,MAAQjG,EAAKgQ,iBAAiBo+B,EAAWnoC,MAAOhB,EAAYxG,UACvEgtC,EAAI/iC,KAAK0lC,GARsB,wBAAAe,EAAA7hC,SAAA4hC,EAAAp0C,SAA3B,gBAAAs0C,GAAA,OAAAH,EAAAzhC,MAAA1S,KAAA2S,YAAA,IAxFU,WAoGZ2/B,EAAmBF,EAAWtsC,IAAI,SAAA0L,GAAE,OAAIA,EAAG3J,KAAK0F,gBAChDglC,EAAwB,IAAIvY,OAAO90B,EAAKjF,MAAMqQ,QAAQ8nB,QAAQ,KAAM,IAAI7qB,cAAgB,OAC1FykC,GAAmBA,EAAgBnnC,MAAQmnC,EAAgBnnC,KAAKsoC,QAAwD,oBAAvCnB,EAAgBnnC,KAAKsoC,OAAO5hC,QAtG/F,CAAAohC,EAAAthC,KAAA,gBAuGVmhC,EAAgBR,EAAgBnnC,KAAKsoC,OAAO5hC,OAAO,SAAAC,GAAE,OAAK8gC,EAAiB7d,SAASjjB,EAAG3J,KAAK0F,gBAAkBiE,EAAGynB,GAAG1rB,gBAAkB2jC,EAAuB5jC,QAAQC,eAAiBiE,EAAG4d,MAAM7hB,cAAcgnC,MAAMhC,IAA0B/gC,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,gBAvGhRolC,EAAAthC,KAAA,GAwGVnM,EAAKwL,aAAa8hC,EAAlB,eAAAgC,EAAA70C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAiC,SAAA2jC,EAAOjjC,GAAP,IAAArH,EAAAmpC,EAAAC,EAAAC,EAAAC,EAAA,OAAAziB,EAAA7wB,EAAA+Q,KAAA,SAAAwjC,GAAA,cAAAA,EAAAtjC,KAAAsjC,EAAArjC,MAAA,cAC/BlH,EAAcxK,OAAO2R,OAAO+/B,GAAwB5xB,KAAK,SAAA+Z,GAAC,MAAe,SAAXA,EAAEr3B,QAChEmxC,EAF+B3zC,OAAA+4B,EAAA,EAAA/4B,CAAA,GAEb6R,IACbG,OAAS,UACpB2hC,EAAWxjB,YAAc,OACzBwjB,EAAW3b,UAAY4Z,EACvB+B,EAAWK,WAAaxpC,EAAYwpC,WACpCL,EAAWnoC,MAAQjG,EAAKgQ,iBAAiBo+B,EAAWnoC,MAAOhB,EAAYxG,UAPlC+wC,EAAArjC,KAAA,EAQbnM,EAAK0uC,aAAaN,EAAWzrC,KAAM3C,EAAKjF,MAAM4zC,YARjC,OAQ/BN,EAR+BmB,EAAAtgC,KAS/Bo/B,EAAiBD,EAAYA,EAAUtc,KAAKxX,KAAK,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBujC,EAAkBxjC,QAAQC,gBAAiB,KACjIkmC,EAAcD,GAAkBtuC,EAAKjF,MAAM6e,KAAKkX,MAAQjkB,SAAS7M,EAAKjF,MAAM6e,KAAKkX,MAAM+d,kBAAkBP,EAAeQ,OAAO,KAAO,KAC5IV,EAAWW,YAAWnC,IAAiB2B,IAAc3B,GAAiB2B,EACtE9C,EAAI/iC,KAAK0lC,GAZ4B,yBAAAoB,EAAAliC,SAAAiiC,EAAAz0C,SAAjC,gBAAA20C,GAAA,OAAAH,EAAA9hC,MAAA1S,KAAA2S,YAAA,IAxGU,aAwHds/B,GAA2BA,EAAwBpnC,MAAQonC,EAAwBpnC,KAAKsoC,QAAgE,oBAA/ClB,EAAwBpnC,KAAKsoC,OAAO5hC,QAxH/H,CAAAohC,EAAAthC,KAAA,gBAyHVohC,EAAaR,EAAwBpnC,KAAKsoC,OAAO5hC,OAAO,SAAAC,GAAE,OAAK8gC,EAAiB7d,SAASjjB,EAAG3J,KAAK0F,gBAAkBiE,EAAG9E,KAAKa,gBAAkByjC,EAAqB1jC,QAAQC,gBAAkBiE,EAAG4d,MAAM7hB,cAAcgnC,MAAMhC,IAA0B/gC,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,gBAzHpRolC,EAAAthC,KAAA,GA0HVnM,EAAKwL,aAAa+hC,EAAlB,eAAAmC,EAAAj1C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA8B,SAAA+jC,EAAOrjC,GAAP,IAAArH,EAAAmpC,EAAA,OAAAtiB,EAAA7wB,EAAA+Q,KAAA,SAAA4jC,GAAA,cAAAA,EAAA1jC,KAAA0jC,EAAAzjC,MAAA,OAC5BlH,EAAcxK,OAAO2R,OAAO+/B,GAAwB5xB,KAAK,SAAA+Z,GAAC,MAAe,SAAXA,EAAEr3B,QAChEmxC,EAF4B3zC,OAAA+4B,EAAA,EAAA/4B,CAAA,GAEV6R,IACbG,OAAS,OACpB2hC,EAAWW,UAAW,EACtBX,EAAWxjB,YAAc,OACzBwjB,EAAW3b,UAAY4Z,EACvB+B,EAAWthC,UAAYD,SAASP,EAAGQ,WACnCshC,EAAWK,WAAaxpC,EAAYwpC,WACpCL,EAAWnoC,MAAQjG,EAAKgQ,iBAAiBo+B,EAAWnoC,MAAOhB,EAAYxG,UACvEgtC,EAAI/iC,KAAK0lC,GAVyB,yBAAAwB,EAAAtiC,SAAAqiC,EAAA70C,SAA9B,gBAAA+0C,GAAA,OAAAH,EAAAliC,MAAA1S,KAAA2S,YAAA,IA1HU,aAwIdo/B,GAAcA,EAAWlnC,MAAQknC,EAAWlnC,KAAKA,MAAQknC,EAAWlnC,KAAKA,KAAKmqC,OAASr1C,OAAO2R,OAAOygC,EAAWlnC,KAAKA,KAAKmqC,OAAOhxC,QAxInH,CAAA2uC,EAAAthC,KAAA,gBAyIVL,EAAc+gC,EAAWlnC,KAAKA,KAAKmqC,MAAMzjC,OAAO,SAAAC,GAAE,OAAIA,EAAGyjC,YAAc9C,EAAqB1d,SAASjjB,EAAGyjC,WAAW1nC,iBAzIzGolC,EAAAthC,KAAA,GA2IVnM,EAAKwL,aAAaM,EAAlB,eAAAkkC,EAAAv1C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+B,SAAAqkC,EAAO3jC,GAAP,IAAArH,EAAAirC,EAAAC,EAAA,OAAArkB,EAAA7wB,EAAA+Q,KAAA,SAAAokC,GAAA,cAAAA,EAAAlkC,KAAAkkC,EAAAjkC,MAAA,WAC7BlH,EAAcxK,OAAO2R,OAAO+/B,GAAwB5xB,KAAK,SAAAtV,GAAW,OAAKA,EAAY8oC,YAAczhC,EAAGyjC,YAAc9qC,EAAY8oC,WAAW3lC,QAAQC,gBAAkBiE,EAAGyjC,WAAW1nC,kBACpKpD,EAAY8oC,WAFE,CAAAqC,EAAAjkC,KAAA,eAAAikC,EAAA1zB,OAAA,oBAKnCzX,EAAYmD,QAAUnD,EAAY8oC,WAAW3lC,QACxCyC,GAAkBA,EAAc/L,SAAU+L,EAAc0kB,SAAStqB,EAAYsH,OAN/C,CAAA6jC,EAAAjkC,KAAA,YAQR,cADnB+jC,EAAYlwC,EAAKqwC,mBAAmB/jC,EAAIrH,IAChCwH,OARmB,CAAA2jC,EAAAjkC,KAAA,gBAS/B+jC,EAAUI,QAAS,EACnBJ,EAAUzd,UAAYwZ,EACtBiE,EAAUzB,WAAaxpC,EAAYwpC,WAXJ2B,EAAAjkC,KAAA,GAYJnM,EAAKjF,MAAMw1C,eAAeC,eAAeN,EAAUvtC,MAZ/C,WAY/ButC,EAAUnB,SAZqBqB,EAAAlhC,KAa/BghC,EAAUI,QAAS,GAEfrrC,EAAY+oC,YAAakC,EAAUnB,SAfR,CAAAqB,EAAAjkC,KAAA,gBAgBvBgkC,EAAiBnwC,EAAKjF,MAAMw1C,eAAeE,MAAMxrC,EAAY+oC,UAAU5lC,SAAQ,GAhBxDgoC,EAAAjkC,KAAA,GAiBJgkC,EAAeO,iBAAiBR,EAAUvtC,MAjBtC,QAiB7ButC,EAAUI,OAjBmBF,EAAAlhC,KAAA,QAoB/Bu8B,EAAI/iC,KAAKwnC,GApBsB,yBAAAE,EAAA9iC,SAAA2iC,EAAAn1C,SAA/B,gBAAA61C,GAAA,OAAAX,EAAAxiC,MAAA1S,KAAA2S,YAAA,IA3IU,eAuKpBg+B,EAAMA,EAAIxD,KAAK,SAAChtC,EAAGs5B,GAAJ,OAAW1nB,SAAS5R,EAAE6R,WAAaD,SAAS0nB,EAAEznB,WAAa,GAAK,IAvK3D2gC,EAAA/wB,OAAA,SA2Kb1c,EAAK4a,cAAc8R,EAAe+e,EAAK,MA3K1B,yBAAAgC,EAAAngC,SAAAk+B,EAAA1wC,SAl9CHA,KA+nDnB81C,kBA/nDmBn2C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+nDC,SAAAilC,IAAA,IAAAzlC,EAAAP,EAAAimC,EAAAjc,EAAAkc,EAAAC,EAAA9T,EAAAwO,EAAAQ,EAAA+E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7F,EAAA8F,EAAAC,EAAA7hC,EAAA8hC,EAAAC,EAAAjkC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA2lC,GAAA,cAAAA,EAAAzlC,KAAAylC,EAAAxlC,MAAA,UAAOf,EAAPsmC,EAAA5yC,OAAA,QAAA0qB,IAAAkoB,EAAA,IAAAA,EAAA,GAAwB7mC,EAAxB6mC,EAAA5yC,OAAA,QAAA0qB,IAAAkoB,EAAA,GAAAA,EAAA,GAAwC,GAAIZ,EAA5CY,EAAA5yC,OAAA,QAAA0qB,IAAAkoB,EAAA,IAAAA,EAAA,IAClBtmC,EAAUA,GAAoBpL,EAAKjF,MAAMqQ,UAExBP,GAAkBA,EAAc/L,OAH/B,CAAA6yC,EAAAxlC,KAAA,eAAAwlC,EAAAj1B,OAAA,SAIT,IAJS,UAOlBtR,EAAUA,EAAQ/C,cAEdwsB,EAAU,GACVkc,EAAU,KACVC,EAAe,KACb9T,EAAkBl9B,EAAK8uB,yBAEvB4c,EAAe1rC,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,cAGlD4c,UAAWue,EAAaiC,UAAUzQ,GAjBjC,CAAAyU,EAAAxlC,KAAA,YAkBV+/B,EAAiBR,EAAaiC,UAAUzQ,GAG9C8T,EAAY,GAAAvvC,OAAMyqC,EAAN,YAAAzqC,OAA+B2J,EAA/B,mDAAA3J,OAAwFiqC,EAAa/pC,QACjHovC,EAAU/wC,EAAK4xC,iBAAiBZ,KAGjBD,EAAQprC,MAAQorC,EAAQprC,KAAKA,MAAQorC,EAAQprC,KAAKA,KAAKmqC,OAASr1C,OAAO2R,OAAO2kC,EAAQprC,KAAKA,KAAKmqC,OAAOhxC,QAzBtG,CAAA6yC,EAAAxlC,KAAA,gBA2BR8kC,EAAax2C,OAAO2R,OAAO2kC,EAAQprC,KAAKA,KAAKmqC,OAAOhxC,OACpDoyC,EAAez2C,OAAO2R,OAAO2kC,EAAQprC,KAAKA,KAAKmqC,OAAOrgC,MACtD0hC,EAAwBD,GAAgBA,EAAaW,aAAehlC,SAASqkC,EAAaW,cAAgB,EAAI,EAE9GT,EA/BQ,GAAA3vC,OA+BuByqC,EA/BvB,YAAAzqC,OA+BgD2J,EA/BhD,oDAAA3J,OA+B0GwvC,GA/B1GU,EAAAxlC,KAAA,GAgCQnM,EAAK6tC,kBAAkBuD,EAA2B,IAhC1D,cAgCVC,EAhCUM,EAAAziC,OAkCGmiC,EAAU1rC,KAAKA,KAAKmqC,OAASuB,EAAU1rC,KAAKA,KAAKmqC,MAAMhxC,QAlC1D,CAAA6yC,EAAAxlC,KAAA,gBAAAwlC,EAAAxlC,KAAA,GAmCMnM,EAAK8xC,iBAAiBT,EAAU1rC,KAAKA,KAAKmqC,MAAOjlC,GAnCvD,SAmCZwmC,EAnCYM,EAAAziC,OAsCKzU,OAAO2R,OAAOilC,GAAWvyC,SAElCwyC,EAAqB72C,OAAO2R,OAAOilC,GAAWzwC,IAAI,SAAAsP,GAAM,OAAKrD,SAASqD,EAAO2hC,gBACvDllC,KAAKqE,IAALxD,MAAAb,KAAIlS,OAAAmgC,EAAA,EAAAngC,CAAQ62C,KAGbH,IAEzB12C,OAAO2R,OAAOilC,GAAWtyC,QAAQ,SAACuN,GAChB7R,OAAOoE,KAAKkyC,EAAQprC,KAAKA,KAAKmqC,OAAOvgB,SAASjjB,EAAGylC,WAE/DhB,EAAQprC,KAAKA,KAAKmqC,MAAMxjC,EAAGylC,SAAWzlC,KAK1CtM,EAAKgyC,wBAAwBhB,EAAcD,EAAQprC,KAAKA,KAAKmqC,SAtDrD,QAAA6B,EAAAxlC,KAAA,iBA2Dd4kC,EAAU,KA3DI,WA8DZtF,EAAMsF,EAEND,GACFve,QAAQqc,IAAI,cAAenD,GAGxBA,EApEW,CAAAkG,EAAAxlC,KAAA,gBAAAwlC,EAAAxlC,KAAA,GAsEFnM,EAAKiyC,YAAYjB,GAtEf,YAsEdvF,EAtEckG,EAAAziC,OA0EDu8B,EAAI9lC,MAAsC,IAA9BkH,SAAS4+B,EAAI9lC,KAAK+G,QA1E7B,CAAAilC,EAAAxlC,KAAA,SA2ERolC,EAAe,EACfC,GAAgB,EA5ER,eAAAG,EAAAxlC,KAAA,GA8EJnM,EAAKw/B,aAAa,KA9Ed,eAAAmS,EAAAxlC,KAAA,GA+EEnM,EAAKiyC,YAAYjB,GA/EnB,QA+EVvF,EA/EUkG,EAAAziC,KAgFVqiC,IACAC,KAAgB/F,IAAOA,EAAI9lC,OAAOkH,SAAS4+B,EAAI9lC,KAAK+G,QAjF1C,WAmFH6kC,EAAe,IAAMC,EAnFlB,CAAAG,EAAAxlC,KAAA,iBAuFVs/B,GAAOA,EAAI9lC,MAAQkH,SAAS4+B,EAAI9lC,KAAK+G,QAAU,IAC3CiD,EAAY9C,SAASe,KAAK84B,MAAQ,KAElC+K,EAAc,CAClB9rC,KAAM,CACJA,KAAK8lC,EAAI9lC,MAEXgK,aAEF3P,EAAKkyC,mCAAmC,yBAA0BlB,EAAcS,IAhGpE,aAqGZhG,GAAOA,EAAI9lC,MAAQ8lC,EAAI9lC,KAAKA,MAAQ8lC,EAAI9lC,KAAKA,KAAKmqC,OArGtC,CAAA6B,EAAAxlC,KAAA,SAsGd0oB,EAAU4W,EAAI9lC,KAAKA,KAAKmqC,MAtGV6B,EAAAxlC,KAAA,wBAAAwlC,EAAAj1B,OAAA,SAwGP,IAxGO,eAAAi1B,EAAAj1B,OAAA,SA4GX,CACLmY,UACAkc,UACAC,iBA/GgB,yBAAAW,EAAArkC,SAAAujC,EAAA/1C,SA/nDDA,KAivDnBq3C,oBAjvDmB13C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAivDG,SAAAwmC,IAAA,IAAAhnC,EAAAinC,EAAAC,EAAAznC,EAAAimC,EAAAniC,EAAA4jC,EAAArV,EAAAyO,EAAA9W,EAAAkc,EAAAC,EAAA1E,EAAAkG,EAAArB,EAAAsB,EAAApB,EAAAC,EAAA7F,EAAAiH,EAAAjlC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA2mC,GAAA,cAAAA,EAAAzmC,KAAAymC,EAAAxmC,MAAA,UAAOf,EAAPsnC,EAAA5zC,OAAA,QAAA0qB,IAAAkpB,EAAA,IAAAA,EAAA,GAAwBL,EAAxBK,EAAA5zC,OAAA,QAAA0qB,IAAAkpB,EAAA,GAAAA,EAAA,GAA2C,EAAGJ,EAA9CI,EAAA5zC,OAAA,QAAA0qB,IAAAkpB,EAAA,GAAAA,EAAA,GAA+D,SAAU7nC,EAAzE6nC,EAAA5zC,OAAA,QAAA0qB,IAAAkpB,EAAA,GAAAA,EAAA,GAAyF,GAAI5B,EAA7F4B,EAAA5zC,OAAA,QAAA0qB,IAAAkpB,EAAA,IAAAA,EAAA,IACpBtnC,EAAUA,GAAoBpL,EAAKjF,MAAMqQ,UAExBP,GAAkBA,EAAc/L,OAH7B,CAAA6zC,EAAAxmC,KAAA,eAAAwmC,EAAAj2B,OAAA,SAIX,IAJW,UAOpBtR,EAAUA,EAAQ/C,cAEZsG,EAAmB3O,EAAKjF,MAAM4T,iBAG9B4jC,EAAuBvyC,EAAKuQ,gBAAgB,CAAC,UAAW,qBAC9D8hC,EAAmB1lC,KAAKqE,IAAIuhC,EAAsBF,GAE5CnV,EAAkBl9B,EAAK8uB,uBACvB6c,EAAgB3rC,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,cAEhEskB,EAAU,GACVkc,EAAU,KACVC,EAAe,MAGfrF,EAAcxe,UAAWwe,EAAcgC,UAAUzQ,GAvBjC,CAAAyV,EAAAxmC,KAAA,YAwBZmgC,EAAkBX,EAAcgC,UAAUzQ,GAGhD8T,EAAY,GAAAvvC,OAAM6qC,EAAN,cAAA7qC,OAAkCkN,EAAlC,2CAAAlN,OAA4F2J,EAA5F,gBAAA3J,OAAkH8wC,EAAlH,cAAA9wC,OAAmJ6wC,EAAnJ,gBACZvB,EAAU/wC,EAAK4xC,iBAAiBZ,KAGjBD,EAAQprC,KAAKsoC,QAAUxzC,OAAO2R,OAAO2kC,EAAQprC,KAAKsoC,QAAQnvC,QA/BvD,CAAA6zC,EAAAxmC,KAAA,gBAiCVqmC,EAAqB/3C,OAAO2R,OAAO2kC,EAAQprC,KAAKsoC,QAAQrtC,IAAI,SAAA0L,GAAE,OAAKO,SAASP,EAAG+R,eAC/E8yB,EAAwBxkC,KAAKqE,IAALxD,MAAAb,KAAIlS,OAAAmgC,EAAA,EAAAngC,CAAQ+3C,IAEpCC,EApCU,GAAAhxC,OAoCsB6qC,EApCtB,cAAA7qC,OAoCkDkN,EApClD,2CAAAlN,OAoC4G2J,EApC5G,gBAAA3J,OAoCkI0vC,EApClI,cAAA1vC,OAoCoK6wC,EApCpK,aAAAK,EAAAxmC,KAAA,GAsCMnM,EAAK8tC,wBAAwB2E,EAA4B9G,EAAc9sC,KAAM,IAtCnF,cAsCZwyC,EAtCYsB,EAAAzjC,OAwCCmiC,EAAU1rC,KAAKsoC,QAAUoD,EAAU1rC,KAAKsoC,OAAOnvC,QAxChD,CAAA6zC,EAAAxmC,KAAA,gBAAAwmC,EAAAxmC,KAAA,GA0CInM,EAAK4yC,kBAAkBvB,EAAU1rC,KAAKsoC,OAAQpjC,GAAe,GAAM,GA1CvE,SA0CdwmC,EA1CcsB,EAAAzjC,OA4CGzU,OAAO2R,OAAOilC,GAAWvyC,SAElCwyC,EAAqB72C,OAAO2R,OAAOilC,GAAWzwC,IAAI,SAAAsP,GAAM,OAAKrD,SAASqD,EAAOmO,eACvD1R,KAAKqE,IAALxD,MAAAb,KAAIlS,OAAAmgC,EAAA,EAAAngC,CAAQ62C,KAGbH,IAEzB12C,OAAO2R,OAAOilC,GAAWtyC,QAAQ,SAACuN,GAChB7R,OAAOoE,KAAKkyC,EAAQprC,KAAKsoC,QAAQ1e,SAASjjB,EAAGs8B,WAE3DmI,EAAQprC,KAAKsoC,OAAO3hC,EAAGs8B,SAAWt8B,KAKtCtM,EAAKgyC,wBAAwBhB,EAAcD,EAAQprC,KAAKsoC,UA5D9C,QAAA0E,EAAAxmC,KAAA,iBAiEhB4kC,EAAU,KAjEM,WAoEdtF,EAAMsF,EAEND,GACFve,QAAQqc,IAAI,cAAenD,GAGxBA,EA1Ea,CAAAkH,EAAAxmC,KAAA,gBAAAwmC,EAAAxmC,KAAA,GA4EJnM,EAAK8tC,wBAAwBkD,EAAcrF,EAAc9sC,KAAM,GA5E3D,QA4EhB4sC,EA5EgBkH,EAAAzjC,KAAA,aA+Gdu8B,GAAOA,EAAI9lC,MAAQ8lC,EAAI9lC,KAAKsoC,QA/Gd,CAAA0E,EAAAxmC,KAAA,SAgHhB0oB,EAAU4W,EAAI9lC,KAAKsoC,OAhHH0E,EAAAxmC,KAAA,wBAAAwmC,EAAAj2B,OAAA,SAkHT,IAlHS,eAAAi2B,EAAAj2B,OAAA,SAsHb,CACLmY,UACAkc,UACAC,iBAzHkB,yBAAA2B,EAAArlC,SAAA8kC,EAAAt3C,SAjvDHA,KA62DnBijC,YA72DmBtjC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA62DL,SAAAinC,IAAA,IAAAznC,EAAAinC,EAAAC,EAAAznC,EAAAgqB,EAAAie,EAAArlC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA+mC,GAAA,cAAAA,EAAA7mC,KAAA6mC,EAAA5mC,MAAA,cAAOf,EAAP0nC,EAAAh0C,OAAA,QAAA0qB,IAAAspB,EAAA,IAAAA,EAAA,GAAwBT,EAAxBS,EAAAh0C,OAAA,QAAA0qB,IAAAspB,EAAA,GAAAA,EAAA,GAA2C,EAAGR,EAA9CQ,EAAAh0C,OAAA,QAAA0qB,IAAAspB,EAAA,GAAAA,EAAA,GAA+D,SAAUjoC,EAAzEioC,EAAAh0C,OAAA,QAAA0qB,IAAAspB,EAAA,GAAAA,EAAA,GAAyF,GAAzFC,EAAA5mC,KAAA,EACUnM,EAAKmL,gBAAgBC,EAASinC,EAAkBC,EAAgBznC,GAD1E,cACNgqB,EADMke,EAAA7jC,KAAA6jC,EAAAr2B,OAAA,SAGL1c,EAAKgzC,eAAene,EAAShqB,IAHxB,wBAAAkoC,EAAAzlC,SAAAulC,EAAA/3C,SA72DKA,KAk3DnBk3C,wBAA0B,SAACiB,EAAUxH,GACnC,IAAMyH,EAAa,GACnBz4C,OAAOoE,KAAK4sC,GAAK1sC,QAAQ,SAAAsZ,GACvB,IAAM/L,EAAKm/B,EAAIpzB,IACX/L,EAAG+R,aAAiB/R,EAAGI,QAAsC,YAA5BJ,EAAGI,OAAOrE,gBAC7C6qC,EAAW76B,GAAU/L,KAKzB,IAAM6mC,EAAgB,CACpBxtC,KAAM,CACJsoC,OAAQiF,IAIZlzC,EAAKozC,kBAAkBH,GAAU,EAAOE,IAl4DvBr4C,KAo4DnBqQ,gBAp4DmB1Q,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAo4DD,SAAAynC,IAAA,IAAAjoC,EAAAinC,EAAAC,EAAAznC,EAAAimC,EAAAwC,EAAAjzB,EAAAorB,EAAA8H,EAAA1e,EAAAkc,EAAAC,EAAAwC,EAAAC,EAAAhmC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0nC,GAAA,cAAAA,EAAAxnC,KAAAwnC,EAAAvnC,MAAA,OAAOf,EAAPqoC,EAAA30C,OAAA,QAAA0qB,IAAAiqB,EAAA,IAAAA,EAAA,GAAwBpB,EAAxBoB,EAAA30C,OAAA,QAAA0qB,IAAAiqB,EAAA,GAAAA,EAAA,GAA2C,EAAGnB,EAA9CmB,EAAA30C,OAAA,QAAA0qB,IAAAiqB,EAAA,GAAAA,EAAA,GAA+D,SAAU5oC,EAAzE4oC,EAAA30C,OAAA,QAAA0qB,IAAAiqB,EAAA,GAAAA,EAAA,GAAyF,GAAI3C,EAA7F2C,EAAA30C,OAAA,QAAA0qB,IAAAiqB,EAAA,IAAAA,EAAA,GAEZH,EAAa,KACXjzB,EAAiBrgB,EAAKsd,qBAHZo2B,EAAAlmB,GAKRnN,EAAec,SALPuyB,EAAAvnC,KAMT,YANSunC,EAAAlmB,GAAA,IAAAkmB,EAAAlmB,GAAA,yBAAAkmB,EAAAvnC,KAAA,GAOOnM,EAAK4wC,kBAAkBxlC,EAASP,EAAeimC,GAPtD,eAOZwC,EAPYI,EAAAxkC,KAAAwkC,EAAAh3B,OAAA,2BAAAg3B,EAAAvnC,KAAA,GAWOnM,EAAKmyC,oBAAoB/mC,EAASinC,EAAkBC,EAAgBznC,EAAeimC,GAX1F,eAWZwC,EAXYI,EAAAxkC,KAAAwkC,EAAAh3B,OAAA,uBAgBZ+uB,EAAM,IAEN6H,EAlBY,CAAAI,EAAAvnC,KAAA,YAoBZ0oB,GApBY0e,EAuBVD,GAHFze,QACAkc,EArBYwC,EAqBZxC,QACAC,EAtBYuC,EAsBZvC,cAGED,EAzBU,CAAA2C,EAAAvnC,KAAA,gBAAAunC,EAAAvnC,KAAA,GA2BAnM,EAAK2zC,iBAAiB9e,EAAShqB,GA3B/B,QA2BZ4gC,EA3BYiI,EAAAxkC,KAAAwkC,EAAAvnC,KAAA,iBA6BNqnC,EAAqB/4C,OAAOoE,KAAKmB,EAAKjF,MAAMmQ,iBA7BtCwoC,EAAAE,GA+BJvzB,EAAec,SA/BXuyB,EAAAvnC,KAgCL,YAhCKunC,EAAAE,GAAA,IAAAF,EAAAE,GAAA,yBAAAF,EAAAvnC,KAAA,GAiCInM,EAAK8xC,iBAAiBjd,EAAS2e,GAjCnC,eAiCR/H,EAjCQiI,EAAAxkC,KAAAwkC,EAAAh3B,OAAA,2BAAAg3B,EAAAvnC,KAAA,GAsCInM,EAAK4yC,kBAAkB/d,EAAS2e,GAtCpC,eAsCR/H,EAtCQiI,EAAAxkC,KAAAwkC,EAAAh3B,OAAA,oBA2CR+uB,GAAOhxC,OAAOoE,KAAK4sC,GAAK3sC,QAC1BkB,EAAKgyC,wBAAwBhB,EAAcvF,GA5CjC,eAAAiI,EAAAh3B,OAAA,SAmDTjiB,OACJ2R,OAAOq/B,GACPp/B,OAAO,SAAAC,GAAE,OAAKA,EAAGC,OAAS1B,EAAc0kB,SAASjjB,EAAGC,MAAMiE,iBAC1Dy3B,KAAK,SAAChtC,EAAGs5B,GAAJ,OAAWt5B,EAAE6R,UAAYynB,EAAEznB,WAAa,EAAI,KAtDpC,yBAAA4mC,EAAApmC,SAAA+lC,EAAAv4C,SAp4DCA,KA47DnB8yC,6BA57DmBnzC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA47DY,SAAAioC,IAAA,IAAAC,EAAA,OAAAhoB,EAAA7wB,EAAA+Q,KAAA,SAAA+nC,GAAA,cAAAA,EAAA7nC,KAAA6nC,EAAA5nC,MAAA,cACvB2nC,EAAmB,IAAI9zC,EAAKjF,MAAMi5C,YAAY13B,IAAI23B,SACtD,CACE,CACEC,UAAU,EACVC,OAAQ,GACRl3C,KAAM,cACNm3C,QAAS,CACP,CACEC,aAAc,UACdp3C,KAAM,GACNoB,KAAM,YAGVi2C,SAAS,EACTC,gBAAiB,OACjBl2C,KAAM,aAGV,8CAnB2B01C,EAAAvmB,GAsBtB3gB,SAtBsBknC,EAAA5nC,KAAA,EAsBP2nC,EAAiBU,QAAQC,cAAcC,OAtBhC,cAAAX,EAAAH,GAAAG,EAAA7kC,KAAA6kC,EAAAr3B,OAAA,YAAAq3B,EAAAvmB,IAAAumB,EAAAH,KAAA,wBAAAG,EAAAzmC,SAAAumC,EAAA/4C,SA57DZA,KAo9DnB65C,gCAp9DmB,eAAAC,EAAAn6C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAo9De,SAAAipC,EAAOx8B,GAAP,IAAAy8B,EAAAC,EAAAnI,EAAAtgC,EAAAiiC,EAAA,OAAAziB,EAAA7wB,EAAA+Q,KAAA,SAAAgpC,GAAA,cAAAA,EAAA9oC,KAAA8oC,EAAA7oC,MAAA,cAAA6oC,EAAA7oC,KAAA,EAItB4P,QAAQqD,IAAI,CACpBpf,EAAK4tC,+BACL5tC,EAAKjF,MAAMi5C,YAAY13B,IAAI24B,sBAAsB58B,KANnB,cAAAy8B,EAAAE,EAAA9lC,KAAA6lC,EAAAt6C,OAAA6yB,EAAA,EAAA7yB,CAAAq6C,EAAA,GAE9BlI,EAF8BmI,EAAA,GAG9BzoC,EAH8ByoC,EAAA,GAS1BxG,EAAcjiC,GAAMA,EAAGylB,MAAQzlB,EAAGylB,KAAKjzB,QAAUkB,EAAKjF,MAAM6e,KAAKkX,MAAQ9wB,EAAKjF,MAAM6e,KAAKkX,MAAM+d,kBAAkBviC,EAAGylB,KAAKzlB,EAAGylB,KAAKjzB,OAAS,GAAGgwC,OAAO,IAAM,KAThIkG,EAAAt4B,OAAA,SAWzB6xB,EAAc1hC,SAAS+/B,IAAkB//B,SAAS0hC,GAAe,MAXxC,wBAAAyG,EAAA1nC,SAAAunC,EAAA/5C,SAp9Df,gBAAAo6C,GAAA,OAAAN,EAAApnC,MAAA1S,KAAA2S,YAAA,GAAA3S,KAi+DnBk4C,eAj+DmB,eAAAmC,EAAA16C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAi+DF,SAAAwpC,EAAOvgB,GAAP,IAAAhqB,EAAAK,EAAAyyB,EAAA0X,EAAA5nC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAspC,GAAA,cAAAA,EAAAppC,KAAAopC,EAAAnpC,MAAA,UAAgBtB,EAAhBwqC,EAAAv2C,OAAA,QAAA0qB,IAAA6rB,EAAA,GAAAA,EAAA,GAAgC,GAE1CxgB,GAAYA,EAAQ/1B,QAAqC,oBAApB+1B,EAAQ91B,QAFnC,CAAAu2C,EAAAnpC,KAAA,eAAAmpC,EAAA54B,OAAA,SAGN,IAHM,cAMTxR,EAAkBlL,EAAKjF,MAAMmQ,gBAAkBlL,EAAKjF,MAAMmQ,gBAAkBlL,EAAK89B,0BAElFjzB,GAAkBA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAKqM,KAGxByyB,EAAW9I,EAAQxoB,OAAO,SAAAC,GAAE,OAAKzB,EAAc0kB,SAASjjB,EAAGC,QAAU,CAAC,UAAW,WAAY,aAAc,cAAe,kBAAmB,mBAAoB,iBAAkB,mBAAmBgjB,SAASjjB,EAAGG,WAE3M3N,QACX6+B,EAASsK,KAAK,SAAChtC,EAAGs5B,GAAJ,OAAWt5B,EAAE6R,UAAYynB,EAAEznB,WAAa,EAAI,IAf7CwoC,EAAA54B,OAAA,SAkBRihB,GAlBQ,wBAAA2X,EAAAhoC,SAAA8nC,EAAAt6C,SAj+DE,gBAAAy6C,GAAA,OAAAJ,EAAA3nC,MAAA1S,KAAA2S,YAAA,GAAA3S,KAq/DnBu1C,mBAAqB,SAAC/jC,GAA2B,IAAvBrH,EAAuBwI,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KACtCxI,EAAcA,GAAexK,OAAO2R,OAAOpM,EAAKjF,MAAMmQ,iBAAiBqP,KAAK,SAAAtV,GAAW,OAAIqH,EAAGyjC,YAAc9qC,EAAYmoB,KAAKhlB,QAAQC,gBAAkBiE,EAAGyjC,WAAW1nC,gBAErK,IAAMmtC,EAAkBlpC,EAAGmpC,YAAcxwC,GAAeA,EAAYmoB,KAAO9gB,EAAGmpC,WAAWl7B,KAAK,SAAAq0B,GAAG,OAAIA,EAAI8G,eAAertC,gBAAkBpD,EAAYmD,QAAQC,eAAiBumC,EAAI+G,SAAgC,aAArB/G,EAAI+G,QAAQ14C,MAAuB2xC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,SAAfA,EAAM34C,OAAiBgJ,MAAMoC,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBumC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,OAAfA,EAAM34C,OAAegJ,MAAMoC,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,gBAAiB,KACvcwtC,EAAiBvpC,EAAGmpC,YAAcxwC,GAAeA,EAAYmoB,KAAO9gB,EAAGmpC,WAAWl7B,KAAK,SAAAq0B,GAAG,OAAIA,EAAI8G,eAAertC,gBAAkBpD,EAAYmD,QAAQC,eAAiBumC,EAAI+G,SAAgC,aAArB/G,EAAI+G,QAAQ14C,MAAuB2xC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,OAAfA,EAAM34C,OAAegJ,MAAMoC,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBumC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,SAAfA,EAAM34C,OAAiBgJ,MAAMoC,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,gBAAiB,KACtcytC,EAAmBxpC,EAAGmpC,YAAcxwC,GAAeA,EAAYmD,QAAUkE,EAAGmpC,WAAWl7B,KAAK,SAAAq0B,GAAG,OAAIA,EAAI8G,eAAertC,gBAAkBpD,EAAYmD,QAAQC,eAAiBumC,EAAI+G,SAAgC,aAArB/G,EAAI+G,QAAQ14C,MAAuB2xC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,SAAfA,EAAM34C,OAAiBgJ,MAAMoC,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAA+F,+CAA9EumC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,OAAfA,EAAM34C,OAAegJ,MAAMoC,gBAAkE,KAEjd0tC,EAAe9wC,EAAYxG,SAC3BmsB,EAAc3lB,EAAYhI,MAAQgI,EAAYsH,MAC9Cq8B,EAAO,GAAAnnC,OAAM6K,EAAGylC,QAAT,KAAAtwC,OAAoBmpB,GAC3BorB,EAAY/wC,EAAYmoB,KAAOnoB,EAAYmoB,KAAK7gB,MAAQ,KACxDE,EAAS+oC,EAAkB,UAAaK,EAAiB,SAAYC,EAAmB,WAAa,KACrGhpC,EAAYD,SAAS7M,EAAK2N,YAAYrB,EAAG2pC,iBAAiBC,GAAG1nC,UAAY,KAE3E2nC,EAAW,KACf,OAAQ1pC,GACN,IAAK,UACH0pC,EAAWX,EACX,MACF,IAAK,SACHW,EAAWN,EACX,MACF,IAAK,WACHM,EAAWL,EAaf,MAAO,CACL/jB,KARWzlB,EAAGmpC,WAAanpC,EAAGmpC,WAAW70C,IAAI,SAAAguC,GAAG,MAAK,CACrDE,OAAQF,EAAIwH,kBACR,GAOJnwC,MANYkwC,EAAWn2C,EAAKgQ,iBAAiBmmC,EAASR,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,UAAfA,EAAM34C,OAAkBgJ,MAAO8vC,GAAgB/1C,EAAKgQ,iBAAiB1D,EAAGrG,MAAO8vC,GAOlKtpC,SACAm8B,UACA97B,YACAkpC,YACAprB,cACAvM,YAVkB/R,EAAGmpC,YAAcnpC,EAAGmpC,WAAW32C,OAASwN,EAAGmpC,WAAW,GAAG5D,aAAe,KAW1FkE,eACApzC,KAAM2J,EAAGylC,QACThe,GAAIznB,EAAGyjC,WACPrjC,OAAQ,YACRlF,KAAM8E,EAAG+pC,aACTC,QAAShqC,EAAGiqC,UACZl5B,SAAU/Q,EAAGkqC,UACbjqC,MAAOtH,EAAYsH,MACnBopB,gBAAiB1wB,EAAYmD,UA1iEdtN,KA6iEnBg3C,iBA7iEmB,eAAA2E,EAAAh8C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6iEA,SAAA8qC,EAAOjL,EAAK5gC,GAAZ,IAAA8rC,EAAAC,EAAA/J,EAAAgK,EAAAppC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA8qC,GAAA,cAAAA,EAAA5qC,KAAA4qC,EAAA3qC,MAAA,UAA2BwqC,IAA3BE,EAAA/3C,OAAA,QAAA0qB,IAAAqtB,EAAA,KAAAA,EAAA,GACXD,EAAsBn8C,OAAO2R,OAAOpM,EAAKjF,MAAMmQ,iBAAiBtK,IAAI,SAAAqE,GAAW,OAAIA,EAAYmoB,KAAKhlB,QAAQC,gBAC5GwkC,EAAapB,EAAMA,EAAIp/B,OAAO,SAAAC,GAAE,OAAIA,EAAGyjC,YAAc6G,EAAoBrnB,SAASjjB,EAAGyjC,WAAW1nC,iBAAgB03B,OAAO,SAACpV,EAAQre,GACpI,IAAMyqC,EAAW/2C,EAAKqwC,mBAAmB/jC,GAEzC,OADAqe,EAAOosB,EAASnO,SAAWmO,EACpBpsB,GACN,IAAM,IAEFgsB,EARU,CAAAG,EAAA3qC,KAAA,eAAA2qC,EAAA3qC,KAAA,EAQkBnM,EAAK22C,oBAAoB9J,EAAYhiC,GARvD,OAAAisC,EAAAtpB,GAAAspB,EAAA5nC,KAAA4nC,EAAA3qC,KAAA,gBAAA2qC,EAAAtpB,GAQwEqf,EARxE,eAAAiK,EAAAp6B,OAAA,SAAAo6B,EAAAtpB,IAAA,yBAAAspB,EAAAxpC,SAAAopC,EAAA57C,SA7iEA,gBAAAk8C,EAAAC,GAAA,OAAAR,EAAAjpC,MAAA1S,KAAA2S,YAAA,GAAA3S,KAujEnBo8C,mBAvjEmB,eAAAC,EAAA18C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAujEE,SAAAwrC,EAAOviB,GAAP,IAAAhqB,EAAAwsC,EAAA1D,EAAA2D,EAAA7pC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAurC,GAAA,cAAAA,EAAArrC,KAAAqrC,EAAAprC,MAAA,cAAgBtB,EAAhBysC,EAAAx4C,OAAA,QAAA0qB,IAAA8tB,EAAA,GAAAA,EAAA,GAAgC,GAAID,IAApCC,EAAAx4C,OAAA,QAAA0qB,IAAA8tB,EAAA,KAAAA,EAAA,GAAuD3D,IAAvD2D,EAAAx4C,OAAA,QAAA0qB,IAAA8tB,EAAA,KAAAA,EAAA,GAAAC,EAAAprC,KAAA,EACNnM,EAAK4yC,kBAAkB/d,EAAShqB,EAAewsC,EAAY1D,GADrD,cAAA4D,EAAA76B,OAAA,SAAA66B,EAAAroC,MAAA,wBAAAqoC,EAAAjqC,SAAA8pC,EAAAt8C,SAvjEF,gBAAA08C,GAAA,OAAAL,EAAA3pC,MAAA1S,KAAA2S,YAAA,GAAA3S,KA0jEnB83C,kBA1jEmB,eAAA6E,EAAAh9C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA0jEC,SAAA8rC,EAAO7iB,GAAP,IAAAhqB,EAAAwsC,EAAA1D,EAAAtoC,EAAAssC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxqC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAksC,GAAA,cAAAA,EAAAhsC,KAAAgsC,EAAA/rC,MAAA,UAAgBtB,EAAhBotC,EAAAn5C,OAAA,QAAA0qB,IAAAyuB,EAAA,GAAAA,EAAA,GAAgC,GAAIZ,IAApCY,EAAAn5C,OAAA,QAAA0qB,IAAAyuB,EAAA,KAAAA,EAAA,GAAuDtE,IAAvDsE,EAAAn5C,OAAA,QAAA0qB,IAAAyuB,EAAA,KAAAA,EAAA,GACbj4C,EAAKjF,MAAMqQ,SAAYypB,GAAYA,EAAQ/1B,QAAqC,oBAApB+1B,EAAQ91B,QADvD,CAAAm5C,EAAA/rC,KAAA,eAAA+rC,EAAAx7B,OAAA,SAET,IAFS,UAKb7R,GAAkBA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAKmB,EAAKjF,MAAMmQ,kBAGrCG,EAAe,GACfssC,EAAoB,GACpBC,EAA4B,GAG1BC,EAAmB73C,EAAKuQ,gBAAgB,CAAC,QAAS,gBAClDunC,EAAoB93C,EAAKuQ,gBAAgB,CAAC,QAAS,iBACnDwnC,EAAoB/3C,EAAKuQ,gBAAgB,CAAC,QAAS,sBACnDynC,EAAuBh4C,EAAKuQ,gBAAgB,CAAC,QAAS,oBAI5D1F,EAAc9L,QAAQ,SAAAwN,GACpB,IAAMtH,EAAcjF,EAAKjF,MAAMmQ,gBAAgBqB,GACzC2oB,EAA2Bl1B,EAAKuQ,gBAAgB,CAAC,WAAY,UAAW,UAAW,kBACnF4kB,EAAwBlwB,EAAYmwB,WAAanwB,EAAYmwB,UAAUC,kBAAoBpwB,EAAYmwB,UAAUC,kBAAkBjtB,QAAU,KAC7IktB,EAA4BrwB,EAAYmwB,WAAanwB,EAAYmwB,UAAUC,mBAAqBpwB,EAAYmwB,UAAUC,kBAAkBE,aAAetwB,EAAYmwB,UAAUC,kBAAkBE,aAAe,GAC9M4iB,EAA2Bn4C,EAAKuQ,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,sBAErFilB,EAAiBx1B,EAAKuQ,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,kBAAmBtL,EAAYmoB,KAAK7gB,QAC/GkpB,EAA6BD,GAAkBA,EAAeH,kBAAoBG,EAAeH,kBAAkBjtB,QAAU,KAG7HgwC,EAAmBp4C,EAAKuQ,gBAAgB,CAAC,QAAS,kBAAmBtL,EAAYmoB,KAAK7gB,QAE5FsoB,EAAQ91B,QAAQ,SAAAuN,GACd,IAAIsD,EAAgB3K,EAAYxG,SAC1Bu3C,EAAY/wC,EAAYmoB,KAAK7gB,MAC7B8rC,EAAcxjB,EAAQxoB,OAAO,SAAAisC,GAAC,OAAIA,EAAE31C,OAAS2J,EAAG3J,OAChD41C,EAAeF,EAAYv5C,OAAS,GAAKu5C,EAAYhsC,OAAO,SAAAmsC,GAAG,OAAIA,EAAI7iB,gBAAgBttB,gBAAkBpD,EAAYmD,QAAQC,gBAAevJ,OAAS,EACrJ82B,EAA0C,IAAvByiB,EAAYv5C,QAAgBwN,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,cAC3KwtB,EAA6C,IAAvBwiB,EAAYv5C,QAAgBwN,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,cAC5KowC,EAAqBhjB,GAA8BnpB,EAAG9E,KAAKa,gBAAkBotB,EAA2BptB,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,eAAiBiE,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,cAEnPqwC,EAAsBH,GAAgBF,EAAY99B,KAAK,SAAAi+B,GAAG,OAAIA,EAAIhxC,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,gBAAkBmwC,EAAIzkB,GAAG1rB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,eAAkB6sB,GAA4BsjB,EAAIzkB,GAAG1rB,gBAAkB6sB,EAAyB9sB,QAAQC,eAAiBgwC,EAAYhsC,OAAO,SAAAssC,GAAI,OAAIA,EAAKhjB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,gBAAevJ,OAAS,KAC5Z85C,EAAqBL,GAAgBF,EAAY99B,KAAK,SAAAi+B,GAAG,OAAIA,EAAI7iB,gBAAgBttB,gBAAkBpD,EAAYmD,QAAQC,eAAiBgwC,EAAYhsC,OAAO,SAAAssC,GAAI,OAAIA,EAAKhjB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,gBAAevJ,QAAU05C,EAAIzkB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,gBAExSqtB,EAAgB+iB,GAAuBtjB,IAA0B7oB,EAAG9E,KAAKa,gBAAkB8sB,EAAsB9sB,eAAiBitB,EAA0B10B,IAAI,SAACmF,GAAQ,OAAOA,EAAEsC,gBAAkBknB,SAASjjB,EAAG9E,KAAKa,iBAAmBiE,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,cACtSwwC,EAAiBV,IAA6B7rC,EAAG9E,KAAKa,gBAAkB8vC,EAAyB/vC,QAAQC,eAAiB8vC,EAAyB5iB,aAAa30B,IAAI,SAACmF,GAAQ,OAAOA,EAAEsC,gBAAkBknB,SAASjjB,EAAG9E,KAAKa,iBAAmBiE,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,cACtWytB,EAAcyiB,IAAiB7iB,GAAiBppB,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,gBAAkBiE,EAAGynB,GAAG1rB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,eAAkB6sB,GAA4B5oB,EAAGynB,GAAG1rB,gBAAkB6sB,EAAyB9sB,QAAQC,eAAiBgwC,EAAYhsC,OAAO,SAAAmsC,GAAG,OAAIA,EAAI7iB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,gBAAevJ,OAAS,GACzYi3B,EAAawiB,IAAiB7iB,IAAkBgjB,GAAuBpsC,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmD,QAAQC,eAAiBgwC,EAAYhsC,OAAO,SAAAmsC,GAAG,OAAIA,EAAI7iB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,gBAAevJ,QAAUwN,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,cAC9SywC,EAAeT,EAAYv5C,OAAS,GAAKu5C,EAAYhsC,OAAO,SAAAmsC,GAAG,OAAIvzC,EAAY8C,UAAUnH,IAAI,SAAAvE,GAAC,OAAIA,EAAE+L,QAAQC,gBAAeknB,SAASipB,EAAI7iB,gBAAgBttB,iBAAgBvJ,OAAS,GAAKwN,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,cAGpPwlB,EAAmBuqB,GAAoBA,EAAiBhwC,QAAUgwC,EAAiBhwC,QAAUnD,EAAYmoB,KAAKhlB,QAG9G2wC,EAAUV,EAAY99B,KAAK,SAAAjO,GAAE,OAAKA,EAAGqpB,gBAAgBttB,gBAAkByvC,EAAkB1vC,QAAQC,gBAAkBiE,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,iBAC5N2wC,OAAwBxvB,IAAZuvB,EAEZE,EAAmBD,GAAa1sC,EAAGqpB,gBAAgBttB,gBAAkBwlB,EAAiBxlB,eAAiBiE,EAAGynB,GAAG1rB,gBAAkB0vC,EAAkB3vC,QAAQC,eAAiBiE,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBrI,EAAKwM,MAAMF,EAAGrG,OAAOmK,GAAG,GAChQ8oC,EAAkBF,GAAa1sC,EAAGqpB,gBAAgBttB,gBAAkBwlB,EAAiBxlB,eAAiBiE,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAG9E,KAAKa,gBAAkB0vC,EAAkB3vC,QAAQC,eAAiBrI,EAAKwM,MAAMF,EAAGrG,OAAOmK,GAAG,GAE/P+oC,EAAmBH,GAAa1sC,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGynB,GAAG1rB,gBAAkB2vC,EAAqB5vC,QAAQC,eAAiBrI,EAAKwM,MAAMF,EAAGrG,OAAOmK,GAAG,GACtQgpC,EAAoBJ,GAAa1sC,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAG9E,KAAKa,gBAAkB2vC,EAAqB5vC,QAAQC,eAAiBrI,EAAKwM,MAAMF,EAAGrG,OAAOmK,GAAG,GAEvQipC,EAAeL,GAAa1sC,EAAGqpB,gBAAgBttB,gBAAkByvC,EAAkB1vC,QAAQC,eAAiBiE,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAG9E,KAAKa,gBAAkBwvC,EAAiBzvC,QAAQC,eAAiBrI,EAAKwM,MAAMF,EAAGrG,OAAOmK,GAAG,GACpQkpC,EAAgBN,GAAa1sC,EAAGqpB,gBAAgBttB,gBAAkByvC,EAAkB1vC,QAAQC,eAAiBiE,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGynB,GAAG1rB,gBAAkBwvC,EAAiBzvC,QAAQC,eAAiBrI,EAAKwM,MAAMF,EAAGrG,OAAOmK,GAAG,GAErQmpC,EAAqBjtC,EAAGqpB,gBAAgBttB,gBAAkByvC,EAAkB1vC,QAAQC,gBAAkBixC,IAAkBJ,GAAmE5sC,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,cACxOmxC,EAAoBltC,EAAGqpB,gBAAgBttB,gBAAkByvC,EAAkB1vC,QAAQC,gBAAkBgxC,IAAiBJ,GAAoE3sC,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,cAErOoxC,GAAeT,IAAcpjB,IAAqBkjB,IAAiBF,IAAuBvtC,EAAaiB,EAAG3J,OAAS2J,EAAG9E,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,cAC/O2tB,GAAYgjB,IAAcnjB,IAAwBgjB,IAAmBH,IAAwBrtC,EAAaiB,EAAG3J,OAAS2J,EAAGynB,GAAG1rB,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAAiBiE,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,cAMtP,GAAIutB,GAAoBC,GAAuBH,GAAiBI,GAAeC,GAAcC,GAAYyjB,GAAeX,GAAgBD,GAAkBI,GAAoBC,GAAmBG,GAAgBC,GAAiBC,GAAsBC,GAAqBL,GAAoBC,EAAmB,CAElT,IAAI3sC,EAAS,KACTm8B,EAAUt8B,EAAG3J,KAEbmzB,EACFrpB,EAAS,UACAspB,EACTtpB,EAAS,SACAipB,GAAiBmjB,EAC1BpsC,EAAS,UACAmpB,EACTnpB,EAAS,OACAopB,EACTppB,EAAS,UACAupB,EACTvpB,EAAS,OACAgtC,EACThtC,EAAS,UACAqsC,EACTrsC,EAAS,WACAwsC,EACTxsC,EAAS,UACAysC,EACTzsC,EAAS,WACA4sC,EACT5sC,EAAS,aACA6sC,EACT7sC,EAAS,cACA0sC,EACT1sC,EAAS,iBACA2sC,EACT3sC,EAAS,kBACA+sC,EACT/sC,EAAS,kBACA8sC,IACT9sC,EAAS,oBAGX,IAAIuxB,EAAc,KAoBlB,GAnBIgb,IACFpQ,GAAW,IAAMt8B,EAAGse,YACpBoT,EAAch+B,EAAKgQ,iBAAiB+oC,EAAQ9yC,MAAO6xC,EAAkBr5C,WAGhE+6C,GAAqBD,KACxB3Q,GAAW,IAAMn8B,IAMjBH,EAAGqpB,gBAAgBttB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,cAChEuH,EAAgB,GACPopC,IACTppC,EAAgB/C,SAASP,EAAGypC,eAI1B1qC,EAAau9B,GAEf,OAAQv9B,EAAau9B,GAASn8B,QAC5B,IAAK,UACCpB,EAAau9B,GAASn8B,SAAWA,GAAUspB,IAC7C1qB,EAAau9B,GAAS8Q,WAAa15C,EAAKgQ,iBAAiB1D,EAAGrG,MAAO2J,IAErE,MACF,QACE,IAAKmpC,EAAS,CACZ,IAAMY,EAAWtuC,EAAau9B,GAAS3iC,MAAM+G,KAAKhN,EAAKgQ,iBAAiB1D,EAAGrG,MAAO2J,IAClFvE,EAAau9B,GAAS3iC,MAAQ0zC,QAMpC,GAAIH,GAAqBD,EAClB3B,EAA0BroB,SAASjjB,EAAG3J,KAAK0F,iBAC9C21B,EAAch+B,EAAKgQ,iBAAiB1D,EAAGrG,MAAO6xC,EAAkBr5C,UAChEk5C,EAAkBjvC,KAAlBjO,OAAA+4B,EAAA,EAAA/4B,CAAA,GAA4B6R,EAA5B,CAAgCs8B,UAASr8B,QAAOypC,YAAWhY,cAAavxB,SAAQxG,MAAOjG,EAAKgQ,iBAAiB1D,EAAGrG,MAAO2J,YAWzH,OARAvE,EAAau9B,GAAbnuC,OAAA+4B,EAAA,EAAA/4B,CAAA,GAA8B6R,EAA9B,CAAkCs8B,UAASr8B,QAAOypC,YAAWhY,cAAavxB,SAAQxG,MAAOjG,EAAKgQ,iBAAiB1D,EAAGrG,MAAO2J,KAGpHgoC,EAA0BroB,SAASjjB,EAAG3J,KAAK0F,gBAC9CuvC,EAA0BlvC,KAAK4D,EAAG3J,KAAK0F,eAIjCoE,GACN,IAAK,WACH,IAAMmtC,EAAOvB,EAAYhsC,OAAO,SAAAmsC,GAAG,OAAKA,IAAQlsC,IAChD,GAAIstC,EAAK96C,OAAS,EAAG,CACnB,IAAM05C,EAAMoB,EAAK,GACjBvuC,EAAau9B,GAASiR,eAAiB75C,EAAKgQ,iBAAiBwoC,EAAIvyC,MAAOuyC,EAAIzC,cAC5E1qC,EAAau9B,GAAShe,YAAc4tB,EAAI5tB,YAE1C,MACF,IAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,cACL,IAAK,iBACL,IAAK,kBACHvf,EAAau9B,GAAShe,YAAcre,QAWlDorC,EAAkB54C,QAAQ,SAAAuN,GACnBsrC,EAA0BroB,SAASjjB,EAAG3J,KAAK0F,iBAC9CgD,EAAaiB,EAAGs8B,SAAWt8B,MAI3B+qC,EAxMc,CAAAa,EAAA/rC,KAAA,gBAAA+rC,EAAA/rC,KAAA,GAyMKnM,EAAK22C,oBAAoBtrC,EAAcR,EAAe8oC,GAzM3D,QAyMhBtoC,EAzMgB6sC,EAAAhpC,KAAA,eAAAgpC,EAAAx7B,OAAA,SA8MXrR,GA9MW,yBAAA6sC,EAAA5qC,SAAAoqC,EAAA58C,SA1jED,gBAAAg/C,GAAA,OAAArC,EAAAjqC,MAAA1S,KAAA2S,YAAA,GAAA3S,KA0wEnBi/C,qBAAuB,SAACC,EAAOl+B,GAE7B,IAAM1Q,EAAUpL,EAAKjF,OAASiF,EAAKjF,MAAMqQ,QAAUpL,EAAKjF,MAAMqQ,QAAU,KAClErG,EAAgB/E,EAAKjF,OAASiF,EAAKjF,MAAMgK,cAAgB/E,EAAKjF,MAAMgK,cAAgB,KAE1F,IAAKqG,IAAYrG,IAAkB/E,EAAKjF,MAAMmQ,kBAAoBlL,EAAKjF,MAAMmQ,gBAAgBnG,GAC3F,OAAO,EAGT,IACMk3B,EADcj8B,EAAKjF,MAAMmQ,gBAAgBnG,GAClBqoB,KAAK7gB,MAE9B0tC,EAAYj6C,EAAKk6C,wBAChBD,EAAU7uC,KACb6uC,EAAU7uC,GAAW,IAGlB6uC,EAAU7uC,GAAS6wB,KACtBge,EAAU7uC,GAAS6wB,GAAY,IAGjCge,EAAU7uC,GAAS6wB,GAAU+d,GAASl+B,EACtC9b,EAAKm6C,yBAAyBF,IAhyEbn/C,KAkyEnBq/C,yBAA2B,SAAA19C,GACzBuD,EAAKsf,gBAAgB,eAAgB3U,KAAKC,UAAUnO,KAnyEnC3B,KAwyEnBo/C,sBAAwB,WAA2D,IAA1D9uC,EAA0DqC,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAhD,KAAMwuB,EAA0CxuB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAA/B,KAAM1I,EAAyB0I,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAClEwsC,EAAYj6C,EAAKo6C,cAAc,gBAAgB,EAAM,IACrD39C,EAAeuD,EAAKjF,MAAM0B,aAAXhC,OAAA+4B,EAAA,EAAA/4B,CAAA,GAA+BuF,EAAKjF,MAAM0B,cAAiB,GAC5EkuB,EAASsvB,EAsBb,OApBI7uC,IACE6uC,EAAU7uC,IACZuf,EAASsvB,EAAU7uC,GACf6wB,IACFtR,EAASA,EAAOsR,GAAYtR,EAAOsR,GAAY,GAE3Cl3B,GACFtK,OAAOoE,KAAKpC,GAAcsC,QAAQ,SAAAi7C,GAChC,IAAM1tC,EAAK7P,EAAau9C,IACnBrvB,EAAOqvB,IAAU1tC,EAAGC,OAASD,EAAGC,MAAMiE,gBAAkBzL,EAAcyL,gBACzEma,EAAOqvB,GAASv9C,EAAau9C,QAMrCrvB,EAAS,IAINA,GAj0EU7vB,KAm0EnB67C,oBAn0EmB,eAAA0D,EAAA5/C,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAm0EG,SAAA0uC,EAAOjvC,GAAP,IAAAR,EAAA8oC,EAAA4G,EAAAN,EAAAO,EAAAC,EAAAC,EAAA7C,EAAA8C,EAAAltC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA4uC,GAAA,cAAAA,EAAA1uC,KAAA0uC,EAAAzuC,MAAA,cAAqBtB,EAArB8vC,EAAA77C,OAAA,QAAA0qB,IAAAmxB,EAAA,GAAAA,EAAA,GAAqC,GAAIhH,IAAzCgH,EAAA77C,OAAA,QAAA0qB,IAAAmxB,EAAA,KAAAA,EAAA,GAEf9vC,GAAkBA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAKmB,EAAKjF,MAAMmQ,kBAGrCqvC,EAAa,GAI4B,kBAHzCN,EAAYj6C,EAAKk6C,yBAGAl6C,EAAKjF,MAAMqQ,WAC9B6uC,EAAUj6C,EAAKjF,MAAMqQ,SAAW,IAI5BovC,EAAoB,GACpBC,EAAsB,GACtBC,EAAuB16C,EAAKuQ,gBAAgB,CAAC,QAAS,oBAC5D9V,OAAOoE,KAAK67C,GAAsB37C,QAAQ,SAAAwN,GACxC,IAAM6rC,EAAmBsC,EAAqBnuC,GACxCsuC,EAAkB76C,EAAKuQ,gBAAgB,CAAC,QAAS,SAAU6nC,EAAiB9gB,UAAU9mB,gBACtFsqC,EAAmBD,EAAgBzyC,QAAQC,cACjDmyC,EAAkBM,GAAoBD,EACtCL,EAAkBM,GAAkBvuC,MAAQ6rC,EAAiB9gB,UAC7DmjB,EAAoB/xC,KAAKoyC,KAGrBjD,EAAmB73C,EAAKuQ,gBAAgB,CAAC,QAAS,gBA3BpCqqC,EAAAzuC,KAAA,GAgCdnM,EAAKwL,aAAaX,EAAlB,eAAAkwC,EAAAtgD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAiC,SAAAovC,EAAOj2C,GAAP,IAAAE,EAAAg3B,EAAA+Z,EAAAiF,EAAAnvC,EAAA,OAAAggB,EAAA7wB,EAAA+Q,KAAA,SAAAkvC,GAAA,cAAAA,EAAAhvC,KAAAgvC,EAAA/uC,MAAA,UAE/BlH,EAAcjF,EAAKjF,MAAMmQ,gBAAgBnG,GACzCk3B,EAAWh3B,EAAYmoB,KAAK7gB,MAC5BypC,EAAY/wC,EAAYmoB,KAAK7gB,MAGoB,kBAA5C0tC,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,KACvCge,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAY,IAGtCgf,EAX+BxgD,OAAA+4B,EAAA,EAAA/4B,CAAA,GAWfw/C,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,MAE9CnwB,EAAcrR,OAAO2R,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,OACxD+G,EAAYhN,OAdM,CAAAo8C,EAAA/uC,KAAA,eAAA+uC,EAAA/uC,KAAA,EAgB7BnM,EAAKwL,aAAaM,EAAlB,eAAAqvC,EAAA1gD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+B,SAAAwvC,EAAO9uC,EAAIzL,GAAX,IAAAm5C,EAAAqB,EAAAjuC,EAAAC,EAAAiuC,EAAArd,EAAAsd,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxD,EAAAyD,EAAAhuB,EAAAiuB,EAAA,OAAAhwB,EAAA7wB,EAAA+Q,KAAA,SAAA+vC,GAAA,cAAAA,EAAA7vC,KAAA6vC,EAAA5vC,MAAA,UAC7B6tC,EAD6B,KAAAv4C,OAChB6K,EAAGQ,UADa,OAE7BuuC,EAAWpB,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAASC,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAAS1tC,EAE/Gc,EAAa,MAEbiuC,EAASjuC,YAAepN,EAAKwM,MAAM6uC,EAASjuC,YAAYhP,QANzB,CAAA29C,EAAA5vC,KAAA,QAOjCiB,EAAapN,EAAKwM,MAAM6uC,EAASjuC,YAPA2uC,EAAA5vC,KAAA,uBAAA4vC,EAAA5vC,KAAA,EASdnM,EAAKo8B,kBAAkBn3B,EAAaqH,EAAG+R,YAAa/R,EAAGQ,WATzC,OASjCM,EATiC2uC,EAAA7sC,KAUjCmsC,EAASjuC,WAAaA,EAVW,QAa/BC,EAAarN,EAAKwM,MAAMF,EAAGrG,OAC3Bq1C,EAAmBluC,EAAW5E,MAAM6E,GAGnCguC,EAASpiC,kBACZoiC,EAASpiC,gBAAkB3M,EAAG3J,MAlBGo5C,EAAAvuB,GAsB3BlhB,EAAGG,OAtBwBsvC,EAAA5vC,KAuB5B,SAvB4B4vC,EAAAvuB,GAAA,GAwB5B,YAxB4BuuB,EAAAvuB,GAAA,GAyB5B,SAzB4BuuB,EAAAvuB,GAAA,GA0B5B,YA1B4BuuB,EAAAvuB,GAAA,GA2B5B,YA3B4BuuB,EAAAvuB,GAAA,GAmC5B,YAnC4BuuB,EAAAvuB,GAAA,GAoC5B,WApC4BuuB,EAAAvuB,GAAA,GA2C5B,aA3C4BuuB,EAAAvuB,GAAA,GAkD5B,YAlD4BuuB,EAAAvuB,GAAA,GAmD5B,aAnD4BuuB,EAAAvuB,GAAA,GA2D5B,oBA3D4BuuB,EAAAvuB,GAAA,GA4D5B,qBA5D4BuuB,EAAAvuB,GAAA,GAqE5B,eArE4BuuB,EAAAvuB,GAAA,GAsE5B,gBAtE4BuuB,EAAAvuB,GAAA,GAkH5B,mBAlH4BuuB,EAAAvuB,GAAA,GAmH5B,oBAnH4BuuB,EAAAvuB,GAAA,2BA4B1B6tB,EAAStuC,cACZsuC,EAAShuC,WAAaA,EACtBguC,EAASp1C,MAAQq1C,EACjBD,EAAStuC,YAAcuuC,EACvBD,EAASzwB,YAAc7lB,GAhCMg3C,EAAAr/B,OAAA,2BAqC1B2+B,EAAStuC,cACZsuC,EAASp1C,MAAQoH,EACjBguC,EAAStuC,YAAcM,EACvBguC,EAAShuC,WAAaA,EAAWiR,IAAIlR,IAxCR2uC,EAAAr/B,OAAA,2BA4C1B2+B,EAAStuC,cACZsuC,EAAShuC,WAAaA,EACtBguC,EAAStuC,YAAcuuC,EACvBD,EAASp1C,MAAQo1C,EAASxB,gBA/CGkC,EAAAr/B,OAAA,uBAoD1B2+B,EAAStuC,YApDiB,CAAAgvC,EAAA5vC,KAAA,gBAAA4vC,EAAA5vC,KAAA,GAqDCnM,EAAKg8C,mBAAmB1vC,EAAG+R,aArD5B,QAqDvB4f,EArDuB8d,EAAA7sC,KAsD7BmsC,EAAShuC,WAAaA,EACtBguC,EAAStuC,YAAcuuC,EACvBD,EAASpd,gBAAkBA,EAxDE,eAAA8d,EAAAr/B,OAAA,uBA6D1B2+B,EAASpd,gBA7DiB,CAAA8d,EAAA5vC,KAAA,gBAAA4vC,EAAA5vC,KAAA,GA8DCnM,EAAKg8C,mBAAmB1vC,EAAG+R,aA9D5B,QA8DvB4f,EA9DuB8d,EAAA7sC,KA+D7BmsC,EAASpd,gBAAkBA,EAC3Bod,EAAStuC,YAAc/M,EAAKwM,MAAM6uC,EAASrd,aAAax1B,MAAM6yC,EAASpd,iBAhE1C,eAmE/Bod,EAAShuC,WAAarN,EAAKwM,MAAM,GAnEFuvC,EAAAr/B,OAAA,uBAuE1B2+B,EAASpd,gBAvEiB,CAAA8d,EAAA5vC,KAAA,gBAAA4vC,EAAA5vC,KAAA,GAwECnM,EAAKg8C,mBAAmB1vC,EAAG+R,aAxE5B,QAwEvB4f,EAxEuB8d,EAAA7sC,KAyE7BmsC,EAASpd,gBAAkBA,EAzEE,WA4E1Bod,EAAStuC,YA5EiB,CAAAgvC,EAAA5vC,KAAA,YA8E7BkvC,EAAStuC,YAAc/M,EAAKwM,MAAM,GAClC6uC,EAAShuC,WAAarN,EAAKwM,MAAM,IAEV+tC,EAAWjuC,EAAGs8B,SAjFR,CAAAmT,EAAA5vC,KAAA,SAAA4vC,EAAAnI,GAiFmB2G,EAAWjuC,EAAGs8B,SAjFjCmT,EAAA5vC,KAAA,wBAAA4vC,EAAA5vC,KAAA,GAiFmD,IAAI4P,QAAJ,eAAAkgC,EAAAxhD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAAswC,EAAO//B,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAAmwC,GAAA,cAAAA,EAAAjwC,KAAAiwC,EAAAhwC,MAAA,OAC1FnM,EAAKjF,MAAM6e,KAAK0C,IAAI24B,sBAAsB3oC,EAAG3J,KAAM,SAAC4Z,EAAKjQ,GACnDiQ,GACFH,EAAOG,GAETJ,EAAQ7P,KALgF,wBAAA6vC,EAAA7uC,SAAA4uC,EAAAphD,SAAZ,gBAAAshD,EAAAC,GAAA,OAAAJ,EAAAzuC,MAAA1S,KAAA2S,YAAA,IAjFnD,QAAAsuC,EAAAnI,GAAAmI,EAAA7sC,KAAA,SAiFvBusC,EAjFuBM,EAAAnI,MA6FtB2G,EAAWjuC,EAAGs8B,WACjB2R,EAAWjuC,EAAGs8B,SAAW6S,GAGrBC,EAAeD,EAAe1pB,KAAK1lB,OAAO,SAAAuiC,GAAG,OAAK6L,EAAoBlrB,SAASqf,EAAIxmC,QAAQC,gBAAkBumC,EAAIE,OAAOF,EAAIE,OAAOhwC,OAAS,GAAGuJ,gBAAlC,4BAAA5G,OAAgFo2C,EAAiBzvC,QAAQ8qB,QAAQ,IAAK,IAAI7qB,iBAE7OrI,EAAK+d,UAAU,eAAgB29B,GAE3BA,GAAgBA,EAAa58C,QAC/B48C,EAAa38C,QAAQ,SAAA6vC,GACnB,IAAI7hC,EAAcF,SAAS+hC,EAAIjpC,KAAM,IAC/B22C,EAAmB9B,EAAkB5L,EAAIxmC,QAAQC,eACjDuH,EAAgB0sC,EAAiB79C,SACvCsO,EAAc/M,EAAKgQ,iBAAiBjD,EAAa6C,GACjDyrC,EAAStuC,YAAcsuC,EAAStuC,YAAYC,KAAKD,GACjD/M,EAAK+d,UAAU,oBAAsBzR,EAAG3J,KAAO,IAAK25C,EAAiB/vC,MAAOQ,EAAYtE,QAAQ,GAAI4yC,EAAStuC,YAAYtE,QAAQ,OA5G1G,eAAAszC,EAAAr/B,OAAA,uBAoH1B2+B,EAASpd,gBApHiB,CAAA8d,EAAA5vC,KAAA,gBAAA4vC,EAAA5vC,KAAA,GAqHCnM,EAAKg8C,mBAAmB1vC,EAAG+R,aArH5B,QAqHvB4f,EArHuB8d,EAAA7sC,KAsH7BmsC,EAASpd,gBAAkBA,EAtHE,WAyH/Bod,EAAStuC,YAAc/M,EAAKwM,MAAM6uC,EAASp1C,OAEtCo1C,EAAShuC,WA3HiB,CAAA0uC,EAAA5vC,KAAA,aA6HNouC,EAAWjuC,EAAGs8B,SA7HR,CAAAmT,EAAA5vC,KAAA,SAAA4vC,EAAAQ,GA6HmBhC,EAAWjuC,EAAGs8B,SA7HjCmT,EAAA5vC,KAAA,wBAAA4vC,EAAA5vC,KAAA,GA6HmD,IAAI4P,QAAJ,eAAAygC,EAAA/hD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAA6wC,EAAOtgC,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAA0wC,GAAA,cAAAA,EAAAxwC,KAAAwwC,EAAAvwC,MAAA,OAC1FnM,EAAKjF,MAAM6e,KAAK0C,IAAI24B,sBAAsB3oC,EAAG3J,KAAM,SAAC4Z,EAAKjQ,GACnDiQ,GACFH,EAAOG,GAETJ,EAAQ7P,KALgF,wBAAAowC,EAAApvC,SAAAmvC,EAAA3hD,SAAZ,gBAAA6hD,EAAAC,GAAA,OAAAJ,EAAAhvC,MAAA1S,KAAA2S,YAAA,IA7HnD,QAAAsuC,EAAAQ,GAAAR,EAAA7sC,KAAA,SA6HvBusC,EA7HuBM,EAAAQ,MAuIrBnE,EAAmBp4C,EAAKuQ,gBAAgB,CAAC,QAAS,kBAAmBylC,IACrE6F,EAAoBzD,GAAoBA,EAAiB35C,SAAW25C,EAAiB35C,SAAW,GAChGovB,EAAmBuqB,GAAoBA,EAAiBhwC,QAAUgwC,EAAiBhwC,QAAUnD,EAAYmoB,KAAKhlB,QAG/GmyC,EAAWjuC,EAAGs8B,WACjB2R,EAAWjuC,EAAGs8B,SAAW6S,IAGrBC,EAAeD,EAAe1pB,KAAK1lB,OAAO,SAAAuiC,GAAG,OAAKA,EAAIxmC,QAAQC,gBAAkBwlB,MAClE6tB,EAAa58C,SAC/BuO,EAAaR,SAAS6uC,EAAa,GAAG/1C,KAAM,IAC5C0H,EAAarN,EAAKgQ,iBAAiB3C,EAAYwuC,GAC/CR,EAAShuC,WAAaA,IApJG,uBAAA0uC,EAAAr/B,OAAA,oBA8JnC2+B,EAAS9uC,MAAQxH,EAGjBsG,EAAaiB,EAAGs8B,SAAWyS,EAG3BpB,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAASqB,SAG1CJ,EAASjB,GAvKmB,yBAAA+B,EAAAzuC,SAAA8tC,EAAAtgD,SAA/B,gBAAA+hD,EAAAC,GAAA,OAAA3B,EAAA3tC,MAAA1S,KAAA2S,YAAA,IAhB6B,WA4LjCkmC,EA5LiC,CAAAuH,EAAA/uC,KAAA,gBAAA+uC,EAAA/uC,KAAA,GA6LdnM,EAAK2zC,iBAAiBtoC,EAAc,CAACtG,GAAgB/E,EAAKjF,MAAM0B,cA7LlD,QA6LnC4O,EA7LmC6vC,EAAAhsC,KAAA,yBAAAgsC,EAAA5tC,SAAA0tC,EAAAlgD,SAAjC,gBAAAiiD,GAAA,OAAAhC,EAAAvtC,MAAA1S,KAAA2S,YAAA,IAhCc,eAkOhBwsC,GACFj6C,EAAKm6C,yBAAyBF,GAnOZW,EAAAl+B,OAAA,SAsObrR,GAtOa,yBAAAuvC,EAAAttC,SAAAgtC,EAAAx/C,SAn0EH,gBAAAkiD,GAAA,OAAA3C,EAAA7sC,MAAA1S,KAAA2S,YAAA,GAAA3S,KA2iFnB64C,iBA3iFmB,eAAAsJ,EAAAxiD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA2iFA,SAAAsxC,EAAO7xC,GAAP,IAAAR,EAAAsyC,EAAAlD,EAAAxnB,EAAA2qB,EAAA3vC,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAqxC,GAAA,cAAAA,EAAAnxC,KAAAmxC,EAAAlxC,MAAA,cAAqBtB,EAArBuyC,EAAAt+C,OAAA,QAAA0qB,IAAA4zB,EAAA,GAAAA,EAAA,GAAqC,GAAID,EAAzCC,EAAAt+C,OAAA,QAAA0qB,IAAA4zB,EAAA,GAAAA,EAAA,GAAwD,KAEpEvyC,GAAkBA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAKmB,EAAKjF,MAAMmQ,mBAGrC+uC,EAAYj6C,EAAKo6C,cAAc,gBAAgB,EAAM,KAG1Cp6C,EAAKjF,MAAMqQ,WACxB6uC,EAAUj6C,EAAKjF,MAAMqQ,SAAW,IAGlCC,EAAe5Q,OAAOC,OAAO,GAAI2Q,GAE3BonB,EAAYzyB,EAAK8uB,uBAfNuuB,EAAAlxC,KAAA,EAmBXnM,EAAKwL,aAAaX,EAAlB,eAAAyyC,EAAA7iD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAiC,SAAA2xC,EAAOx4C,GAAP,IAAAE,EAAAg3B,EAAA,OAAAnQ,EAAA7wB,EAAA+Q,KAAA,SAAAwxC,GAAA,cAAAA,EAAAtxC,KAAAsxC,EAAArxC,MAAA,cAE/BlH,EAAcjF,EAAKjF,MAAMmQ,gBAAgBnG,GACzCk3B,EAAWh3B,EAAYmoB,KAAK7gB,MAG7B0tC,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,KACjCge,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAY,IAG5CkhB,EAAeA,GAAgB1iD,OAAO2R,OAAO+wC,GAAcr+C,OAASq+C,EAAen9C,EAAKk6C,sBAAsBl6C,EAAKjF,MAAMqQ,QAAS6wB,EAAUl3B,GAVvGy4C,EAAArxC,KAAA,EA6B/BnM,EAAKwL,aAAa/Q,OAAOoE,KAAKs+C,GAA9B,eAAAM,EAAAhjD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA6C,SAAA8xC,EAAO1D,EAAO/xC,GAAd,IAAAqE,EAAAqxC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3lC,EAAA4lC,EAAAvoB,EAAAj3B,EAAAy/C,EAAA9wC,EAAA+wC,EAAAC,EAAAC,EAAA5xC,EAAA6xC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzpB,EAAAQ,EAAAkpB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnzB,EAAA7wB,EAAA+Q,KAAA,SAAAkzC,GAAA,cAAAA,EAAAhzC,KAAAgzC,EAAA/yC,MAAA,WAC3CG,EAAK6wC,EAAanD,KAGZ1tC,EAAGC,OAASD,EAAGC,MAAMiE,gBAAkBzL,EAAcyL,iBAAkBlE,EAAGmmB,WAAa5lB,SAASP,EAAGmmB,aAAe5lB,SAAS4lB,IAJtF,CAAAysB,EAAA/yC,KAAA,eAAA+yC,EAAAxiC,OAAA,UAKxC,GALwC,UAQ3CihC,EAAa1D,GAAaA,EAAUj6C,EAAKjF,MAAMqQ,UAAY6uC,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,IAAage,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAE9I4D,EAAiB,CACrBuB,cAAe,UACfC,gBAAiB,SACjBC,kBAAmB,UACnBC,oBAAqB,UACrBC,sBAAuB,UACvBC,uBAAwB,UACxBC,uBAAwB,UACxBC,yBAA0B,UAC1BC,0BAA2B,WAEvB9B,EAAgB,CAAC,UAAW,WAC5BC,EAA4B,YAAdxxC,EAAGI,OACjBqxC,EAAYF,EAActuB,SAASjjB,EAAGI,QACtCsxC,EAAyB,2BAAd1xC,EAAGsqB,OACdve,EAAS/L,EAAG2M,gBAAkB3M,EAAG2M,gBAAkB,KACnDglC,EAAkBxjD,OAAOoE,KAAK++C,GAAgBruB,SAASjjB,EAAGsqB,UAG5Dve,GAAUhN,EAAagN,IAAWhN,EAAagN,GAAQjL,YA7BV,CAAA8xC,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UA8BxC,GA9BwC,aAiC7CqhC,GAAa1lC,IAAWhN,EAAagN,IAAW4lC,GAAmB3xC,EAAG4M,OAAOpa,QAjChC,CAAAogD,EAAA/yC,KAAA,gBAmCzCupB,EAA8C,YAA9BkoB,EAAetxC,EAAGsqB,QAClCn4B,EAAWi3B,EAAgB,GAAKzwB,EAAYxG,SAClD4M,EAAY,IAAA5J,OAAK6K,EAAGszC,UAAa,CAC/BlzC,OAAQ,UACRH,MAAOxH,EACP0H,OAAQmxC,EAAetxC,EAAGsqB,QAC1B9pB,UAAWD,SAASP,EAAGszC,QAAU,KACjCj9C,KAAM0V,EAAS/L,EAAG2M,gBAAkB,KACpC2R,YAAa8K,EAAgBzwB,EAAYmoB,KAAK7gB,MAAQxH,EACtDkB,MAAOqG,EAAGrG,MAAQqG,EAAGrG,MAAQjG,EAAKgQ,iBAAiB1D,EAAG4M,OAAO,GAAIza,GAAU8f,YA5C9B2gC,EAAAxiC,OAAA,UA+CxC,GA/CwC,WAmD5CohC,GAAgBzlC,GAAW4lC,EAnDiB,CAAAiB,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UAoDxC,GApDwC,WAuD7CwhC,EAAS5xC,EAAG4xC,OAAS5xC,EAAG4xC,OAAS,KAvDY,CAAAgB,EAAA/yC,KAAA,gBAAA+yC,EAAA/yC,KAAA,GA2D/B,IAAI4P,QAAJ,eAAA8jC,EAAAplD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAAk0C,EAAO3jC,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAA+zC,GAAA,cAAAA,EAAA7zC,KAAA6zC,EAAA5zC,MAAA,OAC1BnM,EAAKjF,MAAM6e,KAAK0C,IAAIT,eAAevP,EAAG2M,gBAAiB,SAACsD,EAAK8xB,GACvD9xB,GACFH,EAAOG,GAETJ,EAAQkyB,KALgB,wBAAA0R,EAAAzyC,SAAAwyC,EAAAhlD,SAAZ,gBAAAklD,EAAAC,GAAA,OAAAJ,EAAAryC,MAAA1S,KAAA2S,YAAA,IA3D+B,QA2D/CywC,EA3D+CgB,EAAAhwC,KAAA,WAwE5CgvC,IAAYF,GAAYE,EAAO12C,KAAKa,gBAAkBrI,EAAKjF,MAAMqQ,QAAQ/C,eAxE7B,CAAA62C,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UAyExC,GAzEwC,eAAAwiC,EAAA/yC,KAAA,GA4ExBnM,EAAKo8B,kBAAkBn3B,EAAai5C,EAAO7/B,YAAa6/B,EAAOpxC,WA5EvC,QA4E3CM,EA5E2C8xC,EAAAhwC,KA8EjDgvC,EAAOxxC,OAAS,YAChBwxC,EAAOzxC,OAASmxC,EAAetxC,EAAGsqB,QAClCsnB,EAAOvoB,gBAAkB1wB,EAAYmD,QACrC81C,EAAOpxC,UAAYD,SAASP,EAAGszC,QAAU,KAErCzB,EAAU,KAnFmCe,EAAA1xB,GAoFzClhB,EAAGsqB,OApFsCsoB,EAAA/yC,KAqF1C,kBArF0C+yC,EAAA1xB,GAAA,GAsF1C,wBAtF0C0xB,EAAA1xB,GAAA,GAgH1C,oBAhH0C0xB,EAAA1xB,GAAA,GA+H1C,2BA/H0C0xB,EAAA1xB,GAAA,GAkN1C,8BAlN0C0xB,EAAA1xB,GAAA,GAmN1C,6BAnN0C0xB,EAAA1xB,GAAA,GAoN1C,0BApN0C0xB,EAAA1xB,GAAA,GAqN1C,2BArN0C0xB,EAAA1xB,GAAA,GAsN1C,sBAtN0C0xB,EAAA1xB,GAAA,wBAuFxClhB,EAAG4M,OAvFqC,CAAAgmC,EAAA/yC,KAAA,gBAwFvCwxC,IACF1D,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAAS1tC,GAzFR4yC,EAAAxiC,OAAA,UA2FpC,GA3FoC,WA8FzCwhC,EAAOnqB,GAAG1rB,gBAAkBpD,EAAYmoB,KAAKhlB,QAAQC,cA9FZ,CAAA62C,EAAA/yC,KAAA,gBAgGvCwxC,UACK1D,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAjGNkF,EAAAxiC,OAAA,UAoGpC,GApGoC,WAuG7CyhC,EAAU7xC,EAAG4M,OAASlZ,EAAKgQ,iBAAiB1D,EAAG4M,OAAO,GAAIjU,EAAYxG,UAAU8f,WAAa,EAvGhD,CAAA2gC,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UA0GpC,GA1GoC,eA6G7CwhC,EAAOj4C,MAAQk4C,EACfD,EAAOnxC,YAAcoxC,EA9GwBe,EAAAxiC,OAAA,wBAiHxCpQ,EAAG4M,OAjHqC,CAAAgmC,EAAA/yC,KAAA,gBAkHvCwxC,IACF1D,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAAS1tC,GAnHR4yC,EAAAxiC,OAAA,UAqHpC,GArHoC,eAwHxCwhC,EAAO9wC,aACJgxC,EAAqBp+C,EAAKgQ,iBAAiB1D,EAAG4M,OAAO,GAAI,IAAI1Q,MAAM4E,GACzE8wC,EAAO9wC,WAAaA,EACpB8wC,EAAOj4C,MAAQm4C,EACfF,EAAOnxC,YAAcqxC,GA5HsBc,EAAAxiC,OAAA,wBAgIzC2hC,EAAgC/xC,EAAG+hC,UAAY/hC,EAAG+hC,UAAY,KAhIrB,CAAA6Q,EAAA/yC,KAAA,gBAAA+yC,EAAA/yC,KAAA,GAmIJ,IAAI4P,QAAJ,eAAAmkC,EAAAzlD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAAu0C,EAAOhkC,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAAo0C,GAAA,cAAAA,EAAAl0C,KAAAk0C,EAAAj0C,MAAA,OACjDnM,EAAKjF,MAAM6e,KAAK0C,IAAI24B,sBAAsB3oC,EAAG2M,gBAAiB,SAACsD,EAAKjQ,GAC9DiQ,GACFH,EAAOG,GAETJ,EAAQ7P,KALuC,wBAAA8zC,EAAA9yC,SAAA6yC,EAAArlD,SAAZ,gBAAAulD,EAAAC,GAAA,OAAAJ,EAAA1yC,MAAA1S,KAAA2S,YAAA,IAnII,QAmI3C4wC,EAnI2Ca,EAAAhwC,KAAA,WA6IxCmvC,EA7IwC,CAAAa,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UA8IpC,GA9IoC,WAkJxCpQ,EAAG+hC,YACN/hC,EAAG+hC,UAAYgQ,EACXV,IACF1D,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAAS1tC,IAIjDG,EAAS,KACT6xC,EAAqC,KACrCC,EAA0C,GACxCC,EAAsBx+C,EAAKuQ,gBAAgB,CAAC,WAAY,UAAW,kBAGrEtL,EAAYmwB,WAAanwB,EAAYmwB,UAAUmrB,cAC7ClC,EAA8BtsB,MAChCusB,EAAqCr5C,EAAYmwB,UAAUmrB,YAAYn4C,QAAQ8qB,QAAQ,IAAK,IAAI7qB,cAChGk2C,EAA0CF,EAA8BtsB,KAAK1lB,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAGwiC,OAAOxiC,EAAGwiC,OAAOhwC,OAAS,GAAGuJ,gBAAhC,4BAAA5G,OAA8E68C,MAC5OD,EAA8BmC,SACvCjC,EAA0C9jD,OAAO2R,OAAOiyC,EAA8BmC,QAAQn0C,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,iBAGrKk2C,EAAwCz/C,SAC1C2N,EAAS,YAKR8xC,EAAwCz/C,SACvCu/C,EAA8BtsB,MAChCusB,EAAqCr5C,EAAYmoB,KAAKhlB,QAAQ8qB,QAAQ,IAAK,IAAI7qB,gBAC/Ek2C,EAA0CF,EAA8BtsB,KAAK1lB,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAGwiC,OAAOxiC,EAAGwiC,OAAOhwC,OAAS,GAAGuJ,gBAAhC,4BAAA5G,OAA8E68C,MAGxMx/C,QAAU0/C,IACrDF,EAAqCE,EAAoBp2C,QAAQ8qB,QAAQ,IAAK,IAAI7qB,cAClFk2C,EAA0CF,EAA8BtsB,KAAK1lB,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAGwiC,OAAOxiC,EAAGwiC,OAAOhwC,OAAS,GAAGuJ,gBAAhC,4BAAA5G,OAA8E68C,OAE9OD,EAA8BmC,SACvCjC,EAA0C9jD,OAAO2R,OAAOiyC,EAA8BmC,QAAQn0C,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,iBAGrKk2C,EAAwCz/C,SAC1C2N,EAAS,YAIR8xC,EAAwCz/C,OAhMA,CAAAogD,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UAiMpC,GAjMoC,WAoMvC+hC,EAAmBF,EAAwC,GAE3DG,EAAcD,EAAiB94C,KAAOkH,SAAS4xC,EAAiB94C,KAAM,IAAO84C,EAAiBgC,KAAOhC,EAAiBgC,IAAI96C,KAAQkH,SAAS4xC,EAAiBgC,IAAI96C,KAAM,IAAM,KAtMrI,CAAAu5C,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UAyMpC,GAzMoC,eA4MvCiiC,EAAmB3+C,EAAKgQ,iBAAiB0uC,EAAaz5C,EAAYxG,UACxEy/C,EAAOzxC,OAASA,EAChByxC,EAAOj4C,MAAQ04C,EACfT,EAAOnxC,YAAc4xC,EA/MwBO,EAAAxiC,OAAA,wBAuNxCzX,EAAYmwB,WAAcnwB,EAAYmwB,UAAUmrB,YAvNR,CAAArB,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UAwNpC,GAxNoC,WA2NzCkiC,EAAqBtyC,EAAG+hC,UAAY/hC,EAAG+hC,UAAY,KA3NV,CAAA6Q,EAAA/yC,KAAA,gBAAA+yC,EAAA/yC,KAAA,GA8Nf,IAAI4P,QAAJ,eAAA2kC,EAAAjmD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAA+0C,EAAOxkC,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAA40C,GAAA,cAAAA,EAAA10C,KAAA00C,EAAAz0C,MAAA,OACtCnM,EAAKjF,MAAM6e,KAAK0C,IAAI24B,sBAAsB3oC,EAAG2M,gBAAiB,SAACsD,EAAKjQ,GAC9DiQ,GACFH,EAAOG,GAETJ,EAAQ7P,KAL4B,wBAAAs0C,EAAAtzC,SAAAqzC,EAAA7lD,SAAZ,gBAAA+lD,EAAAC,GAAA,OAAAJ,EAAAlzC,MAAA1S,KAAA2S,YAAA,IA9Ne,QA8N3CmxC,EA9N2CM,EAAAhwC,KAAA,WAwOxC0vC,EAxOwC,CAAAM,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UAyOpC,GAzOoC,WA6OxCpQ,EAAG+hC,YACN/hC,EAAG+hC,UAAYuQ,EACXjB,IACF1D,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAAS1tC,IAI/C6oB,EAAwBlwB,EAAYmwB,UAAUC,kBAAkBjtB,QAAQC,cAAc6qB,QAAQ,IAAK,IACnGyC,EAAkB1wB,EAAYmoB,KAAKhlB,QAAQC,cAAc6qB,QAAQ,IAAK,KACtE2rB,EAA+BD,EAAmB7sB,KAAK1lB,OAAO,SAACC,GAAS,OAAOA,EAAGwiC,OAAOhwC,QAAU,GAAKwN,EAAGwiC,OAAOxiC,EAAGwiC,OAAOhwC,OAAS,GAAGuJ,gBAAhC,4BAAA5G,OAA8E0zB,IAA2B7oB,EAAGwiC,OAAOxiC,EAAGwiC,OAAOhwC,OAAS,GAAGuJ,gBAAhC,4BAAA5G,OAA8Ek0B,MAEnQ72B,OAxPW,CAAAogD,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UAyPpC,GAzPoC,WA4PvCoiC,EAA4BD,EAA6BpvC,OAEzDsvC,EAAc/+C,EAAKjF,MAAM6e,KAAK0C,IAAIsmB,IAAIme,UAAU,CACpD,CACE1M,aAAc,UACdp3C,KAAM,SACNoB,KAAM,YAEPygD,EAA0Bn5C,KAAMm5C,EAA0BhQ,UAExCiQ,EAAYiC,OAtQY,CAAA9B,EAAA/yC,KAAA,gBAAA+yC,EAAAxiC,OAAA,UAuQpC,GAvQoC,eA0QvCsiC,EAAiBD,EAAYiC,OAC7B/B,EAAsBj/C,EAAKgQ,iBAAiBgvC,EAAgB/5C,EAAYxG,UAC9Ey/C,EAAOj4C,MAAQg5C,EAAoB1gC,WA5QU2gC,EAAAxiC,OAAA,6BAAAwiC,EAAAxiC,OAAA,sBAkRjDwhC,EAAO9wC,WAAaA,EACpB8wC,EAAO3xC,MAAQxH,EACfm5C,EAAOtzB,YAAc7lB,EACrBm5C,EAAO7wC,WAAaD,EAAW5E,MAAMxI,EAAKwM,MAAM0xC,EAAOj4C,QAGvDoF,EAAagN,GAAU6lC,EAIlB5xC,EAAG4xC,SACN5xC,EAAG4xC,OAASA,EACZjE,EAAUj6C,EAAKjF,MAAMqQ,SAAS6wB,GAAU+d,GAAS1tC,GA9RF,0BAAA4yC,EAAA5xC,SAAAowC,EAAA5iD,SAA7C,gBAAAmmD,EAAAC,GAAA,OAAAzD,EAAAjwC,MAAA1S,KAAA2S,YAAA,IA7B+B,wBAAA+vC,EAAAlwC,SAAAiwC,EAAAziD,SAAjC,gBAAAqmD,GAAA,OAAA7D,EAAA9vC,MAAA1S,KAAA2S,YAAA,IAnBW,cAoVbwsC,GACFj6C,EAAKm6C,yBAAyBF,GArVfoD,EAAA3gC,OAAA,SAwVVrR,GAxVU,yBAAAgyC,EAAA/vC,SAAA4vC,EAAApiD,SA3iFA,gBAAAsmD,GAAA,OAAAnE,EAAAzvC,MAAA1S,KAAA2S,YAAA,GAAA3S,KAq4FnBs4C,kBAAoB,SAACH,GAAkC,IAAxBoO,EAAwB5zC,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,GAC/C9L,EAAM0/C,GAAgBpO,EAEtBxB,EAAc,CAClB9rC,KAJmD8H,UAAA3O,OAAA,EAAA2O,UAAA,QAAA+b,EAKnD7Z,UAHgB9C,SAASe,KAAK84B,MAAQ,MAKxC,OAAO1mC,EAAKkyC,mCAAmC,iBAAkBvwC,EAAK8vC,IA54FrD32C,KA+4FnBwmD,iBAAmB,WACjB,OAAOthD,EAAKo6C,cAAc,iBAAiB,IAh5F1Bt/C,KAk5FnBymD,iBAAmB,SAACC,GAClB,OAAOxhD,EAAKsf,gBAAgB,gBAAiBkiC,IAn5F5B1mD,KAq5FnB82C,iBAAmB,SAACqB,GAA4B,IAAlBoO,EAAkB5zC,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,GACxC9L,EAAM0/C,GAAgBpO,EACxBwO,EAAiBzhD,EAAK+tB,8BAA8B,iBAAkB,IAE1E,OAAI0zB,GAAkBA,EAAe9/C,GAC5B8/C,EAAe9/C,GAAKgE,KAEtB,MA55FU7K,KA85FnB4mD,mBAAqB,SAACC,EAAOC,GAAqB,IAAd1oC,EAAczL,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAP,GAGzC,OADAyL,GADAA,EAASvO,KAAKC,UAAUsO,IACRkH,OAAO,GAAGA,OAAO,EAAElH,EAAOpa,OAAO,GAAGo0B,QAAQ,cAAe,OAC3E,YAAAzxB,OACIkgD,EADJ,KAAAlgD,OACcyX,EADd,gBAAAzX,OAEMmgD,EAAO94C,KAAK,KAFlB,qBAj6FiBhO,KAw6FnB+mD,uBAx6FmB,eAAAC,EAAArnD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAw6FM,SAAAm2C,EAAOC,GAAP,IAAAC,EAAAC,EAAAN,EAAAO,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1tB,EAAA2tB,EAAAC,EAAAC,EAAAC,EAAAl1C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA42C,GAAA,cAAAA,EAAA12C,KAAA02C,EAAAz2C,MAAA,UAAsB81C,EAAtBU,EAAA7jD,OAAA,QAAA0qB,IAAAm5B,EAAA,GAAAA,EAAA,GAAqC,KAAKT,EAA1CS,EAAA7jD,OAAA,QAAA0qB,IAAAm5B,EAAA,GAAAA,EAAA,GAAuD,KAAKf,EAA5De,EAAA7jD,OAAA,QAAA0qB,IAAAm5B,EAAA,GAAAA,EAAA,GAAmE,MACpFR,EAAiBniD,EAAKuQ,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAE1D4c,QAHG,CAAAy1B,EAAAz2C,KAAA,eAAAy2C,EAAAlmC,OAAA,UAId,GAJc,cAOjB0lC,EAAWv1C,SAASe,KAAK84B,MAAM,KAC/B2b,EAAc,CAClBQ,MAAM,IACNC,QAAQ,YACRC,eAAe,MACfC,MAAM,CACJC,QAAUjB,EAAe35C,gBAGzB45C,IACFI,EAAYW,MAAME,cAAgBjB,GAEhCC,IACFG,EAAYW,MAAMG,cAAgBjB,GAGpCN,EAASA,GAAUO,EAAeiB,SAASC,aACrCf,EAAgBtiD,EAAK0hD,mBAAmB,eAAeE,EAAOS,GAC9DE,EAAW,CACfe,MAAMhB,GA1BeM,EAAAz2C,KAAA,GA6BDnM,EAAKujD,gBAAgBpB,EAAelP,SAASsP,GA7B5C,WA6BjB1tB,EA7BiB+tB,EAAA1zC,KA8BnBszC,EAAexiD,EAAKsrB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,MAC9D4tB,EAAgBD,GAAgBA,EAAa1jD,OAAO,EAAI+N,SAAS21C,EAAaA,EAAa1jD,OAAO,GAAGgO,WAAa,OAEnG21C,EAAcR,GAAkBQ,EAAcP,GAAgBE,EAASK,EAAc,OAjCnF,CAAAG,EAAAz2C,KAAA,gBAAAy2C,EAAAz2C,KAAA,GAkCQnM,EAAK6hD,uBAAuBG,EAAeS,EAAc,EAAEP,EAAaN,GAlChF,SAkCfc,EAlCeE,EAAA1zC,QAoCnBszC,EAAeA,EAAa/gD,OAAOihD,IApChB,eAAAE,EAAAlmC,OAAA,SAuChB8lC,GAvCgB,yBAAAI,EAAAt1C,SAAAy0C,EAAAjnD,SAx6FN,gBAAA0oD,GAAA,OAAA1B,EAAAt0C,MAAA1S,KAAA2S,YAAA,GAAA3S,KAi9FnB2oD,eAj9FmBhpD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAi9FF,SAAA83C,IAAA,IAAAC,EAAAC,EAAAl3B,EAAA/R,EAAA2nB,EAAA3yB,EAAA2zC,EAAAf,EAAAJ,EAAAttB,EAAA13B,EAAA0mD,EAAAC,EAAAn5B,EAAAo5B,EAAAt2C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAg4C,GAAA,cAAAA,EAAA93C,KAAA83C,EAAA73C,MAAA,UAAOw3C,EAAPI,EAAAjlD,OAAA,QAAA0qB,IAAAu6B,EAAA,GAAAA,EAAA,GAAmB,KAAKH,EAAxBG,EAAAjlD,OAAA,QAAA0qB,IAAAu6B,EAAA,GAAAA,EAAA,GAA+B,KAExCr3B,EAFS,kBAAAjrB,OAEyBkiD,GAErB,QADbhpC,EAAa3a,EAAK+tB,8BAA8BrB,IAHvC,CAAAs3B,EAAA73C,KAAA,eAAA63C,EAAAtnC,OAAA,SAKN/B,GALM,cAAAqpC,EAAA73C,KAAA,EAQSnM,EAAK6iC,eARd,cAQTP,EARS0hB,EAAA90C,KASTS,EAAY2yB,EAAU3yB,UAAU,KAEhC2zC,EAXS,yFAAA7hD,OAYkEkO,EAZlE,4KA0BT4yC,EAAS,CACbe,SAGInB,EAAiBniD,EAAKuQ,gBAAgB,CAAC,UAAU,YAAY,WAAW,aA9B/DyzC,EAAA73C,KAAA,GA+BKnM,EAAKujD,gBAAgBpB,EAAelP,SAASsP,GA/BlD,YA+BX1tB,EA/BWmvB,EAAA90C,OAiCClP,EAAKsrB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,GAjClD,CAAAmvB,EAAA73C,KAAA,gBAAA63C,EAAAtnC,OAAA,UAkCN,GAlCM,WAqCfmY,EAAU70B,EAAKsrB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,GACrD13B,EAAO03B,EAAQ/1B,OAtCN,CAAAklD,EAAA73C,KAAA,gBAAA63C,EAAAtnC,OAAA,UAyCN,GAzCM,eA6CZmY,EAAQ,GAAGovB,WAAapvB,EAAQ13B,EAAK,GAAG2P,YACzC+nB,EAAUA,EAAQqvB,OAAOv3C,KAAKwF,KAAKhV,EAAK,KAGpC0mD,EAAeppD,OAAOoE,KAAKmB,EAAKuQ,gBAAgB,CAAC,cACjDuzC,EAAwB9jD,EAAKuQ,gBAAgB,CAAC,aAAa,aAE7Doa,EAAS,GACbk5B,EAAa9kD,QAAS,SAAAV,GACpBssB,EAAOtsB,GAAQ,CACb6lC,IAAI,KACJ33B,MAAM,KACNwsB,SAAS,QAKbt+B,OAAOoE,KAAKmB,EAAKjF,MAAMs9B,mBAAmBt5B,QAAS,SAAAg6B,GACjDt+B,OAAOoE,KAAKmB,EAAKjF,MAAMs9B,kBAAkBU,IAAWh6B,QAAS,SAAAwN,GAE3D,IAAM43C,EAAuBnkD,EAAKjF,MAAMs9B,kBAAkBU,GAAUxsB,GAEpEs3C,EAAa9kD,QAAS,SAAAV,GACpB,IAAM68B,EAAcrG,EAAQta,KAAM,SAAA6pC,GAAK,OAAIA,EAAMnB,QAAQ/iD,GAAGmI,gBAAkB87C,EAAqB9lD,GAAM+J,QAAQC,kBAC5GsiB,EAAOtsB,GAAM6lC,KAAQhJ,GAAel7B,EAAKwM,MAAM0uB,EAAYgJ,KAAK9zB,GAAGua,EAAOtsB,GAAM6lC,QAAU0f,GAAU5jD,EAAKikC,QAAQjkC,EAAKgQ,iBAAiBkrB,EAAYgJ,IAAI,IAAI5lB,IAAI,MAAM9V,MAAM,KAAK0E,GAAG02C,OACtLj5B,EAAOtsB,GAAMkO,MAAQA,EACrBoe,EAAOtsB,GAAM06B,SAAWA,EACxBpO,EAAOtsB,GAAM6lC,IAAMhJ,EAAYgJ,WAOvC2f,EAAa9kD,QAAS,SAAAV,GACfssB,EAAOtsB,GAAMkO,QAChBoe,EAAOtsB,GAAMkO,MAAQu3C,EAAsBv3C,MAC3Coe,EAAOtsB,GAAM06B,SAAW+qB,EAAsB/qB,YAI9C4qB,GAAeh5B,EAAOg5B,KACxBh5B,EAASA,EAAOg5B,IAvFHK,EAAAtnC,OAAA,SA0FR1c,EAAKguB,8BAA8BtB,EAAe/B,EAAQ,OA1FlD,yBAAAq5B,EAAA12C,SAAAo2C,EAAA5oD,SAj9FEA,KA6iGnByoD,gBA7iGmB,eAAAc,EAAA5pD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6iGD,SAAA04C,EAAOrR,GAAP,IAAAsP,EAAAgC,EAAAC,EAAA7+C,EAAA8+C,EAAAh3C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA04C,GAAA,cAAAA,EAAAx4C,KAAAw4C,EAAAv4C,MAAA,cAAiBo2C,EAAjBkC,EAAA3lD,OAAA,QAAA0qB,IAAAi7B,EAAA,GAAAA,EAAA,GAA0B,GAAIF,EAA9BE,EAAA3lD,OAAA,QAAA0qB,IAAAi7B,EAAA,IAAAA,EAAA,GAAsDD,EAAtDC,EAAA3lD,OAAA,QAAA0qB,IAAAi7B,EAAA,GAAAA,EAAA,GAA+D,KAA/DC,EAAAv4C,KAAA,EACG2Q,IAChB6nC,KAAK1R,EAAUsP,EAAUiC,GACzBI,MAAM,SAAAroC,GACyB,oBAAnBgoC,GACTA,EAAehoC,KALL,cACV5W,EADU++C,EAAAx1C,KAAAw1C,EAAAhoC,OAAA,SAQT/W,GARS,wBAAA++C,EAAAp3C,SAAAg3C,EAAAxpD,SA7iGC,gBAAA+pD,GAAA,OAAAR,EAAA72C,MAAA1S,KAAA2S,YAAA,GAAA3S,KAujGnBm3C,YAvjGmB,eAAA6S,EAAArqD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAujGL,SAAAm5C,EAAO9R,GAAP,IAAAsR,EAAAC,EAAA7+C,EAAAq/C,EAAAv3C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAi5C,GAAA,cAAAA,EAAA/4C,KAAA+4C,EAAA94C,MAAA,cAAiBo4C,EAAjBS,EAAAlmD,OAAA,QAAA0qB,IAAAw7B,EAAA,IAAAA,EAAA,GAAyCR,EAAzCQ,EAAAlmD,OAAA,QAAA0qB,IAAAw7B,EAAA,GAAAA,EAAA,GAAkD,KAAlDC,EAAA94C,KAAA,EACO2Q,IAChBC,IAAIk2B,EAAUuR,GACdI,MAAM,SAAAroC,GACyB,oBAAnBgoC,GACTA,EAAehoC,KALT,YACN5W,EADMs/C,EAAA/1C,MAAA,CAAA+1C,EAAA94C,KAAA,eAAA84C,EAAAvoC,OAAA,SASH/W,GATG,cAAAs/C,EAAAvoC,OAAA,SAWHI,IAAM0nC,IAXH,yBAAAS,EAAA33C,SAAAy3C,EAAAjqD,SAvjGK,gBAAAoqD,GAAA,OAAAJ,EAAAt3C,MAAA1S,KAAA2S,YAAA,GAAA3S,KAqkGnBgzC,wBArkGmB,eAAAqX,EAAA1qD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAqkGO,SAAAw5C,EAAOnS,GAAP,IAAAp0C,EAAA64B,EAAA2tB,EAAA11C,EAAA8xC,EAAA6D,EAAA3/C,EAAA8rC,EAAA8T,EAAA93C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAw5C,GAAA,cAAAA,EAAAt5C,KAAAs5C,EAAAr5C,MAAA,UAAiBtN,EAAjB0mD,EAAAzmD,OAAA,QAAA0qB,IAAA+7B,EAAA,GAAAA,EAAA,GAAwB,GAAI7tB,EAA5B6tB,EAAAzmD,OAAA,QAAA0qB,IAAA+7B,EAAA,GAAAA,EAAA,GAAkC,IAAKF,EAAvCE,EAAAzmD,OAAA,QAAA0qB,IAAA+7B,EAAA,GAAAA,EAAA,GAAqD,EACvE51C,EAAY9C,SAASe,KAAK84B,MAAQ,QAGpC+a,EAAiBzhD,EAAK+tB,8BAA8B,iBAAkB,MAEpD0zB,EAAexO,IAAawO,EAAexO,GAAUtjC,WAAaA,EAAY8xC,EAAexO,GAAUtjC,UAAY+nB,GANjH,CAAA8tB,EAAAr5C,KAAA,eAAAq5C,EAAA9oC,OAAA,SAOf+kC,EAAexO,GAAUttC,MAPV,cAUlB2/C,EAASzmD,EAAKwmD,GAVIG,EAAAr5C,KAAA,GAWLnM,EAAKiyC,YAAYgB,EAAW,WAAaqS,GAXpC,aAWlB3/C,EAXkB6/C,EAAAt2C,QAeZvJ,EAAKA,OAASA,EAAKA,KAAK0kB,QAAQglB,MAAM,QAAgC,0BAAtB1pC,EAAKA,KAAK0kB,QAf9C,CAAAm7B,EAAAr5C,KAAA,gBAgBlBurB,EAAI,IACA+Z,EAAc,CAClB9rC,KAAK,CACHA,KAAKA,EAAKA,MAEZgK,aAEF3P,EAAKkyC,mCAAmC,iBAAkBe,EAAUxB,IAvBhD+T,EAAA9oC,OAAA,SAyBf/W,GAzBe,aA0Bb0/C,EAAcxmD,EAAKC,OAAS,GA1Bf,CAAA0mD,EAAAr5C,KAAA,gBAAAq5C,EAAAr5C,KAAA,GA2BTnM,EAAK8tC,wBAAwBmF,EAAUp0C,EAAM64B,EAAK2tB,EAAc,GA3BvD,eAAAG,EAAA9oC,OAAA,SAAA8oC,EAAAt2C,MAAA,eAAAs2C,EAAA9oC,OAAA,SA6BjB,MA7BiB,yBAAA8oC,EAAAl4C,SAAA83C,EAAAtqD,SArkGP,gBAAA2qD,GAAA,OAAAN,EAAA33C,MAAA1S,KAAA2S,YAAA,GAAA3S,KAomGnB+yC,kBApmGmB,eAAA6X,EAAAjrD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAomGC,SAAA+5C,EAAO1S,GAAP,IAAAvb,EAAAkuB,EAAAvE,EAAAmD,EAAAD,EAAA5iD,EAAAgO,EAAA8xC,EAAA97C,EAAA8rC,EAAAoU,EAAAp4C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA85C,GAAA,cAAAA,EAAA55C,KAAA45C,EAAA35C,MAAA,UAAiBurB,EAAjBmuB,EAAA/mD,OAAA,QAAA0qB,IAAAq8B,EAAA,GAAAA,EAAA,GAAuB,GAAID,EAA3BC,EAAA/mD,OAAA,QAAA0qB,IAAAq8B,EAAA,IAAAA,EAAA,GAAgDxE,EAAhDwE,EAAA/mD,OAAA,QAAA0qB,IAAAq8B,EAAA,IAAAA,EAAA,GAA+DrB,EAA/DqB,EAAA/mD,OAAA,QAAA0qB,IAAAq8B,EAAA,GAAAA,EAAA,GAAwE,KAAMtB,EAA9EsB,EAAA/mD,OAAA,QAAA0qB,IAAAq8B,EAAA,IAAAA,EAAA,GACZlkD,EAAM0/C,GAAgBpO,EACtBtjC,EAAY9C,SAASe,KAAK84B,MAAQ,QAGpC+a,EAAiBzhD,EAAK+tB,8BAA8B,iBAAkB,MAGpD0zB,EAAe9/C,IAAQ8/C,EAAe9/C,GAAKgO,WAAaA,EAAY8xC,EAAe9/C,GAAKgO,UAAY+nB,GARxG,CAAAouB,EAAA35C,KAAA,gBAAA25C,EAAAppC,OAAA,SASR+kC,EAAe9/C,GAAKgE,MAAQigD,EAAcnE,EAAe9/C,GAAKgE,KAAKA,KAAO87C,EAAe9/C,GAAKgE,MATtF,eAAAmgD,EAAA35C,KAAA,GAYDnM,EAAKiyC,YAAYgB,EAAUsR,EAAgBC,GAZ1C,eAYd7+C,EAZcmgD,EAAA52C,KAcZuiC,EAAc,CAClB9rC,KAAK,CACHA,KAAKA,EAAKA,MAEZgK,aAEF3P,EAAKkyC,mCAAmC,iBAAkBvwC,EAAK8vC,GApB7CqU,EAAAppC,OAAA,SAqBV/W,GAAQigD,EAAcjgD,EAAKA,KAAOA,GArBxB,yBAAAmgD,EAAAx4C,SAAAq4C,EAAA7qD,SApmGD,gBAAAirD,GAAA,OAAAL,EAAAl4C,MAAA1S,KAAA2S,YAAA,GAAA3S,KA2nGnBkrD,sBA3nGmB,eAAAC,EAAAxrD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA2nGK,SAAAs6C,EAAOjT,GAAP,IAAAsP,EAAA7qB,EAAAkuB,EAAAvE,EAAAmD,EAAA7iD,EAAAgO,EAAA8xC,EAAA97C,EAAA8rC,EAAA0U,EAAA14C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAo6C,GAAA,cAAAA,EAAAl6C,KAAAk6C,EAAAj6C,MAAA,UAAiBo2C,EAAjB4D,EAAArnD,OAAA,QAAA0qB,IAAA28B,EAAA,GAAAA,EAAA,GAA0B,GAAIzuB,EAA9ByuB,EAAArnD,OAAA,QAAA0qB,IAAA28B,EAAA,GAAAA,EAAA,GAAkC,GAAIP,EAAtCO,EAAArnD,OAAA,QAAA0qB,IAAA28B,EAAA,IAAAA,EAAA,GAAyD9E,EAAzD8E,EAAArnD,OAAA,QAAA0qB,IAAA28B,EAAA,IAAAA,EAAA,GAAsE3B,EAAtE2B,EAAArnD,OAAA,QAAA0qB,IAAA28B,EAAA,GAAAA,EAAA,GAA6E,KAC7FxkD,EAAM0/C,GAAgBpO,EACtBtjC,EAAY9C,SAASe,KAAK84B,MAAQ,QAGlC+a,EAAiBzhD,EAAK+tB,8BAA8B,iBAAkB,MAEtD0zB,EAAe9/C,IAAQ8/C,EAAe9/C,GAAKgO,WAAaA,EAAY8xC,EAAe9/C,GAAKgO,UAAY+nB,GAPpG,CAAA0uB,EAAAj6C,KAAA,gBAAAi6C,EAAA1pC,OAAA,SAQZ+kC,EAAe9/C,GAAKgE,MAAQigD,EAAcnE,EAAe9/C,GAAKgE,KAAKA,KAAO87C,EAAe9/C,GAAKgE,MARlF,eAAAygD,EAAAj6C,KAAA,GAWHnM,EAAKujD,gBAAgBtQ,EAAUsP,GAAU,EAAOiC,GAX7C,eAWhB7+C,EAXgBygD,EAAAl3C,KAYhBuiC,EAAc,CAClB9rC,KAAK,CACHA,KAAKA,EAAKA,MAEZgK,aAEF3P,EAAKkyC,mCAAmC,iBAAkBvwC,EAAK8vC,GAlBzC2U,EAAA1pC,OAAA,SAmBd/W,GAAQigD,EAAcjgD,EAAKA,KAAOA,GAnBpB,yBAAAygD,EAAA94C,SAAA44C,EAAAprD,SA3nGL,gBAAAurD,GAAA,OAAAJ,EAAAz4C,MAAA1S,KAAA2S,YAAA,GAAA3S,KAgpGnBge,oBAAsB,SAAAP,GACpB,IAAIoS,EAAS,QACb,GAAI9d,SAAS0L,EAAM+tC,MAAO,CACxB,IAAMC,EAAY15C,SAAS0L,EAAM+tC,MACjC,OAAQC,GACN,KAAK,KACH57B,EAAS,SACT,MACF,QACEA,EAAM,SAAAlpB,OAAY8kD,SAGbhuC,EAAM8R,UACfM,EAASpS,EAAM8R,QAAQm8B,MAAM,MAAM,IAGrC,OAAO77B,GAhqGU7vB,KAkqGnB2rD,iBAAmB,WACjB,OAAO99C,KAnqGU7N,KAqqGnBwwB,aAAe,SAAC3qB,EAAM+lD,GACpB,IAAKA,EACH,OAAO,KAGT,IADA/lD,EAAOlG,OAAOC,OAAO,GAAIiG,IAChB7B,OAAS,EAAG,CACnB,IAAM6nD,EAAOhmD,EAAKimD,QAClB,IAAKjmD,EAAK7B,OACR,OAAO4nD,EAAMC,GAAQD,EAAMC,GAAQ,KAC9B,GAAID,EAAMC,GACf,OAAO3mD,EAAKsrB,aAAa3qB,EAAM+lD,EAAMC,IAGzC,OAAO,MAlrGU7rD,KAorGnByV,gBAAkB,SAAC5P,GAA0B,IAApBkmD,EAAoBp5C,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,GAE3C,GADAo5C,EAAUA,GAAoBl+C,IAC1BhI,EAAK7B,OAAS,EAAG,CACnB,IAAM6nD,EAAOhmD,EAAKimD,QAClB,IAAKjmD,EAAK7B,OACR,YAAyB0qB,IAAlBq9B,EAAQF,GAAsBE,EAAQF,GAAQ,KAChD,GAAIE,EAAQF,GACjB,OAAO3mD,EAAKuQ,gBAAgB5P,EAAMkmD,EAAQF,IAG9C,OAAO,MA9rGU7rD,KAgsGnBgsD,UAAY,SAACnmD,GACX,OAAOgI,IAAco+C,QAAU,IAAMpmD,GAjsGpB7F,KAmsGnBksD,sBAAwB,WAKtB,OAJkBvsD,OAAOoE,KAAK8J,IAAcs+C,cAAc1sC,KAAK,SAAA6kB,GAE7D,OADez2B,IAAcs+C,aAAa7nB,GAAKzK,IACjCtsB,gBAAkBoX,OAAOmV,SAAS2K,OAAOl3B,iBAEnC,QAxsGLvN,KA0sGnBosD,eAAiB,WACf,MAAO,CAAC,KAAK,KAAK,KAAK,MAAM33B,SAASvvB,EAAK2N,cAAcoD,OAAO,QAA4C,OAAlC/Q,EAAK2N,cAAcoD,OAAO,OA3sGnFjW,KA6sGnBqsD,gBAAkB,WAChB,OAAO1nC,OAAOmV,SAAS2K,OAAOl3B,cAAcknB,SAAS5mB,IAAcy+C,WAAW/+C,gBA9sG7DvN,KAgtGnBusD,eAAiB,WACf,OAAO5nC,OAAOmV,SAAS2K,OAAOl3B,cAAcknB,SAAS5mB,IAAco+C,QAAQ1+C,gBAjtG1DvN,KAmtGnBwsD,aAAe,WACb,OAAO7nC,OAAOmV,SAAS2K,OAAOl3B,cAAcknB,SAAS5mB,IAAc4+C,QAAQl/C,gBAptG1DvN,KAstGnB0sD,4BAttGmB/sD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAstGW,SAAA67C,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAp6C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA87C,GAAA,cAAAA,EAAA57C,KAAA47C,EAAA37C,MAAA,OAC5Bu7C,GADmCA,EAAPG,EAAA/oD,OAAA,QAAA0qB,IAAAq+B,EAAA,GAAAA,EAAA,GAAc,OAC3BpoC,OAAOmV,SAASjyB,KAAKyd,OAAO,GACrCunC,EAAqB3nD,EAAKuQ,gBAAgB,CAAC,YAAa,SAAU,aAClEq3C,EAAW5nD,EAAKqnD,iBAClBM,EAAmBx6B,SAAWy6B,GAAYnoC,OAAOsoC,KACnDtoC,OAAOsoC,GAAG,MAAO,OAAQL,GACzBjoC,OAAOsoC,GAAG,OAAQ,aANQ,wBAAAD,EAAAx6C,SAAAm6C,EAAA3sD,SAttGXA,KA+tGnBie,yBA/tGmB,eAAAivC,EAAAvtD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+tGQ,SAAAq8C,EAAOzvC,GAAP,IAAA3V,EAAAqlD,EAAAC,EAAAC,EAAA/nC,EAAAgoC,EAAA56C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAs8C,GAAA,cAAAA,EAAAp8C,KAAAo8C,EAAAn8C,MAAA,UAAkBtJ,EAAlBwlD,EAAAvpD,OAAA,QAAA0qB,IAAA6+B,EAAA,GAAAA,EAAA,GAA6B,KAEhDH,EAAmBv/C,IAAc4/C,UAAUC,OAAOhI,OAClD2H,EAAeD,EAAiBC,aAChCC,EAAW3oC,OAAOmV,SAAS2K,OAAOl3B,cAAcknB,SAAS5mB,IAAco+C,QAAQ1+C,gBAEjF6/C,EAAiB/6B,UAAW1N,OAAOsoC,KAAOI,IAAgBC,EANrC,CAAAE,EAAAn8C,KAAA,eASnB+7C,EAAiBO,uBAE2B,IAA1C9/C,IAAckR,QAAQqjB,iBAClB7c,EAAiB1X,IAAckR,QAAQ6uC,kBAAkB//C,IAAckR,QAAQqjB,iBACrF1kB,EAAUC,eAAV,IAAAhX,OAA+B4e,IAEtB8nC,IAAiBC,IAC1B5vC,EAAUC,eAAiB,UAhBR6vC,EAAAn8C,KAAA,EAoBhB,IAAI4P,QAAJ,eAAA4sC,EAAAluD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAAg9C,EAAOzsC,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAA68C,GAAA,cAAAA,EAAA38C,KAAA28C,EAAA18C,MAAA,OACjBqM,EAAUswC,YAAc,WACtB3sC,GAAQ,IAEV3D,EAAUuwC,gBAAkB,WAC1B3sC,KAGFqD,OAAOsoC,GAAG,OAAQ,QAASvvC,GARV,wBAAAqwC,EAAAv7C,SAAAs7C,EAAA9tD,SAAZ,gBAAAkuD,EAAAC,GAAA,OAAAN,EAAAn7C,MAAA1S,KAAA2S,YAAA,IApBgB,OA+BC,oBAAb5K,GACTA,IAhCqB,aAoCD,oBAAbA,GACTA,IArCuBylD,EAAA5rC,OAAA,UAwClB,GAxCkB,yBAAA4rC,EAAAh7C,SAAA26C,EAAAntD,SA/tGR,gBAAAouD,GAAA,OAAAlB,EAAAx6C,MAAA1S,KAAA2S,YAAA,GAAA3S,KAywGnBquD,eAzwGmB,eAAAC,EAAA3uD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAywGF,SAAAy9C,EAAOpsD,EAAMmL,EAASw6B,GAAtB,IAAAjQ,EAAA,OAAA7G,EAAA7wB,EAAA+Q,KAAA,SAAAs9C,GAAA,cAAAA,EAAAp9C,KAAAo9C,EAAAn9C,MAAA,cAAAm9C,EAAAp9C,KAAA,EAEPymB,EAAW,IAAI3yB,EAAKjF,MAAM6e,KAAK0C,IAAI23B,SAASrR,EAAKx6B,GAF1CkhD,EAAA5sC,OAAA,SAGN,CAAEzf,OAAM01B,aAHF,OAAA22B,EAAAp9C,KAAA,EAAAo9C,EAAA97B,GAAA87B,EAAA,SAKbtpD,EAAKkyB,eAAe,6BAA8Bj1B,EAAMmL,EAAxDkhD,EAAA97B,IALa,cAAA87B,EAAA5sC,OAAA,SAOR,MAPQ,wBAAA4sC,EAAAh8C,SAAA+7C,EAAAvuD,KAAA,YAzwGE,gBAAAyuD,EAAAC,EAAAC,GAAA,OAAAL,EAAA57C,MAAA1S,KAAA2S,YAAA,GAAA3S,KAkxGnB4uD,kBAAoB,WAA4B,IAA3BC,EAA2Bl8C,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KACrC,OAAOzN,EAAKo6C,cAAc,kBAAkB,EAAOuP,IAnxGlC7uD,KAqxGnB8uD,qBAAuB,SAACC,EAAUC,GAUhC,OATKD,EAASzhD,SAAWpI,EAAKjF,MAAMqQ,UAClCy+C,EAASzhD,QAAUpI,EAAKjF,MAAMqQ,SAE3By+C,EAAStsC,WACZssC,EAAStsC,SAAWvd,EAAK0pD,qBAEG,qBAAnBG,EAASE,OAA0BF,EAASE,cAC9CF,EAASE,QAEbF,EAASzhD,aAGd0hD,EAAWA,IAAuB9pD,EAAKjF,MAAM+uD,SAAW9pD,EAAKjF,MAAM+uD,SAA+C,oBAA5B9pD,EAAKjF,MAAMivD,aAA8BhqD,EAAKjF,MAAMivD,eAAiB,QAElJF,EAASG,aAAaJ,KApyGd/uD,KAwyGnBomB,2BAA6B,SAAC7I,GAAmC,IAA3B6kB,EAA2BzvB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAChD69B,EAAiBtrC,EAAKuQ,gBAAgB,CAAC,UAAW,oBACxD2sB,EAAkBA,GAAmBl9B,EAAK8uB,uBAC1C,IAAM3N,EAAWnhB,EAAKuQ,gBAAgB,CAAC,UAAW,oBAAqB2sB,EAAiB,aAClFgtB,EAAalqD,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,YAAa,UAAW+6B,IACnF6e,EAAUnqD,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa4Q,EAAU,UAAW+b,KAAqBgtB,EACxG,OAAO7xC,EAAM,GAAA5W,OAAM0oD,EAAN,QAAA1oD,OAAoB4W,GAAW,MA9yG3Bvd,KAgzGnBsvD,uBAAyB,SAAChiD,GAAoC,IAA3B80B,EAA2BzvB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAC7C69B,EAAiBtrC,EAAKuQ,gBAAgB,CAAC,UAAW,oBACxD2sB,EAAkBA,GAAmBl9B,EAAK8uB,uBAC1C,IAAM3N,EAAWnhB,EAAKuQ,gBAAgB,CAAC,UAAW,oBAAqB2sB,EAAiB,aAClFgtB,EAAalqD,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,YAAa,UAAW+6B,IACnF6e,EAAUnqD,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa4Q,EAAU,UAAW+b,KAAqBgtB,EACxG,OAAO9hD,EAAO,GAAA3G,OAAM0oD,EAAN,aAAA1oD,OAAyB2G,GAAY,MAtzGlCtN,KAwzGnBwD,YAAc,SAAC4sB,GAA6D,IAArDm/B,EAAqD58C,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAtC,EAAG68C,EAAmC78C,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAzB,IAAK88C,EAAoB98C,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAR,IAClE,IACE48C,EAAe19C,KAAK69C,IAAIH,GACxBA,EAAejsD,MAAMisD,GAAgB,EAAIA,EAEzC,IAAMI,EAAev/B,EAAS,EAAI,IAAM,GAEpCjjB,EAAI4E,SAASqe,EAASve,KAAK69C,IAAIE,OAAOx/B,IAAW,GAAGziB,QAAQ4hD,IAAe9rC,WAC3EosC,EAAK1iD,EAAEnJ,OAAS,EAAKmJ,EAAEnJ,OAAS,EAAI,EAExC,OAAO2rD,GAAgBE,EAAI1iD,EAAEmY,OAAO,EAAGuqC,GAAKJ,EAAY,IAAMtiD,EAAEmY,OAAOuqC,GAAGz3B,QAAQ,iBAAkB,KAAOq3B,IAAcF,EAAeC,EAAU39C,KAAK69C,IAAIt/B,EAASjjB,GAAGQ,QAAQ4hD,GAAc11C,MAAM,GAAK,IACxM,MAAO/S,GACP,OAAO,OAp0GQ9G,KAu0GnB8vD,qBAv0GmBnwD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAu0GI,SAAAi/C,IAAA,IAAAC,EAAAp+B,EAAA/R,EAAAowC,EAAA9X,EAAAqQ,EAAA39C,EAAAqlD,EAAA5I,EAAA6I,EAAAC,EAAAz9C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAm/C,GAAA,cAAAA,EAAAj/C,KAAAi/C,EAAAh/C,MAAA,UAAO2+C,EAAPI,EAAApsD,OAAA,QAAA0qB,IAAA0hC,EAAA,IAAAA,EAAA,GACfx+B,EADe,qBAAAjrB,OACsBqpD,GAExB,QADbnwC,EAAa3a,EAAK0tC,cAAchhB,IAFjB,CAAAy+B,EAAAh/C,KAAA,eAAAg/C,EAAAzuC,OAAA,SAIZ/B,GAJY,cAOfowC,EAAY/qD,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,WAAY,cAAc3P,IAAI,SAAAwqD,GAAI,OAAIA,EAAK/iD,gBACrG4qC,EAAWjzC,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,WAAY,YAAa,cAClF+yC,EAAQwH,EAAa9qD,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,WAAY,UAAW,oBAAsBvQ,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,WAAY,UAAW,cAErL5K,EAAO,CACX29C,MAAK,GAAA7hD,OAAK6hD,IAZS6H,EAAAh/C,KAAA,GAeCnM,EAAKgmD,sBAAsB/S,EAAUttC,EAAM,MAAM,GAAM,GAfxD,cAejBqlD,EAfiBG,EAAAj8C,OAgBJ87C,EAAUrlD,MAAQqlD,EAAUrlD,KAAKqlD,WAhB7B,CAAAG,EAAAh/C,KAAA,gBAiBnB6+C,EAAYA,EAAUrlD,KAAKqlD,UACrB5I,EAAWv1C,SAASe,KAAK84B,MAAQ,KACjCukB,EAAiB,GAnBJE,EAAAh/C,KAAA,GAoBbnM,EAAKwL,aAAaw/C,EAAlB,eAAAK,EAAA5wD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA6B,SAAA0/C,EAAOjvD,GAAP,IAAAgiB,EAAAktC,EAAA,OAAAz/B,EAAA7wB,EAAA+Q,KAAA,SAAAw/C,GAAA,cAAAA,EAAAt/C,KAAAs/C,EAAAr/C,MAAA,YAC7B9P,EAAEovD,KAAOrJ,GAAY2I,EAAUx7B,SAASlzB,EAAEqvD,OAAOrjD,gBADpB,CAAAmjD,EAAAr/C,KAAA,QAE/B8+C,EAAeviD,KAAKrM,GAFWmvD,EAAAr/C,KAAA,sBAIzBkS,EAAchiB,EAAEsvD,SAClBJ,GAAoB,EALOC,EAAAr/C,KAAA,EAMzBnM,EAAKwL,aAAanP,EAAEuvD,WAApB,eAAAC,EAAApxD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgC,SAAAkgD,EAAOr6B,GAAP,IAAA9F,EAAAogC,EAAAnyB,EAAA,OAAA9N,EAAA7wB,EAAA+Q,KAAA,SAAAggD,GAAA,cAAAA,EAAA9/C,KAAA8/C,EAAA7/C,MAAA,WAChCo/C,EADgC,CAAAS,EAAA7/C,KAAA,eAAA6/C,EAAAtvC,OAAA,oBAIrB,qBAAX+U,EAAEx0B,KAJ8B,CAAA+uD,EAAA7/C,KAAA,YAK5Bwf,EAAY8F,EAAEvY,OAAOqe,SACrBw0B,EAAgB/rD,EAAKwyB,kBAAkB7G,IANX,CAAAqgC,EAAA7/C,KAAA,gBAAA6/C,EAAA7/C,KAAA,EAQLnM,EAAK+rB,gBAAgBJ,EAAWogC,EAAc3jD,SAAS,EAAMiW,GARxD,QAQ1Bub,EAR0BoyB,EAAA98C,OASZlP,EAAKwM,MAAMotB,GAAcxpB,GAAG,OAC9Cm7C,GAAoB,GAVU,QAAAS,EAAA7/C,KAAA,kCAAA6/C,EAAA1+C,SAAAw+C,EAAAhxD,SAAhC,gBAAAmxD,GAAA,OAAAJ,EAAAr+C,MAAA1S,KAAA2S,YAAA,IANyB,OAyB3B89C,GACFN,EAAeviD,KAAKrM,GA1BS,wBAAAmvD,EAAAl+C,SAAAg+C,EAAAxwD,SAA7B,gBAAAoxD,GAAA,OAAAb,EAAA79C,MAAA1S,KAAA2S,YAAA,IApBa,eAAA09C,EAAAzuC,OAAA,SAmDZ1c,EAAK4a,cAAc8R,EAAeu+B,IAnDtB,yBAAAE,EAAA79C,SAAAu9C,EAAA/vD,SAv0GJA,KA63GnBqxD,eA73GmB1xD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA63GF,SAAAwgD,IAAA,IAAA35B,EAAA+xB,EAAA6H,EAAAC,EAAAC,EAAA9+C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAwgD,GAAA,cAAAA,EAAAtgD,KAAAsgD,EAAArgD,MAAA,cAAOsmB,EAAP85B,EAAAztD,OAAA,QAAA0qB,IAAA+iC,EAAA,GAAAA,EAAA,GAAmB,KAC5B/H,EAASxkD,EAAKuQ,gBAAgB,CAAC,QAAS,WACzCkiB,GAAczyB,EAAKuQ,gBAAgB,CAAC,UAAW,oBAAoBgf,SAASkD,KAC/EA,EAAYzyB,EAAK8uB,wBAEbu9B,EAAersD,EAAKuQ,gBAAgB,CAAC,QAAS,SALrCi8C,EAAArgD,KAAA,EAMInM,EAAK6tC,kBAAkBwe,EAAapZ,SAASxgB,GAAY45B,EAAa30B,KAAK,GAAM,EAAO8sB,GAN5F,cAMT8H,EANSE,EAAAt9C,KAAAs9C,EAAA9vC,OAAA,SAOR4vC,GAPQ,wBAAAE,EAAAl/C,SAAA8+C,EAAAtxD,SA73GEA,KAs4GnBmU,gBAt4GmB,eAAAw9C,EAAAhyD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAs4GD,SAAA8gD,EAAOtkD,GAAP,IAAAsG,EAAAuzC,EAAAC,EAAAyK,EAAAC,EAAAC,EAAAC,EAAAr6B,EAAA/F,EAAA/R,EAAAoyC,EAAAC,EAAAC,EAAAha,EAAA/5B,EAAA+a,EAAAuwB,EAAA75B,EAAAhlB,EAAAunD,EAAAC,EAAA1/C,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAohD,GAAA,cAAAA,EAAAlhD,KAAAkhD,EAAAjhD,MAAA,UAAgBuC,EAAhBy+C,EAAAruD,OAAA,QAAA0qB,IAAA2jC,EAAA,GAAAA,EAAA,GAAyB,KAAMlL,EAA/BkL,EAAAruD,OAAA,QAAA0qB,IAAA2jC,EAAA,GAAAA,EAAA,GAAgD,KAAMjL,EAAtDiL,EAAAruD,OAAA,QAAA0qB,IAAA2jC,EAAA,GAAAA,EAAA,GAAqE,KAAMR,EAA3EQ,EAAAruD,OAAA,QAAA0qB,IAAA2jC,EAAA,IAAAA,EAAA,GAAwGP,EAAxGO,EAAAruD,OAAA,QAAA0qB,IAAA2jC,EAAA,GAAAA,EAAA,GAAoH,KAAMN,EAA1HM,EAAAruD,OAAA,QAAA0qB,IAAA2jC,EAAA,GAAAA,EAAA,GAAkI,KAAML,EAAxIK,EAAAruD,OAAA,QAAA0qB,IAAA2jC,EAAA,GAAAA,EAAA,GAAgJ,KAC1J16B,EAAYzyB,EAAK8uB,uBAQjBpC,EATU,gBAAAjrB,OASsBgxB,EATtB,KAAAhxB,OASmC2G,EATnC,KAAA3G,OAS8CiN,EAT9C,KAAAjN,OASwDmrD,EATxD,KAAAnrD,OASqEorD,EATrE,KAAAprD,OAS8EqrD,GAG3E,QAFfnyC,EAAa3a,EAAK0tC,cAAchhB,IAVpB,CAAA0gC,EAAAjhD,KAAA,eAcR4gD,EAAqBpyC,EAAWtO,OAAO,SAAAwmB,GAAC,OAA2B,OAArBA,EAAEovB,gBAA4BA,GAAkBpvB,EAAEovB,gBAAkBA,KAAwC,OAAnBpvB,EAAEqvB,cAA0BA,GAAgBrvB,EAAEqvB,cAAgBA,OACjL6K,EAAmBjuD,OAAS,GAfxC,CAAAsuD,EAAAjhD,KAAA,cAgBR+gD,EAAeH,EAAmBt9C,MAAM9J,MAhBhC,CAAAynD,EAAAjhD,KAAA,eAkBV+gD,EAAeA,EAAa7gD,OAAO,SAAA5G,GAAC,QAAOw8C,GAAkBx8C,EAAEkK,WAAasyC,MAAqBC,GAAgBz8C,EAAEkK,WAAauyC,MAC/GpjD,OAAS,GAnBhB,CAAAsuD,EAAAjhD,KAAA,gBAAAihD,EAAA1wC,OAAA,SAoBDwwC,GApBC,QAAAE,EAAAjhD,KAAA,iBA0BdwO,EAAa,GA1BC,eA6BVsyC,EAAUjtD,EAAKuQ,gBAAgB,CAAC,QAAS,UAC3C0iC,EA9BY,GAAAxxC,OA8BEwrD,EAAQha,SAASxgB,IA9BnBhxB,OA8BgC2G,IAI5C65C,GAAkBC,GAA2B,OAAXxzC,GAAiC,OAAdk+C,KACjD1zC,EAAS,GAEX+oC,GAAkBp1C,SAASo1C,KACzB0K,EACFzzC,EAAOxQ,KAAP,SAAAjH,OAAqBwgD,KAEfhuB,EAAQguB,EAAkB,OAChC/oC,EAAOxQ,KAAP,SAAAjH,OAAqBwyB,MAIrBiuB,GAAgBr1C,SAASq1C,IAC3BhpC,EAAOxQ,KAAP,OAAAjH,OAAmBygD,IAGN,OAAXxzC,GACFwK,EAAOxQ,KAAP,UAAAjH,OAAsBiN,IAGN,OAAdk+C,GAAsB//C,SAAS+/C,IACjC1zC,EAAOxQ,KAAP,aAAAjH,OAAyBmrD,IAGb,OAAVC,GACF3zC,EAAOxQ,KAAP,SAAAjH,OAAqBorD,IAGT,OAAVC,GAAkBjgD,SAASigD,IAC7B5zC,EAAOxQ,KAAP,SAAAjH,OAAqBqrD,IAGnB5zC,EAAOpa,SACTm0C,GAAY,IAAM/5B,EAAOpQ,KAAK,OAI5B07C,EAASxkD,EAAKuQ,gBAAgB,CAAC,QAAS,WAvE9B68C,EAAAjhD,KAAA,GAwEGnM,EAAKiyC,YAAYgB,GAAU,EAAOuR,GAxErC,WAwEZ75B,EAxEYyiC,EAAAl+C,KAAA,CAAAk+C,EAAAjhD,KAAA,gBAAAihD,EAAA1wC,OAAA,SA0EP,IA1EO,eA6EV/W,EAAOglB,EAAOhlB,KAEhBunD,EAAe,KACJ,OAAXx+C,IACFw+C,EAAevnD,EAAK0G,OAAO,SAAA5G,GAAC,OAAKA,EAAEiJ,SAAWA,KAGhDiM,EAAWjS,KAAK,CACdgG,SACAwzC,eACAD,iBACAt8C,KAAMunD,IAGRltD,EAAK4a,cAAc8R,EAAe/R,GA3FlByyC,EAAA1wC,OAAA,SA6FT/W,GA7FS,yBAAAynD,EAAA9/C,SAAAo/C,EAAA5xD,SAt4GC,gBAAAuyD,GAAA,OAAAZ,EAAAj/C,MAAA1S,KAAA2S,YAAA,GAAA3S,KAq+GnBwyD,qBAr+GmB,eAAAC,EAAA9yD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAq+GI,SAAA4hD,EAAO30C,EAAc40C,GAArB,IAAA/gC,EAAA/R,EAAA+yC,EAAA,OAAA5hC,EAAA7wB,EAAA+Q,KAAA,SAAA2hD,GAAA,cAAAA,EAAAzhD,KAAAyhD,EAAAxhD,MAAA,UACfugB,EADe,gBAAAjrB,OACiBoX,EADjB,KAAApX,OACiCgsD,EAAmBxwD,QACnE0d,EAAa3a,EAAK+tB,8BAA8BrB,KAEnC1sB,EAAKwM,MAAMmO,GAAYvc,QAJrB,CAAAuvD,EAAAxhD,KAAA,eAAAwhD,EAAAjxC,OAAA,SAKZ1c,EAAKwM,MAAMmO,IALC,cAAAgzC,EAAAxhD,KAAA,EAQMnM,EAAKosB,oBAAoBvT,EAAc40C,EAAmBxwD,KAAMwwD,EAAmBv0C,QARzF,cAQfw0C,EAReC,EAAAz+C,KAAAy+C,EAAAjxC,OAAA,SASd1c,EAAKguB,8BAA8BtB,EAAeghC,EAAc,OATlD,wBAAAC,EAAArgD,SAAAkgD,EAAA1yD,SAr+GJ,gBAAA8yD,EAAAC,GAAA,OAAAN,EAAA//C,MAAA1S,KAAA2S,YAAA,GAAA3S,KAg/GnBgzD,iBAh/GmB,eAAAC,EAAAtzD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAg/GA,SAAAoiD,EAAOn1C,GAAP,IAAA6T,EAAA/R,EAAA1V,EAAAxG,EAAA,OAAAqtB,EAAA7wB,EAAA+Q,KAAA,SAAAiiD,GAAA,cAAAA,EAAA/hD,KAAA+hD,EAAA9hD,MAAA,UACjB0M,EAAeA,GAAgB7Y,EAAKjF,MAAMgK,cADzB,CAAAkpD,EAAA9hD,KAAA,eAAA8hD,EAAAvxC,OAAA,UAIR,GAJQ,UAOXgQ,EAPW,oBAAAjrB,OAOyBoX,KACpC8B,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QATzB,CAAA6vD,EAAA9hD,KAAA,eAAA8hD,EAAAvxC,OAAA,SAUR1c,EAAKwM,MAAMmO,IAVH,YAaX1V,EAAcjF,EAAKuQ,gBAAgB,CAAC,QAAS,SAAUsI,EAAarI,mBAC1CvL,EAAYxG,SAd3B,CAAAwvD,EAAA9hD,KAAA,SAAA8hD,EAAAzgC,GAcsCvoB,EAAYxG,SAdlDwvD,EAAA9hD,KAAA,wBAAA8hD,EAAA9hD,KAAA,GAcmEnM,EAAKosB,oBAAoBvT,EAAc,YAd1G,QAAAo1C,EAAAzgC,GAAAygC,EAAA/+C,KAAA,eAcXzQ,EAdWwvD,EAAAzgC,GAAAygC,EAAAvxC,OAAA,SAgBV1c,EAAKguB,8BAA8BtB,EAAejuB,EAAU,OAhBlD,yBAAAwvD,EAAA3gD,SAAA0gD,EAAAlzD,SAh/GA,gBAAAozD,GAAA,OAAAH,EAAAvgD,MAAA1S,KAAA2S,YAAA,GAAA3S,KAkgHnB80B,UAAY,SAAC08B,EAAM6B,EAAavpD,GAC9B,GAAI0nD,GAAQ6B,GAAevpD,EAAiB,CAC1C,IAAIwpD,EAAS3zD,OAAOoE,KAAKytD,GAAMvsB,OAAO,SAACsuB,EAAalmD,GAClD,IAAMmmD,EAAatuD,EAAKwM,MAAM2hD,EAAYhmD,IACpC+7B,EAAMlkC,EAAKwM,MAAM8/C,EAAKnkD,IAC5B,OAAOnI,EAAKwM,MAAM6hD,GAAarhD,KAAKshD,EAAW9lD,MAAM07B,KACpD,GAEH,GAAIkqB,EACF,OAAOpuD,EAAKwM,MAAM4hD,GAAQ9vC,IAAI1Z,GAGlC,OAAO,MA9gHU9J,KAghHnByzD,oBAAsB,SAAC3B,GAA4B,IAAjB4B,EAAiB/gD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAN,EAM3C,MAL0B,CACxBghD,KAAM,KACNC,IAAK,MACLC,KAAM,QAEiB/B,GAAa4B,GAthHrB1zD,KAwhHnB8zD,yBAxhHmBn0D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAwhHQ,SAAAijD,IAAA,IAAAC,EAAAC,EAAApjB,EAAAW,EAAAC,EAAAO,EAAA,OAAAhhB,EAAA7wB,EAAA+Q,KAAA,SAAAgjD,GAAA,cAAAA,EAAA9iD,KAAA8iD,EAAA7iD,MAAA,cACnB2iD,EAAkB9uD,EAAKuQ,gBAAgB,CAAC,YAAa,SACrDw+C,EAAuB/uD,EAAKuQ,gBAAgB,CAAC,QAAS,QAAS,QAAS,kBAAmB,OAAQ,mBACnGo7B,EAAgB3rC,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,cAC9D+7B,EAAkBX,EAAcgC,UAAU,GAC1CpB,EALmB,GAAA9qC,OAKI6qC,EALJ,2CAAA7qC,OAK6DstD,EAAqB3mD,QALlF,cAAA4mD,EAAA7iD,KAAA,EAMKnM,EAAK8tC,wBAAwBvB,EAAmBZ,EAAc9sC,KAAM,MANzE,aAMnBiuC,EANmBkiB,EAAA9/C,OAQF49B,EAAgBnnC,MAAQmnC,EAAgBnnC,KAAKsoC,QAAwD,oBAAvCnB,EAAgBnnC,KAAKsoC,OAAO5hC,QARxF,CAAA2iD,EAAA7iD,KAAA,gBAAA6iD,EAAAtyC,OAAA,SAShBowB,EAAgBnnC,KAAKsoC,OAAO5hC,OAAO,SAAAC,GAAE,OAAKA,EAAGqpB,gBAAgBttB,gBAAkBymD,EAAgB1mD,QAAQC,eAAiBiE,EAAGynB,GAAG1rB,gBAAkB0mD,EAAqB3mD,QAAQC,eAAiBrI,EAAKwM,MAAMF,EAAGrG,OAAOmK,GAAG,MATtM,eAAA4+C,EAAAtyC,OAAA,SAWlB,IAXkB,yBAAAsyC,EAAA1hD,SAAAuhD,EAAA/zD,SAxhHRA,KAqiHnBm0D,yBAA2B,SAAC7D,GAC1B,OAAOprD,EAAKjF,MAAMkK,YAAY8C,UAAUwS,KAAK,SAAAsY,GAAC,OAAIA,EAAEzqB,QAAQC,gBAAkB+iD,EAAK/iD,iBAtiHlEvN,KAwiHnBo0D,aAAe,SAAAjpD,GACb,OAAOjG,EAAKwM,MAAMvG,GAAOipD,aAAax9B,IAAUy9B,aAAa1mD,QAAQ,IAziHpD3N,KA2iHnBs0D,uBAAyB,SAAAx/C,GACvB,OAAO5P,EAAKwM,MAAL,KAAA/K,OAAgBmO,KA5iHN9U,KA8iHnBu0D,qBAAuB,SAACz1B,EAAchqB,KAAgCnC,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,KAAAA,UAAA,OAC9D6hD,EAA0BtvD,EAAKovD,uBAAuBx/C,GAC5D,OAAO5P,EAAKwM,MAAMotB,GAAcpxB,MAAM8mD,GAAyBJ,aAAax9B,IAAUy9B,aAAa1mD,QAAQ,IAhjH1F3N,KAkjHnBkV,iBAAmB,SAAC4pB,EAAchqB,GAAuC,IAAxB89C,EAAwBjgD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAC9D,IAAKmC,EACH,OAAO5P,EAAKwM,MAAMotB,GAEpB,IAAM01B,EAA0BtvD,EAAKovD,uBAAuBx/C,GACxDzC,EAAUnN,EAAKwM,MAAMotB,GAActb,IAAIgxC,GAI3C,OAHI5B,IAAiBA,EAAatvD,UAChC+O,EAAUA,EAAQ3E,MAAMklD,IAEnBvgD,GA3jHUrS,KA6jHnBy0D,oBA7jHmB90D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6jHG,SAAA4jD,IAAA,IAAA32C,EAAA42C,EAAAC,EAAAjiD,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA2jD,GAAA,cAAAA,EAAAzjD,KAAAyjD,EAAAxjD,MAAA,cACpB0M,GAD2BA,EAAP62C,EAAA5wD,OAAA,QAAA0qB,IAAAkmC,EAAA,GAAAA,EAAA,GAAsB,OACG1vD,EAAKjF,MAAMkK,YAAYmoB,KAAK7gB,MADrDojD,EAAAxjD,KAAA,EAESnM,EAAK2mC,0BAA0B9tB,EAAc,UAAU+rC,MAAM,SAAAroC,GACxFvc,EAAKkyB,eAAe,yBAA0B3V,KAH5B,cAEdkzC,EAFcE,EAAAzgD,KAAAygD,EAAAjzC,OAAA,SAMb+yC,GANa,wBAAAE,EAAAriD,SAAAkiD,EAAA10D,SA7jHHA,KAqkHnBs/C,cAAgB,SAACz4C,GAAkD,IAA7CiuD,IAA6CniD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,KAAAA,UAAA,GAA1BoiD,EAA0BpiD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KACpDkd,EAASklC,EACb,GAAIpwC,OAAOR,aAAc,CACvB,IAAMxN,EAAOwN,aAAaC,QAAQvd,GAClC,GAAI8P,IACFkZ,EAASlZ,EACLm+C,GACF,IACEjlC,EAAShgB,KAAKwU,MAAM1N,GACpB,MAAO8K,GAEPoO,EAAS,KACT3qB,EAAK8vD,iBAAiBnuD,IAK9B,OAAKgpB,GACIklC,GAvlHQ/0D,KA2lHnBi1D,gBAAkB,WAAsB,IAArBC,EAAqBviD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAP,GAC/B,GAAIgS,OAAOR,aAAc,CAEvB,IAAK+wC,IAAgBA,EAAYlxD,OAC/B,OAAO2gB,OAAOR,aAAagxC,QAI7B,IADA,IAAMC,EAAqB,GAClBjoD,EAAI,EAAGA,EAAIwX,OAAOR,aAAangB,OAAQmJ,IAAK,CACnD,IAAMkoD,EAAY1wC,OAAOR,aAAatd,IAAIsG,GACrC+nD,EAAYzgC,SAAS4gC,IACxBD,EAAmBxnD,KAAKynD,GAI5BD,EAAmBnxD,QAAQ,SAACoxD,GAC1BnwD,EAAK8vD,iBAAiBK,OA3mHTr1D,KA+mHnBg1D,iBAAmB,SAACnuD,GAClB,QAAI8d,OAAOR,eACTQ,OAAOR,aAAamxC,WAAWzuD,IACxB,IAlnHQ7G,KAsnHnBwkB,gBAAkB,SAAC3d,EAAKsE,GAA6B,IAAtB2E,EAAsB6C,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,GACnD,GAAIgS,OAAOR,aACT,IAGE,OAFAhZ,EAAQ2E,EAAYD,KAAKC,UAAU3E,GAASA,EAC5CwZ,OAAOR,aAAaoxC,QAAQ1uD,EAAKsE,IAC1B,EACP,MAAOsS,GACPga,QAAQha,MAAM,kBAAkBA,GAChCkH,OAAOR,aAAamxC,WAAWzuD,GAGnC,OAAO,GAjoHU7G,KAmoHnBw1D,eAnoHmB,eAAAC,EAAA91D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAmoHF,SAAA4kD,EAAOvrD,GAAP,IAAAwrD,EAAAtC,EAAAj9C,EAAAw/C,EAAAC,EAAAC,EAAA,OAAA9kC,EAAA7wB,EAAA+Q,KAAA,SAAA6kD,GAAA,cAAAA,EAAA3kD,KAAA2kD,EAAA1kD,MAAA,WACVlH,GAAejF,EAAKjF,MAAMkK,cAC7BA,EAAcjF,EAAKjF,MAAMkK,aAEtBA,EAJU,CAAA4rD,EAAA1kD,KAAA,eAAA0kD,EAAAn0C,OAAA,UAKN,GALM,cAQT+zC,EAA0B,GARjBI,EAAA1kD,KAAA,EASWnM,EAAKosB,oBAAoBnnB,EAAYmoB,KAAK7gB,MAAO,kBAT5D,WAST4hD,EATS0C,EAAA3hD,OAWMi/C,EAAYrvD,OAXlB,CAAA+xD,EAAA1kD,KAAA,eAAA0kD,EAAAn0C,OAAA,UAYN,GAZM,OAef,IAfexL,EAAA,SAeNw/C,GACP,IAAMI,EAAyB,IAAI/0C,QAAJ,eAAAg1C,EAAAt2D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAAolD,EAAO70C,EAASC,GAAhB,IAAA60C,EAAA,OAAAnlC,EAAA7wB,EAAA+Q,KAAA,SAAAklD,GAAA,cAAAA,EAAAhlD,KAAAglD,EAAA/kD,MAAA,cAAA+kD,EAAAhlD,KAAA,EAAAglD,EAAA/kD,KAAA,EAETnM,EAAKosB,oBAAoBnnB,EAAYmoB,KAAK7gB,MAAO,kBAAmB,CAACmkD,IAF5D,OAEjCO,EAFiCC,EAAAhiD,KAGvCiN,EAAQ80C,GAH+BC,EAAA/kD,KAAA,gBAAA+kD,EAAAhlD,KAAA,EAAAglD,EAAA1jC,GAAA0jC,EAAA,SAKvC3+B,QAAQqc,IAARsiB,EAAA1jC,IACArR,EAAQ,MAN+B,yBAAA+0C,EAAA5jD,SAAA0jD,EAAAl2D,KAAA,YAAZ,gBAAAq2D,EAAAC,GAAA,OAAAL,EAAAvjD,MAAA1S,KAAA2S,YAAA,IAS/BgjD,EAAwB/nD,KAAKooD,IAVtBJ,EAAgB,EAAGA,EAAgBvC,EAAYrvD,OAAQ4xD,IAAiBx/C,EAAxEw/C,GAfM,OAAAG,EAAA1kD,KAAA,GA4Bc4P,QAAQqD,IAAIqxC,GA5B1B,WA4BTE,EA5BSE,EAAA3hD,KA8BVi/C,GAAgBwC,EA9BN,CAAAE,EAAA1kD,KAAA,gBAAA0kD,EAAAn0C,OAAA,UA+BN,GA/BM,eAkCTk0C,EAAOzC,EAAY9hD,OAAO,SAACglD,EAAOxwD,GAAR,OAAkBwwD,IAAUV,EAAe9vD,KAlC5DgwD,EAAAn0C,OAAA,SAoCRk0C,EAAK9xD,OAAS,GApCN,yBAAA+xD,EAAAvjD,SAAAkjD,EAAA11D,SAnoHE,gBAAAw2D,GAAA,OAAAf,EAAA/iD,MAAA1S,KAAA2S,YAAA,GAAA3S,KAyqHnBohC,eAzqHmB,eAAAq1B,EAAA92D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAyqHF,SAAA4lD,EAAOvsD,EAAamG,GAApB,IAAA2wB,EAAA01B,EAAAC,EAAA11B,EAAA21B,EAAApR,EAAAlrB,EAAA,OAAAvJ,EAAA7wB,EAAA+Q,KAAA,SAAA4lD,GAAA,cAAAA,EAAA1lD,KAAA0lD,EAAAzlD,MAAA,UAEVlH,GAAgBmG,EAFN,CAAAwmD,EAAAzlD,KAAA,eAAAylD,EAAAl1C,OAAA,UAGN,GAHM,UAMXqf,GAAmB,EACnB01B,EAAqB,KACrBC,EAA2B,KAE3B11B,EAA8B,MAG9B/2B,EAAYmwB,YAAanwB,EAAYmwB,UAAUjI,QAbpC,CAAAykC,EAAAzlD,KAAA,YAcPwlD,EAAkB1sD,EAAYmwB,UAAUmrB,YAAYtjD,KACpDsjD,EAAcvgD,EAAKwyB,kBAAkBm/B,GACrCt8B,EAAoBr1B,EAAKwyB,kBAAkBvtB,EAAYmwB,UAAUC,kBAAkBp4B,OAIrFsjD,IAAelrB,EApBN,CAAAu8B,EAAAzlD,KAAA,gBAAAylD,EAAAzlD,KAAA,GAsBsBnM,EAAK8tD,iBAAiB6D,GAtB5C,eAsBXD,EAtBWE,EAAA1iD,KAAA0iD,EAAAzlD,KAAA,GAgCgBnM,EAAKo6B,mBAAmBu3B,EAAiBvmD,GAhCzD,SAgCXqmD,EAhCWG,EAAA1iD,QAmCT8sB,EAA8Bh8B,EAAKgQ,iBAAiByhD,EAAoBC,GAExE31B,EAAmB/7B,EAAKwM,MAAMilD,GAAoBrhD,GAAG,IArC5C,eAAAwhD,EAAAl1C,OAAA,SA6CR,CACLqf,mBACA01B,qBACAC,2BACA11B,gCAjDa,yBAAA41B,EAAAtkD,SAAAkkD,EAAA12D,SAzqHE,gBAAA+2D,EAAAC,GAAA,OAAAP,EAAA/jD,MAAA1S,KAAA2S,YAAA,GAAA3S,KAkuHnB8lC,kBAluHmB,eAAAmxB,EAAAt3D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAkuHC,SAAAomD,EAAOn5C,EAAco5C,GAArB,IAAAC,EAAAC,EAAAj5C,EAAAgkB,EAAAk1B,EAAAC,EAAAC,EAAAj0C,EAAAk0C,EAAAC,EAAAC,EAAAhlD,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0mD,GAAA,cAAAA,EAAAxmD,KAAAwmD,EAAAvmD,MAAA,UAAgC+lD,EAAhCO,EAAA3zD,OAAA,QAAA0qB,IAAAipC,EAAA,GAAAA,EAAA,GAA2C,EAAGN,EAA9CM,EAAA3zD,OAAA,QAAA0qB,IAAAipC,EAAA,GAAAA,EAAA,GAAuD,SAAUv5C,EAAjEu5C,EAAA3zD,OAAA,QAAA0qB,IAAAipC,EAAA,GAAAA,EAAA,GAA0E,GACtFv1B,EAAkBl9B,EAAKsd,qBACvB80C,EAAgBl1B,EAAgBk1B,eAAiB,IAClB,WAAbD,EAHN,CAAAO,EAAAvmD,KAAA,gBAAAumD,EAAAvmD,KAAA,EAGoCnM,EAAKjF,MAAM6e,KAAK0C,IAAIq2C,iBAHxD,OAAAD,EAAAllC,GAAAklC,EAAAxjD,KAAAwjD,EAAAvmD,KAAA,iBAAAumD,EAAAllC,GAG2E3gB,SAASslD,GAHpF,WAGZE,EAHYK,EAAAllC,GAIlB0kC,EAAarlD,SAASqlD,IAAeG,EAAgBD,EAE/CE,EAAQ,GAETzlD,SAASqlD,IAAgBrlD,SAASwlD,GARrB,CAAAK,EAAAvmD,KAAA,gBAAAumD,EAAAh2C,OAAA,SAST41C,GATS,QAYlB,IAASj0C,EAAc6zC,EAAY7zC,EAAcg0C,EAAiBh0C,GAAa+zC,GACzEG,EAAU5lD,KAAKC,IAAIyR,EAAY+zC,EAAcC,MACjCA,GAAgC,WAAbF,IACjCI,EAAU,UAEZD,EAAM5pD,KAAK1I,EAAK4yD,sBAAsB/5C,EAAco5C,EAAzCx3D,OAAA+4B,EAAA,EAAA/4B,CAAA,CAAqDo4D,UAAWx0C,EAAak0C,WAAYr5C,KAjBpF,OAAAw5C,EAAAvmD,KAAA,GAoBY4P,QAAQqD,IAAIkzC,GApBxB,eAoBZE,EApBYE,EAAAxjD,KAAAwjD,EAAAh2C,OAAA,SAqBX81C,EAAgBzyB,OAAQ,SAACygB,EAAO/6C,GAErC,OADA+6C,EAASA,EAAO/+C,OAAOgE,IAEvB,KAxBgB,yBAAAitD,EAAAplD,SAAA0kD,EAAAl3D,SAluHD,gBAAAg4D,EAAAC,GAAA,OAAAhB,EAAAvkD,MAAA1S,KAAA2S,YAAA,GAAA3S,KA6vHnBk4D,uBA7vHmB,eAAAC,EAAAx4D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6vHM,SAAAsnD,EAAOr6C,EAAcF,GAArB,IAAAw6C,EAAA/nD,EAAAunB,EAAAygC,EAAAC,EAAAh2C,EAAAi2C,EAAAC,EAAAC,EAAAC,EAAAhmD,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0nD,GAAA,cAAAA,EAAAxnD,KAAAwnD,EAAAvnD,MAAA,UAAiCgnD,EAAjCM,EAAA30D,OAAA,QAAA0qB,IAAAiqC,EAAA,GAAAA,EAAA,GAAgD,GACvEroD,GAD2EA,EAApDqoD,EAAA30D,OAAA,QAAA0qB,IAAAiqC,EAAA,GAAAA,EAAA,GAA8D,OAChEzzD,EAAKjF,MAAMqQ,QADT,CAAAsoD,EAAAvnD,KAAA,eAAAunD,EAAAh3C,OAAA,SAGd,MAHc,YAKjBiW,EAAW3yB,EAAKwyB,kBAAkB3Z,MACxB8Z,EAAS6hB,QAAQ77B,GANV,CAAA+6C,EAAAvnD,KAAA,gBAOfknD,GAAeD,EAAAzgC,EAAS6hB,SAAQ77B,GAAjBnL,MAAA4lD,EAAA34D,OAAAmgC,EAAA,EAAAngC,CAAgC04D,IAEjD91C,EAAW,KACXi2C,EAAW,KAVMI,EAAAxnD,KAAA,GAAAwnD,EAAAvnD,KAAA,GAgBT4P,QAAQqD,IAAI,CACpBpf,EAAKjF,MAAM6e,KAAK0C,IAAIq3C,cACpBN,EAAaO,YAAY,CAAEpsD,KAAM4D,MAlBhB,QAAAmoD,EAAAG,EAAAxkD,KAAAskD,EAAA/4D,OAAA6yB,EAAA,EAAA7yB,CAAA84D,EAAA,GAcjBl2C,EAdiBm2C,EAAA,GAejBF,EAfiBE,EAAA,GAAAE,EAAAvnD,KAAA,iBAAAunD,EAAAxnD,KAAA,GAAAwnD,EAAAlmC,GAAAkmC,EAAA,sBAwBjBr2C,IAAYi2C,EAxBK,CAAAI,EAAAvnD,KAAA,gBAAAunD,EAAAh3C,OAAA,SAyBZ1c,EAAKgQ,iBAAiBhQ,EAAKgQ,iBAAiBqN,EAAU,GAAG7U,MAAM8qD,GAAW,IAzB9D,eAAAI,EAAAh3C,OAAA,SA6BhB1c,EAAKwM,MAAM,IA7BK,yBAAAknD,EAAApmD,SAAA4lD,EAAAp4D,KAAA,cA7vHN,gBAAA+4D,EAAAC,GAAA,OAAAb,EAAAzlD,MAAA1S,KAAA2S,YAAA,GAAA3S,KA6xHnB2kD,uBA7xHmB,eAAAsU,EAAAt5D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6xHM,SAAAooD,EAAOrhC,EAAUshC,EAAaC,EAAkBrxD,EAAUsxD,GAA1D,IAAAC,EAAA/2C,EAAA,OAAAyO,EAAA7wB,EAAA+Q,KAAA,SAAAqoD,GAAA,cAAAA,EAAAnoD,KAAAmoD,EAAAloD,MAAA,cAAAkoD,EAAAnoD,KAAA,EAAAmoD,EAAAloD,KAAA,EASEnM,EAAKjF,MAAM6e,KAAK0C,IAAIq3C,cATtB,OASft2C,EATeg3C,EAAAnlD,MAWVklD,EAAAzhC,EAAS6hB,SACjBiL,uBADQjyC,MAAA4mD,EAAA,CACeH,GADfxyD,OAAAhH,OAAAmgC,EAAA,EAAAngC,CAC+By5D,KACvC1tC,KAAK,CACJhf,KAAMysD,EACN52C,aAIDi3C,GAAG,kBAAmB,SAAU3xD,GACjC7H,KAAKijB,UAAL,yCAAAtc,OAAwDkB,IACxDwxD,MACCI,KAAK,eAAgB,SAAUC,EAAoBC,GACpD35D,KAAKijB,UAAU,iCAAkC02C,GACjDN,EAAiBM,KAxBEJ,EAAAloD,KAAA,gBAAAkoD,EAAAnoD,KAAA,EAAAmoD,EAAA7mC,GAAA6mC,EAAA,SA2BrBr0D,EAAK+d,UAALs2C,EAAA7mC,IACA3qB,EAAS,KAADwxD,EAAA7mC,IA5Ba,yBAAA6mC,EAAA/mD,SAAA0mD,EAAAl5D,KAAA,YA7xHN,gBAAA45D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,EAAAvmD,MAAA1S,KAAA2S,YAAA,GAAA3S,KA6zHnBi6D,0BAA4B,SAAAC,GAC1B,IAAKh1D,EAAKjF,MAAM6e,KAAKkX,MAAMmkC,YAAYD,GACrC,MAAM,IAAIE,MACR,gBAAgBzzD,OAAOuzD,EAAW,iCAGtC,IAAI1c,EAAI0c,EAAUrgD,MAAM,EAAG,IACvB8c,EAAI,KAAKhwB,OAAOuzD,EAAUrgD,MAAM,GAAI,MACpC5O,EAAI,KAAKtE,OAAOuzD,EAAUrgD,MAAM,IAAK,MAGzC,OAFA5O,EAAI/F,EAAKjF,MAAM6e,KAAKkX,MAAMqkC,YAAYpvD,GACjC,CAAC,GAAI,IAAIwpB,SAASxpB,KAAIA,GAAK,IACzB,CACLuyC,EAAGA,EACH7mB,EAAGA,EACH1rB,EAAGA,IA30HYjL,KA+0HnBs6D,gCAAkC,SAACC,EAAO9+B,EAAS++B,EAAmB3/B,GACpE,OAAOpF,EAAcglC,aACnB,CAAC,UAAW,UAAW,UAAW,SAClC,CAACF,EAAO1/B,EAAiBY,EAASi/B,mBAASF,MAl1H5Bx6D,KAs1HnB26D,oBAt1HmB,eAAAC,EAAAj7D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAs1HG,SAAA+pD,EAAO1B,GAAP,IAAA2B,EAAAC,EAAA,OAAA/pC,EAAA7wB,EAAA+Q,KAAA,SAAA8pD,GAAA,cAAAA,EAAA5pD,KAAA4pD,EAAA3pD,MAAA,cACdypD,EAAe51D,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,aAD/CulD,EAAA3pD,KAAA,EAEFnM,EAAKiyC,YAAL,GAAAxwC,OAAoBm0D,EAAajoB,UAAUooB,OAA3C,iBAAAt0D,OAAiEwyD,EAAjE,WAAAxyD,OAAsFm0D,EAAa18C,OAAO88C,OAAS,KAAM,CACzIC,QAAS,CACPC,YAAaN,EAAa18C,OAAOosC,UAJjB,YAEduQ,EAFcC,EAAA5mD,QAQT2mD,EAAIlwD,KARK,CAAAmwD,EAAA3pD,KAAA,eAAA2pD,EAAAp5C,OAAA,SASXm5C,EAAIlwD,MATO,cAAAmwD,EAAAp5C,OAAA,SAYb,MAZa,wBAAAo5C,EAAAxoD,SAAAqoD,EAAA76D,SAt1HH,gBAAAq7D,GAAA,OAAAT,EAAAloD,MAAA1S,KAAA2S,YAAA,GAAA3S,KAq2HnBs7D,iBAr2HmB,eAAAC,EAAA57D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAq2HA,SAAA0qD,EAAOz9C,EAAcF,EAAYw6C,EAAckC,EAAOxyD,EAAUsxD,GAAhE,IAAAoC,EAAA5jC,EAAA2iC,EAAArB,EAAA19B,EAAAigC,EAAAxB,EAAAyB,EAAAne,EAAA7mB,EAAA1rB,EAAA,OAAA+lB,EAAA7wB,EAAA+Q,KAAA,SAAA0qD,GAAA,cAAAA,EAAAxqD,KAAAwqD,EAAAvqD,MAAA,UACXwmB,EAAW3yB,EAAKwyB,kBAAkB3Z,GADvB,CAAA69C,EAAAvqD,KAAA,eAIftJ,EAAS,KAAM,sBAJA6zD,EAAAh6C,OAAA,UAKR,GALQ,UAQZiW,EAAS6hB,QAAQ77B,GARL,CAAA+9C,EAAAvqD,KAAA,eASftJ,EAAS,KAAM,oBATA6zD,EAAAh6C,OAAA,UAUR,GAVQ,cAaX44C,GAAoBiB,EAAA5jC,EAAS6hB,SAAQ77B,GAAjBnL,MAAA+oD,EAAA97D,OAAAmgC,EAAA,EAAAngC,CAAgC04D,IAAcwD,YAbvDD,EAAAxqD,KAAA,EAgBT+nD,EAAcj0D,EAAKjF,MAAMqQ,QACzBmrB,EAAUv2B,EAAK8uB,uBACf0nC,EAAgBx2D,EAAKo1D,gCAAgCC,EAAO9+B,EAAS++B,EAAmB3iC,EAASqR,UAlBxF0yB,EAAAvqD,KAAA,GAoBSnM,EAAKjF,MAAM6e,KAAK0C,IAAIs6C,SAASC,KACnD,KAAOL,EAAcj4C,SAAS,OAC9B01C,GAtBa,eAoBTe,EApBS0B,EAAAxnD,KAAAunD,EAyBKz2D,EAAK+0D,0BAA0BC,GAA3C1c,EAzBOme,EAyBPne,EAAG7mB,EAzBIglC,EAyBJhlC,EAAG1rB,EAzBC0wD,EAyBD1wD,EAEd/F,EAAKuZ,0BAA0BV,EAAcF,EAAYw6C,EAAa1xD,OAAO,CAAC4zD,EAAO/c,EAAG7mB,EAAG1rB,IAAKlD,EAAUsxD,GA3B3FuC,EAAAh6C,OAAA,UA6BR,GA7BQ,eAAAg6C,EAAAxqD,KAAA,GAAAwqD,EAAAlpC,GAAAkpC,EAAA,SA+Bf7zD,EAAS,KAAD6zD,EAAAlpC,IA/BOkpC,EAAAh6C,OAAA,UAgCR,GAhCQ,yBAAAg6C,EAAAppD,SAAAgpD,EAAAx7D,KAAA,aAr2HA,gBAAAg8D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA7oD,MAAA1S,KAAA2S,YAAA,GAAA3S,KAy4HnBs8D,8BAz4HmB,eAAAC,EAAA58D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAy4Ha,SAAA0rD,EAAOz+C,EAAc/J,EAAcyoD,EAAYC,EAAUlE,GAAzD,IAAA3gC,EAAA8kC,EAAAnrD,EAAA,OAAAwf,EAAA7wB,EAAA+Q,KAAA,SAAA0rD,GAAA,cAAAA,EAAAxrD,KAAAwrD,EAAAvrD,MAAA,UACxBwmB,EAAW3yB,EAAKwyB,kBAAkB3Z,GADV,CAAA6+C,EAAAvrD,KAAA,eAAAurD,EAAAh7C,OAAA,UAIrB,GAJqB,cASxB+6C,EAAc,CAClBF,aACA5xD,KAAM6xD,EACNjrD,MAAOuC,EACPilB,GAAIpB,EAASqR,SACb2zB,MAAO9qD,SAASymD,IAdYoE,EAAAvrD,KAAA,EAoBbnM,EAAKjF,MAAM68D,qBAAqBC,QAAQJ,GApB3B,cAoBxBnrD,EApBwBorD,EAAAxoD,KAAAwoD,EAAAh7C,OAAA,SAsBvBpQ,GAtBuB,wBAAAorD,EAAApqD,SAAAgqD,EAAAx8D,SAz4Hb,gBAAAg9D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAb,EAAA7pD,MAAA1S,KAAA2S,YAAA,GAAA3S,KAk6HnBm6C,sBAl6HmB,eAAAkjB,EAAA19D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAk6HK,SAAAwsD,EAAOz1D,GAAP,OAAAmpB,EAAA7wB,EAAA+Q,KAAA,SAAAqsD,GAAA,cAAAA,EAAAnsD,KAAAmsD,EAAAlsD,MAAA,cAAAksD,EAAAlsD,KAAA,EACR,IAAI4P,QAAJ,eAAAu8C,EAAA79D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAA2sD,EAAOp8C,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAAwsD,GAAA,cAAAA,EAAAtsD,KAAAssD,EAAArsD,MAAA,OACxBnM,EAAKjF,MAAM6e,KAAK0C,IAAI24B,sBAAsBtyC,EAAM,SAAC4Z,EAAKjQ,GAChDiQ,GACFH,EAAOG,GAETJ,EAAQ7P,KALc,wBAAAksD,EAAAlrD,SAAAirD,EAAAz9D,SAAZ,gBAAA29D,EAAAC,GAAA,OAAAJ,EAAA9qD,MAAA1S,KAAA2S,YAAA,IADQ,cAAA4qD,EAAA37C,OAAA,SAAA27C,EAAAnpD,MAAA,wBAAAmpD,EAAA/qD,SAAA8qD,EAAAt9D,SAl6HL,gBAAA69D,GAAA,OAAAR,EAAA3qD,MAAA1S,KAAA2S,YAAA,GAAA3S,KA66HnB89D,iCA76HmB,eAAAC,EAAAp+D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA66HgB,SAAAktD,EAAOC,EAAKC,EAAUn2D,EAAUsxD,GAAhC,IAAAl7C,EAAAggD,EAAA3sD,EAAA4sD,EAAA,OAAAptC,EAAA7wB,EAAA+Q,KAAA,SAAAmtD,GAAA,cAAAA,EAAAjtD,KAAAitD,EAAAhtD,MAAA,cAE7B8M,EAAkB,KAFWkgD,EAAAjtD,KAAA,EAAAitD,EAAAhtD,KAAA,EAKNnM,EAAKjF,MAAM68D,qBAAqBwB,sBAAsB,CAAEL,MAAKC,aALvD,OAKzBC,EALyBE,EAAAjqD,KAM/B+J,EAAkBggD,EAAW5gD,OANE8gD,EAAAhtD,KAAA,uBAAAgtD,EAAAjtD,KAAA,EAAAitD,EAAA3rC,GAAA2rC,EAAA,SAU/Bt2D,EAAS,MAAM,GAVgBs2D,EAAAz8C,OAAA,UAWxB,GAXwB,WAc5BzD,EAd4B,CAAAkgD,EAAAhtD,KAAA,gBAgB/BtJ,EAAS,MAAM,GAhBgBs2D,EAAAz8C,OAAA,UAiBxB,GAjBwB,eAyBjCy3C,EALM7nD,EAAK,CACTsqB,OAAQ,gBACR3d,oBAMIigD,EAAyBz5C,OAAO45C,YAAY,WAChDr5D,EAAKjF,MAAM6e,KAAK0C,IAAI24B,sBAAsBh8B,EAAiB,SAACsD,EAAKk4C,IAE1Dl4C,GAAOk4C,IACVh1C,OAAO65C,cAAcJ,GACrB5sD,EAAG+hC,UAAYomB,EACfnoD,EAAGI,QAAU6P,GAAOk4C,EAAQ/nD,OAAS,UAAY,QAEjD7J,EAASyJ,EAAIiQ,GAE2B,oBAA7BkD,OAAO85C,mBAChB95C,OAAO85C,kBAAkBjtD,EAAI2M,EAAiB3M,EAAGI,OAAQ,UAI9D,KA3C8BysD,EAAAz8C,OAAA,UA6C1B,GA7C0B,yBAAAy8C,EAAA7rD,SAAAwrD,EAAAh+D,KAAA,YA76HhB,gBAAA0+D,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAArrD,MAAA1S,KAAA2S,YAAA,GAAA3S,KA69HnB8+D,+BA79HmB,eAAAC,EAAAp/D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA69Hc,SAAAkuD,EAAOjhD,EAAcy8C,EAAmBzyD,EAAUsxD,GAAlD,IAAAxhC,EAAAshC,EAAAoB,EAAA9+B,EAAAigC,EAAAxB,EAAA+E,EAAAzhB,EAAA7mB,EAAA1rB,EAAA,OAAA+lB,EAAA7wB,EAAA+Q,KAAA,SAAAguD,GAAA,cAAAA,EAAA9tD,KAAA8tD,EAAA7tD,MAAA,UACzBwmB,EAAW3yB,EAAKwyB,kBAAkB3Z,GADT,CAAAmhD,EAAA7tD,KAAA,eAI7BtJ,EAAS,KAAM,sBAJcm3D,EAAAt9C,OAAA,UAKtB,GALsB,cAAAs9C,EAAA9tD,KAAA,EASvB+nD,EAAcj0D,EAAKjF,MAAMqQ,QATF4uD,EAAA7tD,KAAA,EAUTwmB,EAAS6hB,QAAQylB,SAAShG,GAAavf,OAV9B,cAUvB2gB,EAVuB2E,EAAA9qD,KAWvBqnB,EAAUv2B,EAAK8uB,uBACf0nC,EAAgBx2D,EAAKo1D,gCAAgCC,EAAO9+B,EAAS++B,EAAmB3iC,EAASqR,UAZ1Eg2B,EAAA7tD,KAAA,GAcLnM,EAAKjF,MAAM6e,KAAK0C,IAAIs6C,SAASC,KACnD,KAAOL,EAAcj4C,SAAS,OAC9B01C,GAhB2B,eAcvBe,EAduBgF,EAAA9qD,KAAA6qD,EAmBT/5D,EAAK+0D,0BAA0BC,GAA3C1c,EAnBqByhB,EAmBrBzhB,EAAG7mB,EAnBkBsoC,EAmBlBtoC,EAAG1rB,EAnBeg0D,EAmBfh0D,EAEd/F,EAAKuZ,0BAA0BV,EAAc,yBAA0B,CAACo7C,EAAaqB,EAAmBhd,EAAG7mB,EAAG1rB,GAAIlD,EAAUsxD,GArB/F6F,EAAAt9C,OAAA,UAuBtB,GAvBsB,eAAAs9C,EAAA9tD,KAAA,GAAA8tD,EAAAxsC,GAAAwsC,EAAA,SAyB7BznC,QAAQha,MAARyhD,EAAAxsC,IACA3qB,EAAS,KAADm3D,EAAAxsC,IA1BqBwsC,EAAAt9C,OAAA,UA2BtB,GA3BsB,yBAAAs9C,EAAA1sD,SAAAwsD,EAAAh/D,KAAA,aA79Hd,gBAAAo/D,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAArsD,MAAA1S,KAAA2S,YAAA,GAAA3S,KA4/HnBw/D,kBA5/HmB,eAAAC,EAAA9/D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA4/HC,SAAA4uD,EAAO7kC,EAAiB8kC,EAAWC,EAAOC,EAAS10D,EAAOovD,EAAOuF,EAAUrkC,GAA3E,IAAA0X,EAAA4sB,EAAAC,EAAAC,EAAA1wC,EAAA1kB,EAAA,OAAAmmB,EAAA7wB,EAAA+Q,KAAA,SAAAgvD,GAAA,cAAAA,EAAA9uD,KAAA8uD,EAAA7uD,MAAA,eACFqd,IAAZ+M,EADc,CAAAykC,EAAA7uD,KAAA,eAAA6uD,EAAA7uD,KAAA,EAEKnM,EAAKjF,MAAM6e,KAAK0C,IAAI2+C,aAFzB,OAEVhtB,EAFU+sB,EAAA9rD,KAGhBqnB,EAAU1pB,SAASohC,GAHH,cAMZ4sB,EAAS,CACb,CAAE59D,KAAM,OAAQoB,KAAM,UACtB,CAAEpB,KAAM,UAAWoB,KAAM,UACzB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,oBAAqBoB,KAAM,YAG/By8D,EAAS,CACb,CAAE79D,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,WAAYoB,KAAM,YAGtB08D,EAAa,CACjBG,QAAS,IACTj+D,KAAMw9D,EACNlkC,QAASA,EACT4kC,kBAAmBxlC,GAGftL,EAAU,CACdqwC,QACAC,UACA10D,QACAovD,QACAuF,YAGIj1D,EAAOgF,KAAKC,UAAU,CAC1BwwD,MAAO,CACLC,aAAcR,EACdS,OAAQR,GAEVS,YAAa,SACbV,OAAQE,EACR1wC,QAASA,IA3CO2wC,EAAAt+C,OAAA,SA8CX,IAAIX,QAAQ,SAACI,EAASC,GAC3Bpc,EAAKjF,MAAM6e,KAAK6c,gBAAgBjQ,KAAK,CACnCg1C,QAAS,MACTt7D,GAAI0N,KAAK84B,MAAMnoB,WAAWk9C,UAAU,GACpC7kC,OAAQ,uBACR1d,OAAQ,CAACwhD,EAAO/0D,GAChB6B,KAAMkzD,GACL,SAACniD,EAAOs9C,GACT,GAAIt9C,EACF,OAAO6D,EAAO7D,GAGhB4D,EAAQ05C,EAAI5nB,aA1DE,yBAAA+sB,EAAA1tD,SAAAktD,EAAA1/D,SA5/HD,gBAAA4gE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA1B,EAAA/sD,MAAA1S,KAAA2S,YAAA,GAAA3S,KA2jInBohE,WA3jImB,eAAAC,EAAA1hE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA2jIN,SAAAwwD,EAAOC,EAAkBC,EAAQC,GAAjC,IAAAC,EAAAv2D,EAAAw2D,EAAAC,EAAAzuB,EAAA1X,EAAA8kC,EAAAsB,EAAAC,EAAAvH,EAAAiG,EAAAuB,EAAAlC,EAAAQ,EAAA2B,EAAAjC,EAAAxwC,EAAAqwC,EAAAE,EAAAj1D,EAAAo3D,EAAAtvD,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAgxD,GAAA,cAAAA,EAAA9wD,KAAA8wD,EAAA7wD,MAAA,UAAsDqwD,EAAtDO,EAAAj+D,OAAA,QAAA0qB,IAAAuzC,EAAA,GAAAA,EAAA,GAAmE,EAAG92D,EAAtE82D,EAAAj+D,OAAA,QAAA0qB,IAAAuzC,EAAA,GAAAA,EAAA,GAA8E,KACnFN,EAAez8D,EAAKwyB,kBAAkB6pC,GACtCK,EAAkB18D,EAAKwyB,kBAAkB+pC,GAE1CE,GAAiBC,EAJX,CAAAM,EAAA7wD,KAAA,eAAA6wD,EAAAtgD,OAAA,UAKF,GALE,cAAAsgD,EAAA7wD,KAAA,EAQUnM,EAAKjF,MAAM6e,KAAK0C,IAAI2gD,IAAIC,QARlC,UAQLjvB,EARK+uB,EAAA9tD,KASPqnB,EAAU1pB,SAASohC,GAEjBotB,EAAe,CACnB,CAAEp+D,KAAM,OAAQoB,KAAM,UACtB,CAAEpB,KAAM,UAAWoB,KAAM,UACzB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,oBAAqBoB,KAAM,YAG/Bs+D,EAAe38D,EAAKuQ,gBAAgB,CAAC,SAAU8rD,IAE/CO,EAASjwD,KAAKwwD,OAAM,IAAIvvD,MAAOY,UAAY,IAAO,OAC5CmuD,EAAaS,YArBd,CAAAJ,EAAA7wD,KAAA,gBAAA6wD,EAAA7wD,KAAA,GAqBkCswD,EAAajoB,QAAQmoB,EAAaS,aAAad,GAAQ5nB,OArBzF,QAAAsoB,EAAAxvC,GAAAwvC,EAAA9tD,KAAA8tD,EAAA7wD,KAAA,iBAAA6wD,EAAAxvC,GAqBkG,KArBlG,QAqBP6nC,EArBO2H,EAAAxvC,GAsBPgvC,EAAa,IACfnH,EAAQxoD,SAASwoD,GAASxoD,SAAS2vD,IAErCnH,EAAQA,EAAM92C,WAER+8C,EAASqB,EAAat+D,KACtBw+D,EAAaF,EAAaE,WAE1BlC,EAAU+B,EAAgB14B,SAC1Bm3B,EAAoBsB,EAAaz4B,SAEjC84B,EAAaH,EAAa1/D,MAAQo/D,EAElCxB,EAAS,CACbtkC,UACAt5B,KAAM6/D,EACN3B,oBACAD,QAASyB,EAAazB,QAAQ38C,YAAc,KAG1C8L,EAAU,GA1CH2yC,EAAAppB,GA4CHipB,EA5CGG,EAAA7wD,KA6CJ,OA7CI6wD,EAAAppB,GAAA,2BA8CD8mB,EAAQ4B,EACR1B,EAAWgC,EAEjB32D,EAAQA,GAASjG,EAAKkvD,aAAalvD,EAAKwM,MAAM,GAAG6wD,IAAI,KAAKpwD,MAAM,IAChEod,EAAU,CACRpkB,QACAovD,QACAqF,QACAC,UACAC,YAvDKoC,EAAAtgD,OAAA,2BA2DP2N,EAAU,CACRiyC,SACAjH,QACAuH,SACAjC,UACA2C,SAAS,GAhEJN,EAAAtgD,OAAA,2BAqEL/W,EAAOgF,KAAKC,UAAU,CAC1BiwD,SACAxwC,UACA+wC,MAAO,CACLE,SACAD,gBAEFE,YAAa,WA5EJyB,EAAAtgD,OAAA,SAiFJ,IAAIX,QAAQ,SAACI,EAASC,GAC3Bpc,EAAKjF,MAAM6e,KAAK6c,gBAAgBjQ,KAAK,CACnChf,KAAM80D,EACNd,QAAS,MACTtiD,OAAQ,CAACojD,EAAQ32D,GACjBixB,OAAQ,uBACR12B,GAAI0N,KAAK84B,MAAMnoB,WAAWk9C,UAAU,IACnC,SAACljD,EAAOglD,GACT,GAAIhlD,GAAUglD,GAAYA,EAAShlD,MACjC,OAAO4D,EAAQ,MACV,GAAIohD,GAAYA,EAAStvB,OAAQ,CACtC,IAAMimB,EAAmBl0D,EAAK+0D,0BAA0BwI,EAAStvB,QAGjE,OAFAimB,EAAiBmB,MAAQA,EACzBnB,EAAiB0I,OAASA,EACnBzgD,EAAQ+3C,SA/FV,yBAAA8I,EAAA1vD,SAAA8uD,EAAAthE,SA3jIM,gBAAA0iE,EAAAC,EAAAC,GAAA,OAAAvB,EAAA3uD,MAAA1S,KAAA2S,YAAA,GAAA3S,KAgqInBs7D,iBAhqImB,eAAAuH,EAAAljE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAgqIA,SAAAgyD,EAAOvB,EAAkBC,EAAQC,EAAqB5jD,EAAYw6C,EAActwD,EAAUsxD,GAA1F,IAAAsI,EAAAC,EAAAxI,EAAA0I,EAAAvH,EAAA/c,EAAA7mB,EAAA1rB,EAAA83D,EAAAC,EAAAC,EAAA7kD,EAAA8kD,EAAAvwD,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAiyD,GAAA,cAAAA,EAAA/xD,KAAA+xD,EAAA9xD,MAAA,UAAA6xD,EAAAl/D,OAAA,QAAA0qB,IAAAw0C,EAAA,GAAAA,EAAA,GAA8H,KAEzIvB,EAAez8D,EAAKwyB,kBAAkB6pC,GACtCK,EAAkB18D,EAAKwyB,kBAAkB+pC,GAE1CE,GAAiBC,EALL,CAAAuB,EAAA9xD,KAAA,eAMftJ,EAAS,KAAM,sBANAo7D,EAAAvhD,OAAA,UAOR,GAPQ,cAAAuhD,EAAA9xD,KAAA,EAUcnM,EAAKk8D,WAAWG,EAAkBC,EAAQC,GAVxD,QAUXrI,EAVW+J,EAAA/uD,OAaP0tD,EAA2B1I,EAA3B0I,OAAQvH,EAAmBnB,EAAnBmB,MAAO/c,EAAY4b,EAAZ5b,EAAG7mB,EAASyiC,EAATziC,EAAG1rB,EAAMmuD,EAANnuD,EACvB83D,EAAe,CAACjB,EAAQ72D,EAAGuyC,EAAG7mB,GAE9BqsC,EAAYpB,EAAgBwB,eAAe3jD,KAAK,SAAA4jD,GAAC,OAAIA,EAAElhE,OAAS0b,IAChEolD,GAAWD,GAAYA,EAAU3pB,OAAO55B,KAAK,SAAAtS,GAAC,MAAe,UAAXA,EAAEhL,QACrDmB,MAAMyO,SAASwoD,KAAW0I,GAC7BF,EAAaO,QAAQ/I,GAEjBn8C,EAASi6C,EAAa1xD,OAAOo8D,GACnC79D,EAAKuZ,0BAA0BgjD,EAAqB5jD,EAAYO,EAAQrW,EAAUsxD,IAElFtxD,EAAS,KAAM,oBAxBA,yBAAAo7D,EAAA3wD,SAAAswD,EAAA9iE,SAhqIA,gBAAAujE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAhB,EAAAnwD,MAAA1S,KAAA2S,YAAA,GAAA3S,KA4rInB8jE,aA5rImB,eAAAC,EAAApkE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA4rIJ,SAAAkzD,EAAOjmD,EAAc8c,EAAiB2/B,EAAmBzyD,EAAUsxD,GAAnE,IAAAkH,EAAA0D,EAAAxoC,EAAAwkC,EAAApoC,EAAAshC,EAAAoB,EAAAhrC,EAAA20C,EAAA,OAAAlzC,EAAA7wB,EAAA+Q,KAAA,SAAAizD,GAAA,cAAAA,EAAA/yD,KAAA+yD,EAAA9yD,MAAA,cAEPkvD,EAAe,CACnB,CAAEp+D,KAAM,OAAQoB,KAAM,UACtB,CAAEpB,KAAM,UAAWoB,KAAM,UACzB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,oBAAqBoB,KAAM,YAG/B0gE,EAAkB,CACtB,CAAE9hE,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,OAAQoB,KAAM,WACtB,CAAEpB,KAAM,oBAAqBoB,KAAM,UAZxB4gE,EAAA9yD,KAAA,EAeSnM,EAAKjF,MAAM6e,KAAK0C,IAAI2+C,aAf7B,UAeP1kC,EAfO0oC,EAAA/vD,KAiBP6rD,EAAa,CACjBxkC,UACA2kC,QAAS,IACTj+D,KAAM4b,EACNsiD,kBAAmBxlC,GAGfhD,EAAW3yB,EAAKwyB,kBAAkB3Z,GAxB3B,CAAAomD,EAAA9yD,KAAA,gBA2BXtJ,EAAS,KAAM,sBA3BJo8D,EAAAviD,OAAA,UA4BJ,GA5BI,eA+BTu3C,EAAcj0D,EAAKjF,MAAMqQ,QA/BhB6zD,EAAA9yD,KAAA,GAgCKwmB,EAAS6hB,QAAQylB,SAAShG,GAAavf,OAhC5C,QAgCT2gB,EAhCS4J,EAAA/vD,MAiCTmb,EAAU,IACNgrC,MAAQA,EAChBhrC,EAAQ7iB,KAAOysD,EACf5pC,EAAQirC,kBAAoBA,EAEtB0J,EAAar0D,KAAKC,UAAU,CAChCwwD,MAAO,CACLC,eACA0D,mBAEFlE,OAAQE,EACRQ,YAAa,kBACblxC,YAKFrqB,EAAKjF,MAAM6e,KAAK6c,gBAAgBjQ,KAC9B,CACEg1C,QAAS,MACTt7D,GAAI,aACJsH,KAAMysD,EACNr9B,OAAQ,uBACR1d,OAAQ,CAAC+6C,EAAa+K,IAExB,SAACzmD,EAAOglD,GACN,GAAIhlD,GAAUglD,GAAYA,EAAShlD,MACjC,OAAO1V,EAAS,KAAM0V,GACjB,GAAIglD,GAAYA,EAAStvB,OAAQ,CACtC,IAAMimB,EAAmBl0D,EAAK+0D,0BAA0BwI,EAAStvB,QACzDqK,EAAY4b,EAAZ5b,EAAG7mB,EAASyiC,EAATziC,EAAG1rB,EAAMmuD,EAANnuD,EAEd/F,EAAKuZ,0BAA0BV,EAAc,yBAA0B,CAACo7C,EAAaqB,EAAmBhd,EAAG7mB,EAAG1rB,GAAIlD,EAAUsxD,MAjErH,yBAAA8K,EAAA3xD,SAAAwxD,EAAAhkE,SA5rII,gBAAAokE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAArxD,MAAA1S,KAAA2S,YAAA,GAAA3S,KAmwInBykE,mBAnwImB,eAAAC,EAAA/kE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAmwIE,SAAA6zD,EAAO5mD,EAAc6mD,EAAcC,GAAnC,IAAAC,EAAAC,EAAA1yD,EAAA2yD,EAAA,OAAAh0C,EAAA7wB,EAAA+Q,KAAA,SAAA+zD,GAAA,cAAAA,EAAA7zD,KAAA6zD,EAAA5zD,MAAA,cAAA4zD,EAAA5zD,KAAA,EAIT4P,QAAQqD,IAAI,CACpBpf,EAAK+rB,gBAAgBlT,EAAc8mD,GAAY,GAC/C3/D,EAAKggE,aAAannD,EAAc6mD,EAAcC,KAN7B,cAAAC,EAAAG,EAAA7wD,KAAA2wD,EAAAplE,OAAA6yB,EAAA,EAAA7yB,CAAAmlE,EAAA,GAEjBzyD,EAFiB0yD,EAAA,GAGjBC,EAHiBD,EAAA,GAQnB7/D,EAAK+d,UAAU,qBAAsBlF,EAAc7Y,EAAKwM,MAAMszD,GAAWr3D,UAAWzI,EAAKwM,MAAMW,GAAS1E,UAAYq3D,GAAa9/D,EAAKwM,MAAMszD,GAAWG,IAAIjgE,EAAKwM,MAAMW,KARnJ4yD,EAAArjD,OAAA,SASZojD,GAAa9/D,EAAKwM,MAAMszD,GAAWG,IAAIjgE,EAAKwM,MAAMW,KATtC,wBAAA4yD,EAAAzyD,SAAAmyD,EAAA3kE,SAnwIF,gBAAAolE,EAAAC,EAAAC,GAAA,OAAAZ,EAAAhyD,MAAA1S,KAAA2S,YAAA,GAAA3S,KA8wInBklE,aA9wImB,eAAAK,EAAA5lE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA8wIJ,SAAA00D,EAAOznD,EAAc6mD,EAAcC,GAAnC,OAAA7zC,EAAA7wB,EAAA+Q,KAAA,SAAAu0D,GAAA,cAAAA,EAAAr0D,KAAAq0D,EAAAp0D,MAAA,UACR0M,GAAiB6mD,GAAiBC,EAD1B,CAAAY,EAAAp0D,KAAA,eAAAo0D,EAAA7jD,OAAA,UAEJ,GAFI,cAIb1c,EAAK+d,UAAU,eAAgBlF,EAAc6mD,EAAcC,GAJ9CY,EAAAp0D,KAAA,EAKAnM,EAAKosB,oBAChBvT,EAAc,YAAa,CAAC8mD,EAAYD,IAN7B,cAAAa,EAAA7jD,OAAA,SAAA6jD,EAAArxD,MAAA,wBAAAqxD,EAAAjzD,SAAAgzD,EAAAxlE,SA9wII,gBAAA0lE,EAAAC,EAAAC,GAAA,OAAAL,EAAA7yD,MAAA1S,KAAA2S,YAAA,GAAA3S,KAuxInB6lE,mCAAqC,SAAC9nD,EAAcF,EAAYO,EAAQjT,EAAOpD,EAAUsxD,EAAkByM,GACzG5gE,EAAKjF,MAAMwe,0BAA0BV,EAAcF,EAAYO,EAAQjT,EAAO,SAACqG,GACrD,oBAAbzJ,GACTA,EAASyJ,IAEV,SAACA,GAC8B,oBAArB6nD,GACTA,EAAiB7nD,IAElB,KAAMs0D,IAhyIQ9lE,KAkyInBye,0BAA4B,SAACV,EAAcF,EAAYO,EAAQrW,EAAUsxD,GAA0E,IAAxDyM,EAAwDnzD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAA/C,KAAMozD,EAAyCpzD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,GAAvBqzD,EAAuBrzD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KACxI,IACEzN,EAAKjF,MAAMwe,0BAA0BV,EAAcF,EAAYO,EAAQ,KAAM,SAAC5M,GACpD,oBAAbzJ,GACTA,EAASyJ,IAEV,SAACA,GAC8B,oBAArB6nD,GACTA,EAAiB7nD,IAElB,KAAMs0D,EAAQC,EAAUC,GAC3B,MAAOvoD,GACP1V,EAAS,KAAM0V,KA9yIAzd,KAizInBimE,aAAe,SAACloD,EAAczQ,EAASvF,EAAUsxD,GAC/Cn0D,EAAKjF,MAAMwe,0BAA0BV,EAAc,UAAW,CAC5DzQ,EACApI,EAAKjF,MAAM6e,KAAKkX,MAAMkwC,iBAAiB,MACtC,KAAM,SAAC10D,GACgB,oBAAbzJ,GACTA,EAASyJ,IAEV,SAACA,GAC8B,oBAArB6nD,GACTA,EAAiB7nD,MA3zIJxR,KA+zInBmmE,wBAA0B,SAACpoD,EAAczQ,EAAS03D,EAAWj9D,EAAUsxD,GACrE5hC,QAAQqc,IAAI,0BAA0B/1B,EAAczQ,EAAS03D,GAC7D9/D,EAAKjF,MAAMwe,0BAA0BV,EAAc,UAAW,CAC5DzQ,EACApI,EAAKkvD,aAAa4Q,IACjB,KAAM,SAACxzD,GACgB,oBAAbzJ,GACTA,EAASyJ,IAEV,SAACA,GAC8B,oBAArB6nD,GACTA,EAAiB7nD,MA10IJxR,KA80InBomE,YAAc,SAACroD,EAAczQ,EAASvF,EAAUsxD,GAC9Cn0D,EAAKjF,MAAMwe,0BAA0BV,EAAc,UAAW,CAC5DzQ,EACApI,EAAKjF,MAAM6e,KAAKkX,MAAMkwC,iBAAiB,OACtC,KAAM,SAAC10D,GACgB,oBAAbzJ,GACTA,EAASyJ,IAEV,SAACA,GAC8B,oBAArB6nD,GACTA,EAAiB7nD,MAx1IJxR,KA41InBqmE,aA51ImB1mE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA41IJ,SAAAw1D,IAAA,IAAA3uC,EAAAvnB,EAAAm2D,EAAAt8D,EAAAunD,EAAAgV,EAAA7zD,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAu1D,GAAA,cAAAA,EAAAr1D,KAAAq1D,EAAAp1D,MAAA,cAAOsmB,EAAP6uC,EAAAxiE,OAAA,QAAA0qB,IAAA83C,EAAA,GAAAA,EAAA,GAAiB,KAAKp2D,EAAtBo2D,EAAAxiE,OAAA,QAAA0qB,IAAA83C,EAAA,GAAAA,EAAA,GAAsC,KAC/CD,EAAe,KACft8D,EAAgB,KACf0tB,IACHA,EAAYzyB,EAAK8uB,wBAJNyyC,EAAAp1D,KAAA,EAMMnM,EAAKmsD,eAAe15B,GAN1B,YAMP65B,EANOiV,EAAAryD,QAODo9C,EAAKkV,UAPJ,CAAAD,EAAAp1D,KAAA,SAQXmgD,EAAKkV,UAAUziE,QAAS,SAAA0iE,GACtB,IAAMC,EAAW1hE,EAAKwM,MAAMi1D,EAAQt9B,KACpC,GAAIu9B,EAAS,CACX,IAAMn1D,EAAQk1D,EAAQ72C,YAChBy2C,IAAgBA,EAAan0D,GAAGw0D,IAAgBx2D,IAAmBA,EAAgBqB,KACvF80D,EAAeK,EACf38D,EAAgBwH,MAdXg1D,EAAAp1D,KAAA,qBAkBFjB,EAlBE,CAAAq2D,EAAAp1D,KAAA,gBAAAo1D,EAAAp1D,KAAA,GAmBLnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAy2D,EAAAlnE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+C,SAAAg2D,EAAOr1D,GAAP,IAAAtH,EAAAy8D,EAAA,OAAA51C,EAAA7wB,EAAA+Q,KAAA,SAAA61D,GAAA,cAAAA,EAAA31D,KAAA21D,EAAA11D,MAAA,cAC7ClH,EAAciG,EAAgBqB,GADes1D,EAAA11D,KAAA,EAE5BnM,EAAK28B,aAAa13B,GAFU,QAE7Cy8D,EAF6CG,EAAA3yD,OAGf,OAApBwyD,EAAStT,SAClBiT,IAAgBA,EAAan0D,GAAGw0D,EAAStT,UAC5CiT,EAAeK,EAAStT,OACxBrpD,EAAgBwH,IAN+B,wBAAAs1D,EAAAv0D,SAAAs0D,EAAA9mE,SAA/C,gBAAAgnE,GAAA,OAAAH,EAAAn0D,MAAA1S,KAAA2S,YAAA,IAnBK,eAAA8zD,EAAA7kD,OAAA,SA8BN3X,GA9BM,yBAAAw8D,EAAAj0D,SAAA8zD,EAAAtmE,SA51IIA,KA43InB2/B,wBA53ImB,eAAAsnC,EAAAtnE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA43IO,SAAAo2D,EAAOnpD,EAAa8mD,GAApB,IAAAlhE,EAAAka,EAAA+T,EAAA/R,EAAAggB,EAAAsnC,EAAAx0D,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAk2D,GAAA,cAAAA,EAAAh2D,KAAAg2D,EAAA/1D,MAAA,UAA+B1N,EAA/BwjE,EAAAnjE,OAAA,QAAA0qB,IAAAy4C,EAAA,GAAAA,EAAA,GAAwC,KAAKtpD,EAA7CspD,EAAAnjE,OAAA,QAAA0qB,IAAAy4C,EAAA,GAAAA,EAAA,GAAwD,cAC3EtC,EADmB,CAAAuC,EAAA/1D,KAAA,eAAA+1D,EAAAxlD,OAAA,UAEf,GAFe,UAMlBgQ,EANkB,wBAAAjrB,OAMsBoX,EANtB,KAAApX,OAMsCk+D,EANtC,KAAAl+D,OAMoDhD,KACtEkc,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QARlB,CAAA8jE,EAAA/1D,KAAA,eAAA+1D,EAAAxlD,OAAA,SASf1c,EAAKwM,MAAMmO,IATI,cAAAunD,EAAA/1D,KAAA,GAYEnM,EAAKosB,oBAAoBvT,EAAcF,EAAY,CAACgnD,IAZtD,aAYpBhlC,EAZoBunC,EAAAhzD,MAAA,CAAAgzD,EAAA/1D,KAAA,YAclB1N,IACFk8B,EAAgB36B,EAAKgQ,iBAAiB2qB,EAAel8B,KAEvDk8B,EAAgB36B,EAAKwM,MAAMmuB,IAERv8B,QAnBG,CAAA8jE,EAAA/1D,KAAA,gBAAA+1D,EAAAxlD,OAAA,SAoBb1c,EAAKguB,8BAA8BtB,EAAeiO,EAAe,KApBpD,eAAAunC,EAAAxlD,OAAA,SAuBjB1c,EAAKwM,MAAM,IAvBM,yBAAA01D,EAAA50D,SAAA00D,EAAAlnE,SA53IP,gBAAAqnE,EAAAC,GAAA,OAAAL,EAAAv0D,MAAA1S,KAAA2S,YAAA,GAAA3S,KAq5InBunE,oBAr5ImB,eAAAC,EAAA7nE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAq5IG,SAAA22D,EAAOC,EAAU7nC,EAAcvvB,GAA/B,IAAAsb,EAAA+7C,EAAAppC,EAAAqpC,EAAA/sB,EAAAgtB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAx3C,EAAA7wB,EAAA+Q,KAAA,SAAAu3D,GAAA,cAAAA,EAAAr3D,KAAAq3D,EAAAp3D,MAAA,UAEhBua,EAAQ1mB,EAAKwM,MAAM,GAEvBpB,EAAUA,GAAoBpL,EAAKjF,MAAMqQ,QACnCq3D,EAAgBziE,EAAKuQ,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,aAC/D8oB,EAAcr5B,EAAKuQ,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,kBAAkBiyD,MAChEp3D,EAPD,CAAAm4D,EAAAp3D,KAAA,eAAAo3D,EAAA7mD,OAAA,SAQXgK,GARW,cAAA68C,EAAAp3D,KAAA,EAWG4P,QAAQqD,IAAI,CACjCpf,EAAK+rB,gBAAgB02C,EAAcl2D,MAAMnB,GAAQ,GACjDpL,EAAKwjE,oBAAoBf,EAAcl2D,OACvCvM,EAAK2mC,0BAA0BtN,EAAYp8B,KAAK,mBAAmB,CAACmO,IACpEpL,EAAK2mC,0BAA0BtN,EAAYp8B,KAAK,kBAChD+C,EAAK2mC,0BAA0BtN,EAAYp8B,KAAK,eAChD+C,EAAK+rB,gBAAgBsN,EAAYp8B,KAAKmO,KAjBpB,cAWds3D,EAXca,EAAAr0D,KAoBhBymC,EAAU+sB,EAAS9hE,IAAI,SAAAiwB,GAAC,OAAI7wB,EAAKwM,MAAMqkB,KAEvC7wB,EAAKwM,MAAMmuB,GAAev8B,UAC5Bu8B,EAAgB36B,EAAKwM,MAAM,IAE7BmuB,EAAgB36B,EAAKwM,MAAMmuB,GAAe3tB,KAAK2oC,EAAQ,IAEnDgtB,EAAI3iE,EAAKwM,MAAMxM,EAAKqvD,qBAAqB10B,EAAc,KACvDioC,EAAiBjtB,EAAQ,GACzBktB,EAAeltB,EAAQ,GACvBmtB,EAAmBntB,EAAQ,GAC3BotB,EAAiBptB,EAAQ,GACzBqtB,EAAIrtB,EAAQ,GAAG3oC,KAAK21D,GAEpBM,EAAuBjjE,EAAKwM,MAAM,IAGtC02D,GAFIA,EAAMP,EAAEn6D,MAAMy6D,GAAsB3kD,IAAI,MAElCtR,KAAKg2D,EAAEx6D,MAAMo6D,GAAgBtkD,IAAIukD,GAAcr6D,MAAOxI,EAAKwM,MAAM,KAAKS,MAAMg2D,GAAuB3kD,IAAI,OACjH4kD,EAAMljE,EAAKwM,MAAMG,KAAKC,IAAI+1D,EAAGO,IAEzBC,EAAUL,EACVM,EAAcH,EAAqBz6D,MAAMm6D,GAAGrkD,IAAI,KAChD+kD,EAAiBN,EAAe/1D,KAAKo2D,GAAan2D,MAAMk2D,GACxDG,EAAkBP,EAAe/1D,KAAKk2D,GAAKj2D,MAAMk2D,GAErDz8C,EAAQ1mB,EAAKwM,MAAM02D,GAAK5kD,IAAIglD,GAAiBhlD,IAAI8kD,EAAY9kD,IAAI+kD,IA7C7CE,EAAA7mD,OAAA,SAiDbgK,GAjDa,yBAAA68C,EAAAj2D,SAAAi1D,EAAAznE,SAr5IH,gBAAA2oE,EAAAC,EAAAC,GAAA,OAAArB,EAAA90D,MAAA1S,KAAA2S,YAAA,GAAA3S,KAw8InB8oE,mBAx8ImB,eAAAC,EAAAppE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAw8IE,SAAAk4D,EAAOzqC,GAAP,IAAAiJ,EAAAyhC,EAAAC,EAAAC,EAAAC,EAAA,OAAAp4C,EAAA7wB,EAAA+Q,KAAA,SAAAm4D,GAAA,cAAAA,EAAAj4D,KAAAi4D,EAAAh4D,MAAA,cAAAg4D,EAAAh4D,KAAA,EAEKnM,EAAK6iC,eAFV,cAEbP,EAFa6hC,EAAAj1D,KAGb60D,EAA0D,OAArCl3D,SAASy1B,EAAU3yB,UAAU,QAAe,OAHpDw0D,EAAAh4D,KAAA,EAUT4P,QAAQqD,IAAI,CAIpBpf,EAAKosB,oBAAoB,kBAAkB,wBAAwB,CAACiN,EAAYjxB,QAAQ27D,MAdvE,cAAAC,EAAAG,EAAAj1D,KAAA+0D,EAAAxpE,OAAA6yB,EAAA,EAAA7yB,CAAAupE,EAAA,GASjBE,EATiBD,EAAA,IAkBnBC,EAAclkE,EAAKwM,MAAM03D,IACT9lE,UACd8lE,EAAclkE,EAAKwM,MAAM,IApBR23D,EAAAznD,OAAA,SAuBZwnD,GAvBY,yBAAAC,EAAA72D,SAAAw2D,EAAAhpE,SAx8IF,gBAAAspE,GAAA,OAAAP,EAAAr2D,MAAA1S,KAAA2S,YAAA,GAAA3S,KAi+InBupE,sBAj+ImB,eAAAC,EAAA7pE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAi+IK,SAAA24D,EAAOlrC,GAAP,IAAAjuB,EAAAo5D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAv3D,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAi5D,GAAA,cAAAA,EAAA/4D,KAAA+4D,EAAA94D,MAAA,UAAoBf,EAApB45D,EAAAlmE,OAAA,QAAA0qB,IAAAw7C,EAAA,GAAAA,EAAA,GAA4B,KAC5CR,EAAkB,KAClBC,EAAeprC,EAAYorC,aAAeprC,EAAYorC,aAAe,IAE1D3lE,OAJK,CAAAmmE,EAAA94D,KAAA,aAKIf,EALJ,CAAA65D,EAAA94D,KAAA,gBAAA84D,EAAA94D,KAAA,EAKoBnM,EAAKosB,oBAAoBiN,EAAYp8B,KAAK,mBAAmB,CAACmO,IALlF,OAAA65D,EAAAz3C,GAAAy3C,EAAA/1D,KAAA+1D,EAAA94D,KAAA,iBAAA84D,EAAAz3C,GAK8FxtB,EAAKwM,MAAM,GALzG,QAKdk4D,EALcO,EAAAz3C,GAMpBg3C,EAAgBC,EAAa,IAAM,CACjCvgC,IAAI,KACJghC,KAAKllE,EAAKwM,MAAM,GAChBW,QAAQnN,EAAKwM,MAAMk4D,IATD,eAAAO,EAAA94D,KAAA,GAccnM,EAAK2mC,0BAA0BtN,EAAYp8B,KAAK,mBAd9D,aAchB0nE,EAdgBM,EAAA/1D,OAeiC,+CAA1By1D,EAfP,CAAAM,EAAA94D,KAAA,gBAgBdy4D,EAhBc,GAAAnjE,OAgBgB43B,EAAYp8B,KAhB5B,iBAAAwE,OAgBgDkjE,GAE9DE,EAAqB7kE,EAAKuQ,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,YAAY,iBAEhFu0D,EAAkBD,EAAmBjiC,IApBvBqiC,EAAA94D,KAAA,GAqBdnM,EAAKjF,MAAM4nC,aAAaiiC,EAA0BD,EAAuBG,GArB3D,eAuBdC,EAAelzC,MAAMrqB,KAAKqqB,MAAMgzC,EAAmBM,YAAYtmE,QAvBjDomE,EAAA94D,KAAA,GAwBdnM,EAAKwL,aAAau5D,EAAlB,eAAAK,EAAA3qE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+B,SAAAy5D,EAAOC,GAAP,IAAAC,EAAAtgE,EAAAugE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxsC,EAAAysC,EAAAC,EAAAC,EAAAC,EAAA1iC,EAAA2iC,EAAAC,EAAAC,EAAA,OAAAr6C,EAAA7wB,EAAA+Q,KAAA,SAAAo6D,GAAA,cAAAA,EAAAl6D,KAAAk6D,EAAAj6D,MAAA,cAAAi6D,EAAAl6D,KAAA,EAAAk6D,EAAAj6D,KAAA,EAEAnM,EAAK2mC,0BAA0Bi+B,EAAyB,eAAe,CAACU,IAFxE,YAE3BC,EAF2Ba,EAAAl3D,MAAA,CAAAk3D,EAAAj6D,KAAA,cAIzBlH,EAAcjF,EAAKqmE,wBAAwBd,IAJlB,CAAAa,EAAAj6D,KAAA,gBAAAi6D,EAAAj6D,KAAA,EASnB4P,QAAQqD,IAAI,CACpBpf,EAAKosB,oBAAoBw4C,EAAyB,aAAa,CAACW,IAChEn6D,EAAUpL,EAAKosB,oBAAoBiN,EAAYp8B,KAAK,yBAAyB,CAACmO,EAAQm6D,IAAuBvlE,EAAKwM,MAAM,KAX7F,UAAAg5D,EAAAY,EAAAl3D,KAAAu2D,EAAAhrE,OAAA6yB,EAAA,EAAA7yB,CAAA+qE,EAAA,GAO3BE,EAP2BD,EAAA,GAQ3BE,EAR2BF,EAAA,IAczBC,IAAc1lE,EAAKwM,MAAMk5D,EAAWY,YAAYl2D,GAAG,GAd1B,CAAAg2D,EAAAj6D,KAAA,gBAerBy5D,EAAY5lE,EAAKjF,MAAMs9B,kBAAkBgB,EAAYN,UAAUM,EAAYktC,iBAC3EntC,EAAgBwsC,EAAUY,GAhBLJ,EAAAj6D,KAAA,GAqBjB4P,QAAQqD,IAAI,CACpBpf,EAAKwjE,oBAAoBnqC,EAAYp8B,MACrC+C,EAAK2mC,0BAA0Bi/B,EAAUjlC,IAAI1jC,KAAM,eAAgB,CAACm8B,EAAchxB,YAvBzD,eAAAy9D,EAAAO,EAAAl3D,KAAA42D,EAAArrE,OAAA6yB,EAAA,EAAA7yB,CAAAorE,EAAA,GAmBzBE,EAnByBD,EAAA,GAoBzBE,EApByBF,EAAA,GA0BrBxiC,EAAkBtjC,EAAKgQ,iBAAiB01D,EAAWY,WAAW,IAC9DL,EAA6BjmE,EAAK+jC,eAAe1K,EAAYktC,iBAC7DL,EAA6BlmE,EAAKgQ,iBAAiB+1D,EAAiB,IAAIv9D,MAAMxI,EAAKgQ,iBAAiBg2D,EAAkB,KAI5HvB,EAAa/7D,KAAKzD,EAAYsH,OAhCH65D,EAAAj6D,KAAA,GAiCEnM,EAAKgjC,eAAe/9B,EAAYsH,MAAM05D,EAA2BC,EAA2B5iC,GAjC9F,QAiCrB6iC,EAjCqBC,EAAAl3D,KAkC3Bs1D,EAAgBv/D,EAAYsH,OAA5B9R,OAAA+4B,EAAA,EAAA/4B,CAAA,CACE0S,QAAQnN,EAAKwM,MAAMm5D,GACnBT,KAAK5hC,EAAgB96B,MAAM,QACxB29D,GArCsB,QAAAC,EAAAj6D,KAAA,iBAAAi6D,EAAAl6D,KAAA,GAAAk6D,EAAA54C,GAAA44C,EAAA,kCAAAA,EAAA94D,SAAA+3D,EAAAvqE,KAAA,aAA/B,gBAAA2rE,GAAA,OAAArB,EAAA53D,MAAA1S,KAAA2S,YAAA,IAxBc,eAAAw3D,EAAAvoD,OAAA,SAwEf+nD,EAAeA,EAAa1kC,OAAQ,SAAC0kC,EAAa5pC,GAUvD,OATA4pC,EAAa5pC,GAAe76B,EAAKuQ,gBAAgB,CAAC,QAAQ,SAASsqB,EAAYrqB,iBAAmB,GAE7Fg0D,EAAgB3pC,KACnB2pC,EAAgB3pC,GAAe,CAC7BqqC,KAAKllE,EAAKwM,MAAM,GAChBW,QAAQnN,EAAKwM,MAAM,KAGvBi4D,EAAa5pC,GAAbpgC,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAgCgqE,EAAa5pC,GAAgB2pC,EAAgB3pC,IACtE4pC,GACP,IAAM,MAnFc,yBAAAQ,EAAA33D,SAAAi3D,EAAAzpE,SAj+IL,gBAAA4rE,GAAA,OAAApC,EAAA92D,MAAA1S,KAAA2S,YAAA,GAAA3S,KAsjJnBw/B,yBAtjJmB,eAAAqsC,EAAAlsE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAsjJQ,SAAAg7D,EAAOx7D,EAASguB,GAAhB,IAAAzgB,EAAAkgB,EAAAguC,EAAAp5D,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA86D,GAAA,cAAAA,EAAA56D,KAAA46D,EAAA36D,MAAA,cAA+BwM,EAA/BkuD,EAAA/nE,OAAA,QAAA0qB,IAAAq9C,EAAA,GAAAA,EAAA,GAA0C,qBAC7DhuC,EAAiB,GADEiuC,EAAA36D,KAAA,EAGnBnM,EAAKwL,aAAa4tB,EAAcsB,WAAW7B,eAA3C,eAAAkuC,EAAAtsE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA2D,SAAAo7D,EAAO/hE,GAAP,IAAAgiE,EAAAC,EAAApJ,EAAA3K,EAAApmD,EAAA,OAAA+e,EAAA7wB,EAAA+Q,KAAA,SAAAm7D,GAAA,cAAAA,EAAAj7D,KAAAi7D,EAAAh7D,MAAA,UACzD86D,EAAoBjnE,EAAKuQ,gBAAgB,CAAC,QAAS,SAAUtL,EAAYsH,MAAMiE,gBACrFvL,EAAWxK,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQwK,EAAgBgiE,GAE7BC,EAAyBlnE,EAAKwyB,kBAAkB4G,EAAcsB,WAAWz9B,MAJhB,CAAAkqE,EAAAh7D,KAAA,eAAAg7D,EAAAzqD,OAAA,wBASzDohD,EAAYoJ,EAAuBhJ,eAAe3jD,KAAK,SAAA4jD,GAAC,OAAIA,EAAElhE,OAAS0b,IAEvEw6C,EAAe,CAAC/nD,GAClB0yD,EAAU3pB,OAAOr1C,OAAO,GAC1Bq0D,EAAazqD,KAAKzD,EAAYmD,SAb+B++D,EAAAh7D,KAAA,GAgBrCnM,EAAK2mC,0BAA0BvN,EAAcsB,WAAWz9B,KAAM0b,EAAYw6C,GAhBrC,QAgBzDpmD,EAhByDo6D,EAAAj4D,KAiB/D2pB,EAAe5zB,EAAYsH,OAASvM,EAAKgQ,iBAAiBjD,EAAa9H,EAAYxG,UAjBpB,yBAAA0oE,EAAA75D,SAAA05D,EAAAlsE,SAA3D,gBAAAssE,GAAA,OAAAL,EAAAv5D,MAAA1S,KAAA2S,YAAA,IAHmB,cAAAq5D,EAAApqD,OAAA,SAyBlBmc,GAzBkB,wBAAAiuC,EAAAx5D,SAAAs5D,EAAA9rE,SAtjJR,gBAAAusE,EAAAC,GAAA,OAAAX,EAAAn5D,MAAA1S,KAAA2S,YAAA,GAAA3S,KAilJnBigC,oBAjlJmB,eAAAwsC,EAAA9sE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAilJG,SAAA47D,EAAOC,EAAO38C,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,GAAhF,IAAAs8D,EAAAz5B,EAAA05B,EAAAl6D,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA47D,GAAA,cAAAA,EAAA17D,KAAA07D,EAAAz7D,MAAA,cAAyFu7D,IAAzFC,EAAA7oE,OAAA,QAAA0qB,IAAAm+C,EAAA,KAAAA,EAAA,GAAAC,EAAAz7D,KAAA,EACCnM,EAAK6nE,iBAAiBJ,EAAO38C,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GAAc,GADvH,cACdz5B,EADc25B,EAAA14D,KAAA04D,EAAAlrD,OAAA,SAEbuxB,GAFa,wBAAA25B,EAAAt6D,SAAAk6D,EAAA1sE,SAjlJH,gBAAAgtE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA/5D,MAAA1S,KAAA2S,YAAA,GAAA3S,KAqlJnB+sE,iBArlJmB,eAAAS,EAAA7tE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAqlJA,SAAA28D,EAAOd,EAAO38C,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,GAAjE,IAAAhuB,EAAAs8D,EAAAc,EAAAC,EAAA99C,EAAA+9C,EAAAhqE,EAAAD,EAAAE,EAAAgqE,EAAA9vC,EAAA+vC,EAAAC,EAAAl9C,EAAA0N,EAAA4I,EAAA6mC,EAAA5mC,EAAA6mC,EAAA1iC,EAAA2iC,EAAAC,EAAAC,EAAAC,EAAA9qC,EAAA+qC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAtxC,GAAAmK,GAAAonC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA1nC,GAAA2nC,GAAAC,GAAA7sC,GAAA8sC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA9+D,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAwgE,GAAA,cAAAA,EAAAtgE,KAAAsgE,EAAArgE,MAAA,cAAgFf,EAAhFmhE,GAAAztE,OAAA,QAAA0qB,IAAA+iD,GAAA,GAAAA,GAAA,GAA0F,KAAM7E,IAAhG6E,GAAAztE,OAAA,QAAA0qB,IAAA+iD,GAAA,KAAAA,GAAA,GAAqH/D,IAArH+D,GAAAztE,OAAA,QAAA0qB,IAAA+iD,GAAA,KAAAA,GAAA,GAAyI9D,IAAzI8D,GAAAztE,OAAA,SAAA0qB,IAAA+iD,GAAA,MAAAA,GAAA,IACb5hD,EAAS,KACT+9C,EAAoB,KAClBhqE,EAAgBosB,GAAcje,SAASie,EAAWpsB,cAAc,EAAKosB,EAAWpsB,aAAe,EAC/FD,EAAYqsB,GAAcje,SAASie,EAAWrsB,UAAU,EAAKqsB,EAAWrsB,SAAYuB,EAAKjF,MAAM+B,SAAW,EAAI,EAC9G6B,EAAgBmsB,GAAcje,SAASie,EAAWnsB,cAAc,EAAKmsB,EAAWnsB,aAAgBqB,EAAKjF,MAAM+B,SAAW,EAAI,EAE1H6rE,EAAgB3oE,EAAK00B,8BAA8B,iBACnDmE,EAAiB5zB,GAAek0B,EAAUl0B,EAAYk0B,GAASuB,WAAW7B,eAAiB,GAC3F+vC,EAAwB/vC,EAAe/5B,OAAO,EAAI+5B,EAAexsB,OAAQ,SAAAioB,GAAC,OAAIA,EAAEnH,UAAY,KAC5F07C,KAAiBD,GAAyBA,EAAsB9pE,OAAO,GACvE6sB,EAAY3rB,EAAKuQ,gBAAgB,CAAC,QAAS,SAAUhE,EAAMiE,cAAe,WAAaxQ,EAAKgJ,WAAWuD,IAEzG8sB,EAAcr5B,EAAKuQ,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,kBAAkBhE,MAChE6sB,GAAiBC,EAAYc,cAAgBd,EAAYc,aAAa5tB,MAAMlE,gBAAkB+wB,EAAc7sB,MAAMlE,gBACnIgxB,EAAc,MAIV4I,EAAiBh9B,EAAYw9B,SAC7BqmC,EAAgBH,GAA6C,IAA5B97D,SAAS87D,GApB/B6D,EAAArgE,KAAA,GAuBiBnM,EAAK0iC,6BAA6Bz9B,EAAY07B,IAAI1jC,KAAM,WAAY,MAvBrF,aAuBXilC,EAvBWsqC,EAAAt9D,MAAA,CAAAs9D,EAAArgE,KAAA,gBAAAqgE,EAAArgE,KAAA,GAyBTnM,EAAKjF,MAAM4nC,aAAaV,EAAehlC,KAAMilC,EAAqBD,EAAeW,KAzBxE,QA4BXmmC,EAAqB/oE,EAAKuQ,gBAAgB,CAAC,YAAa,SA5B7Ci8D,EAAAh/C,GA6BTi6C,EA7BS+E,EAAArgE,KA8BV,iBA9BUqgE,EAAAh/C,GAAA,GAiCV,cAjCUg/C,EAAAh/C,GAAA,GAoCV,gBApCUg/C,EAAAh/C,GAAA,GAwCV,SAxCUg/C,EAAAh/C,GAAA,GAiDV,kBAjDUg/C,EAAAh/C,GAAA,GAwDV,sBAxDUg/C,EAAAh/C,GAAA,GA2DV,sBA3DUg/C,EAAAh/C,GAAA,GA8DV,eA9DUg/C,EAAAh/C,GAAA,GAiEV,eAjEUg/C,EAAAh/C,GAAA,GAoEV,cApEUg/C,EAAAh/C,GAAA,GAuEV,cAvEUg/C,EAAAh/C,GAAA,GA0EV,gBA1EUg/C,EAAAh/C,GAAA,GA2FV,yBA3FUg/C,EAAAh/C,GAAA,GAkGV,qBAlGUg/C,EAAAh/C,GAAA,GA8GV,eA9GUg/C,EAAAh/C,GAAA,GAoHV,qBApHUg/C,EAAAh/C,GAAA,IA0HV,iBA1HUg/C,EAAAh/C,GAAA,IAgIV,kBAhIUg/C,EAAAh/C,GAAA,IA4JV,sBA5JUg/C,EAAAh/C,GAAA,IA6KV,gCA7KUg/C,EAAAh/C,GAAA,IA8LV,oBA9LUg/C,EAAAh/C,GAAA,IAiNV,gBAjNUg/C,EAAAh/C,GAAA,IAoOV,aApOUg/C,EAAAh/C,GAAA,IAoPV,iBApPUg/C,EAAAh/C,GAAA,IAmQV,eAnQUg/C,EAAAh/C,GAAA,IAoQV,mBApQUg/C,EAAAh/C,GAAA,IAqQV,0BArQUg/C,EAAAh/C,GAAA,IA0VV,gBA1VUg/C,EAAAh/C,GAAA,IAgXV,2BAhXUg/C,EAAAh/C,GAAA,IAiXV,4BAjXUg/C,EAAAh/C,GAAA,IAoYV,uBApYUg/C,EAAAh/C,GAAA,IAuYV,yBAvYUg/C,EAAAh/C,GAAA,IA4YV,oBA5YUg/C,EAAAh/C,GAAA,IAsZV,uBAtZUg/C,EAAAh/C,GAAA,IAyZV,gBAzZUg/C,EAAAh/C,GAAA,IA0ZV,iBA1ZUg/C,EAAAh/C,GAAA,IA2ZV,sBA3ZUg/C,EAAAh/C,GAAA,IA8aV,cA9aUg/C,EAAAh/C,GAAA,IA+aV,gBA/aUg/C,EAAAh/C,GAAA,IAgbV,mBAhbUg/C,EAAAh/C,GAAA,6BA+Bb7C,GAAU3qB,EAAKuQ,gBAAgB,CAAC,QAAS,YAAawoB,EAAU,WAAa/4B,EAAKgJ,WAAW+vB,IAAWvoB,cA/B3Fg8D,EAAA9vD,OAAA,4BAkCbiO,EAASgB,EAlCI6gD,EAAA9vD,OAAA,4BAqCbiO,GAAU3qB,EAAKuQ,gBAAgB,CAAC,WAAY4oB,EAAS,cAAgB,IAAI3oB,cArC5Dg8D,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GAyCQnM,EAAK2mC,0BAA0B1hC,EAAY07B,IAAI1jC,KAAM,oBAzC7D,eAyCTopC,EAzCSmmC,EAAAt9D,KA0CRlP,EAAKwM,MAAM65B,GAAUjoC,UACxBusB,EAAS3qB,EAAKgQ,iBAAiBq2B,EAAUphC,EAAY07B,IAAIliC,UACrD+pE,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,KA7CtD6tE,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GAkDEnM,EAAK+6B,oBAAoB,OAAQjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GAlD9G,eAkDb/8C,EAlDa6hD,EAAAt9D,KAAAs9D,EAAArgE,KAAA,GAmDEnM,EAAKg7B,2BAA2BrQ,EAAQ1lB,GAnD1C,eAmDb0lB,EAnDa6hD,EAAAt9D,KAoDTs5D,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,IAAiB8pE,EAAY,IAAAhnE,OAAOkqB,GAAc,KArDtG6gD,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GAyDEnM,EAAK6nE,iBAAiB,cAAe/8C,EAAYiO,EAAUxsB,EAAO,KAAMtH,EAAaA,EAAYuhE,GAAIp7D,EAASs8D,EAAcc,GAAa,GAzD3I,eAyDb79C,EAzDa6hD,EAAAt9D,KAAAs9D,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GA4DEnM,EAAK6nE,iBAAiB,cAAe/8C,EAAYiO,EAAUxsB,EAAO,KAAMtH,EAAaA,EAAYwnE,GAAIrhE,EAASs8D,EAAcc,GAAa,GA5D3I,eA4Db79C,EA5Da6hD,EAAAt9D,KAAAs9D,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GA+DEnM,EAAK6nE,iBAAiB,cAAe/8C,EAAYiO,EAAUxsB,EAAO,KAAMtH,EAAaA,EAAYuhE,GAAIp7D,EAASs8D,GA/DhH,eA+Db/8C,EA/Da6hD,EAAAt9D,KAAAs9D,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GAkEEnM,EAAK6nE,iBAAiB,cAAe/8C,EAAYiO,EAAUxsB,EAAO,KAAMtH,EAAaA,EAAYwnE,GAAIrhE,EAASs8D,GAlEhH,eAkEb/8C,EAlEa6hD,EAAAt9D,KAAAs9D,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GAqEEnM,EAAK6nE,iBAAiB,aAAc/8C,EAAYiO,EAAUxsB,EAAO,KAAMtH,EAAaA,EAAYuhE,GAAIp7D,EAASs8D,GArE/G,eAqEb/8C,EArEa6hD,EAAAt9D,KAAAs9D,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GAwEEnM,EAAK6nE,iBAAiB,aAAc/8C,EAAYiO,EAAUxsB,EAAO,KAAMtH,EAAaA,EAAYwnE,GAAIrhE,EAASs8D,GAxE/G,eAwEb/8C,EAxEa6hD,EAAAt9D,KAAAs9D,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GA8EH4P,QAAQqD,IAAI,CACpBpf,EAAKwjE,oBAAoBpqC,EAAcn8B,KAAM,SAAU,KACvD+C,EAAK6nE,iBAAiB,eAAgB/8C,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,KAhFtG,eAAAsB,EAAAwD,EAAAt9D,KAAA+5D,EAAAxuE,OAAA6yB,EAAA,EAAA7yB,CAAAuuE,EAAA,GA4EXE,EA5EWD,EAAA,GA6EXE,EA7EWF,EAAA,GAmFbt+C,EAAS3qB,EAAKwM,MAAM,GACfxM,EAAKwM,MAAM28D,GAAc/qE,SAAY4B,EAAKwM,MAAM08D,GAAa9qE,UAChEusB,EAAS3qB,EAAKgQ,iBAAiBk5D,EAAajkE,EAAY07B,IAAIliC,UAAU+J,MAAM2gE,IAE1EX,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,IAAiB8pE,EAAY,IAAAhnE,OAAOkqB,GAAc,KAxFtG6gD,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GA4FEnM,EAAK+6B,oBAAoB,cAAejQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GA5FrH,eA4Fb/8C,EA5Fa6hD,EAAAt9D,KAAAs9D,EAAArgE,KAAA,GA6FEnM,EAAKg7B,2BAA2BrQ,EAAQ1lB,GA7F1C,eA6Fb0lB,EA7Fa6hD,EAAAt9D,KA8FTs5D,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,IAAiB8pE,EAAY,IAAAhnE,OAAOkqB,GAAc,KA/FtG6gD,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GAmGWnM,EAAK+pC,0BAA0B9kC,EAAam0B,EAAehuB,GAnGtE,eAmGPizB,EAnGOmuC,EAAAt9D,KAoGbyb,EAASA,GAAU3qB,EAAKwM,MAAM,IAC9Bme,EAAS3qB,EAAKwM,MAAM6xB,IACTjuB,GAAG,GACRo4D,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,IAAiB8pE,EAAY,IAAAhnE,OAAOkqB,GAAc,KAGnHhB,EAAS69C,EAAc,IAAM,KA3GlBgE,EAAA9vD,OAAA,4BAAA8vD,EAAArgE,KAAA,GA+GEnM,EAAK0iC,6BAA6Bz9B,EAAY07B,IAAI1jC,KAAM,MAAO,MA/GjE,eA+Gb0tB,EA/Ga6hD,EAAAt9D,QAiHXyb,EAAS3qB,EAAKwM,MAAMme,GAAQrM,IAAIte,EAAKwM,MAAM,OAjHhCggE,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IAqHEnM,EAAK2mC,0BAA0B1hC,EAAY07B,IAAI1jC,KAAM,eAAgB,CAACm8B,EAAchxB,UArHtF,gBAqHbuiB,EArHa6hD,EAAAt9D,QAuHXyb,EAAS3qB,EAAKgQ,iBAAiB2a,EAAQyO,EAAc36B,WAvH1C+tE,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IA2HEnM,EAAK2mC,0BAA0B1hC,EAAY07B,IAAI1jC,KAAM,eAAgB,CAACm8B,EAAchxB,UA3HtF,gBA2HbuiB,EA3Ha6hD,EAAAt9D,QA6HXyb,EAAS3qB,EAAKgQ,iBAAiB2a,EAAQyO,EAAc36B,WA7H1C+tE,EAAA9vD,OAAA,6BAiIbiO,EAAS69C,EAAc,MAAQxoE,EAAKwM,MAAM,GAjI7BggE,EAAArgE,KAAA,IAsIH4P,QAAQqD,IAAI,CACpBia,EAAcr5B,EAAK+rB,gBAAgBsN,EAAYp8B,KAAMmO,GAAW,KAChEpL,EAAK6nE,iBAAL,eAAsC/8C,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GACjHmB,EAAiB7oE,EAAKy6B,wBAAwBrB,EAAcsB,WAAWz9B,KAAMmO,EAASguB,EAAcsB,WAAWj8B,SAAS26B,EAAcmB,UAAUI,eAAiB,OAzItJ,gBAAAyuC,EAAAoD,EAAAt9D,KAAAm6D,EAAA5uE,OAAA6yB,EAAA,EAAA7yB,CAAA2uE,EAAA,GAmIXE,EAnIWD,EAAA,GAoIXE,EApIWF,EAAA,GAqIXG,EArIWH,EAAA,GA4ITI,EAAczpE,EAAKwM,MAAM,GACzBg9D,IACFC,EAAcA,EAAYz8D,KAAKw8D,IAE7BF,IACFG,EAAcA,EAAYz8D,KAAKs8D,IAG7BG,EAAYr5D,GAAG,IAAMm5D,IACvB5+C,EAAS3qB,EAAKwM,MAAMi9D,GAAajhE,MAAM+gE,GAEnCf,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,IAAiB8pE,EAAY,IAAAhnE,OAAOkqB,GAAc,MAxJxG6gD,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IAgKH4P,QAAQqD,IAAI,CACpBpf,EAAK+rB,gBAAgBqN,EAAcn8B,KAAMmO,GACzCpL,EAAK+6B,oBAAL,eAAyCjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,KAlKzG,gBAAAgC,EAAA8C,EAAAt9D,KAAAy6D,EAAAlvE,OAAA6yB,EAAA,EAAA7yB,CAAAivE,EAAA,GA8JXE,EA9JWD,EAAA,GA+JXE,EA/JWF,EAAA,GAqKbh/C,EAAS69C,EAAc,IAAM,KACzBoB,GAAcC,IAChBl/C,EAAS3qB,EAAKwM,MAAMo9D,GAAYphE,MAAMqhE,GAClCrB,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,IAAiB8pE,EAAY,IAAAhnE,OAAOkqB,GAAc,MAzKxG6gD,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IAiLH4P,QAAQqD,IAAI,CACpBpf,EAAK+6B,oBAAL,oBAA8CjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GACzH1nE,EAAK+6B,oBAAL,gBAA0CjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,KAnL1G,gBAAAoC,EAAA0C,EAAAt9D,KAAA66D,EAAAtvE,OAAA6yB,EAAA,EAAA7yB,CAAAqvE,EAAA,GA+KXE,EA/KWD,EAAA,GAgLXE,EAhLWF,EAAA,GAsLbp/C,EAAS69C,EAAc,IAAM,KACzBwB,GAAeC,IACjBt/C,EAAS3qB,EAAKwM,MAAMw9D,GAAah9D,KAAKi9D,GAClCzB,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,IAAiB8pE,EAAY,IAAAhnE,OAAOkqB,GAAc,MA1LxG6gD,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IAmMH4P,QAAQqD,IAAI,CACpBpf,EAAK+6B,oBAAL,WAAqCjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GAChH1nE,EAAK+6B,oBAAL,iBAA2CjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GACtH1nE,EAAK+6B,oBAAL,mBAA6CjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,KAtM7G,gBAAAwC,EAAAsC,EAAAt9D,KAAAi7D,EAAA1vE,OAAA6yB,EAAA,EAAA7yB,CAAAyvE,EAAA,GAgMXE,EAhMWD,EAAA,GAiMXE,EAjMWF,EAAA,IAkMXG,GAlMWH,EAAA,KAyMKC,GAAiBC,IAC3BE,GAAcD,GAAWl6D,GAAG,GAAKk6D,GAAW9hE,MAAM6hE,EAAY/rD,IAAI,MAAMtR,KAAKo9D,GAAiB,EACpGz/C,EAAS,CACP4/C,eACAH,kBA7MSoC,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IAqNH4P,QAAQqD,IAAI,CACpBpf,EAAK+6B,oBAAL,aAAuCjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GAClH1nE,EAAK+6B,oBAAL,kBAA4CjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,KAvN5G,gBAAA8C,GAAAgC,EAAAt9D,KAAAu7D,GAAAhwE,OAAA6yB,EAAA,EAAA7yB,CAAA+vE,GAAA,GAmNXE,GAnNWD,GAAA,GAoNXE,GApNWF,GAAA,GA0NTC,IAAcC,KACVC,GAAUD,GAAgBJ,YAAY/hE,MAAMkiE,IAC5CG,GAAYF,GAAgBP,cAAc5hE,MAAMkiE,IAEtD//C,EAAS,CACPigD,WACAC,eAhOS2B,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IAwOH4P,QAAQqD,IAAI,CACpBpf,EAAK+6B,oBAAL,mBAA6CjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GACxH1nE,EAAK+6B,oBAAL,8BAAwDjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,KA1OxH,gBAAAoD,GAAA0B,EAAAt9D,KAAA67D,GAAAtwE,OAAA6yB,EAAA,EAAA7yB,CAAAqwE,GAAA,GAsOXE,GAtOWD,GAAA,GAuOXE,GAvOWF,GAAA,GA6OTC,IAAcC,KAChBtgD,EAAS3qB,EAAKwM,MAAMy+D,IAAah+D,MAAM+9D,IACnCxC,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,IAAiB8pE,EAAY,IAAAhnE,OAAOkqB,GAAc,MAhPxG6gD,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IAwPH4P,QAAQqD,IAAI,CACpBpf,EAAK+6B,oBAAL,mBAA6CjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,GACxH1nE,EAAK+6B,oBAAL,8BAAwDjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,KA1PxH,gBAAAwD,GAAAsB,EAAAt9D,KAAAi8D,GAAA1wE,OAAA6yB,EAAA,EAAA7yB,CAAAywE,GAAA,GAsPXE,GAtPWD,GAAA,GAuPXE,GAvPWF,GAAA,GA4PRnrE,EAAKwM,MAAM6+D,IAAajtE,SAAY4B,EAAKwM,MAAM4+D,IAAYhtE,UAC9DusB,EAAS0gD,GAAY/sD,IAAI8sD,IAAYn+D,MAAM,GAAGzE,MAAM,KAChDggE,IACF79C,EAASA,EAAOliB,QAAQhK,GAAY,MA/P3B+tE,EAAA9vD,OAAA,6BAsQT4uD,GAAY,GACZtxC,GAAa,KACjBrP,EAAS3qB,EAAKwM,MAAM,GAChB23B,GAAMnkC,EAAKwM,MAAM,GACjB++D,GAAqB,EACrBC,GAAUxrE,EAAKwM,MAAM,GACrBi/D,GAAqB,KACrBC,GAAe1rE,EAAKwM,MAAM,GA7QjBggE,EAAArgE,KAAA,IAoRH4P,QAAQqD,IAAI,CACpBpf,EAAKwkC,2BAA2Bv/B,EAAYm0B,GAC5CC,EAAcr5B,EAAKqkE,sBAAsBhrC,GAAe,KACxDp0B,EAAYynE,aAAe1sE,EAAK2sE,aAAa1nE,EAAYynE,cAAgB,KACzE1sE,EAAK2mC,0BAA0B1hC,EAAY07B,IAAI1jC,KAAM,SAAU,CAACm8B,EAAchxB,YAxRnE,gBAAAujE,GAAAa,EAAAt9D,KAAA08D,GAAAnxE,OAAA6yB,EAAA,EAAA7yB,CAAAkxE,GAAA,GAgRXjD,EAhRWkD,GAAA,GAiRXH,GAjRWG,GAAA,GAkRXF,GAlRWE,GAAA,IAmRX5xC,GAnRW4xC,GAAA,KA4RP1nC,GAAMlkC,EAAKgQ,iBAAiBgqB,GAAW/0B,EAAY07B,IAAIliC,UAE3D0lC,GAAMnkC,EAAKikC,QAAQC,GAAI5lB,IAAI,MAAM9V,MAAM,KACvCgjE,GAAUrnC,GAELnkC,EAAKwM,MAAMk/D,IAActtE,UAC5B+lC,GAAMA,GAAIn3B,KAAK0+D,IACfJ,GAAU,cAAgBI,IAIxBhD,GAA+B,mBAAVjB,GACvBhtE,OAAOoE,KAAK6pE,GAAmB3pE,QAAS,SAAAwN,GACtC,IAAMi4D,EAAkBkE,EAAkBn8D,GAC1C,IAAKvM,EAAKwM,MAAMg4D,EAAgBrgC,KAAK/lC,UAAsB,SAAVmO,GAAoBu8D,GAAe,CAClF,IAAMjlC,EAAW7jC,EAAKwM,MAAMg4D,EAAgBrgC,KAC5CA,GAAMA,GAAIn3B,KAAK62B,GACfynC,GAAU/+D,GAASs3B,KAMrB4nC,IAAgC,mBAAVhE,GACxBhtE,OAAOoE,KAAK4sE,IAAoB1sE,QAAS,SAAAwN,GACvC,IAAMqgE,EAAuBnB,GAAmBl/D,GAChD,IAAKvM,EAAKwM,MAAMogE,EAAqBzoC,KAAK/lC,UAAsB,SAAVmO,GAAoBu8D,GAAe,CACvF,IAAMjlC,EAAW7jC,EAAKwM,MAAMogE,EAAqBzoC,KACjDA,GAAMA,GAAIn3B,KAAK62B,GACfynC,GAAU/+D,GAASs3B,KAKrBM,GAAI/zB,GAAG,OACTm7D,GAAqB,EACrB5gD,EAAS3qB,EAAKwM,MAAM,OAEpBme,EAAS3qB,EAAKwM,MAAM23B,IAElBqkC,IACF79C,EAASA,EAAOliB,QAAQ8iE,IAAoB,IACxCpnC,GAAI/zB,GAAG,QACTua,EAAM,IAAAlpB,OAAOkpB,OAIjB6gD,GAAU7gD,EACN69C,IACF79C,EAASA,EAAOliB,QAAQ8iE,IAAoB,MAIlC,0BAAV9D,IAEF98C,EAAS,CACP6gD,WACAF,aACAuB,aAJmBliD,IAlVV6hD,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IA8VH4P,QAAQqD,IAAI,CACpBpf,EAAKwpC,yBAAyBvkC,EAAam0B,EAAehuB,GAC1DpL,EAAK+6B,oBAAL,eAAyCjQ,EAAYiO,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAehuB,EAASs8D,KAhWzG,gBAAAmE,GAAAW,EAAAt9D,KAAA48D,GAAArxE,OAAA6yB,EAAA,EAAA7yB,CAAAoxE,GAAA,GA4VX5sC,GA5VW6sC,GAAA,IA6VXC,GA7VWD,GAAA,KAqWO7sC,KACZ+sC,GAAqBn/D,SAASe,KAAK84B,MAAQ,KAAQ75B,SAASoyB,GAAenyB,WACjF6d,EAAS3qB,EAAKwM,MAAMu/D,IAAcvjE,MAAM,SAAU8V,IAAI0tD,IAIlDxD,IACF79C,EAASA,EAAOliB,QAAQ,GAAK,MA5WpB+jE,EAAA9vD,OAAA,6BAkXbiO,EAAS,KAlXI6hD,EAAArgE,KAAA,IAmXanM,EAAKwkC,2BAA2Bv/B,EAAam0B,GAnX1D,gBAmXbsvC,EAnXa8D,EAAAt9D,OAoXYw5D,EAAkBoE,OAC3B,4BAAVrF,GACF98C,EAAS3qB,EAAK0vB,qBAAqBg5C,EAAkBoE,KAAKxpC,gBAAiBylC,EAAmBp5C,uBAC1F64C,IACF79C,EAAS,IAAI3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,GAA1D,SAAA8C,OAAmFsnE,EAAmBp5C,0BAGjHhF,EAAS+9C,EAAkBoE,KAAK1nC,WAC5BojC,IACF79C,EAAS,IAAI3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,GAA1D,kBAAA8C,OAA4FzB,EAAKkhB,2BAA2BwnD,EAAkBoE,KAAK5nC,cAAcjsB,iBAAjK,2FA7XFuzD,EAAA9vD,OAAA,6BAqYbiO,EAAS3qB,EAAKxB,iBAAiB,OAAOC,EAASC,EAAaC,GAAnD,YArYI6tE,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IAwYEnM,EAAK0iC,6BAA6Bz9B,EAAY07B,IAAI1jC,KAAK,uBAAuB,MAxYhF,gBAwYb0tB,EAxYa6hD,EAAAt9D,KA0Ybyb,GADAA,GAAe,KACApM,WAAW,KAAK,IAAIoM,GAAQpM,WA1Y9BiuD,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IA6YEnM,EAAK0iC,6BAA6Bz9B,EAAY07B,IAAI1jC,KAAK,uBAAuB,MA7YhF,gBA6Yb0tB,EA7Ya6hD,EAAAt9D,KA8Ybyb,EAAS3qB,EAAKwM,MAAMme,GAAQrM,IAAI,KAChB,OAAZ6a,IACFxO,EAAS3qB,EAAKwM,MAAM,KAAKS,MAAM0d,IAE7B69C,IACF79C,EAASA,EAAOliB,QAAQ,GAAG,KAnZhB+jE,EAAA9vD,OAAA,6BAuZbiO,EAAS3qB,EAAKxB,iBAAiB,OAAQC,EAAUC,EAAcC,GAAtD,YAvZI6tE,EAAA9vD,OAAA,6BAAA8vD,EAAArgE,KAAA,IA4ZEnM,EAAK0iC,6BAA6Bz9B,EAAY07B,IAAI1jC,KAAK,QAAQ,MA5ZjE,gBA4Zb0tB,EA5Za6hD,EAAAt9D,QA8ZXyb,EAAS3qB,EAAKgQ,iBAAiB2a,EAAQ1lB,EAAY07B,IAAIliC,UAEzC,iBAAVgpE,IACE98C,EAAOva,GAAG,GACRo4D,IACF79C,EAAS3qB,EAAKxB,iBAAiBmsB,EAAQlsB,EAAUC,EAAcC,IAAiB8pE,EAAY,IAAAhnE,OAAOkqB,GAAc,MAGnHhB,EAAS3qB,EAAKwM,MAAM,GAChBg8D,IACF79C,EAAS,WAxaJ6hD,EAAA9vD,OAAA,6BAibbiO,EAAS,GAjbI6hD,EAAArgE,KAAA,IAqbH4P,QAAQqD,IAAI,CACpBpf,EAAK0iC,6BAA6BT,EAAehlC,KAAM,kBAAkB,MACzE+C,EAAK0iC,6BAA6Bz9B,EAAY07B,IAAI1jC,KAAM,qBAAqB,QAvblE,gBAAAgvE,GAAAO,EAAAt9D,KAAAg9D,GAAAzxE,OAAA6yB,EAAA,EAAA7yB,CAAAwxE,GAAA,GAmbXE,GAnbWD,GAAA,GAobXE,GApbWF,GAAA,GA2bR9yC,IACHA,EAAgBn0B,EAAYuhE,IAGxB3tC,GAAiBO,EAAgBA,EAAcsB,WAAW7B,eAAej4B,IAAI,SAAAqE,GAAW,OAAKA,EAAYmD,QAAQC,gBAAkB,MACnIikE,GAAsB,mBAAV7E,GAA8B5uC,GAAiBA,GAA4B,cAAV4uC,EAAwB0E,GAA2B,gBAAV1E,GAA2B0E,GAAgBA,GAAc9/D,OAAO,SAAA0gE,GAAe,OAAIX,KAAoBA,GAAgBxrE,IAAI,SAAAwqD,GAAI,OAAIA,EAAK/iD,gBAAeknB,SAASw9C,EAAgB1kE,iBAAkB+jE,KAG5TE,GAAUvtE,QAAQ,SAAA+P,GAChB,IAAMy0B,EAAiBvjC,EAAKqmE,wBAAwBv3D,GAEpD,GAAKy0B,GAAmBA,EAAepW,QAAvC,CAIA,IAAM6/C,EAA4B5zC,EAAgBA,EAAcsB,WAAW7B,eAAete,KAAK,SAAAtV,GAAW,OAAIA,EAAYmD,QAAQC,gBAAkByG,EAAazG,gBAAiB,KAC9K2kE,IAA8BA,EAA0B7/C,UAG5DxC,EAAO4Y,EAAeh3B,OAASg3B,MAK/Bt+B,EAAYwiE,IAAgD,oBAA/BxiE,EAAYwiE,GAAO1oE,SAClDkG,EAAYwiE,GAAO1oE,QAAS,SAAAokC,GAC1B,IAAMI,EAAiBvjC,EAAKuQ,gBAAgB,CAAC,QAAQ,SAAS4yB,EAAS3yB,gBACnE+yB,IACF5Y,EAAOwY,GAAYI,KAvdZipC,EAAA9vD,OAAA,6BAAA8vD,EAAA9vD,OAAA,6BAAA8vD,EAAA9vD,OAAA,SAoeViO,GApeU,0BAAA6hD,EAAAl/D,SAAAi7D,EAAAztE,SArlJA,gBAAAmyE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAjF,EAAA96D,MAAA1S,KAAA2S,YAAA,GAAA3S,KA2jKnB0yE,eA3jKmB,eAAAC,EAAAhzE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA2jKF,SAAA8hE,EAAOjG,EAAOl7D,EAAOtH,EAAamG,GAAlC,IAAAs8D,EAAAiG,EAAAhjD,EAAA2hD,EAAA3D,EAAAiF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7gE,EAAA8gE,EAAA3+C,EAAA/E,EAAA4X,EAAApV,EAAAmhD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArzC,EAAAszC,EAAAC,EAAAC,EAAAC,GAAA3iE,GAAA6xB,GAAAlxB,GAAAiiE,GAAAC,GAAAC,GAAAC,GAAApE,GAAAqE,GAAAC,GAAAtjD,GAAA6M,GAAAxqB,GAAAkhE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA3lE,GAAA4lE,GAAAC,GAAAnkE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA6lE,GAAA,cAAAA,EAAA3lE,KAAA2lE,EAAA1lE,MAAA,OAA2Cu7D,IAA3CkK,GAAA9yE,OAAA,QAAA0qB,IAAAooD,GAAA,KAAAA,GAAA,GAAgEjE,EAAhEiE,GAAA9yE,OAAA,QAAA0qB,IAAAooD,GAAA,IAAAA,GAAA,GAEXjnD,EAAS,KACP2hD,EAAYtsE,EAAKuQ,gBAAgB,CAAC,cAClCo4D,EAAgB3oE,EAAK00B,8BAA8B,iBACnDk5C,EAAcjF,GAA6C,IAA5B97D,SAAS87D,GAGxCkF,EAAe7tE,EAAKuQ,gBAAgB,CAAC,aAAcvQ,EAAKjF,MAAM4T,mBAChE+4D,GAAgBmG,GAAqD,qBAA9BA,EAAanG,eACtDA,EAAemG,EAAanG,cAI1BoG,EAA0B,KAC1B9tE,EAAKjF,MAAM4T,kBAAoB3O,EAAKjF,MAAMgK,eACtCgpE,EAAiB/tE,EAAKjF,MAAM8zB,oBAAoB7uB,EAAKjF,MAAM4T,kBAAkB3O,EAAKjF,MAAMgK,mBAE5F+oE,EAA0B,IACFC,EAAexhE,OAASwhE,GAExCtzE,OAAOoE,KAAKytE,GAAW/8C,SAAShjB,MAC1CuhE,EAA0B,IACFvhE,GAAStH,GAvBpB4sE,EAAArkD,GA0BPi6C,EA1BOoK,EAAA1lE,KA2BR,oBA3BQ0lE,EAAArkD,GAAA,GA8CR,sBA9CQqkD,EAAArkD,GAAA,GAyDR,aAzDQqkD,EAAArkD,GAAA,GA4DR,qBA5DQqkD,EAAArkD,GAAA,GA+DR,2BA/DQqkD,EAAArkD,GAAA,GAmER,kCAnEQqkD,EAAArkD,GAAA,GA2FR,iBA3FQqkD,EAAArkD,GAAA,GAqGR,qBArGQqkD,EAAArkD,GAAA,GA4GR,SA5GQqkD,EAAArkD,GAAA,GAmHR,0BAnHQqkD,EAAArkD,GAAA,GA0IR,qBA1IQqkD,EAAArkD,GAAA,GA0KR,sBA1KQqkD,EAAArkD,GAAA,IA+LR,QA/LQqkD,EAAArkD,GAAA,IAgNR,QAhNQqkD,EAAArkD,GAAA,IAoOR,WApOQqkD,EAAArkD,GAAA,IAoPR,eApPQqkD,EAAArkD,GAAA,IAiQR,qBAjQQqkD,EAAArkD,GAAA,IAuQR,eAvQQqkD,EAAArkD,GAAA,IA+QR,eA/QQqkD,EAAArkD,GAAA,IAiSR,QAjSQqkD,EAAArkD,GAAA,IAoSR,iBApSQqkD,EAAArkD,GAAA,IAkTR,qBAlTQqkD,EAAArkD,GAAA,IAwTR,6BAxTQqkD,EAAArkD,GAAA,IAoVR,sBApVQqkD,EAAArkD,GAAA,IAiXR,kBAjXQqkD,EAAArkD,GAAA,IAiYR,aAjYQqkD,EAAArkD,GAAA,6BAAAqkD,EAAA1lE,KAAA,GAgCD4P,QAAQqD,IAAI,CACpBpf,EAAKu9B,sBACLv9B,EAAKs+B,oBAAoB,GAAIlzB,GAC7BpL,EAAK8xE,qBAAqB1mE,GAAS,KAnC1B,eAAA4iE,EAAA6D,EAAA3iE,KAAA++D,EAAAxzE,OAAA6yB,EAAA,EAAA7yB,CAAAuzE,EAAA,GA6BTE,EA7BSD,EAAA,GA8BTE,EA9BSF,EAAA,GA+BTG,EA/BSH,EAAA,GAsCPE,GAAoBC,IACtBzjD,EAAS3qB,EAAKwM,MAAM4hE,GAAmB5lE,MAAM2lE,GACzCD,IACFvjD,EAASA,EAAO1d,MAAM0d,EAAOniB,MAAM0lE,MAzC5B2D,EAAAn1D,OAAA,4BAAAm1D,EAAA1lE,KAAA,GA+C4C4P,QAAQqD,IAAI,CACjEpf,EAAKwtE,eAAe,kBAAmBjhE,EAAOtH,EAAamG,GAC3DpL,EAAKwtE,eAAe,yBAA0BjhE,EAAOtH,EAAamG,KAjDzD,eAAAijE,EAAAwD,EAAA3iE,KAAAo/D,EAAA7zE,OAAA6yB,EAAA,EAAA7yB,CAAA4zE,EAAA,GA+CNE,EA/CMD,EAAA,GA+CYE,EA/CZF,EAAA,GAoDPC,GAAoBC,GAA0BD,EAAiBn+D,GAAG,IAAMo+D,EAAuBp+D,GAAG,KACpGua,EAAS6jD,EAAuBlwD,IAAIiwD,GAAkBthE,MAAM,GAAGzE,MAAM,MArD5DqpE,EAAAn1D,OAAA,4BAAAm1D,EAAA1lE,KAAA,GA0DInM,EAAK+xE,cA1DT,eA0DXpnD,EA1DWknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,4BAAAm1D,EAAA1lE,KAAA,GA6DInM,EAAKu9B,sBA7DT,eA6DX5S,EA7DWknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,4BAAAm1D,EAAA1lE,KAAA,GAgEInM,EAAKgyE,6BAA6B5mE,GAhEtC,eAgEXuf,EAhEWknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,4BAAAm1D,EAAA1lE,KAAA,GAwED4P,QAAQqD,IAAI,CACpBpf,EAAKwtE,eAAe,WAAYjhE,EAAOtH,EAAamG,GACpDpL,EAAKwtE,eAAe,kBAAmBjhE,EAAOtH,EAAamG,GAC3DpL,EAAKwtE,eAAe,yBAA0BjhE,EAAOtH,EAAamG,KA3EzD,eAAAqjE,EAAAoD,EAAA3iE,KAAAw/D,EAAAj0E,OAAA6yB,EAAA,EAAA7yB,CAAAg0E,EAAA,GAqETE,EArESD,EAAA,GAsETE,EAtESF,EAAA,GAuETG,EAvESH,EAAA,GA8EPI,EAA4B,KAE5BD,GAA+BF,GAAYC,IACvCG,EAAiBH,EAAgBpmE,MAAMmmE,EAASrwD,IAAI,MAC1DwwD,EAA4BD,EAA4B7hE,KAAK+hE,IAI/DpkD,EAAS,CACPmkD,4BACAD,+BAxFSgD,EAAAn1D,OAAA,4BAAAm1D,EAAA1lE,KAAA,GA4FmC4P,QAAQqD,IAAI,CACxDpf,EAAKwtE,eAAe,aAAcjhE,EAAOtH,EAAamG,GAAS,GAC/DpL,EAAKwtE,eAAe,oBAAqBjhE,EAAOtH,EAAamG,GAAS,KA9F7D,eAAA4jE,EAAA6C,EAAA3iE,KAAA+/D,EAAAx0E,OAAA6yB,EAAA,EAAA7yB,CAAAu0E,EAAA,GA4FNE,EA5FMD,EAAA,GA4FOE,EA5FPF,EAAA,GAiGPC,GAAeC,GAAsBD,EAAY9+D,GAAG,KACtDua,EAASwkD,EAAmB7wD,IAAI4wD,GAAajiE,MAAM,GAAGzE,MAAM,MAlGnDqpE,EAAAn1D,OAAA,4BAAAm1D,EAAA1lE,KAAA,GAsGoBnM,EAAKwtE,eAAe,mBAAoBjhE,EAAOtH,EAAamG,GAtGhF,eAsGLgkE,EAtGKyC,EAAA3iE,QAwGHX,EAAgB1B,SAASe,KAAK84B,MAAQ,KAC5C/b,GAAUpc,EAAgB6gE,GAAoB,OAzGrCyC,EAAAn1D,OAAA,yBA6GPjiB,OAAOoE,KAAKytE,GAAW/8C,SAAShjB,GA7GzB,CAAAslE,EAAA1lE,KAAA,gBAAA0lE,EAAA1lE,KAAA,GA8GMnM,EAAKiyE,gBAAgB1lE,EAAOuhE,GA9GlC,QA8GTnjD,EA9GSknD,EAAA3iE,KAAA2iE,EAAA1lE,KAAA,wBAAA0lE,EAAA1lE,KAAA,GAgHMnM,EAAKkyE,aAAajtE,EAAayiE,GAhHrC,QAgHT/8C,EAhHSknD,EAAA3iE,KAAA,eAAA2iE,EAAAn1D,OAAA,qBAAAm1D,EAAAj+B,GAoHHrnC,EApHGslE,EAAA1lE,KAqHJ,SArHI0lE,EAAAj+B,GAAA,GAwHJ,WAxHIi+B,EAAAj+B,GAAA,GAyHJ,YAzHIi+B,EAAAj+B,GAAA,GA4HJ,SA5HIi+B,EAAAj+B,GAAA,2BAAAi+B,EAAA1lE,KAAA,GAsHQnM,EAAKmyE,wBAAwB/mE,EAAS0iE,GAtH9C,eAsHPnjD,EAtHOknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,2BAAAm1D,EAAA1lE,KAAA,GA0HQnM,EAAKoyE,2BAA2BhnE,EAAS0iE,GA1HjD,eA0HPnjD,EA1HOknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,2BA6HDgU,EAAe1wB,EAAKqyE,kBA7HnBR,EAAA1lE,KAAA,GA8HQukB,EAAapC,oBAAoBljB,EAAS0iE,GA9HlD,eA8HPnjD,EA9HOknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,2BAAAm1D,EAAAn1D,OAAA,2BAmIPiO,IAAW3qB,EAAKwM,MAAMme,GAAQvsB,UAChCusB,EAAS3qB,EAAKwM,MAAMme,GAAQrM,IAAI,SAE9BqM,EAAS3qB,EAAK0vB,qBAAqB/E,EAAQ1lB,EAAY0qB,sBAAuB1qB,EAAYqtE,mBAtInFT,EAAAn1D,OAAA,4BA2ILgU,EAAe1wB,EAAKqyE,kBACpB1mD,EAAY3rB,EAAKuQ,gBAAgB,CAAC,aAAc,QAAS,cACzDgzB,EAAiBvjC,EAAKuQ,gBAAgB,CAAC,YAAaob,IA7I/CkmD,EAAA1lE,KAAA,IA8IIukB,EAAa9C,SAAS3oB,EAAYmoB,KAAKhlB,SA9I3C,cA8IXuiB,EA9IWknD,EAAA3iE,MAAA,CAAA2iE,EAAA1lE,KAAA,UAkJTwe,EAAS3qB,EAAKgQ,iBAAiB2a,EAAQ4Y,EAAe9kC,UAEhD0vB,EAAgBnuB,EAAKwM,MAAMxM,EAAKuQ,gBAAgB,CAAC,UAAW,mBApJzDshE,EAAAt1B,GAqJDhZ,EAAe5T,sBArJdkiD,EAAA1lE,KAsJF,QAtJE0lE,EAAAt1B,GAAA,IA0JF,SA1JEs1B,EAAAt1B,GAAA,IA8JF,UA9JEs1B,EAAAt1B,GAAA,IAkKF,SAlKEs1B,EAAAt1B,GAAA,8BAuJC+yB,EAAenhD,EAAc7P,IAAI,YACvCqM,EAASA,EAAOniB,MAAM8mE,GAxJjBuC,EAAAn1D,OAAA,6BA2JC6yD,EAAgBphD,EAAc7P,IAAI,SACxCqM,EAASA,EAAOniB,MAAM+mE,GA5JjBsC,EAAAn1D,OAAA,6BA+JC8yD,EAAiBrhD,EAAc7P,IAAI,IACzCqM,EAASA,EAAOniB,MAAMgnE,GAhKjBqC,EAAAn1D,OAAA,6BAmKLiO,EAASA,EAAOniB,MAAM2lB,GAnKjB0jD,EAAAn1D,OAAA,6BAAAm1D,EAAAn1D,OAAA,6BAAAm1D,EAAAn1D,OAAA,sBA2KL+yD,EAAsB3B,EAAwB9tE,EAAKjF,MAAMgK,eA3KpD8sE,EAAAU,GA4KHhmE,EA5KGslE,EAAA1lE,KA6KJ,SA7KI0lE,EAAAU,GAAA,IAgLJ,WAhLIV,EAAAU,GAAA,IAiLJ,YAjLIV,EAAAU,GAAA,IAoLJ,SApLIV,EAAAU,GAAA,8BAAAV,EAAA1lE,KAAA,IA8KQnM,EAAKwyE,oBAAoB/C,GA9KjC,gBA8KP9kD,EA9KOknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,6BAAAm1D,EAAA1lE,KAAA,IAkLQnM,EAAKyyE,uBAAuBhD,GAlLpC,gBAkLP9kD,EAlLOknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,6BAqLDgU,EAAe1wB,EAAKqyE,kBArLnBR,EAAA1lE,KAAA,IAsLQukB,EAAa9C,SAAS6hD,EAAoBriD,KAAKhlB,SAtLvD,gBAsLPuiB,EAtLOknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,6BAAAm1D,EAAAn1D,OAAA,6BA2LPiO,IAAW3qB,EAAKwM,MAAMme,GAAQvsB,UAChCusB,EAAS3qB,EAAKwM,MAAMme,GAAQrM,IAAI,OA5LvBuzD,EAAAn1D,OAAA,sBAAAm1D,EAAAa,GAgMHnmE,EAhMGslE,EAAA1lE,KAiMJ,SAjMI0lE,EAAAa,GAAA,IAoMJ,SApMIb,EAAAa,GAAA,8BAAAb,EAAA1lE,KAAA,IAkMQnM,EAAK2yE,cAAc7E,GAlM3B,gBAkMPnjD,EAlMOknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,6BAqMDgU,EAAe1wB,EAAKqyE,kBArMnBR,EAAA1lE,KAAA,IAsMQukB,EAAad,UAAUk+C,GAtM/B,gBAsMPnjD,EAtMOknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,6BAAAm1D,EAAA1lE,KAAA,IAyMiBnM,EAAK28B,aAAa13B,GAAa,EAAOyiE,EAAckG,GAzMrE,gBAyMDtxC,EAzMCu1C,EAAA3iE,OA0M+B,OAArBotB,EAAU8xB,SACzBzjC,EAAS2R,EAAU8xB,QA3MdyjB,EAAAn1D,OAAA,6BAAAm1D,EAAAn1D,OAAA,6BAAAm1D,EAAA1lE,KAAA,IAiNanM,EAAK28B,aAAa13B,GAAa,EAAOyiE,EAAckG,GAjNjE,YAiNLgC,EAjNKiC,EAAA3iE,KAmNXyb,EAAS3qB,EAAKwM,MAAM,IAEhBojE,GAAc5vE,EAAKwM,MAAMojE,EAAU/yC,QAAQz+B,QArNpC,CAAAyzE,EAAA1lE,KAAA,aAsNTwe,EAAS3qB,EAAKwM,MAAMojE,EAAU/yC,SAE1B8wC,EAxNK,CAAAkE,EAAA1lE,KAAA,iBAAA0lE,EAAA1lE,KAAA,IAyNgBnM,EAAK+xE,cAzNrB,UAyNDlC,EAzNCgC,EAAA3iE,QA2NLyb,EAASA,EAAO3d,KAAK6iE,IA3NhB,SAAAgC,EAAA1lE,KAAA,0BAAA0lE,EAAAn1D,OAAA,6BAAAm1D,EAAA1lE,KAAA,IAyOD4P,QAAQqD,IAAI,CACpBpf,EAAKo8B,kBAAkBn3B,GACvBjF,EAAK4+B,kBAAkB,CAACryB,GAAQnB,GAChCpL,EAAKwtE,eAAe,mBAAoBjhE,EAAOtH,EAAamG,KA5OnD,YAAA0kE,EAAA+B,EAAA3iE,KAAA6gE,GAAAt1E,OAAA6yB,EAAA,EAAA7yB,CAAAq1E,EAAA,GAsOT1iE,GAtOS2iE,GAAA,GAuOT9wC,GAvOS8wC,GAAA,GAwOThiE,GAxOSgiE,GAAA,KA+OP3iE,IAAc6xB,IAAkBA,GAAe1yB,IA/OxC,CAAAslE,EAAA1lE,KAAA,iBAAA0lE,EAAA1lE,KAAA,IAgP4BnM,EAAKo8B,kBAAkBn3B,EAAag6B,GAAe1yB,GAAO8R,aAhPtF,SAgPH2xD,GAhPG6B,EAAA3iE,KAiPTyb,EAAS3qB,EAAKwM,MAAMY,IAAYkR,IAAI0xD,IAAwB/iE,MAAM,GAAGzE,MAAM,KAAK8V,IAAIvQ,IAAMvF,MAAM,KAjPvF,gBAAAqpE,EAAAn1D,OAAA,6BAAAm1D,EAAA1lE,KAAA,IAwPD4P,QAAQqD,IAAI,CACpBpf,EAAKwtE,eAAe,mBAAoBjhE,EAAOtH,EAAamG,GAC5DpL,EAAKwtE,eAAe,eAAgBjhE,EAAOtH,EAAamG,KA1P/C,gBAAA6kE,GAAA4B,EAAA3iE,KAAAghE,GAAAz1E,OAAA6yB,EAAA,EAAA7yB,CAAAw1E,GAAA,GAsPTE,GAtPSD,GAAA,GAuPTnE,GAvPSmE,GAAA,GA6PPC,IAAoBpE,KACtBphD,EAASohD,GAAavjE,MAAM,KAAK8V,IAAI6xD,KA9P5B0B,EAAAn1D,OAAA,0BAkQetR,EAlQf,CAAAymE,EAAA1lE,KAAA,iBAAA0lE,EAAA1lE,KAAA,IAkQ+BnM,EAAK0/B,oBAAoB,CAACnzB,GAAQnB,GAlQjE,SAAAymE,EAAAe,GAAAf,EAAA3iE,KAAA2iE,EAAA1lE,KAAA,mBAAA0lE,EAAAe,IAkQ4E,EAlQ5E,gBAkQLxC,GAlQKyB,EAAAe,KAmQcxC,GAAkB7jE,KACzCoe,EAASylD,GAAkB7jE,IApQlBslE,EAAAn1D,OAAA,0BAwQFtR,EAxQE,CAAAymE,EAAA1lE,KAAA,iBAAA0lE,EAAA1lE,KAAA,IAwQcnM,EAAK48B,mBAAmB33B,EAAamG,GAxQnD,SAAAymE,EAAAgB,GAAAhB,EAAA3iE,KAAA2iE,EAAA1lE,KAAA,mBAAA0lE,EAAAgB,IAwQ8D,EAxQ9D,gBAwQXloD,EAxQWknD,EAAAgB,GAAAhB,EAAAn1D,OAAA,0BAgRPjiB,OAAOoE,KAAKytE,GAAW/8C,SAAShjB,GAhRzB,CAAAslE,EAAA1lE,KAAA,iBAiRHo3B,GAAiB+oC,EAAU//D,GAC3BwgB,GAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UAnRhC6tC,EAAA3lE,KAAA,IAAA2lE,EAAA1lE,KAAA,IAsRQnM,EAAKutB,yBAAyBR,GAAgBwW,IAtRtD,SAsRP5Y,EAtROknD,EAAA3iE,KAAA2iE,EAAA1lE,KAAA,mBAAA0lE,EAAA3lE,KAAA,IAAA2lE,EAAAiB,GAAAjB,EAAA,oBA0RJlnD,IAAU3qB,EAAKwM,MAAMme,GAAQvsB,UAChCusB,EAAS,KA3RFknD,EAAA1lE,KAAA,0BAAA0lE,EAAA1lE,KAAA,IA8RMnM,EAAK+yE,cAAc9tE,EAAYmoB,KAAK7gB,OA9R1C,SA8RToe,EA9RSknD,EAAA3iE,KAAA,gBAAA2iE,EAAAn1D,OAAA,6BAAAm1D,EAAA1lE,KAAA,IAkSInM,EAAKgzE,iBAAiB/tE,EAAamG,GAlSvC,gBAkSXuf,EAlSWknD,EAAA3iE,KAAA2iE,EAAAn1D,OAAA,0BAqSPjiB,OAAOoE,KAAKytE,GAAW/8C,SAAShjB,GArSzB,CAAAslE,EAAA1lE,KAAA,iBAAA0lE,EAAA1lE,KAAA,IAsSMnM,EAAK+rB,gBAAgBxf,EAAOnB,GAtSlC,UAsSTuf,EAtSSknD,EAAA3iE,QAuSMyb,EAAOvsB,UACpBusB,EAAS,KAxSFknD,EAAA1lE,KAAA,uBA2SUf,EA3SV,CAAAymE,EAAA1lE,KAAA,iBAAA0lE,EAAA1lE,KAAA,IA2S0BnM,EAAK+rB,gBAAgB9mB,EAAYsH,MAAOnB,GA3SlE,SAAAymE,EAAAoB,GAAApB,EAAA3iE,KAAA2iE,EAAA1lE,KAAA,mBAAA0lE,EAAAoB,IA2S6E,EA3S7E,UA2SLr5C,GA3SKi4C,EAAAoB,MA4SYr5C,GAAax7B,UAChCw7B,GAAe,KAEjBjP,EAASiP,GA/SA,gBAAAi4C,EAAAn1D,OAAA,0BAmTctR,EAnTd,CAAAymE,EAAA1lE,KAAA,iBAAA0lE,EAAA1lE,KAAA,IAmT8BnM,EAAK+rB,gBAAgB9mB,EAAYmoB,KAAK7gB,MAAOnB,GAnT3E,SAAAymE,EAAAqB,GAAArB,EAAA3iE,KAAA2iE,EAAA1lE,KAAA,mBAAA0lE,EAAAqB,IAmTsF,EAnTtF,gBAmTL9jE,GAnTKyiE,EAAAqB,MAqTTvoD,EAASvb,IArTAyiE,EAAAn1D,OAAA,6BAAAm1D,EAAA1lE,KAAA,IA4TkD4P,QAAQqD,IAAI,CACvEpf,EAAKwtE,eAAe,MAAOjhE,EAAOtH,EAAamG,GAAS,GACxDpL,EAAKwtE,eAAe,aAAcjhE,EAAOtH,EAAamG,GAAS,GAC/DpL,EAAKwtE,eAAe,oBAAqBjhE,EAAOtH,EAAamG,GAAS,KA/T7D,gBAAAklE,GAAAuB,EAAA3iE,KAAAqhE,GAAA91E,OAAA6yB,EAAA,EAAA7yB,CAAA61E,GAAA,GA4TNE,GA5TMD,GAAA,GA4TKE,GA5TLF,GAAA,GA4TkBG,GA5TlBH,GAAA,GAsUPI,GAAuBD,GAEvBA,IAA0BF,IAAaC,KACnC1B,GAAiB0B,GAAYjoE,MAAMgoE,GAAUlyD,IAAI,MACvDqyD,GAAuBD,GAAuB1jE,KAAK+hE,KAGrDpkD,EAAS,CACPgmD,wBACAD,2BA/USmB,EAAAn1D,OAAA,0BAqVPjiB,OAAOoE,KAAKytE,GAAW/8C,SAAShjB,GArVzB,CAAAslE,EAAA1lE,KAAA,iBAsVHo3B,GAAiB+oC,EAAU//D,GAtVxBslE,EAAA1lE,KAAA,IAuVMnM,EAAKmzE,uBAAuB5vC,GAAgBn4B,EAAS0iE,GAvV3D,SAuVTnjD,EAvVSknD,EAAA3iE,KAAA2iE,EAAA1lE,KAAA,0BAAA0lE,EAAA1lE,KAAA,IA6VC4P,QAAQqD,IAAI,CACpBpf,EAAKo8B,kBAAkBn3B,GACvBjF,EAAKwtE,eAAe,mBAAoBjhE,EAAOtH,EAAamG,GAC5Ds8D,EAAe1nE,EAAKozE,6BAA6BhoE,EAAS0iE,EAAyBvhE,GAAS,OAhWrF,SAAAukE,GAAAe,EAAA3iE,KAAA6hE,GAAAt2E,OAAA6yB,EAAA,EAAA7yB,CAAAq2E,GAAA,GA0VPE,GA1VOD,GAAA,GA2VPE,GA3VOF,GAAA,GA4VPG,GA5VOH,GAAA,GAqWLE,IAAqBD,KACjBp3C,GAAeq3C,GAAkBzoE,MAAMwoE,IACzCI,GAAoBx3C,GACpBs3C,KAAqBlxE,EAAKwM,MAAM0kE,IAAkB9yE,UACpDgzE,GAAoBA,GAAkBpkE,KAAKhN,EAAKwM,MAAM0kE,MAExDvmD,EAASymD,IA3WF,gBAAAS,EAAAn1D,OAAA,6BAAAm1D,EAAA1lE,KAAA,IAkX6C4P,QAAQqD,IAAI,CAClEpf,EAAKwtE,eAAe,kBAAmBjhE,EAAOtH,EAAamG,GAC3DpL,EAAKwtE,eAAe,yBAA0BjhE,EAAOtH,EAAamG,KApXzD,gBAAAimE,GAAAQ,EAAA3iE,KAAAoiE,GAAA72E,OAAA6yB,EAAA,EAAA7yB,CAAA42E,GAAA,GAkXNE,GAlXMD,GAAA,GAkXYE,GAlXZF,GAAA,GAuXNC,KACHA,GAAmBvxE,EAAKwM,MAAM,IAG3BglE,KACHA,GAA0BxxE,EAAKwM,MAAM,IAGvCme,EAAS6mD,GAAwBvkE,MAAMskE,IA/X5BM,EAAAn1D,OAAA,6BAAAm1D,EAAA1lE,KAAA,IAkYkC4P,QAAQqD,IAAI,CACvDpf,EAAKwtE,eAAe,aAAcjhE,EAAOtH,EAAamG,GAAS,GAC/DpL,EAAKwtE,eAAe,oBAAqBjhE,EAAOtH,EAAamG,GAAS,KApY7D,gBAAAqmE,GAAAI,EAAA3iE,KAAAwiE,GAAAj3E,OAAA6yB,EAAA,EAAA7yB,CAAAg3E,GAAA,GAkYN1lE,GAlYM2lE,GAAA,GAkYMC,GAlYND,GAAA,GAuYN3lE,KACHA,GAAa/L,EAAKwM,MAAM,IAErBmlE,KACHA,GAAqB3xE,EAAKwM,MAAM,KAGlCme,EAASgnD,GAAmB1kE,MAAMlB,KAIvBmB,GAAGlN,EAAKwM,MAAM,MACvBme,EAAS3qB,EAAKwM,MAAM,IAnZXqlE,EAAAn1D,OAAA,6BAAAm1D,EAAAn1D,OAAA,6BAAAm1D,EAAAn1D,OAAA,SA0ZRiO,GA1ZQ,0BAAAknD,EAAAvkE,SAAAogE,EAAA5yE,KAAA,gBA3jKE,gBAAAu4E,EAAAC,EAAAC,EAAAC,GAAA,OAAA/F,EAAAjgE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAu9KnB24E,mBAv9KmB,eAAAC,EAAAj5E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAu9KE,SAAA+nE,EAAO39B,GAAP,IAAA33B,EAAAqO,EAAA/R,EAAAi5D,EAAAC,EAAApmE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA8nE,GAAA,cAAAA,EAAA5nE,KAAA4nE,EAAA3nE,MAAA,UAAkBkS,EAAlBw1D,EAAA/0E,OAAA,QAAA0qB,IAAAqqD,EAAA,GAAAA,EAAA,GAAgC,SAC7CnnD,EADa,mBAAAjrB,OACsBu0C,EADtB,KAAAv0C,OACmC4c,KAChD1D,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAHvB,CAAA01E,EAAA3nE,KAAA,eAAA2nE,EAAAp3D,OAAA,SAIV1c,EAAKwM,MAAMmO,IAJD,cAAAm5D,EAAA3nE,KAAA,EAOSnM,EAAKwjE,oBAAoBxtB,EAAW33B,GAP7C,YAOfu1D,EAPeE,EAAA5kE,MAAA,CAAA4kE,EAAA3nE,KAAA,gBAAA2nE,EAAAp3D,OAAA,SASV1c,EAAKwM,MAAMonE,IATD,eAAAE,EAAAp3D,OAAA,SAYZ,MAZY,yBAAAo3D,EAAAxmE,SAAAqmE,EAAA74E,SAv9KF,gBAAAi5E,GAAA,OAAAL,EAAAlmE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAq+KnBk5E,yBAr+KmB,eAAAC,EAAAx5E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAq+KQ,SAAAsoE,EAAOjvE,EAAamG,GAApB,IAAAiT,EAAA81D,EAAAC,EAAAC,EAAAjnE,EAAAs9B,EAAA4pC,EAAAC,EAAA9mE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAwoE,GAAA,cAAAA,EAAAtoE,KAAAsoE,EAAAroE,MAAA,UAA6BkS,EAA7Bk2D,EAAAz1E,OAAA,QAAA0qB,IAAA+qD,EAAA,GAAAA,EAAA,GAA2C,SACpEnpE,EAAUA,GAAWpL,EAAKjF,MAAMqQ,QADP,CAAAopE,EAAAroE,KAAA,eAAAqoE,EAAA93D,OAAA,SAGhB,MAHgB,cAAA83D,EAAAroE,KAAA,EAUf4P,QAAQqD,IAAI,CACpBpf,EAAK2mC,0BAA0B1hC,EAAYmoB,KAAK7gB,MAAO,MAAO,GAAI,GAAI8R,GACtEre,EAAK2mC,0BAA0B1hC,EAAYmoB,KAAK7gB,MAAO,aAAc,GAAI,GAAI8R,GAC7Ere,EAAK2mC,0BAA0B1hC,EAAYmoB,KAAK7gB,MAAO,gBAAiB,CAACnB,GAAU,GAAIiT,KAbhE,UAAA81D,EAAAK,EAAAtlE,KAAAklE,EAAA35E,OAAA6yB,EAAA,EAAA7yB,CAAA05E,EAAA,GAOvBE,EAPuBD,EAAA,GAQvBhnE,EARuBgnE,EAAA,GASvB1pC,EATuB0pC,EAAA,GAgBzBC,EAAMr0E,EAAKwM,MAAM6nE,GACjBjnE,EAAapN,EAAKwM,MAAMY,GACxBs9B,EAAe1qC,EAAKwM,MAAMk+B,GAErBt9B,EAAWhP,SAAYssC,EAAatsC,SAAYi2E,EAAIj2E,SAAY4B,EAAKwM,MAAMk+B,GAAc+pC,GAAG,KAAMz0E,EAAKwM,MAAMY,GAAYgD,GAAGpQ,EAAKwM,MAAMk+B,IApBnH,CAAA8pC,EAAAroE,KAAA,gBAqBjBmoE,EAAYt0E,EAAKkvD,aAAalvD,EAAKwM,MAAMY,GAAYH,MAAMJ,SAASwnE,EAAI/1D,IAAI,KAAK9V,MAAM4E,EAAWH,MAAMy9B,OArBvF8pC,EAAA93D,OAAA,SAsBhB43D,GAtBgB,eAAAE,EAAA93D,OAAA,SAyBlBtP,GAzBkB,yBAAAonE,EAAAlnE,SAAA4mE,EAAAp5E,SAr+KR,gBAAA45E,EAAAC,GAAA,OAAAV,EAAAzmE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAggLnBshC,kBAhgLmB,eAAAw4C,EAAAn6E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAggLC,SAAAipE,EAAO5vE,GAAP,IAAAoZ,EAAA1O,EAAA+c,EAAA/R,EAAAlc,EAAA2O,EAAAsB,EAAAuzC,EAAAC,EAAA4yB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhoE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0pE,GAAA,cAAAA,EAAAxpE,KAAAwpE,EAAAvpE,MAAA,UAAoBkS,EAApBo3D,EAAA32E,OAAA,QAAA0qB,IAAAisD,EAAA,GAAAA,EAAA,GAAkC,SAAU9lE,EAA5C8lE,EAAA32E,OAAA,QAAA0qB,IAAAisD,EAAA,IAAAA,EAAA,GAEZ/oD,EAFY,kBAAAjrB,OAEsBwD,EAAYmoB,KAAK7gB,MAFvC,KAAA9K,OAEgD4c,KAC5D1D,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAJxB,CAAAs3E,EAAAvpE,KAAA,eAAAupE,EAAAh5D,OAAA,SAKT1c,EAAKwM,MAAMmO,IALF,cAQdlc,EAAWwG,EAAYxG,SARTi3E,EAAAvpE,KAAA,EAUKnM,EAAK2mC,0BAA0B1hC,EAAYmoB,KAAK7gB,MAAO,aAAc,GAAI,GAAI8R,GAVlF,WAUdjR,EAVcsoE,EAAAxmE,QAaCS,EAbD,CAAA+lE,EAAAvpE,KAAA,gBAcVuC,EAAyC,SAAhC1O,EAAKjF,MAAM4T,iBACpBszC,EAAiBp1C,SAAS8C,GAAc,KACxCuyC,EAAer1C,SAAS8C,GAAc,KAhB5B+lE,EAAAvpE,KAAA,GAiBQnM,EAAKiP,gBAAgBhK,EAAYmD,QAASsG,EAAQuzC,EAAgBC,GAAc,GAjBxF,QAiBV4yB,EAjBUY,EAAAxmE,KAmBZ6lE,EAAc,CAChBpvE,KAAM,KACN0vE,SAAU,MAGRL,EAAa,CACfrvE,KAAM,KACN0vE,SAAU,MAGZP,EAAU/1E,QAAQ,SAAA0G,GAChB,IAAM4vE,EAAW1oE,KAAK69C,IAAI39C,SAASpH,EAAEkK,WAAa9C,SAAS8C,IACvD9C,SAASpH,EAAEkK,WAAa9C,SAAS8C,MAAgBolE,EAAYM,UAAYA,EAAWN,EAAYM,YAClGN,EAAYM,SAAWA,EACvBN,EAAYpvE,KAAOF,GAGjBoH,SAASpH,EAAEkK,WAAa9C,SAAS8C,KAAeqlE,EAAWK,WAC7DL,EAAWK,SAAWA,EACtBL,EAAWrvE,KAAOF,KAKlBsvE,EAAYpvE,MAAQqvE,EAAWrvE,OAC3BsvE,EAAmBj1E,EAAKwM,MAAMuoE,EAAYpvE,KAAKoK,WAC/CmlE,EAAkBl1E,EAAKwM,MAAMwoE,EAAWrvE,KAAKoK,WAC7ColE,EAAan1E,EAAKwM,MAAMuoE,EAAYpvE,KAAKgK,WACzCylE,EAAYp1E,EAAKwM,MAAMwoE,EAAWrvE,KAAKgK,WACvC0lE,EAAWD,EAAUnoE,MAAMkoE,GAC3BG,EAAYJ,EAAgBjoE,MAAMgoE,GAClCM,EAAoBD,EAAUh3D,IAAI+2D,GAClCG,EAA0Bx1E,EAAKwM,MAAMmD,GAAW1C,MAAMkoE,GAC5D/nE,EAAa6nE,EAAiBjoE,KAAKuoE,EAAkB/sE,MAAMgtE,KApD7C,eAyDdpoE,IAAepN,EAAKwM,MAAMY,GAAYhP,UACxCgP,EAAapN,EAAKgQ,iBAAiB5C,EAAY3O,MAI5C2O,GAAcpN,EAAKwM,MAAMY,GAAYhP,SAAW4B,EAAKwM,MAAMY,GAAYF,GAAG,MAC7EE,EAAapN,EAAKwM,MAAM,IA/DRkpE,EAAAh5D,OAAA,SAkEX1c,EAAKguB,8BAA8BtB,EAAetf,IAlEvC,yBAAAsoE,EAAApoE,SAAAunE,EAAA/5E,SAhgLD,gBAAA66E,GAAA,OAAAf,EAAApnE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAokLnB86E,gBAAkB,WAAuB,IAAtBC,EAAsBpoE,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,GAOvC,OANIzN,EAAKjF,MAAM66E,iBAAyD,oBAA/B51E,EAAKjF,MAAM66E,iBAElD51E,EAAKjF,MAAM66E,gBAAgB,KAAMC,IAI5B,GA3kLU/6E,KAglLnB8f,cAAgB,SAACjZ,EAAKgE,GAAoB,IAAd+xB,EAAcjqB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAR,IAIhC,OAHIzN,EAAKjF,MAAM6f,eAAqD,oBAA7B5a,EAAKjF,MAAM6f,eAChD5a,EAAKjF,MAAM6f,cAAcjZ,EAAKgE,EAAM+xB,GAE/B/xB,GAplLU7K,KAslLnBo3C,mCAAqC,SAAC4jC,EAAYn0E,EAAKgE,GAAoB,IAAd+xB,EAAcjqB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAR,IACjE,GAAIzN,EAAKjF,MAAM6f,eAAqD,oBAA7B5a,EAAKjF,MAAM6f,eAAgCjQ,KAAKC,UAAUjF,GAAM7G,QAAQ,IAAS,CACtH,IAAM6b,EAAa3a,EAAK+tB,8BAA8B+nD,EAAY,IAClEn7D,EAAWhZ,GAAOgE,EAClB3F,EAAKjF,MAAM6f,cAAck7D,EAAYn7D,EAAY+c,GAAK,GAExD,OAAO/xB,GA5lLU7K,KA8lLnBkzB,8BAAgC,SAACrsB,EAAKgE,GAAoB,IAAd+xB,EAAcjqB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAR,IAIhD,OAHIzN,EAAKjF,MAAM6f,eAAqD,oBAA7B5a,EAAKjF,MAAM6f,eAChD5a,EAAKjF,MAAM6f,cAAcjZ,EAAKgE,EAAM+xB,GAAK,GAEpC/xB,GAlmLU7K,KAomLnBizB,8BAAgC,SAACpsB,GAA6B,IAAxBiU,EAAwBnI,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KACnD,OAAOzN,EAAK0tC,cAAc/rC,EAAKiU,GAAc,IArmL5B9a,KAumLnB4yC,cAAgB,SAAC/rC,GAAsD,IAAjDiU,EAAiDnI,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAlC,KAAMsoE,EAA4BtoE,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,GACjEkN,EAAa,KACjBhZ,EAAMA,EAAI0G,cACV,IAAM2tE,EAAoBh2E,EAAK8uB,uBAE/B,GAAI9uB,EAAKjF,MAAM4f,YAAc3a,EAAKjF,MAAM4f,WAAWq7D,IAAsBh2E,EAAKjF,MAAM4f,WAAWq7D,GAAmBr0E,GAChHgZ,EAAa3a,EAAKjF,MAAM4f,WAAWq7D,GAAmBr0E,QAEjD,GAAIo0E,EAAiB,CAC1B,IAAME,EAAgBj2E,EAAKo6C,cAAc,cACrC67B,GAAiBA,EAAcD,IAAsBC,EAAcD,GAAmBr0E,KACxFgZ,EAAas7D,EAAcD,GAAmBr0E,IAWlD,OAPwBgZ,GAAcA,EAAWhV,OAAuC,OAA9BgV,EAAWu7D,gBAA2BrpE,SAAS8N,EAAWu7D,iBAAmBrpE,SAASe,KAAK84B,MAAM,MAQlJ/rB,EAAWhV,KAEbiQ,GAhoLU9a,KAkoLnB00B,iBAloLmB,eAAA2mD,EAAA17E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAkoLA,SAAAwqE,EAAOzW,EAAY16D,GAAnB,IAAAoxE,EAAAC,EAAA33C,EAAA43C,EAAAC,EAAA,OAAA1qD,EAAA7wB,EAAA+Q,KAAA,SAAAyqE,GAAA,cAAAA,EAAAvqE,KAAAuqE,EAAAtqE,MAAA,cAAAsqE,EAAAtqE,KAAA,EAIP4P,QAAQqD,IAAI,CACpBpf,EAAK+rB,gBAAgB9mB,EAAYmoB,KAAK7gB,MAAOozD,GAAY,GACzD3/D,EAAKwjE,oBAAoBv+D,EAAYmoB,KAAK7gB,SAN3B,cAAA8pE,EAAAI,EAAAvnE,KAAAonE,EAAA77E,OAAA6yB,EAAA,EAAA7yB,CAAA47E,EAAA,GAEf13C,EAFe23C,EAAA,GAGfC,EAHeD,EAAA,GASbE,EAAYx2E,EAAKwM,MAAM,GACvBxM,EAAKwM,MAAMmyB,GAAmBvuB,GAAG,IAAMpQ,EAAKwM,MAAM+pE,GAAuBnmE,GAAG,KAC9EomE,EAAYx2E,EAAKwM,MAAMmyB,GAAmBrgB,IAAIte,EAAKwM,MAAM+pE,KAX1CE,EAAA/5D,OAAA,SAcV85D,GAdU,wBAAAC,EAAAnpE,SAAA8oE,EAAAt7E,SAloLA,gBAAA47E,EAAAC,GAAA,OAAAR,EAAA3oE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAkpLnB87E,WAAa,SAACjiD,GACZ,OAAOlV,OAAOo3D,KAAKliD,EAAK,SAAU,aAnpLjB75B,KAqpLnBg8E,mBArpLmBr8E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAqpLE,SAAAmrE,IAAA,IAAA3rE,EAAA4rE,EAAAzoE,EAAA0oE,EAAAC,EAAAC,EAAA1pE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAorE,GAAA,cAAAA,EAAAlrE,KAAAkrE,EAAAjrE,MAAA,UAAOf,EAAP+rE,EAAAr4E,OAAA,QAAA0qB,IAAA2tD,EAAA,GAAAA,EAAA,GAAiB,KAC9BH,EAAkB,GACxB5rE,EAAUA,GAAWpL,EAAKjF,MAAMqQ,QAFb,CAAAgsE,EAAAjrE,KAAA,eAAAirE,EAAA16D,OAAA,SAKVs6D,GALU,UAQbzoE,EAAgB1B,SAASe,KAAK84B,MAAQ,OAEtCuwC,EAAsBj3E,EAAKuQ,gBAAgB,CAAC,QAAS,mBACnC4c,QAXL,CAAAiqD,EAAAjrE,KAAA,gBAAAirE,EAAAjrE,KAAA,GAYXnM,EAAKwL,aAAayrE,EAAoBl8E,MAAMs8E,UAA5C,eAAAC,EAAA78E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAuD,SAAA2rE,EAAOC,GAAP,IAAAjrE,EAAAkrE,EAAAxyE,EAAAkI,EAAAuqE,EAAAxvE,EAAAyvE,EAAAC,EAAAlrE,EAAAmrE,EAAA3B,EAAA,OAAApqD,EAAA7wB,EAAA+Q,KAAA,SAAA8rE,GAAA,cAAAA,EAAA5rE,KAAA4rE,EAAA3rE,MAAA,cACrDI,EAAQ,QACRkrE,EAAiBD,EAASO,OAC1B9yE,EAAcwyE,EAAelrE,GAHwBurE,EAAA3rE,KAAA,EAKrDnM,EAAKjF,MAAM4nC,aAAa19B,EAAYhI,KAAMgI,EAAYmD,QAASnD,EAAY29B,KALtB,cAAAk1C,EAAA3rE,KAAA,EAOrCnM,EAAK+rB,gBAAgB9mB,EAAYhI,KAAMmO,GAPF,QAOrD+B,EAPqD2qE,EAAA5oE,OAQ5C/B,EAAQiD,GAAG,KACJ,aACdsnE,EAAaF,EAASE,WACtBxvE,EAAe+uE,EAAoBluE,MACnC4uE,EAAgBV,EAAoBh7E,MACpC27E,EAAYX,EAAoBe,aAChCtrE,EAAS8qE,EAASS,qBAAuB1pE,EAAgB,UAAY,SACrEspE,EAA4B,YAAXnrE,EACjBwpE,EAAiBjkD,IAAsC,IAA/BulD,EAASS,qBAA4BC,MAAMnnE,OAAO,uBAAyB,OACzGimE,EAAgBtuE,KAAK,CACnB6D,QACAG,SACAS,UACAyqE,YACAF,aACAS,YAdkB,aAelBjwE,eACAyvE,gBACAzB,iBACA2B,oBA3BuD,wBAAAC,EAAAxqE,SAAAiqE,EAAAz8E,SAAvD,gBAAAs9E,GAAA,OAAAd,EAAA9pE,MAAA1S,KAAA2S,YAAA,IAZW,aA4CbypE,EAAoBl3E,EAAKuQ,gBAAgB,CAAC,QAAS,iBACnC4c,QA7CH,CAAAiqD,EAAAjrE,KAAA,gBAAAirE,EAAAjrE,KAAA,GA8CkBnM,EAAKq4E,wBAAwBjtE,GA9C/C,QAAAgsE,EAAAloE,KA+CInQ,QAAQ,SAAAy4E,GAC3B,IACMrqE,EAAUqqE,EAASc,WACnB/rE,EAAQirE,EAASe,iBAAiBhsE,MAClCmrE,EAAaF,EAASgB,iBAAiBjsE,MACvCksE,EAAoBjB,EAASiB,kBAC7BC,EAAc,iBAAAj3E,OAAoBi2E,EAApB,QACdG,GAAkBL,EAASmB,WAAanB,EAASoB,QACjD1wE,EAAelI,EAAKuQ,gBAAgB,CAAC,YAAa,cAAe,UACjEonE,EAAgB33E,EAAKuQ,gBAAgB,CAAC,YAAa,cAAe,UAClEsoE,EAAoB74E,EAAKuQ,gBAAgB,CAAC,YAAa,cAAe,cACtE2lE,EAAiBjkD,IAA0C,IAAnCulD,EAASsB,aAAaC,YAAmBb,MAAMnnE,OAAO,uBAAyB,OACvGrE,EAAS8qE,EAASoB,QAAU,UAAY/rE,SAAS2qE,EAASsB,aAAaC,aAAexqE,EAAgB,UAAY,SAClHqpE,EAAS,GAAAn2E,OAAMge,OAAOmV,SAAS2K,OAAtB,MAAA99B,OAAiCzB,EAAKuQ,gBAAgB,CAAC,YAAa,cAApE,WAAA9O,OAA2Fy1E,EAAkB8B,MAA7G,KAAAv3E,OAAsH+1E,EAASgB,iBAAiBjsE,MAAhJ,UACfyqE,EAAgBtuE,KAAK,CACnB6D,QACAG,SACAS,UACAyqE,YACAF,aACAS,YAnBkB,QAoBlBjwE,eACAyvE,gBACAzB,iBACA2B,iBACAa,iBACAD,oBACAI,wBA1Ea,eAAAzB,EAAA16D,OAAA,SA+EZs6D,GA/EY,yBAAAI,EAAA9pE,SAAAypE,EAAAj8E,SArpLFA,KAsuLnBu9E,wBAtuLmB,eAAAY,EAAAx+E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAsuLO,SAAAstE,EAAO9tE,GAAP,IAAA8rE,EAAArkB,EAAA9D,EAAAoqB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1tD,EAAA7wB,EAAA+Q,KAAA,SAAAytE,GAAA,cAAAA,EAAAvtE,KAAAutE,EAAAttE,MAAA,cAClB+qE,EAAoBl3E,EAAKuQ,gBAAgB,CAAC,QAAS,gBAEnDsiD,EAAYqkB,EAAkBwC,YAAYxnB,WAC1CnD,EAAuBmoB,EAAkBwC,YAAYC,aACrDR,EAAgBjC,EAAkBwC,YAAYP,cAL5BM,EAAAttE,KAAA,EAOlB4P,QAAQqD,IAAI,CAChBpf,EAAKjF,MAAM4nC,aAAaw2C,EAAcl8E,KAAMk8E,EAAc/wE,QAAS+wE,EAAcv2C,KACjF5iC,EAAKjF,MAAM4nC,aAAaosB,EAAqB9xD,KAAM8xD,EAAqB3mD,QAAS2mD,EAAqBnsB,OAThF,cAAA62C,EAAAttE,KAAA,EAed4P,QAAQqD,IAAI,CACpBpf,EAAK4gC,kBAAkBmuB,EAAqB9xD,KAAM,cAAe41D,EAAW,SAAU,CAACxmD,OAAQ,CAAEutE,MAAOxuE,KACxGpL,EAAK4gC,kBAAkBmuB,EAAqB9xD,KAAM,iBAAkB41D,EAAW,SAAU,CAACxmD,OAAQ,CAAEutE,MAAOxuE,OAjBrF,cAAAguE,EAAAK,EAAAvqE,KAAAmqE,EAAA5+E,OAAA6yB,EAAA,EAAA7yB,CAAA2+E,EAAA,GAatBE,EAbsBD,EAAA,GActBE,EAdsBF,EAAA,GAoBlBG,EAAuB,GApBLC,EAAAttE,KAAA,GAsBlBnM,EAAKwL,aAAa8tE,EAAlB,eAAAO,EAAAp/E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAqC,SAAAkuE,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAArB,EAAAsB,EAAAC,EAAAC,EAAA9B,EAAAF,EAAAC,EAAAgC,EAAA3B,EAAA4B,EAAAzxE,EAAA9C,EAAAw0E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7tE,EAAAgC,EAAAwqB,EAAA6+C,EAAA,OAAA3sD,EAAA7wB,EAAA+Q,KAAA,SAAAkvE,GAAA,cAAAA,EAAAhvE,KAAAgvE,EAAA/uE,MAAA,cAEnC6tE,EAAUntE,SAASktE,EAAMj3C,aAAak3C,SACtCC,EAAsBV,EAAqBh/D,KAAK,SAAA4gE,GAAK,OAAItuE,SAASsuE,EAAMr4C,aAAak3C,WAAaA,IAH/DkB,EAAA/uE,KAAA,EAO/B4P,QAAQqD,IAAI,CACpBpf,EAAKosB,oBAAoB2iC,EAAqB9xD,KAAM,WAAY,CAAC+8E,IACjEh6E,EAAK4gC,kBAAkBu4C,EAAcl8E,KAAM,gBAAiB88E,EAAM17D,YAAa,SAAU,CAAEhS,OAAQ,CAAE+uE,UAAWrB,EAAMpkD,qBAT/E,UAAAukD,EAAAgB,EAAAhsE,KAAAirE,EAAA1/E,OAAA6yB,EAAA,EAAA7yB,CAAAy/E,EAAA,GAKvCpB,EALuCqB,EAAA,GAMvCC,EANuCD,EAAA,GAYpCrB,EAZoC,CAAAoC,EAAA/uE,KAAA,gBAAA+uE,EAAAx+D,OAAA,UAahC,GAbgC,WAiBnC29D,EAAmBD,EAAiBA,EAAe/tE,OAAO,SAAAssE,GAC9D,OAAOA,EAAS71C,aAAas4C,YAActC,EAAanjD,iBACtD31B,EAAKwM,MAAMmsE,EAASt6D,aAAajO,GAAG2pE,EAAM17D,cAC1Cre,EAAKwM,MAAMmsE,EAAS71C,aAAau4C,cAAcnuE,GAAG4rE,EAAaC,aAC/DlsE,SAASisE,EAAaC,YAAc7B,EAAkBwC,YAAY4B,4BAA8B1tE,KAAK84B,MAAQ,MAC5G,GAGC4zC,EAAkBD,EAAiBt6C,OAAO,SAAC7zB,EAAMqvE,GACrD,OAAKrvE,EAIDlM,EAAKwM,MAAM+uE,EAAKz4C,aAAa04C,aAAaprE,GAAGlE,EAAK42B,aAAa04C,aAC1DD,EAEFrvE,EANEqvE,GAOR,MAEG/C,EAAmB/9E,OAAO2R,OAAO8qE,EAAkBn8E,MAAMmQ,iBAAiBqP,KAAK,SAAAtV,GAAW,OAAIA,EAAYmD,QAAQC,gBAAkBywE,EAAanjD,gBAAgBttB,gBACjKiwE,EAAat4E,EAAKgQ,iBAAiB8oE,EAAaR,WAAYE,EAAiB/5E,UAC7E85E,EAAmB99E,OAAO2R,OAAOosE,EAAiBiD,YAAYlhE,KAAK,SAAAmhE,GAAgB,OAAIA,EAAiBtzE,QAAQC,gBAAkBywE,EAAa6C,WAAWtzE,gBAC1JkyE,EAAav6E,EAAK2N,YAAsC,IAA1BmrE,EAAaC,YAAmBhoE,OAAO,gBAErE6nE,EAAUqB,EAAsBA,EAAoBn3C,aAAa81C,QAAU,MAzCxC,CAAAsC,EAAA/uE,KAAA,gBAAA+uE,EAAA/uE,KAAA,GA0CHnM,EAAKosB,oBAAoB2iC,EAAqB9xD,KAAM,mBAAoB,CAAC27E,IA1CtE,QAAAsC,EAAA1tD,GAAA0tD,EAAAhsE,KAAAgsE,EAAA/uE,KAAA,iBAAA+uE,EAAA1tD,GA0CkF,KA1ClF,WA0CnCgtD,EA1CmCU,EAAA1tD,GA2CnCzkB,EA3CmC,GAAAtH,OA2CxB+2E,EAAiBv7E,KA3CO,OAAAwE,OA2CG62E,EAAW7vE,QAAQ,GA3CtB,KAAAhH,OA2C4B82E,EAAiBhsE,MA3C7C,YAAA9K,OA2C6D84E,GAChGt0E,EAAQ+zE,EAEVS,EAAgB,MAChBR,EA/CqC,CAAAiB,EAAA/uE,KAAA,gBAAA+uE,EAAA/uE,KAAA,GAgDVnM,EAAKi1C,sBAAsBglC,EAAoBhhE,iBAhDrC,QAgDjCyhE,EAhDiCQ,EAAAhsE,KAiDjCyrE,EAAmBD,EAAiBA,EAAe3oD,KAAKxX,KAAK,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBkwE,EAAiBnwE,QAAQC,gBAAiB,KAClJoyE,EAAgBE,EAAmB36E,EAAKgQ,iBAAiBnD,SAAS8tE,EAAiBh1E,KAAM,IAAK4yE,EAAiB95E,UAAYuB,EAAKwM,MAAM,GAlD/F,eAqDnCouE,EAAkB56E,EAAKgQ,iBAAiB8oE,EAAaR,WAAYC,EAAiB95E,UAElFo8E,EAAiBP,EAAkBt6E,EAAKwM,MAAM8tE,EAAgBx3C,aAAa04C,aAAahzE,MAAM,IAAOxI,EAAKwM,MAAM,GAChHsuE,EAAmBD,EAAezqE,GAAG,GAAKpQ,EAAKwM,MAAMssE,EAAaR,YAAYh6D,IAAIu8D,GAAkB76E,EAAKwM,MAAM,GAC/GuuE,EAAqB/6E,EAAKqvD,qBAAqByrB,EAAkBvC,EAAiB95E,UAzD/Cy8E,EAAA/uE,KAAA,GA8D/B4P,QAAQqD,IAAI,CACpBpf,EAAK+yE,cAAcyF,EAAiBjsE,OACpCvM,EAAK+rB,gBAAgBysD,EAAiBjsE,MAAOnB,GAAS,KAhEf,QAAA4vE,EAAAE,EAAAhsE,KAAA+rE,EAAAxgF,OAAA6yB,EAAA,EAAA7yB,CAAAugF,EAAA,GA4DvC5tE,EA5DuC6tE,EAAA,GA6DvC7rE,EA7DuC6rE,EAAA,GAmEzC7tE,EAAapN,EAAKgQ,iBAAiB5C,EAAYorE,EAAiB/5E,UAChE2Q,EAAmBpP,EAAKgQ,iBAAiBZ,EAAkBopE,EAAiB/5E,UACtEm7B,EAAexqB,EAAiB5G,MAAM4E,GACtCqrE,EAAoB7+C,EAAaxpB,GAAG,GAAKkoE,EAAWh6D,IAAIsb,GAAcpxB,MAAM,KAAKC,QAAQ,GAAK,IAAM,MAI1G+wE,EAAqB9wE,KAAK,CACxBK,QACA9C,QACA2yE,UACAN,aACAQ,eACA2B,gBACAD,gBACAI,kBACAE,mBACAtC,mBACAD,mBACAE,oBACAsC,qBACApC,SAAU2B,EAAe7/E,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQ6/E,EAAR,CAAyBp6E,GAAIk6E,EAAewB,UAAU,SAAAvqE,GAAC,OAAIA,EAAED,OAASkpE,EAAgBlpE,SAAU,OAxFlF,yBAAA8pE,EAAA5tE,SAAAwsE,EAAAh/E,SAArC,gBAAA+gF,GAAA,OAAAhC,EAAArsE,MAAA1S,KAAA2S,YAAA,IAtBkB,eAAAgsE,EAAA/8D,OAAA,SAkHjB88D,GAlHiB,yBAAAC,EAAAnsE,SAAA4rE,EAAAp+E,SAtuLP,gBAAAghF,GAAA,OAAA7C,EAAAzrE,MAAA1S,KAAA2S,YAAA,GAAA3S,KA01LnBihF,4BA11LmB,eAAAC,EAAAvhF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA01LW,SAAAqwE,EAAOtmD,GAAP,IAAAuH,EAAAyO,EAAAW,EAAAC,EAAA9vC,EAAA,OAAAqvB,EAAA7wB,EAAA+Q,KAAA,SAAAkwE,GAAA,cAAAA,EAAAhwE,KAAAgwE,EAAA/vE,MAAA,UACtB+wB,EAAkBl9B,EAAK8uB,yBACvB6c,EAAgB3rC,EAAKuQ,gBAAgB,CAAC,UAAW,YAAa,eAClD4c,UAAWwe,EAAcgC,UAAUzQ,GAHzB,CAAAg/C,EAAA/vE,KAAA,gBAIpBmgC,EAAkBX,EAAcgC,UAAUzQ,GAC1CqP,EALoB,GAAA9qC,OAKG6qC,EALH,aAAA7qC,OAK8BkqC,EAAchqC,IAL5C,2CAAAF,OAKyFk0B,EALzF,cAAAumD,EAAA/vE,KAAA,EAMCnM,EAAK6tC,kBAAkBtB,EAAmB,MAAM,GANjD,YAMpB9vC,EANoBy/E,EAAAhtE,OAOyB,kBAAxBzS,EAAawxC,OAPd,CAAAiuC,EAAA/vE,KAAA,gBAAA+vE,EAAAx/D,OAAA,SAQjBjgB,EAAawxC,OAAO5hC,OAAO,SAAAC,GAAE,MAAgB,+CAAZA,EAAG9E,MAAyD8E,EAAGynB,GAAG1rB,gBAAkBstB,EAAgBttB,iBARpH,eAAA6zE,EAAAx/D,OAAA,SAWrB,MAXqB,yBAAAw/D,EAAA5uE,SAAA2uE,EAAAnhF,SA11LX,gBAAAqhF,GAAA,OAAAH,EAAAxuE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAu2LnBshF,mBAv2LmB3hF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAu2LE,SAAAywE,IAAA,IAAAjxE,EAAAkxE,EAAAC,EAAA7vD,EAAA/R,EAAA6hE,EAAAtxE,EAAAuxE,EAAAhvE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0wE,GAAA,cAAAA,EAAAxwE,KAAAwwE,EAAAvwE,MAAA,UAAOf,EAAPqxE,EAAA39E,OAAA,QAAA0qB,IAAAizD,EAAA,GAAAA,EAAA,GAAiB,KAAMH,EAAvBG,EAAA39E,OAAA,QAAA0qB,IAAAizD,EAAA,GAAAA,EAAA,GAA0C,KAC7DrxE,EAAUA,GAAWpL,EAAKjF,MAAMqQ,QADb,CAAAsxE,EAAAvwE,KAAA,eAAAuwE,EAAAhgE,OAAA,SAGV,MAHU,WAMb6/D,EAAqBv8E,EAAKuQ,gBAAgB,CAAC,QAAS,kBAClC4c,QAPL,CAAAuvD,EAAAvwE,KAAA,eAAAuwE,EAAAhgE,OAAA,SAQV,MARU,UAWbgQ,EAXa,mBAAAjrB,OAWsB2J,EAXtB,KAAA3J,OAWiC66E,GAEjC,QADb3hE,EAAa3a,EAAK0tC,cAAchhB,IAZnB,CAAAgwD,EAAAvwE,KAAA,gBAAAuwE,EAAAhgE,OAAA,SAcV/B,GAdU,eAiBb6hE,EAAkB,GAClBtxE,EAAkBqxE,EAAmBxhF,MAAMmQ,gBAlB9BwxE,EAAAvwE,KAAA,GAmBbnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAyxE,EAAAliF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAAgxE,EAAOrwE,GAAP,IAAAtH,EAAAowB,EAAAwnD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7wE,EAAA8wE,EAAA,OAAA1xD,EAAA7wB,EAAA+Q,KAAA,SAAAyxE,GAAA,cAAAA,EAAAvxE,KAAAuxE,EAAAtxE,MAAA,cAC9ClH,EAAciG,EAAgBqB,GAC9B8oB,EAAoBpwB,EAAYowB,kBAFcooD,EAAAtxE,KAAA,EAG9CnM,EAAKjF,MAAM4nC,aAAatN,EAAkBp4B,KAAMo4B,EAAkBjtB,QAASitB,EAAkBuN,KAH/C,cAAA66C,EAAAtxE,KAAA,EAIvBnM,EAAKosB,oBAAoBiJ,EAAkBp4B,KAAM,aAJ1B,OAI9C4/E,EAJ8CY,EAAAvuE,KAK3C4tE,EAAa,EAL8B,YAK3BA,GAAcjwE,SAASgwE,IALI,CAAAY,EAAAtxE,KAAA,gBAAAsxE,EAAAtxE,KAAA,GAWxC4P,QAAQqD,IAAI,CACpBpf,EAAK+7E,4BAA4B1mD,EAAkBjtB,SACnDpI,EAAKosB,oBAAoBiJ,EAAkBp4B,KAAM,cAAe,CAAC6/E,IACjE98E,EAAKosB,oBAAoBiJ,EAAkBp4B,KAAM,sBAAuB,CAAC6/E,IACzE98E,EAAKosB,oBAAoBiJ,EAAkBp4B,KAAM,gBAAiB,CAAC+C,EAAKjF,MAAMqQ,QAAS0xE,MAfvC,WAAAC,EAAAU,EAAAvuE,KAAA8tE,EAAAviF,OAAA6yB,EAAA,EAAA7yB,CAAAsiF,EAAA,GAOhDE,EAPgDD,EAAA,GAQhDE,EARgDF,EAAA,GAShDG,EATgDH,EAAA,GAUhDI,EAVgDJ,EAAA,GAkBlDzqD,QAAQqc,IAAR,UAAAntC,OAAsBq7E,EAAtB,OAAAr7E,OAAsCy7E,EAAtC,OAAAz7E,OAAsD07E,EAAtD,OAAA17E,OAAuE27E,IAEnEC,EAAc,KACdC,EAAe,KACfC,EAAgB,KAChBL,GAA6B,OAAfA,IAChBG,EAAcr9E,EAAKgQ,iBAAiBktE,EAAYj4E,EAAYxG,WAEzC,OAAjB2+E,EA1B8C,CAAAK,EAAAtxE,KAAA,YA2BhDgxE,EAAcn9E,EAAKgQ,iBAAiBmtE,EAAa,MACjDC,EAAep9E,EAAKgQ,iBAAiBotE,EAAcn4E,EAAYxG,WAC9C2R,GAAG,GA7B4B,CAAAqtE,EAAAtxE,KAAA,YA8B9CoxE,EAAgBH,GAGhBE,EAAeF,EAAa50E,MAAM20E,GAAa7+D,IAAI++D,IAClCjtE,GAAG+sE,KAClBG,EAAeH,GAGXzwE,EAASowE,EAAaD,GAAkBS,EAAaltE,GAAG,GAAK,WAAa,UAEvD,OAArBksE,GAA6BA,EAAiBj0E,gBAAkBqE,EAxCtB,CAAA+wE,EAAAtxE,KAAA,gBAAAsxE,EAAA/gE,OAAA,kBA4CxC8gE,EAAgBP,GAAmBA,EAAgBn+E,OAASm+E,EAAgB,GAAK,KAEvFT,EAAgBjwE,GAAS,CACvBG,SACA2wE,cACAC,eACAC,gBACAC,iBAnD4C,QAKaV,IALbW,EAAAtxE,KAAA,iCAAAsxE,EAAAnwE,SAAAsvE,EAAA9hF,SAAhD,gBAAA4iF,GAAA,OAAAf,EAAAnvE,MAAA1S,KAAA2S,YAAA,IAnBa,eAAAivE,EAAAhgE,OAAA,SA6EZ1c,EAAK4a,cAAc8R,EAAe8vD,IA7EtB,yBAAAE,EAAApvE,SAAA+uE,EAAAvhF,SAv2LFA,KAs7LnB6iF,cAt7LmB,eAAAC,EAAAnjF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAs7LH,SAAAiyE,EAAOle,GAAP,IAAAme,EAAAz/D,EAAAqO,EAAA/R,EAAAif,EAAAmkD,EAAAtwE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAgyE,GAAA,cAAAA,EAAA9xE,KAAA8xE,EAAA7xE,MAAA,UAAmB2xE,IAAnBC,EAAAj/E,OAAA,QAAA0qB,IAAAu0D,EAAA,KAAAA,EAAA,GAAuC1/D,EAAvC0/D,EAAAj/E,OAAA,QAAA0qB,IAAAu0D,EAAA,GAAAA,EAAA,GAAqD,SAC9Dpe,EADS,CAAAqe,EAAA7xE,KAAA,eAAA6xE,EAAAthE,OAAA,UAEL,GAFK,UAMRgQ,EANQ,cAAAjrB,OAMsBk+D,EANtB,KAAAl+D,OAMoCq8E,EANpC,KAAAr8E,OAMmD4c,GAC7C,WAAhBA,EAPU,CAAA2/D,EAAA7xE,KAAA,aAQNwO,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAT9B,CAAA4/E,EAAA7xE,KAAA,eAAA6xE,EAAAthE,OAAA,SAUH1c,EAAKwM,MAAMmO,IAVR,cAAAqjE,EAAA7xE,KAAA,GAcWnM,EAAKjF,MAAM6e,KAAK0C,IAAIsP,WAAW+zC,GAd1C,aAcV/lC,EAdUokD,EAAA9uE,MAAA,CAAA8uE,EAAA7xE,KAAA,YAiBR2xE,IACFlkD,EAAe55B,EAAKgQ,iBAAiB4pB,EAAc,MAGrDA,EAAe55B,EAAKwM,MAAMotB,IAGRx7B,QAxBN,CAAA4/E,EAAA7xE,KAAA,YAyBU,WAAhBkS,EAzBM,CAAA2/D,EAAA7xE,KAAA,gBAAA6xE,EAAAthE,OAAA,SA0BD1c,EAAKguB,8BAA8BtB,EAAekN,IA1BjD,eAAAokD,EAAAthE,OAAA,SA4BDkd,GA5BC,eAAAokD,EAAAthE,OAAA,SAgCP,MAhCO,yBAAAshE,EAAA1wE,SAAAuwE,EAAA/iF,SAt7LG,gBAAAmjF,GAAA,OAAAL,EAAApwE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAw9LnBixB,gBAx9LmB,eAAAmyD,EAAAzjF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAw9LD,SAAAuyE,EAAOtlE,EAAc8mD,GAArB,IAAAme,EAAAz/D,EAAAqO,EAAA/R,EAAA1V,EAAAm5E,EAAAC,EAAAzuE,EAAAgqB,EAAA0kD,EAAA7wE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAuyE,GAAA,cAAAA,EAAAryE,KAAAqyE,EAAApyE,MAAA,UAAiC2xE,IAAjCQ,EAAAx/E,OAAA,QAAA0qB,IAAA80D,EAAA,KAAAA,EAAA,GAAqDjgE,EAArDigE,EAAAx/E,OAAA,QAAA0qB,IAAA80D,EAAA,GAAAA,EAAA,GAAmE,SAC9E3e,EADW,CAAA4e,EAAApyE,KAAA,eAAAoyE,EAAA7hE,OAAA,UAEP,GAFO,UAMVgQ,EANU,gBAAAjrB,OAMsBoX,EANtB,KAAApX,OAMsCk+D,EANtC,KAAAl+D,OAMoDq8E,EANpD,KAAAr8E,OAMmE4c,GAC/D,WAAhBA,EAPY,CAAAkgE,EAAApyE,KAAA,aAQRwO,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAT5B,CAAAmgF,EAAApyE,KAAA,eAAAoyE,EAAA7hE,OAAA,SAUL1c,EAAKwM,MAAMmO,IAVN,UAeM3a,EAAKwyB,kBAAkB3Z,GAf7B,CAAA0lE,EAAApyE,KAAA,cAiBRlH,EAAcjF,EAAKuQ,gBAAgB,CAAC,QAAQ,SAASsI,EAAarI,iBAjB1D,CAAA+tE,EAAApyE,KAAA,gBAAAoyE,EAAApyE,KAAA,GAmBNnM,EAAKjF,MAAM4nC,aAAa9pB,EAAc5T,EAAYmD,QAASo2E,GAnBrD,QAAAD,EAAApyE,KAAA,wBAAAoyE,EAAA7hE,OAAA,UAqBL,GArBK,eAAA6hE,EAAApyE,KAAA,GA4BN4P,QAAQqD,IAAI,CACpBpf,EAAK8tD,iBAAiBj1C,GACtB7Y,EAAKo6B,mBAAmBvhB,EAAc8mD,EAAYthD,KA9BpC,WAAA+/D,EAAAG,EAAArvE,KAAAmvE,EAAA5jF,OAAA6yB,EAAA,EAAA7yB,CAAA2jF,EAAA,GA0BdxuE,EA1BcyuE,EAAA,KA2BdzkD,EA3BcykD,EAAA,KAAAE,EAAApyE,KAAA,YAkCV2xE,IACFlkD,EAAe55B,EAAKgQ,iBAAiB4pB,EAAchqB,KAGrDgqB,EAAe55B,EAAKwM,MAAMotB,IAGRx7B,QAzCJ,CAAAmgF,EAAApyE,KAAA,YA0CQ,WAAhBkS,EA1CQ,CAAAkgE,EAAApyE,KAAA,gBAAAoyE,EAAA7hE,OAAA,SA2CH1c,EAAKguB,8BAA8BtB,EAAekN,EAAc,KA3C7D,eAAA2kD,EAAA7hE,OAAA,SA6CHkd,GA7CG,QAAA2kD,EAAApyE,KAAA,iBAiDdnM,EAAKkyB,eAAe,gCAAiCrZ,GAjDvC,eAAA0lE,EAAA7hE,OAAA,SAmDT,MAnDS,yBAAA6hE,EAAAjxE,SAAA6wE,EAAArjF,SAx9LC,gBAAA2jF,EAAAC,GAAA,OAAAR,EAAA1wE,MAAA1S,KAAA2S,YAAA,GAAA3S,KA6gMnB6jF,gBAAkB,SAACC,GACjB,GAA+B,oBAApBA,EAAS50D,OAAuB,CACzC40D,EAAS50D,SACT40D,EAASC,kBAAkB,EAAG,OAC9B,IAAMhpB,EAAM7sC,SAAS81D,YAAY,QAEjC,OADAF,EAASC,kBAAkB,EAAG,GACvBhpB,EAET,OAAO,GArhMU/6D,KAuhMnBikF,WAAa,SAACpqD,EAAK55B,EAAO8H,GACxB,IAAMm8E,EAASh2D,SAAS9tB,cAAc,UACtC8jF,EAAOpiF,IAAM+3B,EAGT55B,GACFN,OAAOoE,KAAK9D,GAAOgE,QAAQ,SAACkgF,EAAMh3E,GAChC+2E,EAAOC,GAAQlkF,EAAMkkF,KAID,oBAAbp8E,IACLm8E,EAAOE,WACTF,EAAOG,mBAAqB,WACA,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC3CF,EAAOG,mBAAqB,KAC5Bt8E,MAIJm8E,EAAOI,OAASv8E,GAIfm8E,EAAO9+E,IAAO8oB,SAASC,eAAe+1D,EAAO9+E,KAChD8oB,SAASq2D,KAAKC,YAAYN,IAhjMXlkF,KAmjMnBykF,YAAc,SAAApsD,GACZ,IACExoB,KAAKwU,MAAMgU,GACX,MAAOvxB,GACP,OAAO,EAET,OAAO,GAzjMU9G,KA2jMnBg9B,aAAe,SAAC1vB,GACd,QAAOA,GAAmD,OAAzCA,EAAQinC,MAAM,wBA5jMdv0C,KA8jMnB0oE,oBA9jMmB,eAAAgc,EAAA/kF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA8jMG,SAAA6zE,EAAO5mE,GAAP,IAAAwF,EAAAqO,EAAA/R,EAAAuuD,EAAAwW,EAAAjyE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA2zE,GAAA,cAAAA,EAAAzzE,KAAAyzE,EAAAxzE,MAAA,UAAqBkS,EAArBqhE,EAAA5gF,OAAA,QAAA0qB,IAAAk2D,EAAA,GAAAA,EAAA,GAAmC,SACjDhzD,EADc,eAAAjrB,OACiBoX,EADjB,KAAApX,OACiC4c,KAC/C1D,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAHtB,CAAAuhF,EAAAxzE,KAAA,eAAAwzE,EAAAjjE,OAAA,SAIX1c,EAAKwM,MAAMmO,IAJA,cAAAglE,EAAAxzE,KAAA,EAOMnM,EAAKosB,oBAAoBvT,EAAc,cAAe,GAAI,GAAIwF,GAPpE,cAOd6qD,EAPcyW,EAAAzwE,KAAAywE,EAAAjjE,OAAA,SAQb1c,EAAKguB,8BAA8BtB,EAAew8C,IARrC,wBAAAyW,EAAAryE,SAAAmyE,EAAA3kF,SA9jMH,gBAAA8kF,GAAA,OAAAJ,EAAAhyE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAwkMnBi4E,cAxkMmB,eAAA8M,EAAAplF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAwkMH,SAAAk0E,EAAOjnE,GAAP,IAAAwF,EAAAqO,EAAA/R,EAAAvN,EAAA2yE,EAAAtyE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAg0E,GAAA,cAAAA,EAAA9zE,KAAA8zE,EAAA7zE,MAAA,UAAqBkS,EAArB0hE,EAAAjhF,OAAA,QAAA0qB,IAAAu2D,EAAA,GAAAA,EAAA,GAAmC,SAC3CrzD,EADQ,cAAAjrB,OACsBoX,KAC9B8B,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAH5B,CAAA4hF,EAAA7zE,KAAA,eAAA6zE,EAAAtjE,OAAA,SAIL1c,EAAKwM,MAAMmO,IAJN,cAAAqlE,EAAA7zE,KAAA,EAOWnM,EAAKosB,oBAAoBvT,EAAc,aAAc,GAAI,GAAIwF,GAPxE,cAORjR,EAPQ4yE,EAAA9wE,KAAA8wE,EAAAtjE,OAAA,SAQP1c,EAAKguB,8BAA8BtB,EAAetf,EAAY,KARvD,wBAAA4yE,EAAA1yE,SAAAwyE,EAAAhlF,SAxkMG,gBAAAmlF,GAAA,OAAAJ,EAAAryE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAklMnBs/B,mBAllMmB,eAAA8lD,EAAAzlF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAklME,SAAAu0E,EAAOtnE,EAAczQ,GAArB,IAAAiW,EAAAqO,EAAA/R,EAAAxN,EAAAizE,EAAA3yE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAq0E,GAAA,cAAAA,EAAAn0E,KAAAm0E,EAAAl0E,MAAA,UAA8BkS,EAA9B+hE,EAAAthF,OAAA,QAAA0qB,IAAA42D,EAAA,GAAAA,EAAA,GAA4C,SAC/Dh4E,EAAUA,GAAoBpI,EAAKjF,MAAMkK,YAAYmoB,KAAKhlB,QACpDskB,EAFa,aAAAjrB,OAEgBoX,EAFhB,KAAApX,OAEgC2G,EAFhC,KAAA3G,OAE2C4c,KACxD1D,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAJvB,CAAAiiF,EAAAl0E,KAAA,eAAAk0E,EAAA3jE,OAAA,SAKV1c,EAAKwM,MAAMmO,IALD,cAAA0lE,EAAAl0E,KAAA,EAOGnM,EAAKosB,oBAAoBvT,EAAc,YAAa,CAACzQ,GAAU,GAAIiW,GAPtE,cAOblR,EAPakzE,EAAAnxE,KAAAmxE,EAAA3jE,OAAA,SAQZ1c,EAAKguB,8BAA8BtB,EAAevf,EAAS,KAR/C,yBAAAkzE,EAAA/yE,SAAA6yE,EAAArlF,SAllMF,gBAAAwlF,EAAAC,GAAA,OAAAL,EAAA1yE,MAAA1S,KAAA2S,YAAA,GAAA3S,KA4lMnB0lF,mBA5lMmB,eAAAC,EAAAhmF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA4lME,SAAA80E,EAAO7nE,EAAczQ,GAArB,OAAA0jB,EAAA7wB,EAAA+Q,KAAA,SAAA20E,GAAA,cAAAA,EAAAz0E,KAAAy0E,EAAAx0E,MAAA,cAAAw0E,EAAAx0E,KAAA,EACNnM,EAAKo6B,mBAAmBvhB,EAAczQ,GADhC,cAAAu4E,EAAAjkE,OAAA,SAAAikE,EAAAzxE,MAAA,wBAAAyxE,EAAArzE,SAAAozE,EAAA5lF,SA5lMF,gBAAA8lF,EAAAC,GAAA,OAAAJ,EAAAjzE,MAAA1S,KAAA2S,YAAA,GAAA3S,KA+lMnBgmF,QA/lMmB,eAAAC,EAAAtmF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+lMT,SAAAo1E,EAAOnoE,GAAP,IAAA6T,EAAA/R,EAAA2xC,EAAAre,EAAA,OAAAniB,EAAA7wB,EAAA+Q,KAAA,SAAAi1E,GAAA,cAAAA,EAAA/0E,KAAA+0E,EAAA90E,MAAA,UACFugB,EADE,WAAAjrB,OACyBoX,KAC3B8B,EAAa3a,EAAK+tB,8BAA8BrB,IAF9C,CAAAu0D,EAAA90E,KAAA,eAAA80E,EAAAvkE,OAAA,SAKuB,kBAAf/B,EAA0BA,EAAahQ,KAAKwU,MAAMxE,IAL1D,cAQR9B,EAAeA,GAA8B7Y,EAAKjF,MAAMkK,YAAYmoB,KAAK7gB,MARjE00E,EAAA90E,KAAA,EASWnM,EAAKosB,oBAAoBvT,EAAc,WATlD,YASFyzC,EATE20B,EAAA/xE,MAAA,CAAA+xE,EAAA90E,KAAA,gBAWA8hC,EAAS,CACbqe,KAAMA,EAAK,GACX40B,UAAW50B,EAAK,IAbZ20B,EAAAvkE,OAAA,SAeC1c,EAAKguB,8BAA8BtB,EAAeuhB,IAfnD,eAAAgzC,EAAAvkE,OAAA,SAiBD,MAjBC,yBAAAukE,EAAA3zE,SAAA0zE,EAAAlmF,SA/lMS,gBAAAqmF,GAAA,OAAAJ,EAAAvzE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAknMnBsmF,gBAlnMmB,eAAAC,EAAA5mF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAknMD,SAAA01E,EAAO3oE,GAAP,IAAAO,EAAAqoE,EAAAC,EAAA/zE,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAy1E,GAAA,cAAAA,EAAAv1E,KAAAu1E,EAAAt1E,MAAA,cAAmB+M,EAAnBsoE,EAAA1iF,OAAA,QAAA0qB,IAAAg4D,EAAA,GAAAA,EAAA,GAA4B,GAAID,EAAhCC,EAAA1iF,OAAA,QAAA0qB,IAAAg4D,EAAA,GAAAA,EAAA,GAA6C,GAA7CC,EAAAt1E,KAAA,EACHnM,EAAKosB,oBAAoBpsB,EAAKjF,MAAMkK,YAAYmoB,KAAK7gB,MAAOoM,EAAYO,EAAQqoE,GAAY38B,MAAM,SAAAroC,GAC7Gvc,EAAKkyB,eAAe,yBAA0B3V,KAFhC,cAAAklE,EAAA/kE,OAAA,SAAA+kE,EAAAvyE,MAAA,wBAAAuyE,EAAAn0E,SAAAg0E,EAAAxmF,SAlnMC,gBAAA4mF,GAAA,OAAAL,EAAA7zE,MAAA1S,KAAA2S,YAAA,GAAA3S,KAunMnB84D,YAvnMmB,eAAA+tB,EAAAlnF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAunML,SAAAg2E,EAAO/oE,EAAcF,GAArB,IAAAkpE,EAAA3oE,EAAAqoE,EAAA5uD,EAAAmvD,EAAAr0E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA+1E,GAAA,cAAAA,EAAA71E,KAAA61E,EAAA51E,MAAA,UAAiC+M,EAAjC4oE,EAAAhjF,OAAA,QAAA0qB,IAAAs4D,EAAA,GAAAA,EAAA,GAA0C,GAAIP,EAA9CO,EAAAhjF,OAAA,QAAA0qB,IAAAs4D,EAAA,GAAAA,EAAA,GAA2D,GACnEnvD,EAAW3yB,EAAKwyB,kBAAkB3Z,GAD1B,CAAAkpE,EAAA51E,KAAA,eAIVnM,EAAKkyB,eAAe,sBAAuBrZ,GAJjCkpE,EAAArlE,OAAA,SAKH,MALG,cAAAqlE,EAAA51E,KAAA,GAQC01E,EAAAlvD,EAAS6hB,SAAQ77B,GAAjBnL,MAAAq0E,EAAApnF,OAAAmgC,EAAA,EAAAngC,CAAgCye,IAAQ06C,YAAY2tB,GARrD,cAAAQ,EAAArlE,OAAA,SAAAqlE,EAAA7yE,MAAA,wBAAA6yE,EAAAz0E,SAAAs0E,EAAA9mF,SAvnMK,gBAAAknF,EAAAC,GAAA,OAAAN,EAAAn0E,MAAA1S,KAAA2S,YAAA,GAAA3S,KAioMnB4zC,aAjoMmB,eAAAwzC,EAAAznF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAioMJ,SAAAu2E,EAAO9pE,GAAP,IAAAuB,EAAAwoE,EAAA30E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAq2E,GAAA,cAAAA,EAAAn2E,KAAAm2E,EAAAl2E,MAAA,WACbyN,GAD4BA,EAAfwoE,EAAAtjF,OAAA,QAAA0qB,IAAA44D,EAAA,GAAAA,EAAA,GAAsB,OACpBpiF,EAAKjF,MAAM6e,OACZA,EAAK0C,IAFN,CAAA+lE,EAAAl2E,KAAA,eAAAk2E,EAAA3lE,OAAA,SAGJ,MAHI,cAAA2lE,EAAAl2E,KAAA,EAKC,IAAI4P,QAAJ,eAAAumE,EAAA7nF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAA22E,EAAOpmE,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAAw2E,GAAA,cAAAA,EAAAt2E,KAAAs2E,EAAAr2E,MAAA,OACxByN,EAAK0C,IAAI24B,sBAAsB58B,EAAQ,SAACkE,EAAKjQ,GACvCiQ,GACFH,EAAOG,GAETJ,EAAQ7P,KALc,wBAAAk2E,EAAAl1E,SAAAi1E,EAAAznF,SAAZ,gBAAA2nF,EAAAC,GAAA,OAAAJ,EAAA90E,MAAA1S,KAAA2S,YAAA,IALD,cAAA40E,EAAA3lE,OAAA,SAAA2lE,EAAAnzE,MAAA,wBAAAmzE,EAAA/0E,SAAA60E,EAAArnF,SAjoMI,gBAAA6nF,GAAA,OAAAT,EAAA10E,MAAA1S,KAAA2S,YAAA,GAAA3S,KA+oMnB8nF,iBA/oMmB,eAAAC,EAAApoF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+oMA,SAAAk3E,EAAOx2E,EAAIy2E,EAASC,EAAY3nC,GAAhC,IAAAhN,EAAA40C,EAAA,OAAAn3D,EAAA7wB,EAAA+Q,KAAA,SAAAk3E,GAAA,cAAAA,EAAAh3E,KAAAg3E,EAAA/2E,MAAA,UAEbkiC,EAAYgN,GAAYA,EAAShN,UAAYgN,EAAShN,UAAY,KAFrD,CAAA60C,EAAA/2E,KAAA,eAAA+2E,EAAA/2E,KAAA,EAKI,IAAI4P,QAAJ,eAAAonE,EAAA1oF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAY,SAAAw3E,EAAOjnE,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAAq3E,GAAA,cAAAA,EAAAn3E,KAAAm3E,EAAAl3E,MAAA,OAC7BnM,EAAKjF,MAAM6e,KAAK0C,IAAI24B,sBAAsB3oC,EAAG3J,KAAM,SAAC4Z,EAAKjQ,GACnDiQ,GACFH,EAAOG,GAETJ,EAAQ7P,KALmB,wBAAA+2E,EAAA/1E,SAAA81E,EAAAtoF,SAAZ,gBAAAwoF,EAAAC,GAAA,OAAAJ,EAAA31E,MAAA1S,KAAA2S,YAAA,IALJ,OAKf4gC,EALe60C,EAAAh0E,KAAA,UAgBZm/B,EAhBY,CAAA60C,EAAA/2E,KAAA,eAAA+2E,EAAAxmE,OAAA,SAiBR,MAjBQ,WAoBXumE,EAAoB50C,EAAUtc,KAAK1lB,OAAO,SAACC,GAAS,OAAOA,EAAGwiC,OAAOxiC,EAAGwiC,OAAOhwC,OAAS,GAAGuJ,gBAAhC,4BAAA5G,OAA8EshF,MAExHjkF,OAtBN,CAAAokF,EAAA/2E,KAAA,gBAAA+2E,EAAAxmE,OAAA,SAuBR,MAvBQ,eAAAwmE,EAAAh3E,KAAA,GAAAg3E,EAAAxmE,OAAA,SA2BR,CACL2xB,EACAruC,EAAKjF,MAAM6e,KAAK0C,IAAIsmB,IAAIme,UAAUiiC,EAAYC,EAAkB,GAAGt9E,KAAMs9E,EAAkB,GAAGn0C,UA7BjF,eAAAo0C,EAAAh3E,KAAA,GAAAg3E,EAAA11D,GAAA01D,EAAA,UAAAA,EAAAxmE,OAAA,SAgCR,MAhCQ,yBAAAwmE,EAAA51E,SAAAw1E,EAAAhoF,KAAA,cA/oMA,gBAAA0oF,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAr1E,MAAA1S,KAAA2S,YAAA,GAAA3S,KAkrMnB8oF,gBAAkB,SAACC,GACjB,IAAMC,EAAmB9jF,EAAKwM,MAAMxM,EAAKuQ,gBAAgB,CAAC,UAAW,mBAAmB+N,IAAI,UAAUA,IAAI,OAC1G,OAAOte,EAAKwM,MAAMq3E,GAAQvlE,IAAIwlE,IAprMbhpF,KAsrMnB63D,eAtrMmBl4D,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAsrMF,SAAAm4E,IAAA,OAAAj4D,EAAA7wB,EAAA+Q,KAAA,SAAAg4E,GAAA,cAAAA,EAAA93E,KAAA83E,EAAA73E,MAAA,UACVnM,EAAKjF,MAAM6e,KADD,CAAAoqE,EAAA73E,KAAA,eAAA63E,EAAAtnE,OAAA,UAEN,GAFM,cAAAsnE,EAAA73E,KAAA,EAIFnM,EAAKjF,MAAM6e,KAAK0C,IAAIq2C,iBAJlB,cAAAqxB,EAAAtnE,OAAA,SAAAsnE,EAAA90E,MAAA,wBAAA80E,EAAA12E,SAAAy2E,EAAAjpF,SAtrMEA,KA4rMnB+nC,aA5rMmBpoC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA4rMJ,SAAAq4E,IAAA,IAAA5lE,EAAAqO,EAAA/R,EAAA2nB,EAAA4hD,EAAAxsD,EAAAysD,EAAA12E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAo4E,GAAA,cAAAA,EAAAl4E,KAAAk4E,EAAAj4E,MAAA,UAAOkS,EAAP8lE,EAAArlF,OAAA,QAAA0qB,IAAA26D,EAAA,GAAAA,EAAA,GAAmB,SAC1Bz3D,EADO,gBAAAjrB,OACyB4c,KAChC1D,EAAa3a,EAAK+tB,8BAA8BrB,IAFzC,CAAA03D,EAAAj4E,KAAA,eAAAi4E,EAAA1nE,OAAA,SAIJ/B,GAJI,cAAAypE,EAAAj4E,KAAA,EAOWnM,EAAKjF,MAAM6e,KAAK0C,IAAI+nE,SAAShmE,GAPxC,YAOPikB,EAPO8hD,EAAAl1E,MAAA,CAAAk1E,EAAAj4E,KAAA,gBAUL+3E,EAAkB,CACtBvhF,KAAK2/B,EAAU3/B,KACfxE,OAAOmkC,EAAUnkC,OACjBwR,UAAU2yB,EAAU3yB,WAEhB+nB,EAAuB,WAAhBrZ,EAA2Bre,EAAKuQ,gBAAgB,CAAC,QAAQ,QAAU,KAChFvQ,EAAKguB,8BAA8BtB,EAAew3D,EAAiBxsD,GAhBxD0sD,EAAA1nE,OAAA,SAiBJ4lB,GAjBI,eAAA8hD,EAAA1nE,OAAA,SAoBN,MApBM,yBAAA0nE,EAAA92E,SAAA22E,EAAAnpF,SA5rMIA,KAktMnB83D,sBAltMmB,eAAA0xB,EAAA7pF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAktMK,SAAA24E,EAAO1rE,EAAcF,GAArB,IAAAO,EAAAyZ,EAAAjG,EAAA/R,EAAA+c,EAAA8oB,EAAAgkC,EAAA/2E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAy4E,GAAA,cAAAA,EAAAv4E,KAAAu4E,EAAAt4E,MAAA,UAAiC+M,EAAjCsrE,EAAA1lF,OAAA,QAAA0qB,IAAAg7D,EAAA,GAAAA,EAAA,GAA0C,GAC3D3rE,EADiB,CAAA4rE,EAAAt4E,KAAA,eAAAs4E,EAAA/nE,OAAA,SAEb,MAFa,UAKhBiW,EAAW3yB,EAAKwyB,kBAAkB3Z,GALlB,CAAA4rE,EAAAt4E,KAAA,eAQpBnM,EAAKkyB,eAAe,sBAAuBrZ,GARvB4rE,EAAA/nE,OAAA,SASb,MATa,UAYhBgQ,EAZgB,yBAAAjrB,OAYyBoX,EAZzB,KAAApX,OAYyCkX,EAZzC,KAAAlX,OAYuDkJ,KAAKC,UAAUsO,MACtFyB,EAAa3a,EAAK+tB,8BAA8BrB,IAbhC,CAAA+3D,EAAAt4E,KAAA,gBAAAs4E,EAAA/nE,OAAA,SAeb/B,GAfa,eAmBlB+c,EAAM13B,EAAKuQ,gBAAgB,CAAC,QAAQ,QACpC2I,EAAOq5C,SAA8B,WAAnBr5C,EAAOq5C,UAC3B76B,EAAM,MArBc+sD,EAAAt4E,KAAA,GAwBDwmB,EAAS+xD,cAAc/rE,EAAYO,GAxBlC,eAwBhBsnC,EAxBgBikC,EAAAv1E,KAAAu1E,EAAA/nE,OAAA,SA0Bf1c,EAAKguB,8BAA8BtB,EAAe8zB,EAAQ9oB,IA1B3C,yBAAA+sD,EAAAn3E,SAAAi3E,EAAAzpF,SAltML,gBAAA6pF,EAAAC,GAAA,OAAAN,EAAA92E,MAAA1S,KAAA2S,YAAA,GAAA3S,KA+uMnB4nC,6BA/uMmB,eAAAmiD,EAAApqF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+uMY,SAAAk5E,EAAOjsE,EAAcF,GAArB,IAAA+e,EAAAxe,EAAAqoE,EAAAljE,EAAAqO,EAAA/R,EAAAszB,EAAA82C,EAAAt3E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAg5E,GAAA,cAAAA,EAAA94E,KAAA84E,EAAA74E,MAAA,UAAiCurB,EAAjCqtD,EAAAjmF,OAAA,QAAA0qB,IAAAu7D,EAAA,GAAAA,EAAA,GAAuC,IAAK7rE,EAA5C6rE,EAAAjmF,OAAA,QAAA0qB,IAAAu7D,EAAA,GAAAA,EAAA,GAAqD,GAAIxD,EAAzDwD,EAAAjmF,OAAA,QAAA0qB,IAAAu7D,EAAA,GAAAA,EAAA,GAAsE,GAAI1mE,EAA1E0mE,EAAAjmF,OAAA,QAAA0qB,IAAAu7D,EAAA,GAAAA,EAAA,GAAwF,SAC/Gr4D,EADuB,uBAAAjrB,OACgBoX,EADhB,KAAApX,OACgCkX,EADhC,KAAAlX,OAC8CkJ,KAAKC,UAAUsO,GAD7D,KAAAzX,OACwEkJ,KAAKC,UAAU22E,GADvF,KAAA9/E,OACsG4c,KAC7H1D,EAAa3a,EAAK+tB,8BAA8BrB,IAFzB,CAAAs4D,EAAA74E,KAAA,eAAA64E,EAAAtoE,OAAA,SAIpB/B,GAJoB,aAQT,WAAhB0D,IACFqZ,EAAM,MATqBstD,EAAA74E,KAAA,GAYRnM,EAAKosB,oBAAoBvT,EAAcF,EAAYO,EAAQqoE,EAAYljE,GAZ/D,eAYvB4vB,EAZuB+2C,EAAA91E,KAAA81E,EAAAtoE,OAAA,SActB1c,EAAKguB,8BAA8BtB,EAAeuhB,EAAQvW,IAdpC,yBAAAstD,EAAA13E,SAAAw3E,EAAAhqF,SA/uMZ,gBAAAmqF,EAAAC,GAAA,OAAAL,EAAAr3E,MAAA1S,KAAA2S,YAAA,GAAA3S,KAgwMnB6rC,0BAhwMmB,eAAAw+C,EAAA1qF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAgwMS,SAAAw5E,EAAOvsE,EAAcF,GAArB,IAAAO,EAAAqoE,EAAAljE,EAAAqZ,EAAAhL,EAAA/R,EAAAszB,EAAAo3C,EAAA53E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAs5E,GAAA,cAAAA,EAAAp5E,KAAAo5E,EAAAn5E,MAAA,UAAiC+M,EAAjCmsE,EAAAvmF,OAAA,QAAA0qB,IAAA67D,EAAA,GAAAA,EAAA,GAA0C,GAAI9D,EAA9C8D,EAAAvmF,OAAA,QAAA0qB,IAAA67D,EAAA,GAAAA,EAAA,GAA2D,GAAIhnE,EAA/DgnE,EAAAvmF,OAAA,QAAA0qB,IAAA67D,EAAA,GAAAA,EAAA,GAA6E,SAAU3tD,EAAvF2tD,EAAAvmF,OAAA,QAAA0qB,IAAA67D,EAAA,GAAAA,EAAA,GAA6F,IACjH34D,EADoB,uBAAAjrB,OACmBoX,EADnB,KAAApX,OACmCkX,EADnC,KAAAlX,OACiDkJ,KAAKC,UAAUsO,GADhE,KAAAzX,OAC2EkJ,KAAKC,UAAU22E,GAD1F,KAAA9/E,OACyG4c,KAC7H1D,EAAa3a,EAAK+tB,8BAA8BrB,IAF5B,CAAA44D,EAAAn5E,KAAA,eAAAm5E,EAAA5oE,OAAA,SAIjB/B,GAJiB,aAQN,WAAhB0D,IACFqZ,EAAM,MATkB4tD,EAAAn5E,KAAA,GAcLnM,EAAKosB,oBAAoBvT,EAAcF,EAAYO,EAAQqoE,EAAYljE,GAdlE,eAcpB4vB,EAdoBq3C,EAAAp2E,KAAAo2E,EAAA5oE,OAAA,SAgBnB1c,EAAKguB,8BAA8BtB,EAAeuhB,EAAQvW,IAhBvC,yBAAA4tD,EAAAh4E,SAAA83E,EAAAtqF,SAhwMT,gBAAAyqF,EAAAC,GAAA,OAAAL,EAAA33E,MAAA1S,KAAA2S,YAAA,GAAA3S,KAmxMnB2qF,mBAnxMmB,eAAAC,EAAAjrF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAmxME,SAAA+5E,EAAO9sE,EAAcF,GAArB,IAAAO,EAAAqoE,EAAAljE,EAAAqZ,EAAAkuD,EAAAn4E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA65E,GAAA,cAAAA,EAAA35E,KAAA25E,EAAA15E,MAAA,cAAiC+M,EAAjC0sE,EAAA9mF,OAAA,QAAA0qB,IAAAo8D,EAAA,GAAAA,EAAA,GAA0C,GAAIrE,EAA9CqE,EAAA9mF,OAAA,QAAA0qB,IAAAo8D,EAAA,GAAAA,EAAA,GAA2D,GAAIvnE,EAA/DunE,EAAA9mF,OAAA,QAAA0qB,IAAAo8D,EAAA,GAAAA,EAAA,GAA6E,SAAUluD,EAAvFkuD,EAAA9mF,OAAA,QAAA0qB,IAAAo8D,EAAA,GAAAA,EAAA,GAA6F,IAA7FC,EAAA15E,KAAA,EACNnM,EAAK2mC,0BAA0B9tB,EAAcF,EAAYO,EAAQqoE,EAAYljE,EAAaqZ,GADpF,cAAAmuD,EAAAnpE,OAAA,SAAAmpE,EAAA32E,MAAA,wBAAA22E,EAAAv4E,SAAAq4E,EAAA7qF,SAnxMF,gBAAAgrF,EAAAC,GAAA,OAAAL,EAAAl4E,MAAA1S,KAAA2S,YAAA,GAAA3S,KAuxMnBsxB,oBAvxMmB,eAAA45D,EAAAvrF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAuxMG,SAAAq6E,EAAOptE,EAAcF,GAArB,IAAAO,EAAAqoE,EAAAljE,EAAAsU,EAAAuzD,EAAAjgF,EAAAkgF,EAAA14E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAo6E,GAAA,cAAAA,EAAAl6E,KAAAk6E,EAAAj6E,MAAA,UAAiC+M,EAAjCitE,EAAArnF,OAAA,QAAA0qB,IAAA28D,EAAA,GAAAA,EAAA,GAA0C,GAAI5E,EAA9C4E,EAAArnF,OAAA,QAAA0qB,IAAA28D,EAAA,GAAAA,EAAA,GAA2D,GAAI9nE,EAA/D8nE,EAAArnF,OAAA,QAAA0qB,IAAA28D,EAAA,GAAAA,EAAA,GAA6E,SAA7EA,EAAArnF,OAAA,QAAA0qB,IAAA28D,EAAA,GAAAA,EAAA,GAA+F,EAE9GttE,EAFe,CAAAutE,EAAAj6E,KAAA,eAAAi6E,EAAA1pE,OAAA,SAGX,MAHW,UAMdiW,EAAW3yB,EAAKwyB,kBAAkB3Z,GANpB,CAAAutE,EAAAj6E,KAAA,gBASlBnM,EAAK+d,UAAU,sBAAuBlF,GATpButE,EAAA1pE,OAAA,SAUX,MAVW,WAafiW,EAAS6hB,QAAQ77B,GAbF,CAAAytE,EAAAj6E,KAAA,gBAclBnM,EAAK+d,UAAU,oBAAqBpF,GAdlBytE,EAAA1pE,OAAA,SAeX,MAfW,eAkBpB2B,EAA8B,WAAhBA,GAA4BA,IAAgBjgB,MAAMigB,GAAexR,SAASwR,GAAeA,EAlBnF+nE,EAAAl6E,KAAA,GAAAk6E,EAAAj6E,KAAA,IAqBE+5E,EAAAvzD,EAAS6hB,SAAQ77B,GAAjBnL,MAAA04E,EAAAzrF,OAAAmgC,EAAA,EAAAngC,CAAgCye,IAAQw7B,KAAK6sC,EAAYljE,GAAaumC,MAAM,SAAArsC,GAC9FvY,EAAK+d,UAAL,GAAAtc,OAAkBoX,EAAlB,qBAAApX,OAAkDkX,EAAlD,YAAwEJ,KAtBxD,eAqBZtS,EArBYmgF,EAAAl3E,KAAAk3E,EAAA1pE,OAAA,SA8BXzW,GA9BW,QAAAmgF,EAAAl6E,KAAA,GAAAk6E,EAAA54D,GAAA44D,EAAA,UAiClBpmF,EAAK+d,UAAU,4BAAfqoE,EAAA54D,IAjCkB,yBAAA44D,EAAA94E,SAAA24E,EAAAnrF,KAAA,cAvxMH,gBAAAurF,EAAAC,GAAA,OAAAN,EAAAx4E,MAAA1S,KAAA2S,YAAA,GAAA3S,KA+zMnB0Q,aA/zMmB,eAAA+6E,EAAA9rF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+zMJ,SAAA46E,EAAO9/B,EAAO7jD,GAAd,IAAA4jF,EAAA97D,EAAA9pB,EAAA6lF,EAAAj5E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA26E,GAAA,cAAAA,EAAAz6E,KAAAy6E,EAAAx6E,MAAA,UAAwBs6E,IAAxBC,EAAA5nF,OAAA,QAAA0qB,IAAAk9D,EAAA,KAAAA,EAAA,GACT/7D,EAAS,IACT87D,EAFS,CAAAE,EAAAx6E,KAAA,eAAAw6E,EAAAx6E,KAAA,EAGI4P,QAAQqD,IAAIsnC,EAAM9lD,IAAI,SAACiyB,EAAGhyB,GACvC,OAAOgC,EAASgwB,EAAGhyB,EAAO6lD,MAJjB,OAGX/7B,EAHWg8D,EAAAz3E,KAAAy3E,EAAAx6E,KAAA,gBAOFtL,EAAQ,EAPN,YAOSA,EAAQ6lD,EAAM5nD,QAPvB,CAAA6nF,EAAAx6E,KAAA,gBAAAw6E,EAAAn5D,GAQT7C,EARSg8D,EAAAx6E,KAAA,GAQStJ,EAAS6jD,EAAM7lD,GAAQA,EAAO6lD,GARvC,QAAAigC,EAAA/yC,GAAA+yC,EAAAz3E,KAAAy3E,EAAAn5D,GAQF9kB,KAREgsC,KAAAiyC,EAAAn5D,GAAAm5D,EAAA/yC,IAAA,QAO+B/yC,IAP/B8lF,EAAAx6E,KAAA,uBAAAw6E,EAAAjqE,OAAA,SAWNiO,GAXM,yBAAAg8D,EAAAr5E,SAAAk5E,EAAA1rF,SA/zMI,gBAAA8rF,EAAAC,GAAA,OAAAN,EAAA/4E,MAAA1S,KAAA2S,YAAA,GAAA3S,KA40MnBmpC,QAAU,SAACC,GACT,OAAOlkC,EAAKwM,MAAOxM,EAAKwM,MAAM,GAAGQ,KAAKhN,EAAKwM,MAAM03B,GAAK5lB,IAAI,MAAO++C,IAAI,KAAKpwD,MAAM,GAAGxE,QAAQ,MA70M1E3N,KA+0MnBgsF,iBA/0MmB,eAAAC,EAAAtsF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+0MA,SAAAo7E,EAAO/hF,GAAP,IAAAgiF,EAAA,OAAAn7D,EAAA7wB,EAAA+Q,KAAA,SAAAk7E,GAAA,cAAAA,EAAAh7E,KAAAg7E,EAAA/6E,MAAA,cAAA+6E,EAAA/6E,KAAA,EACSnM,EAAKwgF,mBAAmBv7E,EAAYsH,MAAOtH,EAAYmoB,KAAKhlB,SADrE,cACb6+E,EADaC,EAAAh4E,QAGf+3E,EAAgBjnF,EAAKgQ,iBAAiBi3E,EAAehiF,EAAYxG,WAHlDyoF,EAAAxqE,OAAA,SAKVuqE,GALU,wBAAAC,EAAA55E,SAAA05E,EAAAlsF,SA/0MA,gBAAAqsF,GAAA,OAAAJ,EAAAv5E,MAAA1S,KAAA2S,YAAA,GAAA3S,KAs1MnBo3E,aAt1MmB,eAAAkV,EAAA3sF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAs1MJ,SAAAy7E,EAAOpiF,GAAP,IAAAyiE,EAAAh7C,EAAA/R,EAAAmS,EAAAE,EAAAs6D,EAAA75E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAu7E,GAAA,cAAAA,EAAAr7E,KAAAq7E,EAAAp7E,MAAA,UAAoBu7D,IAApB4f,EAAAxoF,OAAA,QAAA0qB,IAAA89D,EAAA,KAAAA,EAAA,GAEP56D,EAFO,aAAAjrB,OAEsBwD,EAAYmoB,KAAKhlB,QAFvC,KAAA3G,OAEkDimE,KACzD/sD,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAJ7B,CAAAmpF,EAAAp7E,KAAA,eAAAo7E,EAAA7qE,OAAA,SAKJ1c,EAAKwM,MAAMmO,IALP,cAAA4sE,EAAAp7E,KAAA,EAQiBnM,EAAKgF,mBAAmBC,GAAa,EAAOyiE,GAR7D,YAQP56C,EAROy6D,EAAAr4E,QASU4d,EAAgBa,0BAT1B,CAAA45D,EAAAp7E,KAAA,YAUL6gB,EAAYF,EAAgBa,0BAC7B3tB,EAAKwM,MAAMwgB,GAAW5uB,QAXhB,CAAAmpF,EAAAp7E,KAAA,gBAAAo7E,EAAA7qE,OAAA,SAYF1c,EAAKguB,8BAA8BtB,EAAeM,IAZhD,eAAAu6D,EAAA7qE,OAAA,SAgBN,MAhBM,yBAAA6qE,EAAAj6E,SAAA+5E,EAAAvsF,SAt1MI,gBAAA0sF,GAAA,OAAAJ,EAAA55E,MAAA1S,KAAA2S,YAAA,GAAA3S,KAw2MnB2sF,mBAx2MmB,eAAAC,EAAAjtF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAw2ME,SAAA+7E,EAAO1iF,GAAP,IAAAqnD,EAAA9Y,EAAAo0C,EAAA,OAAA97D,EAAA7wB,EAAA+Q,KAAA,SAAA67E,GAAA,cAAAA,EAAA37E,KAAA27E,EAAA17E,MAAA,UACdlH,EAAYmoB,KADE,CAAAy6D,EAAA17E,KAAA,eAAA07E,EAAAnrE,OAAA,UAEV,GAFU,cAAAmrE,EAAA17E,KAAA,EAKAnM,EAAK8gF,QAAQ77E,EAAYmoB,KAAK7gB,OAL9B,UAKb+/C,EALau7B,EAAA34E,OAMbskC,EAAqB8Y,EAAOA,EAAK40B,UAAY,MANhC,CAAA2G,EAAA17E,KAAA,gBAAA07E,EAAA17E,KAAA,EAQcnM,EAAKwL,aAAagoC,EAAlB,eAAAs0C,EAAArtF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAsC,SAAAm8E,EAAO5/E,EAActH,GAArB,OAAAirB,EAAA7wB,EAAA+Q,KAAA,SAAAg8E,GAAA,cAAAA,EAAA97E,KAAA87E,EAAA77E,MAAA,cAAA67E,EAAA77E,KAAA,EACtDnM,EAAKosB,oBAAoBnnB,EAAYmoB,KAAK7gB,MAAO,kBAAmB,CAAC1L,IADf,cAAAmnF,EAAAtrE,OAAA,SAAAsrE,EAAA94E,MAAA,wBAAA84E,EAAA16E,SAAAy6E,EAAAjtF,SAAtC,gBAAAmtF,EAAAC,GAAA,OAAAJ,EAAAt6E,MAAA1S,KAAA2S,YAAA,IARd,cAQXm6E,EARWC,EAAA34E,KAAA24E,EAAAnrE,OAAA,SAWV82B,EAAmBzT,OAAO,SAACkxB,EAAiB9oD,EAActH,GAE/D,OADAowD,EAAgB9oD,EAAaE,eAAiBu/E,EAAiB/mF,GACxDowD,GACN,KAdc,eAAA42B,EAAAnrE,OAAA,SAiBZ,IAjBY,yBAAAmrE,EAAAv6E,SAAAq6E,EAAA7sF,SAx2MF,gBAAAqtF,GAAA,OAAAT,EAAAl6E,MAAA1S,KAAA2S,YAAA,GAAA3S,KA23MnBkK,mBA33MmB,eAAAojF,EAAA3tF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA23ME,SAAAy8E,EAAOpjF,GAAP,IAAAqjF,EAAA5gB,EAAAh7C,EAAA/R,EAAAmS,EAAAjoB,EAAAC,EAAAyjF,EAAAC,EAAAvB,EAAA75E,EAAA6jD,EAAA5gD,EAAA64D,EAAAuf,EAAA7jF,EAAA8jF,EAAAj7E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA28E,GAAA,cAAAA,EAAAz8E,KAAAy8E,EAAAx8E,MAAA,UAAoBm8E,EAApBI,EAAA5pF,OAAA,QAAA0qB,IAAAk/D,EAAA,IAAAA,EAAA,GAA2ChhB,IAA3CghB,EAAA5pF,OAAA,QAAA0qB,IAAAk/D,EAAA,KAAAA,EAAA,GAEdzjF,EAAYmoB,KAFE,CAAAu7D,EAAAx8E,KAAA,eAAAw8E,EAAAjsE,OAAA,UAGV,GAHU,UAObgQ,EAPa,mBAAAjrB,OAOsBwD,EAAYmoB,KAAKhlB,QAPvC,KAAA3G,OAOkDimE,GAElD,QADb/sD,EAAa3a,EAAK0tC,cAAchhB,IARnB,CAAAi8D,EAAAx8E,KAAA,eAAAw8E,EAAAjsE,OAAA,SAUV/B,GAVU,cAabmS,EAAkB,CACtBshC,OAAQ,KACR64B,cAAe,KACfriF,gBAAiB,KACjBC,qBAAsB,KACtBC,yBAA0B,KAC1B8jF,yBAA0B,KAC1Bj7D,0BAA2B,KAC3Bk7D,mCAAoC,MAGhChkF,EAAuB,GACvBC,EAA2B,GAzBd6jF,EAAAx8E,KAAA,GAkCT4P,QAAQqD,IAAI,CACpBpf,EAAK8mF,iBAAiB7hF,GACtBjF,EAAKo8B,kBAAkBn3B,GACvBjF,EAAKynF,mBAAmBxiF,GACxBjF,EAAK8oF,uBAAuB7jF,GAAa,GACzCjF,EAAKyzE,mBAAmBxuE,EAAYmoB,KAAK7gB,OACzCm7D,EAAe1nE,EAAK+oF,qBAAqB9jF,EAAYmoB,KAAKhlB,SAAW,OAxCpD,eAAAmgF,EAAAI,EAAAz5E,KAAAs5E,EAAA/tF,OAAA6yB,EAAA,EAAA7yB,CAAA8tF,EAAA,GA4BjBtB,EA5BiBuB,EAAA,GA6BjBp7E,EA7BiBo7E,EAAA,GA8BjBv3B,EA9BiBu3B,EAAA,GA+BjBn4E,EA/BiBm4E,EAAA,GAgCjBtf,EAhCiBsf,EAAA,GAiCjBC,EAjCiBD,EAAA,GA2Cb5jF,EAAkB5E,EAAKgQ,iBAAiBk5D,EAAa,IAAI1gE,MAAM4E,GAAYH,MAAMg6E,GAEnFh2B,GACFx2D,OAAOoE,KAAKoyD,GAAiBlyD,QAAQ,SAACoJ,GACpC,IAAMH,EAAe/C,EAAY8C,UAAUwS,KAAK,SAAAle,GAAC,OAAIA,EAAE+L,QAAQC,gBAAkBF,EAAaE,gBAC9F,GAAIL,GAAgBA,EAAamlB,QAAS,CACxC,IAAM67D,EAAyBhpF,EAAKwM,MAAMykD,EAAgB9oD,IAAemW,IAAI,KACvE2qE,EAAqBrkF,EAAgB4D,MAAMwgF,GACjDnkF,EAAqBsD,EAAaE,eAAiB4gF,EACnDnkF,EAAyBqD,EAAaE,eAAiB2gF,KAK7Dl8D,EAAgBm6D,cAAgBjnF,EAAKwM,MAAM,GAC3CsgB,EAAgBa,0BAA4B/oB,EAExCqiF,IACFn6D,EAAgBm6D,cAAgBA,EAChCn6D,EAAgBa,0BAA4Bb,EAAgBa,0BAA0B3gB,KAAKi6E,IAG7Fn6D,EAAgBloB,gBAAkBA,EAClCkoB,EAAgBjoB,qBAAuBA,EACvCioB,EAAgBhoB,yBAA2BA,EAGvC2jF,GAAqBA,EAAkB7hD,QACrCv2B,IACFo4E,EAAkB7hD,MAAQ6hD,EAAkB7hD,MAAMtoB,IAAIjO,IAIxDyc,EAAgBa,0BAA4Bb,EAAgBa,0BAA0B3gB,KAAKy7E,EAAkB7hD,QAG/G9Z,EAAgB87D,yBAA2B97D,EAAgBloB,gBAC3DkoB,EAAgB+7D,mCAAqC/7D,EAAgBa,0BAEjEtd,IACFyc,EAAgB87D,yBAA2B97D,EAAgB87D,yBAAyBpgF,MAAM6H,GAC1Fyc,EAAgB+7D,mCAAqC/7D,EAAgB+7D,mCAAmCrgF,MAAM6H,IAG5Gi4E,IACFx7D,EAAgBshC,OAASpuD,EAAK4vB,UAAU04D,EAAezjF,EAAsBD,IAxF5D+jF,EAAAjsE,OAAA,SA+FZ1c,EAAK4a,cAAc8R,EAAeI,IA/FtB,yBAAA67D,EAAAr7E,SAAA+6E,EAAAvtF,SA33MF,gBAAAouF,GAAA,OAAAd,EAAA56E,MAAA1S,KAAA2S,YAAA,GAAA3S,KA49MnBquF,2BA59MmB,eAAAC,EAAA3uF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA49MU,SAAAy9E,EAAOxwE,GAAP,IAAAywE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxgB,EAAAygB,EAAAC,EAAA78D,EAAA88D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAt+D,EAAA7wB,EAAA+Q,KAAA,SAAAq+E,GAAA,cAAAA,EAAAn+E,KAAAm+E,EAAAl+E,MAAA,cAAAk+E,EAAAl+E,KAAA,EAMjB4P,QAAQqD,IAAI,CACpBpf,EAAK2mC,0BAA0B9tB,EAAc,UAC7C7Y,EAAK2mC,0BAA0B9tB,EAAc,UAC7C7Y,EAAK2mC,0BAA0B9tB,EAAc,eAC7C7Y,EAAKwjE,oBAAoB3qD,KAVA,UAAAywE,EAAAe,EAAAn7E,KAAAq6E,EAAA9uF,OAAA6yB,EAAA,EAAA7yB,CAAA6uF,EAAA,GAEzBE,EAFyBD,EAAA,GAGzBE,EAHyBF,EAAA,GAIzBG,EAJyBH,EAAA,GAKzBrgB,EALyBqgB,EAAA,KAavBC,GAAkBC,GAAkBC,GAAgBxgB,GAb7B,CAAAmhB,EAAAl+E,KAAA,gBAcnBw9E,EAAgB,CACpBvhF,QAASohF,GAELI,EAAgB,CACpBxhF,QAASqhF,GAEL18D,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UArBhBqmD,EAAAl+E,KAAA,GA2Bf4P,QAAQqD,IAAI,CACpBpf,EAAKsqF,2BAA2Bv9D,EAAgB48D,GAChD3pF,EAAKsqF,2BAA2Bv9D,EAAgB68D,KA7BzB,WAAAC,EAAAQ,EAAAn7E,KAAA46E,EAAArvF,OAAA6yB,EAAA,EAAA7yB,CAAAovF,EAAA,GAyBvBE,EAzBuBD,EAAA,GA0BvBE,EA1BuBF,EAAA,IAgCrBC,IAAgBC,EAhCK,CAAAK,EAAAl+E,KAAA,gBAoCjB89E,EAAcF,EAAavhF,MAAMxI,EAAKgQ,iBAAiB05E,EAAa,GAAI,KACxEQ,EAAcF,EAAaxhF,MAAMxI,EAAKgQ,iBAAiB05E,EAAa,GAAI,KAExES,EAAgBF,EAAYj9E,KAAKk9E,GACjCE,EAAiBD,EAAc7rE,IAAIte,EAAKgQ,iBAAiBk5D,EAAa,KAxCrDmhB,EAAA3tE,OAAA,SA4ChB0tE,GA5CgB,eAAAC,EAAA3tE,OAAA,SAgDpB,MAhDoB,yBAAA2tE,EAAA/8E,SAAA+7E,EAAAvuF,SA59MV,gBAAAyvF,GAAA,OAAAnB,EAAA57E,MAAA1S,KAAA2S,YAAA,GAAA3S,KA8gNnBwvF,2BA9gNmB,eAAAE,EAAA/vF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA8gNU,SAAA6+E,EAAOC,EAAiBC,GAAxB,IAAAj+D,EAAA/R,EAAAiwE,EAAAC,EAAAlqF,EAAAk1D,EAAA33B,EAAA,OAAApS,EAAA7wB,EAAA+Q,KAAA,SAAA8+E,GAAA,cAAAA,EAAA5+E,KAAA4+E,EAAA3+E,MAAA,UAGrBugB,EAHqB,2BAAAjrB,OAGsBipF,EAAgBtiF,QAHtC,KAAA3G,OAGiDkpF,EAAgBviF,WACtFuS,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QALf,CAAA0sF,EAAA3+E,KAAA,eAAA2+E,EAAApuE,OAAA,SAMlB1c,EAAKwM,MAAMmO,IANO,cAAAmwE,EAAA5+E,KAAA,EAUnB0+E,EAAW5qF,EAAKwyB,kBAAkB,QAAQwR,SAC1C6mD,EAAM7qF,EAAKovD,uBAAuB,KAElCzuD,EAAO,IACR+H,KAAKgiF,EAAgBtiF,SAGtBwiF,EAASviF,gBAAkBqiF,EAAgBtiF,QAAQC,eAAiBuiF,EAASviF,gBAAkBsiF,EAAgBviF,QAAQC,eACzH1H,EAAK+H,KAAKkiF,GAEZjqF,EAAK+H,KAAKiiF,EAAgBviF,SApBD0iF,EAAA3+E,KAAA,GAsBPnM,EAAKosB,oBAAoB,kBAAmB,eAAgB,CAACy+D,EAAIpiF,UAAW9H,IAtBrE,aAsBnBk1D,EAtBmBi1B,EAAA57E,MAAA,CAAA47E,EAAA3+E,KAAA,gBA2BjB+xB,EAAQl+B,EAAKwM,MAAMqpD,EAAI,IAAIv3C,IAAIusE,GA3BdC,EAAApuE,OAAA,SA4BhB1c,EAAKguB,8BAA8BtB,EAAewR,IA5BlC,eAAA4sD,EAAApuE,OAAA,SA8BlB,MA9BkB,eAAAouE,EAAA5+E,KAAA,GAAA4+E,EAAAt9D,GAAAs9D,EAAA,SAAAA,EAAApuE,OAAA,SAgClB,MAhCkB,yBAAAouE,EAAAx9E,SAAAm9E,EAAA3vF,KAAA,aA9gNV,gBAAAiwF,EAAAC,GAAA,OAAAR,EAAAh9E,MAAA1S,KAAA2S,YAAA,GAAA3S,KAijNnByyB,yBAjjNmB,eAAA09D,EAAAxwF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAijNQ,SAAAs/E,EAAOR,EAAiBC,GAAxB,IAAAtsE,EAAA8sE,EAAAz+D,EAAA/R,EAAAiwE,EAAAC,EAAAlqF,EAAAyqF,EAAAltD,EAAAxG,EAAA2zD,EAAA59E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAs/E,GAAA,cAAAA,EAAAp/E,KAAAo/E,EAAAn/E,MAAA,UAAyCkS,EAAzCgtE,EAAAvsF,OAAA,QAAA0qB,IAAA6hE,EAAA,GAAAA,EAAA,GAAqD,SAAUF,IAA/DE,EAAAvsF,OAAA,QAAA0qB,IAAA6hE,EAAA,KAAAA,EAAA,GAErBV,EAAgBY,mBAClBZ,EAAkBlwF,OAAOC,OAAO,GAAIiwF,IACpBviF,QAAUuiF,EAAgBY,iBAItC7+D,EARmB,yBAAAjrB,OAQsBipF,EAAgBtiF,QARtC,KAAA3G,OAQiDkpF,EAAgBviF,QARjE,KAAA3G,OAQ4E4c,KAC/F1D,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAVjB,CAAAktF,EAAAn/E,KAAA,eAAAm/E,EAAA5uE,OAAA,SAWhB1c,EAAKwM,MAAMmO,IAXK,cAAA2wE,EAAAp/E,KAAA,EAejB0+E,EAAW5qF,EAAKwyB,kBAAkB,QAAQwR,SAC1C6mD,EAAM7qF,EAAKovD,uBAAuB,KAElCzuD,EAAO,IACR+H,KAAKgiF,EAAgBtiF,SAEtB+iF,GAAWP,EAASviF,gBAAkBqiF,EAAgBtiF,QAAQC,eAAiBuiF,EAASviF,gBAAkBsiF,EAAgBviF,QAAQC,eACpI1H,EAAK+H,KAAKkiF,GAEZjqF,EAAK+H,KAAKiiF,EAAgBviF,SAxBHkjF,EAAAn/E,KAAA,GA0BFnM,EAAKosB,oBAAoB,gBAAiB,eAAgB,CAACy+D,EAAIpiF,UAAW9H,GAAO,GAAI0d,GA1BnF,aA0BjB+sE,EA1BiBE,EAAAp8E,MAAA,CAAAo8E,EAAAn/E,KAAA,gBA6Bf+xB,EAAQl+B,EAAKwM,MAAM4+E,EAAO,IAAI9sE,IAAIusE,GAClCnzD,EAAsB,WAAhBrZ,EAA2Bre,EAAKuQ,gBAAgB,CAAC,QAAQ,QAAU,KA9B1D+6E,EAAA5uE,OAAA,SA+Bd1c,EAAKguB,8BAA8BtB,EAAewR,EAAOxG,IA/B3C,eAAA4zD,EAAA5uE,OAAA,SAiChB,MAjCgB,eAAA4uE,EAAAp/E,KAAA,GAAAo/E,EAAA99D,GAAA89D,EAAA,SAAAA,EAAA5uE,OAAA,SAmChB,MAnCgB,yBAAA4uE,EAAAh+E,SAAA49E,EAAApwF,KAAA,aAjjNR,gBAAA0wF,EAAAC,GAAA,OAAAR,EAAAz9E,MAAA1S,KAAA2S,YAAA,GAAA3S,KA6mNnB4wF,wBA7mNmB,eAAAC,EAAAlxF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6mNO,SAAAggF,EAAOxgF,GAAP,IAAAP,EAAA8yB,EAAAkuD,EAAAC,EAAAC,EAAAt+E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAggF,GAAA,cAAAA,EAAA9/E,KAAA8/E,EAAA7/E,MAAA,UAAgBtB,EAAhBkhF,EAAAjtF,OAAA,QAAA0qB,IAAAuiE,EAAA,GAAAA,EAAA,GAAgC,GACxD3gF,EAAUA,GAAoBpL,EAAKjF,MAAMqQ,QAEpCP,GAAkBA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAKmB,EAAKjF,MAAMmQ,kBAGpCE,GAAYP,GAAkBA,EAAc/L,OAPzB,CAAAktF,EAAA7/E,KAAA,eAAA6/E,EAAAtvE,OAAA,SAQf,IARe,cAAAsvE,EAAA7/E,KAAA,EAWDnM,EAAK+9B,YAAY3yB,EAAS,EAAG,SAAUP,GAXtC,OAWlB8yB,EAXkBquD,EAAA98E,KAalB28E,EAAqB,GACvBC,EAAuB9rF,EAAKwM,MAAM,GAItCmxB,EAAS5+B,QAAQ,SAAAuN,GAEf,IAAM0pC,EAAY1pC,EAAG0pC,UACf3oC,EAAarN,EAAKwM,MAAMF,EAAGe,YAMjC,OAJKw+E,EAAmB71C,KACtB61C,EAAmB71C,GAAah2C,EAAKwM,MAAM,IAGrCF,EAAGG,QACT,IAAK,UACL,IAAK,aACHo/E,EAAmB71C,GAAa61C,EAAmB71C,GAAWhpC,KAAKK,GACnE,MACF,IAAK,WACL,IAAK,cACCA,EAAW+C,GAAGy7E,EAAmB71C,MACnC81C,EAAuBA,EAAqB9+E,KAAKK,EAAWJ,MAAM4+E,EAAmB71C,MAEvF61C,EAAmB71C,GAAa61C,EAAmB71C,GAAW/oC,MAAMI,GAChEw+E,EAAmB71C,GAAW9oC,GAAG,KACnC2+E,EAAmB71C,GAAah2C,EAAKwM,MAAM,IAU7Cs/E,EAAqB17E,GAAG,IAC1B3V,OAAOoE,KAAKgtF,GAAoB9sF,QAAQ,SAAAwN,GACtC,IAAMqtB,EAAeiyD,EAAmBt/E,GACpCqtB,GAAgBA,EAAaxpB,GAAG,KAC9BwpB,EAAaxpB,GAAG07E,GAClBD,EAAmBt/E,GAASs/E,EAAmBt/E,GAAOU,MAAM6+E,IAE5DA,EAAuBA,EAAqB7+E,MAAM4+E,EAAmBt/E,IACrEs/E,EAAmBt/E,GAAS,QAzDd,yBAAAy/E,EAAA1+E,SAAAs+E,EAAA9wF,SA7mNP,gBAAAmxF,GAAA,OAAAN,EAAAn+E,MAAA1S,KAAA2S,YAAA,GAAA3S,KA+qNnBoxF,2BA/qNmB,eAAAC,EAAA1xF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+qNU,SAAAwgF,EAAOC,EAASC,GAAhB,IAAAv0C,EAAAw0C,EAAA,OAAAzgE,EAAA7wB,EAAA+Q,KAAA,SAAAwgF,GAAA,cAAAA,EAAAtgF,KAAAsgF,EAAArgF,MAAA,cAAAqgF,EAAArgF,KAAA,EACKnM,EAAKysF,0BADV,YACrB10C,EADqBy0C,EAAAt9E,MAAA,CAAAs9E,EAAArgF,KAAA,eAAAqgF,EAAArgF,KAAA,EAGGnM,EAAKosB,oBAAoB2rB,EAAkB96C,KAAM,6BAA8B,CAACovF,EAASC,IAH5F,cAGnBC,EAHmBC,EAAAt9E,KAAAs9E,EAAA9vE,OAAA,SAKlB6vE,GALkB,cAAAC,EAAA9vE,OAAA,SAOpB,MAPoB,wBAAA8vE,EAAAl/E,SAAA8+E,EAAAtxF,SA/qNV,gBAAA4xF,EAAAC,GAAA,OAAAR,EAAA3+E,MAAA1S,KAAA2S,YAAA,GAAA3S,KAwrNnB6xE,aAxrNmBlyE,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAwrNJ,SAAAghF,IAAA,IAAAjsF,EAAA+rB,EAAA/R,EAAAkyE,EAAAh4D,EAAA85C,EAAAme,EAAAr/E,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA+gF,GAAA,cAAAA,EAAA7gF,KAAA6gF,EAAA5gF,MAAA,UAAOxL,EAAPmsF,EAAAhuF,OAAA,QAAA0qB,IAAAsjE,EAAA,GAAAA,EAAA,GAAY,KAGnBpgE,EAHO,gBAIP/R,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAL7B,CAAA2uF,EAAA5gF,KAAA,eAAA4gF,EAAArwE,OAAA,SAMJ1c,EAAKwM,MAAMmO,IANP,YASPkyE,EAAiB7sF,EAAKuQ,gBAAgB,CAAC,QAAS,WATzC,CAAAw8E,EAAA5gF,KAAA,gBAAA4gF,EAAA5gF,KAAA,EAWWnM,EAAKiyC,YAAY46C,EAAe55C,UAX3C,YAWLpe,EAXKk4D,EAAA79E,QAYI2lB,EAAQlvB,KAZZ,CAAAonF,EAAA5gF,KAAA,aAaLxL,EAbK,CAAAosF,EAAA5gF,KAAA,cAcHwiE,EAAW3uE,EAAKsrB,aAAa3qB,EAAMk0B,EAAQlvB,OAdxC,CAAAonF,EAAA5gF,KAAA,YAgBLwiE,EAAW3uE,EAAKwM,MAAMmiE,GAAUnmE,MAAM,KACjCxI,EAAKwM,MAAMmiE,GAAUvwE,QAjBrB,CAAA2uF,EAAA5gF,KAAA,gBAAA4gF,EAAArwE,OAAA,SAkBI1c,EAAKguB,8BAA8BtB,EAAeiiD,IAlBtD,QAAAoe,EAAA5gF,KAAA,wBAAA4gF,EAAArwE,OAAA,SAsBA1c,EAAKguB,8BAA8BtB,EAAemI,EAAQlvB,OAtB1D,eAAAonF,EAAArwE,OAAA,SA0BN,MA1BM,yBAAAqwE,EAAAz/E,SAAAs/E,EAAA9xF,SAxrNIA,KAotNnBi3E,YAptNmBt3E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAotNL,SAAAohF,IAAA,IAAAtgE,EAAA/R,EAAAkyE,EAAAh4D,EAAAl0B,EAAAguE,EAAA,OAAA7iD,EAAA7wB,EAAA+Q,KAAA,SAAAihF,GAAA,cAAAA,EAAA/gF,KAAA+gF,EAAA9gF,MAAA,UAGNugB,EAHM,gBAIN/R,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAL9B,CAAA6uF,EAAA9gF,KAAA,eAAA8gF,EAAAvwE,OAAA,SAMH1c,EAAKwM,MAAMmO,IANR,YASNkyE,EAAiB7sF,EAAKuQ,gBAAgB,CAAC,QAAS,WAT1C,CAAA08E,EAAA9gF,KAAA,gBAAA8gF,EAAA9gF,KAAA,EAWYnM,EAAKiyC,YAAY46C,EAAe55C,UAX5C,YAWJpe,EAXIo4D,EAAA/9E,QAYK2lB,EAAQlvB,KAZb,CAAAsnF,EAAA9gF,KAAA,YAaFxL,EAAOlG,OAAO2R,OAAOygF,EAAelsF,QACtCguE,EAAW3uE,EAAKsrB,aAAa3qB,EAAMk0B,EAAQlvB,OAdvC,CAAAsnF,EAAA9gF,KAAA,YAgBNwiE,EAAW3uE,EAAKwM,MAAMmiE,GAAUnmE,MAAM,KACjCxI,EAAKwM,MAAMmiE,GAAUvwE,QAjBpB,CAAA6uF,EAAA9gF,KAAA,gBAAA8gF,EAAAvwE,OAAA,SAkBG1c,EAAKguB,8BAA8BtB,EAAeiiD,IAlBrD,eAAAse,EAAAvwE,OAAA,SAuBL,MAvBK,yBAAAuwE,EAAA3/E,SAAA0/E,EAAAlyF,SAptNKA,KA6uNnBgjC,wBAA0B,WACxB,IAAK99B,EAAKjF,MAAM8zB,oBACd,OAAO,EAET,IAAMmP,EAAch+B,EAAKuQ,gBAAgB,CAAC,QAAS,oBAC7C28E,EAAiBltF,EAAKjF,MAAM8zB,oBAAX,KASvB,OARwBp0B,OAAOoE,KAAKquF,GAAgBntD,OAAO,SAAC70B,EAAiBqB,GAC3E,IAAMtH,EAAcioF,EAAe3gF,GAInC,OAHI9R,OAAOoE,KAAKm/B,GAAazO,SAAStqB,EAAYmoB,KAAK7gB,QAAUyxB,EAAY/4B,EAAYmoB,KAAK7gB,OAAO4gB,UACnGjiB,EAAgBqB,GAAStH,GAEpBiG,GACN,KAzvNcpQ,KA6vNnBqyF,oBA7vNmB1yF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6vNG,SAAAwhF,IAAA,IAAAr1C,EAAA15B,EAAAgvE,EAAAC,EAAAC,EAAAngF,EAAAogF,EAAAC,EAAAC,EAAA,OAAA5hE,EAAA7wB,EAAA+Q,KAAA,SAAA2hF,GAAA,cAAAA,EAAAzhF,KAAAyhF,EAAAxhF,MAAA,cAAAwhF,EAAAxhF,KAAA,EACYnM,EAAKysF,0BADjB,YACd10C,EADc41C,EAAAz+E,MAAA,CAAAy+E,EAAAxhF,KAAA,gBAAAwhF,EAAAxhF,KAAA,EAGQnM,EAAK2yD,iBAHb,YAGZt0C,EAHYsvE,EAAAz+E,MAAA,CAAAy+E,EAAAxhF,KAAA,gBAKVkhF,EAA0B,GALhBM,EAAAxhF,KAAA,GAMyB4P,QAAQqD,IAAI,CACnDpf,EAAKosB,oBAAoB2rB,EAAkB96C,KAAM,qBACjD+C,EAAK2mC,0BAA0BoR,EAAkB96C,KAAM,oBAAqB,GAAI,GAAIohB,EAAcgvE,KARpF,WAAAC,EAAAK,EAAAz+E,KAAAq+E,EAAA9yF,OAAA6yB,EAAA,EAAA7yB,CAAA6yF,EAAA,GAMXlgF,EANWmgF,EAAA,GAMCC,EANDD,EAAA,IAWZngF,IAAcogF,EAXF,CAAAG,EAAAxhF,KAAA,gBAaRshF,EAAmBztF,EAAKwM,MAAMxM,EAAKuQ,gBAAgB,CAAC,UAAW,mBAAmB+N,IAAI+uE,GACtFK,EAAW1tF,EAAKwM,MAAMY,GAAYkR,IAAIkvE,GAAgBvgF,MAAM,GAAGzE,MAAMilF,GAd7DE,EAAAjxE,OAAA,SAeP1c,EAAKikC,QAAQypD,GAAUllF,MAAM,MAftB,eAAAmlF,EAAAjxE,OAAA,SAmBb,MAnBa,yBAAAixE,EAAArgF,SAAA8/E,EAAAtyF,SA7vNHA,KAkxNnB8yF,oBAlxNmBnzF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAkxNG,SAAAiiF,IAAA,IAAA/1C,EAAA,OAAAhsB,EAAA7wB,EAAA+Q,KAAA,SAAA8hF,GAAA,cAAAA,EAAA5hF,KAAA4hF,EAAA3hF,MAAA,cAAA2hF,EAAA3hF,KAAA,EACYnM,EAAK+tF,uBADjB,YACdj2C,EADcg2C,EAAA5+E,MAAA,CAAA4+E,EAAA3hF,KAAA,eAAA2hF,EAAA3hF,KAAA,EAGLnM,EAAKwjE,oBAAoB1rB,EAAkB76C,MAHtC,cAAA6wF,EAAApxE,OAAA,SAAAoxE,EAAA5+E,MAAA,cAAA4+E,EAAApxE,OAAA,SAKb,MALa,wBAAAoxE,EAAAxgF,SAAAugF,EAAA/yF,SAlxNHA,KAyxNnBg3E,qBAzxNmBr3E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAyxNI,SAAAoiF,IAAA,IAAA5iF,EAAA0yE,EAAAhmC,EAAAm2C,EAAAxgF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAkiF,GAAA,cAAAA,EAAAhiF,KAAAgiF,EAAA/hF,MAAA,cAAOf,EAAP6iF,EAAAnvF,OAAA,QAAA0qB,IAAAykE,EAAA,GAAAA,EAAA,GAAiB,KAAMnQ,IAAvBmQ,EAAAnvF,OAAA,QAAA0qB,IAAAykE,EAAA,KAAAA,EAAA,GAAAC,EAAA/hF,KAAA,EACWnM,EAAK+tF,uBADhB,YACfj2C,EADeo2C,EAAAh/E,MAAA,CAAAg/E,EAAA/hF,KAAA,gBAGnBf,EAAUA,GAAoBpL,EAAKjF,MAAMqQ,QAHtB8iF,EAAA/hF,KAAA,EAINnM,EAAK+rB,gBAAgB+rB,EAAkB76C,KAAMmO,EAAS0yE,GAJhD,cAAAoQ,EAAAxxE,OAAA,SAAAwxE,EAAAh/E,MAAA,eAAAg/E,EAAAxxE,OAAA,SAMd,MANc,yBAAAwxE,EAAA5gF,SAAA0gF,EAAAlzF,SAzxNJA,KAiyNnBkhD,mBAjyNmBvhD,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAiyNE,SAAAuiF,IAAA,IAAA9vE,EAAAy/D,EAAAzoD,EAAA4I,EAAA6Z,EAAAs2C,EAAA3gF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAqiF,GAAA,cAAAA,EAAAniF,KAAAmiF,EAAAliF,MAAA,cAAOkS,EAAP+vE,EAAAtvF,OAAA,QAAA0qB,IAAA4kE,EAAA,GAAAA,EAAA,GAAqB,SAAUtQ,IAA/BsQ,EAAAtvF,OAAA,QAAA0qB,IAAA4kE,EAAA,KAAAA,EAAA,GAAAC,EAAAliF,KAAA,EACanM,EAAKysF,0BADlB,cACbp3D,EADag5D,EAAAn/E,KAAAm/E,EAAAliF,KAAA,EAESnM,EAAK2mC,0BAA0BtR,EAAkBp4B,KAAM,oBAAqB,GAAI,GAAIohB,GAF7F,YAEf4f,EAFeowD,EAAAn/E,MAAA,CAAAm/E,EAAAliF,KAAA,gBAIjB8xB,EAAkBj+B,EAAKwM,MAAMyxB,GACzB6/C,IACIhmC,EAAoB93C,EAAKuQ,gBAAgB,CAAC,QAAS,iBACzD0tB,EAAkBj+B,EAAKgQ,iBAAiBiuB,EAAiB6Z,EAAkBr5C,WAP5D4vF,EAAA3xE,OAAA,SASVuhB,GATU,eAAAowD,EAAA3xE,OAAA,SAWZ,MAXY,yBAAA2xE,EAAA/gF,SAAA6gF,EAAArzF,SAjyNFA,KA8yNnBk3E,6BA9yNmB,eAAAsc,EAAA7zF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA8yNY,SAAA2iF,EAAOnjF,GAAP,IAAAojF,EAAAC,EAAAxwD,EAAAmwC,EAAA,OAAAtiD,EAAA7wB,EAAA+Q,KAAA,SAAA0iF,GAAA,cAAAA,EAAAxiF,KAAAwiF,EAAAviF,MAAA,cAAAuiF,EAAAviF,KAAA,EACoB4P,QAAQqD,IAAI,CAC3Dpf,EAAKg8C,mBAAmB,UACxBh8C,EAAK8xE,qBAAqB1mE,KAHC,UAAAojF,EAAAE,EAAAx/E,KAAAu/E,EAAAh0F,OAAA6yB,EAAA,EAAA7yB,CAAA+zF,EAAA,GACxBvwD,EADwBwwD,EAAA,KACPrgB,EADOqgB,EAAA,MAKJxwD,EALI,CAAAywD,EAAAviF,KAAA,eAAAuiF,EAAAhyE,OAAA,SAMpB1c,EAAKwM,MAAM4hE,GAAmB5lE,MAAMy1B,IANhB,cAAAywD,EAAAhyE,OAAA,SAQtB,MARsB,wBAAAgyE,EAAAphF,SAAAihF,EAAAzzF,SA9yNZ,gBAAA6zF,GAAA,OAAAL,EAAA9gF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAwzNnB2xF,wBAxzNmBhyF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAwzNO,SAAAgjF,IAAA,IAAAC,EAAA,OAAA/iE,EAAA7wB,EAAA+Q,KAAA,SAAA8iF,GAAA,cAAAA,EAAA5iF,KAAA4iF,EAAA3iF,MAAA,YAClB0iF,EAAsB7uF,EAAKuQ,gBAAgB,CAAC,QAAS,qBADnC,CAAAu+E,EAAA3iF,KAAA,WAGKnM,EAAKwyB,kBAAkBq8D,EAAoB5xF,QACzC4xF,EAAoBjsD,IAJ3B,CAAAksD,EAAA3iF,KAAA,eAAA2iF,EAAA3iF,KAAA,EAKSnM,EAAKjF,MAAM4nC,aAAaksD,EAAoB5xF,KAAM4xF,EAAoBzmF,QAASymF,EAAoBjsD,KAL5G,OAAAksD,EAAA5/E,KAAA,cAAA4/E,EAAApyE,OAAA,SAQjBmyE,GARiB,wBAAAC,EAAAxhF,SAAAshF,EAAA9zF,SAxzNPA,KAk0NnBi0F,oBAl0NmBt0F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAk0NG,SAAAojF,IAAA,IAAAC,EAAA,OAAAnjE,EAAA7wB,EAAA+Q,KAAA,SAAAkjF,GAAA,cAAAA,EAAAhjF,KAAAgjF,EAAA/iF,MAAA,YACd8iF,EAAkBjvF,EAAKuQ,gBAAgB,CAAC,QAAS,iBADnC,CAAA2+E,EAAA/iF,KAAA,WAGKnM,EAAKwyB,kBAAkBy8D,EAAgBhyF,QACrCgyF,EAAgBrsD,IAJvB,CAAAssD,EAAA/iF,KAAA,eAAA+iF,EAAA/iF,KAAA,EAKSnM,EAAKjF,MAAM4nC,aAAassD,EAAgBhyF,KAAMgyF,EAAgB7mF,QAAS6mF,EAAgBrsD,KALhG,OAAAssD,EAAAhgF,KAAA,cAAAggF,EAAAxyE,OAAA,SAQbuyE,GARa,wBAAAC,EAAA5hF,SAAA0hF,EAAAl0F,SAl0NHA,KA40NnBizF,qBA50NmBtzF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA40NI,SAAAujF,IAAA,IAAAC,EAAA,OAAAtjE,EAAA7wB,EAAA+Q,KAAA,SAAAqjF,GAAA,cAAAA,EAAAnjF,KAAAmjF,EAAAljF,MAAA,YACfijF,EAAmBpvF,EAAKuQ,gBAAgB,CAAC,QAAS,kBADnC,CAAA8+E,EAAAljF,KAAA,WAGKnM,EAAKwyB,kBAAkB48D,EAAiBnyF,QACtCmyF,EAAiBxsD,IAJxB,CAAAysD,EAAAljF,KAAA,eAAAkjF,EAAAljF,KAAA,EAKSnM,EAAKjF,MAAM4nC,aAAaysD,EAAiBnyF,KAAMmyF,EAAiBhnF,QAASgnF,EAAiBxsD,KALnG,OAAAysD,EAAAngF,KAAA,cAAAmgF,EAAA3yE,OAAA,SAQd0yE,GARc,wBAAAC,EAAA/hF,SAAA6hF,EAAAr0F,SA50NJA,KAs1NnBw0F,qBAt1NmB70F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAs1NI,SAAA2jF,IAAA,IAAAC,EAAA,OAAA1jE,EAAA7wB,EAAA+Q,KAAA,SAAAyjF,GAAA,cAAAA,EAAAvjF,KAAAujF,EAAAtjF,MAAA,YACfqjF,EAAwBxvF,EAAKuQ,gBAAgB,CAAC,QAAS,uBADxC,CAAAk/E,EAAAtjF,KAAA,WAGKnM,EAAKwyB,kBAAkBg9D,EAAsBvyF,QAC3CuyF,EAAsB5sD,IAJ7B,CAAA6sD,EAAAtjF,KAAA,eAAAsjF,EAAAtjF,KAAA,EAKSnM,EAAKjF,MAAM4nC,aAAa6sD,EAAsBvyF,KAAMuyF,EAAsBpnF,QAASonF,EAAsB5sD,KALlH,OAAA6sD,EAAAvgF,KAAA,cAAAugF,EAAA/yE,OAAA,SAQd8yE,GARc,wBAAAC,EAAAniF,SAAAiiF,EAAAz0F,SAt1NJA,KAg2NnB40F,0BAh2NmBj1F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAg2NS,SAAA+jF,IAAA,IAAAvkF,EAAAgjE,EAAAwhB,EAAAtgF,EAAAyoC,EAAA2C,EAAAm1C,EAAAC,EAAAC,EAAAC,EAAAviF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAikF,GAAA,cAAAA,EAAA/jF,KAAA+jF,EAAA9jF,MAAA,UAAOf,EAAP4kF,EAAAlxF,OAAA,QAAA0qB,IAAAwmE,EAAA,GAAAA,EAAA,GAAiB,KAAM5hB,EAAvB4hB,EAAAlxF,OAAA,QAAA0qB,IAAAwmE,EAAA,GAAAA,EAAA,GAA2C,KAAMJ,EAAjDI,EAAAlxF,OAAA,QAAA0qB,IAAAwmE,EAAA,GAAAA,EAAA,GAAgE,MACrF5kF,GAAWpL,EAAKjF,MAAMqQ,UACzBA,EAAUpL,EAAKjF,MAAMqQ,SAGlBA,EALqB,CAAA6kF,EAAA9jF,KAAA,eAAA8jF,EAAAvzE,OAAA,SAMjB,MANiB,cASpBpN,EAAiB,GATG2gF,EAAA9jF,KAAA,EAUMnM,EAAKsvF,uBAVX,cAUpBv3C,EAVoBk4C,EAAA/gF,KAWpBwrC,EAAuB16C,EAAKuQ,gBAAgB,CAAC,QAAS,oBAXlC0/E,EAAA9jF,KAAA,GAaKnM,EAAK4tF,sBAbV,WAapBiC,EAboBI,EAAA/gF,KAcrBk/D,EAdqB,CAAA6hB,EAAA9jF,KAAA,gBAAA8jF,EAAA9jF,KAAA,GAeEnM,EAAK8xE,qBAAqB1mE,GAAS,GAfrC,QAexBgjE,EAfwB6hB,EAAA/gF,KAAA,YAkBtBk/D,IAAqByhB,EAlBC,CAAAI,EAAA9jF,KAAA,gBAmBlB2jF,EAAkB9vF,EAAKwM,MAAM4hE,GAAmB9vD,IAAIte,EAAKwM,MAAMqjF,IAC/DE,EAAUt1F,OAAOoE,KAAK67C,GAAsB57C,OAE9C8wF,IACFA,EAAe5vF,EAAKwM,MAAMojF,GAActxE,IAAIyxE,IAvBtBE,EAAA9jF,KAAA,GA4BlBnM,EAAKwL,aAAa/Q,OAAOoE,KAAK67C,GAA9B,eAAAw1C,EAAAz1F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAqD,SAAAukF,EAAO5jF,GAAP,IAAA6rC,EAAAg4C,EAAAC,EAAAjhF,EAAA,OAAA0c,EAAA7wB,EAAA+Q,KAAA,SAAAskF,GAAA,cAAAA,EAAApkF,KAAAokF,EAAAnkF,MAAA,cACnDisC,EAAmBsC,EAAqBnuC,GACxC6jF,EAAYh4C,EAAiBm4C,gBAAgBH,UAFME,EAAAnkF,KAAA,EAG3BnM,EAAKosB,oBAAoB2rB,EAAkB96C,KAAM,WAAY,CAACmzF,IAHnC,QAGnDC,EAHmDC,EAAAphF,QAKnDE,EAAmBpP,EAAKwM,MAAM6jF,GAAiB7nF,MAAMsnF,GACrDF,IAEFxgF,EAAmBA,EAAiBnC,MAAMmC,EAAiB5G,MAAMonF,KAEnEtgF,EAAe8gF,GAAapwF,EAAKkvD,aAAa9/C,IAVS,wBAAAkhF,EAAAhjF,SAAA6iF,EAAAr1F,SAArD,gBAAA01F,GAAA,OAAAN,EAAA1iF,MAAA1S,KAAA2S,YAAA,IA5BkB,eAAAwiF,EAAAvzE,OAAA,SA2CnBjiB,OAAO2R,OAAOkD,IA3CK,yBAAA2gF,EAAA3iF,SAAAqiF,EAAA70F,SAh2NTA,KA+4NnB21F,sBA/4NmBh2F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+4NK,SAAA8kF,IAAA,IAAAtlF,EAAAgjE,EAAA0P,EAAA6S,EAAArhF,EAAApE,EAAA6sC,EAAA2C,EAAAm1C,EAAAC,EAAAc,EAAAnjF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA6kF,GAAA,cAAAA,EAAA3kF,KAAA2kF,EAAA1kF,MAAA,UAAOf,EAAPwlF,EAAA9xF,OAAA,QAAA0qB,IAAAonE,EAAA,GAAAA,EAAA,GAAiB,KAAMxiB,EAAvBwiB,EAAA9xF,OAAA,QAAA0qB,IAAAonE,EAAA,GAAAA,EAAA,GAA2C,KAAM9S,EAAjD8S,EAAA9xF,OAAA,QAAA0qB,IAAAonE,EAAA,IAAAA,EAAA,GAAsED,EAAtEC,EAAA9xF,OAAA,QAAA0qB,IAAAonE,EAAA,IAAAA,EAAA,IAEjBxlF,GAAWpL,EAAKjF,MAAMqQ,UACzBA,EAAUpL,EAAKjF,MAAMqQ,SAGlBA,EANiB,CAAAylF,EAAA1kF,KAAA,eAAA0kF,EAAAn0E,OAAA,SAOb,MAPa,cAUhBpN,EAAiB,GACjBpE,EAAkBlL,EAAK89B,0BAXP+yD,EAAA1kF,KAAA,GAYUnM,EAAKsvF,uBAZf,eAYhBv3C,EAZgB84C,EAAA3hF,KAahBwrC,EAAuB16C,EAAKuQ,gBAAgB,CAAC,QAAS,oBAbtCsgF,EAAA1kF,KAAA,GAeSnM,EAAK4tF,sBAfd,WAehBiC,EAfgBgB,EAAA3hF,KAgBjBk/D,EAhBiB,CAAAyiB,EAAA1kF,KAAA,gBAAA0kF,EAAA1kF,KAAA,GAiBMnM,EAAK8xE,qBAAqB1mE,GAAS,GAjBzC,QAiBpBgjE,EAjBoByiB,EAAA3hF,KAAA,YAoBlBk/D,IAAqByhB,EApBH,CAAAgB,EAAA1kF,KAAA,gBAqBd2jF,EAAkB9vF,EAAKwM,MAAM4hE,GAAmB9vD,IAAIte,EAAKwM,MAAMqjF,IArBjDgB,EAAA1kF,KAAA,GAuBdnM,EAAKwL,aAAa/Q,OAAOoE,KAAK67C,GAA9B,eAAAo2C,EAAAr2F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAqD,SAAAmlF,EAAOxkF,GAAP,IAAA6rC,EAAAg4C,EAAAnrF,EAAA+rF,EAAAC,EAAAC,EAAA9hF,EAAA+hF,EAAAv3D,EAAA,OAAA9N,EAAA7wB,EAAA+Q,KAAA,SAAAolF,GAAA,cAAAA,EAAAllF,KAAAklF,EAAAjlF,MAAA,cACnDisC,EAAmBsC,EAAqBnuC,GACxC6jF,EAAYh4C,EAAiBm4C,gBAAgBH,UAC7CnrF,EAAciG,EAAgBktC,EAAiB9gB,WAHI85D,EAAAjlF,KAAA,EAO/C4P,QAAQqD,IAAI,CACpBpf,EAAKo8B,kBAAkBn3B,GACvBjF,EAAKosB,oBAAoB2rB,EAAkB96C,KAAM,WAAY,CAACmzF,MATP,OAAAY,EAAAI,EAAAliF,KAAA+hF,EAAAx2F,OAAA6yB,EAAA,EAAA7yB,CAAAu2F,EAAA,GAKvDE,EALuDD,EAAA,GAMvD7hF,EANuD6hF,EAAA,GAYnDE,EAAmBnxF,EAAKwM,MAAM4C,GAAkB5G,MAAMxI,EAAKwM,MAAM0kF,IACnEt3D,EAAeu3D,EAAiB3oF,MAAMsnF,GACtChS,IACFlkD,EAAe55B,EAAKgQ,iBAAiB4pB,EAAc,KAGrDtqB,EAAe8oC,EAAiB9gB,WAAaq5D,EAAe3wF,EAAKkvD,aAAat1B,GAAgBA,EAlBrC,yBAAAw3D,EAAA9jF,SAAAyjF,EAAAj2F,SAArD,gBAAAu2F,GAAA,OAAAP,EAAAtjF,MAAA1S,KAAA2S,YAAA,IAvBc,eAAAojF,EAAAn0E,OAAA,SA6Cfi0E,EAAel2F,OAAO2R,OAAOkD,GAAkBA,GA7ChC,yBAAAuhF,EAAAvjF,SAAAojF,EAAA51F,SA/4NLA,KAg8NnBw2F,gBAh8NmB,eAAAC,EAAA92F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAg8ND,SAAA4lF,EAAOjlF,EAAO2e,GAAd,IAAAzF,EAAA4mE,EAAAnhF,EAAAwvC,EAAA+2C,EAAAhkF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0lF,GAAA,cAAAA,EAAAxlF,KAAAwlF,EAAAvlF,MAAA,cAAsBsZ,EAAtBgsE,EAAA3yF,OAAA,QAAA0qB,IAAAioE,EAAA,IAAAA,EAAA,GACVpF,EAAU,GACVnhF,EAAkBlL,EAAK89B,0BACvB4c,EAAuB16C,EAAKuQ,gBAAgB,CAAC,QAAS,oBAH5CmhF,EAAAvlF,KAAA,EAKVnM,EAAKwL,aAAa/Q,OAAOoE,KAAK67C,GAA9B,eAAAi3C,EAAAl3F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAqD,SAAAgmF,EAAO57C,GAAP,IAAAoC,EAAAm4C,EAAAH,EAAAnrF,EAAAisF,EAAA,OAAAplE,EAAA7wB,EAAA+Q,KAAA,SAAA6lF,GAAA,cAAAA,EAAA3lF,KAAA2lF,EAAA1lF,MAAA,UACnDisC,EAAmBsC,EAAqB1E,GACxCu6C,EAAkBn4C,EAAiBm4C,gBACnCH,EAAYG,EAAgBH,YAC9Bp6C,IAAczpC,GAAShE,WAAW2iB,GAAU,GAJS,CAAA2mE,EAAA1lF,KAAA,YAKjDlH,EAAciG,EAAgBktC,EAAiB9gB,WACrDpM,EAASlrB,EAAKgQ,iBAAiBkb,EAAQ,IAClCzF,EAPkD,CAAAosE,EAAA1lF,KAAA,gBAAA0lF,EAAA1lF,KAAA,EAQxBnM,EAAKo8B,kBAAkBn3B,GARC,OAQ/CisF,EAR+CW,EAAA3iF,KASrDgc,EAASA,EAAO5M,IAAI4yE,GATiC,QAWvDhmE,EAASlrB,EAAKqvD,qBAAqBnkC,EAAQktB,EAAiB35C,UAC5D4tF,EAAQ+D,GAAallE,EAZkC2mE,EAAA1lF,KAAA,iBAcvDkgF,EAAQ+D,GAAa,EAdkC,yBAAAyB,EAAAvkF,SAAAskF,EAAA92F,SAArD,gBAAAg3F,GAAA,OAAAH,EAAAnkF,MAAA1S,KAAA2S,YAAA,IALU,cAAAikF,EAAAh1E,OAAA,SAuBTjiB,OAAO2R,OAAOigF,IAvBL,wBAAAqF,EAAApkF,SAAAkkF,EAAA12F,SAh8NC,gBAAAi3F,EAAAC,GAAA,OAAAT,EAAA/jF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAy9NnBm3F,oBAz9NmB,eAAAC,EAAAz3F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAy9NG,SAAAumF,EAAO9F,GAAP,IAAA5mE,EAAA4P,EAAA+8D,EAAA3kF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAqmF,GAAA,cAAAA,EAAAnmF,KAAAmmF,EAAAlmF,MAAA,cAAgBsZ,IAAhB2sE,EAAAtzF,OAAA,QAAA0qB,IAAA4oE,EAAA,KAAAA,EAAA,GAAAC,EAAAlmF,KAAA,EACYnM,EAAKsvF,uBADjB,YACdj6D,EADcg9D,EAAAnjF,MAAA,CAAAmjF,EAAAlmF,KAAA,eAAAkmF,EAAAlmF,KAAA,EAGLnM,EAAKosB,oBAAoBiJ,EAAkBp4B,KAAM,oBAAqB,CAACovF,EAAS5mE,IAH3E,cAAA4sE,EAAA31E,OAAA,SAAA21E,EAAAnjF,MAAA,cAAAmjF,EAAA31E,OAAA,SAKb,MALa,wBAAA21E,EAAA/kF,SAAA6kF,EAAAr3F,SAz9NH,gBAAAw3F,GAAA,OAAAJ,EAAA1kF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAg+NnBy3F,iBAh+NmB,eAAAC,EAAA/3F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAg+NA,SAAA6mF,EAAOlmF,EAAO2e,GAAd,IAAAzF,EAAAitE,EAAAt0D,EAAAu0D,EAAA5C,EAAA1D,EAAAuG,EAAAC,EAAA1pB,EAAAp8D,EAAA+lF,EAAAC,EAAAtlF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAgnF,GAAA,cAAAA,EAAA9mF,KAAA8mF,EAAA7mF,MAAA,cAAsBsZ,IAAtBstE,EAAAj0F,OAAA,QAAA0qB,IAAAupE,EAAA,KAAAA,EAAA,GAAsCL,EAAtCK,EAAAj0F,OAAA,QAAA0qB,IAAAupE,EAAA,GAAAA,EAAA,GAAuD,KACpE30D,EAAW,KADE40D,EAAA7mF,KAAA,EAEanM,EAAKysF,0BAFlB,YAEXkG,EAFWK,EAAA9jF,MAAA,CAAA8jF,EAAA7mF,KAAA,YAKT4jF,EAAU/vF,EAAKuQ,gBAAgB,CAAC,QAAS,SAAU,aAEzD2a,EAASlrB,EAAKwM,MAAM0e,MACLA,EAAO9sB,UAAW8sB,EAAOuC,IAAI,GAR7B,CAAAulE,EAAA7mF,KAAA,gBAAA6mF,EAAAt2E,OAAA,SASN,MATM,YAYX2vE,EAAUqG,IACErG,EAAQvtF,SAAWixF,EAbpB,CAAAiD,EAAA7mF,KAAA,gBAAA6mF,EAAA7mF,KAAA,GAcGnM,EAAKsxF,gBAAgB/kF,EAAO2e,GAd/B,QAcbmhE,EAda2G,EAAA9jF,KAAA,eAAA8jF,EAAA7mF,KAAA,GAoBL4P,QAAQqD,IAAI,CACpBpf,EAAKosB,oBAAoBumE,EAAgB11F,KAAM,qBAC/C+C,EAAKosB,oBAAoBumE,EAAgB11F,KAAM,oBAAqB,CAACovF,EAAS5mE,MAtBjE,WAAAmtE,EAAAI,EAAA9jF,KAAA2jF,EAAAp4F,OAAA6yB,EAAA,EAAA7yB,CAAAm4F,EAAA,GAkBbzpB,EAlBa0pB,EAAA,GAmBb9lF,EAnBa8lF,EAAA,IAyBX1pB,IAAgBp8D,EAzBL,CAAAimF,EAAA7mF,KAAA,gBA0Bb+e,EAASlrB,EAAKgQ,iBAAiBkb,EAAQ,IACvCi+C,EAAenpE,EAAKgQ,iBAAiBm5D,EAAc,IACnDp8D,EAAc/M,EAAKgQ,iBAAiBjD,EAAa,IAC3C+lF,EAAK/lF,EAAYvE,MAAM2gE,GAGzBupB,IAAmBjtE,IACrByF,EAASA,EAAO1iB,MAAM2gE,IAItB/qC,EADE3Y,EACSqtE,EAAGx0E,IAAI4M,GAAQje,MAAM,GAAGzE,OAAO,GAE/B0iB,EAAO5M,IAAIw0E,GAAI7lF,MAAM,GAAGzE,OAAO,GAvC/BwqF,EAAAt2E,OAAA,SA4CN0hB,GA5CM,eAAA40D,EAAAt2E,OAAA,SA+CV,MA/CU,yBAAAs2E,EAAA1lF,SAAAmlF,EAAA33F,SAh+NA,gBAAAm4F,EAAAC,GAAA,OAAAV,EAAAhlF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAihOnB23E,uBAjhOmB,eAAA0gB,EAAA14F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAihOM,SAAAwnF,EAAOnuF,GAAP,IAAAouF,EAAAC,EAAA5mE,EAAA/R,EAAA8T,EAAA8kE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjnE,EAAAknE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5mF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAsoF,GAAA,cAAAA,EAAApoF,KAAAooF,EAAAnoF,MAAA,UAAoBknF,EAApBgB,EAAAv1F,OAAA,QAAA0qB,IAAA6qE,EAAA,GAAAA,EAAA,GAAuC,KAAMf,IAA7Ce,EAAAv1F,OAAA,QAAA0qB,IAAA6qE,EAAA,KAAAA,EAAA,GAEjB3nE,EAFiB,0BAAAjrB,OAEyBwD,EAAYmoB,KAAK7gB,MAF1C,KAAA9K,OAEmD4xF,EAFnD,KAAA5xF,OAEuE6xF,KACxF34E,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAJnB,CAAAk2F,EAAAnoF,KAAA,eAAAmoF,EAAA53E,OAAA,SAKd1c,EAAKwM,MAAMmO,IALG,UAQjB8T,EAAmBzuB,EAAK8uB,uBAE1BykE,EAAmBvzF,EAAKwM,MAAM,GAC5BgnF,EAAqBxzF,EAAKuQ,gBAAgB,CAAC,YAAa,YACxDkjF,EAAexuF,EAAY8C,UAAUwS,KAAK,SAAAle,GAAC,OAAIA,EAAEY,OAASu2F,EAAmBz6D,WAG7E26D,EAAiB1zF,EAAKsrB,aAAa,CAAC,iBAAkBmD,GAAmB+kE,IAAuB,GAEjGC,IAAgBC,EAAenkE,SAAStqB,EAAYmoB,KAAK7gB,OAjBvC,CAAA+nF,EAAAnoF,KAAA,gBAAAmoF,EAAA53E,OAAA,SAkBd62E,GAlBc,eAAAe,EAAAnoF,KAAA,GAqBwBnM,EAAKosB,oBAAoBqnE,EAAalnF,MAAO,2BArBrE,WAqBjBonF,EArBiBW,EAAAplF,KAAA,CAAAolF,EAAAnoF,KAAA,gBAAAmoF,EAAA53E,OAAA,SAwBd62E,GAxBc,eA2BjBK,EA3BiB,6BAAAnyF,OA2B6CkyF,GA3B7CW,EAAAnoF,KAAA,GA4BjBnM,EAAKjF,MAAM4nC,aAAaixD,EAAgCD,EAAkCY,GA5BzE,eAAAD,EAAAnoF,KAAA,GAkCb4P,QAAQqD,IAAI,CACpBpf,EAAKwjE,oBAAoBiwB,EAAalnF,OACtCvM,EAAKgF,mBAAmBC,GAAa,GAAO,GAC5CjF,EAAKosB,oBAAoBwnE,EAAgC,SAAU,CAACH,EAAarrF,YArC5D,WAAAyrF,EAAAS,EAAAplF,KAAA4kF,EAAAr5F,OAAA6yB,EAAA,EAAA7yB,CAAAo5F,EAAA,GA+BrBE,EA/BqBD,EAAA,GAgCrBhnE,EAhCqBgnE,EAAA,KAiCrBE,EAjCqBF,EAAA,MA0CNhnE,EA1CM,CAAAwnE,EAAAnoF,KAAA,cA4Cf8nF,EAAqBnnE,EAAgBhoB,yBAAyB2uF,EAAarrF,QAAQC,kBAE/D4rF,EAAmBh0B,IAAI,MA9C5B,CAAAq0B,EAAAnoF,KAAA,YA+CdknF,EA/Cc,CAAAiB,EAAAnoF,KAAA,gBAAAmoF,EAAAnoF,KAAA,GAgDQnM,EAAKosB,oBAAoBqnE,EAAalnF,MAAO,YAAa,CAACtH,EAAYmoB,KAAKhlB,UAhDpF,QAgDjBirF,EAhDiBiB,EAAAplF,KAAA,WAmDbglF,EAAYl0F,EAAKwM,MAAMwnF,EAAUQ,mBACvCnB,EAAmBrzF,EAAKwM,MAAM6mF,GAC9BU,EAAoB/zF,EAAKwM,MAAMunF,GACzBI,EAAiBn0F,EAAKuQ,gBAAgB,CAAC,UAAW,mBAElD6jF,EAAgBf,EAAiB/0E,IAAIy1E,GAC3CR,EAAmBW,EAAU1rF,MAAM4rF,GAE/Bd,IACFC,EAAmBA,EAAiBj1E,IAAI,MAAM9V,MAAM2rF,IAGjDn0F,EAAKwM,MAAM+mF,GAAkBn1F,QA/Df,CAAAk2F,EAAAnoF,KAAA,gBAAAmoF,EAAA53E,OAAA,SAgEV1c,EAAKguB,8BAA8BtB,EAAe6mE,IAhExC,eAAAe,EAAA53E,OAAA,SAqEhB62E,GArEgB,yBAAAe,EAAAhnF,SAAA8lF,EAAAt4F,SAjhON,gBAAA25F,GAAA,OAAAtB,EAAA3lF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAwlOnBs3E,2BAxlOmB33E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAwlOU,SAAA8oF,IAAA,IAAAtpF,EAAAF,EAAAsoF,EAAA7oE,EAAAgqE,EAAAlnF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA4oF,GAAA,cAAAA,EAAA1oF,KAAA0oF,EAAAzoF,MAAA,UAAOf,EAAPupF,EAAA71F,OAAA,QAAA0qB,IAAAmrE,EAAA,GAAAA,EAAA,GAAiB,KAAMzpF,EAAvBypF,EAAA71F,OAAA,QAAA0qB,IAAAmrE,EAAA,GAAAA,EAAA,GAAyC,KAC/DvpF,IACHA,EAAUpL,EAAKjF,MAAMqQ,UAElBF,GAAmBlL,EAAKjF,MAAM4T,mBACjCzD,EAAkBlL,EAAKjF,MAAM8zB,oBAAoB7uB,EAAKjF,MAAM4T,mBAGzDvD,GAAYF,EARU,CAAA0pF,EAAAzoF,KAAA,eAAAyoF,EAAAl4E,OAAA,UASlB,GATkB,cAYrB82E,EAAqBxzF,EAAKuQ,gBAAgB,CAAC,YAAa,YAE1Doa,EAAS3qB,EAAKwM,MAAM,GAdGooF,EAAAzoF,KAAA,GAerBnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAA2pF,EAAAp6F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAAkpF,EAAOvoF,GAAP,IAAAtH,EAAA8vF,EAAAC,EAAA5lE,EAAAmkE,EAAA,OAAAznE,EAAA7wB,EAAA+Q,KAAA,SAAAipF,GAAA,cAAAA,EAAA/oF,KAAA+oF,EAAA9oF,MAAA,UAC9ClH,EAAciG,EAAgBqB,IACjBtH,EAAY8C,UAAUwS,KAAK,SAAAle,GAAC,OAAKA,EAAEY,OAASu2F,EAAmBz6D,WAF9B,CAAAk8D,EAAA9oF,KAAA,gBAAA8oF,EAAA9oF,KAAA,EAOxC4P,QAAQqD,IAAI,CACpBpf,EAAKwvB,iBAAiBpkB,EAASnG,GAAa,GAC5CjF,EAAKyyE,uBAAuBxtE,EAAa,MAAM,KATC,OAAA8vF,EAAAE,EAAA/lF,KAAA8lF,EAAAv6F,OAAA6yB,EAAA,EAAA7yB,CAAAs6F,EAAA,GAKhD3lE,EALgD4lE,EAAA,IAMhDzB,EANgDyB,EAAA,KAY1B5lE,IAAkBpvB,EAAKwM,MAAM+mF,GAAkBn1F,UAAY4B,EAAKwM,MAAM4iB,GAAehxB,UAC3GusB,EAASA,EAAO3d,KAAKumF,EAAiB/qF,MAAM4mB,KAbI,yBAAA6lE,EAAA3nF,SAAAwnF,EAAAh6F,SAAhD,gBAAAo6F,GAAA,OAAAL,EAAArnF,MAAA1S,KAAA2S,YAAA,IAfqB,eAAAmnF,EAAAl4E,OAAA,SAiCpBiO,GAjCoB,yBAAAiqE,EAAAtnF,SAAAonF,EAAA55F,SAxlOVA,KA2nOnBq6F,aA3nOmB,eAAAC,EAAA36F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA2nOJ,SAAAypF,EAAO9oF,EAAOtH,GAAd,IAAAqwF,EAAAC,EAAA7oE,EAAA/R,EAAA66E,EAAA9vD,EAAA3Y,EAAA0oE,EAAAC,EAAA5oE,EAAA6oE,EAAAloF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA4pF,GAAA,cAAAA,EAAA1pF,KAAA0pF,EAAAzpF,MAAA,UAA2BmpF,EAA3BK,EAAA72F,OAAA,QAAA0qB,IAAAmsE,EAAA,GAAAA,EAAA,GAAiD,MACxDJ,EAAoBv1F,EAAKuQ,gBAAgB,CAAC,YAAa,YACtC4c,QAFV,CAAAyoE,EAAAzpF,KAAA,eAAAypF,EAAAl5E,OAAA,UAGJ,GAHI,UAMPgQ,EANO,gBAAAjrB,OAMyBwD,EAAYmoB,KAAK7gB,MAN1C,KAAA9K,OAMmD6zF,KAC1D36E,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAR7B,CAAAw3F,EAAAzpF,KAAA,eAAAypF,EAAAl5E,OAAA,SASJ1c,EAAKwM,MAAMmO,IATP,cAYT66E,EAAYx1F,EAAKwM,MAAM,GAZdopF,EAAAzpF,KAAA,GAamBnM,EAAKyyE,uBAAuBxtE,GAb/C,aAaPygC,EAbOkwD,EAAA1mF,QAeYlP,EAAKwM,MAAMk5B,GAAmBt1B,GAAG,GAf7C,CAAAwlF,EAAAzpF,KAAA,YAkBNmpF,EAlBM,CAAAM,EAAAzpF,KAAA,gBAmBH4gB,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UApBhC4xD,EAAA1pF,KAAA,GAuBDupF,EAAkB,CACtBrtF,QAASmtF,EAAkBhK,iBAAmBgK,EAAkBntF,SAxB3DwtF,EAAAzpF,KAAA,GA0BqBnM,EAAKutB,yBAAyBR,EAAgB0oE,GA1BnE,QA0BPH,EA1BOM,EAAA1mF,KAAA0mF,EAAAzpF,KAAA,iBAAAypF,EAAA1pF,KAAA,GAAA0pF,EAAApoE,GAAAooE,EAAA,kBA8BJN,IAAuBA,EAAoBl3F,UAC9Ck3F,EAAsBt1F,EAAKwM,MAAM,IA/B1B,eAmCLkpF,EAAc11F,EAAKwM,MAAM8oF,GAAqB9sF,MAAMk9B,GAnC/CkwD,EAAAzpF,KAAA,GAoCmBnM,EAAKgF,mBAAmBC,GAAa,GAAO,GApC/D,SAoCL6nB,EApCK8oE,EAAA1mF,QAyCTsmF,EAAYE,EAAYp3E,IAAIwO,EAAgB87D,0BAA0BpgF,MAAM,KAIvExI,EAAKwM,MAAMgpF,GAAWp3F,SACzB4B,EAAKguB,8BAA8BtB,EAAe8oE,IA9C3C,eAAAI,EAAAl5E,OAAA,SAmDN84E,GAnDM,yBAAAI,EAAAtoF,SAAA+nF,EAAAv6F,KAAA,cA3nOI,gBAAA+6F,EAAAC,GAAA,OAAAV,EAAA5nF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAgrOnBi7F,cAhrOmB,eAAAC,EAAAv7F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAgrOH,SAAAqqF,EAAO1pF,EAAOtH,GAAd,IAAAixF,EAAA1C,EAAA9mE,EAAA/R,EAAAw7E,EAAA5C,EAAAxmE,EAAA0oE,EAAAW,EAAAtpE,EAAAupE,EAAA5oF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAsqF,GAAA,cAAAA,EAAApqF,KAAAoqF,EAAAnqF,MAAA,UAA2B+pF,EAA3BG,EAAAv3F,OAAA,QAAA0qB,IAAA6sE,EAAA,GAAAA,EAAA,GAAgD,MACxD7C,EAAqBxzF,EAAKuQ,gBAAgB,CAAC,YAAa,aACtC4c,QAFV,CAAAmpE,EAAAnqF,KAAA,eAAAmqF,EAAA55E,OAAA,UAGL,GAHK,UAMRgQ,EANQ,iBAAAjrB,OAMyBwD,EAAYmoB,KAAK7gB,MAN1C,KAAA9K,OAMmDy0F,KAC3Dv7E,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAR5B,CAAAk4F,EAAAnqF,KAAA,eAAAmqF,EAAA55E,OAAA,SASL1c,EAAKwM,MAAMmO,IATN,cAYVw7E,EAAan2F,EAAKwM,MAAM,GAZd8pF,EAAAnqF,KAAA,GAaiBnM,EAAKyyE,uBAAuBxtE,GAb7C,aAaRsuF,EAbQ+C,EAAApnF,QAeUlP,EAAKwM,MAAM+mF,GAAkBnjF,GAAG,GAf1C,CAAAkmF,EAAAnqF,KAAA,YAkBP+pF,EAlBO,CAAAI,EAAAnqF,KAAA,gBAmBJ4gB,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UApB/BsyD,EAAApqF,KAAA,GAuBFupF,EAAkB,CACtBrtF,QAASorF,EAAmBjI,iBAAmBiI,EAAmBprF,SAxB5DkuF,EAAAnqF,KAAA,GA0BmBnM,EAAKutB,yBAAyBR,EAAgB0oE,GA1BjE,QA0BRS,EA1BQI,EAAApnF,KAAAonF,EAAAnqF,KAAA,iBAAAmqF,EAAApqF,KAAA,GAAAoqF,EAAA9oE,GAAA8oE,EAAA,kBA8BLJ,IAAsBA,EAAmB93F,UAC5C83F,EAAqBl2F,EAAKwM,MAAM,IA/BxB,eAmCN4pF,EAAep2F,EAAKwM,MAAM0pF,GAAoB1tF,MAAM+qF,GAnC9C+C,EAAAnqF,KAAA,GAqCkBnM,EAAKgF,mBAAmBC,GAAa,GAAO,GArC9D,SAqCN6nB,EArCMwpE,EAAApnF,QAwCVinF,EAAaC,EAAa93E,IAAIwO,EAAgB87D,0BAA0BpgF,MAAM,KAIzExI,EAAKwM,MAAM2pF,GAAY/3F,SAC1B4B,EAAKguB,8BAA8BtB,EAAeypE,IA7C1C,eAAAG,EAAA55E,OAAA,SAkDPy5E,GAlDO,yBAAAG,EAAAhpF,SAAA2oF,EAAAn7F,KAAA,cAhrOG,gBAAAy7F,EAAAC,GAAA,OAAAR,EAAAxoF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAouOnB27F,WApuOmB,eAAAC,EAAAj8F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAouON,SAAA+qF,EAAOpqF,EAAOtH,GAAd,IAAA2xF,EAAAC,EAAAC,EAAApqE,EAAA/R,EAAAo8E,EAAAC,EAAAjqE,EAAAkqE,EAAAnqE,EAAAoqE,EAAAzpF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAmrF,GAAA,cAAAA,EAAAjrF,KAAAirF,EAAAhrF,MAAA,UAA2ByqF,EAA3BM,EAAAp4F,OAAA,QAAA0qB,IAAA0tE,EAAA,GAAAA,EAAA,GAA8C,KAAML,EAApDK,EAAAp4F,OAAA,QAAA0qB,IAAA0tE,EAAA,GAAAA,EAAA,GAAyE,MAC9EJ,EAAkB92F,EAAKuQ,gBAAgB,CAAC,YAAa,UACtC4c,QAFV,CAAAgqE,EAAAhrF,KAAA,eAAAgrF,EAAAz6E,OAAA,UAGF,GAHE,UAMLgQ,EANK,cAAAjrB,OAMyBwD,EAAYmoB,KAAK7gB,MAN1C,KAAA9K,OAMmDm1F,EANnD,KAAAn1F,OAMuEo1F,KAC5El8E,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAR/B,CAAA+4F,EAAAhrF,KAAA,eAAAgrF,EAAAz6E,OAAA,SASF1c,EAAKwM,MAAMmO,IATT,cAYPo8E,EAAU/2F,EAAKwM,MAAM,GAZd2qF,EAAAhrF,KAAA,GAaoBnM,EAAKwyE,oBAAoBvtE,EAAa2xF,GAb1D,aAaLI,EAbKG,EAAAjoF,MAAA,CAAAioF,EAAAhrF,KAAA,YAiBH4gB,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UAIpC6yD,EAtBI,CAAAM,EAAAhrF,KAAA,gBAAAgrF,EAAAjrF,KAAA,GAAAirF,EAAAhrF,KAAA,GAwBsBnM,EAAKutB,yBAAyBR,EAAgB+pE,GAxBpE,QAwBLD,EAxBKM,EAAAjoF,KAAAioF,EAAAhrF,KAAA,iBAAAgrF,EAAAjrF,KAAA,GAAAirF,EAAA3pE,GAAA2pE,EAAA,kBA4BFN,IAAsBA,EAAmBz4F,UAC5Cy4F,EAAqB72F,EAAKwM,MAAM,IA7B3B,eAiCHyqF,EAAYj3F,EAAKwM,MAAMqqF,GAAoBruF,MAAMwuF,GAjC9CG,EAAAhrF,KAAA,GAmCqBnM,EAAKgF,mBAAmBC,GAAa,GAAO,GAnCjE,QAmCH6nB,EAnCGqqE,EAAAjoF,KAqCTqjB,QAAQqc,IAAI,aAAc3pC,EAAYmoB,KAAK7gB,MAAOsqF,EAAmBpuF,QAAQ,GAAIuuF,EAAiBvuF,QAAQ,GAAIwuF,EAAUxuF,QAAQ,GAAIqkB,EAAgB87D,yBAAyBngF,QAAQ,IAEjLqkB,IACFiqE,EAAUE,EAAU34E,IAAIwO,EAAgB87D,0BAA0BpgF,MAAM,KACnExI,EAAKwM,MAAMuqF,GAAS34F,SACvB4B,EAAKguB,8BAA8BtB,EAAeqqE,IA1C7C,eAAAI,EAAAz6E,OAAA,SA+CJq6E,GA/CI,yBAAAI,EAAA7pF,SAAAqpF,EAAA77F,KAAA,cApuOM,gBAAAs8F,EAAAC,GAAA,OAAAX,EAAAlpF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAqxOnBw8F,aArxOmB,eAAAC,EAAA98F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAqxOJ,SAAA4rF,EAAOC,GAAP,IAAAC,EAAA,OAAA5rE,EAAA7wB,EAAA+Q,KAAA,SAAA2rF,GAAA,cAAAA,EAAAzrF,KAAAyrF,EAAAxrF,MAAA,cAAAwrF,EAAAxrF,KAAA,EACSnM,EAAK2mC,0BAA0B,cAAe,mBAAoB,CAAC8wD,IAD5E,YACTC,EADSC,EAAAzoF,MAAA,CAAAyoF,EAAAxrF,KAAA,eAAAwrF,EAAAj7E,OAAA,SAGJ1c,EAAKwM,MAAMkrF,IAHP,cAAAC,EAAAj7E,OAAA,SAKN,MALM,wBAAAi7E,EAAArqF,SAAAkqF,EAAA18F,SArxOI,gBAAA88F,GAAA,OAAAL,EAAA/pF,MAAA1S,KAAA2S,YAAA,GAAA3S,KA4xOnB03E,oBA5xOmB,eAAAqlB,EAAAp9F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA4xOG,SAAAksF,EAAO7yF,GAAP,IAAA2xF,EAAAtD,EAAA5mE,EAAA/R,EAAAo9E,EAAAjrE,EAAAkrE,EAAAC,EAAAC,EAAAR,EAAAS,EAAAhqE,EAAAiqE,EAAApB,EAAAqB,EAAA5qF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAssF,GAAA,cAAAA,EAAApsF,KAAAosF,EAAAnsF,MAAA,UAAoByqF,EAApByB,EAAAv5F,OAAA,QAAA0qB,IAAA6uE,EAAA,GAAAA,EAAA,GAAuC,KAAM/E,IAA7C+E,EAAAv5F,OAAA,QAAA0qB,IAAA6uE,EAAA,KAAAA,EAAA,GAEd3rE,EAFc,uBAAAjrB,OAEyBwD,EAAYmoB,KAAK7gB,MAF1C,KAAA9K,OAEmDm1F,EAFnD,KAAAn1F,OAEuE6xF,KACrF34E,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAJtB,CAAAk6F,EAAAnsF,KAAA,eAAAmsF,EAAA57E,OAAA,SAKX1c,EAAKwM,MAAMmO,IALA,YAQdo9E,EAAa9yF,EAAY8C,UAAUwS,KAAK,SAAAle,GAAC,MAAgB,aAAXA,EAAEY,QARlC,CAAAq7F,EAAAnsF,KAAA,gBAAAmsF,EAAAnsF,KAAA,GAYYnM,EAAKgF,mBAAmBC,GAAa,GAAO,GAZxD,WAYZ6nB,EAZYwrE,EAAAppF,OAaZ8oF,EAAyBlrE,EAAgBhoB,yBAAyBizF,EAAW3vF,QAAQC,kBAG7D2vF,EAAuB/3B,IAAI,MAhBvC,CAAAq4B,EAAAnsF,KAAA,gBAAAmsF,EAAAnsF,KAAA,GAsBN4P,QAAQqD,IAAI,CACpBpf,EAAKs3F,aAAaS,EAAW3vF,SAC7BpI,EAAKwjE,oBAAoBu0B,EAAWxrF,SAxBtB,WAAA0rF,EAAAK,EAAAppF,KAAAgpF,EAAAz9F,OAAA6yB,EAAA,EAAA7yB,CAAAw9F,EAAA,GAoBdP,EApBcQ,EAAA,GAqBdC,EArBcD,EAAA,IA2BZR,IAAaS,EA3BD,CAAAG,EAAAnsF,KAAA,YA8BTyqF,EA9BS,CAAA0B,EAAAnsF,KAAA,gBAAAmsF,EAAAnsF,KAAA,GA+BanM,EAAKo6B,mBAAmB29D,EAAWxrF,MAAOtH,EAAYmoB,KAAKhlB,SA/BxE,QA+BZwuF,EA/BY0B,EAAAppF,KAAA,YAkCV0nF,EAlCU,CAAA0B,EAAAnsF,KAAA,YAqCNgiB,EAAgBnuB,EAAKuQ,gBAAgB,CAAC,UAAW,kBAGjD6nF,EAAoBp4F,EAAKwM,MAAMoqF,GAAkBt4E,IAAIte,EAAKwM,MAAM2rF,IAClEnB,EAAmBh3F,EAAKwM,MAAMkrF,GAAWlvF,MAAM4vF,GAE/C9E,IACF0D,EAAmBh3F,EAAKgQ,iBAAiBgnF,EAAkB,IAAIxuF,MAAM2lB,IAGlEnuB,EAAKwM,MAAMwqF,GAAkB54F,QA/CtB,CAAAk6F,EAAAnsF,KAAA,gBAAAmsF,EAAA57E,OAAA,SAgDH1c,EAAKguB,8BAA8BtB,EAAesqE,IAhD/C,eAAAsB,EAAA57E,OAAA,SAuDb,MAvDa,yBAAA47E,EAAAhrF,SAAAwqF,EAAAh9F,SA5xOH,gBAAAy9F,GAAA,OAAAV,EAAArqF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAq1OnBq3E,wBAr1OmB13E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAq1OO,SAAA4sF,IAAA,IAAAptF,EAAAF,EAAAyf,EAAA8tE,EAAAhrF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0sF,GAAA,cAAAA,EAAAxsF,KAAAwsF,EAAAvsF,MAAA,UAAOf,EAAPqtF,EAAA35F,OAAA,QAAA0qB,IAAAivE,EAAA,GAAAA,EAAA,GAAiB,KAAMvtF,EAAvButF,EAAA35F,OAAA,QAAA0qB,IAAAivE,EAAA,GAAAA,EAAA,GAAyC,KAC5DrtF,IACHA,EAAUpL,EAAKjF,MAAMqQ,UAElBF,GAAmBlL,EAAKjF,MAAM4T,mBACjCzD,EAAkBlL,EAAKjF,MAAM8zB,oBAAoB7uB,EAAKjF,MAAM4T,mBAGzDvD,GAAYF,EARO,CAAAwtF,EAAAvsF,KAAA,eAAAusF,EAAAh8E,OAAA,UASf,GATe,cAYpBiO,EAAS3qB,EAAKwM,MAAM,GAZAksF,EAAAvsF,KAAA,EAalBnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAytF,EAAAl+F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAAgtF,EAAOrsF,GAAP,IAAAtH,EAAA4zF,EAAAC,EAAA1pE,EAAA4nE,EAAA,OAAAlrE,EAAA7wB,EAAA+Q,KAAA,SAAA+sF,GAAA,cAAAA,EAAA7sF,KAAA6sF,EAAA5sF,MAAA,UAC9ClH,EAAciG,EAAgBqB,IACjBtH,EAAY8C,UAAUwS,KAAK,SAAAle,GAAC,MAAgB,aAAXA,EAAEY,OAFF,CAAA87F,EAAA5sF,KAAA,gBAAA4sF,EAAA5sF,KAAA,EAOxC4P,QAAQqD,IAAI,CACpBpf,EAAKwvB,iBAAiBpkB,EAASnG,GAAa,GAC5CjF,EAAKwyE,oBAAoBvtE,EAAa,MAAM,KATI,OAAA4zF,EAAAE,EAAA7pF,KAAA4pF,EAAAr+F,OAAA6yB,EAAA,EAAA7yB,CAAAo+F,EAAA,GAKhDzpE,EALgD0pE,EAAA,IAMhD9B,EANgD8B,EAAA,KAY1B1pE,IACtBzE,EAASA,EAAO3d,KAAKgqF,EAAiBxuF,MAAM4mB,KAbI,yBAAA2pE,EAAAzrF,SAAAsrF,EAAA99F,SAAhD,gBAAAk+F,GAAA,OAAAL,EAAAnrF,MAAA1S,KAAA2S,YAAA,IAbkB,cAAAirF,EAAAh8E,OAAA,SA+BjBiO,GA/BiB,yBAAA+tE,EAAAprF,SAAAkrF,EAAA19F,SAr1OPA,KAs3OnB63E,cAt3OmBl4E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAs3OH,SAAAqtF,IAAA,IAAA/tF,EAAAyf,EAAA/lB,EAAAs0F,EAAAzrF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAmtF,GAAA,cAAAA,EAAAjtF,KAAAitF,EAAAhtF,MAAA,eAAOjB,EAAPguF,EAAAp6F,OAAA,QAAA0qB,IAAA0vE,EAAA,GAAAA,EAAA,GAAyB,OACfl5F,EAAKjF,MAAM4T,mBACjCzD,EAAkBlL,EAAKjF,MAAM8zB,oBAAoB7uB,EAAKjF,MAAM4T,mBAE1Dgc,EAAS3qB,EAAKwM,MAAM,GACpB5H,EAAkB5E,EAAKwM,MAAM,GALnB2sF,EAAAhtF,KAAA,EAMRnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAkuF,EAAA3+F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAAytF,EAAO9sF,GAAP,IAAAtH,EAAAq0F,EAAAC,EAAAC,EAAA1sE,EAAA,OAAAhB,EAAA7wB,EAAA+Q,KAAA,SAAAytF,GAAA,cAAAA,EAAAvtF,KAAAutF,EAAAttF,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgBktF,EAAAttF,KAAA,EAEX4P,QAAQqD,IAAI,CACnDpf,EAAKy2F,WAAWlqF,EAAOtH,GACvBjF,EAAKgF,mBAAmBC,GAAa,GAAO,KAJM,OAAAq0F,EAAAG,EAAAvqF,KAAAqqF,EAAA9+F,OAAA6yB,EAAA,EAAA7yB,CAAA6+F,EAAA,GAE7CE,EAF6CD,EAAA,GAEpCzsE,EAFoCysE,EAAA,GAOhDC,GAAW1sE,IACbnC,EAASA,EAAO3d,KAAKwsF,EAAQhxF,MAAMskB,EAAgBloB,kBACnDA,EAAkBA,EAAgBoI,KAAK8f,EAAgBloB,kBATL,wBAAA60F,EAAAnsF,SAAA+rF,EAAAv+F,SAAhD,gBAAA4+F,GAAA,OAAAN,EAAA5rF,MAAA1S,KAAA2S,YAAA,IANQ,cAoBdkd,EAASA,EAAOrM,IAAI1Z,GApBNu0F,EAAAz8E,OAAA,SAsBPiO,GAtBO,wBAAAwuE,EAAA7rF,SAAA2rF,EAAAn+F,SAt3OGA,KA84OnB6+F,aA94OmBl/F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA84OJ,SAAAguF,IAAA,IAAAC,EAAAhrE,EAAA,OAAA/C,EAAA7wB,EAAA+Q,KAAA,SAAA8tF,GAAA,cAAAA,EAAA5tF,KAAA4tF,EAAA3tF,MAAA,cAGb0lB,MAAMkoE,UAAUC,IAAM,WACpB,OAAOl/F,KAAKilC,OAAO,SAAUk6D,EAAIC,GAAM,OAAOD,EAAKC,GAAO,IAG5DroE,MAAMkoE,UAAU/oF,IAAM,WACpB,OAAOrE,KAAKqE,IAAIxD,MAAM,KAAM1S,OAG9B+2B,MAAMkoE,UAAUI,IAAM,WACpB,OAAOr/F,KAAKk/F,MAAQl/F,KAAKgE,QAGrB+6F,EAAM,GACNhrE,EAAsB7uB,EAAKjF,MAAM8zB,oBAhB1BirE,EAAA3tF,KAAA,EAiBPnM,EAAKwL,aAAa/Q,OAAOoE,KAAKgwB,GAA9B,eAAAurE,EAAA3/F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAoD,SAAAyuF,EAAOl+D,GAAP,IAAAjxB,EAAAwD,EAAA,OAAAod,EAAA7wB,EAAA+Q,KAAA,SAAAsuF,GAAA,cAAAA,EAAApuF,KAAAouF,EAAAnuF,MAAA,cAClDjB,EAAkB2jB,EAAoBsN,GACtCztB,EAAsB,SAAbytB,EAFyCm+D,EAAAnuF,KAAA,EAGlDnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAqvF,EAAA9/F,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAA4uF,EAAOjuF,GAAP,IAAAtH,EAAAw1F,EAAAC,EAAA3yF,EAAA4yF,EAAAC,EAAAC,EAAAC,EAAA,OAAAhvE,EAAA7wB,EAAA+Q,KAAA,SAAA+uF,GAAA,cAAAA,EAAA7uF,KAAA6uF,EAAA5uF,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgBwuF,EAAA5uF,KAAA,EAEhCnM,EAAKiP,gBAAgBhK,EAAYmD,QAASsG,EAAQ,KAAM,MAAM,EAAO,KAAM,OAF3C,OAE9C+rF,EAF8CM,EAAA7rF,KAG9CwrF,EAAS,GACX3yF,EAAY,KACV4yF,EAAO,GACPC,EAAS,GACTC,EAAW,GAEXC,EAAUL,EAAMA,EAAM37F,OAAS,GAErC27F,EAAM17F,QAAQ,SAAAu5C,GACPvwC,IACH2yF,EAAOhyF,KAAK,SACZgyF,EAAOhyF,KAAK,QAGZX,EAAY,GACZ+yF,EAAQE,cAAcj8F,QAAQ,SAAAk8F,GAC5B,IAAMC,EAAgBj2F,EAAY8C,UAAUwS,KAAK,SAAA4gF,GAAE,OAAKA,EAAG/yF,QAAQC,gBAAkB4yF,EAAG9yF,aAAaE,gBACjG6yF,GACFnzF,EAAUW,KAAKwyF,KAKnBR,EAAOhyF,KAAK,YACZgyF,EAAOhyF,KAAK,cAEZkyF,EAAM,KAAW,GACjBC,EAAQ,KAAW,GAEnB9yF,EAAUhJ,QAAQ,SAAA1C,GAChBq+F,EAAOhyF,KAAK,OAASrM,EAAEY,MACvBy9F,EAAOhyF,KAAK,SAAWrM,EAAEY,MAEzB29F,EAAOv+F,EAAEY,MAAQ,GACjB49F,EAASx+F,EAAEY,MAAQ,KAGrB09F,EAAKjyF,KAAKgyF,EAAO5xF,KAAK,OAGxB,IAAMsI,EAAO6gB,IAAqB,IAAdqmB,EAAE3oC,WAAkBoB,OAAO,cACzCm0D,EAAOllE,EAAKwM,MAAM8rC,EAAE8iD,UAAU98E,IAAI,MAAM7V,QAAQ,GAChD4yF,EAAQ9yF,WAAW+vC,EAAEgjD,WAErBC,EAAM,GACZA,EAAI7yF,KAAJ,GAAAjH,OAAY8K,EAAZ,KAAA9K,OAAqB06B,IACrBo/D,EAAI7yF,KAAK0I,GACTmqF,EAAI7yF,KAAKw8D,GACTq2B,EAAI7yF,KAAK2yF,GAELjqF,GAAQ,eACVwpF,EAAM,KAASlyF,KAAKH,WAAW28D,IAC/B21B,EAAQ,KAASnyF,KAAKH,WAAW8yF,KAGnCtzF,EAAUhJ,QAAQ,SAAAy8F,GAChB,IAAMC,EAAQnjD,EAAE0iD,cAAczgF,KAAK,SAAAle,GAAC,OAAKA,EAAE8L,aAAaE,gBAAkBmzF,EAAMpzF,QAAQC,gBACpFqzF,EAAQ,GACRC,EAAS,GACb,GAAIF,EAAO,CAGT,GAFAE,EAAU37F,EAAKwM,MAAMivF,EAAMG,WAAWx9F,QAAwC,UAA9BmK,WAAWkzF,EAAMG,WACjEF,EAAS17F,EAAKwM,MAAMivF,EAAMv2B,MAAM9mE,QAA6C,UAAnC4B,EAAKwM,MAAMivF,EAAMv2B,MAAM5mD,IAAI,MAClB,qBAAxCm9E,EAAK,GAAAh6F,OAAI+5F,EAAMv+F,KAAV,kBAAgD,CAC9D,IAAM4+F,EAAiB77F,EAAKwM,MAAMivF,EAAK,GAAAh6F,OAAI+5F,EAAMv+F,KAAV,mBAAgCqhB,IAAI,MACtEu9E,EAAez9F,UAClBs9F,EAAQA,EAAM1uF,KAAK6uF,IAInBzqF,GAAQ,eACLhT,MAAMmK,WAAWmzF,KACpBd,EAAOY,EAAMv+F,MAAMyL,KAAKH,WAAWmzF,IAEhCt9F,MAAMmK,WAAWozF,KACpBd,EAASW,EAAMv+F,MAAMyL,KAAKH,WAAWozF,KAK3CJ,EAAI7yF,KAAKgzF,GACTH,EAAI7yF,KAAKizF,KAGXhB,EAAKjyF,KAAK6yF,EAAIzyF,KAAK,QAGrBrO,OAAOoE,KAAK+7F,GAAQ77F,QAAQ,SAAA1C,GAC1B,IAAMy/F,EAAUlB,EAAOv+F,GAAG29F,MAAQY,EAAOv+F,GAAGyC,OAC5CkB,EAAK+d,UAAL,GAAAtc,OAAkB8K,EAAlB,KAAA9K,OAA2B06B,EAA3B,KAAA16B,OAAuCpF,EAAvC,iBAAAoF,OAAwDq6F,MAG1DrhG,OAAOoE,KAAKg8F,GAAU97F,QAAQ,SAAA1C,GAC5B,IAAM0/F,EAAWlB,EAASx+F,GAAG29F,MAAQa,EAASx+F,GAAGyC,OACjDkB,EAAK+d,UAAL,GAAAtc,OAAkB8K,EAAlB,KAAA9K,OAA2B06B,EAA3B,KAAA16B,OAAuCpF,EAAvC,kBAAAoF,OAAyDs6F,MAO3DlC,EAAInxF,KAAKiyF,EAAK7xF,KAAK,OAvGiC,yBAAAiyF,EAAAztF,SAAAktF,EAAA1/F,SAAhD,gBAAAkhG,GAAA,OAAAzB,EAAA/sF,MAAA1S,KAAA2S,YAAA,IAHkD,wBAAA6sF,EAAAhtF,SAAA+sF,EAAAv/F,SAApD,gBAAAmhG,GAAA,OAAA7B,EAAA5sF,MAAA1S,KAAA2S,YAAA,IAjBO,OA+HbzN,EAAK+d,UAAU87E,EAAI/wF,KAAK,OA/HX,wBAAAgxF,EAAAxsF,SAAAssF,EAAA9+F,SA94OIA,KA+gPnBm3E,gBA/gPmBx3E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+gPD,SAAAswF,IAAA,IAAA/4D,EAAAj4B,EAAAixF,EAAAxxE,EAAAyxE,EAAA3uF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAqwF,GAAA,cAAAA,EAAAnwF,KAAAmwF,EAAAlwF,MAAA,cAAOg3B,EAAPi5D,EAAAt9F,OAAA,QAAA0qB,IAAA4yE,EAAA,GAAAA,EAAA,GAAkB,KAAMlxF,EAAxBkxF,EAAAt9F,OAAA,QAAA0qB,IAAA4yE,EAAA,GAAAA,EAAA,GAA0C,KAAMD,EAAhDC,EAAAt9F,OAAA,QAAA0qB,IAAA4yE,EAAA,GAAAA,EAAA,GAA+D,KAC3EzxE,EAAS3qB,EAAKwM,MAAM,GAEnBtB,IACHA,EAAkBlL,EAAKjF,MAAM8zB,oBAAoB7uB,EAAKjF,MAAM4T,mBAJ9C0tF,EAAAlwF,KAAA,EAOVnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAoxF,EAAA7hG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAA2wF,EAAOhwF,GAAP,IAAAtH,EAAA4F,EAAA2xF,EAAA,OAAA1wE,EAAA7wB,EAAA+Q,KAAA,SAAAywF,GAAA,cAAAA,EAAAvwF,KAAAuwF,EAAAtwF,MAAA,cAC9ClH,EAAciG,EAAgBqB,GAC9B1B,EAAgBs4B,EAAW,CAACA,GAAY,KAFMs5D,EAAAtwF,KAAA,EAGrBnM,EAAK+oF,qBAAqB9jF,EAAYmoB,KAAKhlB,QAAS+zF,EAActxF,GAH7C,QAG9C2xF,EAH8CC,EAAAvtF,OAI5BstF,EAAiB51D,QACvCjc,EAASA,EAAO3d,KAAKwvF,EAAiB51D,QALY,wBAAA61D,EAAAnvF,SAAAivF,EAAAzhG,SAAhD,gBAAA4hG,GAAA,OAAAJ,EAAA9uF,MAAA1S,KAAA2S,YAAA,IAPU,cAAA4uF,EAAA3/E,OAAA,SAeTiO,GAfS,wBAAA0xE,EAAA/uF,SAAA4uF,EAAAphG,SA/gPCA,KAgiPnBu3E,gBAAkB,WAMhB,OALKryE,EAAK0wB,aAGR1wB,EAAK0wB,aAAa5yB,SAASkC,EAAKjF,OAFhCiF,EAAK0wB,aAAe,IAAIjF,EAAazrB,EAAKjF,OAIrCiF,EAAK0wB,cAtiPK51B,KAwiPnB6hG,oBAAsB,WACpB,IAAMhyE,EAAS,GACTzf,EAAkBlL,EAAKjF,MAAMmQ,gBASnC,OAPAzQ,OAAOoE,KAAKqM,GAAiBnM,QAAQ,SAAAwN,GACnC,IAAMqwF,EAAiB58F,EAAK68F,kBAAkB3xF,EAAgBqB,IAC9D9R,OAAOoE,KAAK+9F,GAAgB79F,QAAQ,SAAAokC,GAClCxY,EAAOwY,GAAYy5D,EAAez5D,OAI/BxY,GAnjPU7vB,KAqjPnB+hG,kBAAoB,SAAC53F,GACnB,IAAM0lB,EAAS,GACT8D,EAAmBzuB,EAAK8uB,uBACxBw9C,EAAYtsE,EAAKuQ,gBAAgB,CAAC,cAiBxC,OAhBA9V,OAAOoE,KAAKytE,GAAWvtE,QAAQ,SAAAokC,GAC7B,IAAMI,EAAiB+oC,EAAUnpC,GAC3BuwD,EAAiB1zF,EAAKsrB,aAAa,CAAC,iBAAkBmD,GAAmB8U,IAAmB,IAC7FA,EAAepW,SAAWumE,EAAenkE,SAAStqB,EAAYmoB,KAAK7gB,QAAWg3B,EAAemlB,oBAAsBnlB,EAAemlB,kBAAkBn5B,SAASd,KAIlI,SAA5B8U,EAAexK,SACjBpO,EAAOwY,GAAYI,EAEGt+B,EAAY8C,UAAUwS,KAAK,SAAAle,GAAC,OAAKA,EAAE8wB,SAAW9wB,EAAEY,KAAKoL,gBAAkBk7B,EAAexK,SAAS1wB,kBAEnHsiB,EAAOwY,GAAYI,MAIlB5Y,GAzkPU7vB,KA2kPnB40B,qBAAuB,SAACotE,GAA6C,IAAtClwC,EAAsCn/C,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAA1B,MAAOsvF,EAAmBtvF,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAZ,QACjD0gB,EAAgBnuB,EAAKwM,MAAMxM,EAAKuQ,gBAAgB,CAAC,UAAW,mBAC5D4jF,EAAiBn0F,EAAKwM,MAAMxM,EAAKuQ,gBAAgB,CAAC,UAAW,oBAC7DysF,EAAc,CAClBtuC,IAAO,CACLuuC,MAAS9uE,EAAc7P,IAAI,YAC3B4+E,OAAU/I,EAAe71E,IAAI,aAE/BqwC,KAAQ,CACNsuC,MAAS9uE,EAAc7P,IAAI,SAC3B4+E,OAAU/I,EAAe71E,IAAI,UAE/B6+E,MAAS,CACPF,MAAS9uE,EAAc7P,IAAI,IAC3B4+E,OAAU/I,EAAe71E,IAAI,KAE/B8+E,KAAQ,CACNH,MAAS9uE,EAAc7P,IAAI,GAC3B4+E,OAAU/I,EAAe71E,IAAI,KAIjC,OADAw+E,EAAQ98F,EAAKwM,MAAMswF,MACLA,EAAM1+F,QACX0+F,EAAMt0F,MAAMw0F,EAAYpwC,GAAWmwC,IAErC,MApmPUjiG,KAsmPnBuiG,kCAtmPmB,eAAAC,EAAA7iG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAsmPiB,SAAA2xF,EAAOnyF,GAAP,IAAAnG,EAAA4F,EAAA2yF,EAAAlxB,EAAAmxB,EAAAhwF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0xF,GAAA,cAAAA,EAAAxxF,KAAAwxF,EAAAvxF,MAAA,cAAgBlH,EAAhBw4F,EAAA3+F,OAAA,QAAA0qB,IAAAi0E,EAAA,GAAAA,EAAA,GAA8B,KAAM5yF,EAApC4yF,EAAA3+F,OAAA,QAAA0qB,IAAAi0E,EAAA,GAAAA,EAAA,GAAoD,KAChFD,EAA4B,GAC5BlxB,EAAYtsE,EAAKuQ,gBAAgB,CAAC,cAFNmtF,EAAAvxF,KAAA,EAI5BnM,EAAKwL,aAAa/Q,OAAOoE,KAAKytE,GAA9B,eAAAqxB,EAAAljG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA0C,SAAAgyF,EAAOz6D,GAAP,IAAAI,EAAAr4B,EAAAyf,EAAA+F,EAAA,OAAA5E,EAAA7wB,EAAA+Q,KAAA,SAAA6xF,GAAA,cAAAA,EAAA3xF,KAAA2xF,EAAA1xF,MAAA,WAC1CtB,GAAkBA,EAAc0kB,SAAS4T,GADC,CAAA06D,EAAA1xF,KAAA,eAAA0xF,EAAAnhF,OAAA,qBAKxC6mB,EAAiB+oC,EAAUnpC,IAEbhW,QAP0B,CAAA0wE,EAAA1xF,KAAA,eAAA0xF,EAAAnhF,OAAA,kBAWxCxR,EAAkB,IACRjG,EAAYsH,OAAStH,EAEjC0lB,EAAS,KAdiCkzE,EAAArwE,GAetC2V,EAfsC06D,EAAA1xF,KAgBvC,SAhBuC0xF,EAAArwE,GAAA,GAmBvC,SAnBuCqwE,EAAArwE,GAAA,2BAAAqwE,EAAA1xF,KAAA,GAiB3BnM,EAAKmyE,wBAAwB/mE,EAASF,GAjBX,eAiB1Cyf,EAjB0CkzE,EAAA3uF,KAAA2uF,EAAAnhF,OAAA,2BAoBpCgU,EAAe1wB,EAAKqyE,kBApBgBwrB,EAAA1xF,KAAA,GAqB3BukB,EAAapC,oBAAoBljB,EAASF,GArBf,eAqB1Cyf,EArB0CkzE,EAAA3uF,KAAA2uF,EAAAnhF,OAAA,2BAAAmhF,EAAAnhF,OAAA,oBA2B1CiO,IACFA,EAASA,EAAOrM,IAAI,MAChBilB,EAAe5T,wBACjBhF,EAAS3qB,EAAK0vB,qBAAqB/E,EAAQ4Y,EAAe5T,sBAAuB4T,EAAe+uC,mBAElGkrB,EAA0Br6D,GAAYxY,GAhCM,yBAAAkzE,EAAAvwF,SAAAswF,EAAA9iG,SAA1C,gBAAAgjG,GAAA,OAAAH,EAAAnwF,MAAA1S,KAAA2S,YAAA,IAJ4B,cAAAiwF,EAAAhhF,OAAA,SAwC3B8gF,GAxC2B,wBAAAE,EAAApwF,SAAAiwF,EAAAziG,SAtmPjB,gBAAAijG,GAAA,OAAAT,EAAA9vF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAgpPnBkjG,8BAhpPmB,eAAAC,EAAAxjG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAgpPa,SAAAsyF,EAAOj5F,GAAP,IAAAk5F,EAAAvB,EAAAwB,EAAA3wF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAqyF,GAAA,cAAAA,EAAAnyF,KAAAmyF,EAAAlyF,MAAA,cAAAiyF,EAAAt/F,OAAA,QAAA0qB,IAAA40E,EAAA,GAAAA,EAAA,GAAoC,KAC5DD,EAAwB,GACxBvB,EAAiB58F,EAAK68F,kBAAkB53F,GAFhBo5F,EAAAlyF,KAAA,EAIxBnM,EAAKwL,aAAa/Q,OAAOoE,KAAK+9F,GAA9B,eAAA0B,EAAA7jG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+C,SAAA2yF,EAAOp7D,GAAP,IAAAq7D,EAAAj7D,EAAA7S,EAAA,OAAA5E,EAAA7wB,EAAA+Q,KAAA,SAAAyyF,GAAA,cAAAA,EAAAvyF,KAAAuyF,EAAAtyF,MAAA,OAC/CqyF,EAAW,KACTj7D,EAAiBq5D,EAAez5D,GAFas7D,EAAAjxE,GAI3C2V,EAJ2Cs7D,EAAAtyF,KAK5C,SAL4CsyF,EAAAjxE,GAAA,EAQ5C,WAR4CixE,EAAAjxE,GAAA,EAS5C,YAT4CixE,EAAAjxE,GAAA,EAY5C,SAZ4CixE,EAAAjxE,GAAA,0BAAAixE,EAAAtyF,KAAA,EAM9BnM,EAAKwyE,oBAAoBvtE,EAAa,MAAM,GANd,cAM/Cu5F,EAN+CC,EAAAvvF,KAAAuvF,EAAA/hF,OAAA,0BAAA+hF,EAAAtyF,KAAA,GAU9BnM,EAAKyyE,uBAAuBxtE,EAAa,MAAM,GAVjB,eAU/Cu5F,EAV+CC,EAAAvvF,KAAAuvF,EAAA/hF,OAAA,2BAazCgU,EAAe1wB,EAAKqyE,kBAbqBosB,EAAAtyF,KAAA,GAc9BukB,EAAa9C,SAAS3oB,EAAYmoB,KAAKhlB,SAdT,eAc/Co2F,EAd+CC,EAAAvvF,KAAAuvF,EAAA/hF,OAAA,2BAAA+hF,EAAA/hF,OAAA,oBAoB/C8hF,IACFA,EAAWA,EAASlgF,IAAI,MACpBilB,EAAe5T,uBAAyB4T,EAAe+uC,mBACzDksB,EAAWx+F,EAAK0vB,qBAAqB8uE,EAAUj7D,EAAe5T,sBAAuB4T,EAAe+uC,mBAEtG6rB,EAAsBh7D,GAAYq7D,GAzBe,yBAAAC,EAAAnxF,SAAAixF,EAAAzjG,SAA/C,gBAAA4jG,GAAA,OAAAJ,EAAA9wF,MAAA1S,KAAA2S,YAAA,IAJwB,cAAA4wF,EAAA3hF,OAAA,SAiCvByhF,GAjCuB,wBAAAE,EAAA/wF,SAAA4wF,EAAApjG,SAhpPb,gBAAA6jG,GAAA,OAAAV,EAAAzwF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAmrPnB8jG,iBAnrPmB,eAAAC,EAAApkG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAmrPA,SAAAkzF,EAAOvyF,EAAOtH,GAAd,IAAA4F,EAAAyhE,EAAAyyB,EAAAC,EAAAvxF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAizF,GAAA,cAAAA,EAAA/yF,KAAA+yF,EAAA9yF,MAAA,cAA2BtB,EAA3Bm0F,EAAAlgG,OAAA,QAAA0qB,IAAAw1E,EAAA,GAAAA,EAAA,GAA2C,KACtD1yB,EAAYtsE,EAAKuQ,gBAAgB,CAAC,cAClCwuF,EAAgB,GAFLE,EAAA9yF,KAAA,EAIXnM,EAAKwL,aAAa/Q,OAAOoE,KAAKytE,GAA9B,eAAA4yB,EAAAzkG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA0C,SAAAuzF,EAAOh8D,GAAP,IAAAI,EAAA5Y,EAAAmC,EAAAsyE,EAAAC,EAAA5L,EAAAQ,EAAAqL,EAAAC,EAAAC,EAAAxH,EAAAtnE,EAAA,OAAA5E,EAAA7wB,EAAA+Q,KAAA,SAAAyzF,GAAA,cAAAA,EAAAvzF,KAAAuzF,EAAAtzF,MAAA,WAE1CtB,GAAkBA,EAAc0kB,SAAS4T,GAFC,CAAAs8D,EAAAtzF,KAAA,eAAAszF,EAAA/iF,OAAA,qBAMxC6mB,EAAiB+oC,EAAUnpC,IAEbhW,UAA6C,IAAlCoW,EAAem8D,eARA,CAAAD,EAAAtzF,KAAA,eAAAszF,EAAA/iF,OAAA,iBAY1CiO,EAAS,KACTmC,EAAkB,KAbwB2yE,EAAAjyE,GAetC2V,EAfsCs8D,EAAAtzF,KAgBvC,WAhBuCszF,EAAAjyE,GAAA,GAiBvC,YAjBuCiyE,EAAAjyE,GAAA,GAuCvC,SAvCuCiyE,EAAAjyE,GAAA,GA6DvC,SA7DuCiyE,EAAAjyE,GAAA,oBAAAiyE,EAAA7rD,GAkBlCrQ,EAAem8D,eAlBmBD,EAAAtzF,MAAAszF,EAAA7rD,GAAA,yBAAA6rD,EAAAtzF,KAAA,GAqBJ4P,QAAQqD,IAAI,CAC5Cpf,EAAK+1F,cAAcxpF,EAAOtH,GAC1BjF,EAAKgF,mBAAmBC,GAAa,GAAO,KAvBR,eAAAm6F,EAAAK,EAAAvwF,KAAAmwF,EAAA5kG,OAAA6yB,EAAA,EAAA7yB,CAAA2kG,EAAA,GAqBrCz0E,EArBqC00E,EAAA,IAqB7BvyE,EArB6BuyE,EAAA,MA4B9B5L,EAAexuF,EAAY8C,UAAUwS,KAAK,SAAAle,GAAC,OAAKA,EAAEY,OAASsmC,EAAexK,aAE1EjM,EAAgBhoB,yBAAyB2uF,EAAarrF,QAAQC,iBAC1D4rF,EAAqBnnE,EAAgBhoB,yBAAyB2uF,EAAarrF,QAAQC,eACzFsiB,EAASA,EAAOniB,MAAMyrF,IAhCUwL,EAAA/iF,OAAA,2BAAA+iF,EAAA/iF,OAAA,oBAAA+iF,EAAAljD,GAwClChZ,EAAem8D,eAxCmBD,EAAAtzF,MAAAszF,EAAAljD,GAAA,yBAAAkjD,EAAAtzF,KAAA,GA2CJ4P,QAAQqD,IAAI,CAC5Cpf,EAAKy2F,WAAWlqF,EAAOtH,GACvBjF,EAAKgF,mBAAmBC,GAAa,GAAO,KA7CR,eAAAq6F,EAAAG,EAAAvwF,KAAAqwF,EAAA9kG,OAAA6yB,EAAA,EAAA7yB,CAAA6kG,EAAA,GA2CrC30E,EA3CqC40E,EAAA,IA2C7BzyE,EA3C6ByyE,EAAA,MAkD9BC,EAAev6F,EAAY8C,UAAUwS,KAAK,SAAAle,GAAC,MAAgB,aAAXA,EAAEY,SAElD6vB,EAAgBhoB,yBAAyB06F,EAAap3F,QAAQC,iBAC1D2vF,EAAyBlrE,EAAgBhoB,yBAAyB06F,EAAap3F,QAAQC,eAC7FsiB,EAASA,EAAOniB,MAAMwvF,IAtDUyH,EAAA/iF,OAAA,2BAAA+iF,EAAA/iF,OAAA,oBA8DpCgU,EAAe1wB,EAAKqyE,kBA9DgBotB,EAAAltB,GA+DlChvC,EAAem8D,eA/DmBD,EAAAtzF,KAgEnC,QAhEmCszF,EAAAltB,GAAA,GAmEnC,iBAnEmCktB,EAAAltB,GAAA,GA0EnC,qBA1EmCktB,EAAAltB,GAAA,2BAAAktB,EAAAtzF,KAAA,GAiEvBukB,EAAanE,OAAOhgB,EAAOtH,GAjEJ,eAiEtC0lB,EAjEsC80E,EAAAvwF,KAAAuwF,EAAA/iF,OAAA,2BAAA+iF,EAAAtzF,KAAA,GAoEvBukB,EAAa9C,SAAS3oB,EAAYmoB,KAAKhlB,SApEhB,eAoEtCuiB,EApEsC80E,EAAAvwF,QAsEpCyb,EAAS3qB,EAAKgQ,iBAAiB2a,EAAQ,IACvCA,EAAS3qB,EAAK0vB,qBAAqB/E,EAAQ4Y,EAAe5T,sBAAuB4T,EAAe+uC,mBAvE5DmtB,EAAA/iF,OAAA,2BAAA+iF,EAAAtzF,KAAA,GA2EvBukB,EAAapC,oBAAoBrpB,GA3EV,eA2EtC0lB,EA3EsC80E,EAAAvwF,KAAAuwF,EAAA/iF,OAAA,2BAAA+iF,EAAA/iF,OAAA,mCAAA+iF,EAAA/iF,OAAA,oBAqF/B,OAAXiO,GAAmB3qB,EAAKwM,MAAMme,GAAQva,GAAG,KAC3C2uF,EAAc57D,GAAYxY,GAtFkB,yBAAA80E,EAAAnyF,SAAA6xF,EAAArkG,SAA1C,gBAAA6kG,GAAA,OAAAT,EAAA1xF,MAAA1S,KAAA2S,YAAA,IAJW,cAAAwxF,EAAAviF,OAAA,SA8FVqiF,GA9FU,wBAAAE,EAAA3xF,SAAAwxF,EAAAhkG,SAnrPA,gBAAA8kG,EAAAC,GAAA,OAAAhB,EAAArxF,MAAA1S,KAAA2S,YAAA,GAAA3S,KAmxPnBiuF,qBAnxPmBtuF,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAmxPI,SAAAk0F,IAAA,IAAA13F,EAAA+zF,EAAAtxF,EAAA6hB,EAAA/R,EAAA2xD,EAAAmc,EAAAsX,EAAAtyF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAg0F,GAAA,cAAAA,EAAA9zF,KAAA8zF,EAAA7zF,MAAA,UAAO/D,EAAP23F,EAAAjhG,OAAA,QAAA0qB,IAAAu2E,EAAA,GAAAA,EAAA,GAAiB,KAAM5D,EAAvB4D,EAAAjhG,OAAA,QAAA0qB,IAAAu2E,EAAA,GAAAA,EAAA,GAAsC,MAAOl1F,EAA7Ck1F,EAAAjhG,OAAA,QAAA0qB,IAAAu2E,EAAA,GAAAA,EAAA,GAA6D,KAC7E33F,IACHA,EAAUpI,EAAKjF,MAAMkK,YAAYmoB,KAAKhlB,SAGlCskB,EALe,wBAAAjrB,OAKyB2G,EALzB,KAAA3G,OAKoC06F,EALpC,KAAA16F,OAKoDkJ,KAAKC,UAAUC,IAErE,QADb8P,EAAa3a,EAAK0tC,cAAchhB,IANjB,CAAAszE,EAAA7zF,KAAA,eAAA6zF,EAAAtjF,OAAA,SAQZ/B,GARY,cAWf2xD,EAAYtsE,EAAKuQ,gBAAgB,CAAC,cAClCk4E,EAAoB,GAZLuX,EAAA7zF,KAAA,GAcfnM,EAAKwL,aAAa/Q,OAAOoE,KAAKytE,GAA9B,eAAA2zB,EAAAxlG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA0C,SAAAs0F,EAAO3zF,GAAP,IAAAg3B,EAAAkyD,EAAA0K,EAAA33D,EAAA43D,EAAAxmE,EAAA,OAAA9N,EAAA7wB,EAAA+Q,KAAA,SAAAq0F,GAAA,cAAAA,EAAAn0F,KAAAm0F,EAAAl0F,MAAA,WAE1CtB,GAAkBA,EAAc0kB,SAAShjB,GAFC,CAAA8zF,EAAAl0F,KAAA,eAAAk0F,EAAA3jF,OAAA,qBAMxC6mB,EAAiB+oC,EAAU//D,IAEb4gB,QAR0B,CAAAkzE,EAAAl0F,KAAA,eAAAk0F,EAAA3jF,OAAA,wBAYxC+4E,EAAkB,CACtBrtF,QAASm7B,EAAegoD,iBAAmBhoD,EAAen7B,SAbdi4F,EAAAl0F,KAAA,EAiBlBnM,EAAKwgF,mBAAmBj0E,EAAOnE,GAjBb,YAiB1C+3F,EAjB0CE,EAAAnxF,MAAA,CAAAmxF,EAAAl0F,KAAA,YAqBxCq8B,EAAsB,MACtB2zD,EAtBwC,CAAAkE,EAAAl0F,KAAA,gBAuBpCi0F,EAAkBpgG,EAAKuQ,gBAAgB,CAAC,QAAS,SAAU4rF,EAAa3rF,gBAvBpC6vF,EAAAn0F,KAAA,GAAAm0F,EAAAl0F,KAAA,GAyBZnM,EAAKutB,yBAAyB6yE,EAAiB3K,GAzBnC,QAyBxCjtD,EAzBwC63D,EAAAnxF,KAAAmxF,EAAAl0F,KAAA,iBAAAk0F,EAAAn0F,KAAA,GAAAm0F,EAAA7yE,GAAA6yE,EAAA,UA2BxC73D,EAAsBxoC,EAAKwM,MAAM,GA3BO,QA+BtCotB,EAAe55B,EAAKgQ,iBAAiBmwF,EAAiB7zB,EAAU//D,GAAO9N,SAAU+pC,GAGvFigD,EAAkBl8E,GAASqtB,EAGtB6uD,EAAkB7hD,QACrB6hD,EAAkB7hD,MAAQ5mC,EAAKwM,MAAM,IAIvCi8E,EAAkB7hD,MAAQ6hD,EAAkB7hD,MAAM55B,KAAKy7E,EAAkBl8E,IA1C7B,yBAAA8zF,EAAA/yF,SAAA4yF,EAAAplG,KAAA,cAA1C,gBAAAwlG,GAAA,OAAAL,EAAAzyF,MAAA1S,KAAA2S,YAAA,IAde,eAAAuyF,EAAAtjF,OAAA,SA4Dd1c,EAAK4a,cAAc8R,EAAe+7D,IA5DpB,yBAAAuX,EAAA1yF,SAAAwyF,EAAAhlG,SAnxPJA,KAi1PnBylG,aAAe,SAACh0F,GACd,IAAKA,EACH,OAAO,KAET,IAAMi0F,EAAmBxgG,EAAKuQ,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,gBACtE,OAAOgwF,GAAoBA,EAAiBtjG,KAAOsjG,EAAiBtjG,KAA7D,iBAAAuE,OAAqF8K,EAArF,SAt1PUzR,KAw1PnBipC,eAAiB,SAACx3B,GAChB,OAAOvM,EAAKuQ,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,iBAz1PnC1V,KA21PnBurE,wBAA0B,SAACj+D,GACzB,IAAKA,EACH,OAAO,EAET,IAAMq4F,EAAgBzgG,EAAKuQ,gBAAgB,CAAC,QAAQ,WAChDmwF,EAAajmG,OAAOoE,KAAK4hG,GAAelmF,KAAK,SAAAhO,GAC/C,IAAMtH,EAAcw7F,EAAcl0F,GAClC,OAAOtH,EAAYkoB,SAAWloB,EAAYmD,SAAWnD,EAAYmD,QAAQC,gBAAkBD,EAAQC,gBAEjGs4F,EAAmB,KAOvB,OANID,GACFC,EAAmBF,EAAcC,IAChBn0F,MAAQm0F,EAEzBC,EAAmB3gG,EAAK4gG,2BAA2Bx4F,GAE9Cu4F,GA32PU7lG,KA62PnB8lG,2BAA6B,SAACx4F,GAC5B,IAAKA,EACH,OAAO,EAET,IAAMkkE,EAAYtsE,EAAKuQ,gBAAgB,CAAC,cACxC,OAAO9V,OAAO2R,OAAOkgE,GAAW/xD,KAAK,SAAAtV,GAAW,OAAKA,EAAYkoB,SAAWloB,EAAYmD,SAAWnD,EAAYmD,QAAQC,gBAAkBD,EAAQC,iBAl3PhIvN,KAo3PnBs4E,6BAp3PmB34E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAo3PY,SAAAi1F,IAAA,IAAAz1F,EAAAF,EAAAixF,EAAA2E,EAAAp0E,EAAA/R,EAAAomF,EAAAC,EAAAC,EAAAxzF,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAk1F,GAAA,cAAAA,EAAAh1F,KAAAg1F,EAAA/0F,MAAA,UAAOf,EAAP61F,EAAAniG,OAAA,QAAA0qB,IAAAy3E,EAAA,GAAAA,EAAA,GAAiB,KAAM/1F,EAAvB+1F,EAAAniG,OAAA,QAAA0qB,IAAAy3E,EAAA,GAAAA,EAAA,GAAyC,KAAM9E,EAA/C8E,EAAAniG,OAAA,QAAA0qB,IAAAy3E,EAAA,GAAAA,EAAA,GAA8D,KAAMH,IAApEG,EAAAniG,OAAA,QAAA0qB,IAAAy3E,EAAA,KAAAA,EAAA,GAGvBv0E,EAHuB,6BAAAjrB,OAGsB2J,EAHtB,KAAA3J,OAGiCyJ,EAAkBP,KAAKC,UAAUnQ,OAAOoE,KAAKqM,IAAoB,OAHlG,KAAAzJ,OAG4G06F,EAH5G,KAAA16F,OAG4Hq/F,KACnJnmF,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QALb,CAAA8iG,EAAA/0F,KAAA,eAAA+0F,EAAAxkF,OAAA,SAMpB1c,EAAKwM,MAAMmO,IANS,cAAAumF,EAAA/0F,KAAA,GASOnM,EAAKmhG,yBAAyB/1F,EAASF,EAAiBixF,EAAc,KAAM2E,GATnF,aASvBC,EATuBG,EAAAhyF,MAAA,CAAAgyF,EAAA/0F,KAAA,gBAWrB60F,EAAoBvmG,OAAO2R,OAAO20F,GAAuBhhE,OAAO,SAACC,EAAKohE,GAE1E,OADAphE,EAAMA,EAAIhzB,KAAKhN,EAAKwM,MAAM40F,KAEzBphG,EAAKwM,MAAM,IAda00F,EAAAxkF,OAAA,SAgBpB1c,EAAKguB,8BAA8BtB,EAAes0E,IAhB9B,eAAAE,EAAAxkF,OAAA,SAkBtB1c,EAAKwM,MAAM,IAlBW,yBAAA00F,EAAA5zF,SAAAuzF,EAAA/lG,SAp3PZA,KAw4PnBumG,oBAx4PmB,eAAAC,EAAA7mG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAw4PG,SAAA21F,EAAOn2F,EAASnG,GAAhB,IAAA0lB,EAAA62E,EAAA,OAAA11E,EAAA7wB,EAAA+Q,KAAA,SAAAy1F,GAAA,cAAAA,EAAAv1F,KAAAu1F,EAAAt1F,MAAA,cACff,IACHA,EAAUpL,EAAKjF,MAAMqQ,SAEjBuf,EAAS,GAJK82E,EAAAt1F,KAAA,EAKWnM,EAAK0hG,wBAAwBz8F,EAAYmoB,KAAK7gB,MAAOnB,GALhE,YAKdo2F,EALcC,EAAAvyF,MAAA,CAAAuyF,EAAAt1F,KAAA,eAAAs1F,EAAAt1F,KAAA,EAOZnM,EAAKwL,aAAag2F,EAAlB,eAAAG,EAAAlnG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAoC,SAAAg2F,EAAOR,EAAgBS,GAAvB,IAAAC,EAAAv+D,EAAA,OAAAzX,EAAA7wB,EAAA+Q,KAAA,SAAA+1F,GAAA,cAAAA,EAAA71F,KAAA61F,EAAA51F,MAAA,cAAA41F,EAAA51F,KAAA,EAEVnM,EAAKgiG,yBAAyB/8F,EAAYmoB,KAAK7gB,MAAOs1F,GAF5C,QAElCC,EAFkCC,EAAA7yF,QAKhCq0B,EAAiBvjC,EAAK4gG,2BAA2BkB,MAErDn3E,EAAO4Y,EAAeh3B,OAASs1F,GAPK,wBAAAE,EAAAz0F,SAAAs0F,EAAA9mG,SAApC,gBAAAmnG,EAAAC,GAAA,OAAAP,EAAAn0F,MAAA1S,KAAA2S,YAAA,IAPY,cAAAg0F,EAAA/kF,OAAA,SAoBbiO,GApBa,wBAAA82E,EAAAn0F,SAAAi0F,EAAAzmG,SAx4PH,gBAAAqnG,EAAAC,GAAA,OAAAd,EAAA9zF,MAAA1S,KAAA2S,YAAA,GAAA3S,KA85PnBknG,yBA95PmB,eAAAK,EAAA5nG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA85PQ,SAAA02F,EAAO/1F,EAAOs1F,GAAd,IAAAn1E,EAAA/R,EAAAmnF,EAAA,OAAAh2E,EAAA7wB,EAAA+Q,KAAA,SAAAu2F,GAAA,cAAAA,EAAAr2F,KAAAq2F,EAAAp2F,MAAA,UACnBugB,EADmB,0BAAAjrB,OACuB8K,EADvB,KAAA9K,OACgCogG,KACnDlnF,EAAa3a,EAAK+tB,8BAA8BrB,IAF7B,CAAA61E,EAAAp2F,KAAA,eAAAo2F,EAAA7lF,OAAA,SAKhB/B,GALgB,cAAA4nF,EAAAp2F,KAAA,EAQKnM,EAAKosB,oBAAoB7f,EAAO,YAAa,CAACs1F,IARnD,cAQnBC,EARmBS,EAAArzF,KAAAqzF,EAAA7lF,OAAA,SASlB1c,EAAKguB,8BAA8BtB,EAAeo1E,EAAiB,OATjD,wBAAAS,EAAAj1F,SAAAg1F,EAAAxnG,SA95PR,gBAAA0nG,EAAAC,GAAA,OAAAJ,EAAA70F,MAAA1S,KAAA2S,YAAA,GAAA3S,KAy6PnB4mG,wBAz6PmB,eAAAgB,EAAAjoG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAy6PO,SAAA+2F,EAAOp2F,EAAOnB,GAAd,IAAAshB,EAAA/R,EAAAmnF,EAAA,OAAAh2E,EAAA7wB,EAAA+Q,KAAA,SAAA42F,GAAA,cAAAA,EAAA12F,KAAA02F,EAAAz2F,MAAA,UAClBugB,EADkB,sBAAAjrB,OACoB8K,EADpB,KAAA9K,OAC6B2J,KAC/CuP,EAAa3a,EAAK+tB,8BAA8BrB,IAF9B,CAAAk2E,EAAAz2F,KAAA,eAAAy2F,EAAAlmF,OAAA,SAIf/B,GAJe,cAAAioF,EAAAz2F,KAAA,EAOMnM,EAAKosB,oBAAoB7f,EAAO,sBAAuB,CAACnB,IAP9D,cAOlB02F,EAPkBc,EAAA1zF,KAAA0zF,EAAAlmF,OAAA,SAQjB1c,EAAKguB,8BAA8BtB,EAAeo1E,IARjC,wBAAAc,EAAAt1F,SAAAq1F,EAAA7nG,SAz6PP,gBAAA+nG,EAAAC,GAAA,OAAAJ,EAAAl1F,MAAA1S,KAAA2S,YAAA,GAAA3S,KAm7PnBqmG,yBAn7PmB1mG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAm7PQ,SAAAm3F,IAAA,IAAA33F,EAAAF,EAAAixF,EAAA6G,EAAAlC,EAAAn2E,EAAAs4E,EAAAx1F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAk3F,GAAA,cAAAA,EAAAh3F,KAAAg3F,EAAA/2F,MAAA,cAAOf,EAAP63F,EAAAnkG,OAAA,QAAA0qB,IAAAy5E,EAAA,GAAAA,EAAA,GAAiB,KAAM/3F,EAAvB+3F,EAAAnkG,OAAA,QAAA0qB,IAAAy5E,EAAA,GAAAA,EAAA,GAAyC,KAAM9G,EAA/C8G,EAAAnkG,OAAA,QAAA0qB,IAAAy5E,EAAA,GAAAA,EAAA,GAA8D,KAAMD,EAApEC,EAAAnkG,OAAA,QAAA0qB,IAAAy5E,EAAA,GAAAA,EAAA,GAA2F,KAAMnC,EAAjGmC,EAAAnkG,OAAA,QAAA0qB,IAAAy5E,EAAA,IAAAA,EAAA,GACpB73F,IACHA,EAAUpL,EAAKjF,MAAMqQ,UAElBF,GAAmBlL,EAAKjF,MAAM8zB,qBAAuB7uB,EAAKjF,MAAM4T,mBACnEzD,EAAkBlL,EAAKjF,MAAM8zB,oBAAoB7uB,EAAKjF,MAAM4T,mBAGxDgc,EAAS,GARUu4E,EAAA/2F,KAAA,GAUnBnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAi4F,EAAA1oG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAAw3F,EAAO72F,GAAP,IAAAuiD,EAAA0yC,EAAA,OAAA11E,EAAA7wB,EAAA+Q,KAAA,SAAAq3F,GAAA,cAAAA,EAAAn3F,KAAAm3F,EAAAl3F,MAAA,cAC9C2iD,EAAkB5jD,EAAgBqB,GAAO6gB,KADKi2E,EAAAl3F,KAAA,EAIrBnM,EAAK0hG,wBAAwB5yC,EAAgBviD,MAAOnB,GAJ/B,YAI9Co2F,EAJ8C6B,EAAAn0F,MAAA,CAAAm0F,EAAAl3F,KAAA,eAAAk3F,EAAAl3F,KAAA,EAS5CnM,EAAKwL,aAAag2F,EAAlB,eAAA8B,EAAA7oG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAoC,SAAA23F,EAAOnC,EAAgBS,GAAvB,IAAAC,EAAAv+D,EAAAiF,EAAA43D,EAAA,OAAAt0E,EAAA7wB,EAAA+Q,KAAA,SAAAw3F,GAAA,cAAAA,EAAAt3F,KAAAs3F,EAAAr3F,MAAA,cACxCi1F,EAAiBphG,EAAKwM,MAAM40F,GADYoC,EAAAr3F,KAAA,EAGVnM,EAAKgiG,yBAAyBlzC,EAAgBviD,MAAOs1F,GAH3C,YAGlCC,EAHkC0B,EAAAt0F,MAAA,CAAAs0F,EAAAr3F,KAAA,cAQhCo3B,EAAiBy/D,GAA8ChjG,EAAK4gG,2BAA2BkB,KAE7EhB,IAAoBv9D,EAAe1oB,cAAgB0oB,EAAen7B,SAAWm7B,EAAen7B,QAAQC,gBAAkBy5F,EAAgBz5F,cAVxH,CAAAm7F,EAAAr3F,KAAA,YAahCq8B,EAAsB,MACtB2zD,EAdgC,CAAAqH,EAAAr3F,KAAA,cAe5Bi0F,EAAkBpgG,EAAKuQ,gBAAgB,CAAC,QAAS,SAAU4rF,EAAa3rF,iBAf5C,CAAAgzF,EAAAr3F,KAAA,gBAAAq3F,EAAAt3F,KAAA,GAAAs3F,EAAAr3F,KAAA,GAkBFnM,EAAKutB,yBAAyB6yE,EAAiB78D,GAlB7C,QAkB9BiF,EAlB8Bg7D,EAAAt0F,KAAAs0F,EAAAr3F,KAAA,iBAAAq3F,EAAAt3F,KAAA,GAAAs3F,EAAAh2E,GAAAg2E,EAAA,kBAyBpCpC,EAAiBphG,EAAKgQ,iBAAiBoxF,EAAgB79D,EAAe9kC,SAAU+pC,GAK3E7d,EAAO4Y,EAAeh3B,SACzBoe,EAAO4Y,EAAeh3B,OAASvM,EAAKwM,MAAM,IAI5Cme,EAAO4Y,EAAeh3B,OAASoe,EAAO4Y,EAAeh3B,OAAOS,KAAKo0F,GAnC7B,yBAAAoC,EAAAl2F,SAAAi2F,EAAAzoG,KAAA,cAApC,gBAAA2oG,EAAAC,GAAA,OAAAJ,EAAA91F,MAAA1S,KAAA2S,YAAA,IAT4C,wBAAA41F,EAAA/1F,SAAA81F,EAAAtoG,SAAhD,gBAAA6oG,GAAA,OAAAR,EAAA31F,MAAA1S,KAAA2S,YAAA,IAVmB,eAAAy1F,EAAAxmF,OAAA,SA6DlBiO,GA7DkB,yBAAAu4E,EAAA51F,SAAAy1F,EAAAjoG,SAn7PRA,KAk/PnB8oG,aAl/PmBnpG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAk/PJ,SAAAi4F,IAAA,IAAA5+F,EAAAovE,EAAAyvB,EAAAr2F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA+3F,GAAA,cAAAA,EAAA73F,KAAA63F,EAAA53F,MAAA,eAAOlH,EAAP6+F,EAAAhlG,OAAA,QAAA0qB,IAAAs6E,EAAA,GAAAA,EAAA,GAAqB,OACd9jG,EAAKjF,MAAMkK,cAC7BA,EAAcjF,EAAKjF,MAAMkK,aAFd8+F,EAAA53F,KAAA,EAIKnM,EAAK2mC,0BAA0B1hC,EAAYmoB,KAAK7gB,MAAO,MAAO,GAAI,GAAI,SAAU,MAJrF,YAIP8nE,EAJO0vB,EAAA70F,MAAA,CAAA60F,EAAA53F,KAAA,eAAA43F,EAAArnF,OAAA,SAMJ1c,EAAKwM,MAAM6nE,GAAK/1D,IAAIte,EAAKwM,MAAM,OAN3B,cAAAu3F,EAAArnF,OAAA,SAQN,MARM,wBAAAqnF,EAAAz2F,SAAAu2F,EAAA/oG,SAl/PIA,KA4/PnBk4E,iBA5/PmBv4E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA4/PA,SAAAo4F,IAAA,IAAA/+F,EAAAmG,EAAA64F,EAAAC,EAAAC,EAAAp4F,EAAAqlE,EAAAgzB,EAAAC,EAAAC,EAAA72F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAu4F,GAAA,cAAAA,EAAAr4F,KAAAq4F,EAAAp4F,MAAA,UAAOlH,EAAPq/F,EAAAxlG,OAAA,QAAA0qB,IAAA86E,EAAA,GAAAA,EAAA,GAAqB,KAAMl5F,EAA3Bk5F,EAAAxlG,OAAA,QAAA0qB,IAAA86E,EAAA,GAAAA,EAAA,GAAqC,MACjDr/F,GAAejF,EAAKjF,MAAMkK,cAC7BA,EAAcjF,EAAKjF,MAAMkK,cAEtBmG,GAAWpL,EAAKjF,MAAMqQ,UACzBA,EAAUpL,EAAKjF,MAAMqQ,SAGlBA,GAAYnG,EARA,CAAAs/F,EAAAp4F,KAAA,eAAAo4F,EAAA7nF,OAAA,SASR,MATQ,cAAA6nF,EAAAp4F,KAAA,EAgBP4P,QAAQqD,IAAI,CACpBpf,EAAK4jG,aAAa3+F,GAClBjF,EAAKwtE,eAAe,aAAcvoE,EAAYsH,MAAOtH,EAAamG,GAClEpL,EAAKwtE,eAAe,oBAAqBvoE,EAAYsH,MAAOtH,EAAamG,KAnB1D,UAAA64F,EAAAM,EAAAr1F,KAAAg1F,EAAAzpG,OAAA6yB,EAAA,EAAA7yB,CAAAwpG,EAAA,GAafE,EAbeD,EAAA,GAcfn4F,EAdem4F,EAAA,GAef9yB,EAfe8yB,EAAA,KAsBbC,GAAiBp4F,GAAcqlE,GAtBlB,CAAAmzB,EAAAp4F,KAAA,gBAuBTi4F,EAAOhzB,EAAkBnkE,MAAMlB,GAC/Bs4F,EAAOD,EAAK57F,MAAM27F,GAxBTI,EAAA7nF,OAAA,SA4BR2nF,GA5BQ,eAAAE,EAAA7nF,OAAA,SA+BV,MA/BU,yBAAA6nF,EAAAj3F,SAAA02F,EAAAlpG,SA5/PAA,KA6hQnBq4E,uBA7hQmB,eAAAqxB,EAAA/pG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6hQM,SAAA64F,EAAOlhE,GAAP,IAAAn4B,EAAAF,EAAAixF,EAAA4E,EAAA2D,EAAAj3F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA24F,GAAA,cAAAA,EAAAz4F,KAAAy4F,EAAAx4F,MAAA,cAAuBf,EAAvBs5F,EAAA5lG,OAAA,QAAA0qB,IAAAk7E,EAAA,GAAAA,EAAA,GAAiC,KAAMx5F,EAAvCw5F,EAAA5lG,OAAA,QAAA0qB,IAAAk7E,EAAA,GAAAA,EAAA,GAAyD,KAAMvI,EAA/DuI,EAAA5lG,OAAA,QAAA0qB,IAAAk7E,EAAA,GAAAA,EAAA,GAA8E,KAA9EC,EAAAx4F,KAAA,EACanM,EAAKmhG,yBAAyB/1F,EAASF,EAAiBixF,EAAc54D,GADnF,cACjBw9D,EADiB4D,EAAAz1F,KAAAy1F,EAAAjoF,OAAA,SAEhBqkF,GAAyBA,EAAsBx9D,EAAeh3B,OAASw0F,EAAsBx9D,EAAeh3B,OAASvM,EAAKwM,MAAM,IAFhH,wBAAAm4F,EAAAr3F,SAAAm3F,EAAA3pG,SA7hQN,gBAAA8pG,GAAA,OAAAJ,EAAAh3F,MAAA1S,KAAA2S,YAAA,GAAA3S,KAiiQnB+pG,YAjiQmBpqG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAiiQL,SAAAk5F,IAAA,IAAAC,EAAA,OAAAj5E,EAAA7wB,EAAA+Q,KAAA,SAAAg5F,GAAA,cAAAA,EAAA94F,KAAA84F,EAAA74F,MAAA,cAAA64F,EAAA74F,KAAA,EACYnM,EAAKilG,eADjB,cACNF,EADMC,EAAA91F,KAAA81F,EAAAtoF,OAAA,SAELjiB,OAAO2R,OAAO24F,GAAWhlE,OAAO,SAACmlE,EAAUC,GAChD,IAAMC,EAAWplG,EAAKwM,MAAM24F,EAAUD,UAItC,OAHIE,IAAaA,EAAShnG,UACxB8mG,EAAWA,EAASl4F,KAAKo4F,IAEpBF,GACNllG,EAAKwM,MAAM,KARF,wBAAAw4F,EAAA13F,SAAAw3F,EAAAhqG,SAjiQKA,KA2iQnBmqG,aA3iQmBxqG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA2iQJ,SAAAy5F,IAAA,IAAA16E,EAAAoC,EAAA,OAAAjB,EAAA7wB,EAAA+Q,KAAA,SAAAs5F,GAAA,cAAAA,EAAAp5F,KAAAo5F,EAAAn5F,MAAA,cACPwe,EAAS,GACToC,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UAH5BshE,EAAAn5F,KAAA,EAKPnM,EAAKwL,aAAa/Q,OAAOoE,KAAKmB,EAAKjF,MAAM8zB,qBAAzC,eAAA02E,EAAA9qG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+D,SAAA45F,EAAOrpE,GAAP,IAAAztB,EAAAxD,EAAA,OAAA4gB,EAAA7wB,EAAA+Q,KAAA,SAAAy5F,GAAA,cAAAA,EAAAv5F,KAAAu5F,EAAAt5F,MAAA,cAC7DuC,EAAsB,SAAbytB,EACTjxB,EAAkBlL,EAAKjF,MAAM8zB,oBAAoBsN,GAFYspE,EAAAt5F,KAAA,EAG7DnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAw6F,EAAAjrG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAA+5F,EAAOp5F,GAAP,IAAA64F,EAAAF,EAAAU,EAAA3gG,EAAA4gG,EAAAC,EAAAC,EAAA34F,EAAA87D,EAAAoD,EAAA05B,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAt6E,EAAA7wB,EAAA+Q,KAAA,SAAAq6F,GAAA,cAAAA,EAAAn6F,KAAAm6F,EAAAl6F,MAAA,cAEhDi5F,EAAWplG,EAAKwM,MAAM,GACtB04F,EAAWllG,EAAKwM,MAAM,GACtBo5F,EAAc5lG,EAAKwM,MAAM,GACvBvH,EAAciG,EAAgBqB,GAC9Bs5F,EAAgB5gG,EAAYmoB,KAAK7gB,MAEvCoe,EAAOk7E,GAAiB,CACtBT,WACAF,WACAU,cACAt5B,UAAW,IAZuC+5B,EAAAl6F,KAAA,EAkB1C4P,QAAQqD,IAAI,CACpBpf,EAAKo8B,kBAAkBn3B,GACvBjF,EAAKyzE,mBAAmBoyB,KApB0B,cAAAC,EAAAO,EAAAn3F,KAAA62F,EAAAtrG,OAAA6yB,EAAA,EAAA7yB,CAAAqrG,EAAA,GAgBlD14F,EAhBkD24F,EAAA,GAiBlD78B,EAjBkD68B,EAAA,GAuBpDX,EAAWplG,EAAKgQ,iBAAiBk5D,EAAa,IAAI1gE,MAAM4E,GAvBJi5F,EAAAl6F,KAAA,GAwBnCnM,EAAK0tB,oBAAoB03E,EAAU74F,EAAOtH,EAAayJ,GAxBpB,WAwBpD02F,EAxBoDiB,EAAAn3F,KA0BpDyb,EAAOk7E,GAAeT,SAAWA,EACjCF,EAAWA,EAASl4F,KAAKo4F,KAGnB94B,EAAYtsE,EAAK68F,kBAAkB53F,IA9BW,CAAAohG,EAAAl6F,KAAA,gBAAAk6F,EAAAl6F,KAAA,GAgC5CnM,EAAKwL,aAAa/Q,OAAOoE,KAAKytE,GAAWjgE,OAAO,SAAA82B,GAAQ,OAAKmpC,EAAUnpC,GAAUmjE,UAAjF,eAAAC,EAAA9rG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA4F,SAAA46F,EAAOrjE,GAAP,IAAAI,EAAAkjE,EAAAC,EAAAvG,EAAAwG,EAAAC,EAAA,OAAA96E,EAAA7wB,EAAA+Q,KAAA,SAAA66F,GAAA,cAAAA,EAAA36F,KAAA26F,EAAA16F,MAAA,cAC1Fo3B,EAAiB+oC,EAAUnpC,GAD+D0jE,EAAA16F,KAAA,EAKtF4P,QAAQqD,IAAI,CACpBpf,EAAKwgF,mBAAmBr9C,EAAUl+B,EAAYmoB,KAAKhlB,SACnDpI,EAAKutB,yBAAyBR,EAAgBwW,KAPgD,OAAAkjE,EAAAI,EAAA33F,KAAAw3F,EAAAjsG,OAAA6yB,EAAA,EAAA7yB,CAAAgsG,EAAA,GAG9FtG,EAH8FuG,EAAA,GAI9FC,EAJ8FD,EAAA,GAU5FvG,GAAmBwG,IACfC,EAA2B5mG,EAAKgQ,iBAAiBmwF,EAAiB58D,EAAe9kC,UAAU+J,MAAMxI,EAAKwM,MAAMm6F,OACjFC,EAAyBxoG,UACxD8mG,EAAWA,EAASl4F,KAAK45F,GACzBj8E,EAAOk7E,GAAev5B,UAAUnpC,GAAYyjE,GAdgD,wBAAAC,EAAAv5F,SAAAk5F,EAAA1rG,SAA5F,gBAAAgsG,GAAA,OAAAP,EAAA/4F,MAAA1S,KAAA2S,YAAA,IAhC4C,YAqDhDxI,EAAYmwB,YAAanwB,EAAYmwB,UAAUmrB,YArDC,CAAA8lD,EAAAl6F,KAAA,gBAsD5C65F,EAAiBvrG,OAAOC,OAAO,GAAIuK,IAC1B8C,UAAYtN,OAAO2R,OAAOnH,EAAY8C,WACrDi+F,EAAe54E,KAAO3yB,OAAOC,OAAO,GAAIuK,EAAYmwB,UAAUmrB,aAG1DylD,EAAe5wE,UAAU2xE,cAC3Bf,EAAe5wE,UAAU2xE,aAAahoG,QAAQ,SAAAioG,GAC5C,IAAM9L,EAAgB8K,EAAej+F,UAAUwS,KAAK,SAAAle,GAAC,OAAKA,EAAEY,OAAS+pG,EAAY/pG,OACjF,GAAIi+F,EAAe,CACjB,IAAM+L,EAAcjB,EAAej+F,UAAUsP,QAAQ6jF,GACrD8K,EAAej+F,UAAUk/F,GAAeD,KAhEIX,EAAAl6F,KAAA,GAwExC4P,QAAQqD,IAAI,CACpBpf,EAAKo8B,kBAAkB4pE,GACvBhmG,EAAKyzE,mBAAmBuyB,EAAe54E,KAAKnwB,QA1EI,WAAAgpG,EAAAI,EAAAn3F,KAAAg3F,EAAAzrG,OAAA6yB,EAAA,EAAA7yB,CAAAwrG,EAAA,GAsEhDE,EAtEgDD,EAAA,GAuEhDE,EAvEgDF,EAAA,IA6E9CC,IAAiBC,EA7E6B,CAAAC,EAAAl6F,KAAA,gBA8EhDy5F,EAAc5lG,EAAKgQ,iBAAiBo2F,EAAgB,IAAI59F,MAAM29F,GA9EdE,EAAAl6F,KAAA,GA+E5BnM,EAAK0tB,oBAAoBk4E,EAAar5F,EAAOy5F,EAAgBt3F,GA/EjC,SA+EhDk3F,EA/EgDS,EAAAn3F,QAgF5B02F,EAAYxnG,UAC9BusB,EAAOk7E,GAAeD,YAAcA,EACpCV,EAAWA,EAASl4F,KAAK44F,IAlFqB,QAuFpDj7E,EAAOk7E,GAAeX,SAAWA,EAvFmB,yBAAAmB,EAAA/4F,SAAAq4F,EAAA7qG,SAAhD,gBAAAosG,GAAA,OAAAxB,EAAAl4F,MAAA1S,KAAA2S,YAAA,IAH6D,wBAAAg4F,EAAAn4F,SAAAk4F,EAAA1qG,SAA/D,gBAAAqsG,GAAA,OAAA5B,EAAA/3F,MAAA1S,KAAA2S,YAAA,IALO,cAAA63F,EAAA5oF,OAAA,SAmGNiO,GAnGM,wBAAA26E,EAAAh4F,SAAA+3F,EAAAvqG,SA3iQIA,KAgpQnBssG,sBAhpQmB3sG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAgpQK,SAAAy7F,IAAA,IAAA36E,EAAA/R,EAAA8X,EAAA+xB,EAAA6H,EAAAi7C,EAAAC,EAAA,OAAAz7E,EAAA7wB,EAAA+Q,KAAA,SAAAw7F,GAAA,cAAAA,EAAAt7F,KAAAs7F,EAAAr7F,MAAA,UAChBugB,EADgB,uBAEhB/R,EAAa3a,EAAK+tB,8BAA8BrB,IAFhC,CAAA86E,EAAAr7F,KAAA,eAAAq7F,EAAA9qF,OAAA,SAIb/B,GAJa,cAOhB8X,EAAYzyB,EAAK8uB,uBACjB01B,EAASxkD,EAAKuQ,gBAAgB,CAAC,QAAS,WACxC87C,EAAersD,EAAKuQ,gBAAgB,CAAC,QAAS,aAT9Bi3F,EAAAr7F,KAAA,EAUSnM,EAAKiyC,YAAYoa,EAAapZ,SAASxgB,IAAY,EAAO+xB,GAVnE,aAUhB8iD,EAVgBE,EAAAt4F,OAYEo4F,EAAiB3hG,MAAQ2hG,EAAiB3hG,KAAKmqC,OAASw3D,EAAiB3hG,KAAKmqC,MAAMhxC,OAAS,GAZ/F,CAAA0oG,EAAAr7F,KAAA,gBAado7F,EAAaD,EAAiB3hG,KAAKmqC,MAAM,GAb3B03D,EAAA9qF,OAAA,SAcb1c,EAAKguB,8BAA8BtB,EAAe66E,EAAYl7C,EAAa30B,MAd9D,eAAA8vE,EAAA9qF,OAAA,SAiBf,MAjBe,yBAAA8qF,EAAAl6F,SAAA+5F,EAAAvsG,SAhpQLA,KAmqQnBkU,yBAA2B,SAACzC,EAAO4vB,GACjC,IAAM1J,EAAYzyB,EAAK8uB,uBACjB7pB,EAAcjF,EAAKsrB,aAAa,CAACmH,EAAW0J,EAAU5vB,GAAQrB,KACpE,OAAOjG,EAAcA,EAAYmD,QAAU,MAtqQ1BtN,KAwqQnB2sG,0BAxqQmBhtG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAwqQS,SAAA87F,IAAA,IAAAnvE,EAAAC,EAAAmvE,EAAAC,EAAAn6F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA67F,GAAA,cAAAA,EAAA37F,KAAA27F,EAAA17F,MAAA,cAAOosB,EAAPqvE,EAAA9oG,OAAA,QAAA0qB,IAAAo+E,EAAA,GAAAA,EAAA,GAAkB,KACxCpvE,EAASx4B,EAAKwM,MAAM,GACpBm7F,EAAW3nG,EAAKwM,MAAM,GACrB+rB,GAAaA,EAASz5B,SACzBy5B,EAAW99B,OAAOoE,KAAKmB,EAAKuQ,gBAAgB,CAAC,eAJrBs3F,EAAA17F,KAAA,EAMpBnM,EAAKwL,aAAa/Q,OAAOoE,KAAKmB,EAAKjF,MAAMs9B,mBAAzC,eAAAyvE,EAAArtG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA6D,SAAAm8F,EAAOhvE,GAAP,IAAAC,EAAA,OAAAlN,EAAA7wB,EAAA+Q,KAAA,SAAAg8F,GAAA,cAAAA,EAAA97F,KAAA87F,EAAA77F,MAAA,cAC3D6sB,EAAiBh5B,EAAKjF,MAAMs9B,kBAAkBU,GADaivE,EAAA77F,KAAA,EAE3DnM,EAAKwL,aAAa/Q,OAAOoE,KAAKm6B,GAA9B,eAAAivE,EAAAxtG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+C,SAAAs8F,EAAO37F,GAAP,IAAAtH,EAAA,OAAA6mB,EAAA7wB,EAAA+Q,KAAA,SAAAm8F,GAAA,cAAAA,EAAAj8F,KAAAi8F,EAAAh8F,MAAA,cAC7ClH,EAAc+zB,EAAezsB,GADgB47F,EAAAh8F,KAAA,EAE7CnM,EAAKwL,aAAa+sB,EAAlB,eAAA6vE,EAAA3tG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA4B,SAAAy8F,EAAOlvE,GAAP,IAAAC,EAAAkvE,EAAAC,EAAAvuE,EAAAL,EAAA,OAAA7N,EAAA7wB,EAAA+Q,KAAA,SAAAw8F,GAAA,cAAAA,EAAAt8F,KAAAs8F,EAAAr8F,MAAA,cAC1BitB,EAAgBn0B,EAAYk0B,GADFqvE,EAAAr8F,KAAA,EAKtB4P,QAAQqD,IAAI,CACpBpf,EAAK+6B,oBAAoB,aAAc,GAAIhC,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAe,MACjGp5B,EAAK+6B,oBAAoB,uBAAwB,GAAIhC,EAAUxsB,EAAO4sB,EAASl0B,EAAam0B,EAAe,QAP7E,OAAAkvE,EAAAE,EAAAt5F,KAAAq5F,EAAA9tG,OAAA6yB,EAAA,EAAA7yB,CAAA6tG,EAAA,GAG9BtuE,EAH8BuuE,EAAA,GAI9B5uE,EAJ8B4uE,EAAA,GAUhC/vE,EAASA,EAAOxrB,KAAKhN,EAAKwM,MAAMwtB,GAAYxxB,MAAMxI,EAAKwM,MAAMmtB,KAC7DguE,EAAWA,EAAS36F,KAAKhN,EAAKwM,MAAMmtB,IAXJ,wBAAA6uE,EAAAl7F,SAAA+6F,EAAAvtG,SAA5B,gBAAA2tG,GAAA,OAAAL,EAAA56F,MAAA1S,KAAA2S,YAAA,IAF6C,wBAAA06F,EAAA76F,SAAA46F,EAAAptG,SAA/C,gBAAA4tG,GAAA,OAAAT,EAAAz6F,MAAA1S,KAAA2S,YAAA,IAF2D,wBAAAu6F,EAAA16F,SAAAy6F,EAAAjtG,SAA7D,gBAAA6tG,GAAA,OAAAb,EAAAt6F,MAAA1S,KAAA2S,YAAA,IANoB,cA4B1B+qB,EAASA,EAAOla,IAAIqpF,GA5BME,EAAAnrF,OAAA,SAgCnB,CACL8b,SACAmvE,aAlCwB,wBAAAE,EAAAv6F,SAAAo6F,EAAA5sG,SAxqQTA,KA6sQnB8tG,mBA7sQmBnuG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA6sQE,SAAAi9F,IAAA,IAAAC,EAAAr2E,EAAA+xB,EAAA6H,EAAA08C,EAAAvwE,EAAAmvE,EAAAqB,EAAAC,EAAAx7F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAk9F,GAAA,cAAAA,EAAAh9F,KAAAg9F,EAAA/8F,MAAA,eAAA88F,EAAAnqG,OAAA,QAAA0qB,IAAAy/E,EAAA,KAAAA,EAAA,GAA4BH,EAA5BG,EAAAnqG,OAAA,QAAA0qB,IAAAy/E,EAAA,IAAAA,EAAA,GACbx2E,EAAYzyB,EAAK8uB,uBACjB01B,EAASxkD,EAAKuQ,gBAAgB,CAAC,QAAS,WACxC87C,EAAersD,EAAKuQ,gBAAgB,CAAC,QAAS,SAChDw4F,EAAa,CAACt2E,GACdq2E,IACFC,EAAatuG,OAAOoE,KAAKwtD,EAAapZ,WAGpCza,EAASx4B,EAAKwM,MAAM,GACpBm7F,EAAW3nG,EAAKwM,MAAM,GAVP08F,EAAA/8F,KAAA,GAYbnM,EAAKwL,aAAau9F,EAAlB,eAAAI,EAAA1uG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA8B,SAAAw9F,EAAO32E,GAAP,IAAAu2E,EAAA,OAAAl9E,EAAA7wB,EAAA+Q,KAAA,SAAAq9F,GAAA,cAAAA,EAAAn9F,KAAAm9F,EAAAl9F,MAAA,cAC9B68F,EAAO,KADuBK,EAAAn9F,KAAA,EAAAm9F,EAAAl9F,KAAA,EAGnBnM,EAAK6tC,kBAAkBwe,EAAapZ,SAASxgB,GAAY45B,EAAa30B,KAAK,GAAM,EAAO8sB,GAHrE,OAGhCwkD,EAHgCK,EAAAn6F,KAAAm6F,EAAAl9F,KAAA,eAAAk9F,EAAAn9F,KAAA,EAAAm9F,EAAA77E,GAAA67E,EAAA,gBAQ9BL,IACFxwE,EAASA,EAAOxrB,KAAKhN,EAAKwM,MAAMw8F,EAAKxwE,QAAQhwB,MAAMxI,EAAKwM,MAAMw8F,EAAK9D,YACnEyC,EAAWA,EAAS36F,KAAKhN,EAAKwM,MAAMw8F,EAAK9D,YAVT,yBAAAmE,EAAA/7F,SAAA87F,EAAAtuG,KAAA,YAA9B,gBAAAwuG,GAAA,OAAAH,EAAA37F,MAAA1S,KAAA2S,YAAA,IAZa,WA0Bdk6F,IAAY3nG,EAAKwM,MAAMm7F,GAAUvpG,UAAW4B,EAAKwM,MAAMm7F,GAAUl6E,IAAI,GA1BvD,CAAAy7E,EAAA/8F,KAAA,gBA2BjBqsB,EAASx4B,EAAKwM,MAAM,GACpBm7F,EAAW3nG,EAAKwM,MAAM,GA5BL08F,EAAA/8F,KAAA,GA6BAnM,EAAKupG,2BA7BL,SA6BbP,EA7BaE,EAAAh6F,QA+BfspB,EAASA,EAAOxrB,KAAKhN,EAAKwM,MAAMw8F,EAAKxwE,QAAQhwB,MAAMxI,EAAKwM,MAAMw8F,EAAK9D,YACnEyC,EAAWA,EAAS36F,KAAKhN,EAAKwM,MAAMw8F,EAAK9D,YAhC1B,eAoCnB1sE,EAASA,EAAOla,IAAIqpF,GApCDuB,EAAAxsF,OAAA,SAsCZ,CACL8b,SACAmvE,aAxCiB,yBAAAuB,EAAA57F,SAAAu7F,EAAA/tG,SA7sQFA,KAwvQnByuG,yBAxvQmB9uG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAwvQQ,SAAA49F,IAAA,IAAA9hC,EAAAj1C,EAAA/F,EAAA/R,EAAA8uF,EAAAjxE,EAAAmvE,EAAA56E,EAAApC,EAAA++E,EAAAj8F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA29F,GAAA,cAAAA,EAAAz9F,KAAAy9F,EAAAx9F,MAAA,UAAOu7D,IAAPgiC,EAAA5qG,OAAA,QAAA0qB,IAAAkgF,EAAA,KAAAA,EAAA,GAEzBj3E,GAFqDA,EAA5Bi3E,EAAA5qG,OAAA,QAAA0qB,IAAAkgF,EAAA,GAAAA,EAAA,GAAwC,OAExC1pG,EAAK8uB,uBAGxBpC,EALmB,sBAAAjrB,OAKmBimE,EALnB,KAAAjmE,OAKmCgxB,KACtD9X,EAAa3a,EAAK+tB,8BAA8BrB,MACnC/R,EAAW8uF,QAAWzpG,EAAKwM,MAAMmO,EAAW8uF,QAAQrrG,UAAauc,EAAW6d,QAAWx4B,EAAKwM,MAAMmO,EAAW6d,QAAQp6B,UAAauc,EAAWgtF,UAAa3nG,EAAKwM,MAAMmO,EAAWgtF,UAAUvpG,QAPpL,CAAAurG,EAAAx9F,KAAA,eAAAw9F,EAAAjtF,OAAA,SAQhB,CACL+sF,OAAQzpG,EAAKwM,MAAMmO,EAAW8uF,QAC9BjxE,OAAQx4B,EAAKwM,MAAMmO,EAAW6d,QAC9BmvE,SAAU3nG,EAAKwM,MAAMmO,EAAWgtF,YAXX,cAerB8B,EAASzpG,EAAKwM,MAAM,GACpBgsB,EAASx4B,EAAKwM,MAAM,GACpBm7F,EAAW3nG,EAAKwM,MAAM,GACpBugB,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UAnBhB2lE,EAAAx9F,KAAA,GAsBnBnM,EAAKwL,aAAa/Q,OAAOoE,KAAKmB,EAAKjF,MAAM6uG,6BAAzC,eAAAC,EAAApvG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAuE,SAAAk+F,EAAOr3E,GAAP,IAAAm5B,EAAA,OAAA9/B,EAAA7wB,EAAA+Q,KAAA,SAAA+9F,GAAA,cAAAA,EAAA79F,KAAA69F,EAAA59F,MAAA,cACrEy/C,EAAa5rD,EAAKjF,MAAM6uG,4BAA4Bn3E,GADiBs3E,EAAA59F,KAAA,EAErEnM,EAAKwL,aAAa/Q,OAAOoE,KAAK+sD,GAA9B,eAAAo+C,EAAAvvG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA2C,SAAAq+F,EAAO9tE,GAAP,IAAAztB,EAAAxD,EAAA,OAAA4gB,EAAA7wB,EAAA+Q,KAAA,SAAAk+F,GAAA,cAAAA,EAAAh+F,KAAAg+F,EAAA/9F,MAAA,cACzCuC,EAAsB,SAAbytB,EACTjxB,EAAkB0gD,EAAWzvB,GAFY+tE,EAAA/9F,KAAA,EAGzCnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAAi/F,EAAA1vG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAAw+F,EAAO79F,GAAP,IAAAtH,EAAA6nB,EAAAwP,EAAA+tE,EAAA/9B,EAAA05B,EAAAsE,EAAAC,EAAA,OAAAz+E,EAAA7wB,EAAA+Q,KAAA,SAAAw+F,GAAA,cAAAA,EAAAt+F,KAAAs+F,EAAAr+F,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgBi+F,EAAAr+F,KAAA,EAEtBnM,EAAKgF,mBAAmBC,GAAa,EAAOyiE,GAFtB,cAE9C56C,EAF8C09E,EAAAt7F,KAAAs7F,EAAAr+F,KAAA,EAG5BnM,EAAK28B,aAAa13B,EAAa6nB,EAAiB46C,GAHpB,UAG9CprC,EAH8CkuE,EAAAt7F,MAIhD4d,IAAmBA,EAAgBa,2BAA8Bb,EAAgBa,0BAA0BvvB,QAJ3D,CAAAosG,EAAAr+F,KAAA,gBAAAq+F,EAAAr+F,KAAA,GAK3BnM,EAAK0tB,oBAAoBZ,EAAgBa,0BAA2BphB,EAAOtH,EAAayJ,GAL7D,QAK5C27F,EAL4CG,EAAAt7F,KAMlDy4F,EAAWA,EAAS36F,KAAKq9F,GAErB/tE,GAAaA,EAAU8xB,SAAW9xB,EAAU8xB,OAAOhwD,UACrDqrG,EAASA,EAAOz8F,KAAKq9F,EAAS7hG,MAAM8zB,EAAU8xB,SAC9C51B,EAASA,EAAOxrB,KAAKq9F,EAAS7hG,MAAM8zB,EAAUO,UAVE,aAe9CyvC,EAAYtsE,EAAK68F,kBAAkB53F,IAfW,CAAAulG,EAAAr+F,KAAA,gBAAAq+F,EAAAr+F,KAAA,GAiB5CnM,EAAKwL,aAAa/Q,OAAOoE,KAAKytE,GAAWjgE,OAAO,SAAA82B,GAAQ,OAAKmpC,EAAUnpC,GAAUmjE,UAAjF,eAAAmE,EAAAhwG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA4F,SAAA8+F,EAAOvnE,GAAP,IAAAI,EAAAonE,EAAAC,EAAAhxE,EAAA4O,EAAA1O,EAAA,OAAAhO,EAAA7wB,EAAA+Q,KAAA,SAAA6+F,GAAA,cAAAA,EAAA3+F,KAAA2+F,EAAA1+F,MAAA,cAC1Fo3B,EAAiB+oC,EAAUnpC,GAD+D0nE,EAAA1+F,KAAA,EAKtF4P,QAAQqD,IAAI,CACpBpf,EAAKwgF,mBAAmBr9C,EAAUl+B,EAAYmoB,KAAKhlB,SACnDpI,EAAKutB,yBAAyBR,EAAgBwW,KAPgD,OAAAonE,EAAAE,EAAA37F,KAAA07F,EAAAnwG,OAAA6yB,EAAA,EAAA7yB,CAAAkwG,EAAA,GAG9F/wE,EAH8FgxE,EAAA,GAI9FpiE,EAJ8FoiE,EAAA,GAU5FhxE,GAAgB4O,IACZ1O,EAAwB95B,EAAKgQ,iBAAiB4pB,EAAc2J,EAAe9kC,UAAU+J,MAAMxI,EAAKwM,MAAMg8B,OAC9E1O,EAAsB17B,UAElDupG,EAAWA,EAAS36F,KAAK8sB,IAdmE,wBAAA+wE,EAAAv9F,SAAAo9F,EAAA5vG,SAA5F,gBAAAgwG,GAAA,OAAAL,EAAAj9F,MAAA1S,KAAA2S,YAAA,IAjB4C,YAsChDxI,EAAYmwB,YAAanwB,EAAYmwB,UAAUmrB,YAtCC,CAAAiqD,EAAAr+F,KAAA,gBAuC5C65F,EAAiBvrG,OAAOC,OAAO,GAAIuK,IAC1B8C,UAAYtN,OAAO2R,OAAOnH,EAAY8C,WACrDi+F,EAAe54E,KAAO3yB,OAAOC,OAAO,GAAIuK,EAAYmwB,UAAUmrB,aAG1DylD,EAAe5wE,UAAU2xE,cAC3Bf,EAAe5wE,UAAU2xE,aAAahoG,QAAQ,SAAAioG,GAC5C,IAAM9L,EAAgB8K,EAAej+F,UAAUwS,KAAK,SAAAle,GAAC,OAAKA,EAAEY,OAAS+pG,EAAY/pG,OACjF,GAAIi+F,EAAe,CACjB,IAAM+L,EAAcjB,EAAej+F,UAAUsP,QAAQ6jF,GACrD8K,EAAej+F,UAAUk/F,GAAeD,KAjDIwD,EAAAr+F,KAAA,GAsDjBnM,EAAKgF,mBAAmBghG,GAAgB,GAAO,GAtD9B,aAsD5CsE,EAtD4CE,EAAAt7F,QAuDxBo7F,EAAmB1lG,iBAAoB0lG,EAAmB1lG,gBAAgBxG,QAvDlD,CAAAosG,EAAAr+F,KAAA,gBAAAq+F,EAAAr+F,KAAA,GAwDVnM,EAAK0tB,oBAAoB48E,EAAmB1lG,gBAAiB2H,EAAOy5F,EAAgBt3F,GAxD1E,QAwD1C67F,EAxD0CC,EAAAt7F,KAyDhDy4F,EAAWA,EAAS36F,KAAKu9F,GAzDuB,yBAAAC,EAAAl9F,SAAA88F,EAAAtvG,SAAhD,gBAAAiwG,GAAA,OAAAZ,EAAA38F,MAAA1S,KAAA2S,YAAA,IAHyC,wBAAAy8F,EAAA58F,SAAA28F,EAAAnvG,SAA3C,gBAAAkwG,GAAA,OAAAhB,EAAAx8F,MAAA1S,KAAA2S,YAAA,IAFqE,wBAAAs8F,EAAAz8F,SAAAw8F,EAAAhvG,SAAvE,gBAAAmwG,GAAA,OAAApB,EAAAr8F,MAAA1S,KAAA2S,YAAA,IAtBmB,eA4FzBg8F,EAASA,EAAOnrF,IAAIqpF,GACpBnvE,EAASA,EAAOla,IAAIqpF,GAEdh9E,EAAS,CACb8+E,SACAjxE,SACAmvE,YAlGuBgC,EAAAjtF,OAAA,SAqGlB1c,EAAKguB,8BAA8BtB,EAAe/B,IArGhC,yBAAAg/E,EAAAr8F,SAAAk8F,EAAA1uG,SAxvQRA,KA+1QnBowG,YA/1QmB,eAAAC,EAAA1wG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+1QL,SAAAw/F,EAAOnmG,GAAP,IAAAq3B,EAAA,OAAAxQ,EAAA7wB,EAAA+Q,KAAA,SAAAq/F,GAAA,cAAAA,EAAAn/F,KAAAm/F,EAAAl/F,MAAA,cAAAk/F,EAAAl/F,KAAA,EACYnM,EAAK28B,aAAa13B,GAD9B,YACNq3B,EADM+uE,EAAAn8F,OAE0B,OAArBotB,EAAUO,OAFf,CAAAwuE,EAAAl/F,KAAA,eAAAk/F,EAAA3uF,OAAA,SAGH4f,EAAUO,QAHP,cAAAwuE,EAAA3uF,OAAA,SAKL,MALK,wBAAA2uF,EAAA/9F,SAAA89F,EAAAtwG,SA/1QK,gBAAAwwG,GAAA,OAAAH,EAAA39F,MAAA1S,KAAA2S,YAAA,GAAA3S,KAs2QnBywG,mBAt2QmB9wG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAs2QE,SAAA4/F,IAAA,IAAA78F,EAAAgtB,EAAA8vE,EAAAh+F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0/F,GAAA,cAAAA,EAAAx/F,KAAAw/F,EAAAv/F,MAAA,UAAOwC,EAAP88F,EAAA3sG,OAAA,QAAA0qB,IAAAiiF,EAAA,GAAAA,EAAA,GAA0B,KAExCzrG,EAAKjF,MAAM8zB,qBAAwB7uB,EAAKjF,MAAMqQ,QAFhC,CAAAsgG,EAAAv/F,KAAA,eAAAu/F,EAAAhvF,OAAA,UAGV,GAHU,cAMbif,EAAkB,GANL+vE,EAAAv/F,KAAA,EAQbnM,EAAKwL,aAAa/Q,OAAOoE,KAAKmB,EAAKjF,MAAM8zB,qBAAzC,eAAA88E,EAAAlxG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA+D,SAAAggG,EAAOzvE,GAAP,IAAAjxB,EAAA,OAAA4gB,EAAA7wB,EAAA+Q,KAAA,SAAA6/F,GAAA,cAAAA,EAAA3/F,KAAA2/F,EAAA1/F,MAAA,WAC/DwC,GAAoBA,IAAqBwtB,EADsB,CAAA0vE,EAAA1/F,KAAA,eAAA0/F,EAAAnvF,OAAA,wBAI7DxR,EAAkBlL,EAAKjF,MAAM8zB,oBAAoBsN,GAJY0vE,EAAA1/F,KAAA,EAK7DnM,EAAKwL,aAAa/Q,OAAOoE,KAAKqM,GAA9B,eAAA4gG,EAAArxG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAAmgG,EAAOx/F,GAAP,IAAAtH,EAAA+mG,EAAAjwE,EAAAC,EAAAC,EAAA,OAAAnQ,EAAA7wB,EAAA+Q,KAAA,SAAAigG,GAAA,cAAAA,EAAA//F,KAAA+/F,EAAA9/F,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgB0/F,EAAA9/F,KAAA,EAK1CnM,EAAKk8B,eAAej3B,EAAajF,EAAKjF,MAAMqQ,SALF,OAAA4gG,EAAAC,EAAA/8F,KAGlD6sB,EAHkDiwE,EAGlDjwE,iBACAC,EAJkDgwE,EAIlDhwE,4BAGED,IACIE,EAAWttB,EAAmBpC,EAAQtH,EAAYmoB,KAAK7gB,MAC7DovB,EAAgBM,GAAY,CAC1B1vB,QACA4vB,WACAl3B,cACA+2B,gCAbgD,wBAAAiwE,EAAA3+F,SAAAy+F,EAAAjxG,SAAhD,gBAAAoxG,GAAA,OAAAJ,EAAAt+F,MAAA1S,KAAA2S,YAAA,IAL6D,wBAAAo+F,EAAAv+F,SAAAs+F,EAAA9wG,SAA/D,gBAAAqxG,GAAA,OAAAR,EAAAn+F,MAAA1S,KAAA2S,YAAA,IARa,cAAAi+F,EAAAhvF,OAAA,SAgCZif,GAhCY,wBAAA+vE,EAAAp+F,SAAAk+F,EAAA1wG,SAt2QFA,KA24QnBsxG,2BA34QmB3xG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA24QU,SAAAygG,IAAA,IAAAtzE,EAAAuzE,EAAAC,EAAAC,EAAAC,EAAAh/F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0gG,GAAA,cAAAA,EAAAxgG,KAAAwgG,EAAAvgG,MAAA,UAAO4sB,EAAP0zE,EAAA3tG,OAAA,QAAA0qB,IAAAijF,EAAA,GAAAA,EAAA,GAAkB,KACxCzsG,EAAKjF,MAAMqQ,QADW,CAAAshG,EAAAvgG,KAAA,eAAAugG,EAAAhwF,OAAA,UAElB,GAFkB,UAIrB4vF,EAAgB,GAChBC,EAAkBvsG,EAAKwM,MAAM,GAAG8R,IAAI,OACpCkuF,EAAkBxsG,EAAKuQ,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,qBANvD,CAAAm8F,EAAAvgG,KAAA,eAAAugG,EAAAvgG,KAAA,EAQnBnM,EAAKwL,aAAa/Q,OAAOoE,KAAK2tG,GAA9B,eAAAG,EAAAlyG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAAghG,EAAOrgG,GAAP,IAAAtH,EAAA8mD,EAAAnyB,EAAA,OAAA9N,EAAA7wB,EAAA+Q,KAAA,SAAA6gG,GAAA,cAAAA,EAAA3gG,KAAA2gG,EAAA1gG,MAAA,UAC9ClH,EAAcunG,EAAgBjgG,GACnB,OAAbwsB,GAAqB9zB,EAAY8zB,SAAS1wB,gBAAkB0wB,EAAS1wB,cAFrB,CAAAwkG,EAAA1gG,KAAA,eAAA0gG,EAAAnwF,OAAA,qBAKhDqvC,EAAgB/rD,EAAKwyB,kBAAkBvtB,EAAYsH,UACjCtH,EAAY29B,IANkB,CAAAiqE,EAAA1gG,KAAA,eAAA0gG,EAAA1gG,KAAA,EAO5BnM,EAAKjF,MAAM4nC,aAAa19B,EAAYsH,MAAOtH,EAAYmD,QAASnD,EAAY29B,KAPhD,OAOlDmpB,EAPkD8gD,EAAA39F,KAAA,WAShD68C,EATgD,CAAA8gD,EAAA1gG,KAAA,gBAAA0gG,EAAA1gG,KAAA,GAUvBnM,EAAK+rB,gBAAgB9mB,EAAYsH,MAAOvM,EAAKjF,MAAMqQ,SAV5B,SAU5CwuB,EAV4CizE,EAAA39F,OAW9B0qB,EAAaqmC,IAAIssC,KACnCD,EAAc//F,GAAS,CACrBtH,cACAkI,QAASysB,IAdqC,yBAAAizE,EAAAv/F,SAAAs/F,EAAA9xG,SAAhD,gBAAAgyG,GAAA,OAAAH,EAAAn/F,MAAA1S,KAAA2S,YAAA,IARmB,cAAAi/F,EAAAhwF,OAAA,SA6BpB4vF,GA7BoB,yBAAAI,EAAAp/F,SAAA++F,EAAAvxG,SA34QVA,KA06QnBiyG,4BAA8B,SAACxgG,GAC7B,OAAOvM,EAAKuQ,gBAAgB,CAAC,QAAS,SAAUhE,EAAMiE,cAAe,yBA36QpD1V,KA66QnBkgC,2BA76QmB,eAAAgyE,EAAAvyG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA66QU,SAAAqhG,EAAOrzE,EAAc30B,GAArB,IAAAoZ,EAAAhO,EAAA68F,EAAAz/F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAmhG,GAAA,cAAAA,EAAAjhG,KAAAihG,EAAAhhG,MAAA,UAAkCkS,EAAlC6uF,EAAApuG,OAAA,QAAA0qB,IAAA0jF,EAAA,GAAAA,EAAA,GAA8C,SAEzEtzE,EAAe55B,EAAKwM,MAAMotB,GAEE55B,EAAK+sG,4BAA4B9nG,EAAYsH,OAJ9C,CAAA4gG,EAAAhhG,KAAA,eAAAghG,EAAAzwF,OAAA,SAMlBkd,GANkB,WAQvBA,EAAaxpB,GAAG,GARO,CAAA+8F,EAAAhhG,KAAA,gBAAAghG,EAAAhhG,KAAA,EASYnM,EAAKs7B,8BAA8Br2B,EAAYoZ,GAT3D,QASnBhO,EATmB88F,EAAAj+F,QAWvB0qB,EAAeA,EAAapxB,MAAM6H,IAXX,eAAA88F,EAAAzwF,OAAA,SAcpBkd,GAdoB,yBAAAuzE,EAAA7/F,SAAA2/F,EAAAnyG,SA76QV,gBAAAsyG,EAAAC,GAAA,OAAAL,EAAAx/F,MAAA1S,KAAA2S,YAAA,GAAA3S,KAg8QnB4yB,oBAh8QmB,eAAA4/E,EAAA7yG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAg8QG,SAAA2hG,EAAO3zE,EAAcrtB,EAAOtH,GAA5B,IAAAyJ,EAAA2B,EAAAm9F,EAAA//F,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAyhG,GAAA,cAAAA,EAAAvhG,KAAAuhG,EAAAthG,MAAA,UAAyCuC,EAAzC8+F,EAAA1uG,OAAA,QAAA0qB,IAAAgkF,EAAA,IAAAA,EAAA,KAEpB5zE,EAAe55B,EAAKwM,MAAMotB,IACTxpB,GAAG,GAHA,CAAAq9F,EAAAthG,KAAA,eAAAshG,EAAAthG,KAAA,EAImBnM,EAAK8oF,uBAAuB7jF,EAAayJ,GAJ5D,QAIZ2B,EAJYo9F,EAAAv+F,QAOhB0qB,EAAeA,EAAapxB,MAAM6H,IAPlB,cAAAo9F,EAAA/wF,OAAA,SAUbkd,GAVa,wBAAA6zE,EAAAngG,SAAAigG,EAAAzyG,SAh8QH,gBAAA4yG,EAAAC,EAAAC,GAAA,OAAAN,EAAA9/F,MAAA1S,KAAA2S,YAAA,GAAA3S,KA48QnB+yG,eA58QmB,eAAAC,EAAArzG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA48QF,SAAAmiG,EAAO3lG,EAASsG,GAAhB,IAAAuzC,EAAAC,EAAA8rD,EAAA9pE,EAAA+pE,EAAAxgG,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAkiG,GAAA,cAAAA,EAAAhiG,KAAAgiG,EAAA/hG,MAAA,cAAwB81C,EAAxBgsD,EAAAnvG,OAAA,QAAA0qB,IAAAykF,EAAA,GAAAA,EAAA,GAAyC,KAAM/rD,EAA/C+rD,EAAAnvG,OAAA,QAAA0qB,IAAAykF,EAAA,GAAAA,EAAA,GAA8D,KAA9DC,EAAA/hG,KAAA,EACUnM,EAAKiP,gBAAgB7G,EAASsG,EAAQuzC,EAAgBC,GAAc,EAAM,MADpF,YACT8rD,EADSE,EAAAh/F,QAEG8+F,EAAWlvG,OAFd,CAAAovG,EAAA/hG,KAAA,eAGP+3B,EAAM8pE,EAAWjuE,OAAO,SAACi6D,EAAK1hD,GAClC,IAAM8iD,EAAWp7F,EAAKgQ,iBAAiBsoC,EAAE8iD,SAAU,IACnD,OAAOpB,EAAIhtF,KAAKouF,IACfp7F,EAAKwM,MAAM,IAND0hG,EAAAxxF,OAAA,SASNwnB,EAAI5lB,IAAI0vF,EAAWlvG,SATb,cAAAovG,EAAAxxF,OAAA,SAYR1c,EAAKwM,MAAM,IAZH,wBAAA0hG,EAAA5gG,SAAAygG,EAAAjzG,SA58QE,gBAAAqzG,EAAAC,GAAA,OAAAN,EAAAtgG,MAAA1S,KAAA2S,YAAA,GAAA3S,KA09QnBwgC,8BA19QmB,eAAA+yE,EAAA5zG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA09Qa,SAAA0iG,EAAOrpG,GAAP,IAAAoZ,EAAA0O,EAAAwhF,EAAAC,EAAArjB,EAAAz6E,EAAA+9F,EAAAhhG,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA0iG,GAAA,cAAAA,EAAAxiG,KAAAwiG,EAAAviG,MAAA,cAAoBkS,EAApBowF,EAAA3vG,OAAA,QAAA0qB,IAAAilF,EAAA,GAAAA,EAAA,GAAgC,SACxD1hF,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,WAEnCuqE,EAAmBtpG,EAAYsH,MAAQvM,EAAKuQ,gBAAgB,CAAC,QAAS,SAAUtL,EAAYsH,MAAMiE,gBAAkB,MAGrGm+F,sBACnB5hF,EAAe3kB,QAAUmmG,EAAiBI,qBAGtCH,EAAgBD,GAAoBtpG,EAGpCkmF,GAAWojB,EAAiBI,oBAdJD,EAAAviG,KAAA,EAgBDnM,EAAKutB,yBAAyBR,EAAgByhF,EAAenwF,EAAa8sE,GAhBzE,UAgBxBz6E,EAhBwBg+F,EAAAx/F,KAiBzBlP,EAAKwM,MAAMkE,GAAgBtS,QAjBF,CAAAswG,EAAAviG,KAAA,gBAAAuiG,EAAAhyF,OAAA,SAkBrBhM,GAlBqB,eAAAg+F,EAAAhyF,OAAA,SAqBvB,MArBuB,yBAAAgyF,EAAAphG,SAAAghG,EAAAxzG,SA19Qb,gBAAA8zG,GAAA,OAAAP,EAAA7gG,MAAA1S,KAAA2S,YAAA,GAAA3S,KAo/QnBguF,uBAp/QmB,eAAA+lB,EAAAp0G,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAo/QM,SAAAkjG,EAAO7pG,EAAayJ,GAApB,IAAA4B,EAAAy+F,EAAAriF,EAAA/R,EAAAm6D,EAAAk6B,EAAAjiF,EAAAyhF,EAAA99F,EAAAu+F,EAAAxhG,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAkjG,GAAA,cAAAA,EAAAhjG,KAAAgjG,EAAA/iG,MAAA,UAA4BmE,EAA5B2+F,EAAAnwG,OAAA,QAAA0qB,IAAAylF,EAAA,GAAAA,EAAA,GAAkD,KAAMF,EAAxDE,EAAAnwG,OAAA,QAAA0qB,IAAAylF,EAAA,GAAAA,EAAA,GAAgE,EAElF3+F,EAFkB,CAAA4+F,EAAA/iG,KAAA,WAGrBmE,EAAsBtQ,EAAK+sG,4BAA4B9nG,EAAYsH,OAH9C,CAAA2iG,EAAA/iG,KAAA,eAAA+iG,EAAAxyF,OAAA,SAKZ,MALY,UAUjBgQ,EAViB,uBAAAjrB,OAUsBwD,EAAYmD,QAVlC,KAAA3G,OAU6CiN,EAV7C,KAAAjN,OAUuD6O,KACxEqK,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAZnB,CAAA8wG,EAAA/iG,KAAA,gBAAA+iG,EAAAxyF,OAAA,SAad1c,EAAKwM,MAAMmO,IAbG,eAAAu0F,EAAA/iG,KAAA,GAgBDnM,EAAKiP,gBAAgBhK,EAAYmD,QAASsG,EAAQ,KAAM,MAAM,EAAO,KAAM,OAAQ,GAhBlF,aAgBnBomE,EAhBmBo6B,EAAAhgG,QAiBN4lE,EAAUh2E,OAjBJ,CAAAowG,EAAA/iG,KAAA,cAkBrB2oE,EAAYA,EAAUrlE,QACJzP,EAAKwM,MAAMsoE,EAAUxkE,IAAsBlS,QAnBxC,CAAA8wG,EAAA/iG,KAAA,YAoBbuE,EAAiB1Q,EAAKgQ,iBAAiB8kE,EAAUxkE,GAAsB,IACxEtQ,EAAKwM,MAAMkE,GAAgBtS,QArBb,CAAA8wG,EAAA/iG,KAAA,gBAAA+iG,EAAAxyF,OAAA,SAsBV1c,EAAKguB,8BAA8BtB,EAAehc,IAtBxC,eA2BjBqc,EAAiB,CACrB3kB,QAASpI,EAAKwyB,kBAAkB,OAAOwR,UAEnCwqE,EAAgBvpG,EAAYsH,MAAQvM,EAAKuQ,gBAAgB,CAAC,QAAS,SAAUtL,EAAYsH,MAAMiE,gBAAkBvL,EA9BhGiqG,EAAA/iG,KAAA,GA+BMnM,EAAKutB,yBAAyBR,EAAgByhF,GA/BpD,WA+BjB99F,EA/BiBw+F,EAAAhgG,KAgClBlP,EAAKwM,MAAMkE,GAAgBtS,QAhCT,CAAA8wG,EAAA/iG,KAAA,gBAAA+iG,EAAAxyF,OAAA,SAiCd1c,EAAKguB,8BAA8BtB,EAAehc,IAjCpC,aAoCnBq+F,EAAQ,GApCW,CAAAG,EAAA/iG,KAAA,gBAAA+iG,EAAA/iG,KAAA,GAqCRnM,EAAK8oF,uBAAuB7jF,EAAayJ,EAAQ4B,EAAqBy+F,EAAQ,GArCtE,eAAAG,EAAAxyF,OAAA,SAAAwyF,EAAAhgG,MAAA,eAAAggG,EAAAxyF,OAAA,SAwChB,MAxCgB,yBAAAwyF,EAAA5hG,SAAAwhG,EAAAh0G,SAp/QN,gBAAAq0G,EAAAC,GAAA,OAAAP,EAAArhG,MAAA1S,KAAA2S,YAAA,GAAA3S,KA+hRnBu0G,cA/hRmB,eAAAC,EAAA70G,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA+hRH,SAAA2jG,EAAOtqG,EAAayJ,GAApB,IAAAge,EAAA/R,EAAA8X,EAAAw6B,EAAAzI,EAAAvR,EAAAu8D,EAAAC,EAAA36B,EAAAhoD,EAAA4iF,EAAA,OAAA5jF,EAAA7wB,EAAA+Q,KAAA,SAAA2jG,GAAA,cAAAA,EAAAzjG,KAAAyjG,EAAAxjG,MAAA,UAERugB,EAFQ,cAAAjrB,OAEsBwD,EAAYmD,QAFlC,KAAA3G,OAE6CiN,KACrDiM,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAJ5B,CAAAuxG,EAAAxjG,KAAA,eAAAwjG,EAAAjzF,OAAA,SAKL1c,EAAKwM,MAAMmO,IALN,cAQR8X,EAAYzyB,EAAK8uB,uBACjBm+B,EAAUjtD,EAAKuQ,gBAAgB,CAAC,QAAS,UACzCi0C,EAASxkD,EAAKuQ,gBAAgB,CAAC,QAAS,WACxC0iC,EAXQ,GAAAxxC,OAWMwrD,EAAQha,SAASxgB,IAXvBhxB,OAWoCwD,EAAYmD,QAXhD,YAAA3G,OAWkEiN,EAXlE,uBAAAihG,EAAAxjG,KAAA,GAeJ4P,QAAQqD,IAAI,CACpBpf,EAAK6tC,kBAAkBoF,EAAUga,EAAQv1B,KAAK,GAAM,EAAO8sB,GAC3DxkD,EAAKgF,mBAAmBC,GAAa,GAAO,KAjBhC,WAAAuqG,EAAAG,EAAAzgG,KAAAugG,EAAAh1G,OAAA6yB,EAAA,EAAA7yB,CAAA+0G,EAAA,GAaZ16B,EAbY26B,EAAA,GAcZ3iF,EAdY2iF,EAAA,GAoBVC,EAAa1vG,EAAKwM,MAAM,GAExBsgB,GACFryB,OAAOoE,KAAKiuB,EAAgBhoB,0BAA0B/F,QAAQ,SAAAoJ,GAC5D,IAAM6gF,EAAyBhpF,EAAKwM,MAAMsgB,EAAgBhoB,yBAAyBqD,IACnF,GAAI6gF,EAAuB54E,GAAG,MAAQ,CACpC,IAAIw/F,EAAgB,KAEd5nG,EAAe8sE,GAAaA,EAAUh2E,OAAS,EAAIg2E,EAAU,GAAGkmB,cAAczgF,KAAK,SAAAle,GAAC,OAAKA,EAAE8L,aAAaE,gBAAkBF,EAAaE,gBAAkB,KAM/J,GALIL,IACF4nG,EAAgB5vG,EAAKwM,MAAMxE,EAAa4zF,aAIrCgU,GAAiB5vG,EAAKwM,MAAMojG,GAAexxG,SAAW4B,EAAKwM,MAAMojG,GAAeniF,IAAI,GAAI,CAC3F,IAAMuL,EAAiB/zB,EAAY8C,UAAUwS,KAAK,SAAAle,GAAC,OAAIA,EAAE+L,QAAQC,gBAAkBF,EAAaE,gBAC5F2wB,IACF42E,EAAgB5vG,EAAKwM,MAAMwsB,EAAe4iE,YAIzCgU,EAAcxxG,UACjBsxG,EAAaA,EAAW1iG,KAAK4iG,EAAcpnG,MAAMwgF,QAOpD0mB,IAAcA,EAAWtxG,UAAWsxG,EAAWjiF,IAAI,GAjD1C,CAAAkiF,EAAAxjG,KAAA,gBAAAwjG,EAAAxjG,KAAA,GAkDOnM,EAAK6vG,iBAAiB5qG,EAAayJ,GAlD1C,QAkDZghG,EAlDYC,EAAAzgG,KAAA,eAAAygG,EAAAjzF,OAAA,SAqDP1c,EAAKguB,8BAA8BtB,EAAegjF,IArD3C,yBAAAC,EAAAriG,SAAAiiG,EAAAz0G,SA/hRG,gBAAAg1G,EAAAC,GAAA,OAAAT,EAAA9hG,MAAA1S,KAAA2S,YAAA,GAAA3S,KA0lRnB+0G,iBA1lRmB,eAAAG,EAAAv1G,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA0lRA,SAAAqkG,EAAOhrG,EAAayJ,GAApB,IAAAge,EAAA/R,EAAA8X,EAAAw6B,EAAAzI,EAAAvR,EAAAi9D,EAAAp7B,EAAA46B,EAAA//F,EAAAsyC,EAAAvyC,EAAA,OAAAoc,EAAA7wB,EAAA+Q,KAAA,SAAAmkG,GAAA,cAAAA,EAAAjkG,KAAAikG,EAAAhkG,MAAA,UAEXugB,EAFW,iBAAAjrB,OAEsBwD,EAAYmD,QAFlC,KAAA3G,OAE6CiN,KACxDiM,EAAa3a,EAAK+tB,8BAA8BrB,KACnC1sB,EAAKwM,MAAMmO,GAAYvc,QAJzB,CAAA+xG,EAAAhkG,KAAA,eAAAgkG,EAAAzzF,OAAA,SAKR1c,EAAKwM,MAAMmO,IALH,UAQX8X,EAAYzyB,EAAK8uB,wBACjBm+B,EAAUjtD,EAAKuQ,gBAAgB,CAAC,QAAS,YAElC0iC,SAASxgB,GAXL,CAAA09E,EAAAhkG,KAAA,eAAAgkG,EAAAzzF,OAAA,SAYR1c,EAAKwM,MAAM,IAZH,cAeXg4C,EAASxkD,EAAKuQ,gBAAgB,CAAC,QAAS,WACxC0iC,EAhBW,GAAAxxC,OAgBGwrD,EAAQha,SAASxgB,IAhBpBhxB,OAgBiCwD,EAAYmD,QAhB7C,YAAA3G,OAgB+DiN,GAhB/DyhG,EAAAhkG,KAAA,GAiBEnM,EAAK6tC,kBAAkBoF,EAAUga,EAAQv1B,KAAK,GAAM,EAAO8sB,GAjB7D,cAiBb0rD,EAjBaC,EAAAjhG,OAmBHghG,EAAOpxG,OAAS,GAnBb,CAAAqxG,EAAAhkG,KAAA,cAoBX2oE,EAAYo7B,EAAO31F,KAAK,SAAAkX,GAAC,OAAIA,EAAErpB,QAAQC,gBAAkBpD,EAAYmD,QAAQC,iBApBlE,CAAA8nG,EAAAhkG,KAAA,cAsBTujG,EAAa1vG,EAAKwM,MAAMsoE,EAAUwmB,cACpBoU,EAAWt/F,GAAG,GAvBnB,CAAA+/F,EAAAhkG,KAAA,gBAAAgkG,EAAAzzF,OAAA,SAyBJ1c,EAAK4a,cAAc8R,EAAegjF,IAzB9B,eA4BL//F,EAAY9C,SAASe,KAAK84B,MAAQ,KAClCub,EAAiBp1C,SAAS8C,GAAc,MA7BnCwgG,EAAAhkG,KAAA,GA8BOnM,EAAKiP,gBAAgBhK,EAAYmD,QAASsG,EAAQuzC,EAAgB,MAAM,EAAM,KAAM,QA9B3F,WA8BX6yB,EA9BWq7B,EAAAjhG,OAgCLQ,EAAoBolE,EAAUzoE,OAAO,SAAA5G,GAAC,OAAKzF,EAAKwM,MAAM/G,EAAE61F,WAAWlrF,GAAG,MACtDtR,OAjCX,CAAAqxG,EAAAhkG,KAAA,YAkCTujG,EAAa1vG,EAAKwM,MAAMkD,EAAkB,GAAG4rF,WACxCt7F,EAAKwM,MAAMkjG,GAAYtxG,QAnCnB,CAAA+xG,EAAAhkG,KAAA,gBAAAgkG,EAAAzzF,OAAA,SAoCA1c,EAAKguB,8BAA8BtB,EAAegjF,IApClD,eAAAS,EAAAzzF,OAAA,SA2CV1c,EAAKwM,MAAM,IA3CD,yBAAA2jG,EAAA7iG,SAAA2iG,EAAAn1G,SA1lRA,gBAAAs1G,EAAAC,GAAA,OAAAL,EAAAxiG,MAAA1S,KAAA2S,YAAA,GAAA3S,KA0oRnB6hC,aA1oRmB,eAAA2zE,EAAA71G,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KA0oRJ,SAAA2kG,EAAOtrG,GAAP,IAAAyiE,EAAAkG,EAAAtxC,EAAA7J,EAAA/F,EAAA/R,EAAA61F,EAAA9/E,EAAA+/E,EAAAC,EAAAjjG,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA2kG,GAAA,cAAAA,EAAAzkG,KAAAykG,EAAAxkG,MAAA,UAAAukG,EAAA5xG,OAAA,QAAA0qB,IAAAknF,EAAA,IAAAA,EAAA,GAA6ChpC,IAA7CgpC,EAAA5xG,OAAA,QAAA0qB,IAAAknF,EAAA,KAAAA,EAAA,GAAkE9iC,EAAlE8iC,EAAA5xG,OAAA,QAAA0qB,IAAAknF,EAAA,IAAAA,EAAA,GAEPp0E,EAAY,CAChB8xB,OAAQpuD,EAAKwM,MAAM,GACnBqwB,OAAQ78B,EAAKwM,MAAM,IAGhBvH,EAAYmoB,KAPJ,CAAAujF,EAAAxkG,KAAA,eAAAwkG,EAAAj0F,OAAA,SAQJ4f,GARI,UAWP7J,EAAYzyB,EAAK8uB,uBAGjBpC,EAdO,aAAAjrB,OAcsBgxB,EAdtB,KAAAhxB,OAcmCwD,EAAYmoB,KAAKhlB,QAdpD,KAAA3G,OAc+DimE,MACtE/sD,EAAa3a,EAAK+tB,8BAA8BrB,KAInC/R,EAAWyzC,QAAUpuD,EAAKwM,MAAMmO,EAAWyzC,QAAQh+C,GAAG,IAAQuK,EAAWkiB,QAAU78B,EAAKwM,MAAMmO,EAAWkiB,QAAQzsB,GAAG,IAnB1H,CAAAugG,EAAAxkG,KAAA,gBAAAwkG,EAAAj0F,OAAA,SAoBJ,CACL0xC,OAAQpuD,EAAKwM,MAAMmO,EAAWyzC,QAC9BvxB,OAAQ78B,EAAKwM,MAAMmO,EAAWkiB,UAtBrB,eAAA8zE,EAAAxkG,KAAA,GA0BYnM,EAAKosB,oBAAoBnnB,EAAYmoB,KAAK7gB,MAAO,aA1B7D,WA0Bb+vB,EAAU8xB,OA1BGuiD,EAAAzhG,KA2BTotB,EAAU8xB,SACZ9xB,EAAU8xB,OAASpuD,EAAKgQ,iBAAiBssB,EAAU8xB,OAAQ,MAKzD9xB,EAAU8xB,OAjCD,CAAAuiD,EAAAxkG,KAAA,YAmCXmwB,EAAUO,OAAS78B,EAAKikC,QAAQ3H,EAAU8xB,OAAO9vC,IAAI,MAAM9V,MAAM,KAG3DgoG,EAAsB5iC,GAAe5tE,EAAKuQ,gBAAgB,CAAC,YAAa,OAAQ,aAC1DvQ,EAAKuQ,gBAAgB,CAAC,YAAa,OAAQ,cAC5CigG,EAxChB,CAAAG,EAAAxkG,KAAA,gBAyCHukB,EAAe1wB,EAAKqyE,kBAzCjBs+B,EAAAxkG,KAAA,GA0CaukB,EAAanE,OAAOtnB,EAAYsH,MAAOtH,GA1CpD,SA0CHwrG,EA1CGE,EAAAzhG,QA4CPotB,EAAU8xB,OAAS9xB,EAAU8xB,OAAOphD,KAAKyjG,GACzCn0E,EAAUO,OAASP,EAAUO,OAAO7vB,KAAKyjG,IA7ClC,eAmDPzwG,EAAKwM,MAAM8vB,EAAUO,QAAQz+B,UAC/Bk+B,EAAUO,OAAS78B,EAAKwM,MAAM,IAE5BxM,EAAKwM,MAAM8vB,EAAU8xB,QAAQhwD,UAC/Bk+B,EAAU8xB,OAASpuD,EAAKwM,MAAM,IAvDrBmkG,EAAAj0F,OAAA,SA4DJ1c,EAAKguB,8BAA8BtB,EAAe4P,IA5D9C,eAAAq0E,EAAAj0F,OAAA,SA+DN4f,GA/DM,yBAAAq0E,EAAArjG,SAAAijG,EAAAz1G,SA1oRI,gBAAA81G,GAAA,OAAAN,EAAA9iG,MAAA1S,KAAA2S,YAAA,GAAA3S,KA2sRnB0D,iBAAmB,SAACyH,GAMlB,IAN8E,IAArDxH,EAAqDgP,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAA1C,EAAG/O,EAAuC+O,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAxB,EAAG9O,EAAqB8O,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAN,EAElEojG,EAAatoG,WAAWtC,GAAS,EACnC0zC,EAAW35C,EAAKwM,MAAMvG,GAAOukD,MAE7BsmD,EAAY,EACTn3D,EAASsmB,IAAI,MAClBtmB,EAAWA,EAASr7B,IAAI,KACxBwyF,IAMF,GAHApyG,EAAeiO,KAAKqE,IAAI,EAAGtS,GAGvBuH,GAAS,IAAM,CACjB,IAAM8qG,EAActyG,EAAWk7C,EAASq3D,IAAI,GAAGvoG,QAAQ/J,GAAc0hB,OAAO,EAAG3hB,GAAY,KAC3Fk7C,EAAW9sC,SAAS8sC,GAAUp7B,YAAcwyF,EAAc,IAAMA,EAAc,SAE9Ep3D,EAAWA,EAASlxC,QAAQhK,GAI9B,GAAIk7C,GAAY,GAAMA,EAAS76C,OAAS,EAAKJ,EAC3Ci7C,EAAWpxC,WAAWoxC,GAAUs3D,YAAYvyG,QACvC,GAAKi7C,EAAS76C,OAAS,EAAKH,EAAc,CAC/C,IAAMuyG,EAAavyG,GAAgBg7C,EAAS76C,OAAS,GAErD66C,GADe35C,EAAKwM,MAAMvG,GAAOukD,MAAMjsC,WAAW2U,QAAQ,IAAK,IAAI9S,OAAQu5B,EAAS76C,OAAS,EAAIoyG,GAWnG,OANIL,IACFl3D,EAAW,IAAMA,GAGnBA,GA/BiB,CAAC,GAAI,IAAK,IAAK,IAAK,KA+BhBm3D,IA7uRrBh2G,KAAKgD,SAAS/C,mEAivRIoS,EAASpE,EAAOtK,EAAU0yG,EAAQC,GAEpD3yG,EAAYL,MAAMK,GAAuB,EAAXA,EAC9B0yG,EAAU/yG,MAAM+yG,GAAmB,GAATA,EAC1BC,EAAuBhzG,MAAMgzG,GAA6C,EAAtBA,EAGpD,IAAMC,GAFNlkG,EAAU5E,WAAWzN,KAAK0R,MAAMW,IAAU1E,QAAQhK,IAE3B8f,WAAW2U,QAAQ,IAAK,IAAIp0B,OAC/CuyG,EAASF,IACX1yG,EAAWkO,KAAKqE,IAAI,EAAGvS,GAAY4yG,EAASF,IAC5ChkG,EAAU5E,WAAWzN,KAAK0R,MAAMW,IAAU1E,QAAQhK,IAGpD,IAAM6yG,EAAU3kG,KAAKgF,MAAMxE,GACvBokG,GAAWpkG,EAAU,GAAG8jG,YAAYxyG,GAAU2hB,OAAO,EAAG3hB,GAG5D,GAFA8yG,GAAWA,EAAW,IAAIC,OAAO/yG,IAAY2hB,OAAO,EAAG3hB,GAEnD2yG,EAAqB,CACvB,IAAMK,EAAiBF,EAAQnxF,OAAO,EAAGgxF,GACzCG,EAAUA,EAAQnxF,OAAOgxF,GACzB,IAAMM,EAAsBjuG,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CAAWnjB,SAAU,OAAQJ,MAAO,OAAQG,WAAY,WAAY+zG,EAApE,IAA8EG,GAC1G,OAAQrzG,MAAMtD,KAAK61B,QAAQxjB,IApBR,IAoBqB1J,EAAAxI,EAAAC,cAAAuI,EAAAxI,EAAA02G,SAAA,KAAGD,EAAmBjuG,EAAAxI,EAAAC,cAAA,SAAOiG,MAAO,CAAE3D,SAAU,QAAU+zG,GAA1D,IAA2E9tG,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CAAWnjB,SAAU,CAAC,EAAG,IAAKuL,IAEjJ,OAAQ3K,MAAMtD,KAAK61B,QAAQxjB,IAtBR,IAsBqB1J,EAAAxI,EAAAC,cAAAuI,EAAAxI,EAAA02G,SAAA,KAAGL,EAAQ7tG,EAAAxI,EAAAC,cAAA,iBAASq2G,GAA2B,MAAVxoG,EAAgB,IAAM,KAAMA,EAAQtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CAAWnjB,SAAU,CAAC,EAAG,IAAKuL,GAAqB,eAK3JhL,o0KClyRT6zG,6MAEJtvG,MAAQ,CACNuvG,WAAW,+EAGAA,GACX/2G,KAAKgI,SAAS,CACZ+uG,+CAIK,IAAA5zG,EAAAnD,KACDQ,EAAaR,KAAKC,MAAMO,WACxBD,EAAWP,KAAKC,MAAMM,WAAaC,EACnCF,EAAgBN,KAAKC,MAAMK,gBAAkBE,EAC7C4I,EAA4C,qBAAzBpJ,KAAKC,MAAMmJ,WAA4BpJ,KAAKC,MAAMmJ,UACrE4tG,EAA4C,qBAAzBh3G,KAAKC,MAAM+2G,WAA4Bh3G,KAAKC,MAAM+2G,UAErEt3G,EAAY,CAChB6B,EAAG,EACHgE,OAAQ,EACR0J,UAAW,EACXzN,aAAc,EACdmL,YAAa,KACb0B,SAAU,WACVogB,UAAW,UACX/tB,gBAAiB,UAIfV,KAAKC,MAAMP,WAAaC,OAAOoE,KAAK/D,KAAKC,MAAMP,WAAWsE,QAC5DrE,OAAOoE,KAAK/D,KAAKC,MAAMP,WAAWuE,QAAQ,SAAA1C,GACxC7B,EAAU6B,GAAK4B,EAAKlD,MAAMP,UAAU6B,MAIpChB,GAAaD,GAAiBN,KAAKwH,MAAMuvG,aAC3Cr3G,EAAU6F,OAAS,EACnB7F,EAAUuP,UAAY,KACtBvP,EAAUgB,gBAAkB,eAG9B,IAAMmI,EAAY,CAChBC,IAAOmuG,eACP12G,EAAWuI,IAAOouG,OAAS,KAC1B9tG,EAA4B,KAAhBN,IAAOquG,OACpBH,EAAYluG,IAAOsuG,QAAU,KAC7B52G,EAAasI,IAAO5B,SAAW,KAC/B5G,EAAgBwI,IAAOuuG,YAAc,MAOvC,OAJIr3G,KAAKC,MAAM4I,WAAaC,IAAO9I,KAAKC,MAAM4I,YAC5CA,EAAU+E,KAAK9E,IAAO9I,KAAKC,MAAM4I,YAIjC3I,EAAAC,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,GACMF,EADN,CAEEmJ,UAAWA,EACXjD,QAAS5F,KAAKC,MAAMQ,YACpB62G,WAAY,SAACxwG,GAAD,OAAO3D,EAAKo0G,cAAa,IACrCC,YAAa,SAAC1wG,GAAD,OAAO3D,EAAKo0G,cAAa,MAGpCv3G,KAAKC,MAAM+mB,OAAShnB,KAAKC,MAAM+mB,MAAMhjB,OAAS,GAC9C9D,EAAAC,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEyJ,GAAI,CAAC,EAAG,GACR3D,GAAI,CAAC,EAAG,GACR3E,WAAY,SACZC,cAAe,OACXhB,KAAKC,MAAMw3G,kBAEfv3G,EAAAC,EAAAC,cAACkE,EAAA,EAAQ6K,GAATxP,OAAAC,OAAA,CACE6C,WAAY,EACZC,SAAU,CAAC,EAAG,GACd4G,UAAW,OACXhH,MAAO,YACPo1G,WAAY,WACR13G,KAAKC,MAAM03G,YAEd33G,KAAKC,MAAM+mB,OAGZhnB,KAAKC,MAAM23G,aAAe53G,KAAKC,MAAM23G,YAAY5zG,OAAS,GAC1D9D,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEgrB,UAAW,MACXC,QAASvvB,KAAKC,MAAM23G,aAEpB13G,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEoB,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,gBAOhBtC,KAAKC,MAAMwJ,iBApGQ5G,aA0Gbi0G,mLCzGTe,6MAGJ90G,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,kJAIL,OACEmB,EAAAlE,EAAAC,cAACkb,EAAA,EAAD,CACE5b,UAASC,OAAAoP,EAAA,EAAApP,CAAA,CACP4B,EAAE,EACF8H,GAAG,GACArJ,KAAKC,MAAMP,YAGhB2E,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACErN,WAAY,SACZC,cAAe,UAEfqD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACE/L,KAAM,QACNF,KAAM,QACNG,MAAO,aAET+B,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACE/E,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,uDAQAjF,EAAAlE,EAAAC,cAAC03G,EAAA,EAAD,CACExyG,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM83G,2BAL1B,oBA/Cel1G,aA8DVg1G,8IC/DTG,6MAGJj1G,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KACDi4G,EAAiBj4G,KAAKC,MAAMi4G,eAC5B53G,EAAkD,oBAA3BN,KAAKC,MAAMQ,YACxC,OACE4D,EAAAlE,EAAAC,cAAC+3G,EAAA,EAADx4G,OAAAC,OAAA,CACEF,UAAW,CACT6O,GAAG,EACHzO,MAAM,EACNC,GAAG,CAAC,EAAE,GACNF,GAAG,CAAC,EAAE,SAERuF,GAAIpF,KAAKC,MAAMm4G,QACXp4G,KAAKC,MAAMo4G,SARjB,CASExvG,UAAW7I,KAAKC,MAAMwR,MACtBnR,cAAeA,EACfG,YAAaH,EAAgB,SAAAwG,GAAC,OAAI3D,EAAKlD,MAAMQ,YAAY0C,EAAKlD,QAAS,OAEvEoE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEtD,cAAe,MACfoE,GAAIpF,KAAKC,MAAMq4G,OAGbt4G,KAAKC,MAAMs4G,KAAKzyG,IAAI,SAAC0yG,EAAQC,GAC3B,IAAMC,EAAmBF,EAAQE,mBAAoB,EACrD,OAAwB,IAApBF,EAAQG,UAAyC,IAAnBH,EAAQ7zG,QAAoBxB,EAAKlD,MAAM+B,WAAiC,IAAnBw2G,EAAQ7zG,SAAoB+zG,IAAqBv1G,EAAKlD,MAAM+B,SAC1I,KAGPqC,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEiH,IAAG,OAAAF,OAAS8xG,IACRD,EAAQv4G,OAEZoE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZC,cAAe,OACXw3G,EAAQ55F,aAGV45F,EAAQ1xD,OAAOhhD,IAAI,SAAC6Z,EAAUi5F,GAC5B,IAAKj5F,IAAmC,IAAtBA,EAAUg5F,UAA2C,IAArBh5F,EAAUhb,QAAoBxB,EAAKlD,MAAM+B,SACzF,OAAO,KAET,IAAMsuB,EAAkB3Q,EAAUu4F,eAE9BloF,EAAarQ,EAAU1f,MAO3B,OAJI0f,EAAUk5F,WAAal5G,OAAOoE,KAAK4b,EAAUk5F,WAAW70G,OAAO,IACjEgsB,EAAa7sB,EAAKJ,cAAc01B,2BAA2BzI,EAAWrQ,EAAUk5F,UAAU11G,EAAKlD,QAI/FoE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEmC,OAAQ,OACRf,cAAe,SACfD,WAAY,aACZE,eAAgB,UACZ0e,EAAUf,YALhB,CAMEvY,MAAOsZ,EAAUtZ,OAAS,CACxBE,SAAS,UAEXzG,MAAO04G,EAAQ1xD,OAAO9iD,OAAO,EAAI,OAAS,EAC1CoB,GAAE,SAAAuB,OAAW8xG,EAAX,KAAA9xG,OAAuBiyG,EAAvB,KAAAjyG,OAAqCgZ,EAAUxd,MACjD0E,IAAG,SAAAF,OAAW8xG,EAAX,KAAA9xG,OAAuBiyG,EAAvB,KAAAjyG,OAAqCgZ,EAAUxd,QAGhDmuB,EACEjsB,EAAAlE,EAAAC,cAACkwB,EAAD3wB,OAAAC,OAAA,GACMuD,EAAKlD,MACL+vB,IAGN3rB,EAAAlE,EAAAC,cAAC63G,EAADt4G,OAAAC,OAAA,GACMuD,EAAKlD,MADX,CAEE0f,UAAWA,EACXm5F,SAAUN,EAAQv4G,MAClBqa,SAAQ,SAAA3T,OAAW8xG,EAAX,KAAA9xG,OAAuBiyG,EAAvB,KAAAjyG,OAAqCgZ,EAAUxd,yBAlGlEU,aAqHRm1G,8weCzHfxzG,EAAAC,QAAA,CAAkBwyG,eAAA,sCAAAE,OAAA,8BAAAE,YAAA,mCAAAD,QAAA,+BAAAlwG,SAAA,0iVCeZ6xG,6MAEJvxG,MAAQ,CACNwxG,eAAe,KACfC,iBAAiB,GACjBC,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBnvG,cAAc/E,EAAKjF,MAAMo5G,YAkF3Bt2G,cAAgB,OA+ChBu2G,0DAAsB,SAAAvoG,EAAOjK,EAAE2b,EAAS82F,GAAlB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAA15G,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEdmoG,EAFc,eAAA1lG,EAAAnU,OAAAm6G,EAAA,EAAAn6G,CAAAk6G,EAAA15G,EAAA2Q,KAEF,SAAA6P,EAAOnP,GAAP,OAAAqoG,EAAA15G,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,OAEhBsT,OAAOo1F,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,QAAAtzG,OAAUzB,EAAKsC,MAAMyC,cAArB,wBAChBiwG,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGXn1G,EAAKjF,MAAMq6G,oBAVK,wBAAAz5F,EAAArO,SAAAmO,EAAA3gB,SAFE,gBAAAqU,GAAA,OAAAP,EAAApB,MAAA1S,KAAA2S,YAAA,GAed8mG,EAfc,eAAAv4F,EAAAvhB,OAAAm6G,EAAA,EAAAn6G,CAAAk6G,EAAA15G,EAAA2Q,KAeJ,SAAAsQ,EAAOta,GAAP,OAAA+yG,EAAA15G,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAAAkQ,EAAAK,OAAA,UACP,GADO,wBAAAL,EAAA/O,SAAA4O,EAAAphB,SAfI,gBAAAmzB,GAAA,OAAAjS,EAAAxO,MAAA1S,KAAA2S,YAAA,GAmBd+mG,EAAkB7rG,IAAc0sG,SAASh4E,UAAU9f,GACnDk3F,EAAaD,GAAmBA,EAAgBc,cAAgBd,EAAgBc,cAAct1G,EAAKjF,MAAM4N,IAAc0rG,EAAUC,EAAUC,GAAW,KApBxItoG,EAAAuhB,GAuBZjQ,EAvBYtR,EAAAE,KAAA,qBAyBsB,oBAA3BqoG,EAAgBe,SACnBb,EAAej6G,OAAOC,OAAO,GAAGsF,EAAKsC,OAC3CkyG,EAAgBe,OAAOd,EAAW,KAAKC,EAAa/rG,MA3BtCsD,EAAAyQ,OAAA,sBAiChB/T,IAAc4/C,UAAUC,OAAOhI,OAAOrzB,QAjCtB,CAAAlhB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkCZnM,EAAKnC,cAAckb,yBAAyB,CAChDN,cAAe,MACfG,YAAa,kBACbF,WAAY6E,IArCI,QAwClBvd,EAAKw1G,WAAW5zG,GAxCEqK,EAAAE,KAAA,iBA0ClBnM,EAAKw1G,WAAW5zG,GA1CE,yBAAAqK,EAAAqB,SAAAzB,EAAA/Q,qEA8CtB26G,OAAS,SAAC7zG,GACRA,EAAEgI,iBAEE5J,EAAKsC,MAAM2xG,iBACbj0G,EAAK8C,SAAS,CACZmxG,iBAAiB,OAEVj0G,EAAKsC,MAAMwxG,eACpB9zG,EAAK8C,SAAS,CACZgxG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,OAEVj0G,EAAKsC,MAAMyC,cACpB/E,EAAK8C,SAAS,CACZgxG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBlvG,cAAc/E,EAAKjF,MAAMo5G,WAG3Bn0G,EAAK01G,gBAITA,WAAa,WACX11G,EAAK8C,SAAS,CACZgxG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBnvG,cAAc/E,EAAKjF,MAAMo5G,WAG3Bn0G,EAAK21G,wBAGPH,WAAa,SAAC5zG,GACZ5B,EAAK01G,aACA11G,EAAKjF,MAAM66G,YAA+C,oBAA1B51G,EAAKjF,MAAMy6G,YAC9Cx1G,EAAKjF,MAAMy6G,gBAIfK,gBAAkB,SAACt4F,GACjB,IAAK5U,IAAc0sG,SAASh4E,UAAU9f,GACpC,OAAO,EAET,IAAIu4F,EAAentG,IAAc0sG,SAASh4E,UAAU9f,GACpD,GAAoC,oBAAzBu4F,EAAaC,QAAuB,CAC7C,IAAMC,EAAkBF,EAAaC,QAAQ/1G,EAAKsC,OAC9C0zG,GAAmBv7G,OAAOoE,KAAKm3G,GAAiBl3G,SAClDg3G,EAAer7G,OAAOC,OAAOo7G,EAAaE,IAG9C,OAAOF,KAGTG,0BAA4B,SAACnC,GAC3B,IAAMoC,EAAgBl2G,EAAKsC,MAAMyxG,iBAAiBD,GAClD,OAAIoC,GAAiBA,EAAcvsD,gBAC1BusD,EAAcvsD,gBAEhB,QAGTwsD,6BAA+B,SAACrC,EAAe/uG,GAC7C,IAAMmvG,EAAqB,GAE3Bz5G,OAAOoE,KAAK8J,IAAc0sG,SAASh4E,WAAWz8B,IAAI,SAAC2c,EAAStV,GAC1D,IAAM6tG,EAAentG,IAAc0sG,SAASh4E,UAAU9f,GAChD64F,GAAmF,IAA3DN,EAAaO,iBAAiBh/F,QAAQy8F,GAC9DwC,EAAuBvxG,GAAyE,IAAzD+wG,EAAaS,gBAAgBl/F,QAAQtS,IAA6F,IAApE+wG,EAAaS,gBAAgBl/F,QAAQrX,EAAKjF,MAAMgK,iBAA4F,IAAnE+wG,EAAaS,gBAAgBl/F,QAAQ1O,IAAc2uB,WAIvO,OAHIw+E,EAAa3oF,SAAWipF,GAAyBE,GACnDpC,EAAmBxrG,KAAK6U,GAEnBA,IAGT,IAAMi5F,EAAyBx2G,EAAKi2G,0BAA0BnC,GAE9D,OAAI0C,GAA0Bx2G,EAAKsC,MAAMyxG,iBAAiBD,GAAgB2C,kBAA2E,IAAxDvC,EAAmB78F,QAAQm/F,GAC/G,CAACA,GAGHtC,KAGTwC,eAAiB,SAAC90G,EAAEqyG,GAKlB,GAJIryG,GACFA,EAAEgI,kBAGCqqG,IAAqBtrG,IAAc0sG,SAASh4E,UAAU42E,GACzD,OAAOj0G,EAAK8C,SAAS,CACnBmxG,iBAAiB,OAIrB,IAAM6B,EAAentG,IAAc0sG,SAASh4E,UAAU42E,GACtD,GAAI6B,EAAa,CAEf,GAAI91G,EAAKsC,MAAMyC,cAEb,YADA/E,EAAKo0G,oBAAoBxyG,EAAEqyG,EAAiBj0G,EAAKsC,OAInD,IAAMq0G,GAAkF,IAAnEb,EAAaS,gBAAgBl/F,QAAQ1O,IAAc2uB,WAClEs/E,GAAqF,IAApEd,EAAaS,gBAAgBl/F,QAAQrX,EAAKjF,MAAMgK,eAGjEmG,EAAkB,GACxB,KAAMyrG,GAAgBC,IAAoBA,GASxC,YADA52G,EAAKo0G,oBAAoBxyG,EAAEqyG,EAAiBj0G,EAAKsC,OAP7Cq0G,GACFzrG,EAAgBxC,KAAKC,IAAc2uB,WAEjCs/E,GACF1rG,EAAgBxC,KAAK1I,EAAKjF,MAAMgK,eAOpC/E,EAAK8C,SAAS,CACZoI,kBACA+oG,yBAKN4C,aAAe,SAACj1G,EAAEkyG,GAKhB,GAJIlyG,GACFA,EAAEgI,kBAGsE,IAAtEnP,OAAOoE,KAAKmB,EAAKsC,MAAMyxG,kBAAkB18F,QAAQy8F,GAAuB,CAC1E,IAAMI,EAAqBl0G,EAAKm2G,6BAA6BrC,EAAe9zG,EAAKsC,MAAMyC,eAGvF/E,EAAKnC,cAAckb,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,gBACbF,WAAYo7F,IAGd9zG,EAAK8C,SAAS,CACZoxG,qBACAJ,uBAKNgD,YAAc,SAACl1G,EAAEmD,GACXnD,GACFA,EAAEgI,iBAIJ5J,EAAKnC,cAAckb,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,eACbF,WAAY3T,IAGd/E,EAAK8C,SAAS,CAAEiC,iBAAhBtK,OAAAm6G,EAAA,EAAAn6G,CAAAk6G,EAAA15G,EAAA2Q,KAAiC,SAAAiD,IAAA,OAAA8lG,EAAA15G,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,WAC3BnM,EAAKsC,MAAM2xG,iBADgB,CAAAllG,EAAA5C,KAAA,eAAA4C,EAAA2N,OAAA,SAEtB1c,EAAKo0G,oBAAoBxyG,EAAE5B,EAAKsC,MAAM2xG,iBAAiBj0G,EAAKsC,QAFtC,OAI7BtC,EAAK+2G,sBAJwB,wBAAAhoG,EAAAzB,SAAAuB,EAAA/T,aASnCk8G,oBAAsB,SAAAhD,GAGhBrrG,IAAc4/C,UAAUC,OAAOhI,OAAOrzB,SAAW6mF,GACnDh0G,EAAKnC,cAAckb,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,iBACbF,WAAYs7F,EAAgB/tG,QAIhCjG,EAAK8C,SAAS,CACZkxG,uBAIJiD,sBAAwB,WACtB,IAAMC,EAAqB,GAwB3B,OAvBAl3G,EAAKsC,MAAM4xG,mBAAmBn1G,QAAQ,SAACwe,EAAStV,GAC9C,IAAM6tG,EAAe91G,EAAK61G,gBAAgBt4F,GACpC64F,GAA8F,IAAtEN,EAAaO,iBAAiBh/F,QAAQrX,EAAKsC,MAAMwxG,gBACzEwC,EAAuBt2G,EAAKsC,MAAMyC,eAAoF,IAApE+wG,EAAaS,gBAAgBl/F,QAAQrX,EAAKsC,MAAMyC,gBAA6F,IAApE+wG,EAAaS,gBAAgBl/F,QAAQrX,EAAKjF,MAAMgK,iBAA4F,IAAnE+wG,EAAaS,gBAAgBl/F,QAAQ1O,IAAc2uB,WAGxPw+E,EAAa3oF,SAAYipF,GAA0BE,GAKxDR,EAAaqB,mBAAmBp4G,QAAQ,SAACq4G,EAAYzsD,GAC9CusD,EAAmBE,KACtBF,EAAmBE,GAAe,CAChC/5E,UAAU,GACVt0B,MAAMJ,IAAc0uG,UAAUD,GAC9BnxG,MAAMmxG,IAGVF,EAAmBE,GAAa/5E,UAAU30B,KAAK6U,OAI5C9iB,OAAO2R,OAAO8qG,+MAjYhBp8G,KAAKwH,MAAMyC,wDACP,UAITtK,OAAOoE,KAAK8J,IAAc0sG,SAASh4E,WAAWt+B,QAAQ,SAACwe,EAAStV,GAE9D,IAAM6tG,EAAentG,IAAc0sG,SAASh4E,UAAU9f,GACtD,GAAIu4F,EAAa3oF,SAAW2oF,EAAawB,mBAAwF,IAApExB,EAAaS,gBAAgBl/F,QAAQpZ,EAAKqE,MAAMyC,iBAA4F,IAAnE+wG,EAAaS,gBAAgBl/F,QAAQ1O,IAAc2uB,YAAmB,CAE1M,IAAMggF,EAAkBxB,EAAawB,gBAErC78G,OAAOoE,KAAKy4G,GAAiBv4G,QAAQ,SAAC41B,EAAIg2B,GAIxC,OAFqBh2B,EAAI6xB,MAAM,KAAK/2C,MAAMpH,eAGxC,IAAK,KACH,IAAMkvG,EAAQ,UAAA91G,OAAa8b,EAAb,KAAA9b,OAAyBkpD,EAAzB,KAAAlpD,OAA8BxD,EAAKqE,MAAMyC,eAEvD,IAAKikB,SAASC,eAAesuF,GAAU,CACrC,IAAMv4B,EAASh2D,SAAS9tB,cAAc,UAChCs8G,EAAuBF,EAAgB3iF,GACvC9xB,EAAW20G,GAAwBA,EAAqB30G,SAAW20G,EAAqB30G,SAAW,KACnG40G,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAElGA,GAA8B,oBAAZA,GACpBA,EAAQx5G,EAAKqE,MAAMqG,IAAcmtG,GAG/BjzG,GAAgC,oBAAbA,IACjBm8E,EAAOE,WACTF,EAAOG,mBAAqB,WACC,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC5CF,EAAOG,mBAAqB,KAC5Bt8E,MAIJm8E,EAAOI,OAASv8E,GAIpBm8E,EAAO9+E,GAAKq3G,EACZv4B,EAAOr7E,UAAP,UAAAlC,OAA6B8b,GAC7ByhE,EAAOpiF,IAAM+3B,EACbqqD,EAAOyH,OAAQ,EAEX+wB,GAAwBA,EAAqBE,cAC/CF,EAAqBE,cAAcp4B,YAAYN,GAE/Ch2D,SAAS2uF,KAAKr4B,YAAYN,GAGhC,MACA,IAAK,MACH,IAAM44B,EAAY,cAAAn2G,OAAiB8b,EAAjB,KAAA9b,OAA6BkpD,GAE/C,IAAK3hC,SAASC,eAAe2uF,GAAc,CACzC,IAAMz2G,EAAQ6nB,SAAS9tB,cAAc,QAErCiG,EAAMjB,GAAK03G,EACXz2G,EAAM6f,IAAM,aACZ7f,EAAM8f,KAAO0T,EAEb3L,SAAS2uF,KAAKr4B,YAAYn+E,gJAclCrG,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,sDAI1B,IAAA6K,EAAA9K,KACdi5G,EAAmB,IACIj5G,KAAKC,MAAMg5G,kBAAoBj5G,KAAKC,MAAMg5G,iBAAiBj1G,OAAShE,KAAKC,MAAMg5G,iBAAmBt5G,OAAOoE,KAAK8J,IAAc0sG,SAAS7gE,UAE7Iz1C,QAAQ,SAAA63B,GAC3B,IAAMs9E,EAAqBtuG,EAAKuwG,6BAA6Bv/E,EAAOhxB,EAAKtD,MAAMyC,eAC/E,GAAImvG,GAAsBA,EAAmBp1G,OAAO,EAAE,CACpD,IAAM+4G,EAAalvG,IAAc0sG,SAAS7gE,QAAQ5d,GAClDihF,EAAW3D,mBAAqBA,EAChCH,EAAiBn9E,GAAUihF,KAI/B/8G,KAAKgI,SAAS,CACZixG,kEAKFj5G,KAAKkD,YAELlD,KAAKg9G,uBACLh9G,KAAKi8G,0KAILj8G,KAAKkD,iMAGkByE,mEAEvB3H,KAAKkD,YAEAlD,KAAKC,MAAMo5G,UAAY1xG,EAAU0xG,WAAar5G,KAAKC,MAAMo5G,UAC5Dr5G,KAAKg8G,YAAY,KAAKh8G,KAAKC,MAAMo5G,8IA4Q5B,IAAA4D,EAAAj9G,KAEHgnB,EAAQ,KACqB,OAA7BhnB,KAAKwH,MAAMyC,cACb+c,EAAQ,aAERA,EAAQ,OAAOhnB,KAAKwH,MAAMyC,cACQ,OAA9BjK,KAAKwH,MAAMwxG,iBACbhyF,GAAS,MAAMhnB,KAAKwH,MAAMyxG,iBAAiBj5G,KAAKwH,MAAMwxG,gBAAgB/4G,MAAMi9G,UAIhF,IAAI9sG,EAAkBpQ,KAAKC,MAAMmQ,iBAAmBzQ,OAAOoE,KAAK/D,KAAKC,MAAMmQ,iBAAiBpM,OAAO,EAA7E,CAAkF6J,IAAc2uB,WAAhG71B,OAAAhH,OAAAw9G,EAAA,EAAAx9G,CAA6GA,OAAOoE,KAAK/D,KAAKC,MAAMmQ,mBAAoB,CAACvC,IAAc2uB,WAGzLx8B,KAAKC,MAAMm9G,gBACbhtG,EAAkB,GAClBzQ,OAAOoE,KAAK8J,IAAc0sG,SAASh4E,WAAWt+B,QAAS,SAAAwe,GACrD,IAAMu4F,EAAentG,IAAc0sG,SAASh4E,UAAU9f,GAClDu4F,EAAaS,iBACfT,EAAaS,gBAAgBx3G,QAAQ,SAAAwN,GAC9BrB,EAAgBqkB,SAAShjB,IAC5BrB,EAAgBxC,KAAK6D,QAO/B,IAAM4rG,EAAiB,SAAAp9G,GAAK,OAC1BoE,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAKjH,SAAW81G,EAAKh9G,MAAM66G,WAAa,OAAS,CAAC,OAAO,SAE1B,OAA7BmC,EAAKz1G,MAAMyC,cACT5F,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAKG,GAAI,GACPlK,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEG,GAAI,CAAC,EAAE,GACP9L,WAAY,EACZ6G,UAAW,SACX5G,SAAU,CAAC,EAAGu6G,EAAKh9G,MAAM66G,WAAa,EAAI,IAJ5C,mCAQAz2G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEG,GAAI,EACJlI,MAAO,CACLi3G,SAAS,QAEXv8G,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAGzBoP,EAAgBtK,IAAI,SAAC2L,EAAMtE,GACzB,IAAMowG,EAAWN,EAAKl6G,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,UAAzE,iBAAA/O,OAAsG8K,EAAtG,QACjB,OACEpN,EAAAlE,EAAAC,cAACo9G,EAAA,EAAD,CACEN,QAASzrG,EACT8rG,SAAUA,EACV12G,IAAG,SAAAF,OAAW8K,GACdzP,SAAUi7G,EAAKh9G,MAAM+B,SACrBvB,YAAc,SAAAqG,GAAOm2G,EAAKjB,YAAYl1G,EAAE2K,IACxCxP,WAAag7G,EAAKh9G,MAAM+B,SAAW,CAACD,OAAO,QAAU,CAACR,EAAE,CAAC,EAAE,GAAGQ,OAAO,QACrEuD,YAAe23G,EAAKh9G,MAAM+B,SAItB,KAJiC,CACnCqE,MAAM,CACJ2Z,KAAO,oBASW,OAA9Bi9F,EAAKz1G,MAAMwxG,eACb30G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,KACE/J,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAMG,GAAI,EAAGvN,cAAe,SAAUC,eAAgB,SAAUF,WAAY,WAEvEk8G,EAAKh9G,MAAM66G,YACVz2G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAOrM,OAAQ,EAAGwM,GAAI,EAAGzM,IAAG,iBAAA6E,OAAmBs2G,EAAKz1G,MAAMyC,cAA9B,UAG9BgzG,EAAKh9G,MAAMwJ,SACTwzG,EAAKh9G,MAAMwJ,SACXwzG,EAAKh9G,MAAMw9G,QACXp5G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAM9E,UAAW,SAAU7G,WAAY,IAAKC,SAAU,CAAC,EAAGu6G,EAAKh9G,MAAM66G,WAAa,EAAI,GAAIzxG,GAAI,EAAGE,wBAAyB,CAACC,OAAOyzG,EAAKh9G,MAAMw9G,WAE7Ip5G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAM9E,UAAW,SAAU7G,WAAY,IAAKC,SAAU,CAAC,EAAGu6G,EAAKh9G,MAAM66G,WAAa,EAAI,IAEjFmC,EAAKh9G,MAAM66G,YAAcmC,EAAKh9G,MAAMo5G,SAAa15G,OAAOoE,KAAKk5G,EAAKz1G,MAAMyxG,kBAAkBj1G,OAAO,EAAhD,6BAAA2C,OAAiFs2G,EAAKh9G,MAAMo5G,SAA5F,gFAAA1yG,OAAqLs2G,EAAKh9G,MAAMo5G,SAAhM,oBAAjD,4BAAA1yG,OAA4Ss2G,EAAKz1G,MAAMyC,cAAvT,OAMX5F,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAMG,GAAI0uG,EAAKh9G,MAAM66G,WAAa,EAAI,EAAG95G,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE5GtB,OAAOoE,KAAKk5G,EAAKz1G,MAAMyxG,kBAAkBnzG,IAAI,SAACg2B,EAAO3uB,GACnD,IAAM4vG,EAAaE,EAAKz1G,MAAMyxG,iBAAiBn9E,GAC3C75B,EAAa86G,EAAW98G,OAAS88G,EAAW98G,MAAMgC,WAAa86G,EAAW98G,MAAMgC,WAAa,GAC3Fy7G,EAAqBT,EAAKh9G,MAAM+B,SAAW,CAACD,OAAO,QAAU,CAACA,OAAO,QAG3E,OAFAE,EAAatC,OAAOC,OAAOqC,EAAWy7G,GAGpCr5G,EAAAlE,EAAAC,cAACo9G,EAAA,EAAD79G,OAAAC,OAAA,GACMm9G,EAAW98G,MADjB,CAEEqF,YAAa,CACXC,OAAO,GAETsB,IAAG,UAAAF,OAAYm1B,GACf75B,WAAaA,EACbD,SAAWi7G,EAAKh9G,MAAM+B,SACtBvB,YAAc,SAAAqG,GAAC,OAAIm2G,EAAKlB,aAAaj1G,EAAEg1B,WAOnB,WAA9BmhF,EAAKz1G,MAAMwxG,eACT30G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAK/E,GAAI,EAAGkF,GAAI,GACdlK,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAM9E,UAAW,SAAU7G,WAAY,EAAGC,SAAU,EAAG5B,GAAI,GACzDuD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAKtO,MAAO,QACRuE,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAMG,GAAI0uG,EAAKh9G,MAAM66G,WAAa,EAAI,EAAG95G,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9Gg8G,EAAKz1G,MAAM4xG,mBAAmBp1G,OAAS,EAEnCK,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,KACE/J,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAM9E,UAAW,SAAU7G,WAAY,EAAGC,SAAU,EAAG6L,GAAI,CAAC,EAAE,IAA9D,2CAIE0uG,EAAKz1G,MAAM4xG,mBAAmBtzG,IAAI,SAAC2c,EAAStV,GAC1C,IAAM6tG,EAAeiC,EAAKlC,gBAAgBt4F,GAC1C,OACEpe,EAAAlE,EAAAC,cAACo9G,EAAA,EAAD79G,OAAAC,OAAA,CAAaiH,IAAG,oBAAAF,OAAsB8b,IAAgBu4F,EAAtD,CAAoEv6G,YAAc,SAAAqG,GAAOm2G,EAAK3D,oBAAoBxyG,EAAE2b,EAASw6F,EAAKz1G,cAO5InD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAM9E,UAAW,SAAU7G,WAAY,EAAGC,SAAU,EAAG5B,GAAI,GAA3D,wEAUduD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtO,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,eAGbg8G,EAAKz1G,MAAM2xG,kBACZ90G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEG,GAAI,EACJzO,MAAO,EACPwG,SAAU22G,EAAKh9G,MAAM66G,WAAa,OAAS,YAGxCmC,EAAKh9G,MAAM66G,YACVz2G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAMpN,cAAe,SAAUC,eAAgB,SAAUF,WAAY,UACnEsD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAOrM,OAAQ,EAAGwM,GAAI,EAAGzM,IAAG,iBAAA6E,OAAmBs2G,EAAKz1G,MAAMyC,cAA9B,WAGlC5F,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAM9E,UAAW,SAAU7G,WAAaw6G,EAAKh9G,MAAM66G,WAAa,EAAI,EAAIp4G,SAAU,EAAG6L,GAAI,GAAzF,wBAGAlK,EAAAlE,EAAAC,cAACu9G,EAAA,EAAD,CACE/uF,GAAI,UACJluB,gBAAiB,UACjByK,MAAO8xG,EAAKz1G,MAAM0xG,gBAClB0E,YAAa,sBACbhhG,SAAUqgG,EAAKf,oBACfthG,QAASqiG,EAAKd,wBACd71G,SAAW22G,EAAKh9G,MAAM66G,aAAemC,EAAKh9G,MAAM+B,SAAW,OAAS,OACpE67G,iBAAmB,SAACC,GAAD,MAAgB,wCACnCj1G,UAAoC,UAAzBo0G,EAAKh9G,MAAMkQ,UAAwBrH,IAAOomB,OAASpmB,IAAOqmB,cAI3E9qB,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAMpN,cAAe,SAAUC,eAAgB,SAAUF,WAAY,SAAU0tB,UAAW,UAErFwuF,EAAKz1G,MAAM2xG,mBACqB,OAA/B8D,EAAKz1G,MAAM0xG,gBACT70G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAKtO,MAAO,QACVuE,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAM9E,UAAW,SAAU7G,WAAY,EAAGC,SAAU,EAAG6L,GAAI,CAAC,EAAE,IAA9D,2CAGAlK,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAMG,GAAI0uG,EAAKh9G,MAAM66G,WAAa,EAAI,EAAG95G,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9Gg8G,EAAKz1G,MAAM0xG,gBAAgB32E,UAAUv+B,OAAS,EAC5Ci5G,EAAKz1G,MAAM0xG,gBAAgB32E,UAAUz8B,IAAI,SAAC2c,EAAStV,GACjD,IAAM6tG,EAAeiC,EAAKlC,gBAAgBt4F,GAC1C,OACEpe,EAAAlE,EAAAC,cAACo9G,EAAA,EAAD79G,OAAAC,OAAA,CAAaiH,IAAG,oBAAAF,OAAsB8b,IAAgBu4F,EAAtD,CAAoEv6G,YAAc,SAAAqG,GAAMm2G,EAAKrB,eAAe90G,EAAE2b,SAIlHpe,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAM9E,UAAW,SAAU7G,WAAY,EAAGC,SAAU,EAAG6L,GAAI,GAA3D,sEAQNlK,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAM9E,UAAW,SAAU7G,WAAY,EAAGC,SAAU,EAAG6L,GAAI,GAA3D,wDA8BZ0uG,EAAKh9G,MAAM66G,YAA2C,OAA7BmC,EAAKz1G,MAAMyC,gBAAoD,OAAxBgzG,EAAKh9G,MAAMo5G,UAAmD,OAA9B4D,EAAKz1G,MAAMwxG,iBACzG30G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACErN,WAAY,SACZE,eAAgB,UAEhBoD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtN,GAAI,EACJF,GAAI,CAAC,EAAG,GACRyB,KAAM,SACNb,aAAc,EACdyF,UAAW,OACXrB,QAAU,SAAAkB,GAAC,OAAIm2G,EAAKtC,OAAO7zG,KAN7B,cAgBV,OAAI9G,KAAKC,MAAM66G,WAEXz2G,EAAAlE,EAAAC,cAACi9G,EACKr9G,KAAKC,OAMboE,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAO2vG,OAAQ/9G,KAAKC,MAAM89G,QACxB15G,EAAAlE,EAAAC,cAAC49G,EAAA,EAAD,CAAWC,UAAWj+G,KAAK06G,YACzBr2G,EAAAlE,EAAAC,cAAC49G,EAAA,EAAUE,OAAX,CAAkBl3F,MAAOA,IAEzB3iB,EAAAlE,EAAAC,cAAC49G,EAAA,EAAUG,KAAX,KACE95G,EAAAlE,EAAAC,cAACi9G,EAAD,OAEFh5G,EAAAlE,EAAAC,cAAC49G,EAAA,EAAUI,OAAX,KACE/5G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CAAMrO,GAAI,CAAC,EAAE,GAAIiB,cAAe,CAAC,SAAU,OAAQlB,MAAO,EAAGmB,eAAgB,UAC3EoD,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtN,GAAI,EACJF,GAAI,CAAC,EAAG,GACRY,aAAc,EACdyF,UAAW,OACXrB,QAAU,SAAAkB,GAAC,OAAIm2G,EAAKvC,WAAW5zG,IAC/BzE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UANxC,SAW+B,OAA7BhC,KAAKwH,MAAMyC,gBAAmD,OAAxBjK,KAAKC,MAAMo5G,UAAmD,OAA9Br5G,KAAKwH,MAAMwxG,iBAC/E30G,EAAAlE,EAAAC,cAACgO,EAAA,EAAD,CACEtN,GAAI,EACJF,GAAI,CAAC,EAAG,GACRY,aAAc,EACdoE,QAAU,SAAAkB,GAAC,OAAIm2G,EAAKtC,OAAO7zG,IAC3B+B,UAAWC,IAAOkmB,eAClB3sB,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UANxC,sBAtrBKq8G,IAAMx7G,WA0sBdk2G,gHCttBTuF,mLACK,IAAAp5G,EAAAlF,KACP,OACEoH,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACExH,MAAO,EACPC,GAAI,CAAC,EAAE,GACPw+G,GAAI,CAAC,EAAE,GACPv9G,cAAe,OAGbhB,KAAKC,MAAMs4G,KAAKzyG,IAAI,SAAC0yG,EAAQC,GAE3B,IAAMC,EAAmBF,EAAQE,mBAAoB,EACrD,OAAwB,IAApBF,EAAQG,UAAyC,IAAnBH,EAAQ7zG,QAAoBO,EAAKjF,MAAM+B,WAAiC,IAAnBw2G,EAAQ7zG,SAAoB+zG,IAAqBxzG,EAAKjF,MAAM+B,SAC1I,KAGDw2G,EAAQxxF,OAASwxF,EAAQxxF,MAAMhjB,OACrCoD,EAAAjH,EAAAC,cAACo+G,EAAA,EAAD7+G,OAAAC,OAAA,GACMsF,EAAKjF,MACLu4G,EAAQv4G,MAFd,CAGEw+G,KAAMjG,EAAQiG,KACdz3F,MAAOwxF,EAAQxxF,MACfngB,IAAG,cAAAF,OAAgB8xG,KAElBD,EAAQxxF,OAGX5f,EAAAjH,EAAAC,cAACkH,EAAA,EAAD3H,OAAAC,OAAA,CAAMiH,IAAG,cAAAF,OAAgB8xG,IAAgBD,EAAQv4G,kBA5BrC4C,aAqCXy7G,8ICpCTI,6MAGJ37G,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,kJAKL,IAAIxD,EAAY,CACd6B,EAAE,EACFzB,MAAM,IACN6+G,YAAY3+G,KAAKC,MAAM0+G,aAGrBh8G,EAAY,CACdD,SAAS,EACTD,WAAW,EACX6G,UAAU,SACVhH,MAAMtC,KAAKC,MAAMM,SAAW,YAAc,YAM5C,OAHAb,EAAYM,KAAK+C,cAAcu1B,kBAAkB54B,EAAUM,KAAKC,MAAMP,WACtEiD,EAAY3C,KAAK+C,cAAcu1B,kBAAkB31B,EAAU3C,KAAKC,MAAM0C,WAGpE0B,EAAAlE,EAAAC,cAAC+3G,EAAA,EAAD,CACE73G,eAAe,EACfZ,UAAWA,EACXa,SAAUP,KAAKC,MAAMM,UAErB8D,EAAAlE,EAAAC,cAACkE,EAAA,EACK3B,EAEH3C,KAAKC,MAAMqgB,WAHd,aA7C0Bzd,aAuDnB67G,wCC5Df,IAAAE,EAAAn4F,EAAA,KAAAo4F,EAAAp4F,EAAA,KAAAq4F,EAAAr4F,EAAA,KAAAs4F,EAAAt4F,EAAA,KAAAu4F,EAAAv4F,EAAA,MAKM8W,EAAoB,CACxBjL,KAAK,CACH2sF,IAAI,CACFxtG,MAAM,MACN9N,SAAS,GACTs6B,SAAS,OACT1a,YAAY,SACZjW,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,uBACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,6BAEPy1G,YAAY,gOACZwH,SAAS,CACPlzF,SAAS,8JAEXw/C,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACTj8B,SAAS,GACT47G,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,wCACLmL,QAAQ,6CACRywB,eAAe,CACb,CACEtsB,MAAM,OACN4gB,SAAQ,EACR/kB,QAAQ,gDAIdW,MAAM,aACNsV,YAAY,SACZphB,KAAK,kBACLsP,MAAM,kBACNnE,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACT47G,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,wCACLmL,QAAQ,6CACRywB,eAAe,CACb,CACEtsB,MAAM,OACN4gB,SAAQ,EACR/kB,QAAQ,gDAIdW,MAAM,aACNsV,YAAY,SACZphB,KAAK,kBACLsP,MAAM,kBACNnE,QAAQ,+CAGZmyG,IAAI,CACFhuG,MAAM,MACN9N,SAAS,GACTs6B,SAAS,OACT1a,YAAY,SACZjW,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,uBACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,6BAEPupE,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACTj8B,SAAS,GACT47G,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,wCACLmL,QAAQ,6CACRywB,eAAe,CACb,CACEtsB,MAAM,OACN4gB,SAAQ,EACR/kB,QAAQ,gDAIdW,MAAM,aACNsV,YAAY,SACZphB,KAAK,kBACLsP,MAAM,kBACNnE,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,wCACLmL,QAAQ,8CAEVW,MAAM,aACNsV,YAAY,SACZphB,KAAK,kBACLsP,MAAM,kBACNnE,QAAQ,gDAIdoyG,KAAK,CACHC,MAAM,CACJ73E,IAAI47C,EACJ//E,SAAS,GACT8N,MAAM,QACNwsB,SAAS,OACT1a,YAAY,SACZjW,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,qBACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,2BAEPi9G,SAAS,CACPQ,gBAAgB,4KAElBl0C,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNC,QAAQ,OACR5/E,QAAQ,SACR2gD,MAAM,YACN11D,QAAQ,YACRuB,SAAS,aACTyf,YAAY,aACZ9L,cAAc,YACdkL,aAAa,gBAEfnL,WAAW,CACTj8B,SAAS,GACT47G,oBAAmB,EACnBxhF,eAAe,CACb,CACEtsB,MAAM,MACN4gB,SAAQ,EACR/kB,QAAQ,+CAGZw6B,IAAI+3E,EACJ19G,KAAK,sCACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,gBACLsP,MAAM,gBACNxD,MAAM,gBACNX,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,sCACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,gBACLsP,MAAM,gBACNxD,MAAM,gBACNX,QAAQ,gDAiFdwyG,OAAO,CACLC,SAAS,CACPj4E,IAAI47C,EACJ//E,SAAS,GACT8N,MAAM,WACNwsB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,OACnBqrC,aAAa,CAAC,MAAM,MAAM,QAC1BtkE,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,0BACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,gCAEPy1G,YAAY,0NACZwH,SAAS,CACPlzF,SAAS,6JACT0zF,gBAAgB,sLAElBl0C,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,2CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,qBACLsP,MAAM,qBACNxD,MAAM,qBACNX,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,2CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,qBACLsP,MAAM,qBACNxD,MAAM,qBACNX,QAAQ,+CAGZ0yG,QAAQ,CACNl4E,IAAI47C,EACJ//E,SAAS,GACT8N,MAAM,UACNwsB,SAAS,SACT1a,YAAY,SACZquD,aAAa,CAAC,MAAM,MAAM,OAC1BrrC,YAAY,CAAC,MAAM,MAAM,SACzBj5B,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,yBACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,+BAEPy1G,YAAY,0NACZwH,SAAS,CACPlzF,SAAS,6JACT0zF,gBAAgB,mLAElBl0C,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,0CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,oBACLsP,MAAM,oBACNxD,MAAM,oBACNX,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,0CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,oBACLsP,MAAM,oBACNxD,MAAM,oBACNX,QAAQ,+CAGZ2yG,OAAO,CACLn4E,IAAI47C,EACJ//E,SAAS,GACT8N,MAAM,SACNwsB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,MAAM,OACzBqrC,aAAa,CAAC,MAAM,MAAM,SAC1BtkE,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,wBACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,8BAEPy1G,YAAY,0NACZwH,SAAS,CACPlzF,SAAS,6JACT0zF,gBAAgB,sLAElBl0C,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,sCACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,mBACLsP,MAAM,mBACNxD,MAAM,mBACNX,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,sCACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,mBACLsP,MAAM,mBACNxD,MAAM,mBACNX,QAAQ,+CAGZ4yG,UAAU,CACRp4E,IAAI47C,EACJ//E,SAAS,GACTs6B,SAAS,SACTxsB,MAAM,YACN8R,YAAY,SACZgjB,YAAY,CAAC,MAAM,OACnBj5B,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,2BACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,iCAEPy1G,YAAY,0NACZwH,SAAS,CACPlzF,SAAS,6JACT0zF,gBAAgB,yLAElBl0C,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,4CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,sBACLsP,MAAM,sBACNxD,MAAM,sBACNX,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,4CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,sBACLsP,MAAM,sBACNxD,MAAM,sBACNX,QAAQ,+CAGZ6yG,OAAO,CACLr4E,IAAI47C,EACJ//E,SAAS,GACT8N,MAAM,OACNwsB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,MAAM,SACzBj5B,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,sBACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,4BAEPy1G,YAAY,0NACZwH,SAAS,CACPlzF,SAAS,6JACT0zF,gBAAgB,wLAElBl0C,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,uCACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,iBACLsP,MAAM,iBACNxD,MAAM,iBACNX,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,uCACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,iBACLsP,MAAM,iBACNxD,MAAM,iBACNX,QAAQ,+CAGZ8yG,SAAS,CACPt4E,IAAI47C,EACJ//E,SAAS,GACT8N,MAAM,WACNwsB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,OACnBj5B,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,0BACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,gCAEPy1G,YAAY,0NACZwH,SAAS,CACPlzF,SAAS,6JACT0zF,gBAAgB,sLAElBl0C,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,2CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,qBACLsP,MAAM,qBACNxD,MAAM,qBACNX,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,2CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,qBACLsP,MAAM,qBACNxD,MAAM,qBACNX,QAAQ,+CAGZ+yG,QAAQ,CACNv4E,IAAI47C,EACJ//E,SAAS,GACT8N,MAAM,UACNwsB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,OACnBj5B,QAAQ,6CACRu4B,IAAI,CACFiC,IAAIo3E,EACJv7G,SAAS,GACTxB,KAAK,yBACLmL,QAAQ,8CAEVq6B,SAAS,CACPG,IAAIq3E,EACJh9G,KAAK,+BAEPy1G,YAAY,0NACZwH,SAAS,CACPlzF,SAAS,6JACT0zF,gBAAgB,2LAElBl0C,GAAG,CACD5jC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,0CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,oBACLsP,MAAM,oBACNxD,MAAM,oBACNX,QAAQ,8CAEVqkE,GAAG,CACD7pC,IAAI47C,EACJ//E,SAAS,GACT06B,QAAQ,KACRoB,UAAU,CACR4/E,MAAM,QACNh/B,MAAM,QACNi/B,QAAQ,UACR30F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACTj8B,SAAS,GACTo6B,eAAe,GACfwhF,oBAAmB,EACnBz3E,IAAI03E,EACJr9G,KAAK,0CACLmL,QAAQ,8CAEViW,YAAY,SACZphB,KAAK,oBACLsP,MAAM,oBACNxD,MAAM,oBACNX,QAAQ,iDAMDiwB,oPCpGA+iF,6MA5vBb94G,MAAQ,CACN8V,WAAW,CACTC,OAAO,KACPC,SAAQ,GAEVsgG,WAAW,KACX96D,aAAY,EACZu9D,eAAc,EACdC,eAAc,EACdC,gBAAe,EACfC,gBAAe,EACfC,kBAAiB,EACjBC,oBAAoB,QAItB79G,cAAgB,OAkDhB89G,iBAAmB,SAAC/5G,GAAyB,IAAvBg6G,IAAuBnuG,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,KAAAA,UAAA,GAErCmrG,EAAah3G,EAAEmf,OAAO9a,MAAMnH,SAAWV,MAAMwD,EAAEmf,OAAO9a,OAASjG,EAAKnC,cAAc2O,MAAM5K,EAAEmf,OAAO9a,OAASjG,EAAKnC,cAAc2O,MAAM,GACrIxM,EAAKsC,MAAMs2G,aAAeA,GAC5B54G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5Bk2G,aACA8C,oBALwB,OAMvB,WACGE,GAA2D,oBAAnC57G,EAAKjF,MAAM8gH,qBACrC77G,EAAKjF,MAAM8gH,oBAAoB77G,EAAKsC,MAAMs2G,iBAMlDkD,cAAgB,WACd,GAAuC,OAAnC97G,EAAKsC,MAAMo5G,oBACb,OAAO,EAET,IAAMK,EAAqB/7G,EAAKnC,cAAc2O,MAAMxM,EAAKsC,MAAMo5G,qBAAqBp9F,IAAI,KAClFs6F,EAAa54G,EAAKjF,MAAM6+B,eAAiB55B,EAAKnC,cAAc2O,MAAMxM,EAAKjF,MAAM6+B,cAAcx7B,QAAU4B,EAAKnC,cAAc2O,MAAMxM,EAAKjF,MAAM6+B,cAAcpxB,MAAMuzG,GAAsB,KAEzL/7G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5Bk2G,eACC,WAC6C,oBAAnC54G,EAAKjF,MAAM8gH,qBACpB77G,EAAKjF,MAAM8gH,oBAAoB77G,EAAKsC,MAAMs2G,iBAKhDoD,uBAAyB,WACvB,OAAuC,OAAnCh8G,EAAKsC,MAAMo5G,qBAGR17G,EAAKnC,cAAc2O,MAAMxM,EAAKsC,MAAMo5G,qBAAqBp9F,IAAI,QAetE29F,uBAAyB,SAACP,GACxB17G,EAAK8C,SAAS,CACZ44G,2BAIJQ,oBAAsB,WAAiB,IAAhBhxF,EAAgBzd,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KACvByd,IACHA,EAASlrB,EAAKsC,MAAMs2G,YAGtB,IAAM4C,GADNtwF,EAASlrB,EAAKnC,cAAc2O,MAAM0e,IACJ9sB,SAAW8sB,EAAOuC,IAAI,IAAMvC,EAAO9a,GAAGpQ,EAAKjF,MAAM6+B,cAC/E55B,EAAK8C,SAAS,CACZ04G,sBAIJW,6BAAU,SAAA1gG,IAAA,IAAA2gG,EAAAC,EAAA,OAAAvwF,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cAAAwP,EAAAxP,KAAA,EAEuBnM,EAAKs8G,wBAF5B,OAAA3gG,EAAAzM,KAiENlP,EAAK8C,SAAS,CACZ24G,kBAAiB,KA5DbW,EAAkB,SAAC9vG,EAAGiM,GAE1B,IAAMC,EAAY,CAChBI,YAAa,UACbH,cAAe,eACfC,WAAYpM,EAAKA,EAAGI,OAAS,MAGzBoxC,EAAcxxC,GAAoB,YAAdA,EAAGI,OAEzB6L,IACFC,EAAUE,WAAa1Y,EAAKnC,cAAcib,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAU9L,SACrB1M,EAAKnC,cAAckb,yBAAyBP,GAG9CxY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B+4G,iBAAkB39D,EAClB1lC,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAERC,OAAO,KACPC,SAAQ,OAI8B,oBAA/BtY,EAAKjF,MAAMqhH,iBAAkCt+D,GACtD99C,EAAKjF,MAAMqhH,gBAAgB9vG,IAIzB+vG,EAAyB,SAAC/vG,GAC9B,IAAM+L,EAAS/L,EAAG2M,gBAClBjZ,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAERC,eAMFrY,EAAKjF,MAAMwhH,sBAAwBv8G,EAAKnC,cAAc2O,MAAMxM,EAAKjF,MAAMwhH,qBAAqBn+G,QAC9F4B,EAAKnC,cAAcojE,wBAAwBjhE,EAAKjF,MAAMkK,YAAYsH,MAAMvM,EAAKjF,MAAM4+E,aAAavxE,QAAQpI,EAAKjF,MAAMwhH,oBAAoBH,EAAgBC,GAEvJr8G,EAAKnC,cAAcqjE,YAAYlhE,EAAKjF,MAAMkK,YAAYsH,MAAMvM,EAAKjF,MAAM4+E,aAAavxE,QAAQg0G,EAAgBC,GAG9Gr8G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAERC,OAAO,KACPC,SAAQ,IAEVmjG,kBAAiB,MA9Db,wBAAA9/F,EAAArO,SAAAmO,EAAA3gB,WAuEV0hH,+BAAY,SAAAtgG,IAAA,IAAA08F,EAAA6D,EAAA55G,EAAAmW,EAAAE,EAAAL,EAAA4iG,EAAAvnD,EAAAwoD,EAAA/jG,EAAAw6C,EAAAltD,EAAA,OAAA6lB,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,UAEJysG,EAAa54G,EAAKsC,MAAMs2G,WAAa54G,EAAKnC,cAAc2O,MAAMxM,EAAKsC,MAAMs2G,YAAc,KAFnF,CAAAv8F,EAAAlQ,KAAA,eAAAkQ,EAAAK,OAAA,UAID,GAJC,UAO2B,oBAA1B1c,EAAKjF,MAAM4hH,WAPZ,CAAAtgG,EAAAlQ,KAAA,eAAAkQ,EAAAlQ,KAAA,EAQiBnM,EAAKjF,MAAM4hH,WAAW/D,GARvC,UAAAv8F,EAAAnN,KAAA,CAAAmN,EAAAlQ,KAAA,eAAAkQ,EAAAK,OAAA,UAUC,GAVD,cAcJ+/F,EAAUz8G,EAAKnC,cAAcwxD,qBAAqBupD,EAAW54G,EAAKjF,MAAMkK,YAAYxG,UAIpFoE,EAAW,SAACyJ,EAAGiM,GAEnB,IAAMulC,EAAcxxC,GAAoB,YAAdA,EAAGI,OAG7B,GAAIJ,EAAG,CACL,IAAMkM,EAAY,CAChBE,WAAYpM,EAAGI,OACf+L,cAAa,eACbmkG,WAAYhE,EAAWnwG,UACvBmQ,YAAa5Y,EAAKjF,MAAMkK,YAAYsH,OAGlCgM,IACFC,EAAUE,WAAa1Y,EAAKnC,cAAcib,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAU9L,SACrB1M,EAAKnC,cAAckb,yBAAyBP,GAIhDxY,EAAK8C,SAAS,CACZg7C,cACA1lC,WAAY,CACVC,OAAO,KACPC,SAAQ,KAIRwlC,IAEF99C,EAAK27G,iBAAiB,CACpB56F,OAAO,CACL9a,MAAM,KAER,GACFjG,EAAK8C,SAAS,CACZw4G,eAAc,IAGmB,oBAAxBt7G,EAAKjF,MAAM8H,UACpB7C,EAAKjF,MAAM8H,SAASyJ,EAAGmwG,EAAQvjG,KAK/BF,EAAkB,SAAC1M,GACvB,IAAM+L,EAAS/L,EAAG2M,gBAClBjZ,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAERC,eAKFa,EAAS,KAGTL,EAAe7Y,EAAKjF,MAAM4+E,aAAa18E,KA/EjCof,EAAAlQ,KAAA,GAgFqBnM,EAAKs8G,uBAAsB,GAhFhD,WAgFJb,EAhFIp/F,EAAAnN,OAkFYlP,EAAKjF,MAAMsgH,eAAiBr7G,EAAKsC,MAAM+4G,gBAAkBI,GAlFrE,CAAAp/F,EAAAlQ,KAAA,gBAAAkQ,EAAAlQ,KAAA,GAoFuBnM,EAAKnC,cAAcq+D,WAAWl8D,EAAKjF,MAAMkK,YAAYsH,MAAOvM,EAAKjF,MAAMqQ,QAASyN,GApFvG,SAoFFq7C,EApFE73C,EAAAnN,QAuFNgK,EAASlZ,EAAKjF,MAAM8hH,2BAA2BJ,EAAQvoD,IAvFjD73C,EAAAlQ,KAAA,qBA0FJnM,EAAKjF,MAAM+hH,2BA1FP,CAAAzgG,EAAAlQ,KAAA,gBAAAkQ,EAAAlQ,KAAA,GA2FSnM,EAAKjF,MAAM+hH,2BAA2BL,EAAQz8G,EAAKsC,MAAMo5G,qBA3FlE,QA2FNxiG,EA3FMmD,EAAAnN,KAAAmN,EAAAlQ,KAAA,iBA6FN+M,EAASlZ,EAAKjF,MAAMoe,qBAAqBsjG,EAAQz8G,EAAKsC,MAAMo5G,qBA7FtD,QAiGNxiG,GAEAP,GAFO+jG,EAILxjG,GAFFP,WACAw6C,EAHOupD,EAGPvpD,aAGIltD,EAAQiT,EAAOjT,OAAS,KAC9B4S,EAAeK,EAAOL,cAAgB7Y,EAAKjF,MAAM4+E,aAAa18E,KAI9D+C,EAAKjF,MAAMwe,0BAA0BV,EAAcF,EAAYw6C,EAAcltD,EAAOpD,EAAUmW,GAE9FhZ,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAERE,SAAQ,QAIZtY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAERE,SAAQ,OAxHJ,yBAAA+D,EAAA/O,SAAA4O,EAAAphB,WA8HZif,uCAAoB,SAAAlO,IAAA,OAAAigB,EAAA7wB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClBnM,EAAK8C,SAAS,CACZsV,WAAY,CACVC,OAAO,KACPC,SAAQ,KAJM,wBAAArM,EAAAqB,SAAAzB,EAAA/Q,WAgDpBiiH,gBAAkB,WAChB/8G,EAAKwC,uFAxWD1H,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAILlD,KAAK0H,gMAGkBC,EAAUC,qFACjC5H,KAAKkD,YAEC0sB,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClD4xG,EAAsBv6G,EAAUm3B,eAAiB9+B,KAAKC,MAAM6+B,aAC5DqjF,EAAuBv6G,EAAU24G,gBAAkBvgH,KAAKwH,MAAM+4G,cAC9D6B,EAAwBz6G,EAAU84G,iBAAmBzgH,KAAKC,MAAMwgH,eAChE4B,EAAkBxyG,KAAKC,UAAUnI,EAAUk3E,gBAAkBhvE,KAAKC,UAAU9P,KAAKC,MAAM4+E,cACvFyjC,EAAqBzyG,KAAKC,UAAUnI,EAAUwC,eAAiB0F,KAAKC,UAAU9P,KAAKC,MAAMkK,cAC3FylB,GAAkBsyF,GAAuBG,GAAmBD,GAAyBE,GAAsBH,IAC7GniH,KAAK0H,WAGyBE,EAAU+4G,mBAAqB3gH,KAAKwH,MAAMm5G,kBAE7B,oBAAhC3gH,KAAKC,MAAM0gH,kBACpB3gH,KAAKC,MAAM0gH,iBAAiB3gH,KAAKwH,MAAMm5G,kBAIrC4B,EAAgB56G,EAAUgK,SAAW3R,KAAKC,MAAM0R,QACnB3R,KAAKwH,MAAMo5G,sBAAwBh5G,EAAUg5G,qBAC9C2B,IAChCviH,KAAKghH,gBAGmBp5G,EAAUk2G,aAAe99G,KAAKwH,MAAMs2G,YAE5D99G,KAAKohH,oKA2CPphH,KAAKgI,SAAS,CACZw4G,eAAc,gDAIED,GAClBvgH,KAAKgI,SAAS,CACZu4G,uOAqOiBvgH,KAAKC,MAAMsgH,eAAiBvgH,KAAKwH,MAAM+4G,yDACjD,kBAGyB7xF,IAA9B1uB,KAAKC,MAAMwgH,gBAAiCzgH,KAAKC,MAAMwgH,yDAClD,0BAGsBzgH,KAAK+C,cAAc0hE,mBAAmBzkE,KAAKC,MAAMkK,YAAYsH,MAAMzR,KAAKC,MAAM4+E,aAAavxE,QAAQtN,KAAKC,MAAMqQ,uBAAvIqwG,2BAICA,iQAID7C,EAAa,KACb8C,EAAsB,KACtBH,IAAmBzgH,KAAKC,MAAMwgH,gBAGhCzgH,KAAKC,MAAM4+E,6CACP7+E,KAAKC,MAAM4nC,aAAa7nC,KAAKC,MAAM4+E,aAAa18E,KAAKnC,KAAKC,MAAM4+E,aAAavxE,QAAQtN,KAAKC,MAAM4+E,aAAa/2C,gBAG5F24E,mCAAuBzgH,KAAKwhH,yEAA0B,UAAzEb,OAEA74G,EAAW,CACfg2G,aACA2C,iBACAE,mBACAC,uBAGF5gH,KAAKgI,SAASF,uIAOP,IAAA3E,EAAAnD,KAEDwiH,EAAwC,WAA7BxiH,KAAKC,MAAMwiH,cACtB9wG,EAAS3R,KAAKC,MAAM0R,OAAS3R,KAAKC,MAAM0R,OAAS,UAEvD,OACEhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGduhH,EACE75G,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,GAELjH,KAAM,aACNQ,KAAM,kGAEL5C,KAAKC,MAAMqQ,QAIZtQ,KAAKC,MAAMkK,cAAgBnK,KAAK+C,cAAc2O,MAAM1R,KAAKC,MAAM6+B,cAAcx7B,SAAWtD,KAAK+C,cAAc2O,MAAM1R,KAAKC,MAAM6+B,cAAcxpB,GAAG,GAC/I3M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAGLE,KAAKC,MAAMyiH,SACT/5G,EAAAxI,EAAAC,cAAC+I,EAAA,EAADxJ,OAAAC,OAAA,CACEF,UAAW,CACT6O,GAAG,IAEDvO,KAAKC,MAAMyiH,UAKnB1iH,KAAKC,MAAM0iH,OAAS3iH,KAAKC,MAAM0iH,MAAM3+G,OAAO,GAC1C2E,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFxB,GAAG,CAAC,EAAE,KAGR4I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAGbhB,KAAKC,MAAM0iH,MAAM78G,IAAK,SAAC88G,EAAKC,GAAN,OACpBl6G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACf6F,IAAG,QAAAF,OAAUk8G,IAEbl6G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAOygH,EAAKv2F,UAAY,WAAau2F,EAAKxgH,KAC1CE,MAAQsgH,EAAKv2F,UAAYlpB,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAY,aAGjFu2F,EAAK58G,KACH2C,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CACEp9G,GAAI,EACJhD,SAAU,EACVJ,MAAO,OACPG,WAAY,EACZ0jB,KAAMy8F,EAAK58G,KACXsD,UAAW,OACX3D,WAAY,QAEXi9G,EAAKhL,aAGRjvG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJhD,SAAU,EACVD,WAAY,EACZH,MAAO,WACPgH,UAAW,QAEVs5G,EAAKhL,kBAW1BjvG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAGLE,KAAKwH,MAAMg5G,eAAiBxgH,KAAKC,MAAMsgH,cACrC53G,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHsJ,GAAG,EACHZ,QAAQ,OACR1H,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,UACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,4IASFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJuuB,UAAU,EACVmrF,QAAS/iH,KAAKwH,MAAM+4G,cACpBtyG,MAAK,8CACL2O,SAAW,SAAA9V,GAAC,OAAI3D,EAAK6/G,oBAAoBl8G,EAAEmf,OAAO88F,cAGnD/iH,KAAKwH,MAAMg5G,eAAiBxgH,KAAKC,MAAMsgH,eAC1C53G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,EACH8H,GAAI,EACJvJ,MAAO,EACP0B,aAAc,EACdT,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBP,gBAAiB,gBACjB6E,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOsmB,UAE7Crf,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEU,UAAW,SACX3D,WAAY,UACZC,QAAS5F,KAAKwgH,cAActhG,KAAKlf,OAHnC,6CAOA2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrD,KAAM,MACNF,KAAM,UACNG,MAAO,cAOftC,KAAKwH,MAAMi5G,iBAAmBzgH,KAAKwH,MAAMm5G,iBACvC3gH,KAAKwH,MAAM8V,WAAWE,QACpB7U,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC+f,EAAA,EAADxgB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,SAAQ,uBACRvX,KAAM7H,KAAKwH,MAAM8V,WAAWC,OAC5B4B,WAAU,gCACVF,kBAAmBjf,KAAKif,kBAAkBC,KAAKlf,UAInD2I,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,IAGJoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,SACXC,wBAAyB,CACvBC,OAAOxJ,KAAKC,MAAMgjH,sBAGtBt6G,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKqhH,QAAQniG,KAAKlf,OALjC,aAYNA,KAAKwH,MAAM8V,WAAWE,QACtB7U,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC+f,EAAA,EAADxgB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4H,KAAM7H,KAAKwH,MAAM8V,WAAWC,OAC5B4B,WAAU,cAAAxY,OAAgBgL,EAAhB,eACVsN,kBAAmBjf,KAAKif,kBAAkBC,KAAKlf,MAC/Cof,SAAQ,GAAAzY,OAAK3G,KAAK+C,cAAcmL,WAAWyD,GAAnC,qBAIZhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJxN,WAAY,SACZC,cAAe,MACfC,eAAgBjB,KAAKC,MAAMkjH,oBAAsB,gBAAkB,YAGjEnjH,KAAKC,MAAMkjH,qBACTx6G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPwG,SAAU,MACVvF,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZ6G,UAAW,OACXjD,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,YAEfnE,MAAOtC,KAAKC,MAAMkjH,oBAAoB7gH,MAAQtC,KAAKC,MAAMkjH,oBAAoB7gH,MAAQ,YACrFiH,wBAAyB,CACvBC,OAAQxJ,KAAKC,MAAMkjH,oBAAoBvgH,QAIzC5C,KAAKC,MAAMkjH,oBAAoB93G,SAC7B1C,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0mB,UAAW,MACXC,QAASvvB,KAAKC,MAAMkjH,oBAAoB93G,SAExC1C,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrD,KAAM,MACNC,MAAO,YACPH,KAAM,mBASjBnC,KAAK+C,cAAc2O,MAAM1R,KAAKC,MAAM6+B,cAAcx7B,SACjDqF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPwG,SAAU,MACVvF,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZH,MAAO,YACPgH,UAAW,QACX3D,WAAY,YACZC,QAAU,SAACkB,GAAD,OAAO3D,EAAKg+G,uBAAuB,MAC7C96G,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAXjB,YAcYzG,KAAK+C,cAAc2O,MAAM1R,KAAKC,MAAM6+B,cAAcnxB,QAAQ3N,KAAKC,MAAM+B,SAAW,EAAI,GAdhG,IAcqGhC,KAAKC,MAAMkK,YAAY8D,OAASjO,KAAKC,MAAMkK,YAAYsH,SAMpK9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkJ,IAAK,EACLvO,KAAM,SACNq0B,UAAU,EACV71B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZkK,YAAa,aACbjM,gBAAiB,SACjBuO,UAAW,kBACX2uG,YAAW,gBACXhhG,SAAU5c,KAAK6gH,iBAAiB3hG,KAAKlf,MACrCuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,SAC7CuE,MAAiC,OAA1BnL,KAAKwH,MAAMs2G,WAAsB99G,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMs2G,YAAYnwG,UAAY,KAEtGhF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK6E,IAAK,SAAAwa,GAAU,OAC5B3X,EAAAxI,EAAAC,cAACs+G,EAAA,EAAD,CACEp+F,WAAYA,EACZzZ,IAAG,YAAAF,OAAc2Z,GACjBq+F,YAAa,kBAAIx7G,EAAKg+G,uBAAuB7gG,IAC7C/f,SAAU4C,EAAKqE,MAAMo5G,sBAAwB7uG,SAASuO,QAK9D3X,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJpI,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACEziH,YAAaT,KAAK0hH,UAAUxiG,KAAKlf,MACjCsF,YAAa3F,OAAOC,OAAO,CACzByJ,GAAG,EACHvJ,MAAM,CAAC,EAAE,IACTuG,MAAM,CACJ+8G,cAAc,cAEhBl8G,SAASlH,KAAKwH,MAAMk5G,gBAAgB1gH,KAAKC,MAAMygH,gBAC/C1gH,KAAKC,MAAMqF,cAEZtF,KAAKC,MAAM0R,YAQxB3R,KAAKC,MAAMwJ,SAjWbd,EAAAxI,EAAAC,cAACy3G,EAAA,EACK73G,KAAKC,eAvZS4C,sBC41CjBwgH,6MAv1Cb77G,MAAQ,CACN87G,SAAQ,EACRZ,QAAQ,KACRa,UAAU,KACVC,WAAW,KACX1F,WAAW,KACX2F,YAAY,KACZt5G,YAAY,KACZu5G,YAAY,KACZnlF,YAAY,KACZsgD,aAAa,KACb8kC,aAAa,KACb15G,cAAc,KACdonE,cAAc,KACduyC,eAAe,KACfnD,eAAe,KACfoD,eAAc,EACdC,WAAW,UACXpD,gBAAe,EACfqD,gBAAgB,KAChBn6C,gBAAgB,KAChBo6C,gBAAgB,KAChB5zG,gBAAgB,KAChB6zG,YAAY,UACZC,eAAe,OACfj5C,iBAAiB,KACjBk5C,iBAAiB,KACjBC,mBAAmB,KACnBC,mBAAmB,KACnBpB,mBAAmB,KACnBE,oBAAoB,KACpB3kF,oBAAoB,KACpB8lF,qBAAqB,KACrBC,qBAAqB,KACrBC,qBAAqB,KACrBC,uBAAuB,QAIzB1hH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,WACL1H,KAAK0kH,uMAGkB/8G,EAAUC,gFACjC5H,KAAKkD,YAEwB0E,EAAUqC,gBAAkBjK,KAAKwH,MAAMyC,eAElEjK,KAAKgI,SAAS,CACZ06G,QAAQ,KACRnkF,YAAY,KACZslF,eAAc,GACd,WACA1gH,EAAKwhH,kBAIHC,EAAqBh9G,EAAUq8G,cAAgBjkH,KAAKwH,MAAMy8G,aAClCr8G,EAAUs8G,iBAAmBlkH,KAAKwH,MAAM08G,gBACzCU,IAC3B5kH,KAAKgI,SAAS,CACZ06G,QAAQ,KACRmB,eAAc,GACd,WACA1gH,EAAK0hH,0JAKD,IAAA/5G,EAAA9K,KACFoQ,EAAkBzQ,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAUf,iBAAiB9+E,OAAO,SAAC8/E,EAAKtzG,GACrF,IAAM8sB,EAAczzB,EAAK7K,MAAM6kH,UAAUf,gBAAgBtyG,GACnDsuC,EAAkBj1C,EAAK/H,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,gBAE7EvL,EAAc,GAMpB,OALAA,EAAYsH,MAAQA,EACpBtH,EAAY29B,IAAMvJ,EAAYuJ,IAC9B39B,EAAYmD,QAAUixB,EAAYjxB,QAClCnD,EAAYxG,SAAWo8C,EAAgBp8C,SACvCohH,EAAItzG,GAAStH,EACN46G,GACN,IAEGC,EAAgBhlH,KAAKC,MAAMglH,UAAUC,QAAUllH,KAAKC,MAAMglH,UAAUE,OACpEl7G,EAAgB+6G,GAAiBrlH,OAAOoE,KAAKqM,GAAiBqkB,SAASuwF,GAAiBA,EAAgBrlH,OAAOoE,KAAKqM,GAAiB,GAI3IpQ,KAAKgI,SAAS,CACZiC,gBACAmG,mBACA,WACAtF,EAAK65G,gEAI+B,IAApB9kF,EAAoBltB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAN,KAE5B3S,KAAK+C,cAAc2O,MAAMmuB,GAAev8B,UAC1Cu8B,EAAgB7/B,KAAK+C,cAAc2O,MAAM,IAG3CmuB,EAAgB7/B,KAAK+C,cAAc2O,MAAMmuB,GAAe3tB,KAAKlS,KAAKwH,MAAMq4B,eAExE,IAAIgoC,EAAI7nE,KAAK+C,cAAc2O,MAAM1R,KAAK+C,cAAcwxD,qBAAqB10B,EAAc,KACnFioC,EAAiB9nE,KAAK+C,cAAc2O,MAAM1R,KAAK+C,cAAcwxD,qBAAqBv0D,KAAKwH,MAAMo8G,eAAe,KAC5G77C,EAAe/nE,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAM68G,oBAEnDr8C,EAAmBhoE,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMg9G,sBACvDv8C,EAAiBjoE,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAM48G,oBACrDl8C,EAAIloE,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMyjE,kBAAkB/4D,KAAK21D,GAE/DM,EAAuBnoE,KAAK+C,cAAc2O,MAAM,IAChD02D,EAAMP,EAAEn6D,MAAMy6D,GAAsB3kD,IAAI,KAC5C4kD,EAAMA,EAAIl2D,KAAKg2D,EAAEx6D,MAAMo6D,GAAgBtkD,IAAIukD,GAAcr6D,MAAO1N,KAAK+C,cAAc2O,MAAM,KAAKS,MAAMg2D,GAAuB3kD,IAAI,OAC/H4kD,EAAMpoE,KAAK+C,cAAc2O,MAAMG,KAAKC,IAAI+1D,EAAGO,IAE3C,IAAIC,EAAUL,EACVM,EAAcH,EAAqBz6D,MAAMm6D,GAAGrkD,IAAI,KAChD+kD,EAAiBN,EAAe/1D,KAAKo2D,GAAan2D,MAAMk2D,GACxDG,EAAkBP,EAAe/1D,KAAKk2D,GAAKj2D,MAAMk2D,GAEjDz8C,EAAQ5rB,KAAK+C,cAAc2O,MAAM02D,GAAK5kD,IAAIglD,GAAiBhlD,IAAI8kD,EAAY9kD,IAAI+kD,IAQnF,OANK38C,IAASA,EAAMtoB,UAClBsoB,EAAQ5rB,KAAK+C,cAAc2O,MAAM,IAK5Bka,wMAID+7C,EAAgB3nE,KAAKC,MAAM6kH,UAAUM,QACrC7mF,EAAcv+B,KAAKC,MAAM6kH,UAAUf,gBAAgB/jH,KAAKwH,MAAMyC,eAG5CjK,KAAK+C,cAAc20B,kBAAkBiwC,EAAcl2D,SACnDk2D,EAAc7/B,oCAC9B9nC,KAAKC,MAAM4nC,aAAa8/B,EAAcl2D,MAAMk2D,EAAcr6D,QAAQq6D,EAAc7/B,eAIlFu9E,EAAqB9mF,EAAYc,aACVr/B,KAAK+C,cAAc20B,kBAAkB2tF,EAAmBljH,QACxDkjH,EAAmBv9E,sCACxC9nC,KAAKC,MAAM4nC,aAAaw9E,EAAmB5zG,MAAM4zG,EAAmB/3G,QAAQ+3G,EAAmBv9E,gBAI1E9nC,KAAK+C,cAAc20B,kBAAkB6G,EAAYp8B,QACjDo8B,EAAYuJ,sCACjC9nC,KAAKC,MAAM4nC,aAAatJ,EAAYp8B,KAAKo8B,EAAYjxB,QAAQixB,EAAYuJ,8BAiBvE7mB,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAcglC,eACnB/nC,KAAK+C,cAAc2lE,oBAAoBnqC,EAAYp8B,MACnDnC,KAAK+C,cAAc2lE,oBAAoBf,EAAcl2D,OACrDzR,KAAK+C,cAAcuuB,oBAAoB,mBAAmB,QAC1DtxB,KAAK+C,cAAckuB,gBAAgBsN,EAAYp8B,KAAKnC,KAAKC,MAAMqQ,SAC/DtQ,KAAK+C,cAAcwmE,sBAAsBhrC,EAAYv+B,KAAKC,MAAMqQ,SAChEtQ,KAAK+C,cAAcuuB,oBAAoBiN,EAAYp8B,KAAK,kBACxDnC,KAAK+C,cAAckuB,gBAAgB02C,EAAcl2D,MAAMzR,KAAKC,MAAMqQ,SAClEtQ,KAAK+C,cAAcuuB,oBAAoBiN,EAAYp8B,KAAK,mBAAmB,CAAC,IAC5EnC,KAAK+C,cAAckuB,gBAAgBo0F,EAAmB5zG,MAAMzR,KAAKC,MAAMqQ,SACvEtQ,KAAK+C,cAAcuuB,oBAAoB,kBAAkB,kBAAkB,CAACtxB,KAAKC,MAAMqQ,UACvFtQ,KAAK+C,cAAcuuB,oBAAoBiN,EAAYp8B,KAAK,mBAAmB,CAACnC,KAAKC,MAAMqQ,UACvFtQ,KAAK+C,cAAcuuB,oBAAoB,kBAAkB,iBAAiB,CAACtxB,KAAKC,MAAMqQ,QAAQiuB,EAAYjxB,iDA1B1Gk6B,OACAyjC,OACAo5C,OACAF,OACAtkF,OACAwxC,OACA+yC,OACAR,OACAW,OACA/lF,OACAwlF,QACAQ,QACAb,QAmBIc,EAAyB9kH,OAAOoE,KAAKstE,GAAe9/D,OAAQ,SAAAE,GAAK,MAAc,SAAVA,IAAmBwzB,OAAQ,SAACqgF,EAAiB7zG,GACtH,IAAMtH,EAAcknE,EAAc5/D,GAIlC,OAHItH,EAAYkI,QAAQiD,GAAG,KACzBgwG,EAAiB7zG,GAASwrG,EAAKl6G,cAAcmS,iBAAiB/K,EAAYkI,QAAQlI,EAAYxG,WAEzF2hH,GACP,IAEI17C,EAAkB5pE,KAAK+C,cAAcmS,iBAAiBm8D,EAAcW,KAAK3/D,QAAQ,IAEnF8xG,IACFA,EAAmBnkH,KAAK+C,cAAcmS,iBAAiBivG,EAAiB,IAAIz2G,MAAM,QAGpFs2G,EAAkBhkH,KAAK+C,cAAc2O,MAAMsyG,GAAiBxgG,IAAI,KAEhExjB,KAAKgI,SAAS,CACZw/B,YACAjJ,cACAolF,eACAtyC,gBACAxxC,gBACA+jF,iBACAI,kBACAp6C,kBACAqB,mBACAk5C,mBACAC,qBACAC,qBACA7lF,sBACAgmF,uBACAD,uBACAE,0BACA,WACAxH,EAAK4H,eAAc,+SAIHU,kCAEbvlH,KAAKwH,MAAM+2B,aACdv+B,KAAK2kH,gBAGDh9C,EAAgB3nE,KAAKC,MAAM6kH,UAAUM,QACrC7mF,EAAcv+B,KAAKC,MAAM6kH,UAAUf,gBAAgB/jH,KAAKwH,MAAMyC,eAC9Do7G,EAAqB9mF,EAAYc,aAEnCikF,GAAU,EACVE,EAAa,KACbC,EAAc,KACdt5G,EAAc,KACdu5G,EAAc,KACd7kC,EAAe,KACf4hC,GAAiB,EACjBwC,EAAqB,KACrBE,EAAsB,UAElBnjH,KAAKwH,MAAM08G,sBACZ,iBAiBA,0CAhBHzD,GAAiB,EACjBt2G,EAAcw9D,EACR69C,EAAqBxlH,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMo8G,gBAAgBl2G,MAAM1N,KAAKwH,MAAMw8G,iBAChGP,EAAczjH,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMo8G,gBAAgBzxG,MAAMqzG,GACxErC,EAAsB,CACpB7gH,MAAK,YACLM,KAAI,oBAAA+D,OAAqB3G,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMw8G,iBAAiBt2G,MAAM,KAAKC,QAAQ,GAA7F,MAENkxE,EAAe7+E,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAY,EAAE,oBACjEiuG,EAAW,cAAA/8G,OAAiB3G,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAa,QAAQ,cAA1E,gGAELgwG,EAAiBzlH,KAAKwH,MAAMm8G,aAAe5xG,SAAS/R,KAAKwH,MAAMm8G,cAAc3jH,KAAKC,MAAM6kH,UAAUY,kBAAoB,KAC5HpC,GAAWmC,GAAkBzlH,KAAKwH,MAAMggC,UAAU3yB,WAAW4wG,EAE7DjC,EAAaiC,EAAiBzlH,KAAK+C,cAAc8P,YAA2B,IAAf4yG,GAAqBroC,MAAMnnE,OAAO,oBAAsB,uCAG7GjW,KAAKwH,MAAMy8G,mBACZ,oBAeA,kBAIA,6CAlBHxD,GAAiB,EACjB5hC,EAAetgD,EACfp0B,EAAck7G,EACd5B,EAAczjH,KAAKwH,MAAMg3B,oBACzBklF,EAAW,8BAAA/8G,OAAiCwD,EAAYsH,MAA7C,wCACXwxG,EAAkB,sDAAAt8G,OAAyD0+G,EAAmB5zG,MAA5E,oBAEZma,EAAQ5rB,KAAKunE,oBAAoB,GACvC47C,EAAsB,CACpB7gH,MAAK,YACL+I,QAAQrL,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,eACvD7S,KAAI,6BAAA+D,OAA8B3G,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAA1E,MAAA1lB,OAAwFilB,EAAMje,QAAQ,GAAtG,iDAIN8yG,GAAiB,EACjB5hC,EAAe7+E,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAY,EAAE,yDAGjEgrG,GAAiB,EACjB5hC,EAAetgD,EACfp0B,EAAck7G,EACd5B,EAAczjH,KAAKwH,MAAMq4B,cACzB6jF,EAAW,8BAAA/8G,OAAiCwD,EAAYsH,MAA7C,6JAUnBzR,KAAKgI,SAAS,CACZs7G,UACAE,aACAE,cACAv5G,cACAo0B,cACAklF,cACA5kC,eACA4hC,iBACAwC,qBACAE,uBACA,YACIoC,GAAeI,EAAKn+G,MAAMu8G,iBAC5B4B,EAAKJ,iRAMHxB,EAAkB,GACxBpkH,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAUf,iBAAiB9/G,QAAS,SAAA2hH,GACzD,IAAMrnF,EAAcsnF,EAAK5lH,MAAM6kH,UAAUf,gBAAgB6B,GACnDtnF,EAAgBunF,EAAK5lH,MAAMs9B,kBAAkBgB,EAAYN,UAAY4nF,EAAK5lH,MAAMs9B,kBAAkBgB,EAAYN,UAAU2nF,GAAc,KAEvItnF,IAIAylF,EAAgBxlF,EAAYN,YAC/B8lF,EAAgBxlF,EAAYN,UAAY,IAG1C8lF,EAAgBxlF,EAAYN,UAAU2nF,GAActnF,EACpDylF,EAAgBxlF,EAAYN,UAAU2nF,GAAYE,OAAS,KAC3D/B,EAAgBxlF,EAAYN,UAAU2nF,GAAYG,WAAa,KAC/DhC,EAAgBxlF,EAAYN,UAAU2nF,GAAYx3C,YAAc,KAChE21C,EAAgBxlF,EAAYN,UAAU2nF,GAAYv0C,cAAgB,KAClE0yC,EAAgBxlF,EAAYN,UAAU2nF,GAAY/lF,cAAgB,KAClEkkF,EAAgBxlF,EAAYN,UAAU2nF,GAAYh8C,gBAAkB,KACpEm6C,EAAgBxlF,EAAYN,UAAU2nF,GAAYzB,iBAAmB,QAGvEnkH,KAAKgI,SAAS,CACZ+7G,+RAMIiC,EAAkB,GAClBjC,EAAkB,GAClBp8C,EAAgB3nE,KAAKC,MAAM6kH,UAAUM,iBACrCplH,KAAK+C,cAAc2N,aAAa/Q,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAUf,iBAAjE,eAAA7iG,EAAAvhB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAmF,SAAAqS,EAAOyiG,GAAP,IAAArnF,EAAAD,EAAAH,EAAAC,EAAA6nF,EAAAh7C,EAAAprC,EAAAwxC,EAAA+yC,EAAA8B,EAAA98C,EAAAq7C,EAAA0B,EAAAC,EAAAC,EAAAC,EAAA18C,EAAAu6C,EAAA,OAAAnzF,EAAA7wB,EAAA+Q,KAAA,SAAAoS,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAjS,MAAA,UACjFktB,EAAcgoF,EAAKtmH,MAAM6kH,UAAUf,gBAAgB6B,GACpD7B,EAAgBxlF,EAAYN,YAC/B8lF,EAAgBxlF,EAAYN,UAAY,MAGpCK,EAAgBioF,EAAKtmH,MAAMs9B,kBAAkBgB,EAAYN,UAAYsoF,EAAKtmH,MAAMs9B,kBAAkBgB,EAAYN,UAAU2nF,GAAc,MANrD,CAAAtiG,EAAAjS,KAAA,YAUtDk1G,EAAKxjH,cAAc20B,kBAAkB6G,EAAYp8B,QACjDo8B,EAAYuJ,IAX0C,CAAAxkB,EAAAjS,KAAA,eAAAiS,EAAAjS,KAAA,EAY7Ek1G,EAAKtmH,MAAM4nC,aAAatJ,EAAYp8B,KAAKo8B,EAAYjxB,QAAQixB,EAAYuJ,KAZI,cAAAxkB,EAAAjS,KAAA,GAuB3E4P,QAAQqD,IAAI,CACpBiiG,EAAKxjH,cAAc+lE,mBAAmBvqC,GACtCgoF,EAAKxjH,cAAc2lE,oBAAoBnqC,EAAYp8B,MACnDokH,EAAKxjH,cAAckuB,gBAAgBsN,EAAYp8B,KAAKokH,EAAKtmH,MAAMqQ,SAC/Di2G,EAAKxjH,cAAcwmE,sBAAsBhrC,EAAYgoF,EAAKtmH,MAAMqQ,SAChEi2G,EAAKxjH,cAAcuuB,oBAAoBiN,EAAYp8B,KAAK,kBACxDokH,EAAKxjH,cAAcuuB,oBAAoBiN,EAAYp8B,KAAK,mBAAmB,CAACokH,EAAKtmH,MAAMqQ,UACvFi2G,EAAKxjH,cAAcuuB,oBAAoB,kBAAkB,wBAAwB,CAACiN,EAAYjxB,YA9BX,QAAA6wB,EAAA7a,EAAAlP,KAAAgqB,EAAAz+B,OAAA6yB,EAAA,EAAA7yB,CAAAw+B,EAAA,GAgBnF8nF,EAhBmF7nF,EAAA,GAiBnF6sC,EAjBmF7sC,EAAA,GAkBnFyB,EAlBmFzB,EAAA,GAmBnFizC,EAnBmFjzC,EAAA,GAoBnFgmF,EApBmFhmF,EAAA,GAqBnF8nF,EArBmF9nF,EAAA,GAsBnFgrC,EAtBmFhrC,EAAA,GAiC/EqmF,EAAyB9kH,OAAOoE,KAAKstE,GAAepsC,OAAQ,SAACqgF,EAAiB7zG,GAClF,IAAMtH,EAAcknE,EAAc5/D,GAIlC,OAHItH,EAAYkI,QAAQiD,GAAG,KACzBgwG,EAAiB7zG,GAAS80G,EAAKxjH,cAAcmS,iBAAiB/K,EAAYkI,QAAQlI,EAAYxG,WAEzF2hH,GACP,IAEEa,EAAiB,KACjBC,EAA0B,KAC9Bh9C,EAAcm9C,EAAKxjH,cAAcmS,iBAAiBk0D,EAAY,IAC9D68C,EAAkBM,EAAKxjH,cAAcmS,iBAAiB+wG,EAAgB,IACtEh7C,EAAmBs7C,EAAKxjH,cAAcmS,iBAAiB+1D,EAAiB,IAClEo7C,EAAwBE,EAAK/+G,MAAM28G,iBAAiBz2G,MAAM07D,GAE5Dm9C,EAAKtmH,MAAMqQ,SACb61G,EAAiBtmF,EAAcrc,IAAIynD,GAI7Bq7C,EAAmBC,EAAKxjH,cAAc2O,MAAMw0G,GAAoB1iG,IAAI4gG,IAC1EgC,EAA0BC,EAAsB34G,MAAM44G,IAC1BhxG,GAAG+wG,KAC7BD,EAA0BC,IAK5BxmF,EAAgB0mF,EAAKxjH,cAAc2O,MAAM,GAGrCk4D,EAAkBjqE,OAAOoE,KAAK0gH,GAAwBzgH,OAASrE,OAAOoE,KAAK0gH,GAAwB3+G,IAAK,SAAA2L,GAC5G,IAAMqtB,EAAe2lF,EAAuBhzG,GACxC7O,EAAI,GAAA+D,OAAMm4B,EAAanxB,QAAQ,GAA3B,KAAAhH,OAAiC8K,GACzC,GAAI80G,EAAKtmH,MAAMqQ,QACb,GAAKi2G,EAAKxjH,cAAc2O,MAAM00G,GAAyB9iH,SAAWmO,EAAMlE,gBAAkBo6D,EAAc5nC,YAAYxyB,eAE7G,GAAI8jE,EAAc5/D,GAAO24D,KAAK,CACnC,IAAIo8C,EAAuBn1C,EAAc5/D,GAAO24D,KAAK18D,MAAMy4G,GACvDK,EAAqBlxG,GAAG+7D,EAAc5/D,GAAO24D,QAC/Co8C,EAAuBn1C,EAAc5/D,GAAO24D,MAE9CxnE,GAAI,MAAA+D,OAAU6/G,EAAqB74G,QAAQ,GAAvC,eANJ/K,GAAI,MAAA+D,OAAUy/G,EAAwBz4G,QAAQ,GAA1C,SASR,OAAO/K,IACNoL,KAAK,UAAY,IAEdm2G,EAAmBxkH,OAAOoE,KAAKstE,GAAertE,OAASrE,OAAOoE,KAAKstE,GAAevrE,IAAK,SAAA2L,GAC3F,GAAIA,EAAMlE,gBAAkBo6D,EAAc5nC,YAAYxyB,cACpD,SAAA5G,OAAU0/G,EAAsB14G,QAAQ,GAAxC,KAAAhH,OAA8C8K,EAA9C,QAEA,IAAMg1G,EAAwBp1C,EAAc5/D,GAAO24D,KACnD,SAAAzjE,OAAU8/G,EAAsB94G,QAAQ,GAAxC,KAAAhH,OAA8C8K,EAA9C,UAEDzD,KAAK,UAAY,IAEpB+1G,EAAgBxlF,EAAYN,UAAU2nF,GAActnF,EACpDylF,EAAgBxlF,EAAYN,UAAU2nF,GAAYv0C,cAAgBA,EAClE0yC,EAAgBxlF,EAAYN,UAAU2nF,GAAY/lF,cAAgBA,EAClEkkF,EAAgBxlF,EAAYN,UAAU2nF,GAAYx3C,YAAcnD,EAChE84C,EAAgBxlF,EAAYN,UAAU2nF,GAAYh8C,gBAAkBA,EACpEm6C,EAAgBxlF,EAAYN,UAAU2nF,GAAYzB,iBAAmBA,EACrEJ,EAAgBxlF,EAAYN,UAAU2nF,GAAYE,OAAS18C,EAAY17D,MAAM,KAAKC,QAAQ,GAAG,IAC7Fo2G,EAAgBxlF,EAAYN,UAAU2nF,GAAYG,WAAaE,EAAgBv4G,MAAM,KAAKC,QAAQ,GAAG,IAErGq4G,EAAe,GAAAr/G,OAAIyiE,EAAY17D,MAAM,KAAKC,QAAQ,GAAnC,KAAAhH,OAAyC43B,EAAYN,SAArD,KAAAt3B,OAAiEi/G,IAAgB,CAC9FA,aACArnF,eArGmF,yBAAAjb,EAAA9Q,SAAA2Q,EAAAnjB,SAAnF,gBAAAyS,GAAA,OAAAyO,EAAAxO,MAAA1S,KAAA2S,YAAA,WA0GA+zG,EAAoB/mH,OAAOoE,KAAKiiH,GAAiB74E,OAAOw5E,UAAU1hF,OACtE,SAAC8/E,EAAKl+G,GAEJ,OADAk+G,EAAIl+G,GAAOm/G,EAAgBn/G,GACpBk+G,GAET,IAII6B,EAAwB,GAC9BjnH,OAAO2R,OAAOo1G,GAAmBziH,QAAS,SAAA4iH,GACnCD,EAAsBC,EAAEtoF,YAAYN,YACvC2oF,EAAsBC,EAAEtoF,YAAYN,UAAY,IAElD2oF,EAAsBC,EAAEtoF,YAAYN,UAAU4oF,EAAEjB,YAAc7B,EAAgB8C,EAAEtoF,YAAYN,UAAU4oF,EAAEjB,cAI1G5lH,KAAKgI,SAAS,CACZ+7G,gBAAgB6C,0IAIR38G,GACVjK,KAAKgI,SAAS,CACZiC,wDAIU65G,GACRA,IAAe9jH,KAAKwH,MAAMs8G,YAC5B9jH,KAAKgI,SAAS,CACZ87G,aACAD,cAAc,iDAKFK,GAChB,GAAIA,IAAmBlkH,KAAKwH,MAAM08G,eAAe,CAG/ClkH,KAAKgI,SAAS,CACZ06G,QAHc,KAId5E,WAHiB,KAIjBoG,2DAKSD,GACTA,IAAgBjkH,KAAKwH,MAAMy8G,aAC7BjkH,KAAKgI,SAAS,CACZi8G,qGAKqBzyG,EAAG4e,EAAOhS,0FAE/BskG,EAAU,KACVa,EAAY,KACZM,GAAgB,OAEZ7jH,KAAKwH,MAAM08G,sBACZ,gBAUA,wCATG4C,EAAe9mH,KAAK+C,cAAc2O,MAAM0M,EAAOi6C,aAAa,IAAI70C,IAAI,KAAK7V,QAAQ,GACvF+0G,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,2CAAA+D,OAA4CmgH,EAA5C,mFAIE9mH,KAAKwH,MAAMy8G,mBACZ,oBAUA,kBAYA,6CArBG8C,EAAkB/mH,KAAK+C,cAAcmS,iBAAiBkJ,EAAOi6C,aAAa,GAAG,IACnFqqD,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,2CAAA+D,OAA4CogH,EAAgBp5G,QAAQ,GAApE,KAAAhH,OAA0E3G,KAAKwH,MAAM2C,YAAYsH,MAAjG,yDAINoyG,GAAgB,OACR7jH,KAAKwH,MAAMs8G,kBACZ,sDACHP,EAAS,6FAITA,EAAS,yCAAA58G,OAA4C3G,KAAKwH,MAAMoiE,gBAAgBj8D,QAAQ,GAA/E,2FAKPq5G,EAAkBhnH,KAAK+C,cAAcmS,iBAAiBkJ,EAAOi6C,aAAa,GAAG,IACnFqqD,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,2CAAA+D,OAA4CqgH,EAAgBr5G,QAAQ,GAApE,KAAAhH,OAA0E3G,KAAKwH,MAAM2C,YAAYsH,MAAjG,2IAWdzR,KAAKgI,SAAS,CACZ06G,UACAa,YACAM,iBACA,WACAoD,EAAKtC,4SAIiB7G,iCAAW,KAC/B4E,EAAU,KACVoE,EAAe,KACf3D,EAAsB,KAE1BrF,EAAa99G,KAAK+C,cAAc2O,MAAMosG,QAC9B99G,KAAKwH,MAAM08G,sBACZ,gBAUA,yCATCpG,EAAWxoG,GAAG,KACV4xG,EAAwBlnH,KAAKwH,MAAMo8G,eAAetuG,GAAG,GAAKwoG,EAAWt6F,IAAIxjB,KAAKwH,MAAMo8G,gBAAgBl2G,MAAM,KAAKC,QAAQ,GAAK3N,KAAK+C,cAAc2O,MAAM,GAC3Jo1G,EAAe9mH,KAAKwH,MAAMo8G,eAAetuG,GAAG,GAAKtV,KAAK+C,cAAcqxD,aAAa0pD,EAAWt6F,IAAIxjB,KAAKwH,MAAMo8G,gBAAgBl2G,MAAM,MAAU1N,KAAK+C,cAAc2O,MAAM,GACpKgxG,EAAU,CACRtgH,KAAK,OACLQ,KAAI,8BAAA+D,OAA+BugH,EAA/B,qFAKAlnH,KAAKwH,MAAMy8G,mBACZ,4CACGr4F,EAAQ5rB,KAAKunE,oBAAoBu2C,GACvCqF,EAAsB,CACpB7gH,MAAK,YACL+I,QAAQrL,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,eACvD7S,KAAI,6BAAA+D,OAA8B3G,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAA1E,MAAA1lB,OAAwFilB,EAAMje,QAAQ,GAAtG,0HAWd3N,KAAKgI,SAAS,CACZ06G,UACA5E,aACAgJ,eACA3D,wKAIiB/yF,GACnB,IAAIvS,EAAa,KACbw6C,EAAe,GACb8uD,EAAennH,KAAKC,MAAM6kH,UAAUf,gBAAgB/jH,KAAKwH,MAAMyC,eAAeqD,QACpF,OAAQtN,KAAKwH,MAAM08G,gBACjB,IAAK,OACHrmG,EAAa,yBACbw6C,EAAe,CAAC8uD,EAAannH,KAAKwH,MAAMs/G,cAC1C,MACA,IAAK,QACH,IAAM12F,EAASpwB,KAAK+C,cAAcwxD,qBAAqBv0D,KAAKwH,MAAMs2G,WAAW,IAC7E,OAAQ99G,KAAKwH,MAAMy8G,aACjB,IAAK,UACHpmG,EAAa,UACbw6C,EAAe,CAACjoC,GAClB,MACA,IAAK,WACHvS,EAAa,WACbw6C,EAAe,CAACjoC,IAYxB,MAAO,CACLvS,aACAw6C,iDAIK,IAAA+uD,EAAApnH,KACP,OACE2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAG,QACXiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,iBAGA5F,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2c,SAAU5c,KAAKg8G,YAAY98F,KAAKlf,MAChCiK,cAAejK,KAAKwH,MAAMyC,cAC1BmG,gBAAiBpQ,KAAKwH,MAAM4I,oBAI7BpQ,KAAKwH,MAAM+2B,YAeV51B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,kBAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER6C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdE,KAAM,OACNL,UAAW,SACXnB,YAAa,UACbD,MAAO,kBACPZ,SAAyC,SAA9BP,KAAKwH,MAAM08G,eACtBzjH,YAAc,SAAAqG,GAAC,OAAIsgH,EAAKC,kBAAkB,YAE5C1+G,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER6C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdE,KAAM,QACNR,KAAM,SACNG,UAAW,UACXnB,YAAa,UACbb,SAAyC,UAA9BP,KAAKwH,MAAM08G,eACtBzjH,YAAc,SAAAqG,GAAC,OAAIsgH,EAAKC,kBAAkB,eAKhB,UAA9BrnH,KAAKwH,MAAM08G,gBACTv7G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,wBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,UACNL,UAAW,UACXH,KAAM,gBACNhB,YAAa,UACbb,SAAsC,YAA3BP,KAAKwH,MAAMy8G,YACtBxjH,YAAc,SAAAqG,GAAC,OAAIsgH,EAAKE,eAAe,eAEzC3+G,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,QACNL,UAAW,UACXH,KAAM,eACNhB,YAAa,UACbb,SAAsC,UAA3BP,KAAKwH,MAAMy8G,YACtBxjH,YAAc,SAAAqG,GAAC,OAAIsgH,EAAKE,eAAe,aAEzC3+G,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,WACNR,KAAM,cACNG,UAAW,SACXnB,YAAa,UACbb,SAAsC,aAA3BP,KAAKwH,MAAMy8G,YACtBxjH,YAAc,SAAAqG,GAAC,OAAIsgH,EAAKE,eAAe,kBAOjB,UAA9BtnH,KAAKwH,MAAM08G,gBAAyD,UAA3BlkH,KAAKwH,MAAMy8G,aAA2BjkH,KAAKwH,MAAM6pE,eAAiB1xE,OAAOoE,KAAK/D,KAAKwH,MAAM6pE,eAAertE,OAAO,GACtJ2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,wBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,KAEb/C,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAERmC,WAAY,CACVZ,GAAG,EACHvB,MAAM,QACNiC,OAAO,SAETa,KAAM,aACNzB,MAAO,yBACPZ,SAAqC,YAA1BP,KAAKwH,MAAMs8G,WACtBrjH,YAAc,SAAAqG,GAAC,OAAIsgH,EAAKG,cAAc,eAExC5+G,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,KAEb/C,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAERmC,WAAY,CACVZ,GAAG,EACHvB,MAAM,QACNiC,OAAO,SAETtB,YAAc,SAAAqG,GAAC,OAAIsgH,EAAKG,cAAc,eACtChnH,SAAqC,eAA1BP,KAAKwH,MAAMs8G,WACtBlhH,KAAI,SAAA+D,OAAWhH,OAAOoE,KAAK/D,KAAKwH,MAAM6pE,eAAejoB,OAAO,GAAGp7C,KAAK,OACpE7M,MAAOnB,KAAK+C,cAAc0iG,aAAa9lG,OAAOoE,KAAK/D,KAAKwH,MAAM6pE,eAAe,SAOvD,SAA9BrxE,KAAKwH,MAAM08G,gBAA8BlkH,KAAKwH,MAAM87G,QAWjB,SAA9BtjH,KAAKwH,MAAM08G,gBAAwD,UAA3BlkH,KAAKwH,MAAMy8G,cAA4BjkH,KAAKwH,MAAM2C,YAyDhE,UAA3BnK,KAAKwH,MAAMy8G,aACbjkH,KAAKwH,MAAMq8G,cACTl7G,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,GAELjH,KAAM,UACNQ,KAAM5C,KAAKwH,MAAM+7G,UACjB/gH,UAAW,CACTH,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,QACrCM,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,aAG1B,YAA1BrsB,KAAKwH,MAAMs8G,WACZ9jH,KAAKC,MAAMqQ,QAIPtQ,KAAKwH,MAAMoiE,iBAAmB5pE,KAAKwH,MAAMoiE,gBAAgBt0D,GAAG,GAC/D3M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFgN,GAAG,IAGL5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,WACPH,KAAM,iBACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPgH,UAAW,UALb,iBAOgBX,EAAAxI,EAAAC,cAAA,cAASJ,KAAKwH,MAAMoiE,gBAAgBj8D,QAAQ,GAA5C,SAPhB,KASAhF,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,CACEwe,OAAQ,IACJpe,KAAKC,MAFX,CAGE4C,UAAW2kH,IACX5oG,YAAa,CACX9e,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjBqe,eAAgB,CACd5c,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,EAAE,GACXqL,MAAM,QACN3J,aAAa,EACbyF,UAAU,UAEZ0K,OAAQ,QACRkM,WAAY,aACZE,aAAc,wBACdhW,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzCqe,qBAAuB,SAAAvX,GAAC,MAAI,CAACsgH,EAAKnnH,MAAM6kH,UAAUf,gBAAgBqD,EAAK5/G,MAAMyC,eAAeqD,gBAMpG3E,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,GAELjH,KAAM,WACNI,UAAW,CACTH,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,SAEvCY,KAAI,qDArEN+F,EAAAxI,EAAAC,cAACy3G,EAAA,EACK73G,KAAKC,OAuEa,eAA1BD,KAAKwH,MAAMs8G,YACV9jH,KAAKC,MAAMqQ,QAIPtQ,KAAKwH,MAAMi9G,wBAA0B9kH,OAAOoE,KAAK/D,KAAKwH,MAAMi9G,wBAAwBzgH,OAAO,EAC9F2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFgN,GAAG,IAGL5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,WACPH,KAAM,iBACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPgH,UAAW,UALb,iBAOiB3J,OAAOoE,KAAK/D,KAAKwH,MAAMi9G,wBAAwB3+G,IAAK,SAAC2L,EAAM1L,GAAP,OAAkB4C,EAAAxI,EAAAC,cAAA,UAAQyG,IAAG,UAAAF,OAAYZ,IAAUqhH,EAAK5/G,MAAMi9G,uBAAuBhzG,GAAO9D,QAAQ,GAAlF,IAAuF8D,KAP9K,KASA9I,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,CACEwe,OAAQ,IACJpe,KAAKC,MAFX,CAGE4C,UAAW2kH,IACX5oG,YAAa,CACX9e,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjBqe,eAAgB,CACd5c,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,EAAE,GACXqL,MAAM,QACN3J,aAAa,EACbyF,UAAU,UAEZ0K,OAAQ,QACRkM,WAAY,gBACZE,aAAc/d,KAAKwH,MAAM+2B,YAAYp8B,KACrC4F,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,YAMjD2I,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,GAELjH,KAAM,WACNI,UAAW,CACTH,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,SAEvCY,KAAI,kEApEN+F,EAAAxI,EAAAC,cAACy3G,EAAA,EACK73G,KAAKC,OAlJf0I,EAAAxI,EAAAC,cAACsnH,EAAD/nH,OAAAC,OAAA,CACE6d,MAAO,MACHzd,KAAKC,MAFX,CAGEsgH,eAAe,EACfmC,QAAS1iH,KAAKwH,MAAMk7G,QACpBv4G,YAAanK,KAAKwH,MAAM2C,YACxB20B,aAAc9+B,KAAKwH,MAAMi8G,YACzB5kC,aAAc7+E,KAAKwH,MAAMq3E,aACzB4hC,eAAgBzgH,KAAKwH,MAAMi5G,eAC3BC,eAAgB1gH,KAAKwH,MAAMk5G,eAC3B34G,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzCijH,mBAAoBjjH,KAAKwH,MAAMy7G,mBAC/BE,oBAAqBnjH,KAAKwH,MAAM27G,oBAChCpC,oBAAqB/gH,KAAK+gH,oBAAoB7hG,KAAKlf,MACnDqe,qBAAsBre,KAAKqe,qBAAqBa,KAAKlf,MACrD2R,OAAsC,SAA9B3R,KAAKwH,MAAM08G,eAA4B,OAASlkH,KAAK+C,cAAcmL,WAAWlO,KAAKwH,MAAMy8G,eAEjGt7G,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,IAGJoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,SACXC,wBAAyB,CACvBC,OAAOxJ,KAAKwH,MAAMk8G,eAIU,SAA9B1jH,KAAKwH,MAAM08G,gBACTv7G,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,KAEXW,YAAa,SAAAqG,GAAC,OAAIsgH,EAAKnnH,MAAM8G,YAAX,WALpB,YArDV4B,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,GAELjH,KAAM,UACNI,UAAW,CACTF,MAAM,QAERM,KAAI,sHAAA+D,OAAwH3G,KAAKwH,MAAMg8G,WAAnI,wDA9MZ76G,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACTuF,GAAG,EACHrI,cAAe,OAEjB4kB,YAAa,CACXvjB,KAAM,QAERM,UAAW,CACT+C,GAAI,GAEN9C,KAAM,2BAoaZ5C,KAAKwH,MAAMu8G,iBACTp7G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPvN,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJz+G,MAAO,EACPyO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbi7G,aAAc,yBAEdj/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAQuG,GAAT,CACEzM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,qBAOFkG,EAAAxI,EAAAC,cAACynH,EAAA,EAADloH,OAAAC,OAAA,CACEa,YAAa,KACbqnH,iBAAkB,GAClBC,UAAW,CACTrlH,SAAS,CAAC,OAAO,SAEnB61G,KAAM,CACJ,CACEvxF,MAAM,WACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACE3kD,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEI,KAAK,gBAEP,CACEwC,QAAO,EACPxC,KAAK,oBACLlC,MAAM,CACJyF,GAAG,EACH3D,OAAO,YAKf,CACEilB,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,eAIX,CACEwC,QAAO,EACPqiB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACEvjD,KAAK,OACLpB,KAAK,SACLwM,YAAW,EACX9I,KAAK,CAAC,cAAc,aAI1B,CACElB,QAAO,EACPqiB,MAAM,cACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KAEdgnD,OAAO,CACL,CACEvjD,KAAK,OACLpB,KAAK,SACLwM,YAAW,EACX9I,KAAK,CAAC,cAAc,iBAI1B,CACEmhB,MAAM,eACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,KAEfgnD,OAAO,CACL,CACEvjD,KAAK,SACLpB,KAAK,SACLwM,YAAW,EACX9I,KAAK,CAAC,cAAc,eACpB5F,MAAM,CACJ4D,aAAa,EACbC,UAAU,CACR7C,eAAe,cAEjB0C,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAwB3C,CACE2C,QAAO,EACPqiB,MAAM,YACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACEvjD,KAAK,SACLpB,KAAK,SACLwM,YAAW,EACX9I,KAAK,CAAC,cAAc,iBACpB5F,MAAM,CACJ4D,aAAa,EACbC,UAAU,CACR7C,eAAe,cAEjB0C,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAK3C,CACEglB,MAAM,UACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACE3kD,KAAK,SACLwM,YAAW,EACXpL,KAAK,aACLsC,KAAK,CAAC,cAAc,iBACpB5F,MAAM,MAMZ,CACE0E,QAAO,EACPqiB,MAAM,oBACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACEvjD,KAAK,OACLpB,KAAK,SACLwM,YAAW,EACX1O,MAAM,CACJyC,SAAS,EACTg1G,WAAW,KAEb7xG,KAAK,CAAC,cAAc,uBAI1B,CACElB,QAAO,EACPqiB,MAAM,oBACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACEvjD,KAAK,OACLoL,YAAW,EACX1O,MAAM,CACJyC,SAAS,EACTg1G,WAAW,KAEbv1G,KAAK,SACL0D,KAAK,CAAC,cAAc,wBAKxB7F,KAAKC,MAxMX,CAyMEs9B,kBAAmBv9B,KAAKwH,MAAMu8G,4BA/0CzBlhH,8BCwQNmlH,6MA5QbxgH,MAAQ,CACN2C,YAAY,KACZ00E,aAAa,KACb50E,cAAc,KACdg+G,eAAe,KACf73G,gBAAgB,QAIlBrN,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAUC,8EACjC5H,KAAKkD,cAEwB0E,EAAUqC,gBAAkBjK,KAAKwH,MAAMyC,sCAE5DE,EAAcnK,KAAKC,MAAM6kH,UAAU10G,gBAAgBpQ,KAAKwH,MAAMyC,eAC9D40E,EAAe10E,EAAY0tB,kBAG3B5W,QAAQqD,IAAI,CAChBtkB,KAAKC,MAAM4nC,aAAag3C,EAAa18E,KAAK08E,EAAavxE,QAAQuxE,EAAa/2C,KAC5E9nC,KAAKC,MAAM4nC,aAAa7nC,KAAKwH,MAAMyC,cAAcE,EAAYmD,QAAQnD,EAAY29B,cAGnF9nC,KAAKgI,SAAS,CACZmC,cACA00E,kRAMEzuE,EAAkBzQ,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAiB60B,OAAQ,SAACpV,EAAOpe,GACxF,IAAMtH,EAAchH,EAAKlD,MAAM6kH,UAAU10G,gBAAgBqB,GAOzD,OANItH,EAAYkoB,SACdxC,EAAOjiB,KAAPjO,OAAA+4B,EAAA,EAAA/4B,CAAA,CACEwL,MAAMsG,GACHtH,IAGA0lB,GACP,IAEIo4F,EAAiB73G,EAAgB,GACjCnG,EAAgBg+G,EAAe98G,MAErCnL,KAAKgI,SAAS,CACZiC,gBACAg+G,iBACA73G,0JAIQnG,GACVjK,KAAKgI,SAAS,CACZiC,mDAMF,IAsGMi+G,EAAoBloH,KAAKwH,MAAM2C,YAAcnK,KAAKwH,MAAM2C,YAAYg+G,UAAY,KAEtF,OACEx/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjB,KAAKwH,MAAM4I,gBAmBVzH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGbjB,KAAKwH,MAAM4I,gBAAgBpM,OAU1B2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,iBAKA5F,EAAAxI,EAAAC,cAACoa,EAAA,EAAD7a,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,SACN0Z,cAAc,EACdjB,QAAS5a,KAAKwH,MAAM4I,gBACpB4K,kBAtKM,SAAA/a,GACxB,IAAMgO,EAAQhO,EAAMgO,MACd9D,EAAc,CAClB/H,KAAKnC,EAAM4K,KAAKzI,MAGlB,OACEuG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,UAEZ4H,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP9D,YAAaA,EACbwV,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHvB,MAAM,MACNiC,OAAO,UAIb4G,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP0R,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,mBAoIAsa,SAAU5c,KAAKg8G,YAAY98F,KAAKlf,MAChC8a,aAAc9a,KAAKwH,MAAMygH,eACzBhtG,qBA7HS,SAAAhb,GAE3B,IACM0b,GAA4D,IADlD1b,EAAM0b,YAAYf,QACN2B,QAAQtc,EAAM0b,YAAYxQ,OAAgBlL,EAAM0b,YAAYxQ,MAAQ,KAEhG,IAAKwQ,EACH,OAAO,KAGT,IAAM1N,EAAQ0N,EAAY1N,MACpB9D,EAAc,CAClB/H,KAAKuZ,EAAYvZ,MAGnB,OACEuG,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACEyG,MAAO,CACL2Z,KAAK,KAEP/e,eAAgB,iBACZhB,EAAMkb,YAEVxS,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMkb,WAHZ,CAIEpa,WAAY,SACZC,cAAe,MACfqF,MAAO,CAAC6I,OAAO,WACfjO,eAAgB,eAEhB0H,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP9D,YAAaA,EACbwV,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,UAIb4G,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP0R,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,uBAgFF4lH,GACEv/G,EAAAxI,EAAAC,cAAC8nH,EAADvoH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkK,YAAanK,KAAKwH,MAAM2C,YACxB00E,aAAc7+E,KAAKwH,MAAMq3E,aACzB50E,cAAejK,KAAKwH,MAAMyC,kBAxClCtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPgH,UAAW,UAJb,gCAzBNX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,+BA5MAC,2DCsFPwlH,6MAzFb7gH,MAAQ,CACN8gH,aAAa,KACbC,gBAAgB,0FAGhB,IAAMA,EAAkB5oH,OAAOoE,KAAK/D,KAAKC,MAAMuoH,WAAW,GAC1DxoH,KAAKyoH,WAAWF,sCAEPlkF,GACTrkC,KAAKgI,SAAS,SAAAR,GAAK,OAAA7H,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAS6H,EAAT,CAAgB+gH,gBAAiBlkF,EAASikF,aAAc,8CAEhExhH,EAAEqG,GACbrG,EAAEgI,iBACF9O,KAAKgI,SAAS,SAAAR,GAAK,OAAA7H,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAS6H,EAAT,CAAgB8gH,aAAc9gH,EAAM8gH,eAAen7G,EAAI,KAAOA,uCAG1E,IAAAhK,EAAAnD,KACD0oH,OAA2Ch6F,IAA5B1uB,KAAKC,MAAMyoH,cAA8B1oH,KAAKC,MAAMyoH,aACzE,OACE//G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdynH,GACE//G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPxO,GAAI,CAAC,EAAE,GACPD,MAAO,CAAC,EAAE,IACVkB,cAAe,MACfC,eAAgB,iBAGdtB,OAAOoE,KAAK/D,KAAKC,MAAMuoH,WAAW1iH,IAAK,SAACu+B,EAAQl3B,GAC9C,IAAMw7G,EAAatkF,IAAYlhC,EAAKqE,MAAM+gH,gBAC1C,OACE5/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE/B,IAAG,WAAAF,OAAawG,GAChB7D,UAAW,SACXrI,eAAgB,SAChBnB,MAAO,EAAEH,OAAOoE,KAAKZ,EAAKlD,MAAMuoH,WAAWxkH,OAC3C4jH,aAAee,EAAa,oBAAsB,QAElDhgH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ9L,WAAY,EACZC,SAAU,CAAC,EAAG,GACd4G,UAAW,SACX1D,QAAS,kBAAMzC,EAAKslH,WAAWpkF,IAC/B/hC,MAAOqmH,EAAa,OAAS,YAC7B9/G,UAAW,CAAC,UAAW8/G,EAAa,WAAa,KAEhDtkF,OASjB17B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAGLE,KAAKC,MAAMuoH,UAAUxoH,KAAKwH,MAAM+gH,iBAAiBziH,IAAK,SAACsJ,EAASjC,GAAV,OACpDxE,EAAAxI,EAAAC,cAACwO,EAAA,EAAD,CACE/H,IAAG,UAAAF,OAAYwG,GACfkC,OAAQD,EAASjP,EACjB2hB,GAAU,IAAN3U,EAAU,EAAI,GAClBiC,SAAUA,EAASw5G,EACnB55G,SAAU7L,EAAKqE,MAAM8gH,eAAiBn7G,EACtC1M,YAAc,SAAAqG,GAAC,OAAI3D,EAAK0lH,aAAa/hH,EAAEqG,kBA/E/BtK,+CCiFXimH,cAjEb,SAAAA,EAAY7oH,GAAO,IAAAiF,EAAA,OAAAvF,OAAAixB,EAAA,EAAAjxB,CAAAK,KAAA8oH,IACjB5jH,EAAAvF,OAAAopH,EAAA,EAAAppH,CAAAK,KAAAL,OAAAqpH,EAAA,EAAArpH,CAAAmpH,GAAAlvE,KAAA55C,KAAMC,KAbRuH,MAAQ,GAYWtC,EATnBnC,cAAgB,KASGmC,EAKnB+jH,mBALmBtpH,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAKE,SAAA6P,IAAA,OAAAqQ,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,OACnBnM,EAAKhC,YADc,wBAAA2d,EAAArO,SAAAmO,EAAA3gB,SALFkF,EASnBw1G,WATmB/6G,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KASN,SAAAsQ,IAAA,OAAA4P,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OACXnM,EAAKjF,MAAMy6G,aADA,wBAAAn5F,EAAA/O,SAAA4O,EAAAphB,SAPXkF,EAAKhC,YAFYgC,2EAPblF,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,yDAmB9C,OACE0I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEm1G,OAAQ/9G,KAAKC,MAAM89G,QAEnBp1G,EAAAxI,EAAAC,cAAC8oH,EAAA,EAAD,CACE5iH,SAAU,CAAC,QAAQ,SACnB23G,UAAWj+G,KAAKC,MAAMy6G,YAEtB/xG,EAAAxI,EAAAC,cAAC8oH,EAAA,EAAUhL,OAAX,CACEp8F,GAAI,EACJqnG,WAAY,OACZniG,MAAO,gBACP5kB,KAAM,uBAGRuG,EAAAxI,EAAAC,cAAC8oH,EAAA,EAAU/K,KAAX,KACEx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACV4G,UAAW,OACXhH,MAAO,aAHT,0CAK0CtC,KAAKC,MAAM+xD,MALrD,gFAQFrpD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACEziH,YAAaT,KAAK06G,WAClBp1G,YAAa,CACXxF,MAAM,CAAC,OAAO,SAHlB,qBA/DkBu+G,IAAMx7G,WC4rBvBumH,6MAtrBb5hH,MAAQ,CACN6hH,SAAS,KACTC,WAAW,KACXC,YAAY,KACZC,YAAY,KACZ/F,YAAY,KACZt5G,YAAY,KACZ00E,aAAa,KACbjgD,aAAa,KACbE,aAAa,KACbe,cAAc,KACd4pF,eAAe,KACfhJ,eAAe,KACfC,gBAAe,EACfuC,mBAAmB,KACnBiB,eAAe,UACfwF,uBAAsB,KAIxB3mH,cAAgB,OAwMhB63G,WAAa,WACX11G,EAAK8C,SAAS,CACZwhH,YAAa,mFAvMXxpH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAUC,mEACjC5H,KAAKkD,YAEkBlD,KAAKC,MAAMqQ,UAAY3I,EAAU2I,SAEtDtQ,KAAK0H,WAGsBE,EAAUs8G,iBAAmBlkH,KAAKwH,MAAM08G,gBAEnElkH,KAAK2pH,+RAMF3pH,KAAKC,MAAMqQ,iDACP,6BASC2Q,QAAQqD,IAAI,CAEpBtkB,KAAK+C,cAAckuB,gBAAgBjxB,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAMqQ,SACvEtQ,KAAK+C,cAAckuB,gBAAgBjxB,KAAKC,MAAMq+B,cAAcn8B,KAAKnC,KAAKC,MAAMqQ,SAC5EtQ,KAAK+C,cAAc48B,wBAAwB3/B,KAAKC,MAAMq+B,cAAcsB,WAAWz9B,KAAKnC,KAAKC,MAAMqQ,QAAQtQ,KAAKC,MAAMq+B,cAAcsB,WAAWj8B,SAAS3D,KAAKC,MAAMq+B,cAAcmB,UAAUI,eACvL7/B,KAAK+C,cAAck9B,oBAAoB,aAAa,GAAGjgC,KAAKC,MAAM2pH,iBAAiB5pH,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAM4pH,gBAAgB7pH,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAMq+B,cAAct+B,KAAKC,MAAMqQ,SAClMtQ,KAAK+C,cAAck9B,oBAAoB,mBAAmB,GAAGjgC,KAAKC,MAAM2pH,iBAAiB5pH,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAM4pH,gBAAgB7pH,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAMq+B,cAAct+B,KAAKC,MAAMqQ,8CAXxMwuB,OACA2qF,OACA5pF,OACAiqF,OACAlrF,OAUI8qF,EAAwBD,GAAkBA,EAAen0G,GAAG,IAC/C,GACC,EAIpBtV,KAAKgI,SAAS,CACZ8hH,aACAR,YAPiB,EAQjBC,aAPkB,EAQlBzqF,eACAF,eACAiB,gBACA4pF,iBACAC,yBACC,WACDvmH,EAAKwmH,+JAKP,IACIlG,EAAc,KACdt5G,EAAc,KACd00E,EAAe,KACf4hC,EAAiB,KACjBC,GAAiB,EAEfqJ,EAAiB/pH,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAWzV,KAAKC,MAAM4pH,kBAC7ER,EAAWU,EAAenS,YAAY53G,KAAKwH,MAAM08G,gBAErD,OAAQlkH,KAAKwH,MAAM08G,gBACjB,IAAK,UACHzD,GAAiB,EACjB5hC,EAAe7+E,KAAKC,MAAM6qE,UAC1B3gE,EAAcnK,KAAKC,MAAMkK,YACzBs5G,EAAczjH,KAAKwH,MAAMs3B,aAC3B,MACA,IAAK,QACH2hF,GAAiB,EACjBt2G,EAAcnK,KAAKC,MAAMq+B,cACzBmlF,EAAczjH,KAAKwH,MAAMiiH,eACzB5qC,EAAe7+E,KAAKC,MAAMq+B,cAAcsB,WAC1C,MACA,IAAK,UACH6gF,GAAiB,EACjBt2G,EAAcnK,KAAKC,MAAMq+B,cACzBugD,EAAe7+E,KAAKC,MAAMq+B,cAAcsB,WACxC6jF,EAAczjH,KAAKwH,MAAMq4B,cACpB7/B,KAAKwH,MAAM8hH,aACd5I,GAAiB,EACjB2I,EAAWU,EAAenS,YAAYoS,aAE1C,MACA,IAAK,WACHvJ,GAAiB,EACjB5hC,EAAe7+E,KAAKC,MAAM6qE,UAE1B3gE,EAAcnK,KAAKC,MAAMq+B,cACzBmlF,EAAczjH,KAAKwH,MAAMiiH,eAGpBzpH,KAAKwH,MAAM+hH,cACd7I,GAAiB,EACjB2I,EAAWU,EAAenS,YAAYqS,cAc5C,IAAMhH,EAAkB,MAAAt8G,OAAS3G,KAAKwH,MAAM08G,eAApB,kBAAAv9G,OAAmDwD,EAAYsH,MAA/D,2DAIxBzR,KAAKgI,SAAS,CACZ06G,QA9DY,KA+DZ2G,WACAl/G,cACAs5G,cACA5kC,eACA6hC,iBACAD,iBACAwC,uKAYiB7yF,GACnB,IAAIvS,EAAa,KACbw6C,EAAe,KAcnB,OAZIr4D,KAAKC,MAAMq+B,cAAcmB,UAAUz/B,KAAKwH,MAAM08G,kBAChDrmG,EAAa7d,KAAKC,MAAMq+B,cAAcmB,UAAUz/B,KAAKwH,MAAM08G,gBAM3D7rD,EAAe,CAACjoC,IAGlBqH,QAAQqc,IAAI,uBAAuBj2B,EAAWw6C,GAEvC,CACLx6C,aACAw6C,2FAIajoC,gFACT85F,EAAelqH,KAAK+C,cAAc2O,MAAM1R,KAAKC,MAAMkK,YAAY6nD,gBAC9ChyD,KAAK+C,cAAck9B,oBAAnB,OAA8C,GAAGjgC,KAAKC,MAAM2pH,iBAAiB5pH,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAM4pH,gBAAgB7pH,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAMq+B,cAAct+B,KAAKC,MAAMqQ,2BACtM4B,KAAKke,GAAQ9a,GAAG40G,0BAC3BlqH,KAAKgI,SAAS,CACZwhH,YAAY,6BAEP,oCAEF,qJAKP,OADAxpH,KAAK0H,WACG1H,KAAKwH,MAAM08G,gBACjB,IAAK,QACL,IAAK,UACHlkH,KAAKgI,SAAS,CACZwhH,YAAY,qDAcFtF,GAChBlkH,KAAKgI,SAAS,CACZk8G,oDAIK,IAAAp5G,EAAA9K,KACD+pH,EAAiB/pH,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAWzV,KAAKC,MAAM4pH,kBAC3EM,EAAkD,OAA/BnqH,KAAKC,MAAM4pH,gBAA2B,KAAO,KAChEO,EAAsBpqH,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW00G,IACrED,EAAelqH,KAAK+C,cAAcS,YAAYxD,KAAK+C,cAAc2O,MAAM1R,KAAKC,MAAMkK,YAAY6nD,OAAO,GAAG,IAAIhyD,KAAKC,MAAMgK,cACvH8zB,EAAiB/9B,KAAKC,MAAMq+B,cAAcsB,WAAW7B,eAAexsB,OAAQ,SAAAioB,GAAC,OAAIA,EAAEnH,UACzF,OACE1pB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBqF,SAAU,CAAC,OAAO,UAGftG,KAAKC,MAAMoqH,kBACV1hH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZE,eAAgB,YAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJlM,KAAM,QACNvC,MAAO,OACPwqH,cAAe,SACfloH,KAAMgoH,EAAoBhoH,KAC1B6E,UAAWmjH,EAAoB9nH,MAAMioH,IACrC3kH,QAAS,SAAAkB,GAAC,OAAIgE,EAAK7K,MAAMuqH,kBAAkBJ,EAAoBlsC,SAPjE,aASaksC,EAAoBjoH,OAKvCwG,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHwF,OAAO,OAMToD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJhwG,GAAI,EACJxN,WAAY,SACZC,cAAe,MACf4mH,aAAY,aAAAjhH,OAAeojH,EAAeznH,MAAMioH,MAEhD5hH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJS,IAAKioH,EAAe5oH,MACpBkB,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAENynH,EAAe5nH,OAGpBwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLokH,UAAU,IACVzqG,KAAK,UACLs9F,SAAS,OACTsK,aAAY,aAAAjhH,OAAc3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEpD7F,WAAY,aACZE,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ9L,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAJT,YAQAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB0P,MAAOzR,KAAKC,MAAMgK,cAClBE,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,iBAE5B31B,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,eACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBE,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAIhC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ9L,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAJT,SAQAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB0P,MAAOzR,KAAKC,MAAMgK,cAClBE,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,iBAE5B31B,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBE,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAIhC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,aAOAqG,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,kBAG9B31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,GAAI,KACZkB,cAAe,SACfD,WAAY,cAEZ4H,EAAAxI,EAAAC,cAACivB,EAAA,EAAD,CACEvrB,UAAW,CACTyK,GAAG,GAEL3L,KAAM,mBACN4sB,aAAc,CACZD,QAAQvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,mBAG3D9M,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,cACLyc,YAAY,CACV3d,eAAe,eAGnBwQ,MAAOzR,KAAKC,MAAMgK,cAClBE,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,kBAG9B31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACivB,EAAA,EAAD,CACEvrB,UAAW,CACTyK,GAAG,GAEL3L,KAAM,kBACN4sB,aAAc,CACZD,QAAQvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,sBAG3D9M,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,iBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,kBAG9B31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACivB,EAAA,EAAD,CACEzsB,KAAM,MACN4sB,aAAc,CACZD,QAAQvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,mBAG3D9M,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,wBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,iBAG1BP,EAAe/5B,OAAO,GACpB2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,yBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,EACTD,WAAW,EACXi1G,WAAW,IACXp1G,MAAM,aAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAMpC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,GAAI,KACZkB,cAAe,SACfD,WAAY,cAEZ4H,EAAAxI,EAAAC,cAACivB,EAAA,EAAD,CACEzsB,KAAM,YACN4sB,aAAc,CACZD,QAAQvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,gBAG3D9M,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,kBACLlC,MAAM,CACJwC,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,kBAG9B31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,GAAI,KACZkB,cAAe,SACfD,WAAY,cAEZ4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,UAOAqG,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,cACLlC,MAAM,CACJwC,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAI3Bt+B,KAAKC,MAAMkK,YAAYqhB,eAAiBxrB,KAAKC,MAAM+B,WAClD2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,GAAI,KACZkB,cAAe,SACfD,WAAY,cAEZ4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,aAOAqG,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,eACLlC,MAAM,CACJ0D,SAAS,EACTlB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAOlCt+B,KAAKC,MAAMoqH,iBACP1hH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPwqH,cAAe,SACfloH,KAAM2nH,EAAe3nH,KACrB6E,UAAW8iH,EAAeznH,MAAMioH,IAChC3kH,QAAS,SAAAkB,GAAC,OAAIgE,EAAK7K,MAAMuqH,kBAAkBT,EAAe7rC,SAGxDl+E,KAAKC,MAAMkK,YAAX,SAAAxD,OAAkCojH,EAAe5nH,MAAjD,cAAAwE,OAAwEojH,EAAe5nH,OAI7FwG,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACTuF,GAAG,EACHrI,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,6BAKd+F,EAAAxI,EAAAC,cAACuqH,EAADhrH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE+xD,MAAOk4D,EACPxP,WAAY16G,KAAK46G,WACjBmD,OAAmC,UAA3B/9G,KAAKwH,MAAMgiH,eAErB7gH,EAAAxI,EAAAC,cAACwqH,EAAA,EAAD,CACEC,iBAAiB,EACjBzoH,KAAI,mBACJ4kB,MAAK,mBACL1W,QAAStQ,KAAKC,MAAMqQ,QACpBoqG,WAAY16G,KAAK46G,WACjB/pF,UAAW7wB,KAAKC,MAAMgK,cACtB8zG,OAAmC,UAA3B/9G,KAAKwH,MAAMgiH,YACnB5mH,KAAI,+DAAA+D,OAAiE3G,KAAKwH,MAAMsiH,WAAa9pH,KAAKwH,MAAMsiH,WAAWn8G,QAAQ,GAAK,OAA5H,mCAAAhH,OAAoK3G,KAAKC,MAAMgK,cAA/K,cACJ6gH,MAAK,eAAAnkH,OAAiB3G,KAAKwH,MAAMsiH,WAAa9pH,KAAKwH,MAAMsiH,WAAWn8G,QAAQ,GAAK,OAA5E,gBAAAhH,OAAiG3G,KAAKC,MAAMgK,cAA5G,uCAAAtD,OAA+J3G,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAnM9O,OAAiN3G,KAAKC,MAAMsoH,gBAAgBrqC,MAA5O,2DAjrBcr7E,uCCg5CdumH,6MAp4Cb5hH,MAAQ,CACN6hH,SAAS,KACT0B,SAAS,KACTjB,WAAW,KACXR,WAAW,KACXC,YAAY,KACZC,YAAY,KACZnsC,YAAY,KACZ2tC,YAAY,KACZvH,YAAY,KACZwH,YAAY,KACZ1sF,YAAY,KACZp0B,YAAY,KACZ00E,aAAa,KACbjgD,aAAa,KACbE,aAAa,KACbosF,cAAa,EACbrrF,cAAc,KACdsrF,gBAAe,EACfC,eAAe,KACf3B,eAAe,KACf17C,gBAAe,EACf0yC,eAAe,KACfC,gBAAe,EACfmJ,gBAAgB,KAChBtsF,kBAAkB,KAClB0lF,mBAAmB,KACnBiB,eAAe,UACfmH,sBAAsB,KACtBC,oBAAoB,QACpB5B,uBAAsB,KAIxB3mH,cAAgB,OAyShB63G,WAAa,WACX11G,EAAK8C,SAAS,CACZwhH,YAAa,mFAxSXxpH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAUC,2EACjC5H,KAAKkD,YAEkBlD,KAAKC,MAAMqQ,UAAY3I,EAAU2I,SAEtDtQ,KAAK0H,WAGD6jH,EAAwB3jH,EAAUs8G,iBAAmBlkH,KAAKwH,MAAM08G,eAChEsH,EAA6B5jH,EAAU0jH,sBAAwBtrH,KAAKwH,MAAM8jH,qBAC5EC,GAAyBC,IAC3BxrH,KAAK2pH,gUAeG1oG,QAAQqD,IAAI,CAEpBtkB,KAAK+C,cAAcikC,sBAAsBhnC,KAAKC,MAAMkK,aACpDnK,KAAK+C,cAAckuB,gBAAgBjxB,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAMqQ,SACvEtQ,KAAK+C,cAAckuB,gBAAgBjxB,KAAKC,MAAMq+B,cAAcn8B,KAAKnC,KAAKC,MAAMqQ,SAC5EtQ,KAAK+C,cAAc48B,wBAAwB3/B,KAAKC,MAAMq+B,cAAcsB,WAAWz9B,KAAKnC,KAAKC,MAAMqQ,QAAQtQ,KAAKC,MAAMq+B,cAAcsB,WAAWj8B,SAAS3D,KAAKC,MAAMq+B,cAAcmB,UAAUI,eACvL7/B,KAAK+C,cAAck9B,oBAAoB,aAAa,GAAGjgC,KAAKC,MAAM2pH,iBAAiB5pH,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAM4pH,gBAAgB7pH,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAMq+B,cAAct+B,KAAKC,MAAMqQ,SAClMtQ,KAAK+C,cAAck9B,oBAAoB,eAAe,GAAGjgC,KAAKC,MAAM2pH,iBAAiB5pH,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAM4pH,gBAAgB7pH,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAMq+B,cAAct+B,KAAKC,MAAMqQ,SACpMtQ,KAAK+C,cAAck9B,oBAAoB,iBAAiB,GAAGjgC,KAAKC,MAAM2pH,iBAAiB5pH,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAM4pH,gBAAgB7pH,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAMq+B,cAAct+B,KAAKC,MAAMqQ,8CAftM26G,OACAnsF,OACA2qF,OACA5pF,OACAiqF,OACAlrF,OACAwsF,QAYiB,GACC,EAId7tF,EAAoB59B,OAAO2R,OAAOtR,KAAK+C,cAAc0S,gBAAgB,CAAC,cAAc3P,IAAK,SAAAs6B,GAAW,MAAK,CAC7Gj1B,MAAMi1B,EAAY78B,KAClBnB,KAAKg+B,EAAYj/B,MACjB8M,MAAMmyB,EAAYj+B,KAClBk8B,QAAQ+B,EAAY78B,KACpB+6B,cAAcn7B,EAAKlD,MAAMkK,YAAYi2B,EAAY78B,SAG7CmmH,EAAwBD,GAAkBA,EAAen0G,GAAG,GAC5D+1G,EAAwB9tF,EAAkB9d,KAAM,SAAA2gB,GAAW,OAAIA,EAAYj1B,QAAUhI,EAAKlD,MAAM4pH,kBAChGA,EAAkBwB,EAAsBlgH,MAExC4yB,EAAiB/9B,KAAKC,MAAMq+B,cAAcsB,WAAW7B,eAAexsB,OAAQ,SAAAioB,GAAC,OAAIA,EAAEnH,UACrF07C,EAAiBhwC,EAAe/5B,OAAO,EACrCknH,EAAen9C,EACfo9C,EAAiBtrF,GAAiB7/B,KAAK+C,cAAc2O,MAAMmuB,GAAevqB,GAAG,IAI9Ey4D,GAAkBo9C,IACrBp9C,GAAiB,GAGfu9C,EAAsB,SACrBJ,GAAgBC,IACnBG,EAAsB,WAGxBtrH,KAAKgI,SAAS,CACZ8hH,aACAR,YAnCiB,EAoCjBC,aAnCkB,EAoClB0B,cACAnsF,eACAosF,eACAtsF,eACAiB,gBACAurF,iBACAr9C,iBACA07C,iBACA0B,iBACAtB,kBACAtsF,oBACA+tF,sBACAD,wBACA3B,yBACC,WACDvmH,EAAKwmH,+JAKP,IACIlG,EAAc,KACdt5G,EAAc,KACd00E,EAAe,KACf4hC,EAAiB,KACjBC,GAAiB,EAEjBrjC,EAAcr9E,KAAKwH,MAAM08G,eACvB6F,EAAiB/pH,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAWzV,KAAKC,MAAM4pH,kBAC3EtrF,EAAcv+B,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,kBAAkBzV,KAAKC,MAAMgK,gBAC1Go/G,EAAWrpH,KAAK+C,cAAcytB,aAAa,CAAC,WAAWxwB,KAAKwH,MAAM08G,gBAAgBlkH,KAAKC,MAAMkK,cAAgB4/G,EAAenS,YAAY53G,KAAKwH,MAAM08G,gBAEvJ,OAAQlkH,KAAKwH,MAAM08G,gBACjB,IAAK,UACHzD,GAAiB,EACjB5hC,EAAe7+E,KAAKC,MAAM6qE,UAC1B3gE,EAAcnK,KAAKC,MAAMkK,YACzBs5G,EAAczjH,KAAKwH,MAAMs3B,aAErBP,GAAeA,EAAYc,aAAa5tB,MAAMlE,gBAAkBvN,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAM4pH,iBAAiBp4G,MAAMlE,eAAiBvN,KAAKwH,MAAMiiH,gBAAkBzpH,KAAKwH,MAAMiiH,eAAen0G,GAAG,KACtM+zG,EAAQ,cAAA1iH,OAAiB43B,EAAYc,aAAa5tB,MAA1C,8CAEZ,MACA,IAAK,QAOH,OANA4rE,EAAcr9E,KAAKwH,MAAM8jH,oBAEvBjC,EADErpH,KAAKwH,MAAMumE,eACFg8C,EAAenS,YAAY53G,KAAKwH,MAAM8jH,qBAEtC,KAELtrH,KAAKwH,MAAM8jH,qBACjB,IAAK,SAEC/sF,GAAgBv+B,KAAKwH,MAAM0jH,eAC7B7B,EAAW,MAEb5I,GAAiB,EACjBt2G,EAAcnK,KAAKC,MAAMq+B,cACzBmlF,EAAczjH,KAAKwH,MAAMiiH,eACzB5qC,EAAe7+E,KAAKC,MAAMq+B,cAAcsB,WAC1C,MACA,IAAK,UACH6gF,GAAiB,EACjBt2G,EAAcnK,KAAKC,MAAMq+B,cACzBugD,EAAe7+E,KAAKC,MAAMq+B,cAAcsB,WACxC6jF,EAAczjH,KAAKwH,MAAMq4B,cACpB7/B,KAAKwH,MAAM8hH,aACd5I,GAAiB,EACjB2I,EAAWU,EAAenS,YAAYoS,aAM9C,MACA,IAAK,WACHvJ,GAAiB,EACjB5hC,EAAe7+E,KAAKC,MAAM6qE,UAI1B3gE,EAAcnK,KAAKC,MAAMkK,YACzBs5G,EAAczjH,KAAKwH,MAAMiiH,eAAiBzpH,KAAKwH,MAAMiiH,eAAe/7G,MAAM1N,KAAKwH,MAAMo3B,cAAgB,KAIhG5+B,KAAKwH,MAAM+hH,cACd7I,GAAiB,EACjB2I,EAAWU,EAAenS,YAAYqS,cAc5C,IAAMhH,EAAqB94G,EAAW,MAAAxD,OAAS3G,KAAKwH,MAAM08G,eAApB,kBAAAv9G,OAAmDwD,EAAYsH,MAA/D,2DAAgI,KAItKzR,KAAKgI,SAAS,CACZ06G,QAvFY,KAwFZ2G,WACAhsC,cACA9+C,cACAp0B,cACAs5G,cACA5kC,eACA6hC,iBACAD,iBACAwC,uKAYiB7yF,EAAO6wF,GAC1B,IAAIpjG,EAAa,KACbw6C,EAAe,KAEnB,GAAIr4D,KAAKC,MAAMq+B,cAAcmB,UAAUz/B,KAAKwH,MAAM08G,gBAGhD,GAFArmG,EAAa7d,KAAKC,MAAMq+B,cAAcmB,UAAUz/B,KAAKwH,MAAM08G,gBAEzB,aAA9BlkH,KAAKwH,MAAM08G,eAA8B,CAC3C,IAAIuH,EAAuB,MAEzBA,EADExK,EACqBjhH,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMiiH,gBAAgB/7G,MAAM1N,KAAK+C,cAAc2O,MAAMuvG,GAAoBz9F,IAAI,MAE3GxjB,KAAK+C,cAAc2O,MAAM0e,GAAQ5M,IAAIxjB,KAAK+C,cAAcwxD,qBAAqBv0D,KAAKwH,MAAMo3B,aAAa,MAIrGtpB,GAAGtV,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMiiH,mBAC9DgC,EAAuBzrH,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMiiH,iBAM7DpxD,EAAe,CAFfozD,EAAuBzrH,KAAK+C,cAAcwxD,qBAAqBk3D,EAAsB,SAInD,UAA9BzrH,KAAKwH,MAAM08G,iBACbrmG,EAAa7d,KAAKC,MAAMq+B,cAAcmB,UAAUz/B,KAAKwH,MAAM8jH,sBAG7DjzD,EAAe,CAACjoC,GAMpB,MAAO,CACLvS,aACAw6C,2FAIajoC,8EACT85F,EAAelqH,KAAK+C,cAAc2O,MAAM1R,KAAKC,MAAMkK,YAAY6nD,QACpD18C,GAAG,mCACKtV,KAAK+C,cAAck9B,oBAAnB,OAA8C,GAAGjgC,KAAKC,MAAM2pH,iBAAiB5pH,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAM4pH,gBAAgB7pH,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAMq+B,cAAct+B,KAAKC,MAAMqQ,2BACtM4B,KAAKke,GAAQ9a,GAAG40G,0BAC3BlqH,KAAKgI,SAAS,CACZwhH,YAAY,6BAEP,oCAGJ,qJAUP,OANAxpH,KAAK0H,WAE0C,oBAApC1H,KAAKC,MAAMwnH,sBACpBznH,KAAKC,MAAMwnH,uBAGLznH,KAAKwH,MAAM08G,gBACjB,IAAK,QACL,IAAK,UACH,GAAkC,YAA9BlkH,KAAKwH,MAAM08G,gBAAmE,UAAnClkH,KAAKwH,MAAM8jH,oBAAgC,CACxF,IAAMN,EAA4C,YAA9BhrH,KAAKwH,MAAM08G,eAA+B,YAAc,SACtE6G,EAAyC,YAA9B/qH,KAAKwH,MAAM08G,eAA+BlkH,KAAKwH,MAAM4jH,eAAiBprH,KAAKwH,MAAMsiH,WAClG9pH,KAAKgI,SAAS,CACZ+iH,WACAC,cACAxB,YAAY,sDAeJtF,GAChBlkH,KAAKgI,SAAS,CACZk8G,0DAIWoH,GACbtrH,KAAKgI,SAAS,CACZsjH,8DAIUziE,GAEZ,IAAMkhE,EAAiB/pH,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAWozC,IAClEkhE,GACF/pH,KAAKC,MAAMuqH,kBAAkBT,EAAe7rC,wCAIvC,IAAApzE,EAAA9K,KAED0rH,EAAwC,UAA9B1rH,KAAKwH,MAAM08G,eACrByH,EAA0C,YAA9B3rH,KAAKwH,MAAM08G,eACvB0H,EAA2C,aAA9B5rH,KAAKwH,MAAM08G,eAExBnmF,EAAiB/9B,KAAKC,MAAMq+B,cAAcsB,WAAW7B,eAAexsB,OAAQ,SAAAioB,GAAC,OAAIA,EAAEnH,UACnF63F,EAAelqH,KAAK+C,cAAcS,YAAYxD,KAAK+C,cAAc2O,MAAM1R,KAAKC,MAAMkK,YAAY6nD,OAAO,GAAG,IAAIhyD,KAAKC,MAAMgK,cAuE7H,OACEtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjB,KAAKwH,MAAM+1B,kBAmBV50B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBqF,SAAU,CAAC,OAAO,SAElBqC,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,mBAKA5F,EAAAxI,EAAAC,cAACoa,EAAA,EAAD7a,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,WACN0Z,cAAc,EACdb,kBAnHY,SAAA/a,GACxB,IAAMgoH,EAAiBhoH,EAAM2a,QAAQ6E,KAAM,SAAAosG,GAAM,OAAIA,EAAO1gH,QAAUlL,EAAMkL,QAC5E,OAAK88G,EAKHt/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,UAEZ4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJS,IAAKmmH,EAAe7lH,KACpBC,KAAMyI,EAAK7K,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,GAEXxC,EAAMgO,SArBN,MAiHG2M,QAAS5a,KAAKwH,MAAM+1B,kBACpB3gB,SAAU5c,KAAK8rH,cAAc5sG,KAAKlf,MAClCib,qBAvFe,SAAAhb,GAC3B,IAAM0b,EAAc1b,EAAM0b,YAAYf,QAAQ6E,KAAM,SAAAosG,GAAM,OAAIA,EAAO1gH,QAAUlL,EAAM0b,YAAYxQ,MAAMA,QAEvG,OAAKwQ,EAIHhT,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACEyG,MAAO,CACL2Z,KAAK,KAEP/e,eAAgB,iBACZhB,EAAMkb,YAEVxS,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMkb,WAHZ,CAIEpa,WAAY,SACZC,cAAe,MACfqF,MAAO,CAAC6I,OAAO,WACfjO,eAAgB,eAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJS,IAAK6Z,EAAYvZ,KACjBC,KAAMyI,EAAK7K,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,GAEXkZ,EAAY1N,SA3BZ,MAoFG6M,aAAc9a,KAAKwH,MAAM6jH,0BAG7B1iH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,oBAKA5F,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHwO,GAAG,GAELhO,UAAU,GAEVoI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,EACPuG,MAAO,CACLokH,UAAU,IACVzqG,KAAK,UACLs9F,SAAS,QAEXt8G,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,YAOAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB0P,MAAOzR,KAAKC,MAAMgK,cAClBE,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,iBAE5B31B,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,eACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBE,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAIhC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,SAOAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB0P,MAAOzR,KAAKC,MAAMgK,cAClBE,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,iBAE5B31B,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBE,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAIhC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,aAOAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAIhC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACivB,EAAA,EAAD,CACE1sB,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,CAAC,EAAE,IAEhBG,KAAM,mBACN2sB,QAASvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,kBAE1D9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAIhC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACivB,EAAA,EAAD,CACE1sB,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,CAAC,EAAE,IAEhBG,KAAM,kBACN2sB,QAASvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,qBAE1D9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,iBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAIhC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACivB,EAAA,EAAD,CACE1sB,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,CAAC,EAAE,IAEhBG,KAAM,MACN2sB,QAASvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,kBAE1D9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,SACfD,WAAY,aACZE,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,wBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,iBAG1BP,EAAe/5B,OAAO,GACpB2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,MACfD,WAAY,cAEZ4H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,yBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,EACTD,WAAW,EACXi1G,WAAW,IACXp1G,MAAM,aAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,oBAOtC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACivB,EAAA,EAAD,CACE1sB,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,CAAC,EAAE,IAEhBG,KAAM,YACN2sB,QAASvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,eAE1D9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,kBACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAIhC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,UAOAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,eAEPsP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,mBAIhC31B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,aAOAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0f,UAAW,CACTxd,KAAK,eACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGVmP,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4pH,gBACpB1/G,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBtrF,cAAet+B,KAAKC,MAAMq+B,oBAMhCt+B,KAAKC,MAAMkK,YAAYytG,aACrBjvG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,EACJvT,GAAI,EACJzO,MAAO,EACPkB,cAAe,SACf+qH,UAAS,aAAAplH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEhD+B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,wBAOAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,OACV4G,UAAW,WAEVtJ,KAAKC,MAAMkK,YAAYytG,cAI1B53G,KAAKwH,MAAMyjH,aACTtiH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,EACJzY,GAAI,EACJrI,cAAe,SACfD,WAAY,aACZgrH,UAAS,aAAAplH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEhD+B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJqB,SAAU,OACVJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAJjB,sBAQAkG,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CACE38F,KAAMnmB,KAAK+C,cAAcqjB,2BAA2BpmB,KAAKwH,MAAMyjH,YAAY9sG,kBAE3ExV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,QAET1C,KAAK+C,cAAc8P,YAA6C,IAAjC7S,KAAKwH,MAAMyjH,YAAYp2G,WAAgBuoE,MAAMnnE,OAAO,qBAJtF,QAMAtN,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrD,KAAM,QACNF,KAAM,YACNG,MAAO,iBAKfqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJqB,SAAU,OACVJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAJjB,wBAQAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,QAET1C,KAAK+C,cAAcmS,iBAAiBlV,KAAKwH,MAAMyjH,YAAY76F,OAAOpwB,KAAKC,MAAMkK,YAAYxG,UAAUgK,QAAQ,GAJ9G,IAImH3N,KAAKC,MAAMkK,YAAYsH,YAY7H,UAA7BzR,KAAKC,MAAMgK,eAA4D,OAA/BjK,KAAKC,MAAM4pH,iBACjDlhH,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT6B,EAAE,EACF8H,GAAG,EACHkF,GAAG,EACHzO,MAAM,GAERS,UAAU,EACVD,eAAe,EACfkC,UAAW,CACTH,KAAK,QACLC,MAAM,cAERF,KAAM,iBACNO,UAAW,CACTF,WAAW,IACXH,MAAM,aACNgH,UAAU,SACV5G,SAAS,CAAC,OAAO,SAEnBE,KAAI,8dAAA+D,OAAge3G,KAAK+C,cAAcqhC,uBAAnB,gBAAhe,gIAIVz7B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,kBAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOomH,EAAY,EAAI,GAEzBzO,QAAS,UACTp9G,MAAO,CAAC,EAAE,OACVkC,SAAUhC,KAAKC,MAAM+B,SACrBu7G,SAAU,qBACVt7G,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUorH,EACVlrH,YAAc,SAAAqG,GAAC,OAAIgE,EAAKu8G,kBAAkB,cAE5C1+G,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOmmH,EAAU,EAAI,EACrBxkH,UAAUlH,KAAKwH,MAAMumE,gBAEvBjuE,MAAO,CAAC,EAAE,OACVo9G,QAAS,kBACTK,SAAU,kBACVv7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUmrH,EACVjrH,YAAc,SAAAqG,GAAC,OAAIgE,EAAKu8G,kBAAkB,YAE5C1+G,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOqmH,EAAa,EAAI,GAE1B9rH,MAAO,CAAC,EAAE,OACVo9G,QAAS,WACTK,SAAU,oBACVv7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUqrH,EACVnrH,YAAc,SAAAqG,GAAC,OAAIgE,EAAKu8G,kBAAkB,iBAK9CqE,GAAW1rH,KAAKwH,MAAMumE,gBACpBplE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,wBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,QACNR,KAAM,SACNG,UAAW,UACXnB,YAAa,UACbX,YAAc,SAAAqG,GAAC,OAAIgE,EAAKw8G,eAAe,UACvC/mH,SAA8C,UAAnCP,KAAKwH,MAAM8jH,uBAExB3iH,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,UACNR,KAAM,cACNG,UAAW,SACXnB,YAAa,UACbZ,YAAcR,KAAKwH,MAAM2jH,eACzB5qH,SAA8C,YAAnCP,KAAKwH,MAAM8jH,oBACtB7qH,YAAc,SAAAqG,GAAC,OAAIgE,EAAKtD,MAAM2jH,eAAiBrgH,EAAKw8G,eAAe,WAAa,WAOxFtnH,KAAKwH,MAAM6hH,UAAYrpH,KAAKC,MAAMqQ,SAChC3H,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT6B,EAAE,EACF8H,GAAG,EACHkF,GAAG,EACHzO,MAAM,GAERS,UAAU,EACVD,eAAe,EACfkC,UAAW,CACTH,KAAK,QACLC,MAAM,cAERK,UAAW,CACTF,WAAW,IACXH,MAAM,aACNgH,UAAU,SACV5G,SAAS,CAAC,OAAO,SAEnBN,KAAM,mBACNQ,KAAM5C,KAAKwH,MAAM6hH,WAIvB1gH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGZyqH,IAAY1rH,KAAKwH,MAAMumE,gBAAoB29C,GAA8C,UAAnC1rH,KAAKwH,MAAM8jH,sBAAoCtrH,KAAKwH,MAAM0jH,aAChHviH,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAG,EACH8H,GAAI,IAGNV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNC,MAAO,WACPH,KAAM,iBAERwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,WACPgH,UAAW,UAHb,8CASFoiH,GAA8C,UAAnC1rH,KAAKwH,MAAM8jH,qBAAmCtrH,KAAKwH,MAAM+2B,YACtE51B,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAI,GAENjH,KAAM,mBACNQ,KAAI,iFAAA+D,OAAmF3G,KAAK+C,cAAcqhC,uBAAnB,UAAAz9B,OAAoD3G,KAAKC,MAAMgK,gBAAlJ,mBAAAtD,OAAoL3G,KAAKC,MAAMgK,cAA/L,gBAEJtB,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,KAEXW,YAAa,SAAAqG,GAAC,OAAIgE,EAAK7K,MAAM8G,YAAX,UAAAJ,OAAiCmE,EAAK7K,MAAMgK,kBALhE,gBAUAyhH,GAA8C,YAAnC1rH,KAAKwH,MAAM8jH,sBAAsCtrH,KAAKC,MAAMq+B,cAAcsB,WAAW2/E,mBAClG52G,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAG,EACHg9G,GAAI,EACJl1G,GAAI,IAGNV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNC,MAAO,WACPH,KAAM,mBAERwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPgH,UAAW,UALb,mBAOkBX,EAAAxI,EAAAC,cAAA,cAASJ,KAAKwH,MAAMq4B,cAAclyB,QAAQ,GAA1C,IAA+C3N,KAAKwH,MAAM2C,YAAY8D,OAPxF,KASAtF,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,CACEwe,OAAQ,IACJpe,KAAKC,MAFX,CAGE4C,UAAW2kH,IACX5oG,YAAa,CACX9e,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjBqe,eAAgB,CACd5c,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,EAAE,GACX0B,aAAa,EACb2J,MAAM,UACNlE,UAAU,UAEZ0K,OAAQ,UACRoM,aAAc/d,KAAKwH,MAAMq3E,aAAa18E,KACtC4F,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzC6d,WAAY7d,KAAKC,MAAMq+B,cAAcmB,UAAU6/E,aAKrD32G,EAAAxI,EAAAC,cAACsnH,EAAD/nH,OAAAC,OAAA,CACE6d,MAAO,MACHzd,KAAKC,MAFX,CAGEqF,YAAa,CACXxF,MAAM,CAAC,EAAE,MAEXygH,eAAe,EACfp2G,YAAanK,KAAKwH,MAAM2C,YACxB20B,aAAc9+B,KAAKwH,MAAMi8G,YACzB5kC,aAAc7+E,KAAKwH,MAAMq3E,aACzBgjC,WAAY7hH,KAAK6hH,WAAW3iG,KAAKlf,MACjCygH,eAAgBzgH,KAAKwH,MAAMi5G,eAC3BC,eAAgB1gH,KAAKwH,MAAMk5G,eAC3B34G,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzCijH,mBAAoBjjH,KAAKwH,MAAMy7G,mBAC/BlC,oBAAqB/gH,KAAK+gH,oBAAoB7hG,KAAKlf,MACnD2gH,iBAAkB3gH,KAAKisH,yBAAyB/sG,KAAKlf,MACrDqe,qBAAsBre,KAAKqe,qBAAqBa,KAAKlf,MACrD2R,OAAQ3R,KAAK+C,cAAcmL,WAAWlO,KAAKwH,MAAM61E,eAG/CsuC,EACEhjH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC24G,EAAA,EAADp5G,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE66G,YAAY,EACZ7B,iBAAkB,GAClBI,SAAUr5G,KAAKC,MAAMgK,gBAGnBjK,KAAKC,MAAMkK,YAAYi1G,UAAYp/G,KAAKC,MAAMkK,YAAYi1G,SAASQ,gBACjEj3G,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAG,EACHT,GAAI,IAGN6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,WACPgH,UAAW,UAHb,sBAKqBX,EAAAxI,EAAAC,cAAA,cAASJ,KAAKC,MAAMgK,eALzC,gBAOAtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,WACPgH,UAAW,SACXC,wBAAyB,CAACC,OAAOxJ,KAAKC,MAAMkK,YAAYi1G,SAASQ,qBAIrE,OAIR8L,EACF/iH,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAG,EACHT,GAAI,IAGN6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,WACPgH,UAAW,UAHb,sBAKqBX,EAAAxI,EAAAC,cAAA,cAASJ,KAAKwH,MAAM2C,YAAY8D,OALrD,aAK+EjO,KAAKwH,MAAM8jH,oBAL1F,OASFM,GACFjjH,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAG,EACHT,GAAI,IAGN6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,WACPgH,UAAW,UAHb,sBAKsBtJ,KAAKC,MAAMgK,cALjC,gBAK4DtB,EAAAxI,EAAAC,cAAA,WAL5D,2BAK0FuI,EAAAxI,EAAAC,cAAA,cAASJ,KAAKwH,MAAM2C,YAAY8D,OAL1H,2DAKkMjO,KAAKC,MAAMgK,cAL7M,SAehBtB,EAAAxI,EAAAC,cAACuqH,EAADhrH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE+xD,MAAOk4D,EACPxP,WAAY16G,KAAK46G,WACjBmD,OAAmC,UAA3B/9G,KAAKwH,MAAMgiH,eAErB7gH,EAAAxI,EAAAC,cAACwqH,EAAA,EAAD,CACEC,iBAAiB,EACjBzoH,KAAI,mBACJ4kB,MAAK,mBACL1W,QAAStQ,KAAKC,MAAMqQ,QACpBoqG,WAAY16G,KAAK46G,WACjB/pF,UAAW7wB,KAAKC,MAAMgK,cACtB8zG,OAAmC,UAA3B/9G,KAAKwH,MAAMgiH,YACnB5mH,KAAI,yBAAA+D,OAA2B3G,KAAKwH,MAAMwjH,YAAtC,iCAAArkH,OAAiF3G,KAAKwH,MAAMujH,SAAW/qH,KAAKwH,MAAMujH,SAASp9G,QAAQ,GAAK,OAAxI,mCAAAhH,OAAgL3G,KAAKC,MAAMgK,cAA3L,cACJ6gH,MAAK,eAAAnkH,OAAiB3G,KAAKwH,MAAMujH,SAAW/qH,KAAKwH,MAAMujH,SAASp9G,QAAQ,GAAK,OAAxE,gBAAAhH,OAA6F3G,KAAKC,MAAMgK,cAAxG,uCAAAtD,OAA2J3G,KAAK+C,cAAc0S,gBAAgB,CAAC,aAA/L9O,OAA6M3G,KAAKC,MAAMsoH,gBAAgBrqC,MAAxO,oDA97BTv1E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,iCA5cOC,iDC4nBdqpH,8MAvoBb1kH,MAAQ,CACN+H,UAAU,KACV5F,UAAU,KACVC,WAAW,KACX4F,WAAW,KACXC,YAAY,QAId1M,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,YACLlD,KAAK0P,qMAGkB/H,EAAWC,oFAClC5H,KAAKkD,YAECyM,EAA4BhI,EAAUiI,qBAAuB5P,KAAKC,MAAM2P,oBACzDC,KAAKC,UAAUnI,EAAUoI,iBAAmBF,KAAKC,UAAU9P,KAAKC,MAAM8P,gBACvEJ,IAClB3P,KAAKgI,SAAS,CACZ2B,UAAU,MACV,WACAxG,EAAK6M,sBAIHC,EAAgBtI,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDkO,EAAmBvI,EAAUwI,YAAcnQ,KAAKC,MAAMkQ,WACxDF,GAAiBC,IACnBlQ,KAAK0P,uVAKHK,EAAgB/P,KAAKC,MAAM8P,gBAERA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAK/D,KAAKC,MAAMs9B,mBAAmB0H,OAAQ,SAACl1B,EAAckuB,GAO/E,OANet+B,OAAOoE,KAAK+G,EAAK7K,MAAMs9B,kBAAkBU,IACjDh6B,QAAS,SAAAwN,GACT1B,EAAc0kB,SAAShjB,IAC1B1B,EAAcnC,KAAK6D,KAGhB1B,GACP,KAGEpO,EAAe3B,KAAKC,MAAMksH,iBAE1BxiH,EAAY,GACZgK,EAAa,GACfnD,EAAgB,GAChBC,EAAmB,cAEjBzQ,KAAK+C,cAAc2N,aAAaX,EAAhC,eAAAY,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA8C,SAAAiD,EAAO9J,GAAP,IAAA+G,EAAAC,EAAA,OAAA+f,EAAA7wB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,UAElDb,EAAcvG,GAAiB,KAEzB+G,EAAcrR,OAAO2R,OAAO3P,GAAc4P,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,OACxD+G,EAAYhN,OALmB,CAAAiQ,EAAA5C,KAAA,eAO5CJ,EAAanG,EAAK/H,cAAc2O,MAAM,GAPMuC,EAAA5C,KAAA,EAS1CvG,EAAK/H,cAAc2N,aAAaM,EAAhC,eAAA8C,EAAAnU,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA4C,SAAAC,EAAOS,EAAGzL,GAAV,IAAAiM,EAAAC,EAAAN,EAAAU,EAAAgsB,EAAAJ,EAAA1a,EAAAqb,EAAAmP,EAAA,OAAA/c,EAAA7wB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAG3CG,EAAG3J,QAAS2J,EAAGI,QAAwB,YAAdJ,EAAGI,QAHe,CAAAT,EAAAE,KAAA,eAAAF,EAAAyQ,OAAA,UAIvC,GAJuC,OAOhDnR,EAAmBA,EAAmBoB,KAAKC,IAAIrB,EAAiBsB,SAASP,EAAGQ,YAAcD,SAASP,EAAGQ,WAEhGA,EAAYD,SAASP,EAAGQ,WACxBC,EAAcnH,EAAK/H,cAAc2O,MAAMF,EAAGS,aAVAd,EAAAuhB,GAYxClhB,EAAGG,OAZqCR,EAAAE,KAazC,YAbyCF,EAAAuhB,GAAA,EAgBzC,aAhByCvhB,EAAAuhB,GAAA,0BAc5CzhB,EAAaA,EAAWiB,KAAKD,GAded,EAAAyQ,OAAA,2BAiB5C3Q,EAAaA,EAAWkB,MAAMF,GAjBcd,EAAAyQ,OAAA,2BAAAzQ,EAAAyQ,OAAA,oBAwB5C3Q,EAAWmB,GAAG,KAChBnB,EAAanG,EAAK/H,cAAc2O,MAAM,IAGlCC,EAASH,EAAGG,OACZU,EAAUpB,EACVotB,EAAU7sB,EAAG6sB,QACbJ,EAAWzsB,EAAGysB,SACd1a,EAAc/R,EAAG+R,YACjBqb,EAAe9zB,EAAK/H,cAAc2O,MAAMF,EAAGotB,cAC3CmP,EAAgBjjC,EAAK/H,cAAc2O,MAAMF,EAAGu8B,eAC7CnP,EAAat7B,SAAYyqC,EAAczqC,UAC1CkN,EAAcvG,GAAe2D,KAAK,CAChC+D,SACAU,UACAgsB,UACAJ,WACAjsB,YACAC,cACAsR,cACAqb,eACAmP,kBAGFv9B,EAAcvG,GAAiBuG,EAAcvG,GAAekjC,KAAK,SAAChtC,EAAGs5B,GAAJ,OAAW1nB,SAAS5R,EAAE6R,WAAaD,SAAS0nB,EAAEznB,WAAa,GAAK,KAhDnF,yBAAAb,EAAAqB,SAAAzB,EAAA/Q,SAA5C,gBAAAqU,EAAA8e,GAAA,OAAArf,EAAApB,MAAA1S,KAAA2S,YAAA,IAT0C,wBAAAsB,EAAAzB,SAAAuB,EAAA/T,SAA9C,gBAAAyS,GAAA,OAAA9B,EAAA+B,MAAA1S,KAAA2S,YAAA,WAgEFpD,EAAY,KACVqD,EAAc5S,KAAK+C,cAAc8P,YAAY,IAAIC,WAE/C9S,KAAKC,MAAM2P,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,4CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAY,yCAIV0D,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB1B,SAAS/R,KAAK+C,cAAc8P,YAAY7S,KAAK+C,cAAc8P,cAAcoD,OAAO,cAAc,YAAY,uBAAuBmlC,GAAG1nC,UAAU,KAE9J8qB,EAAsB,GAEvB/tB,IACHA,EAAmBgD,aAMfzT,KAAK+C,cAAc2N,aAAa/Q,OAAOoE,KAAKyM,GAA5C,eAAA0Q,EAAAvhB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA2D,SAAAqR,EAAO1Q,GAAP,IAAA26G,EAAAC,EAAAC,EAAAC,EAAA/2G,EAAArL,EAAAg0B,EAAAC,EAAAouF,EAAAC,EAAAC,EAAAnkE,EAAAokE,EAAAC,EAAAC,EAAAz2G,EAAApE,EAAA,OAAAgf,EAAA7wB,EAAA+Q,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,WAC3Db,EAAciB,GAAOzN,OADsC,CAAAqe,EAAAhR,KAAA,gBAEvD+6G,EAAqB57G,EAAciB,GAAO,GAC1C46G,EAAe77G,EAAciB,GAAO,GACpC66G,EAAiB97G,EAAciB,GAAOgO,KAAM,SAAAjO,GAAE,MAAiB,OAAbA,EAAG6sB,WAAoB,KACzEkuF,EAAiB/7G,EAAciB,GAAOgO,KAAM,SAAAjO,GAAE,MAAiB,OAAbA,EAAG6sB,WAAoB,KAIzE7oB,EAAsB1K,EAAK/H,cAAckvG,4BAA4BxgG,GACrEtH,EAAcW,EAAK7K,MAAMs9B,kBAAkB6uF,EAAmBnuF,SAAS1wB,eAAekE,GAV/B4Q,EAAAhR,KAAA,EAenD4P,QAAQqD,IAAI,CACpBgoG,EAAiBxhH,EAAK/H,cAAcgkD,uBAAuB58C,EAAYuhE,GAAGp+D,QAAQg/G,EAAet6G,UAAUyB,EAAc,CAAC,YAAY,eAAe,gBAAkB,GACvK84G,EAAiBzhH,EAAK/H,cAAcgkD,uBAAuB58C,EAAYwnE,GAAGrkE,QAAQi/G,EAAev6G,UAAUyB,EAAc,CAAC,YAAY,eAAe,gBAAkB,KAjB5G,UAAA0qB,EAAA9b,EAAAjO,KAAAgqB,EAAAz+B,OAAA6yB,EAAA,EAAA7yB,CAAAw+B,EAAA,GAa3DquF,EAb2DpuF,EAAA,GAc3DquF,EAd2DruF,EAAA,GAoBvDsuF,EAAkB76G,KAAKC,IAAIw6G,EAAiBA,EAAet6G,UAAYq6G,EAAar6G,UAAUu6G,EAAiBA,EAAev6G,UAAYq6G,EAAar6G,WAEvJu2C,EAAeikE,EAAe7lH,OAAO8lH,GAAgBt/E,KAAK,SAAChtC,EAAGs5B,GAAJ,OAAW1nB,SAAS5R,EAAE6R,WAAaD,SAAS0nB,EAAEznB,WAAa,GAAK,IAE1H26G,EAA4B,IAC9Bn3G,EAzByD,CAAA6M,EAAAhR,KAAA,SA4B3D,IAFMu7G,EAAmB,GACnBC,EAA4B,GA3ByBz2G,EAAA,SA4BlDpE,GACP,IAAMw1B,EAAY+gB,EAAatjB,OAAQ,SAACuC,EAAUpH,GAChD,IAAM0sF,EAAWj7G,KAAK69C,IAAI39C,SAASquB,EAAYpuB,WAAWD,SAASC,IAKnE,OAJ2B,OAAvBw1B,EAAUslF,UAAqBA,EAAStlF,EAAUslF,YACpDtlF,EAAUslF,SAAWA,EACrBtlF,EAAUpH,YAAcA,GAEnBoH,GACP,CACAslF,SAAS,KACT1sF,YAAY,OAGVoH,GAAaA,EAAUpH,cACpBwsF,EAAiBplF,EAAUpH,YAAY7c,eAC1CqpG,EAAiBplF,EAAUpH,YAAY7c,aAAe,IAExDqpG,EAAiBplF,EAAUpH,YAAY7c,aAAa3V,KAAK45B,EAAUpH,YAAYpuB,WAC/E66G,EAA0BrlF,EAAUpH,YAAY7c,aAAezY,EAAK/H,cAAcy9B,8BAA8Br2B,EAAYq9B,EAAUpH,YAAY7c,eAlB7IvR,EAAU06G,EAAgB16G,GAAWyB,EAAczB,GAAWlH,EAAK7K,MAAMkW,iBAAkBC,EAA3FpE,GA5BkD,OAAAqQ,EAAAhR,KAAA,GAkD7B4P,QAAQqD,IAAI3kB,OAAO2R,OAAOu7G,IAlDG,QAAAxqG,EAAAjO,KAoD3CnQ,QAAS,SAAC2R,EAAe7P,GACvC,IAAMwd,EAAc5jB,OAAOoE,KAAK8oH,GAA2B9mH,GAC3D6mH,EAAiBrpG,GAAatf,QAAS,SAAA+N,GACrC,IAAM6D,EAAa/K,EAAK/H,cAAc8P,YAAsB,IAAVb,GAAgBiE,OAAO,cACzE02G,EAA0B92G,GAAcD,MAxDe,QAgExDjC,EAAWlC,KACdkC,EAAWlC,GAAS,IAGlB+6G,GACFA,EAAevoH,QAAS,SAACm8B,EAAYr6B,GACnC,IAAMgnH,EAAc,CAClB1uF,QAAQ,KACRrsB,UAAUouB,EAAYpuB,UACtB4sB,aAAa9zB,EAAK/H,cAAc2O,MAAM0uB,EAAYiuC,eAE9Cx4D,EAAa/K,EAAK/H,cAAc8P,YAAkC,IAAtButB,EAAYpuB,WAAgBiE,OAAO,cACjFT,GAAuBm3G,EAA0B92G,KACnDk3G,EAAYv3G,GAAuBm3G,EAA0B92G,IAE/DlC,EAAWlC,GAAO7D,KAAKm/G,KAIvBN,GACFA,EAAexoH,QAAS,SAACm8B,EAAYr6B,GACnC,IAAMinH,EAAc,CAClB3uF,QAAQ,KACRrsB,UAAUouB,EAAYpuB,UACtB4sB,aAAa9zB,EAAK/H,cAAc2O,MAAM0uB,EAAYiuC,eAE9Cx4D,EAAa/K,EAAK/H,cAAc8P,YAAkC,IAAtButB,EAAYpuB,WAAgBiE,OAAO,cACjFT,GAAuBm3G,EAA0B92G,KACnDm3G,EAAYx3G,GAAuBm3G,EAA0B92G,IAE/DlC,EAAWlC,GAAO7D,KAAKo/G,KA9FkC,yBAAA3qG,EAAA7P,SAAA2P,EAAAniB,SAA3D,gBAAAuzB,GAAA,OAAArS,EAAAxO,MAAA1S,KAAA2S,YAAA,YA0GN,IAFM8qB,EAAWz9B,KAAK+C,cAAc0S,gBAAgB,CAAC,2BAInD,IAAMlB,EAAgB,GAChBC,EAAiB,GAGnBxC,EAAYyB,IACdzB,EAAYyB,GAEdzB,EAAYD,SAASjH,EAAK/H,cAAc8P,YAAY/H,EAAK/H,cAAc8P,YAAsB,IAAVb,GAAgBiE,OAAO,cAAc,YAAY,uBAAuBmlC,GAAG1nC,UAAU,KAGxKJ,EAAoBxI,EAAK/H,cAAc2O,MAAM,GAI7C/R,OAAOoE,KAAKyM,GAAevM,QAAS,SAAAwN,GAE7ByB,EAAazB,KAChByB,EAAazB,GAAS,IAEnB8C,EAAc9C,KACjB8C,EAAc9C,GAAS,IAEpB+C,EAAe/C,KAClB+C,EAAe/C,GAAS3G,EAAK/H,cAAc2O,MAAM,IAE9C8sB,EAAoB/sB,KACvB+sB,EAAoB/sB,GAAS,IAG/B9R,OAAOoE,KAAK05B,GAAUx5B,QAAS,SAAAo6B,GAG7B,IAAM4uF,EAA0Bz8G,EAAciB,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAG6sB,UAAUA,IAChF,GAAK4uF,GAA4BA,EAAwBjpH,OAAzD,CAIA,IAAIyQ,EAAgB,KACdC,EAA0Bf,EAAWlC,GAAS9R,OAAO2R,OAAOqC,EAAWlC,GAAOF,OAAQ,SAAAC,GAAE,OAAIA,EAAG6sB,UAAUA,KAAW1pB,MAAQ,KAC9HC,EAAoBjB,EAAWlC,GAASkC,EAAWlC,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAG6sB,UAAUA,GAAW7sB,EAAGQ,WAAWmB,GAAiB3B,EAAGQ,WAAWA,IAAc,KAC3J4C,GAAqBA,EAAkB5Q,OACzCyQ,EAAgBG,EAAkBD,OAElCF,EAAgBC,IACKD,EAAczC,UAAUA,IAC3CyC,EAAgB,MAIf+pB,EAAoB/sB,GAAO4sB,KAC9BG,EAAoB/sB,GAAO4sB,GAAWvzB,EAAK/H,cAAc2O,MAAM,IAG5DwB,EAAazB,GAAO4sB,KACvBnrB,EAAazB,GAAO4sB,GAAW,MAG5B9pB,EAAc9C,GAAO4sB,KACxB9pB,EAAc9C,GAAO4sB,GAAW,MAGlC,IAAMvpB,EAAgBhK,EAAK/H,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,aAC3FX,EAAmBvE,EAAciB,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAG6sB,UAAUA,GAAW7sB,EAAGQ,WAAWA,KAAemB,GAAiB3B,EAAGQ,UAAUmB,KAE7I,GAAK4B,EAAiB/Q,OAkCpB+Q,EAAiB9Q,QAAQ,SAAAuN,GACvB,OAAQA,EAAGG,QACT,IAAK,UACH6sB,EAAoB/sB,GAAO4sB,GAAWG,EAAoB/sB,GAAO4sB,GAASnsB,KAAKV,EAAGu8B,eACpF,MACA,QACEvP,EAAoB/sB,GAAO4sB,GAAWG,EAAoB/sB,GAAO4sB,GAASlsB,MAAMX,EAAGu8B,eAC/EvP,EAAoB/sB,GAAO4sB,GAASjsB,GAAG,KACzCosB,EAAoB/sB,GAAO4sB,GAAWvzB,EAAK/H,cAAc2O,MAAM,YAzCvE,GAAIwB,GAAgBA,EAAazB,IAAUyB,EAAazB,GAAO4sB,GAAS,CACtEtpB,EAAmB7B,EAAazB,GAAO4sB,GACvC,IAAMrpB,EAAiBrV,OAAO2R,OAAOyD,GAAkBJ,MAIvD,GAHuBlH,WAAWuH,EAAe3C,SAG9B,GACjB,GAAIL,EAAUvB,GAAoBgE,EAAc,CAC9C,IAAMs5B,EAAgBvP,EAAoB/sB,GAAO4sB,GAC3CO,EAAe9zB,EAAK/H,cAAcmS,iBAAiBT,EAAcmqB,aAAa9pB,GAChFK,EAAa44B,EAAcrgC,MAAMkxB,GAGrC5pB,EAAe3C,QAAU8C,EACzBH,EAAe4pB,aAAeA,EAC9B7pB,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClB1C,QAAQvH,EAAK/H,cAAc2O,MAAM,GACjCktB,aAAa9zB,EAAK/H,cAAc2O,MAAM,UAI1CqD,EAAmB,CAAC,CAClB1C,QAAQvH,EAAK/H,cAAc2O,MAAM,GACjCktB,aAAa9zB,EAAK/H,cAAc2O,MAAM,KAsB5C,IAAM0D,EAASzV,OAAO2R,OAAOyD,GAAkBJ,MAC3CU,EAAgBmpB,EAAoB/sB,GAAO4sB,GAAS3wB,MAAM0H,EAAOwpB,cACrE,GAAIvpB,EAAcC,GAAG,GAAG,CAEtB,IAAME,EAAsB1K,EAAK/H,cAAckvG,4BAA4BxgG,GAC3E,GAAkC+D,EAAoB,CACpD,IAAMD,EAAyBd,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KAChPD,GAA0BzK,EAAK/H,cAAc2O,MAAM6D,GAAwBD,GAAG,KAChFD,EAAgBA,EAAc3H,MAAM6H,IAIxCjC,EAAoBA,EAAkBpB,KAAKmD,GAC3Cb,EAAe/C,GAAS+C,EAAe/C,GAAOS,KAAKmD,GAOrDd,EAAc9C,GAAO4sB,GAAWtpB,OApGiC/C,EAAAk7G,MAwGrE,IAAIr3G,EAAa/K,EAAK/H,cAAc8P,YAAsB,IAAVb,GAEhD,GAAkB,OAAdzC,GAAuBsG,EAAWC,cAAcvG,IAAcsG,EAAWE,eAAe,IAAIjD,KAAO,OAAQ,CAO7G,IAAMkD,EAAgBH,EAAWI,OAAO,oBAGxChD,EAAK4C,EAAWI,OAAO,eAAiB,EAExC3C,EAAoB7F,WAAWA,WAAW6F,EAAkB3F,QAAQ,KAEpE6F,EAAsBwC,GAAiBxB,EACvCjB,EAAuByC,GAAiB1C,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBzB,KAAKC,IAAIsB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBzB,KAAKqE,IAAI7C,EAAcC,GAGtFH,EAAgBnB,EAChBkB,EAAeqB,OArKRvC,EAAUvB,EAAiBuB,GAAWyB,EAAczB,GAAWhS,KAAKC,MAAMkW,iBAAkBg3G,EAA5Fn7G,GAiOT,IAzDMqE,EAAqB1W,OAAOoE,KAAKwP,GAAwBzN,IAAI,SAAAwQ,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAEjD,EAAuB+C,GACzBG,SAASjD,EAAsB8C,MAG7BI,EAAY,EAChBL,EAAmBpS,QAAS,SAAC0S,EAAK5Q,GAChC,IAAM6Q,EAAU/E,KAAKgF,MAAMH,EAAUL,EAAmBrS,OAAO,KAC/DqS,EAAmBtQ,GAAO6Q,QAAUA,EACpCF,MAwBIf,EAAa3V,KAAKC,MAAM0V,WAAa3V,KAAKC,MAAM0V,WAAWD,cAAgB,MAGjF/L,EAAUiE,KAAK,CACbxI,GAAGuQ,EACHrT,MAAO,OAAQtC,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,SAASE,EAAWD,cAAc,QAAQ,QAAQ1H,KAAK,KAAK,IACvHnD,KAAKwL,IAKHS,EAAkB,EAClBzD,EAAcD,EAAc,IAC9B0D,EAAkB,GAGhBzD,IAAkBD,IACpBA,EAAgBvB,KAAKqE,IAAI,EAAE7C,EAAc,IAGtB,EACf0D,GAAa1D,EAAcD,GADZ,EAEf4D,EAAc,GACX7J,EAAE,EAAEA,GAHQ,EAGQA,IACrB8J,EAAaxJ,WAAWA,WAAW2F,EAAejG,EAAE4J,GAAYpJ,QAAQ,IAC9EqJ,EAAYpJ,KAAKqJ,GAGS,GACtBE,EAAYxX,OAAO2R,OAAO2B,GAAMjP,OAChCoT,EAAgBvF,KAAKqE,IAAI,EAAErE,KAAKwF,KAAKF,EAFf,KAItBvN,EAAa,CACjB0N,OAAO,CACL/T,KAAM,OACN0S,OAAQ,kBAEVsB,OAAO,CACLhU,KAAM,SACNiU,SAAS,EACT1F,IAAKsB,EACL8C,IAAK7C,GAEPoE,QAAQ,gBACRC,QAAQ,SAAAvM,GAAK,OAAIL,EAAK/H,cAAcS,YAAY2H,EAAM2L,IACtDa,WAAY3X,KAAKC,MAAM+B,SAAW,KAAO,CACvC4V,OAAQ,GACRC,SAAS,EACT5B,OAAQ,QACR6B,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdE,eAAgB,SAChBD,WAAW,SAASb,EAAc,SAEpCJ,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAUrY,KAAKC,MAAM+B,SAAW,KAAO,CACrC4V,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfC,WAAWjB,EACXkB,eAAgB,SAChBjC,OAAQ,SAAAhL,GAAC,OAAIH,EAAK/H,cAAcW,iBAAiBuH,EAAE,KAErDZ,SAAQ,EACRkO,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjBnX,OAAO,SAAAiJ,GAAC,OAAIA,EAAErI,OACdwW,mBAAmB,GACnBC,kBAAkB3F,EAClB4F,WAAW,CAAEtM,KAAM,QAASE,UAAW,IACvCqM,YAAqC,UAAzBjZ,KAAKC,MAAMkQ,UAAwB,GAAM,GACrD1O,MAAM,CACJyX,KAAM,CACJC,MAAO,CACLvW,KAAM,CACJF,SAAS,GACTD,WAAW,IACX2W,KAAKpZ,KAAKC,MAAMwB,MAAMC,OAAOkW,OAC7BjM,WAAW3L,KAAKC,MAAMwB,MAAMmK,MAAMC,aAIxCwN,KAAM,CACJC,KAAM,CACJC,OAAQvZ,KAAKC,MAAMwB,MAAMC,OAAO8X,gBAAiBC,gBAAiB,SAaxE5Y,OAAQb,KAAKC,MAAM+B,SAAW,CAAE6K,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrH0M,aAAa,SAACC,GAAc,IAEpBC,EADYD,EAAVE,MACYC,OAAO,GAC3B,OACEnR,EAAAxI,EAAAC,cAACgtH,EAAA,EAAD,CACExzG,MAAOA,GAEPjR,EAAAxI,EAAAC,cAACitH,EAAA,EAAD,CACE/qH,MAAOsX,EAAMtX,MACb2L,MAAO2L,EAAMK,QACb9O,MAAK,KAAAxE,OAAOiT,EAAM/O,KAAKqP,cAGO,kBAAxBN,EAAM/O,KAAK4L,UAAyB9W,OAAOoE,KAAK6V,EAAM/O,KAAK4L,UAAUzS,OAAO,GAClFrE,OAAOoE,KAAK6V,EAAM/O,KAAK4L,UAAU3Q,IAAI,SAAA2L,GACnC,GAAIA,IAAUmI,EAAMK,QAClB,OAAO,KAET,IAAM3X,EAAQwI,EAAK/H,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,QAAQ,QACzFrD,EAAUuH,EAAM/O,KAAK4L,SAAShF,GAChC0I,EAAmBrP,EAAK/H,cAAcS,YAAY6O,EAAQ,GAC9D,OAAI5E,WAAW4E,IAAU,IAErB1J,EAAAxI,EAAAC,cAACitH,EAAA,EAAD,CACEp/G,MAAOwD,EACPnP,MAAOA,EACPuE,IAAG,OAAAF,OAAS8K,GACZtG,MAAK,KAAAxE,OAAOwT,KAIX,UAQnBna,KAAKgI,SAAS,CACZ2B,YACAC,mJAKF,OACEjB,EAAAxI,EAAAC,cAACytB,EAAA,EAADluB,OAAAC,OAAA,CACE2D,KAAM8W,IACN1L,YAAY,GACR3O,KAAKwH,MAAMoC,WAHjB,CAIEiB,KAAM7K,KAAKwH,MAAMmC,UACjB2Q,SAAUta,KAAKC,MAAMqa,SACrBvY,OAAQ/B,KAAKC,MAAMwP,YACnB8K,eAAgBva,KAAKC,MAAMsa,yBAloBG1X,aCyjBvByqH,8MAvjBb9lH,MAAQ,CAEN+lH,iBAAiB,GACjBC,kBAAkB,KAClBC,qBAAqB,KACrBpqB,sBAAsB,KACtBqqB,sBAAsB,KACtBC,yBAAyB,KACzBC,0BAA0B,KAC1BC,6BAA6B,KAC7BC,6BAA6B,QAI/B/qH,cAAgB,OAChB6yB,aAAe,gFAGT51B,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,OAG9CD,KAAK41B,aAAe51B,KAAK+C,cAAcw0E,uKAIvCv3E,KAAKkD,gbA+IkByE,EAAUC,mEACjC5H,KAAKkD,kJAIL,IAAM66B,EAAiB/9B,KAAKC,MAAMkK,aAAenK,KAAKC,MAAM4oD,YAAc7oD,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAM4oD,aAAajpB,WAAW7B,eAAiB,GAC/I+vC,EAAwB/vC,EAAe/5B,OAAS+5B,EAAexsB,OAAQ,SAAAioB,GAAC,OAAIA,EAAEnH,UAAY,KAC1F07C,EAAiBD,GAAyBA,EAAsB9pE,OAAO,EACvE+pH,EAAWhgD,EAAiB,EAAE,EAAI,GAExC,OACEplE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAGbhB,KAAKwH,MAAM+lH,iBAAiBvpH,OAAO,GACjC2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPlF,GAAI,CAAC,EAAE,GACPtI,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdjB,KAAKwH,MAAM+lH,iBAAiBznH,IAAI,SAACmF,EAAEkC,GAAH,OAC9BxE,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,GACMqL,EAAEnH,UADR,CAEE9C,cAAe,SACf6F,IAAG,mBAAAF,OAAqBwG,KAExBxE,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACN0O,GAAG,CAAC,EAAE,KAGR5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdgK,EAAEhL,MAAMwJ,SAAWwB,EAAEhL,MAAMwJ,SACzBd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE8uG,WAAY,EACZj1G,WAAY,CAAC,EAAE,GACfH,MAAO,YACPqJ,WAAY,UACZjJ,SAAU,CAAC,EAAE,SACb6G,wBAAyB,CAAEC,OAAQyB,EAAEhL,MAAMkL,SAKjDxC,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAEN2I,EAAEhL,MAAM+mB,OAGT/b,EAAEhL,MAAMw+G,MACN91G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0mB,UAAW,SACXC,QAAStkB,EAAEhL,MAAMw+G,MAEjB91G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,sBAYjCqG,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTK,GAAG,EACHF,GAAG,IAIHG,KAAKC,MAAMksH,kBAAoBnsH,KAAKC,MAAMksH,iBAAiBnoH,OAAO,GAChE2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACP4F,GAAI,CAAC,EAAE,GACPN,GAAI,kBAEJuD,EAAAxI,EAAAC,cAAC4tH,GAADruH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwP,YAAa,IACb6K,SAAU,iBACV3E,WAAY3V,KAAKC,MAAMgK,cACvB8F,cAAe,CAAC/P,KAAKC,MAAMgK,eAC3BkM,iBAAkBnW,KAAK+C,cAAc0wD,oBAAoB,MAAM,OAKvE9qD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,EAAEiuH,GACVhtH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbylH,UAAW+F,IAAQC,IAHrB,aAOAxlH,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0tE,cAAc,EACdhuD,UAAW,CACTxd,KAAK,mBACLlC,MAAM,CACJ0D,SAAS,EACTlB,WAAW,IACXmB,aAAa,EACblB,SAAS,CAAC,QAAQ,SAClBJ,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOylB,QAC9BrjB,UAAU,CACR7C,eAAe,gBAOvB8sE,GACEplE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,EAAEiuH,GACVhtH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbylH,UAAW+F,IAAQC,IAHrB,iBAOAxlH,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0tE,cAAc,EACdhuD,UAAW,CACTxd,KAAK,gBACLlC,MAAM,CACJ0D,SAAS,EACTlB,WAAW,IACXmB,aAAa,EACblB,SAAS,CAAC,QAAQ,SAClBJ,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOylB,QAC9BrjB,UAAU,CACR7C,eAAe,gBAQ7B0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,EAAEiuH,GACVhtH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbylH,UAAW+F,IAAQC,IAHrB,cAOAxlH,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0tE,cAAc,EACdhuD,UAAW,CACTxd,KAAK,8BACLlC,MAAM,CACJ0D,SAAS,EACTC,aAAa,EACbyC,MAAM,CACJ5D,WAAW,IACXH,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOylB,QAC9BzkB,SAAU1C,KAAKC,MAAM+B,SAAW,QAAU,SAE5C8B,UAAU,CACR7C,eAAe,eAKvB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuJ,GAAI,OACJpI,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0tE,cAAc,EACdhuD,UAAW,CACTxd,KAAK,eACLlC,MAAM,CACJyC,SAAS,EACTD,WAAW,EACXH,MAAM,WACNwB,UAAU,CACR7C,eAAe,iBAO3B0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,EAAEiuH,GACVhtH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbylH,UAAW+F,IAAQC,IAHrB,YAOAxlH,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0tE,cAAc,EACdhuD,UAAW,CACTxd,KAAK,kBACLlC,MAAM,CACJ0D,SAAS,EACTC,aAAa,EACbyC,MAAM,CACJ5D,WAAW,IACXC,SAAS1C,KAAKC,MAAM+B,SAAW,QAAU,QACzCM,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOylB,SAEhCrjB,UAAU,CACR7C,eAAe,eAMrBjB,KAAKwH,MAAMsmH,8BAAgC9tH,KAAKwH,MAAMsmH,6BAA6B9pH,OAAO,GACxF2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMsmH,6BAA6BhoH,IAAI,SAACu/F,EAAgB0B,GAAjB,OAC1Cp+F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVg1G,WAAY,EACZj1G,WAAY,EACZH,MAAO,WACPgH,UAAW,SACXD,GAAI09F,EAAgB,EAAI,EACxBlgG,IAAG,YAAAF,OAAcogG,IAEhB1B,OAQf18F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,EAAEiuH,GACVhtH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbylH,UAAW+F,IAAQC,IAHrB,QAOAxlH,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0tE,cAAc,EACdhuD,UAAW,CACTxd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTC,aAAa,EACbyC,MAAM,CACJ5D,WAAW,IACXC,SAAS1C,KAAKC,MAAM+B,SAAW,QAAU,QACzCM,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOylB,SAEhCrjB,UAAU,CACR7C,eAAe,gBAMzB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,EAAEiuH,GACVhtH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbylH,UAAW+F,IAAQC,IAHrB,gBAOAxlH,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0tE,cAAc,EACdhuD,UAAW,CACTxd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTlB,WAAW,IACXC,SAAS,CAAC,QAAQ,SAClBJ,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOylB,QAC9BrjB,UAAU,CACR7C,eAAe,eAMrBjB,KAAKwH,MAAMomH,2BACTjlH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVg1G,WAAY,EACZj1G,WAAY,EACZH,MAAO,WACPgH,UAAW,UAEVtJ,KAAKwH,MAAMomH,0BAA0BjgH,QAAQ,GARhD,IAQqD3N,KAAK41B,aAAa/E,UARvE,IAQmF7wB,KAAK41B,aAAazrB,YAAY0qB,mCA5iBlGhyB,uBCkOpBurH,8MAjOb5mH,MAAQ,CACNu2B,eAAe,KACfswF,mBAAmB,QAIrBtrH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAKsuH,uMAGkB3mH,EAAUC,+EACjC5H,KAAKkD,YAEC0sB,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClDi+G,EAAmB1+G,KAAKC,UAAUnI,EAAU61B,aAAe3tB,KAAKC,UAAU9P,KAAKC,MAAMu9B,WACrFgxF,EAAuB3+G,KAAKC,UAAUnI,EAAU22B,iBAAmBzuB,KAAKC,UAAU9P,KAAKC,MAAMq+B,eAC7FmwF,EAAsB9mH,EAAUhG,cAAgB3B,KAAKC,MAAM0B,cAAgBhC,OAAO2R,OAAO3J,EAAUhG,cAAc4P,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqB5N,SAAWrE,OAAO2R,OAAOtR,KAAKC,MAAM0B,cAAc4P,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqB5N,QAEjP4rB,GAAkB4+F,GAAwBD,GAAoBE,IAChEzuH,KAAKsuH,uSAKFtuH,KAAKC,MAAMqQ,SAAYtQ,KAAKC,MAAMq+B,eAAkBt+B,KAAKC,MAAMu9B,oDAC3D,0BAQCvc,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAckuB,gBAAgBjxB,KAAKC,MAAMq+B,cAAcn8B,KAAKnC,KAAKC,MAAMqQ,SAAQ,GACpFtQ,KAAK+C,cAAc2mC,2BAA2B1pC,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAMq+B,eAChFt+B,KAAK+C,cAAcy8B,yBAAyBx/B,KAAKC,MAAMqQ,QAAQtQ,KAAKC,MAAMq+B,cAAct+B,KAAKC,MAAMq+B,cAAcmB,UAAUC,SAC3H1/B,KAAK+C,cAAc48B,wBAAwB3/B,KAAKC,MAAMq+B,cAAcsB,WAAWz9B,KAAKnC,KAAKC,MAAMqQ,QAAQtQ,KAAKC,MAAMq+B,cAAcsB,WAAWj8B,SAAS3D,KAAKC,MAAMq+B,cAAcmB,UAAUI,2DARvL4pF,OACAiF,OACA3wF,OACA4wF,OAQIC,EAAqB5uH,KAAKC,MAAMu9B,UAAUQ,gBAAgBve,KAAM,SAAAle,GAAC,OAAIA,EAAEkQ,QAAUtO,EAAKlD,MAAMwR,OAASlQ,EAAE08B,WAAa96B,EAAKlD,MAAMg+B,UAAY18B,EAAE88B,UAAYl7B,EAAKlD,MAAMo+B,UAEpKgwF,EAAqB,aACrBruH,KAAK+C,cAAc2N,aAAa/Q,OAAOoE,KAAKg6B,GAA5C,eAAA7c,EAAAvhB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA6D,SAAAC,EAAOgvB,GAAP,IAAA51B,EAAAu/D,EAAA5qC,EAAA7sB,EAAA24B,EAAA,OAAA5Z,EAAA7wB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3DlH,EAAchH,EAAKJ,cAAc0S,gBAAgB,CAAC,QAAQ,SAASsqB,EAAYrqB,gBAC/Eg0D,EAAkBglD,EAAiB3uF,GAFwB5uB,EAAAE,KAAA,EAGtClO,EAAKJ,cAAckuB,gBAAgB8O,EAAY58B,EAAKlD,MAAMqQ,SAHpB,OAG3DwuB,EAH2D3tB,EAAAiD,KAI3DnC,EAAe9O,EAAKJ,cAAc2O,MAAMqsB,EAAegC,IAAcz8B,QAAkEH,EAAKJ,cAAc2O,MAAM,GAAjFvO,EAAKJ,cAAc2O,MAAMqsB,EAAegC,IAEzH6K,EAAoB8+B,EAAkBA,EAAgB9+B,kBAAoB,KAC1EgkF,GAAsBhkF,IACxBA,EAAoBA,EAAkBl9B,MAAMkhH,EAAmBzvF,YAEjEkvF,EAAmBzgH,KAAK,CACtB6D,MAAMsuB,EACN8uF,OAAOF,EACPt8G,QAAQysB,EAAanxB,QAAQ,GAC7BmhH,WAAW78G,EAAYtE,QAAQ,GAC/B87G,eAAetmH,EAAKJ,cAAcqxD,aAAaq1D,GAC/CsF,UAAU5kH,EAAY/H,MAAZ,iBAAAuE,OAAqCo5B,EAArC,QACV6K,kBAAkBA,EAAoBA,EAAkBj9B,QAAQ,GAAG+7D,EAAgBl/B,sBAAwBrnC,EAAKJ,cAAc2O,MAAM,GAAG/D,QAAQ,KAjBhF,wBAAAwD,EAAAqB,SAAAzB,EAAA/Q,SAA7D,gBAAAyS,GAAA,OAAAyO,EAAAxO,MAAA1S,KAAA2S,YAAA,YAqBN3S,KAAKgI,SAAS,CACZqmH,gKAIU78G,GACZxR,KAAKsuH,wDAGO98G,GACZxR,KAAKsuH,mDAGE,IAAAxjH,EAAA9K,KACP,OACEA,KAAKwH,MAAM6mH,mBACT1lH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,EACPkB,cAAe,SACfoE,GAAI,4BAEJuD,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CAAOntH,GAAI,CAAC,EAAE,IAAd,mBACA6H,EAAAxI,EAAAC,cAAC4uH,GAAA,EAADrvH,OAAAC,OAAA,CACEigG,KAAM7/F,KAAKwH,MAAM6mH,mBACjB9V,KAAM,CACJ,CACEvxF,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACEvjD,KAAK,QACLtD,MAAM,CACJoB,GAAG,EACHgB,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,SAEvC6D,KAAK,CAAC,cAER,CACEtC,KAAK,OACLsC,KAAK,CAAC,YAIZ,CACElB,QAAO,EACPqiB,MAAM,UACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACEvjD,KAAK,OACLsC,KAAK,CAAC,WACN5F,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEglB,MAAM,aACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,8BACpDxV,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACEvjD,KAAK,OACLsC,KAAK,CAAC,cACN5F,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEglB,MAAM,eACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,0BACpDxV,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACEvjD,KAAK,OACLsC,KAAK,CAAC,qBACN5F,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEglB,MAAM,GACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEd8e,YAAY,CACV9e,MAAM,GAERgnD,OAAO,CACL,CACE+xD,UAAU,CACRv5F,eAAe,CACbpY,SAAS,SAACjH,GAAD,QAAY6K,EAAK/H,cAAc2O,MAAMzR,EAAMwgG,IAAIquB,YAAYn8F,IAAI,MAQ5EulF,eAAe96F,IACfnd,MAAM,CACJme,OAAO,GACPQ,YAAY,CACV9e,MAAM,GAER+C,UAAU2kH,IACVloG,eAAe,CACbjZ,MAAM,CACJvG,MAAM,QAERqL,MAAM,QACN3J,aAAa,EACbyF,UAAU,SACV5E,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,UAEvCmJ,MAAM,QACNwG,OAAO,QACP5J,SAAS/H,KAAKivH,cAAc/vG,KAAKlf,MACjC6d,WAAW7d,KAAKC,MAAMq+B,cAAcmB,UAAU4gD,MAC9CtiE,aAAa/d,KAAKC,MAAMq+B,cAAcsB,WAAWz9B,WAMvDnC,KAAKC,SAGbD,KAAKC,MAAMwJ,UAAY,YA9NK5G,aC+ZrBqsH,8MAtZb1nH,MAAQ,CACN7F,aAAa,GACbwtH,cAAa,EACbphD,gBAAe,EACfqhD,iBAAgB,KAIlBrsH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,+aAMkBC,EAAUC,2EACjC5H,KAAKkD,YAECo/G,EAAqBzyG,KAAKC,UAAUnI,EAAUwC,eAAiB0F,KAAKC,UAAU9P,KAAKC,MAAMkK,aACzFklH,EAAqB1nH,EAAUkhD,cAAgB7oD,KAAKC,MAAM4oD,aACtC7oD,KAAKC,MAAMu9B,YAAc71B,EAAU61B,WAAc3tB,KAAKC,UAAU9P,KAAKC,MAAMu9B,aAAe3tB,KAAKC,UAAUnI,EAAU61B,YACrH8kF,GAAsB+M,IAC5CrvH,KAAK0H,mJAIC,IAAAvE,EAAAnD,KAEF2B,EAAe3B,KAAKC,MAAMu9B,UAAYx9B,KAAKC,MAAMu9B,UAAU77B,aAAa4P,OAAQ,SAAAioB,GAAC,OAAIA,EAAEyE,SAAS1wB,gBAAkBpK,EAAKlD,MAAM2pH,iBAAiBr8G,eAAiBisB,EAAE/nB,MAAMlE,gBAAkBpK,EAAKlD,MAAMgK,cAAcsD,iBAAmBpK,EAAKlD,MAAM4oD,aAAervB,EAAE6E,UAAYl7B,EAAKlD,MAAM4oD,eAAiB,GACzSsmE,KAAenvH,KAAKC,MAAMu9B,YAAax9B,KAAKC,MAAMu9B,UAAUQ,gBAAgBve,KAAM,SAAA6vG,GAAW,OAAIA,EAAYrxF,SAAS1wB,gBAAkBpK,EAAKlD,MAAM2pH,iBAAiBr8G,eAAiB+hH,EAAY79G,MAAMlE,gBAAkBpK,EAAKlD,MAAMgK,cAAcsD,iBAAmBpK,EAAKlD,MAAM4oD,aAAeymE,EAAYjxF,QAAQ9wB,gBAAkBpK,EAAKlD,MAAM4oD,YAAYt7C,kBAE5VwwB,EAAiB/9B,KAAKC,MAAMkK,aAAenK,KAAKC,MAAM4oD,YAAc7oD,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAM4oD,aAAajpB,WAAW7B,eAAiB,GAC/I+vC,EAAwB/vC,EAAe/5B,OAAS+5B,EAAexsB,OAAQ,SAAAioB,GAAC,OAAIA,EAAEnH,UAAY,KAC1F07C,EAAiBD,GAAyBA,EAAsB9pE,OAAO,EAI7EhE,KAAKgI,SAAS,CACZrG,eACAwtH,eACAphD,iBACAqhD,iBAdsB,qCAkBjB,IAAAtkH,EAAA9K,KACDuvH,EAAkBvvH,KAAK+C,cAAc0S,gBAAgB,CAAC,aACtD+5G,EAAwB7vH,OAAOoE,KAAKwrH,GAAiBh+G,OAAQ,SAAAs3C,GAAW,OAAK/9C,EAAK7K,MAAM4oD,aAAe/9C,EAAK7K,MAAM4oD,cAAgBA,IACxI,OACElgD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,GAEHvO,KAAK+C,cAAcmL,WAAWlO,KAAKC,MAAM2pH,kBAH5C,MAGkE5pH,KAAKC,MAAMgK,cAH7E,MAG+FjK,KAAKC,MAAM8pH,eAAiB/pH,KAAKC,MAAM8pH,eAAe5nH,KAAO,YAuDxJwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPkB,cAAe,CAAC,SAAS,OACzBC,eAAgBjB,KAAKC,MAAM4oD,YAAc,SAAW,iBAGlD2mE,EAAsB1pH,IAAK,SAAA+iD,GAAW,OACpClgD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPxN,WAAY,SACZC,cAAe,SACf6F,IAAG,WAAAF,OAAakiD,GAChB/oD,MAAO,CAAC,EAAG,EAAE0vH,EAAsBxrH,OAAQ,MAGzC8G,EAAK7K,MAAM4oD,YACTlgD,EAAAxI,EAAAC,cAACqvH,EAAD9vH,OAAAC,OAAA,GACMkL,EAAK7K,MADX,CAEE4pH,gBAAiBhhE,EACjBiiB,UAAWhgE,EAAK7K,MAAMkK,YAAY07B,IAClCwkF,kBAAmBv/G,EAAK7K,MAAM4oD,YAC9B4+D,qBAAsB38G,EAAK7K,MAAMyvH,cACjClF,kBAAmB1/G,EAAK7K,MAAMuqH,kBAC9BlsF,cAAexzB,EAAK7K,MAAMkK,YAAY0+C,MAGxClgD,EAAAxI,EAAAC,cAACuvH,EAADhwH,OAAAC,OAAA,GACMkL,EAAK7K,MADX,CAEE4pH,gBAAiBhhE,EACjBiiB,UAAWhgE,EAAK7K,MAAMkK,YAAY07B,IAClCwkF,kBAAmBv/G,EAAK7K,MAAM4oD,YAC9B2hE,kBAAmB1/G,EAAK7K,MAAMuqH,kBAC9BlsF,cAAexzB,EAAK7K,MAAMkK,YAAY0+C,UAatD7oD,KAAKwH,MAAM4nH,iBAAmBpvH,KAAKC,MAAMqQ,SAAWtQ,KAAKwH,MAAM2nH,cAAgBnvH,KAAKC,MAAM4oD,aACxFlgD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPvN,cAAe,SACfoE,GAAI,4BAEJuD,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CAAOntH,GAAI,CAAC,EAAE,IAAd,kBACA6H,EAAAxI,EAAAC,cAACwvH,GAADjwH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwR,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4oD,YACpB1+C,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBuC,iBAAkBnsH,KAAKwH,MAAM7F,aAC7B28B,cAAet+B,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAM4oD,iBAKvD7oD,KAAKwH,MAAM4nH,iBAAmBpvH,KAAKwH,MAAMumE,gBAAkB/tE,KAAKC,MAAMqQ,SAAWtQ,KAAKwH,MAAM2nH,cAAgBnvH,KAAKC,MAAM4oD,aACrHlgD,EAAAxI,EAAAC,cAACyvH,GAADlwH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwR,MAAOzR,KAAKC,MAAMgK,cAClBo0B,QAASr+B,KAAKC,MAAM4oD,YACpB1+C,YAAanK,KAAKC,MAAMkK,YACxB8zB,SAAUj+B,KAAKC,MAAM2pH,iBACrBuC,iBAAkBnsH,KAAKwH,MAAM7F,aAC7B28B,cAAet+B,KAAKC,MAAMkK,YAAYnK,KAAKC,MAAM4oD,gBAkBrD7oD,KAAKC,MAAMqQ,SAAWtQ,KAAKwH,MAAM7F,cAAgB3B,KAAKwH,MAAM7F,aAAaqC,OAAO,GAC9E2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPnJ,GAAI,eACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CAAOntH,GAAI,CAAC,EAAE,IAAd,gBACA6H,EAAAxI,EAAAC,cAAC0vH,EAAA,EAADnwH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8P,cAAe,CAAC/P,KAAKC,MAAMgK,eAC3BkiH,iBAAkBnsH,KAAKwH,MAAM7F,aAC7BouH,iBAAkB/vH,KAAKwH,MAAM7F,aAAasjC,OAAQ,SAAC8qF,EAAiBv2F,GAElE,OADAu2F,EAAiBv2F,EAAE7nB,OAAOpE,eAAiBisB,EAAE7nB,OACtCo+G,GACP,IACFxX,KAAM,CACJ,CACEvxF,MAAOhnB,KAAKC,MAAM+B,SAAW,GAAK,OAClC/B,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEc,KAAK,OACLwC,QAAO,KAIb,CACEqiB,MAAM,SACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAERgnD,OAAO,CACL,CACE3kD,KAAK,YAIX,CACE6kB,MAAM,OACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,UAIX,CACEwC,QAAO,EACPqiB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACE3kD,KAAK,aACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEsD,QAAO,EACPxC,KAAK,YAIX,CACE6kB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,YAIX,CACE6kB,MAAM,WACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACEvjD,KAAK,QACLpB,KAAK,SACL0D,KAAK,CAAC,gBACN5F,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEwB,KAAK,OACLoB,QAAO,EACPxC,KAAK,SACL0D,KAAK,CAAC,eAIZ,CACEmhB,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,GACNU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,oBASnBnC,KAAKC,MAAM4oD,aACTlgD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPsF,GAAI,OACJrE,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACEntH,GAAI,GADN,8BAKA6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,IACViB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC4vH,EAAD,CACEtH,cAAc,EACdF,UAAW,CACTyH,GAAG,CACD,CACErH,EAAG,6BACHzoH,EAAC,oZAEH,CACEyoH,EAAG,6BACHzoH,EAAC,ulBAAAwG,OAAylB3G,KAAKC,MAAMwB,MAAMC,OAAOsE,KAAjnB,0BAEH,CACE4iH,EAAG,gCACHzoH,EAAC,wdAEH,CACEyoH,EAAG,0BACHzoH,EAAC,mLAEH,CACEyoH,EAAG,4BACHzoH,EAAC,yOA1YC0C,mCC+NXqtH,8MAnObntH,cAAgB,OAEhByE,MAAQ,CACNiK,MAAM,KACNwsB,SAAS,KACT9zB,YAAY,iFAIRnK,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAWC,mEAClC5H,KAAKkD,YACwBlD,KAAKC,MAAMkwH,sBAAwBxoH,EAAUwoH,uBAAyBnwH,KAAKC,MAAMkwH,sBAE5GnwH,KAAK0H,gRAKH+J,EAAM,KACNwsB,EAAS,cAEiBj+B,KAAK+C,cAAc4lD,eAAe3oD,KAAKC,MAAM8pH,eAAexmH,KAAK,oBAAzF6sH,WAEJ3+G,EAAQ2+G,EAAgB3+G,MACxBwsB,EAAWmyF,EAAgBnyF,WAErB80C,EAAe/yE,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAa,aACtEhE,EAAQshE,EAAathE,MACrBwsB,EAAW80C,EAAa90C,UAGpB9zB,EAAcnK,KAAKC,MAAMs9B,kBAAkBU,GAAUxsB,qBAEpDzR,KAAKgI,SAAS,CACnByJ,QACAwsB,WACA9zB,oJAIK,IAAAhH,EAAAnD,KACD+pH,EAAiB/pH,KAAKC,MAAM8pH,eAC5B5/G,EAAcnK,KAAKC,MAAMkK,aAAenK,KAAKwH,MAAM2C,YAEzD,OACExB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,CAAC,EAAG,GACRmO,UAAW,EACXzN,aAAc,EACd1B,MAAO,CAAC,EAAG,MAEX6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,EACHX,GAAI,EACJ2E,OAAQ,IACRxD,OAAQ,OACRP,aAAc,EACd+E,SAAU,SACVvF,cAAe,SACfN,gBAAiB,SACjBiM,YAAa,cACb1L,eAAgB,CAAC,SAAiC,OAAxB8oH,EAAexmH,KAAgB,OAAS,UAElEoF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACP8nH,aAAY,aAAAjhH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOgpB,WAEnD/hB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJ39G,GAAI,EACJE,GAAI,EACJE,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMS,GAAI,EAAGtI,WAAY,UACvB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrE,GAAI,EACJgvH,IAAKtG,EAAe5nH,KACpBL,IAAKioH,EAAe5oH,MACpBkB,KAAMrC,KAAKC,MAAM+B,SAAW,MAAQ,UAEtC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMhI,GAAI,GACR+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,CAAC,EAAG,GACRjD,WAAY,EACZC,SAAU,CAAC,EAAG,GACdg1G,WAAY,GAEXqS,EAAe5nH,QAItBwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrE,GAAI,EACJgI,GAAI,EACJtI,WAAY,aACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJL,cAAe,MACfD,WAAY,YAEZ4H,EAAAxI,EAAAC,cAACsqH,EAAA,EAAD/qH,OAAAC,OAAA,CACE+f,UAAW,CACT2wG,aAAa,EACbnuH,KAAI,GAAAwE,OAAKojH,EAAewG,SAApB,OACJtwH,MAAO,CACL0D,SAAU,EACVlB,WAAY,EACZi1G,WAAY,IACZh1G,SAAU,CAAC,EAAG,GACd4G,UAAW,SACXxF,UAAW,CACT0sH,aAAc,YAEhBluH,MAAOtC,KAAKC,MAAM8pH,eAAeznH,MAAMioH,OAGvCvqH,KAAKC,MAhBX,CAiBEwR,MAAOzR,KAAKwH,MAAMiK,MAClBtH,YAAaA,EACbk0B,QAASr+B,KAAKC,MAAMo+B,QACpBJ,SAAUj+B,KAAKwH,MAAMy2B,YAEvBt1B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJ4E,GAAI,CAAC,EAAG,GACRhD,SAAU,EACVg1G,WAAY,IACZpuG,UAAW,OACXhH,MAAO,YANT,mBAQmBtC,KAAKwH,MAAMiK,QAGhC9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ5G,WAAY,EACZC,SAAU,CAAC,EAAG,GACd4G,UAAW,OACXouG,WAAY,MACZp1G,MAAO,aAENynH,EAAenS,YAAY6Y,SAKpC9nH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7G,OAAQ,OACR6sB,GAAI,iBACJ5tB,cAAe,SACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvI,GAAI,EACJsF,GAAI,EACJtG,MAAO,GAENiqH,EAAe2G,SAAS5qH,IAAI,SAAC6qH,EAAS5qH,GAAV,OAC3B4C,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzN,GAAI,EACJf,GAAI,EACJsJ,GAAI,CAAC,EAAG,GACRtI,WAAY,SACZC,cAAe,MACf6F,IAAG,WAAAF,OAAaZ,IAEhB4C,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJqE,GAAI,EACJvD,KAAM,OACNG,MAAO,OACPD,KAAMc,EAAKlD,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,CAAC,EAAG,GAAIhD,SAAU,CAAC,EAAG,GAAID,WAAY,OAC7CkuH,OAKThoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiC,OAAQ,OACRhB,WAAY,WACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACXxE,GAAI,EACJhB,MAAO,IACP4C,SAAU,EACV4nH,cAAe,QACfrjH,UAAW8iH,EAAeznH,MAAMioH,KAElC9pH,YAAa,SAAAqG,GAAC,OACZ3D,EAAKlD,MAAMuqH,kBAAkBT,EAAe7rC,SAG7Cl+E,KAAKC,MAAMkK,YAAX,SAAAxD,OACYojH,EAAe5nH,MAD3B,aAAAwE,OAEgBojH,EAAe5nH,kBA3N7BU,aC8JJ+tH,8MA9Jb7tH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KACD6wH,EAAY7wH,KAAK+C,cAAc0S,gBAAgB,CAAC,gBACtD,OACE9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPc,GAAI,EACJI,cAAe,CAAC,SAAU,OAC1BC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMhI,GAAI,EAAGE,GAAI,CAAC,EAAG,GAAIhB,MAAO,CAAC,EAAG,IAAMkB,cAAe,UACvD2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM3H,eAAgB,OAAQH,GAAI,EAAGhB,MAAO,CAAC,EAAG,KAC9C6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkoH,KAAM,OACNruH,WAAY,EACZi1G,WAAY,EACZp1G,MAAO,QACPI,SAAU,CAAC,EAAG,GACd4G,UAAW,QAEVunH,EAAUE,WAGfpoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPyO,GAAI,CAAC,EAAG,GACRtN,eAAgB,QAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,QACPgH,UAAW,OACX7G,WAAY,EACZC,SAAU,GAETmuH,EAAUpS,OAGf91G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,EACPkB,cAAe,UAGb6vH,EAAUrI,UAAU1iH,IAAK,SAACsJ,EAASrJ,GAAV,OACvB4C,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJ+F,IAAG,YAAAF,OAAcZ,GACjBhF,WAAY,cAEZ4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZslB,QAAS,MACTzlB,MAAO,QACPgH,UAAW,OACX1D,QAAS,SAAAkB,GAAC,OACR3D,EAAKlD,MAAM+wH,iBAAiB5hH,EAASqvG,KAAMrvG,EAAS6hH,OAGtDtoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,MACfD,WAAY,cAEZ4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJS,IAAK+uH,EAAUK,aAEhB9hH,EAASqvG,YAQxB91G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GACPq3G,OAAQn3G,KAAKC,MAAM+B,SAAW,EAAI,EAClCjB,WAAY,cAEZ4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOuuG,OAAQn3G,KAAKC,MAAM+B,SAAW,EAAI,EAAGF,IAAK+uH,EAAUM,UAE7DxoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,EAAG5E,GAAI,CAAC,EAAG,GAAIhB,MAAO,CAAC,EAAG,IAAMkB,cAAe,UACvD2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,CAAC,EAAG,GAAIE,cAAe,MAAOD,WAAY,cAClD4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,CAAC,EAAG,GACRhB,MAAO,CAAC,QAAS,SACjBgC,IAAK9B,KAAK+C,cAAc0S,gBAAgB,CACtC,WACA,KACA,aAGJ9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAG,GACRzI,GAAI,EACJ2N,GAAI,CAAC,EAAG,GACRjM,MAAO,QACPgH,UAAW,OACX7G,WAAY,EACZC,SAAU,EACV6G,wBAAyB,CACvBC,OAAQqnH,EAAUO,eAIxBzoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,CAAC,EAAG,GAAIE,cAAe,MAAOD,WAAY,cAClD4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,CAAC,EAAG,GACR4E,GAAI,CAAC,EAAG,GACR5F,MAAO,CAAC,QAAS,SACjBgC,IAAK9B,KAAK+C,cAAc0S,gBAAgB,CACtC,WACA,KACA,aAGJ9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAG,GACRzI,GAAI,EACJ2N,GAAI,CAAC,EAAG,GACRjM,MAAO,QACPgH,UAAW,OACX7G,WAAY,EACZC,SAAU,EACV6G,wBAAyB,CACvBC,OAAQqnH,EAAUQ,wBApJPxuH,uBCoHZyuH,8MA9GbvuH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KACDuvH,EAAkBvvH,KAAK+C,cAAc0S,gBAAgB,CAAC,aAC5D,OACE9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACmxH,GAAA,EAAD5xH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE6D,UAAW,CACTyK,GAAG,CAAC,EAAE,IAERijH,YAAa,WACbT,SAAU,iCACVU,sBAAuBzxH,KAAK+C,cAAc4pG,6BAE5ChkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPwG,SAAU,EACVvF,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEdjB,KAAKC,MAAMkK,YAmBXxB,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,EACJ9L,WAAY,EACZC,SAAU,CAAC,EAAG,GACdJ,MAAO,YACPgH,UAAW,UALb,iCAlBAX,EAAAxI,EAAAC,cAAAuI,EAAAxI,EAAA02G,SAAA,KACEluG,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACEvrH,SAAU,CAAC,EAAE,IADf,4BAKAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACP9D,OAAQ,EACR/D,aAAc,EACdmL,YAAa,cACbjM,gBAAiB,UACjBmI,UAAW,CAACC,KAAOpE,aAAa1E,KAAKC,MAAM+B,SAAW8G,KAAOnE,OAAS,OAEtEgE,EAAAxI,EAAAC,cAACsxH,GAAiB1xH,KAAKC,SAc7B0I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,EAAGF,GAAI,EAAGK,eAAgB,UAClC0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,CAAC,SAAU,OAC1BC,eAAgB,iBAEftB,OAAOoE,KAAKwrH,GAAiBzpH,IAAI,SAAC+iD,EAAa9iD,GAAd,OAChC4C,EAAAxI,EAAAC,cAACuxH,GAADhyH,OAAAC,OAAA,GACMuD,EAAKlD,MADX,CAEEo+B,QAASwqB,EACThiD,IAAG,WAAAF,OAAaZ,GAChBoE,YAAahH,EAAKlD,MAAMkK,YACxB4/G,eAAgBwF,EAAgB1mE,UAKxClgD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPC,GAAI,CAAC,EAAE,GACPkB,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPgH,UAAW,UAHb,2EAK0EX,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CAASpgH,SAAU,CAAC,EAAE,GAAIyjB,KAAMnmB,KAAK+C,cAAc0S,gBAAgB,CAAC,cAApE,SAL1E,KAK6K9M,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CAASpgH,SAAU,CAAC,EAAE,GAAIyjB,KAAMnmB,KAAK+C,cAAc0S,gBAAgB,CAAC,gBAApE,WAL7K,KAKoR9M,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CAASpgH,SAAU,CAAC,EAAE,GAAIyjB,KAAMnmB,KAAK+C,cAAc0S,gBAAgB,CAAC,iBAApE,YALpR,OAK+X9M,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CAASpgH,SAAU,CAAC,EAAE,GAAIyjB,KAAMnmB,KAAK+C,cAAc0S,gBAAgB,CAAC,gBAApE,WAL/X,IAKqe9M,EAAAxI,EAAAC,cAAA,WALre,gEAlGiByC,iCC2Od+uH,8MA7ObpqH,MAAQ,CACNoC,WAAW,KACXC,cAAc,QAIhB9G,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,6JAILlD,KAAKyH,oBAAqB,sJAI1BzH,KAAK0H,gMAGkBC,EAAUC,8EACjC5H,KAAKkD,YAEiByE,EAAU3F,WAAahC,KAAKC,MAAM+B,UAEtDhC,KAAKqI,aAAa,CAChBuB,WAAW,KACXC,cAAc,MACd,WACA1G,EAAKuE,+LAKQI,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,iQAKD6B,EAAa,CACjBQ,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChBhJ,OAAO,SAAAiJ,GAAC,OAAIA,EAAErI,OACdsI,aAAa,SAACC,EAAM/D,GAClBgE,EAAKzC,aAAa,CAChBwB,cAAcgB,KAGlBE,aAAa,SAACF,EAAM/D,GAClBgE,EAAKzC,aAAa,CAChBwB,cAAc,QAGlBmB,cAAehL,KAAKC,MAAM+K,cAAgBhL,KAAKC,MAAM+K,cAAiB,SAAAC,GAAC,OAAIA,GAC3EC,WAAYlL,KAAKC,MAAMiL,WACvBE,YAAa,SAAAT,GACX,OAAO,MAETlJ,MAAM,CACJ4J,QAAS,CACPC,UAAWtL,KAAKC,MAAMsL,OAAS,CAC7BC,WAAYxL,KAAKC,MAAMwB,MAAMC,OAAO+J,QAClC,CACFhD,QAAS,SAGbiD,OAAO,CACL9I,KAAK,CACHH,WAAW,IACXC,SAAS1C,KAAKC,MAAM+B,SAAW,GAAK,GACpC2J,WAAY3L,KAAKC,MAAMwB,MAAMmK,MAAMC,YAGvCC,QAAQ,CACNlJ,KAAK,CACHF,SAAS,GACTD,WAAW,IACXkJ,WAAY3L,KAAKC,MAAMwB,MAAMmK,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqBxM,KAAKC,MAAMsL,OAChCkB,sBAAsB,CAAEC,KAAM,SAC9B7L,OAAQb,KAAKC,MAAMY,QAAU,CAACgM,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,GAC1DL,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,OAGpD5M,KAAKC,MAAM4xH,aACbjoH,EAAWkC,QAAU,CACnBnM,OAAOC,OAAO,CACZkyH,UAAW,GACXC,WAAY,GACZC,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXC,YAAa,SACbC,WAAYpyH,KAAKC,MAAM+B,SAAW,GAAK,GACvCqwH,cAAeryH,KAAKC,MAAMwB,MAAMC,OAAOkW,OACvC06G,QAAS,CACP,CACE94D,GAAI,QACJnzD,MAAO,CACLgsH,cAAe,WAIrBryH,KAAKC,MAAMsyH,eAIjBvyH,KAAKqI,aAAa,CAChBuB,kJAMF,OACEjB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuO,SAAU,WACVtN,WAAY,SACZE,eAAgB,UAGdjB,KAAKwH,MAAMoC,aAAe5J,KAAKC,MAAMsL,QACnC5C,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0F,OAAQ,EACRzB,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACb1D,UAAW,SACXvI,WAAY,SACZsN,SAAU,WACVvO,MAAO,CAAC,MAAM,OACdiC,OAAQ,CAAC,MAAM,OACff,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMqC,cACTlB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,QAAQ,OAChBiC,OAAQ,CAAC,QAAQ,OACjBD,IAAK9B,KAAKwH,MAAMqC,cAAc1I,QAEhCwH,EAAAxI,EAAAC,cAAC0C,GAAA,EAADnD,OAAAC,OAAA,CACE+D,SAAU,EACVlB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbkB,aAAc,EACdP,OAAQrD,KAAKwH,MAAMqC,cAAc2oH,YAAcxyH,KAAKwH,MAAMqC,cAAcsB,OACpEnL,KAAKwH,MAAMqC,cAAc4oH,kBAE/B9pH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,CAAC,EAAE,GACbD,WAAY,EACZH,MAAO,aAENtC,KAAKwH,MAAMqC,cAAcoE,QAI9BtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJxM,OAAQ,QACRD,IAAK9B,KAAKC,MAAMyyH,eAElB/pH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAEdzC,KAAKC,MAAM6a,cAEdnS,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAENtC,KAAKC,MAAM0yH,gBAO1BhqH,EAAAxI,EAAAC,cAACytB,EAAA,EAADluB,OAAAC,OAAA,CACE2D,KAAMmL,KACNC,YAAY,GACR3O,KAAKC,MACLD,KAAKwH,MAAMoC,WAJjB,CAKEiB,KAAM7K,KAAKC,MAAM0J,qBAvOG9G,kCC8Gf+vH,8MA9GbprH,MAAQ,CACNqrH,WAAW,KACXC,aAAa,QAIf/vH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK+yH,yMAGkBprH,EAAUC,sFACjC5H,KAAKkD,YACCitH,EAAuBxoH,EAAUwoH,uBAAyBnwH,KAAKC,MAAMkwH,uBACvCxoH,EAAUosB,qBAAuBlkB,KAAKC,UAAUnI,EAAUosB,uBAAyBlkB,KAAKC,UAAU9P,KAAKC,MAAM8zB,sBAC/Go8F,IAChCnwH,KAAK+yH,oBAGD9iH,EAAgBtI,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDkO,EAAmBvI,EAAUwI,YAAcnQ,KAAKC,MAAMkQ,WACvCN,KAAKC,UAAUnI,EAAUqrH,gBAAkBnjH,KAAKC,UAAU9P,KAAKC,MAAM+yH,eACtE9iH,GAAoBD,KAChCgjH,EAAWtzH,OAAOC,OAAO,GAAGI,KAAKwH,OACvCxH,KAAKgI,SAAS,CACZ6qH,WAAW,KACXC,aAAa,MACb,WACA3vH,EAAK6E,SAASirH,8QAObjzH,KAAKC,MAAM8zB,qBAAwB/zB,KAAKC,MAAMkwH,+DAC1C,aAGH//G,EAAkBpQ,KAAKC,MAAMmQ,iBAAmB,QACpCpQ,KAAKC,MAAMu9B,+CAAmBx9B,KAAK+C,cAAc09B,oBAAoBrwB,EAAgBpQ,KAAKC,MAAMqQ,mCAA5GktB,OAGAs1F,EAAet1F,EAAUG,aACzBk1F,EAAaC,EAAa5gH,KAAK4gH,EAAaplH,MAAM8vB,EAAUE,OAAOla,IAAI,OAE7ExjB,KAAKgI,SAAS,CACZ6qH,aACAC,qJAIK,IAAAhoH,EAAA9K,KAEDgzH,EAAe,CACnBtb,WAAW,EACXp1G,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOqa,UAC9BpQ,WAAW3L,KAAKC,MAAMwB,MAAMmK,MAAMub,QAClC1kB,WAAYzC,KAAKC,MAAM+B,SAAW,IAAM,IACxCU,SAAS1C,KAAKC,MAAM+B,SAAW,OAAS,SAItChC,KAAKC,MAAM+yH,cAAgBrzH,OAAOoE,KAAK/D,KAAKC,MAAM+yH,cAAchvH,QAClErE,OAAOoE,KAAK/D,KAAKC,MAAM+yH,cAAc/uH,QAAQ,SAAA1C,GAC3CyxH,EAAazxH,GAAKuJ,EAAK7K,MAAM+yH,aAAazxH,KAI9C,IAAMoC,EAAW3D,KAAKC,MAAM0D,UAAY,EAExC,OAAO3D,KAAKwH,MAAMsrH,cAAgB9yH,KAAKwH,MAAMqrH,WAC3ClqH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAAC8yH,GAAA/yH,EAAD,CACEgzH,MAAO,EACP3jE,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACX1vH,SAAUA,EACVu1B,SAAU,QACVy3B,IAAKljD,WAAWzN,KAAKwH,MAAMqrH,YAC3B15F,MAAO1rB,WAAWzN,KAAKwH,MAAMsrH,cAC7BQ,aAAe,SAAAv9F,GAAC,MAAI,KAAKjrB,EAAK/H,cAAcS,YAAYuyB,EAAEpyB,KAEzD,SAAAgN,GAAA,IAAG4iH,EAAH5iH,EAAG4iH,WAAH5iH,EAAewoB,MAAf,OACCxwB,EAAAxI,EAAAC,cAAA,QACEozH,IAAKD,EACLltH,MAAO2sH,OAMfrqH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAM,gBA3GcQ,aC+GnB4wH,8MA7GbjsH,MAAQ,CACNioE,YAAY,KACZH,cAAc,QAIhBvsE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK+yH,yMAGkBprH,EAAUC,sFACjC5H,KAAKkD,YACCitH,EAAuBxoH,EAAUwoH,uBAAyBnwH,KAAKC,MAAMkwH,uBACvCxoH,EAAUosB,qBAAuBlkB,KAAKC,UAAUnI,EAAUosB,uBAAyBlkB,KAAKC,UAAU9P,KAAKC,MAAM8zB,sBAC/Go8F,IAChCnwH,KAAK+yH,oBAGD9iH,EAAgBtI,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDkO,EAAmBvI,EAAUwI,YAAcnQ,KAAKC,MAAMkQ,WACvCN,KAAKC,UAAUnI,EAAUqrH,gBAAkBnjH,KAAKC,UAAU9P,KAAKC,MAAM+yH,eACtE9iH,GAAoBD,KAChCgjH,EAAWtzH,OAAOC,OAAO,GAAGI,KAAKwH,OACvCxH,KAAKgI,SAAS,CACZynE,YAAY,KACZH,cAAc,MACd,WACAnsE,EAAK6E,SAASirH,8QAObjzH,KAAKC,MAAM8zB,qBAAwB/zB,KAAKC,MAAMkwH,+DAC1C,aAGH//G,EAAkBpQ,KAAKC,MAAMmQ,iBAAmB,QACpCpQ,KAAKC,MAAMu9B,+CAAmBx9B,KAAK+C,cAAc09B,oBAAoBrwB,EAAgBpQ,KAAKC,MAAMqQ,mCAA5GktB,OAEA8xC,EAAgB9xC,EAAUI,cAC1B6xC,EAAcH,EAAcp9D,KAAKsrB,EAAUK,gBAAgBnwB,MAAM8vB,EAAUE,OAAOla,IAAI,OAE5FxjB,KAAKgI,SAAS,CACZynE,cACAH,sJAIK,IAAAxkE,EAAA9K,KAEDgzH,EAAe,CACnBtb,WAAW,EACXp1G,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOqa,UAC9BpQ,WAAW3L,KAAKC,MAAMwB,MAAMmK,MAAMub,QAClC1kB,WAAYzC,KAAKC,MAAM+B,SAAW,IAAM,IACxCU,SAAS1C,KAAKC,MAAM+B,SAAW,OAAS,SAItChC,KAAKC,MAAM+yH,cAAgBrzH,OAAOoE,KAAK/D,KAAKC,MAAM+yH,cAAchvH,QAClErE,OAAOoE,KAAK/D,KAAKC,MAAM+yH,cAAc/uH,QAAQ,SAAA1C,GAC3CyxH,EAAazxH,GAAKuJ,EAAK7K,MAAM+yH,aAAazxH,KAI9C,IAAM4C,EAAOnE,KAAKC,MAAMkE,MAAQ,KAC1BR,EAAW3D,KAAKC,MAAM0D,UAAY,EAExC,OAAO3D,KAAKwH,MAAM8nE,eAAiBtvE,KAAKwH,MAAMioE,YAC5C9mE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KAEED,EAAAxI,EAAAC,cAAC8yH,GAAA/yH,EAAD,CACEgzH,MAAO,EACP3jE,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACX1vH,SAAUA,EACVu1B,SAAU,QACVy3B,IAAKljD,WAAWzN,KAAKwH,MAAMioE,aAC3Bt2C,MAAO1rB,WAAWzN,KAAKwH,MAAM8nE,eAC7BgkD,aAAe,SAAAv9F,GAAC,OAAI5xB,EAAK2G,EAAK/H,cAAcS,YAAYuyB,EAAEpyB,KAEzD,SAAAgN,GAAA,IAAG4iH,EAAH5iH,EAAG4iH,WAAH5iH,EAAewoB,MAAf,OACCxwB,EAAAxI,EAAAC,cAAA,QACEozH,IAAKD,EACLltH,MAAO2sH,OAMfrqH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAM,gBA1GeQ,aC0+CpB6wH,8MA39CblsH,MAAQ,CACNg2B,UAAU,KACV77B,aAAa,GACbwI,YAAY,KACZ0+C,YAAY,KACZ8qE,aAAa,KACb1pH,cAAc,KACdklH,cAAa,EACbxuF,gBAAgB,GAChBizF,gBAAgB,GAChB7J,eAAe,KACf8J,gBAAe,EACfC,kBAAkB,GAClBC,kBAAkB,GAClBC,iBAAgB,EAChB5E,iBAAgB,EAChBxF,iBAAiB,KACjBqK,oBAAoB,KACpBC,8BAA8B,UAIhCnxH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,uKAK9CD,KAAKkD,YAELlD,KAAK0vH,gBAAgByE,KAAM,WACzB,IACMR,EAAexwH,EAAKlD,MAAMglH,UAAUE,OACpCoK,EAAkBpsH,EAAKJ,cAAc0S,gBAAgB,CAAC,aACtDs0G,EAAiBpqH,OAAO2R,OAAOi+G,GAAiB9vG,KAAM,SAAA+Z,GAAC,OAAIA,EAAE0kD,QAAUy1C,IAE7E,QAAuBjlG,IAAnBq7F,EAA8B,CAChC,IAAMlhE,EAAckhE,EAAexmH,KAC7BswH,GAAkB1wH,EAAKqE,MAAM2nH,aAC7BllH,EAAgB9G,EAAKlD,MAAMglH,UAAUmP,OACrCxK,EAAmBzmH,EAAKlD,MAAMglH,UAAUC,OACxC/6G,EAAcy/G,GAAoBzmH,EAAKlD,MAAMs9B,kBAAkBqsF,IAAqBzmH,EAAKlD,MAAMs9B,kBAAkBqsF,GAAkB3/G,GAAiB9G,EAAKlD,MAAMs9B,kBAAkBqsF,GAAkB3/G,GAAyB,KAElO,GAAI9G,EAAKqE,MAAM2nH,eAAiBhlH,EAC9B,OAAOhH,EAAKlD,MAAM8G,YAAY5D,EAAKlD,MAAMsoH,gBAAgBrqC,OAG3D/6E,EAAK6E,SAAS,CACZ6gD,cACA1+C,cACAwpH,eACA1pH,gBACA8/G,iBACA8J,iBACAjK,yBAEG,CACL,IAAM3/G,EAAgB9G,EAAKlD,MAAMglH,UAAUC,OACrC0E,EAAmBzmH,EAAKlD,MAAMglH,UAAUE,OACxCh7G,EAAchH,EAAKlD,MAAMs9B,kBAAkBqsF,IAAqBzmH,EAAKlD,MAAMs9B,kBAAkBqsF,GAAkB3/G,GAAiB9G,EAAKlD,MAAMs9B,kBAAkBqsF,GAAkB3/G,GAAiB,KAClME,GACFhH,EAAK6E,SAAS,CACZmC,cACAF,gBACA2/G,qBAKNzmH,EAAK6E,SAAS,CACZonH,iBAvCsB,0aA+CHznH,EAAWC,kFAClC5H,KAAKkD,YAEC0sB,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClD+jH,EAA2BxkH,KAAKC,UAAUnI,EAAU41B,qBAAuB1tB,KAAKC,UAAU9P,KAAKC,MAAMs9B,oBACvG3N,GAAkBykG,IACpBr0H,KAAKgI,SAAS,CACZgsH,iBAAgB,GAChB,WACAlpH,EAAK4kH,2SAMJ1vH,KAAKC,MAAMqQ,+BACO,GACG,EACxBtQ,KAAKgI,SAAS,CACZmnH,cAHmB,EAInB6E,iBAHsB,uBAKjB,0BAGeh0H,KAAK+C,cAAcu6B,4BAA4Bt9B,KAAKC,MAAMs9B,kBAAkBv9B,KAAKC,MAAMqQ,iBAAzGktB,YAGE82F,EAAiB,GACjBC,EAAmB,GAEnBT,EAAoB,GACpBC,EAAoB,IACF,EAClBS,EAAiBx0H,KAAK+C,cAAc0S,gBAAgB,CAAC,aAE3D+nB,EAAUQ,gBAAgB/5B,QAAS,SAAAm8B,GAC5Bm0F,EAAiBn0F,EAAY/B,WAChCk2F,EAAiBn0F,EAAY/B,SAAW,CACtCynF,OAAO7I,EAAKl6G,cAAc2O,MAAM,GAChCW,QAAQ4qG,EAAKl6G,cAAc2O,MAAM,KAIrC6iH,EAAiBn0F,EAAY/B,SAASynF,OAASyO,EAAiBn0F,EAAY/B,SAASynF,OAAO5zG,KAAKkuB,EAAYC,eAC7Gk0F,EAAiBn0F,EAAY/B,SAAShsB,QAAUkiH,EAAiBn0F,EAAY/B,SAAShsB,QAAQH,KAAKkuB,EAAYtB,cAE1Gw1F,EAAel0F,EAAY3uB,SAC9B6iH,EAAel0F,EAAY3uB,OAASwrG,EAAKl6G,cAAc2O,MAAM,IAE/D4iH,EAAel0F,EAAY3uB,OAAS6iH,EAAel0F,EAAY3uB,OAAOS,KAAKkuB,EAAYtB,gBAGnF6B,EAAkBhhC,OAAOoE,KAAKuwH,GAEpC30H,OAAOoE,KAAK/D,KAAKC,MAAMs9B,mBAAmBt5B,QAAQ,SAAAg6B,GAChDt+B,OAAOoE,KAAKk5G,EAAKh9G,MAAMs9B,kBAAkBU,IAAWh6B,QAAS,SAAAo6B,GACxDsC,EAAgBlM,SAAS4J,IACpBy1F,EAAkB71F,KACpB61F,EAAkB71F,GAAU,IAE9B61F,EAAkB71F,GAAUI,GAAS,GACrCy1F,EAAkB71F,GAAUI,GAAS4+E,EAAKh9G,MAAMs9B,kBAAkBU,GAAUI,KAG1E01F,EAAkB91F,KACpB81F,EAAkB91F,GAAU,IAE9B81F,EAAkB91F,GAAUI,GAAS,GACrC01F,EAAkB91F,GAAUI,GAAS4+E,EAAKh9G,MAAMs9B,kBAAkBU,GAAUI,QAK5Eo2F,EAAqB90H,OAAOoE,KAAKuwH,GAAgBxuH,IAAK,SAAA2L,GAC1D,IAAMijH,EAAejnH,WAAW6mH,EAAe7iH,GAAO9D,QAAQ,IACxDgnH,EAAkBL,EAAe7iH,GAAO+R,IAAIga,EAAUG,cAAcjwB,MAAM,KAC1EvD,EAAc8yG,EAAKl6G,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,gBAC/E,MAAO,CACLtQ,GAAGqM,EACHtP,KAAKsP,EACLxD,MAAMwD,EACNghH,gBAAgB,CACdtuH,KAAK,IACLC,QAAQ,OACRG,UAAU,CACRlD,GAAG,EACHoB,WAAW,EACXC,SAAS,CAAC,EAAE,KAGhB8vH,WAAWkC,EACXvpH,MAAM0G,KAAKwwD,MAAMsyD,GACjB/c,YAAW,KAAAjxG,OAAO+tH,EAAP,QAAA/tH,OAA0B8K,GACrCnP,MAAM,OAAO6H,EAAY7H,MAAMyL,IAAIC,KAAK,KAAK,IAC7C7M,MAAMgJ,GAAeA,EAAY/H,KAAO+H,EAAY/H,KAA9C,iBAAAuE,OAAsE8K,EAAMiE,cAA5E,WAKV/V,OAAOoE,KAAKy5B,EAAUO,gBAAgB95B,QAAS,SAAAwN,GAC7C,IAAMijH,EAAejnH,WAAW+vB,EAAUO,eAAetsB,GAAOuuB,qBAAqBryB,QAAQ,IACvFgnH,EAAkBn3F,EAAUO,eAAetsB,GAAOuuB,qBAAqBxc,IAAIga,EAAUG,cAAcjwB,MAAM,KACzGvD,EAAc8yG,EAAKl6G,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,gBACxDunG,EAAKl6G,cAAc0S,gBAAgB,CAAC,YAAYhE,IACpDsO,aACjB00G,EAAmB7mH,KAAK,CACtBxI,GAAGqM,EACHtP,KAAKsP,EACLxD,MAAMwD,EACNghH,gBAAgB,CACdtuH,KAAK,IACLC,QAAQ,OACRG,UAAU,CACRlD,GAAG,EACHoB,WAAW,EACXC,SAAS,CAAC,EAAE,KAGhB8vH,WAAWkC,EACXvpH,MAAM0G,KAAKwwD,MAAMsyD,GACjB/c,YAAW,KAAAjxG,OAAO+tH,EAAP,QAAA/tH,OAA0B8K,GACrCnP,MAAM,OAAO6H,EAAY7H,MAAMyL,IAAIC,KAAK,KAAK,IAC7C7M,MAAMgJ,GAAeA,EAAY/H,KAAO+H,EAAY/H,KAA9C,iBAAAuE,OAAsE8K,EAAMiE,cAA5E,YAKNu+G,EAAsBt0H,OAAOoE,KAAKwwH,GAAkBzuH,IAAI,SAAC8uH,EAAYznH,GACzE,IAAMmxB,EAAgBk2F,EAAeI,GAC/BtF,EAAciF,EAAiBK,GAErC,MAAO,CACLxvH,GAAGwvH,EACHzyH,KAAKyyH,EACLzpH,MAJkBsC,WAAW6hH,EAAYxJ,OAAOp4G,MAAM,KAAKC,QAAQ,IAKnEM,MAAOqwB,EAAcn8B,KACrBG,MAAM,OAAOg8B,EAAch8B,MAAMyL,IAAIC,KAAK,KAAK,IAC/C4pG,YAAW,KAAAjxG,OAAO2oH,EAAYj9G,QAAQ1E,QAAQ,GAAnC,QAAAhH,OAA4C23B,EAAcn8B,SAMnER,EAAe67B,EAAU77B,aACzBwtH,EAAe3xF,GAAax9B,KAAK+C,cAAc2O,MAAM8rB,EAAUG,cAAcroB,GAAG,GAItFtV,KAAKgI,SAAS,CACZw1B,YACA2xF,eACAxtH,eACAqyH,iBAxHsB,EAyHtBrzF,kBACAmzF,oBACAC,oBACAU,qBACAR,qKAKYN,GAChB,IAAIz1C,EAAK,GAAAv3E,OAAM3G,KAAKC,MAAMsoH,gBAAgBrqC,MAAjC,KAAAv3E,OAA0CgtH,IAC/B3zH,KAAKC,MAAMs9B,kBAAkBv9B,KAAKwH,MAAMoiH,mBAAqB5pH,KAAKC,MAAMs9B,kBAAkBv9B,KAAKwH,MAAMoiH,kBAAkB5pH,KAAKwH,MAAMyC,eAAiBjK,KAAKC,MAAMs9B,kBAAkBv9B,KAAKwH,MAAMoiH,kBAAkB5pH,KAAKwH,MAAMyC,eAAiB,QAE3Pi0E,GAAK,IAAAv3E,OAAQ3G,KAAKwH,MAAMoiH,iBAAnB,KAAAjjH,OAAuC3G,KAAKwH,MAAMyC,gBAEzDjK,KAAKC,MAAM8G,YAAYm3E,gDAEJ36E,EAAK06B,EAASxsB,GACjC,IAAIkiH,EAAa,KAEhBA,EADU,OAAPpwH,EACU,SAEE,SAChB,IAAI26E,EAAK,GAAAv3E,OAAM3G,KAAKC,MAAMsoH,gBAAgBrqC,MAAjC,KAAAv3E,OAA0CgtH,IAC/B3zH,KAAKC,MAAMs9B,kBAAkBU,IAAaj+B,KAAKC,MAAMs9B,kBAAkBU,GAAUxsB,GAASzR,KAAKC,MAAMs9B,kBAAkBU,GAAUxsB,GAAS,QAE5JysE,GAAK,IAAAv3E,OAAQs3B,EAAR,KAAAt3B,OAAoB8K,IAE3BzR,KAAKC,MAAM8G,YAAYm3E,yCAGXjgD,EAASxsB,GAErB,GADoBzR,KAAKC,MAAMs9B,kBAAkBU,IAAaj+B,KAAKC,MAAMs9B,kBAAkBU,GAAUxsB,GAASzR,KAAKC,MAAMs9B,kBAAkBU,GAAUxsB,GAAS,KAC9I,CACd,IAAIysE,EAAK,GAAAv3E,OAAM3G,KAAKC,MAAMsoH,gBAAgBrqC,OACtCl+E,KAAKwH,MAAMmsH,eACbz1C,GAAK,IAAAv3E,OAAQ3G,KAAKwH,MAAMmsH,eAE1Bz1C,GAAK,IAAAv3E,OAAQs3B,EAAR,KAAAt3B,OAAoB8K,GAEzBzR,KAAKC,MAAM8G,YAAYm3E,6DAIMg2C,GAC/Bl0H,KAAKgI,SAAS,CACZksH,mEAKEl0H,KAAKwH,MAAM2C,aAAenK,KAAKwH,MAAMqhD,YAClC7oD,KAAKwH,MAAM2nH,aAGdnvH,KAAKC,MAAM8G,YAAY/G,KAAKC,MAAMsoH,gBAAgBrqC,MAAM,IAAIl+E,KAAKwH,MAAMoiH,iBAAiB,IAAI5pH,KAAKwH,MAAMyC,eAFvGjK,KAAKC,MAAM8G,YAAY/G,KAAKC,MAAMsoH,gBAAgBrqC,MAAM,IAAIl+E,KAAKwH,MAAMuiH,eAAe7rC,OAOxFl+E,KAAKC,MAAM8G,YAAY/G,KAAKC,MAAMsoH,gBAAgBrqC,wCAI7C,IAAAynC,EAAA3lH,KAEDiG,EAAW,GACX4uH,EAAiB,GAkBvB,OAjBI70H,KAAKwH,MAAMqhD,cACbgsE,EAAejnH,KAAK5N,KAAK+C,cAAcmL,WAAWlO,KAAKwH,MAAMuiH,eAAewG,WACxEvwH,KAAKwH,MAAM2C,cACRnK,KAAKwH,MAAM2nH,aAELnvH,KAAKwH,MAAM2C,aACpBlE,EAAS2H,KAAK5N,KAAKC,MAAMsoH,gBAAgBrqC,MAAM,IAAIl+E,KAAKwH,MAAMoiH,iBAAiB,IAAI5pH,KAAKwH,MAAMyC,eAF9FhE,EAAS2H,KAAK5N,KAAKC,MAAMsoH,gBAAgBrqC,MAAM,IAAIl+E,KAAKwH,MAAMuiH,eAAe7rC,SAM/El+E,KAAKwH,MAAMoiH,kBACbiL,EAAejnH,KAAK5N,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,YAAYzV,KAAKwH,MAAMoiH,iBAAiB,WAEtG5pH,KAAKwH,MAAMyC,eACb4qH,EAAejnH,KAAK5N,KAAKwH,MAAMyC,eAI/BtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAGL+0H,EAAe7wH,OAAO,GACpB2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPxN,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,IAEP6I,EAAAxI,EAAAC,cAAC6E,EAAA,EAADtF,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2C,KAAM,WACNqD,SAAUA,EACVJ,KAAMgvH,EACN7yH,SAAUhC,KAAKC,MAAM+B,SACrBvB,YAAaT,KAAK26G,OAAOz7F,KAAKlf,UAGlC2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GACPmB,eAAgB,cAQrBjB,KAAKwH,MAAM4nH,gBAiBRpvH,KAAKwH,MAAM2C,YACbxB,EAAAxI,EAAAC,cAAC00H,GAADn1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEu9B,UAAWx9B,KAAKwH,MAAMg2B,UACtBqrB,YAAa7oD,KAAKwH,MAAMqhD,YACxB1+C,YAAanK,KAAKwH,MAAM2C,YACxBglH,aAAcnvH,KAAKwH,MAAM2nH,aACzBllH,cAAejK,KAAKwH,MAAMyC,cAC1B8/G,eAAgB/pH,KAAKwH,MAAMuiH,eAC3B2F,cAAe1vH,KAAK0vH,cAAcxwG,KAAKlf,MACvC4pH,iBAAkB5pH,KAAKwH,MAAMoiH,iBAC7BrsF,kBAAmBv9B,KAAKC,MAAMs9B,kBAC9BitF,kBAAmBxqH,KAAKwqH,kBAAkBtrG,KAAKlf,SAE9CA,KAAKwH,MAAMqhD,aAAgB7oD,KAAKwH,MAAM2nH,aAMzCxmH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAENE,KAAKwH,MAAMqsH,eACVlrH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACmxH,GAAA,EAAD5xH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE6D,UAAW,CACTyK,GAAG,CAAC,EAAE,IAERijH,YAAa,WACbT,SAAU,iCACVU,sBAAuBzxH,KAAK+C,cAAc4pG,6BAE5ChkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJS,IAAK9B,KAAKwH,MAAMuiH,eAAe5oH,MAC/BkB,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,KAEGjuH,KAAK+C,cAAcmL,WAAWlO,KAAKwH,MAAMuiH,eAAewG,UAF3D,cAKF5nH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ3N,GAAI,OACJd,MAAO,CAAC,EAAE,IACVi1H,UAAW,SACX9zH,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACb4G,UAAW,UAEVtJ,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAWzV,KAAKwH,MAAMqhD,YAAY,cAAc,YAK3FlgD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACmxH,GAAA,EAAD5xH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE6D,UAAW,CACTyK,GAAG,CAAC,EAAE,IAERijH,YAAa,WACbT,SAAU,iCACVU,sBAAuBzxH,KAAK+C,cAAc4pG,6BAE5ChkG,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,GADN,6BAQFvO,KAAKwH,MAAMwsH,iBAAmBh0H,KAAKwH,MAAM2nH,cACvCxmH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPuJ,GAAI,CAAC,EAAE,GACPtI,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEosH,GAAI,CAAC,EAAE,GACPl1H,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACN0O,GAAG,CAAC,EAAE,GACN9F,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMg2B,UAAUE,OACnB/0B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE8uG,WAAY,EACZj1G,WAAY,CAAC,EAAE,GACfH,MAAO,YACPqJ,WAAY,UACZjJ,SAAU,CAAC,EAAE,SACb6G,wBAAyB,CAAEC,OAAQxJ,KAAKwH,MAAMg2B,UAAUE,OAAO/vB,QAAQ,GAAG,sBAI5EhF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAK,SAGjBsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,WAOAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0mB,UAAW,SACXC,QAASvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,aAExD9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,mBAOnBqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEosH,GAAI,CAAC,EAAE,GACPl1H,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACN0O,GAAG,CAAC,EAAE,GACN9F,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMg2B,UACT70B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC60H,GAADt1H,OAAAC,OAAA,CACE+D,SAAU,GACN3D,KAAKC,MAFX,CAGEu9B,UAAWx9B,KAAKwH,MAAMg2B,aAExB70B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,IACPiB,WAAY,SACZE,eAAgB,YAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZkJ,WAAY3L,KAAKC,MAAMwB,MAAMmK,MAAMub,QACnC7kB,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAJrD,IAMIrsB,KAAKwH,MAAMg2B,UAAUM,kBAAkBnwB,QAAQ,GANnD,MASFhF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEhI,GAAI,EACJ8B,SAAU,EACVD,WAAY,EACZkJ,WAAY3L,KAAKC,MAAMwB,MAAMmK,MAAMub,QACnC7kB,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WALrD,KAOA1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,IACPiB,WAAY,SACZE,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAAC80H,GAADv1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkE,KAAM,KACNR,SAAU,EACVqvH,aAAc,CACZtwH,SAAS,GACTD,WAAW,IACXH,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDmR,UAAWx9B,KAAKwH,MAAMg2B,gBAM9B70B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAK,SAGjBsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,qBA4BRqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACN0O,GAAG,CAAC,EAAE,GACN9F,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMysH,oBACTtrH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZqE,GAAI,kBACJrD,OAAQ,CAAC,OAAO,QAChBf,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC+0H,GAADx1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEsL,QAAQ,EACRoD,YAAY,EACZ3D,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzBrL,MAAQE,KAAKC,MAAM+B,SAAW,GAAK,GACnCD,OAAS/B,KAAKC,MAAM+B,SAAW,GAAK,GACpC2H,UAAW3J,KAAKwH,MAAMysH,wBAI1BtrH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAK,SAGjBsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,+BA2BVqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPsF,GAAI,mBACJnE,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,EAAE,MACVkB,cAAe,SACfoE,GAAI,yBAEJuD,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACE9vF,MAAO,cACP2wF,WAAc33G,KAAKC,MAAM+B,SAIrB,KAJgC,CAClCqE,MAAM,CACJooB,UAAU,UAId9lB,EAAAxI,EAAAC,cAAC+0H,GAADx1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4xH,YAAY,EACZljH,YAAY,EACZ4jH,YAAa,CACXT,UAAU,GACVsD,aAAa,GAEfpqH,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtB0nH,aAAc,cACdznH,WAAY,SAAAP,GACV,OAAI8C,WAAW9C,EAAEQ,QAAQ,EAChBR,EAAEQ,MAAM,IAER,MAGXmP,SAAU,wBACV3Q,UAAW3J,KAAKwH,MAAMitH,mBACtB/B,aAAc1yH,KAAKC,MAAMsoH,gBAAgBpnH,MACzC2Z,aAAY,KAAAnU,OAAO3G,KAAK+C,cAAcS,YAAYiK,WAAWzN,KAAKwH,MAAMg2B,UAAUG,cAAc,IAChG98B,OAAQb,KAAKC,MAAM+B,SAAW,CAAE6K,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,SAI3HrE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,MACVkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,KACEnuG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,CAAC,EAAE,GACP/hB,GAAI,CAAC,EAAE,GACPg1H,UAAW,SACX/zH,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,IACVkB,cAAe,SACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACExrH,WAAY,EACZC,SAAU,CAAC,EAAE,GACb4G,UAAW,QAHb,gBAQFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACPvJ,MAAO,CAAC,EAAE,IACVkB,cAAe,SACfC,eAAgB,YAEhB0H,EAAAxI,EAAAC,cAACoa,EAAA,EAAD,CACEW,WAAY,CACV5Z,EAAE,EACFxB,GAAG,GAEL+a,aACE,CAAC3P,MAAM,OAAO8C,MAAM,MAEtB9L,KAAM,mBACNyY,QAAS,CACP,CAACzP,MAAM,OAAO8C,MAAM,MACpB,CAAC9C,MAAM,QAAQ8C,MAAM,MACrB,CAAC9C,MAAM,SAAS8C,MAAM,MACtB,CAAC9C,MAAM,SAAS8C,MAAM,MACtB,CAAC9C,MAAM,MAAM8C,MAAM,QAErB2O,SAAW,SAAA3R,GAAC,OAAI06G,EAAK0P,iCAAiCpqH,QAI5DtC,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,CAAC,EAAE,GACPqvH,UAAW,SACX9zH,eAAgB,SAChBmE,GAAI,yBAEJuD,EAAAxI,EAAAC,cAAC4tH,GAADruH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8P,cAAe,GACfuK,SAAU,wBACVC,eAAgB,wBAChB4xG,iBAAkBnsH,KAAKwH,MAAM7F,aAC7BiO,mBAAoB5P,KAAKwH,MAAM0sH,8BAC/B/9G,iBAAkBnW,KAAK+C,cAAc0wD,oBAAoB,MAAM,WAU7EzzD,KAAKwH,MAAMm5B,gBAAgB38B,OAAO,GAChC2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPnJ,GAAI,iBACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJz+G,MAAO,EACPyO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbi7G,aAAc,yBAEdj/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAQuG,GAAT,CACEzM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,uBAOFkG,EAAAxI,EAAAC,cAACynH,EAAA,EAADloH,OAAAC,OAAA,CACEkoH,iBAAkB,GAClBj/D,YAAa7oD,KAAKwH,MAAMqhD,YACxBpoD,YAAa,SAACR,GAAD,OAAW0lH,EAAKmG,cAAc7rH,EAAMg+B,SAASh+B,EAAMwR,QAChEs2G,UAAW,CACTrlH,SAAS,CAAC,OAAO,SAEnB61G,KAAM,CACJ,CACEvxF,MAAM,WACN/mB,MAAM,CACJH,MAAM,CAAC,IAAME,KAAKwH,MAAMqsH,eAAiB,IAAO,MAElD/sE,OAAO,CACL,CACE3kD,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEI,KAAK,gBAEP,CACEwC,QAAO,EACPxC,KAAK,oBACLlC,MAAM,CACJyF,GAAG,EACH3D,OAAO,YAKf,CACEilB,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,eA4BX,CACE6kB,MAAM,OACN/mB,MAAM,CACJH,MAAM,CAAC,IAAME,KAAKwH,MAAMqsH,eAAiB,GAAM,MAEjD/sE,OAAO,CACL,CACE3kD,KAAKnC,KAAKwH,MAAMqsH,eAAX,GAAAltH,OAA+B3G,KAAKwH,MAAMuiH,eAAewG,SAAzD,eAAiF,OACtFtwH,MAAM,CACJ4D,aAAa,EACbF,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAK3C,CACEglB,MAAMhnB,KAAKwH,MAAMqsH,eAAiB,MAAQ,aAC1CpV,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,gBACpDkjG,SAAS34G,KAAKwH,MAAMqsH,gBAA6C,OAA3B7zH,KAAKwH,MAAMqhD,YACjD5oD,MAAM,CACJH,MAAM,CAACE,KAAKwH,MAAMqsH,eAAiB,IAAO,IAAK7zH,KAAKwH,MAAMqsH,eAAiB,IAAO,MAEpFj1G,YAAY,CACV5d,cAAc,SACdD,WAAW,cAEb+lD,OAAO,CACL,CACE3kD,KAAK,YACLmuH,aAAY,KAIlB,CACEtpG,MAAMhnB,KAAKwH,MAAMqsH,eAAiB,MAAQ,aAC1CpV,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,gBACpDkjG,SAAS34G,KAAKwH,MAAMqsH,gBAA6C,OAA3B7zH,KAAKwH,MAAMqhD,YACjD5oD,MAAM,CACJH,MAAM,CAACE,KAAKwH,MAAMqsH,eAAiB,IAAO,IAAK7zH,KAAKwH,MAAMqsH,eAAiB,IAAO,MAEpFj1G,YAAY,CACV5d,cAAc,SACdD,WAAW,cAEb+lD,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJ6D,UAAU,CACRzC,GAAG,IAGPivH,aAAY,KAIlB,CACE3rH,QAAO,EACPqiB,MAAM,YACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,aACpDxV,MAAM,CACJH,MAAM,CAAC,IAAM,KAEfgnD,OAAO,CACL,CACE3kD,KAAK,uBACLlC,MAAM,CACJ6D,UAAU,CACRzC,GAAG,GAELU,OAAO,CAAC,QAAQ,WAMxB,CACE4C,QAAO,EACPqiB,MAAM,mBACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,gBACpDxV,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,iBAIX,CACEwC,QAAO,EACPqiB,MAAM,kBACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,mBACpDxV,MAAM,CACJH,MAAM,CAAC,IAAKE,KAAKwH,MAAMqsH,eAAiB,IAAO,MAEjD/sE,OAAO,CACL,CACE3kD,KAAK,oBAkBX,CACE6kB,MAAM,GACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAM,MAEf8e,YAAY,CACV9e,MAAM,GAERgnD,OAAO,CACL,CACE3kD,KAAK,SACL8L,MAAO,SACPhO,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbyN,UAAU,KACVhI,UAAU,SACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAW0lH,EAAKmG,cAAc7rH,EAAMg+B,SAASh+B,EAAMwR,cAMrEzR,KAAKC,MA7NX,CA8NEs9B,kBAAmBv9B,KAAKwH,MAAMssH,uBAKpCn0H,OAAOoE,KAAK/D,KAAKwH,MAAMusH,mBAAmB/vH,OAAO,IAAMhE,KAAKC,MAAMqQ,UAClE3H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPnJ,GAAI,iBACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJz+G,MAAO,EACPyO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbi7G,aAAc,yBAEdj/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAQuG,GAAT,CACEzM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,uBAOFkG,EAAAxI,EAAAC,cAACynH,EAAA,EAADloH,OAAAC,OAAA,CACEkoH,iBAAkB,GAClBj/D,YAAa7oD,KAAKwH,MAAMqhD,YACxBpoD,YAAa,SAACR,GAAD,OAAW0lH,EAAKmG,cAAc7rH,EAAMg+B,SAASh+B,EAAMwR,QAChEs2G,UAAW,CACTrlH,SAAS,CAAC,OAAO,SAEnB61G,KAAM,CACJ,CACEvxF,MAAM,WACN/mB,MAAM,CACJH,MAAM,CAAC,IAAME,KAAKwH,MAAMqsH,eAAiB,IAAO,MAElD/sE,OAAO,CACL,CACE3kD,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEI,KAAK,gBAEP,CACEwC,QAAO,EACPxC,KAAK,oBACLlC,MAAM,CACJyF,GAAG,EACH3D,OAAO,YAKf,CACEilB,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,eA4BX,CACE6kB,MAAM,OACN/mB,MAAM,CACJH,MAAM,CAAC,IAAME,KAAKwH,MAAMqsH,eAAiB,GAAM,MAEjD/sE,OAAO,CACL,CACE3kD,KAAKnC,KAAKwH,MAAMqsH,eAAX,GAAAltH,OAA+B3G,KAAKwH,MAAMuiH,eAAewG,SAAzD,eAAiF,OACtFtwH,MAAM,CACJ4D,aAAa,EACbF,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAK3C,CACEglB,MAAMhnB,KAAKwH,MAAMqsH,eAAiB,MAAQ,aAC1CpV,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,gBACpDkjG,SAAS34G,KAAKwH,MAAMqsH,gBAA6C,OAA3B7zH,KAAKwH,MAAMqhD,YACjD5oD,MAAM,CACJH,MAAM,CAACE,KAAKwH,MAAMqsH,eAAiB,IAAO,IAAK7zH,KAAKwH,MAAMqsH,eAAiB,IAAO,MAEpFj1G,YAAY,CACV5d,cAAc,SACdD,WAAW,cAEb+lD,OAAO,CACL,CACE3kD,KAAK,YACLmuH,aAAY,KAIlB,CACEtpG,MAAMhnB,KAAKwH,MAAMqsH,eAAiB,MAAQ,aAC1CpV,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,gBACpDkjG,SAAS34G,KAAKwH,MAAMqsH,gBAA6C,OAA3B7zH,KAAKwH,MAAMqhD,YACjD5oD,MAAM,CACJH,MAAM,CAACE,KAAKwH,MAAMqsH,eAAiB,IAAO,IAAK7zH,KAAKwH,MAAMqsH,eAAiB,IAAO,MAEpFj1G,YAAY,CACV5d,cAAc,SACdD,WAAW,cAEb+lD,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJ6D,UAAU,CACRzC,GAAG,IAGPivH,aAAY,KAIlB,CACE3rH,QAAO,EACPqiB,MAAM,YACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,aACpDxV,MAAM,CACJH,MAAM,CAAC,IAAM,KAEfgnD,OAAO,CACL,CACE3kD,KAAK,uBACLlC,MAAM,CACJ6D,UAAU,CACRzC,GAAG,GAELU,OAAO,CAAC,QAAQ,WAMxB,CACE4C,QAAO,EACPqiB,MAAM,mBACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,gBACpDxV,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,iBAIX,CACEwC,QAAO,EACPqiB,MAAM,kBACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,mBACpDxV,MAAM,CACJH,MAAM,CAAC,IAAKE,KAAKwH,MAAMqsH,eAAiB,IAAO,MAEjD/sE,OAAO,CACL,CACE3kD,KAAK,oBAkBX,CACE6kB,MAAM,GACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAM,MAEf8e,YAAY,CACV9e,MAAM,GAERgnD,OAAO,CACL,CACE3kD,KAAK,SACL8L,MAAO,UACPhO,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbyN,UAAU,KACVhI,UAAU,UACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAW0lH,EAAKmG,cAAc7rH,EAAMg+B,SAASh+B,EAAMwR,cAMrEzR,KAAKC,MA7NX,CA8NEs9B,kBAAmBv9B,KAAKC,MAAMqQ,QAAQtQ,KAAKwH,MAAMusH,kBAAkB/zH,KAAKC,MAAMs9B,sBAOlFv9B,KAAKC,MAAMqQ,SAAWtQ,KAAKwH,MAAM2nH,cAC/BxmH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,EACPsF,GAAI,eACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CAAO1/G,GAAI,CAAC,EAAE,IAAd,gBACA5F,EAAAxI,EAAAC,cAAC0vH,EAAA,EAADnwH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8P,cAAe/P,KAAKwH,MAAMm5B,gBAC1BwrF,iBAAkBnsH,KAAKwH,MAAM7F,aAC7BouH,iBAAkB/vH,KAAKwH,MAAM7F,aAAasjC,OAAQ,SAAC8qF,EAAiBv2F,GAElE,OADAu2F,EAAiBv2F,EAAE7nB,OAAOpE,eAAiBisB,EAAE7nB,OACtCo+G,GACP,IACFxX,KAAM,CACJ,CACEvxF,MAAOhnB,KAAKC,MAAM+B,SAAW,GAAK,OAClC/B,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEc,KAAK,OACLwC,QAAO,KAIb,CACEqiB,MAAM,SACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAERgnD,OAAO,CACL,CACE3kD,KAAK,YAIX,CACE6kB,MAAM,OACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,UAIX,CACEwC,QAAO,EACPqiB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACE3kD,KAAK,aACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEsD,QAAO,EACPxC,KAAK,YAIX,CACE6kB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,YAIX,CACE6kB,MAAM,WACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACEvjD,KAAK,QACLpB,KAAK,SACL0D,KAAK,CAAC,gBACN5F,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEwB,KAAK,OACLoB,QAAO,EACPxC,KAAK,SACL0D,KAAK,CAAC,eAIZ,CACEmhB,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,GACNU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,qBAtkCvBwG,EAAAxI,EAAAC,cAACk1H,GAAD31H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEuqH,kBAAmBxqH,KAAKwqH,kBAAkBtrG,KAAKlf,SAjCjD2I,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACEhlH,UAAW,CACT4yH,SAAS,EACT9yH,WAAW,GAEbmjB,YAAa,CACXrX,GAAG,EACHlM,KAAK,QAEPyB,UAAW,CACThD,GAAG,EACH2tB,UAAU,OACVztB,cAAc,UAEhB4B,KAAM,iCAtXGC,+DCkQR2yH,8MA7QbhuH,MAAQ,CACN2C,YAAY,KACZsrH,kBAAkB,KAClBC,kBAAkB,KAClBC,2BAA2B,QAI7B5yH,cAAgB,OA4HhB6yH,sDAAkB,SAAAj1G,EAAO80G,GAAP,IAAAC,EAAAC,EAAAn5F,EAAA,OAAAxL,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,OACZqkH,EAAoB,KAClBC,EAA6B,GACXzwH,EAAKnC,cAAc0S,gBAAgB,CAAC,WAAW,YAAY,YAAY,oBAE/ExR,QAAS,SAAAwN,GACnBA,IAAUgkH,IACPC,IACHA,EAAoBjkH,GAEtBkkH,EAA2BlkH,GAAS,CAClCA,aAKA+qB,EAAYt3B,EAAKnC,cAAc0S,gBAAgB,CAAC,iBACpCggH,IAChBE,EAA2Bn5F,GAAa,CACtC/qB,MAAM+qB,IAIVt3B,EAAK8C,SAAS,CACZytH,oBACAE,8BACA,WACAzwH,EAAK2wH,gBAAgBH,KA3BP,wBAAA70G,EAAArO,SAAAmO,EAAA3gB,iEA+BlB61H,sDAAkB,SAAAz0G,EAAOs0G,GAAP,OAAA1kG,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OAChBnM,EAAK8C,SAAS,CACZ0tH,sBAFc,wBAAAn0G,EAAA/O,SAAA4O,EAAAphB,iEAMlB2rB,KAAO,WACL,IAAM9d,EAAgB3I,EAAKnC,cAAc4oD,mBACnC+tD,EAAkBx0G,EAAKsC,MAAMwzG,aAC7B8a,EAAY,CAChBt5F,UAAUt3B,EAAKsC,MAAMiuH,kBACrBxrH,cAAc/E,EAAKsC,MAAMkuH,kBACzBK,SAAQ,iBAAApvH,OAAkBzB,EAAKsC,MAAMiuH,kBAA7B,KAAA9uH,OAAkDzB,EAAKsC,MAAMkuH,oBAEjE/b,EAAaD,GAAmBA,EAAgBc,cAAgBd,EAAgBc,cAAcsb,EAAUjoH,GAAiB,KAGzF,oBAA3B6rG,EAAgBe,QACzBf,EAAgBe,OAAOd,EAAW,KAAKmc,GAIzC5wH,EAAKnC,cAAckb,yBAAyB,CAC1CN,cAAe,QACfG,YAAa,YACbF,WAAU,GAAAjX,OAAKzB,EAAKsC,MAAMiuH,kBAAhB,KAAA9uH,OAAqCzB,EAAKsC,MAAMkuH,iGAjLxD11H,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,6KAMzCD,KAAKwH,MAAMiuH,mBAAsBz1H,KAAKwH,MAAMkuH,4DACxC,UAGQ,aACX1a,EAAeh7G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,YADnD,eAEA4c,SAAW2oF,EAAawB,kBAEjC3uG,EAAgB7N,KAAK+C,cAAc4oD,mBACnC6wD,EAAkBxB,EAAawB,gBAErC78G,OAAOoE,KAAKy4G,GAAiBv4G,QAAQ,SAAC41B,EAAIg2B,GAIxC,OAFqBh2B,EAAI6xB,MAAM,KAAK/2C,MAAMpH,eAGxC,IAAK,KACH,IAAMkvG,EAAQ,UAAA91G,OAbL,YAaK,KAAAA,OAAyBkpD,EAAzB,KAAAlpD,OAA8BxD,EAAKqE,MAAMiuH,kBAAzC,KAAA9uH,OAA8DxD,EAAKqE,MAAMkuH,mBAEvF,IAAKxnG,SAASC,eAAesuF,GAAU,CACrC,IAAMv4B,EAASh2D,SAAS9tB,cAAc,UAChCs8G,EAAuBF,EAAgB3iF,GACvC9xB,EAAW20G,GAAwBA,EAAqB30G,SAAW20G,EAAqB30G,SAAW,KACnG40G,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAEtG,GAAIA,GAA8B,oBAAZA,EAMpBA,EALqB,CACnBngF,UAAUr5B,EAAKqE,MAAMiuH,kBACrBxrH,cAAc9G,EAAKqE,MAAMkuH,kBACzBK,SAAQ,iBAAApvH,OAAkBxD,EAAKqE,MAAMiuH,kBAA7B,KAAA9uH,OAAkDxD,EAAKqE,MAAMkuH,oBAElD7nH,EAAcmtG,GAGjCjzG,GAAgC,oBAAbA,IACjBm8E,EAAOE,WACTF,EAAOG,mBAAqB,WACC,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC5CF,EAAOG,mBAAqB,KAC5Bt8E,MAIJm8E,EAAOI,OAASv8E,GAIpBm8E,EAAO9+E,GAAKq3G,EACZv4B,EAAOr7E,UAAP,UAAAlC,OA5CO,aA6CPu9E,EAAOpiF,IAAM+3B,EACbqqD,EAAOyH,OAAQ,EAEX+wB,GAAwBA,EAAqBE,cAC/CF,EAAqBE,cAAcp4B,YAAYN,GAE/Ch2D,SAAS2uF,KAAKr4B,YAAYN,GAGhC,MACA,IAAK,MACH,IAAM44B,EAAY,cAAAn2G,OAxDT,YAwDS,KAAAA,OAA6BkpD,GAE/C,IAAK3hC,SAASC,eAAe2uF,GAAc,CACzC,IAAMz2G,EAAQ6nB,SAAS9tB,cAAc,QAErCiG,EAAMjB,GAAK03G,EACXz2G,EAAM6f,IAAM,aACZ7f,EAAM8f,KAAO0T,EAEb3L,SAAS2uF,KAAKr4B,YAAYn+E,QASpCrG,KAAKgI,SAAS,CACZgzG,+QAKFh7G,KAAKkD,qBACClD,KAAKg2H,gRAILP,EAAoB91H,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAiB,YAEtEpQ,KAAK+C,cAAc2N,aAAa/Q,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAjE,eAAA8Q,EAAAvhB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAkF,SAAAqR,EAAO1Q,GAAP,IAAAtH,EAAA,OAAA6mB,EAAA7wB,EAAA+Q,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,UAChFlH,EAAcW,EAAK7K,MAAM6kH,UAAU10G,gBAAgBqB,GACnC3G,EAAK/H,cAAc20B,kBAAkBvtB,EAAYsH,SACjDtH,EAAY29B,IAHoD,CAAAzlB,EAAAhR,KAAA,eAAAgR,EAAAhR,KAAA,EAI9EvG,EAAK7K,MAAM4nC,aAAa19B,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY29B,KAJI,wBAAAzlB,EAAA7P,SAAA2P,EAAAniB,SAAlF,gBAAAyS,GAAA,OAAAyO,EAAAxO,MAAA1S,KAAA2S,YAAA,WAQN3S,KAAK41H,gBAAgBH,wLAGE9tH,EAAUC,2EACjC5H,KAAKkD,YAEC+yH,EAAmBruH,EAAU6tH,oBAAsBz1H,KAAKwH,MAAMiuH,kBAC9DS,EAAmBtuH,EAAU8tH,oBAAsB11H,KAAKwH,MAAMkuH,mBAC/DO,GAAqBC,IAAqBl2H,KAAKwH,MAAMiuH,mBAAqBz1H,KAAKwH,MAAMkuH,mBACxF11H,KAAKm2H,wJAgEA,IAAAlZ,EAAAj9G,KAEP,OAAKA,KAAKwH,MAAMiuH,kBAKd9sH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuJ,GAAI,CAAC,EAAE,GACPtI,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,yBAGA5F,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8f,aAAa,EACblE,cAAc,EACde,SAAU5c,KAAK41H,gBACf3rH,cAAejK,KAAKwH,MAAMiuH,kBAC1BrlH,gBAAiBpQ,KAAKC,MAAM6kH,UAAU10G,oBAIxCpQ,KAAKwH,MAAMmuH,4BAA8B31H,KAAKwH,MAAMkuH,mBAClD/sH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,6BAGA5F,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8f,aAAa,EACblE,cAAc,EACde,SAAU5c,KAAK61H,gBACf5rH,cAAejK,KAAKwH,MAAMkuH,kBAC1BtlH,gBAAiBpQ,KAAKwH,MAAMmuH,+BAIpChtH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPmB,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJF,GAAI,CAAC,EAAG,GACRyB,KAAM,SACNb,aAAc,EACdyF,UAAW,OACXrB,QAAU,SAAAkB,GAAC,OAAIm2G,EAAKtxF,KAAK7kB,IACzBI,UAAYlH,KAAKwH,MAAMiuH,oBAAsBz1H,KAAKwH,MAAMkuH,mBAP1D,kBAxDC,YArMW7yH,wBCkyBTuzH,8MA5xBb5uH,MAAQ,CACNsG,MAAM,GACN60G,MAAM,KACND,QAAQ,KACR2T,YAAY,GACZvY,WAAW,KACXlG,YAAY,KACZztG,YAAY,KACZs5G,YAAY,KACZ6S,aAAY,EACZx3F,aAAa,KACb+/C,aAAa,KACb03C,cAAa,EACb12F,cAAc,KACd51B,cAAc,KACdusH,iBAAiB,EACjBC,eAAe,KACfC,eAAe,KACfxS,eAAe,KACf+D,eAAe,KACf0O,eAAe,KACfpW,eAAc,EACdjxB,eAAe,KACfl/E,gBAAgB,KAChBqwG,gBAAe,EACfmW,iBAAiB,KACjBjW,kBAAiB,EACjBkW,kBAAkB,KAClBjsF,kBAAkB,KAClBq4E,mBAAmB,KACnBE,oBAAoB,KACpBsE,sBAAqB,EACrBqP,yBAAwB,KAI1B/zH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,uKAK9CD,KAAKkD,YACLlD,KAAKgI,SAAS,CACZk8G,eAAe,SACf,WACA/gH,EAAK4zH,mbAOgBpvH,EAAUC,sFACjC5H,KAAKkD,YAECqoH,EAAwB3jH,EAAUs8G,iBAAmBlkH,KAAKwH,MAAM08G,eAChE8S,EAA0BpvH,EAAU+4G,mBAAqB3gH,KAAKwH,MAAMm5G,iBACpE2B,EAAqBzyG,KAAKC,UAAUnI,EAAUwC,eAAiB0F,KAAKC,UAAU9P,KAAKC,MAAMkK,aACzF8sH,EAAsBpnH,KAAKC,UAAUnI,EAAUk3E,gBAAkBhvE,KAAKC,UAAU9P,KAAKC,MAAM4+E,eAC7F0sC,GAAyByL,GAA2B1U,IACtDtiH,KAAKgI,SAAS,CACZ6uH,kBAAkB,KAClBC,yBAAwB,GACxB,WACAhsH,EAAKisH,WAAWxL,KAIhB0L,GACFj3H,KAAK+gH,0TAIiBjD,iCAAW,KAE/B4E,EAAU,MAEV5E,IAAc99G,KAAK+C,cAAc2O,MAAMosG,GAAYxoG,GAAG,oBACxDwoG,EAAa99G,KAAK+C,cAAc2O,MAAMosG,QAC9B99G,KAAKwH,MAAM08G,sBACZ,iBAmBA,4CAlBGgT,EAAoBl3H,KAAK+C,cAAcmS,iBAAiBlV,KAAKwH,MAAMq4B,cAAc7/B,KAAKC,MAAMkK,YAAYxG,UAAUuO,KAAK4rG,GACvHqZ,EAAqBn3H,KAAK+C,cAAcmS,iBAAiBlV,KAAKwH,MAAM4vH,mBAAmBp3H,KAAKC,MAAM4+E,aAAal7E,UAAUuO,KAAK4rG,GAC9HuZ,EAAwBH,EAAkB1zG,IAAI2zG,GAC9CG,EAAgBt3H,KAAKwH,MAAMojC,kBAAkBl9B,MAAM,OAAOA,MAAM2pH,GAEhEE,EAAmBL,EAAkBxpH,MAAM1N,KAAKwH,MAAM8nF,gBACtDkoC,EAAoBF,EAAc5pH,MAAM,KAAKA,MAAM1N,KAAKwH,MAAMovH,kBAC9DvtF,EAAMkuF,EAAiBjiH,GAAG,GAAKkiH,EAAkBh0G,IAAI+zG,GAAkB7pH,MAAM,KAAO1N,KAAK+C,cAAc2O,MAAM,GAGnHgxG,EAAU,CACRtgH,KAAK,eACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,sBAAA+D,OAAuBm3G,EAAWnwG,QAAQ,GAA1C,KAAAhH,OAAgD3G,KAAKC,MAAMkK,YAAYsH,MAAvE,mCAAA9K,OAA8G2wH,EAAc3pH,QAAQ,GAApI,KAAAhH,OAA0I3G,KAAKC,MAAM4+E,aAAa9+C,YAAlK,mDAAAp5B,OAA+N0iC,EAAI17B,QAAQ,GAA3O,sJAIA8pH,EAAuBz3H,KAAK+C,cAAcwxD,qBAAqBupD,EAAW99G,KAAKC,MAAMkK,YAAYxG,oBAC5E3D,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,eAAe,CAACs1H,GAAsB,CAAC/qH,KAAK1M,KAAKC,MAAMqQ,yBAAlJonH,SACJA,EAAiB13H,KAAK+C,cAAcS,YAAYxD,KAAK+C,cAAcmS,iBAAiBwiH,EAAe13H,KAAKC,MAAMkK,YAAYxG,WAC1H++G,EAAU,CACRtgH,KAAK,aACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,wBAAA+D,OAAyBm3G,EAAWnwG,QAAQ,GAA5C,KAAAhH,OAAkD3G,KAAKC,MAAMkK,YAAYsH,MAAzE,mCAAA9K,OAAgH+wH,EAAhH,KAAA/wH,OAAkI3G,KAAKC,MAAM4+E,aAAa9+C,YAA1J,+EAQZ//B,KAAKgI,SAAS,CACZ06G,4JAIiBtyF,GACnB,IAAIvS,EAAa,KACbw6C,EAAe,GAEnB,OADAjoC,EAASpwB,KAAK+C,cAAc+yB,KAAK1F,GACzBpwB,KAAKwH,MAAM08G,gBACjB,IAAK,QACHrmG,EAAa,eACbw6C,EAAe,CAACjoC,GAClB,MACA,IAAK,WACHvS,EAAa,mBACbw6C,EAAe,CAACjoC,GAKpB,MAAO,CACLvS,aACAw6C,mEAIuBjoC,EAAOgpC,GAChC,IAAIv7C,EAAa,KACbw6C,EAAe,GACXyJ,EAAoB1I,EAApB0I,OAAQtkB,EAAY4b,EAAZ5b,EAAG7mB,EAASyiC,EAATziC,EAAG1rB,EAAMmuD,EAANnuD,EAEtB,OADAmlB,EAASpwB,KAAK+C,cAAc+yB,KAAK1F,GACzBpwB,KAAKwH,MAAM08G,gBACjB,IAAK,QACHrmG,EAAa,8BACbw6C,EAAe,CAACjoC,EAAQ0xC,EAAQ72D,EAAGuyC,EAAG7mB,GACxC,MACA,IAAK,WACH9Y,EAAa,mBACbw6C,EAAe,CAACjoC,GAKpB,MAAO,CACLvS,aACAw6C,4OAKIvqD,EAAQ,YASJmT,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,eACpEnC,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,iBACpEnC,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,sBACpEnC,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,uBACpEnC,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,mBAAmB,GAAG,CAACuK,KAAK1M,KAAKC,MAAMqQ,UAC3GtQ,KAAKwH,MAAMq4B,cAAcvqB,GAAG,GAAKtV,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,eAAe,CAACnC,KAAK+C,cAAcqxD,aAAap0D,KAAKwH,MAAMq4B,gBAAgB,CAACnzB,KAAK1M,KAAKC,MAAMqQ,UAAYtQ,KAAK+C,cAAc2O,MAAM,YAIxO,gCAhBEimH,OACAC,OACAR,OACAS,OACApB,OACAqB,OAUIC,EAA0B,GACvB5qH,EAAI,EAAGA,EAAI0qH,EAAsB1qH,IACxC4qH,EAAwBnqH,KAAK5N,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,kBAAkB,CAACgL,sBAGxF8T,QAAQqD,IAAIyzG,WAApCC,SAEAC,EAAej4H,KAAK+C,cAAcmS,iBAAiBlV,KAAK+C,cAAc2O,MAAMimH,GAAazlH,KAAKlS,KAAK+C,cAAc2O,MAAMkmH,IAAgB53H,KAAKC,MAAMkK,YAAYxG,UACpKmK,EAAMF,KAAK,CACToZ,MAAM,gBACN7b,MAAMnL,KAAK+C,cAAcS,YAAYiK,WAAWwqH,IAAe,IAAIj4H,KAAKC,MAAM4+E,aAAa9+C,cAGvFm4F,EAAgBl4H,KAAK+C,cAAcmS,iBAAiBkiH,EAAmBp3H,KAAKC,MAAM4+E,aAAal7E,UACrGmK,EAAMF,KAAK,CACToZ,MAAM,iBACN7b,MAAMnL,KAAK+C,cAAcS,YAAYiK,WAAWyqH,IAAgB,IAAIl4H,KAAKC,MAAMkK,YAAYsH,QAGvF0mH,EAAgBn4H,KAAK+C,cAAcmS,iBAAiByiH,EAAY33H,KAAKC,MAAMkK,YAAYxG,UAC7FmK,EAAMF,KAAK,CACToZ,MAAM,iBACN7b,MAAMnL,KAAK+C,cAAcS,YAAYiK,WAAW0qH,IAAgB,IAAIn4H,KAAKC,MAAM4+E,aAAa9+C,cAGxFq4F,EAAkBp4H,KAAK+C,cAAcmS,iBAAiB0iH,EAAc53H,KAAKC,MAAMkK,YAAYxG,UACjGmK,EAAMF,KAAK,CACToZ,MAAM,mBACN7b,MAAMnL,KAAK+C,cAAcS,YAAYiK,WAAW2qH,IAAkB,IAAIp4H,KAAKC,MAAM4+E,aAAa9+C,cAG1Fs4F,EAAiBL,EAAgBh0H,OAAO,EAAIg0H,EAAgB/yF,OAAQ,SAACqzF,EAAQ3hG,GAEjF,OADA2hG,EAAUzmH,KAAKqE,IAAIygB,EAAE4hG,SAASD,IAE9B,GAAK,KAED5B,EAAiB2B,EAAc,GAAA1xH,OAAM3G,KAAK+C,cAAc8P,YAA2B,IAAfwlH,GAAqBj7C,MAAMnnE,OAAO,wBAAvE,QAAuG,OAC5InI,EAAMF,KAAK,CACToZ,MAAM,mBACN7b,MAAMurH,IAGFH,EAAe8B,GAAiC,IAAfA,GAAqBvlH,KAAK84B,MAE3DhB,EAAoBotF,EAAgB/yF,OAAQ,SAAC2F,EAAkBjU,GACnE,GAAIsmF,EAAKl6G,cAAc2O,MAAMilB,EAAE6hG,qBAAqBljH,GAAG,IAAM2nG,EAAKl6G,cAAc2O,MAAMilB,EAAE8hG,aAAanjH,GAAG,GAAG,CACzG,IAAMkzB,EAAkBy0E,EAAKl6G,cAAcmS,iBAAiByhB,EAAE6hG,oBAAoBvb,EAAKh9G,MAAM4+E,aAAal7E,UAAU6f,IAAImT,EAAE8hG,aACrHjwF,EAAgBllC,UACnBsnC,EAAoBA,EAAkB14B,KAAKs2B,IAG/C,OAAOoC,GACP5qC,KAAK+C,cAAc2O,MAAM,IAE3B5D,EAAMF,KAAK,CACToZ,MAAM,qBACN7b,MAAMnL,KAAK+C,cAAcS,YAAYonC,EAAkBl9B,MAAM,QAAQ,IAAI1N,KAAKC,MAAM4+E,aAAa9+C,YAAY,WAGzGs2F,EAAc,GAEdx2F,EAAgB7/B,KAAK+C,cAAcmS,iBAAiBlV,KAAKwH,MAAMq4B,cAAc7/B,KAAKC,MAAMkK,YAAYxG,UACpG+0H,EAAe74F,EAAcrc,IAAI00G,GAEjC1B,EAAmBC,GAAkBz2H,KAAK+C,cAAc2O,MAAM+kH,EAAe,IAAInhH,GAAG,GAAKtV,KAAK+C,cAAc2O,MAAMG,KAAKqE,IAAI,EAAEzI,WAAWzN,KAAK+C,cAAc2O,MAAMomH,GAAkBt0G,IAAIxjB,KAAK+C,cAAc2O,MAAM+kH,EAAe,KAAK/oH,MAAM1N,KAAKC,MAAM4+E,aAAa85C,kBAAoB34H,KAAK+C,cAAc2O,MAAM,GAE/SknH,EAA8B54H,KAAK+C,cAAc2O,MAAM,GAAG8R,IAAIxjB,KAAKC,MAAM4+E,aAAa85C,eAAejrH,MAAM8oH,GAC3GqC,EAAwBjuF,EAAkBl9B,MAAMgrH,GAAchrH,MAAMkrH,GACpEtB,EAAgBuB,EAAsBnrH,MAAM,OAU5C6pH,EAAmB13F,EAAcnyB,MAAM1N,KAAKwH,MAAM8nF,gBAClDkoC,EAAoBF,EAAc5pH,MAAM,KAAKA,MAAM1N,KAAKwH,MAAMovH,kBAC9DvtF,EAAMkuF,EAAiBjiH,GAAG,GAAKkiH,EAAkBh0G,IAAI+zG,GAAkB7pH,MAAM,KAAO1N,KAAK+C,cAAc2O,MAAM,GAInH2kH,EAAYzoH,KAAK,CACfoZ,MAAM,MACN7b,MAAK,GAAAxE,OAAI0iC,EAAI17B,QAAQ,GAAhB,KACLiqG,YAAY,wDAGdye,EAAYzoH,KAAK,CACfoZ,MAAM,QACN7b,MAAK,GAAAxE,OAAI+xH,EAAahrH,MAAM,KAAKC,QAAQ,GAApC,KACLiqG,YAAY,qCAGdye,EAAYzoH,KAAK,CACfoZ,MAAM,aACN7b,MAAK,GAAAxE,OAAI6vH,EAAiB7oH,QAAQ,GAA7B,KACLiqG,YAAW,gCAAAjxG,OAAiC3G,KAAKC,MAAM4+E,aAAai6C,aAAzD,uBAAAnyH,OAA2F3G,KAAKC,MAAM4+E,aAAa85C,cAAnH,yBAGPI,EAAiB/4H,KAAK+C,cAAcS,YAAYxD,KAAK+C,cAAcmS,iBAAiB4iH,EAAiB93H,KAAKC,MAAMkK,YAAYxG,WAClI0yH,EAAYzoH,KAAK,CACfoZ,MAAM,UACN7b,MAAM4tH,EAAe,IAAI/4H,KAAKC,MAAM4+E,aAAa9+C,YACjD63E,YAAY,yGAKM,EAEpB53G,KAAKgI,SAAS,CACZ8F,QACAwoH,aAJkB,EAKlBD,cACAqC,eACAnC,eACA0B,eACAvB,iBACAD,iBACAD,mBACA5rF,oBACAwsF,qBACAyB,wBACAD,oNAImBjY,mEACrB3gH,KAAKgI,SAAS,CACZ24G,0JAIMuD,GACRlkH,KAAKgI,SAAS,CACZk8G,wGAIuB1yG,EAAG4e,EAAOhS,8FAE/BskG,EAAU,UACN1iH,KAAKwH,MAAM08G,sBACZ,iBAWA,2CAVG8U,EAAkBxnH,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBo4G,EAAK1lH,MAAMkK,YAAYmD,QAAQC,eAAiBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAK1lH,MAAM4+E,aAAavxE,QAAQ8qB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAK1lH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIjpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAC9e0rH,EAAeD,EAAkBh5H,KAAK+C,cAAcmS,iBAAiBnD,SAASinH,EAAgBnuH,KAAK,IAAI7K,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GACzKgxG,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,wCAAA+D,OAAyCsyH,EAAatrH,QAAQ,GAA9D,KAAAhH,OAAoE3G,KAAKC,MAAMgK,cAA/E,iDAIAivH,EAAoB1nH,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBo4G,EAAK1lH,MAAMkK,YAAYmD,QAAQC,gBAAkB,KACtK4rH,EAAiBD,EAAoBl5H,KAAK+C,cAAcmS,iBAAiBnD,SAASmnH,EAAkBruH,KAAK,IAAI7K,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GACzK4uB,EAAoB,CACxBhzB,QAAQtN,KAAK+C,cAAc20B,kBAAkB13B,KAAKC,MAAM4+E,aAAa9+C,aAAamJ,UAE9EkwF,EAAqB5nH,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAKA,EAAIxmC,QAAQC,gBAAkB+yB,EAAkBhzB,QAAQC,eAAiBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAK1lH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,mBAAsB,KAC3Q8rH,EAAkBD,EAAqBp5H,KAAK+C,cAAcmS,iBAAiBnD,SAASqnH,EAAmBvuH,KAAK,IAAI7K,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GAClLgxG,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,2CAAA+D,OAA4CwyH,EAAexrH,QAAQ,GAAnE,KAAAhH,OAAyE3G,KAAKC,MAAMgK,cAApF,mCAAAtD,OAAmI0yH,EAAgB1rH,QAAQ,GAA3J,KAAAhH,OAAiK3G,KAAKC,MAAM4+E,aAAa9+C,YAAzL,gFAOmB,EAE7B//B,KAAKgI,SAAS,CACZ06G,UACA+E,sBAJ2B,GAK3B,WACA9B,EAAKoR,sTAIQxL,kCACTzjH,EAAW,GAEXmqB,EAAiB,CACrB3kB,QAAQtN,KAAK+C,cAAc20B,kBAAkB,OAAOwR,UAEhD5I,EAAoB,CACxBhzB,QAAQtN,KAAK+C,cAAc20B,kBAAkB13B,KAAKC,MAAM4+E,aAAa9+C,aAAamJ,mBAQ1EjoB,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAcsrF,2BAA2BruF,KAAKC,MAAMgK,eACzDjK,KAAK+C,cAAcysF,2BAA2Bv9D,EAAeqO,GAC7DtgC,KAAK+C,cAAckuB,gBAAgBjxB,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAMqQ,SACvEtQ,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,iBAAiB,CAACnC,KAAKC,MAAMqQ,+CARjGg/E,OACAsnC,OACA93F,OACAe,OAQF/3B,EAAS27G,YAAczjH,KAAK+C,cAAc2O,MAAM,GAChD5J,EAASg3B,aAAgB9+B,KAAK+C,cAAc2O,MAAMotB,GAAcx7B,QAAmDtD,KAAK+C,cAAc2O,MAAM,GAAlE1R,KAAK+C,cAAc2O,MAAMotB,GACnGh3B,EAAS+3B,cAAiB7/B,KAAK+C,cAAc2O,MAAMmuB,GAAev8B,QAAoDtD,KAAK+C,cAAc2O,MAAM,GAAnE1R,KAAK+C,cAAc2O,MAAMmuB,GACrG/3B,EAASwnF,eAAkBtvF,KAAK+C,cAAc2O,MAAM49E,GAAgBhsF,QAAqDtD,KAAK+C,cAAc2O,MAAM,GAApE1R,KAAK+C,cAAc2O,MAAM49E,GACvGxnF,EAAS8uH,iBAAoB52H,KAAK+C,cAAc2O,MAAMklH,GAAkBtzH,QAAuDtD,KAAK+C,cAAc2O,MAAM,GAAtE1R,KAAK+C,cAAc2O,MAAMklH,QAEnG52H,KAAKwH,MAAM08G,sBACZ,kBAkBA,6CAjBHp8G,EAASy4G,eAAgB,EACzBz4G,EAAS24G,gBAAiB,EAC1B34G,EAAS27G,YAAc37G,EAASg3B,aAChCh3B,EAASm7G,mBAAqB,uDAC9Bn7G,EAAS+uH,kBAAoB,CAC3ByC,cAAc,CACZn3H,KAAK,MACLsP,MAAM,MACN9N,SAAS,GACT41H,WAAW,WAEbC,aAAa75H,OAAA+4B,EAAA,EAAA/4B,CAAA,CACX85H,aAAa,YACVz5H,KAAKC,MAAMkK,kDAKlBrC,EAASy4G,eAAgB,EACzBz4G,EAAS24G,gBAAiB,EAC1B34G,EAASm7G,mBAAqB,GAC9Bn7G,EAAS27G,YAAczjH,KAAK+C,cAAcmS,iBAAiBpN,EAAS+3B,cAAc7/B,KAAKC,MAAMkK,YAAYxG,UACzGmE,EAAS+uH,kBAAoB,CAC3ByC,cAAc,CACZn3H,KAAK,MACLsP,MAAM,MACN9N,SAAS,GACT41H,WAAW,WAEbC,aAAa75H,OAAA+4B,EAAA,EAAA/4B,CAAA,CACX85H,aAAa,YACVz5H,KAAKC,MAAMkK,+EAQlBrC,EAAS27G,YAAY9wF,IAAI,KAC3B7qB,EAASgvH,yBAA0B,GAGjCvL,IACFzjH,EAAS46G,QAAU,KACnB56G,EAAS2/G,sBAAuB,GAGlCznH,KAAKgI,SAASF,EAAS,WACrB+9G,EAAK6T,kJAIA,IAAAnT,EAAAvmH,KAED25H,EAAY,SAAA15H,GAChB,IAAMP,EAASC,OAAA+4B,EAAA,EAAA/4B,CAAA,CACb4B,EAAE,EACFgN,GAAG,EACHzO,MAAM,OACHG,EAAMP,WAEX,OACEiJ,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACE9vF,MAAO/mB,EAAM+mB,MACbtnB,UAAWA,EACXi4G,WAAY,CACVj1G,SAAS,EACTD,WAAW,GAEbg1G,iBAAkB,CAChBpuG,GAAG,EACH3D,GAAG,GAELkyG,YAAa33G,EAAM23G,aAEnBjvG,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACEyJ,GAAI,EACJ3G,SAAU,CAAC,EAAE,GACbJ,MAAO,aACHrC,EAAM0C,WAET1C,EAAMkL,SAMTugH,EAAwC,UAA9B1rH,KAAKwH,MAAM08G,eACrB0V,EAA0C,aAA9B55H,KAAKwH,MAAM08G,eACvB2V,EAAwC,UAA9B75H,KAAKwH,MAAM08G,eACrB4V,EAAW95H,KAAKwH,MAAM08G,eAE5B,OACEv7G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAGPE,KAAKC,MAAMkK,aAAenK,KAAKC,MAAMkK,YAAY4vH,UAC/CpxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,cAKA5F,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CACEz5G,GAAI,EACJ/G,MAAO,OACPqD,WAAY,OACZwgB,KAAMnmB,KAAKC,MAAMkK,YAAY4vH,UAE7BpxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,OACP+D,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAGdzG,KAAKC,MAAMkK,YAAY4vH,YAOhC/5H,KAAKwH,MAAMq4B,eAAiB7/B,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMq4B,eAAevqB,GAAG,IAAMtV,KAAKwH,MAAM6uH,YAAYryH,OAAO,GACpH2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,eAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPkB,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdjB,KAAKwH,MAAM6uH,YAAYvwH,IAAK,SAACk0H,EAASj0H,GAAV,OAC1B4C,EAAAxI,EAAAC,cAACu5H,EAADh6H,OAAAC,OAAA,CACEiH,IAAG,eAAAF,OAAiBZ,GACpBrG,UAAW,CACT6O,GAAG,CAAC,EAAE,GACNlN,GAAG,CAAC,EAAE0E,EAAMwgH,EAAK/+G,MAAM6uH,YAAYryH,OAAO,EAAI,EAAI,GAClDlE,MAAM,CAAC,EAAE,SAEX6C,UAAW,CACTD,SAAS,CAAC,EAAE,KAEVs3H,QAShBh6H,KAAKC,MAAMgK,eACTtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,kBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOmmH,EAAU,EAAI,GAEvB5rH,MAAO,CAAC,EAAE,OACVo9G,QAAS,QACTK,SAAU,kBACVv7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUmrH,EACVjrH,YAAc,SAAAqG,GAAC,OAAIy/G,EAAK0T,UAAU,YAEpCtxH,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOq0H,EAAY,EAAI,GAEzB95H,MAAO,CAAC,EAAE,OACVo9G,QAAS,WACTK,SAAU,oBACVv7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUq5H,EACVn5H,YAAc,SAAAqG,GAAC,OAAIy/G,EAAK0T,UAAU,eAEpCtxH,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOs0H,EAAU,EAAI,GAEvB/5H,MAAO,CAAC,EAAE,OACVo9G,QAAS,QACTK,SAAU,mBAEVv7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUs5H,EACVp5H,YAAc,SAAAqG,GAAC,OAAIy/G,EAAK0T,UAAU,aAInCvO,GAAWkO,EACVlO,GAAW1rH,KAAKwH,MAAM+uH,aACpB5tH,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAGLV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,UACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,OAMOtJ,KAAKC,MAAMgK,cANlB,6BAM2DjK,KAAKwH,MAAMkvH,eANtE,OAUD12H,KAAKC,MAAMkK,aAAenK,KAAKwH,MAAMi8G,aAAezjH,KAAKwH,MAAM8uH,aAAet2H,KAAKC,MAAM4+E,aAC5Fl2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPyO,GAAI,CAAC,EAAE,IAEP5F,EAAAxI,EAAAC,cAACsnH,EAAD/nH,OAAAC,OAAA,CACE6d,MAAO,MACHzd,KAAKC,MAFX,CAGE0R,OAAQmoH,EACRnX,MAAO3iH,KAAKwH,MAAMm7G,MAClBD,QAAS1iH,KAAKwH,MAAMk7G,QACpBv4G,YAAanK,KAAKC,MAAMkK,YACxB20B,aAAc9+B,KAAKwH,MAAMi8G,YACzB5kC,aAAc7+E,KAAKC,MAAM4+E,aACzB0hC,cAAevgH,KAAKwH,MAAM+4G,cAC1BE,eAAgBzgH,KAAKwH,MAAMi5G,eAC3B14G,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzCijH,mBAAoBjjH,KAAKwH,MAAMy7G,mBAC/BtC,iBAAkB3gH,KAAK2gH,iBAAiBzhG,KAAKlf,MAC7CmjH,oBAAqBnjH,KAAKwH,MAAM27G,oBAChCpC,oBAAqB/gH,KAAK+gH,oBAAoB7hG,KAAKlf,MACnDqe,qBAAsBre,KAAKqe,qBAAqBa,KAAKlf,MACrD+hH,2BAA4B/hH,KAAK+hH,2BAA2B7iG,KAAKlf,QAEjE2I,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,IAGJoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAGToiH,EAAO,sBAAA/kH,OACiB3G,KAAKC,MAAMgK,cAD5B,oBAEH2vH,GAAS,6BAAAjzH,OACkB3G,KAAKC,MAAMgK,cAD7B,sBAUzBtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,qBAIVi3H,GACFlxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,EACPuG,MAAO,CACLi3G,SAAS,QAEXr8G,eAAgB,iBAGZjB,KAAKwH,MAAMsG,OAAU9N,KAAKwH,MAAMsG,MAAM9J,OAmBpChE,KAAKwH,MAAMsG,MAAMhI,IAAK,SAACk0H,EAASj0H,GAAV,OACxB4C,EAAAxI,EAAAC,cAACu5H,EAADh6H,OAAAC,OAAA,CACEiH,IAAG,SAAAF,OAAWZ,GACdrG,UAAW,CACTI,MAAM,CAAC,EAAE,SAEPk6H,MAxBNrxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,gCAtwBRC,gHCwDTqtH,8MAzDbntH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,kJAIL,IAAMxD,EAASC,OAAA+4B,EAAA,EAAA/4B,CAAA,CACb4B,EAAE,EACFgN,GAAG,EACHzO,MAAM,OACHE,KAAKC,MAAMP,WAGhB,OACEiJ,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAWA,EACXsnB,MAAOhnB,KAAKC,MAAM+mB,MAClB2wF,WAAY,CACVj1G,SAAS,EACTD,WAAW,GAEbg1G,iBAAkB,CAChBpuG,GAAG,EACH3D,GAAG,GAELkyG,YAAa53G,KAAKC,MAAM23G,aAGtB53G,KAAKC,MAAMkL,MACTxC,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACEyJ,GAAI,EACJ3G,SAAU,CAAC,EAAE,GACbJ,MAAO,aACHtC,KAAKC,MAAM0C,WAEd3C,KAAKC,MAAMkL,OAEXnL,KAAKC,MAAMwJ,UAAY,aArDnB5G,aCgKJq3H,8MA9Jb1yH,MAAQ,CACN2yH,qBAAoB,EACpB1S,sBAAqB,KAIvB1kH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAILlD,KAAK0H,gMAGkBC,EAAUC,+EACjC5H,KAAKkD,YAEC0sB,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClD8pH,EAAyBvqH,KAAKC,UAAUnI,EAAUoX,QAAQ6Y,YAAc/nB,KAAKC,UAAU9P,KAAKC,MAAM8e,QAAQ6Y,UAC1GyiG,EAAqBr6H,KAAKC,MAAMo6H,oBAAsB1yH,EAAU0yH,qBAAuBr6H,KAAKC,MAAMo6H,mBAClGlK,EAAuBnwH,KAAKC,MAAMkwH,sBAAwBxoH,EAAUwoH,uBAAyBnwH,KAAKC,MAAMkwH,sBAC1GiK,GAA0BxqG,GAAkByqG,GAAsBlK,IACpEnwH,KAAK0H,kRAMF1H,KAAKC,MAAMqQ,SAAYtQ,KAAKC,MAAMkwH,+DAC9B,iBAGHmK,EAAsBt6H,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAa,QAAQ,cAC/E8kH,EAAgBv6H,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,QAAQ,QAAQ,kBAAkB,OAAO,sBAErGwL,QAAQqD,IAAI,CAChBtkB,KAAKC,MAAM4nC,aAAa0yF,EAAcp4H,KAAKo4H,EAAcjtH,QAAQitH,EAAczyF,8BAOvE7mB,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAckuB,gBAAgBspG,EAAcp4H,KAAKnC,KAAKC,MAAMqQ,SACjEtQ,KAAK+C,cAAckuB,gBAAgBqpG,EAAoBt6H,KAAKC,MAAMqQ,SAClEtQ,KAAK+C,cAAcmiE,aAAao1D,EAAoBC,EAAcjtH,QAAQtN,KAAKC,MAAMqQ,qDANrFkqH,OACAC,OACAC,OAOFD,EAAcz6H,KAAK+C,cAAc2O,MAAM+oH,GACvCD,EAAiBx6H,KAAK+C,cAAc2O,MAAM8oH,GACpCL,EAAsBM,EAAYnlH,GAAG,IAAMtV,KAAK+C,cAAc2O,MAAMgpH,GAAeplH,GAAGmlH,IAAgBD,EAAellH,GAAG,qBAEvHtV,KAAKgI,SAAS,CACnBmyH,iNAIuB3oH,mEACzBxR,KAAKgI,SAAS,CACZy/G,sBAAqB,wIAKvB,IAAMjF,EAAwC,WAA7BxiH,KAAKC,MAAMwiH,cACtB8X,EAAgBv6H,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,QAAQ,QAAQ,kBAAkB,OAAO,aAC3G,OAAQ+sG,IAAaxiH,KAAKwH,MAAM2yH,sBAAuBn6H,KAAKwH,MAAMigH,qBA6E9D,KA5EF9+G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,EACHT,GAAI,EACJhB,MAAO,EACPyF,OAAQ,EACR/D,aAAc,EACdT,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBP,gBAAiB,eAEjBiI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMigH,qBACT9+G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,YAGrD1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,UACNG,MAAO,YAIbqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ9L,WAAY,IACZC,SAAU,OACVJ,MAAO,aACPgH,UAAW,UAGTtJ,KAAKwH,MAAMigH,qBACT,uEAEA,4JAIHznH,KAAKwH,MAAMigH,sBACV9+G,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4C,UAAW2kH,IACX5oG,YAAa,CACX9e,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjBqe,eAAgB,CACd7c,WAAW,EACXJ,KAAK,QACLvC,MAAM,OACNuG,MAAM,CACJ3D,SAAS,QAEXuE,UAAU,OACVkE,MAAM,oBAER4S,aAAc,OACdF,WAAY,UACZlM,OAAQ,mBACR5J,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzCoe,OAAQ,CAACm8G,EAAcjtH,QAAQtN,KAAKC,MAAM6e,KAAKkX,MAAMkwC,iBAAiB,kBAtJlDrjE,aCmnDrB83H,8MAvmDbnzH,MAAQ,CACNsG,MAAM,GACN60G,MAAM,KACNiY,OAAO,KACPlY,QAAQ,KACR2T,YAAY,GACZwE,YAAY,CACV,CACE1vH,MAAM,GACN5H,KAAK,MACL0K,MAAM,WAER,CACE9C,MAAM,EACN5H,KAAK,QACL0K,MAAM,WAER,CACE9C,MAAM,EACN5H,KAAK,OACL0K,MAAM,UAER,CACE9C,MAAM,EACN5H,KAAK,OACL0K,MAAM,YAGV6sH,UAAU,KACVhd,WAAW,KACXlG,YAAY,KACZztG,YAAY,KACZs5G,YAAY,KACZsX,QAAQ,SACRC,aAAY,EACZ1E,aAAY,EACZx3F,aAAa,KACb+/C,aAAa,KACbh/C,cAAc,KACd51B,cAAc,KACdusH,iBAAiB,EACjByE,eAAe,KACfxE,eAAe,KACfyE,eAAe,KACfhX,eAAe,KACf+D,eAAe,KACf0O,eAAe,KACfpW,eAAc,EACdjxB,eAAe,KACf6rC,gBAAgB,KAChBza,gBAAe,EACf0a,gBAAgB,KAChBhrH,gBAAgB,KAChBqwG,gBAAe,EACfmW,iBAAiB,KACjBjW,kBAAiB,EACjBkW,kBAAkB,KAClBjsF,kBAAkB,KAClBywF,mBAAmB,KACnBC,mBAAmB,KACnBrY,mBAAmB,KACnBxB,oBAAoB,KACpB0B,oBAAoB,KACpBoY,oBAAoB,KACpB9T,sBAAqB,EACrBqP,yBAAwB,EACxB0E,yBAAwB,KAI1Bz4H,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,uKAK9CD,KAAKkD,YACLlD,KAAKgI,SAAS,CACZk8G,eAAe,QACf,WACA/gH,EAAK4zH,kRAKD9iE,EAAuBj0D,KAAKC,MAAMkK,YAAYsxH,wBAC9Cz7H,KAAKC,MAAM4nC,aAAaosB,EAAqB9xD,KAAK8xD,EAAqB3mD,QAAQ2mD,EAAqBnsB,0LAGnFngC,EAAUC,8FACjC5H,KAAKkD,YAEC0sB,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClDi7G,EAAwB3jH,EAAUs8G,iBAAmBlkH,KAAKwH,MAAM08G,eAChE8S,EAA0BpvH,EAAU+4G,mBAAqB3gH,KAAKwH,MAAMm5G,iBACpE2B,EAAqBzyG,KAAKC,UAAUnI,EAAUwC,eAAiB0F,KAAKC,UAAU9P,KAAKC,MAAMkK,aACzF8sH,EAAsBpnH,KAAKC,UAAUnI,EAAUk3E,gBAAkBhvE,KAAKC,UAAU9P,KAAKC,MAAM4+E,eAC7F0sC,GAAyB37F,GAAkBonG,GAA2B1U,KAClE4Y,EAAiB3P,EAAwB,KAAOvrH,KAAKwH,MAAM0zH,eACjEl7H,KAAKgI,SAAS,CACZkzH,iBACArE,kBAAkB,KAClBC,yBAAwB,GACxB,WACAhsH,EAAKisH,WAAWxL,MAIhB0L,GACFj3H,KAAK+gH,sBAGD2a,EAAoB9zH,EAAU2zH,sBAAwBv7H,KAAKwH,MAAM+zH,oBACjEI,EAAwB/zH,EAAUszH,iBAAmBl7H,KAAKwH,MAAM0zH,gBAClEQ,GAAqBC,GAAyBpQ,KAC5CoQ,EACF37H,KAAKgI,SAAS,CACZozH,gBAAgB,OAETM,GACT17H,KAAK47H,yBAEP57H,KAAKohH,2KAKP,IAAIV,GAAiB,EACfmb,EAAgB77H,KAAKwH,MAAMqzH,YAAY,GACvCiB,EAAgBn8H,OAAOC,OAAO,GAAGI,KAAKwH,MAAMqzH,aAAalmH,MAE3DonH,EAAU/7H,KAAKwH,MAAMszH,UAAY96H,KAAK+C,cAAc8P,YAAiC,IAArB7S,KAAKwH,MAAMszH,WAAgBkB,IAAIH,EAAc1wH,MAAM0wH,EAAct4H,MAAQvD,KAAK+C,cAAc8P,cAAcmpH,IAAIH,EAAc1wH,MAAM0wH,EAAct4H,MACpNw4H,EAAU/7H,KAAK+C,cAAc8P,YAAYkpH,EAAQ9lH,OAAO,cAAc,cAEtE,IAAMgmH,EAAQj8H,KAAK+C,cAAc8P,YAAY7S,KAAKwH,MAAM2zH,gBAAgB,IAAIn7H,KAAK+C,cAAc8P,cAAcoD,OAAO,YAAY,uBAC1HimH,EAAUl8H,KAAK+C,cAAc8P,cAAcmpH,IAAIF,EAAc3wH,MAAM2wH,EAAcv4H,MACvF,OAAQvD,KAAKwH,MAAM08G,gBACjB,QACA,IAAK,OACHxD,EAAiBub,EAAME,QAAQD,IAAYD,EAAMlmH,eAAegmH,GAClE,MACA,IAAK,gBAC+B,SAA9B/7H,KAAKwH,MAAM0zH,iBACbxa,EAAiBub,EAAME,QAAQD,IAAYD,EAAMlmH,eAAegmH,IAKtE/7H,KAAKgI,SAAS,CACZ04G,kMAIsB5C,iCAAW,KACnCA,EAAa99G,KAAK+C,cAAc2O,MAAMosG,GACtC99G,KAAKgI,SAAS,CACZ81G,cACA,WACAb,EAAK2e,4SAKiB57H,KAAK+C,cAAcglC,6BAArCP,SACF3yB,EAAY9C,SAASe,KAAK84B,MAAM,KAChCpE,IACF3yB,EAAY2yB,EAAU3yB,WAExBA,GAAa7U,KAAKwH,MAAMuzH,0BACjBlmH,yRAIHumH,EAAkB,MAClBp7H,KAAKwH,MAAMs2G,aAAc99G,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMs2G,YAAYxoG,GAAG,IAAyC,OAAnCtV,KAAKwH,MAAM+zH,0CACvFv7H,KAAKwH,MAAM08G,sBACZ,uCACG58D,EAAWv1C,SAASe,KAAK84B,MAAM,cACL5rC,KAAKo8H,qCAA/BC,SACAH,EAAUl8H,KAAK+C,cAAc8P,YAA8B,IAAlBwpH,IAC3CC,EAAUt8H,KAAK+C,cAAc8P,YAA2C,IAA/B7S,KAAKwH,MAAM+zH,sBAC5CY,QAAQD,KAClBI,EAAUJ,GAENK,EAAcxqH,SAASuqH,EAAQlhF,GAAG1nC,UAAU,KAAM4zC,EAClDk1E,EAAczqH,SAASmqH,EAAQ9gF,GAAG1nC,UAAU,KAAM4zC,EAClDm1E,EAAgBz8H,KAAKwH,MAAMs2G,WAAWpwG,MAAM6uH,GAAa/4G,IAAIg5G,GAE7Dl8G,EAAam8G,EAAcj5G,IAAIxjB,KAAKwH,MAAMs2G,YAAYpwG,MAAM,KAI9D9K,+BAA6B5C,KAAKwH,MAAMs2G,WAAWnwG,QAAQ,eAAM3N,KAAKC,MAAMgK,iDAAwCqyH,EAAQl/C,MAAMnnE,OAAO,uEAA8DwmH,EAAc9uH,QAAQ,eAAM3N,KAAKC,MAAMkK,YAAY0tB,SAAS11B,2BAAkB0P,KAAKwF,KAAKiJ,2BAC/RzO,KAAKwF,KAAKiJ,GAAY,MACxB1d,GAAI,4FAENA,GAAI,4BAAA+D,OAAgC3G,KAAKC,MAAMwB,MAAMC,OAAOooB,MAAxD,qDAAAnjB,OAAiH3G,KAAKC,MAAMgK,cAA5H,sFACJmxH,EAAkB,CAChBx4H,OACAR,KAAK,cACLI,UAAU,CACRF,MAAM,8EAQhBtC,KAAKgI,SAAS,CACZozH,uKAOF,MAAO,CAFcrpH,SAAS/R,KAAKwH,MAAM+zH,mEAKtBnrG,GACnB,IAAIvS,EAAa,KACbw6C,EAAe,GACbqkE,EAAS18H,KAAK+C,cAAc+yB,KAAK1F,GACnCusG,EAAe5qH,SAAS/R,KAAKwH,MAAM+zH,qBACvC,OAAQv7H,KAAKwH,MAAM08G,gBACjB,IAAK,OACHrmG,EAAa,cACbw6C,EAAe,CAACqkE,EAAOC,GACzB,MACA,IAAK,gBACH9+G,EAAa,kBACbw6C,EAAe,CAACqkE,GAKpB,MAAO,CACL7+G,aACAw6C,0PAMIvqD,EAAQ,GACRuoH,EAAc,GACdC,GAAc,WAaVr1G,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAc+wD,2BACnB9zD,KAAK+C,cAAc8oC,0BAA0B7rC,KAAKC,MAAM4+E,aAAa18E,KAAK,UAC1EnC,KAAK+C,cAAc8oC,0BAA0B7rC,KAAKC,MAAM4+E,aAAa18E,KAAM,eAC3EnC,KAAK+C,cAAckuB,gBAAgBjxB,KAAKC,MAAM4+E,aAAa9+C,YAAY//B,KAAKC,MAAMkK,YAAYsxH,eAAenuH,SAC7GtN,KAAKC,MAAMqQ,QAAUtQ,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,SAAS,CAACnC,KAAKC,MAAMqQ,UAAY,KAC1HtQ,KAAKC,MAAMqQ,QAAUtQ,KAAK+C,cAAcu8B,mBAAmBt/B,KAAKC,MAAM4+E,aAAa18E,KAAKnC,KAAKC,MAAMqQ,SAAWtQ,KAAK+C,cAAc2O,MAAM,GACvI1R,KAAKC,MAAMqQ,QAAUtQ,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAMkK,YAAYsxH,eAAet5H,KAAK,QAAQ,CAACnC,KAAKC,MAAMqQ,UAAYtQ,KAAK+C,cAAc2O,MAAM,GAChK1R,KAAK+C,cAAc+iC,kBAAkB9lC,KAAKC,MAAMkK,YAAYsxH,eAAet5H,KAAK,UAAUnC,KAAKC,MAAMkK,YAAYsxH,eAAe1jE,UAAU,UAE1I/3D,KAAKC,MAAMqQ,QAAUtQ,KAAK+C,cAAc+iC,kBAAkB9lC,KAAKC,MAAM4+E,aAAa18E,KAAK,UAAUnC,KAAKC,MAAM4+E,aAAa9mB,UAAU,SAAS,CAACxmD,OAAO,CAACkR,SAASziB,KAAKC,MAAMqQ,WAAa,2CApBtLssH,OACAxuD,OACAyuD,OACAvX,OACAwX,OACAC,OACAC,OACAC,OAEAC,OAcI58F,EAAoBtgC,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAYzV,KAAKC,MAAM4+E,aAAa9+C,cAE9Fs7F,EAAqB,GACrBpD,EAAej4H,KAAK+C,cAAc2O,MAAM,GACxCyrH,EAAmBn9H,KAAK+C,cAAc2O,MAAM,GAE5CkrH,GAAuBA,EAAoB54H,SAC7Cm5H,EAAmBtrH,KAAK69C,IAAIktE,EAAoB,GAAG5qH,UAAU4qH,EAAoBA,EAAoB54H,OAAO,GAAGgO,WAAW,MAC1HqpH,EAAqBuB,EAAoB92H,IAAK,SAAA0L,GAC5C,IAAM4e,EAASu1F,EAAK5iH,cAAcmS,iBAAiB1D,EAAGrG,MAAMm1B,EAAkB38B,UAE9E,OADAs0H,EAAeA,EAAa/lH,KAAKke,GAC1B,CACLA,SACAvoB,KAAK2J,EAAG3J,KACRmK,UAAUR,EAAGQ,UACb6e,UAAUrf,EAAGse,YACbxZ,KAAKqvG,EAAK5iH,cAAc8P,YAAmC,IAAvBd,SAASP,EAAGQ,YAAiBorE,MAAMnnE,OAAO,oBAAoB,WAKlGglH,EAAiB,GACnBmC,EAAmBp9H,KAAK+C,cAAc2O,MAAM,IAC5CurH,oCACIj9H,KAAK+C,cAAc2N,aAAausH,EAAhC,eAAA/7G,EAAAvhB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA6C,SAAA+S,EAAO/c,GAAP,IAAA0gC,EAAAm4C,EAAA,OAAA3uD,EAAA7wB,EAAA+Q,KAAA,SAAAgT,GAAA,cAAAA,EAAA9S,KAAA8S,EAAA7S,MAAA,YAC7Cs0G,EAAK1lH,MAAMqQ,SAAWxJ,EAAEkhC,cAAgBlhC,EAAEkhC,aAAaq1F,WAAav2H,EAAEkhC,aAAaq1F,UAAU9vH,gBAAkBo4G,EAAK1lH,MAAMqQ,QAAQ/C,eADrF,CAAA2W,EAAA7S,KAAA,eAAA6S,EAAA7S,KAAA,EAEvBs0G,EAAK5iH,cAAcglC,aAAajhC,EAAEyc,aAFX,QAEzCikB,EAFyCtjB,EAAA9P,QAIvCurE,EAAgBgmC,EAAK5iH,cAAcmS,iBAAiBpO,EAAEkhC,aAAa5X,OAAOkQ,EAAkB38B,UAClGy5H,EAAmBA,EAAiBlrH,KAAKytE,GACzCs7C,EAAertH,KAAK,CAClBwiB,OAAOuvD,EACP93E,KAAKf,EAAEqX,gBACP0S,UAAU80F,EAAK1lH,MAAM4+E,aAAa9+C,YAClCzpB,KAAKqvG,EAAK5iH,cAAc8P,YAA0C,IAA9Bd,SAASy1B,EAAU3yB,YAAiBuoE,MAAMnnE,OAAO,oBAAoB,UAV9D,wBAAAiO,EAAA1R,SAAAqR,EAAA7jB,SAA7C,gBAAAyS,GAAA,OAAAyO,EAAAxO,MAAA1S,KAAA2S,YAAA,YAiBRoqH,EAAmB/8H,KAAK+C,cAAcmS,iBAAiB6nH,EAAiB/8H,KAAKC,MAAM4+E,aAAal7E,UAE1Fo/B,EAAiBqrC,EAAcpuE,KAAK+C,cAAcmS,iBAAiBk5D,EAAYpuE,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GAC3I4rH,EAAmBlvD,EAAcpuE,KAAK+C,cAAcS,YAAYu/B,EAAe,GAAG,IAAI/iC,KAAKC,MAAMgK,cAAiBjK,KAAKwH,MAAMsG,MAAM9J,OAAShE,KAAKwH,MAAMsG,MAAM,GAAG3C,MAAQnL,KAAK+C,cAAcS,YAAYu/B,EAAe,GAAG,IAAI/iC,KAAKC,MAAMgK,cAC9O6D,EAAMF,KAAK,CACToZ,MAAM,qBACN7b,MAAMmyH,IAGRT,EAAmBA,EAAmB78H,KAAK+C,cAAcmS,iBAAiB2nH,EAAiB78H,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GACjJ6rH,EAAsBV,EAAmB78H,KAAK+C,cAAcS,YAAYq5H,EAAiB,GAAG,IAAI78H,KAAKC,MAAM4+E,aAAa18E,KAAQnC,KAAKwH,MAAMsG,MAAM9J,OAAShE,KAAKwH,MAAMsG,MAAM,GAAG3C,MAAQnL,KAAK+C,cAAcS,YAAYq5H,EAAiB,GAAG,IAAI78H,KAAKC,MAAM4+E,aAAa18E,KAC3Q2L,EAAMF,KAAK,CACToZ,MAAK,GAAArgB,OAAI3G,KAAKC,MAAM4+E,aAAa18E,KAA5B,iBACLgJ,MAAMoyH,IAGFC,EAA4BlY,EAAmBtlH,KAAK+C,cAAcS,YAAY8hH,EAAiB,GAAG,IAAItlH,KAAKC,MAAM4+E,aAAa9+C,YAAe//B,KAAKwH,MAAMsG,MAAM9J,OAAShE,KAAKwH,MAAMsG,MAAM,GAAG3C,MAAQnL,KAAK+C,cAAcS,YAAY8hH,EAAiB,GAAG,IAAItlH,KAAKC,MAAM4+E,aAAa9+C,YACxRjyB,EAAMF,KAAK,CACToZ,MAAM,oBACN7b,MAAMqyH,IASFC,EAAwBz9H,KAAK+C,cAAcS,YAAYy0H,EAAa,GAAG,IAAIj4H,KAAKC,MAAM4+E,aAAa9+C,YACzGjyB,EAAMF,KAAK,CACToZ,MAAM,gBACN7b,MAAMsyH,IAGF7C,EAAS3C,EAAaz0G,IAAIq5G,GAAkBnvH,MAAM,UAAU8V,IAAI25G,GAEtErvH,EAAMF,KAAK,CACToZ,MAAM,uBACN7b,MAAMyvH,EAAOp3G,IAAI,GAAG9V,MAAM,KAAKC,QAAQ,GAAG,MAE5CG,EAAMF,KAAK,CACToZ,MAAM,wBACN7b,MAAMyvH,EAAOltH,MAAM,KAAKC,QAAQ,GAAG,MAG/BkyB,EAAgBi9F,GAAcA,EAAW1sG,OAASpwB,KAAK+C,cAAcmS,iBAAiB4nH,EAAW1sG,OAAOpwB,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GACpKgsH,EAAgB19H,KAAK+C,cAAcS,YAAYq8B,EAAc,GACnEw2F,EAAYzoH,KAAK,CACfoZ,MAAM,kBACN4wF,YAAY,8BACZzsG,MAAMuyH,EAAc,IAAI19H,KAAKC,MAAM4+E,aAAa9+C,cAG5C24F,EAAeqE,EAAiBv5G,IAAIq5G,GAC1CxG,EAAYzoH,KAAK,CACfoZ,MAAM,QACN7b,MAAK,GAAAxE,OAAI+xH,EAAahrH,MAAM,KAAKC,QAAQ,GAApC,KACLiqG,YAAY,qCAGdye,EAAYzoH,KAAK,CACfoZ,MAAK,GAAArgB,OAAI3G,KAAKC,MAAM4+E,aAAa18E,KAA5B,YACLgJ,MAAK,GAAAxE,OAAI3G,KAAK+C,cAAcS,YAAYu5H,EAAiB,GAApD,KAAAp2H,OAA0D3G,KAAKC,MAAM4+E,aAAa18E,QAGzF66H,EAAYA,EAAYh9H,KAAK+C,cAAcmS,iBAAiB8nH,EAAUh9H,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GAC5HqnH,EAAiB/4H,KAAK+C,cAAcS,YAAYw5H,EAAU,GAChE3G,EAAYzoH,KAAK,CACfoZ,MAAM,oBACN7b,MAAK,GAAAxE,OAAIoyH,EAAJ,KAAApyH,OAAsB3G,KAAKC,MAAM4+E,aAAa9+C,eAI/C49F,EAAwBX,EAAU9qH,KAAKkrH,GAEzCQ,EAAiBV,EAAgBA,EAAcj4F,OAAQ,SAAC44F,EAAWC,GACrE,IAAMxpD,EAAmBqxC,EAAK5iH,cAAc2O,MAAMosH,EAAM91F,aAAa+1F,IAC/DC,EAAerY,EAAK5iH,cAAcmS,iBAAiB4oH,EAAM91F,aAAa78B,MAAMw6G,EAAK1lH,MAAMkK,YAAYxG,UAKzG,OAJIq6H,EAAa1oH,GAAG,KAClBuoH,EAAaA,EAAW3rH,KAAK8rH,EAAatwH,MAAM4mE,KAG3CupD,GACP79H,KAAK+C,cAAc2O,MAAM,IAAM1R,KAAK+C,cAAc2O,MAAM,GAI1DksH,EAAiB/9F,EAAcvqB,GAAG,GAAKzD,KAAKwF,KAAKumH,EAAep6G,IAAIqc,IAAkB,EAKhFynB,EAAWv1C,SAASe,KAAK84B,MAAM,KAC/BqyF,EAAcj+H,KAAK+C,cAAc2O,MAAM41C,GAAUn1C,MAAMyrH,GACvDM,EAAgBr+F,EAAcvqB,GAAG,GAAKqoH,EAAsBn6G,IAAIqc,GAAiB7/B,KAAK+C,cAAc2O,MAAM,GAC3F,MACE,OACjBysH,EAAmBtsH,KAAKqE,IAAI,EAAErE,KAAKgF,MAAMonH,EAAYz6G,IADpC,UAEjB4lB,EAAM60F,EAAY3oH,GAAG,GAAK4oH,EAAcxwH,MAHzB,OAG6C8V,IAAI26G,GAAkBzwH,MAAM,KAAO1N,KAAK+C,cAAc2O,MAAM,GAI9H2kH,EAAYzoH,KAAK,CACfoZ,MAAM,MACN7b,MAAK,GAAAxE,OAAIyiC,EAAIz7B,QAAQ,GAAhB,KACLiqG,YAAY,+DAGRwmB,EAAcp+H,KAAKwH,MAAMszH,UAAY96H,KAAK+C,cAAc8P,YAAiC,IAArB7S,KAAKwH,MAAMszH,WAAgB19C,MAAMnnE,OAAO,oBAAsB,GACxIogH,EAAYzoH,KAAK,CACfzC,MAAMizH,EACNp3G,MAAM,sBACN4wF,YAAY,6BAGd53G,KAAKgI,SAAS,CACZ8F,QACA8sH,SACAoC,YACA3G,cACAC,cACAz2F,gBACAo7F,iBACAI,mNAI2B1a,mEAC7B3gH,KAAKgI,SAAS,CACZ24G,0JAIMuD,GACRlkH,KAAKgI,SAAS,CACZk8G,6DAIcgX,GAChBl7H,KAAKgI,SAAS,CACZkzH,yGAIwBp0H,6FACpBw0H,EAAqB,KACrBH,EAAkBr0H,EAAEmf,OAAO9a,MAC3BkzH,EAAWr+H,KAAK+C,cAAc8P,gBAC9BopH,EAAQj8H,KAAK+C,cAAc8P,YAAYsoH,EAAgB,IAAIkD,EAASpoH,OAAO,YAAY,uBAAuB+lH,IAAI,EAAE,WAChHsC,kCACJ/C,EAAsBxpH,SAASkqH,EAAM7gF,GAAG1nC,UAAU,cAEtB1T,KAAKo8H,8BAA/BC,SACFd,EAAoBc,IACtBd,EAAsBc,GAGxBr8H,KAAKgI,SAAS,CACZmzH,kBACAG,qBACAC,uBACA,WACA1V,EAAKzE,6MAKYka,wFACfS,EAAU/7H,KAAKwH,MAAMszH,UAAY96H,KAAK+C,cAAc8P,YAAiC,IAArB7S,KAAKwH,MAAMszH,WAAkB96H,KAAK+C,cAAc8P,cAChHopH,EAAQF,EAAQC,IAAIV,EAAmBnwH,MAAMmwH,EAAmB/3H,MAAMy4H,IAAI,EAAE,UAE5Eb,EAAkBc,EAAMhmH,OAAO,cACjCslH,EAAsBxpH,SAASkqH,EAAM7gF,GAAG1nC,UAAU,cAGtB1T,KAAKo8H,8BAA/BC,SACFd,EAAoBc,IACtBd,EAAsBc,GAGxBr8H,KAAKgI,SAAS,CACZmzH,kBACAG,qBACAC,gNAIuB/pH,EAAG4e,EAAOhS,oGAE/BskG,EAAU,KACV0Y,EAAkB,UACdp7H,KAAKwH,MAAM08G,sBACZ,gBAWA,yBA0BA,qBAWA,yCA/CGqa,EAAkB/sH,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBg5G,EAAKtmH,MAAMkK,YAAYmD,QAAQC,eAAiBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAAS8xF,EAAKtmH,MAAM4+E,aAAavxE,QAAQ8qB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAAS8xF,EAAKtmH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIjpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAC9eixH,EAAeD,EAAkBv+H,KAAK+C,cAAcmS,iBAAiBnD,SAASwsH,EAAgB1zH,KAAK,IAAI7K,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GACzK0pH,EAAkB,CAChBh5H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,wCAAA+D,OAAyC63H,EAAa7wH,QAAQ,GAA9D,KAAAhH,OAAoE3G,KAAKC,MAAMgK,cAA/E,+CAIEjK,KAAKwH,MAAM0zH,sBACZ,iBASA,2CARHE,EAAkB,CAChBh5H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,0DAAA+D,OAA2D3G,KAAK+C,cAAc8P,YAA2C,IAA/B7S,KAAKwH,MAAM+zH,qBAA0Bn+C,MAAMnnE,OAAO,oBAA5I,sDAIAwoH,EAA0BjtH,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBg5G,EAAKtmH,MAAMkK,YAAYmD,QAAQC,eAAiBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAAS8xF,EAAKtmH,MAAM4+E,aAAavxE,QAAQ8qB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAAS8xF,EAAKtmH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIjpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KACtfmxH,EAAiBD,EAA0Bz+H,KAAK+C,cAAcmS,iBAAiBnD,SAAS0sH,EAAwB5zH,KAAK,IAAI7K,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GAC3L0pH,EAAkB,CAChBh5H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,uDAAA+D,OAAwD+3H,EAAe/wH,QAAQ,GAA/E,KAAAhH,OAAqF3G,KAAKC,MAAMgK,cAAhG,0HAQJivH,EAAoB1nH,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBg5G,EAAKtmH,MAAMkK,YAAYmD,QAAQC,gBAAkB,KACtK4rH,EAAiBD,EAAoBl5H,KAAK+C,cAAcmS,iBAAiBnD,SAASmnH,EAAkBruH,KAAK,IAAI7K,KAAKC,MAAMkK,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GAC/K0pH,EAAkB,CAChBh5H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,2CAAA+D,OAA4CwyH,EAAexrH,QAAQ,GAAnE,KAAAhH,OAAyE3G,KAAKC,MAAMgK,cAApF,kDAIAq2B,EAAoBtgC,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAYzV,KAAKC,MAAM4+E,aAAa9+C,cAC5Fq5F,EAAqB5nH,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAKA,EAAIxmC,QAAQC,gBAAkB+yB,EAAkBhzB,QAAQC,eAAiBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAAS8xF,EAAKtmH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,mBAAsB,KAC3Q8rH,EAAkBD,EAAqBp5H,KAAK+C,cAAcmS,iBAAiBnD,SAASqnH,EAAmBvuH,KAAK,IAAIy1B,EAAkB38B,UAAY3D,KAAK+C,cAAc2O,MAAM,GAC7K0pH,EAAkB,CAChBh5H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,yCAAA+D,OAA0C0yH,EAAgB1rH,QAAQ,GAAlE,KAAAhH,OAAwE3G,KAAKC,MAAM4+E,aAAa9+C,YAAhG,gFAOU,GACS,EAE7B//B,KAAKgI,SAAS,CACZ06G,UACA4T,aALkB,EAMlB8E,kBACA3T,sBAN2B,GAO3B,WACAlB,EAAKwQ,oTAIQxL,kCACTzjH,EAAW,YAIPmZ,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAckuB,gBAAgBjxB,KAAKC,MAAMgK,cAAcjK,KAAKC,MAAMqQ,SACvEtQ,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,cAAc,CAACnC,KAAKC,MAAMqQ,+CAJ9FwuB,OACAg8F,OAMFhzH,EAASgzH,UAAYA,GAAa/oH,SAAS+oH,GAAW,EAAI/oH,SAAS+oH,GAAa,KAChFhzH,EAASkzH,YAAclzH,EAASgzH,WAAahzH,EAASgzH,WAAW/oH,SAASe,KAAK84B,MAAM,KACrF9jC,EAASg3B,aAAgB9+B,KAAK+C,cAAc2O,MAAMotB,GAAcx7B,QAAmDtD,KAAK+C,cAAc2O,MAAM,GAAlE1R,KAAK+C,cAAc2O,MAAMotB,GAI9E,cAFjBolF,EAAiBlkH,KAAKwH,MAAM08G,iBAEIp8G,EAASkzH,cAC3C9W,EAAiB,OACjBp8G,EAASo8G,eAAiBA,GAIxBp8G,EAASgzH,WAA8B,SAAjB5W,GACxBA,EAAiB,gBACjBp8G,EAASozH,eAAiB,OAC1BpzH,EAASo8G,eAAiBA,GACA,kBAAjBA,GAAqCp8G,EAASozH,gBAAmBl7H,KAAKwH,MAAM0zH,iBACrFpzH,EAASozH,eAAiB,QAIP,kBAAjBhX,GAAoCp8G,EAASkzH,cAC/C9W,EAAiB,WACjBp8G,EAASo8G,eAAiBA,QAGpBA,SACD,iBAOA,0BASA,6CAfHp8G,EAASy4G,eAAgB,EACzBz4G,EAAS24G,gBAAiB,EAC1B34G,EAAS27G,YAAc37G,EAASg3B,aAChCh3B,EAASm7G,mBAAT,8CAAAt8G,OAA4E3G,KAAKC,MAAMgK,cAAvF,WACAnC,EAAS25G,oBAAsBzhH,KAAK+C,cAAcwxD,qBAAqBzsD,EAASg3B,aAAa9+B,KAAKC,MAAMkK,YAAYxG,8CAGpHmE,EAASy4G,eAAgB,EACzBz4G,EAASm7G,mBAAqB,GAC9Bn7G,EAAS27G,YAAc37G,EAASg3B,aAChCh3B,EAAS24G,eAA+C,WAA9BzgH,KAAKwH,MAAM0zH,eACrCpzH,EAASqzH,gBAAkBn7H,KAAK+C,cAAc8P,YAA+B,IAAnB/K,EAASgzH,WAAgB7kH,OAAO,cAC1FnO,EAASm7G,mBAAT,8CAAAt8G,OAA4E3G,KAAKC,MAAMgK,cAAvF,WACAnC,EAAS25G,oBAAsBzhH,KAAK+C,cAAcwxD,qBAAqBzsD,EAASg3B,aAAa9+B,KAAKC,MAAMkK,YAAYxG,8CAGpHmE,EAASy4G,eAAgB,EACzBz4G,EAAS24G,gBAAiB,EAC1B34G,EAASm7G,mBAAqB,GAC9Bn7G,EAAS27G,YAAczjH,KAAK+C,cAAcmS,iBAAiBpN,EAAS+3B,cAAc7/B,KAAKC,MAAMkK,YAAYxG,kFAMzG4nH,IACFzjH,EAAS46G,QAAU,KACnB56G,EAASszH,gBAAkB,KAC3BtzH,EAAS2/G,sBAAuB,aAGHznH,KAAKo8H,+BAA9BuC,SACAzC,EAAUl8H,KAAK+C,cAAc8P,YAA6B,IAAjB8rH,GAAuB1oH,OAAO,cAC7EnO,EAAS0zH,0BAA0B1zH,EAASgzH,WAAY96H,KAAK+C,cAAc8P,YAA+B,IAAnB/K,EAASgzH,WAAgB7kH,OAAO,gBAAgBimH,EAIvIl8H,KAAKgI,SAASF,EAAS,WACrBm/G,EAAKyS,kJAIA,IAAAtS,EAAApnH,KAED4+H,EAAuC,SAA9B5+H,KAAKwH,MAAM08G,eACpB2V,EAAwC,UAA9B75H,KAAKwH,MAAM08G,eACrB2a,EAAwC,UAA9B7+H,KAAKwH,MAAM08G,eACrB0V,EAA0C,aAA9B55H,KAAKwH,MAAM08G,eACvB4a,EAA2C,kBAA9B9+H,KAAKwH,MAAM08G,eACxB4V,EAAW95H,KAAKwH,MAAM08G,eACtB6a,GAAe/+H,KAAKwH,MAAMwzH,YAEhC,OACEryH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAGPE,KAAKC,MAAMwc,aACT9T,EAAAxI,EAAAC,cAAC4+H,GACKh/H,KAAKC,OAKbD,KAAKC,MAAMkK,aAAenK,KAAKC,MAAMkK,YAAY4vH,UAC/CpxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,eAKA5F,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CACEz5G,GAAI,EACJ/G,MAAO,OACPqD,WAAY,OACZwgB,KAAMnmB,KAAKC,MAAMkK,YAAY4vH,UAE7BpxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,OACP+D,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAGdzG,KAAKC,MAAMkK,YAAY4vH,YAOhC/5H,KAAKwH,MAAMq4B,eAAiB7/B,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMq4B,eAAevqB,GAAG,IAAMtV,KAAKwH,MAAM6uH,YAAYryH,OAAO,GACpH2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,eAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,EACPuG,MAAO,CACLokH,UAAU,IACVzqG,KAAK,UACLs9F,SAAS,QAEXr8G,eAAgB,iBAGdjB,KAAKwH,MAAM6uH,YAAYvwH,IAAK,SAACk0H,EAASj0H,GAAV,OAC1B4C,EAAAxI,EAAAC,cAAC6+H,GAADt/H,OAAAC,OAAA,CACEiH,IAAG,eAAAF,OAAiBZ,GACpBrG,UAAW,CACT6O,GAAG,EACHzO,MAAM,CAAC,MAAM,QAGf6C,UAAW,CACTD,SAAS,CAAC,EAAE,KAEVs3H,QAShBh6H,KAAKC,MAAMgK,eACTtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,kBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGW,OAAzBjB,KAAKwH,MAAMszH,UACTnyH,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOq5H,EAAS,EAAI,GAEtB1hB,QAAS,OACTp9G,MAAO,CAAC,EAAE,OACVy9G,SAAU,kBACVv7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUq+H,EACVn+H,YAAc,SAAAqG,GAAC,OAAIsgH,EAAK6S,UAAU,WAEjCj6H,KAAKwH,MAAMwzH,YAkBdryH,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOq0H,EAAY,EAAI,GAEzB95H,MAAO,CAAC,EAAE,OACVo9G,QAAS,WACTK,SAAU,oBACVv7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUq5H,EACVn5H,YAAc,SAAAqG,GAAC,OAAIsgH,EAAK6S,UAAU,eAhCpCtxH,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOu5H,EAAa,EAAI,GAE1Bh/H,MAAO,CAAC,EAAE,OACVS,SAAUu+H,EACV5hB,QAAS,gBACTK,SAAU,kBACVv7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCvB,YAAc,SAAAqG,GAAC,OAAIsgH,EAAK6S,UAAU,oBAsBxCtxH,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOs5H,EAAU,EAAI,GAEvB/+H,MAAO,CAAC,EAAE,OACVo9G,QAAS,QACTK,SAAU,oBACVv7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUs+H,EACVp+H,YAAc,SAAAqG,GAAC,OAAIsgH,EAAK6S,UAAU,YAEpCtxH,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOs0H,EAAU,EAAI,GAEvB/5H,MAAO,CAAC,EAAE,OACVo9G,QAAS,QACTK,SAAU,mBACVv7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACVsM,GAAG,CAAC,EAAE,GACNxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUs5H,EACVp5H,YAAc,SAAAqG,GAAC,OAAIsgH,EAAK6S,UAAU,aAIpCj6H,KAAKwH,MAAM4zH,iBACTzyH,EAAAxI,EAAAC,cAAC+I,EAAA,EAADxJ,OAAAC,OAAA,CACEF,UAAW,CACT2J,GAAG,EACHkF,GAAG,IAEDvO,KAAKwH,MAAM4zH,kBAKnBvB,EACElxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,EACPuG,MAAO,CACLi3G,SAAS,QAEXr8G,eAAgB,iBAGZjB,KAAKwH,MAAMsG,OAAU9N,KAAKwH,MAAMsG,MAAM9J,OAmBpChE,KAAKwH,MAAMsG,MAAMhI,IAAK,SAACk0H,EAASj0H,GAAV,OACxB4C,EAAAxI,EAAAC,cAAC6+H,GAADt/H,OAAAC,OAAA,CACEiH,IAAG,SAAAF,OAAWZ,GACdrG,UAAW,CACTI,MAAM,CAAC,EAAE,SAEPk6H,MAxBNrxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,sBAad+F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,wBAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPmB,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACToiB,GAAG,EACHy8F,GAAG,EACHx+G,GAAG,EACHD,MAAM,EACN2I,QAAQ,OACRxH,eAAe,UAEjBV,UAAU,EACVD,eAAe,GAGbN,KAAKwH,MAAM6zH,oBAAsBr7H,KAAKwH,MAAM6zH,mBAAmBr3H,OAC7D2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,EACJy8F,GAAI,EACJz+G,MAAO,EACPkB,cAAe,MACf4mH,aAAY,aAAAjhH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEnD+B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,IAAO,IAHtC,QAOA2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,GAAM,GACnCsH,UAAWtJ,KAAKC,MAAM+B,SAAW,QAAU,QAJ7C,UAQA2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,IAAO,IAElChC,KAAKC,MAAM+B,SAAW,GAAK,SAGjC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,SACfD,WAAY,aACZwF,SAAU,CAAC,UAAU,UACrB24H,UAAW,CAAC,UAAU,UAGpBl/H,KAAKwH,MAAM6zH,mBAAmBv1H,IAAK,SAACq5H,EAAOp5H,GAAR,OACjC4C,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPD,GAAI,CAAC,EAAE,GACPmB,cAAe,MACf6F,IAAG,WAAAF,OAAaZ,GAChB6hH,aAAY,aAAAjhH,OAAeygH,EAAKnnH,MAAMwB,MAAMC,OAAOkF,UAEnD+B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZH,MAAO,YACPI,SAAU0kH,EAAKnnH,MAAM+B,SAAW,EAAI,EACpClC,MAAOsnH,EAAKnnH,MAAM+B,SAAW,IAAO,IAEnCm9H,EAAO7oH,MAEV3N,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZH,MAAO,YACPI,SAAU0kH,EAAKnnH,MAAM+B,SAAW,EAAI,EACpClC,MAAOsnH,EAAKnnH,MAAM+B,SAAW,GAAM,GACnCsH,UAAW89G,EAAKnnH,MAAM+B,SAAW,QAAU,QAE1Cm9H,EAAO/uG,OAAOziB,QAAQ,GAPzB,IAO8BwxH,EAAOtuG,WAErCloB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAOsnH,EAAKnnH,MAAM+B,SAAW,IAAO,IACpCf,eAAgBmmH,EAAKnnH,MAAM+B,SAAW,WAAa,cAEnD2G,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CACExgH,MAAO,OACPqD,WAAY,OACZwgB,KAAMihG,EAAKrkH,cAAcqjB,2BAA2B+4G,EAAOt3H,OAE3Dc,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,QAGZomH,EAAKnnH,MAAM+B,UACV2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZH,MAAO,QAEN8kH,EAAKrkH,cAAcmF,YAAYi3H,EAAOt3H,OAI7Cc,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJpD,MAAO,OACPH,KAAM,YACNE,KAAM+kH,EAAKnnH,MAAM+B,SAAW,QAAU,kBAWxD2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,aAFT,iCAWPtC,KAAKC,MAAMqQ,SAAWtQ,KAAKC,MAAMkK,aAAenK,KAAKwH,MAAMi8G,aAAezjH,KAAKwH,MAAM8uH,aAAet2H,KAAKC,MAAM4+E,aAClHl2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPyO,GAAI,CAAC,EAAE,IAGJuwH,GAAcC,GACbp2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,0BAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAERsC,KAAM,aACNG,UAAW,UACXnB,YAAa,UACbb,SAAyC,SAA9BP,KAAKwH,MAAM0zH,eACtBz6H,YAAc,SAAAqG,GAAC,OAAIsgH,EAAKgY,kBAAkB,SAC1Cx8H,KAAM5C,KAAKC,MAAM+B,SAAW,OAAS,mBAEvC2G,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAERsC,KAAM,cACNG,UAAW,SACXnB,YAAa,UACbb,SAAyC,WAA9BP,KAAKwH,MAAM0zH,eACtBz6H,YAAc,SAAAqG,GAAC,OAAIsgH,EAAKgY,kBAAkB,WAC1Cx8H,KAAM5C,KAAKC,MAAM+B,SAAW,SAAW,wBAO7C48H,GAAU5+H,KAAKwH,MAAMi8G,aAAezjH,KAAKwH,MAAMm5G,kBAAoB3gH,KAAKwH,MAAMi8G,YAAYnuG,GAAG,IAAQwpH,GAAcC,IACnHp2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,IAGJ8+H,GAAwC,SAA9B5+H,KAAKwH,MAAM0zH,iBACpBvyH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,uBAIGvO,KAAKwH,MAAMg0H,wBAuFV7yH,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,EACHkF,GAAG,GAELnM,KAAM,UACNI,UAAW,CACTF,MAAM,YAERM,KAAI,2DA/FN+F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZE,eAAgB,SAChBD,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPyD,KAAM,OACNq0B,UAAU,EACV71B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZkK,YAAa,aACbjM,gBAAiB,SACjBuO,UAAW,kBACX9D,MAAOnL,KAAKwH,MAAM2zH,iBAAmB,GACrCv+G,SAAU5c,KAAKq/H,sBAAsBngH,KAAKlf,MAC1CuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,WAE/C+B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdjB,KAAKwH,MAAMqzH,YAAY/0H,IAAK,SAACvE,EAAEwE,GAC7B,IAAMxF,IAAW6mH,EAAK5/G,MAAM8zH,qBAAqBlU,EAAK5/G,MAAM8zH,mBAAmBnwH,QAAQ5J,EAAE4J,OAASi8G,EAAK5/G,MAAM8zH,mBAAmB/3H,OAAShC,EAAEgC,MAC3I,OACEoF,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,KAERS,SAAUA,EACVD,eAAe,EACfuG,IAAG,cAAAF,OAAgBZ,GACnBtF,YAAa,SAAAqG,GAAC,OAAIsgH,EAAKkY,iBAAiB/9H,KAExCoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACb4G,UAAW,SACXhH,MAAO/B,EAAW,YAAc,YAE/BgB,EAAE0M,WAQb6wH,GACEn2H,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,CACEwe,OAAQ,IACJpe,KAAKC,MAFX,CAGE2e,YAAa,CACX9e,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB4B,UAAW2kH,IACXloG,eAAgB,CACd5c,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,IACT0B,aAAa,EACbyF,UAAU,UACVkE,MAAM,gBACNjE,SAASlH,KAAKwH,MAAMk5G,gBAEtB/uG,OAAQ,gBACRkM,WAAY,uBACZE,aAAc/d,KAAKC,MAAM4+E,aAAa18E,KACtC4F,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzCqe,qBAAsBre,KAAKu/H,sBAAsBrgH,KAAKlf,YA0B3E4+H,GAAsC,WAA5B5+H,KAAKwH,MAAM0zH,eACpBvyH,EAAAxI,EAAAC,cAACsnH,EAAD/nH,OAAAC,OAAA,CACE6d,MAAO,MACHzd,KAAKC,MAFX,CAGE0R,OAAQmoH,EACRnX,MAAO3iH,KAAKwH,MAAMm7G,MAClBD,QAAS1iH,KAAKwH,MAAMk7G,QACpBv4G,YAAanK,KAAKC,MAAMkK,YACxB20B,aAAc9+B,KAAKwH,MAAMi8G,YACzB5kC,aAAc7+E,KAAKC,MAAM4+E,aACzB0hC,cAAevgH,KAAKwH,MAAM+4G,cAC1BG,eAAgB1gH,KAAKwH,MAAMk5G,eAC3BD,eAAgBzgH,KAAKwH,MAAMi5G,eAC3B14G,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzCijH,mBAAoBjjH,KAAKwH,MAAMy7G,mBAC/BxB,oBAAqBzhH,KAAKwH,MAAMi6G,oBAChC0B,oBAAqBnjH,KAAKwH,MAAM27G,oBAChCpC,oBAAqB/gH,KAAK+gH,oBAAoB7hG,KAAKlf,MACnD2gH,iBAAkB3gH,KAAKisH,yBAAyB/sG,KAAKlf,MACrDqe,qBAAsBre,KAAKqe,qBAAqBa,KAAKlf,QAErD2I,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,IAGJoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAGRs1H,GAAUE,EAAX,sBAAAn4H,OACwB3G,KAAKC,MAAMgK,cADnC,oBAEI2vH,GAAS,6BAAAjzH,OACkB3G,KAAKC,MAAMgK,cAD7B,qBAQpB60H,IAAeC,EAClBp2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,IAGJoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,2DAUFswH,EACFjxH,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,IAIFvB,KAAKwH,MAAMwzH,YACTryH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJ7L,SAAU,EACVJ,MAAO,WACPgH,UAAW,UALb,+CAO+CtJ,KAAKC,MAAMgK,cAP1D,KASAtB,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,CACEwe,OAAQ,IACJpe,KAAKC,MAFX,CAGE4C,UAAW2kH,IACX5oG,YAAa,CACX9e,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjBqe,eAAgB,CACd5c,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,IACT0B,aAAa,EACbyF,UAAU,SACVkE,MAAM,YAERwG,OAAQ,WACRkM,WAAY,WACZE,aAAc/d,KAAKC,MAAM4+E,aAAa18E,KACtC4F,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,UAI7C2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,kDAMkDtJ,KAAK+C,cAAc8P,YAAiC,IAArB7S,KAAKwH,MAAMszH,WAAgB19C,MAAMnnE,OAAO,oBANzH,yBAMoKjW,KAAKC,MAAMgK,cAN/K,OAYN40H,GACFl2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFgN,GAAG,IAIFvO,KAAKwH,MAAMw1H,WAAah9H,KAAKwH,MAAMw1H,UAAU1nH,GAAG,GAC/C3M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,WACPH,KAAM,iBACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPgH,UAAW,UALb,iBAOgBX,EAAAxI,EAAAC,cAAA,cAASJ,KAAKwH,MAAMw1H,UAAUrvH,QAAQ,GAAtC,IAA2C3N,KAAKC,MAAM4+E,aAAa9+C,aAPnF,KASAp3B,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,CACEwe,OAAQ,IACJpe,KAAKC,MAFX,CAGE4C,UAAW2kH,IACX5oG,YAAa,CACX9e,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjBqe,eAAgB,CACd5c,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,EAAE,GACXqL,MAAM,QACN3J,aAAa,EACbyF,UAAU,UAEZ0K,OAAQ,QACRkM,WAAY,QACZ9V,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzC+d,aAAc/d,KAAKC,MAAMkK,YAAYsxH,eAAet5H,SAIxDwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,0CAYRX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,oBAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACToiB,GAAG,EACHy8F,GAAG,EACHx+G,GAAG,EACHD,MAAM,EACN2I,QAAQ,OACR1H,WAAW,SACXE,eAAe,UAEjBV,UAAU,EACVD,eAAe,GAGbN,KAAKwH,MAAMyzH,gBAAkBj7H,KAAKwH,MAAMyzH,eAAej3H,OACrD2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,EACJy8F,GAAI,EACJz+G,MAAO,EACPkB,cAAe,MACf4mH,aAAY,aAAAjhH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEnD+B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,GAAM,IAHrC,QAOA2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,GAAM,GACnCsH,UAAWtJ,KAAKC,MAAM+B,SAAW,QAAU,QAJ7C,WASGhC,KAAKC,MAAM+B,UACV2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GACP4C,SAAU,EACVD,WAAY,GAHd,SAWJzC,KAAKwH,MAAMyzH,eAAen1H,IAAK,SAACu6E,EAAMt6E,GAAP,OAC7B4C,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE/I,GAAI,EACJC,MAAO,EACPkB,cAAe,MACf6F,IAAG,SAAAF,OAAWZ,GACd6hH,aAAY,aAAAjhH,OAAeygH,EAAKnnH,MAAMwB,MAAMC,OAAOkF,UAEnD+B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZH,MAAO,YACPI,SAAU0kH,EAAKnnH,MAAM+B,SAAW,EAAI,EACpClC,MAAOsnH,EAAKnnH,MAAM+B,SAAW,GAAM,IAElCq+E,EAAM/pE,MAET3N,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZH,MAAO,YACPI,SAAU0kH,EAAKnnH,MAAM+B,SAAW,EAAI,EACpClC,MAAOsnH,EAAKnnH,MAAM+B,SAAW,GAAM,GACnCsH,UAAW89G,EAAKnnH,MAAM+B,SAAW,QAAU,QAE1Cq+E,EAAMjwD,OAAOziB,QAAQ,GAPxB,IAO6B0yE,EAAMxvD,YAGhCu2F,EAAKnnH,MAAM+B,UACV2G,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CACEhjH,MAAO,GACPwC,MAAO,OACPqD,WAAY,OACZwgB,KAAMihG,EAAKrkH,cAAcqjB,2BAA2Bi6D,EAAMx4E,OAE1Dc,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZH,MAAO,QAEN8kH,EAAKrkH,cAAcmF,YAAYm4E,EAAMx4E,OAExCc,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrD,KAAM,QACNC,MAAO,OACPH,KAAM,oBAWxBwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,aAFT,8BAcbtC,KAAKC,MAAMqQ,QAQd3H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,qBAtBV+F,EAAAxI,EAAAC,cAACy3G,EAAA,EAADl4G,OAAAC,OAAA,CACEF,UAAW,CACT2J,GAAG,IAEDrJ,KAAKC,iBA1kDD4C,mCCorCX28H,8MAlrCbh4H,MAAQ,CACNo7G,KAAK,EACL6c,MAAM,KACN9c,MAAM,CACJ+c,EAAE,YACFC,EAAE,aAEJC,cAAc,CACZC,GAAG,CACD5xH,MAAM,OAER6xH,GAAG,CACD7xH,MAAM,OAER8xH,GAAG,CACD9xH,MAAM,OAER+xH,IAAI,CACF/xH,MAAM,OAGVixE,QAAQ,KACRpB,QAAQ,KACRmiD,SAAS,KACTziH,SAAQ,EACR0iH,UAAU,KACVC,YAAY,GACZC,YAAY,GACZC,WAAW,KACXC,YAAY,KACZC,aAAY,EACZC,aAAY,EACZr2H,YAAY,KACZ20B,aAAa,KACb70B,cAAc,KACdw2H,gBAAgB,GAChBC,eAAc,EACdC,eAAe,KACfC,gBAAgB,KAChBriH,kBAAkB,GAClBsiH,iBAAiB,KACjBC,kBAAkB,KAClBC,mBAAmB,KACnB7c,eAAe,UACf8c,oBAAmB,EACnBC,qBAAoB,EACpBC,qBAAqB,KACrBC,sBAAsB,KACtBC,yBAAyB,QAI3Br+H,cAAgB,OAuIhBs+H,aAAe,SAACv6H,GACd,IAAMq5H,EAAcr5H,EAAEmf,OAAO9a,MAAMnH,SAAWV,MAAMwD,EAAEmf,OAAO9a,OAAS0G,KAAKgF,MAAM/P,EAAEmf,OAAO9a,OAAS,GAC7Fo1H,EAAcr7H,EAAKnC,cAAc2O,MAAMyuH,GAAa7qH,GAAG,IAAMpQ,EAAKnC,cAAc2O,MAAMyuH,GAAaxtG,IAAIztB,EAAKsC,MAAM84H,aACxHp7H,EAAK8C,SAAS,CACZm4H,cACAI,mBAIJe,aAAe,SAACx6H,GACd,IAAMs5H,EAAct5H,EAAEmf,OAAO9a,MAAMnH,SAAWV,MAAMwD,EAAEmf,OAAO9a,OAASrE,EAAEmf,OAAO9a,MAAQ,GACjFq1H,EAAczuH,SAASquH,IAAc,IAAMruH,SAASquH,IAAc,IACxEl7H,EAAK8C,SAAS,CACZo4H,cACAI,cACAG,eAAe,UAInBY,aAAe,SAACZ,GACdz7H,EAAKo8H,aAAa,CAChBr7G,OAAO,CACL9a,MAAMw1H,QAqFZa,iBAAmB,SAAChwH,GAElBtM,EAAK8C,SAAS,CACZ04H,eAFoB,OAMxBe,2BAA6B,SAACjwH,GAE5BtM,EAAK8C,SAAS,CACZg5H,oBAFyB,OAM7BU,iBAAmB,SAACtxG,GAClB,IAAMuxG,EAAmBz8H,EAAKnC,cAAcwxD,qBAAqBnkC,EAAOlrB,EAAKsC,MAAM2C,YAAYxG,UACzFs9H,EAAsB/7H,EAAKnC,cAAc2O,MAAM0e,GAAQuC,IAAI,IAAMztB,EAAKnC,cAAc2O,MAAMiwH,GAAkBrsH,GAAGpQ,EAAKsC,MAAM05H,qBAAqBjhD,oBACrJ/6E,EAAK8C,SAAS,CACZi5H,2BAIJW,0BAA4B,SAAC3hD,GAC3B,MAAO,CACLpiE,WAAW,cACXw6C,aAAa,CAACnzD,EAAKsC,MAAM05H,qBAAqB/1H,MAAMjG,EAAKsC,MAAM05H,qBAAqBrjD,SAASz4E,GAAG66E,EAAmB/6E,EAAKsC,MAAM2C,YAAY03H,iBAI9IC,0BAA4B,SAACtwH,GAK3BtM,EAAK68H,mBAGPC,6BAA+B,SAACxwH,GAC9B,IAAM0tE,EAAUh6E,EAAKnC,cAAc0S,gBAAgB,CAAC,YAAY,SAAS,cAAc,eAAe,WAAWjE,GACjHtM,EAAK8C,SAAS,CACZk3E,wFAvREl/E,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK+hI,kSAICtB,EAAkB,YACWzgI,KAAK+C,cAAcw6E,wBAAwBv9E,KAAKC,MAAMqQ,uBACpErM,QAAS,SAAAy4E,GACxBA,EAASmB,UACX4iD,EAAgB7yH,KAAK8uE,KAInBulD,EAA+BjiI,KAAKC,MAAMglH,UAAUmP,OAASqM,EAAgBhhH,KAAM,SAAAw/D,GAAK,OAAIltE,SAASktE,EAAM9zE,SAAW4G,SAAS5O,EAAKlD,MAAMglH,UAAUmP,UAAY,KAEhK+M,EAAwBV,EAAgBz8H,OAAO,EAAIy8H,EAAgB,GAAK,KACxES,EAAuBe,IAA8Dd,GAAyB,MAEpHnhI,KAAKgI,SAAS,CACZy4H,kBACAS,uBACAC,0BAGIjd,EAAiB,CAAC,UAAU,SAASzvF,SAASz0B,KAAKC,MAAMglH,UAAUC,QAAUllH,KAAKC,MAAMglH,UAAUC,OAASllH,KAAKwH,MAAM08G,eACtHge,EAAoBliI,KAAKC,MAAMglH,UAAUmP,QAAUz0H,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAiBqkB,SAASz0B,KAAKC,MAAMglH,UAAUmP,QACnInqH,EAAgBi4H,EAAoBliI,KAAKC,MAAMglH,UAAUmP,OAASz0H,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAiB,GAE1HpQ,KAAKqnH,kBAAkBnD,GACvBlkH,KAAKmiI,oBAAoBl4H,sLAIL82H,EAAmB52H,wFACjCi4B,EAAkBpiC,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,oBAChEygC,EAAel2C,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAY2sB,aAC5EpiC,KAAK+C,cAAco0C,YAAnB,GAAAxwC,OAAkCuvC,EAAlC,cAAAvvC,OAA2DwD,EAAYmD,QAAvE,0BAAjBm1D,YACUA,EAAS53D,4BACjBo1H,EAAWx9D,EAAS53D,KAEpBy1H,EAAcL,GAAYA,EAAQ,WAAAt5H,OAAYo6H,IAAwB/gI,KAAK+C,cAAcmS,iBAAiB+qH,EAAQ,WAAAt5H,OAAYo6H,IAAsB52H,EAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,qBACpM4uH,oCAEF,4LAGgB34H,EAAUC,2EACjC5H,KAAKkD,YAECwX,EAAuB9S,EAAUqC,gBAAkBjK,KAAKwH,MAAMyC,cAC9Dm4H,EAA4Bx6H,EAAUm5H,qBAAuB/gI,KAAKwH,MAAMu5H,oBAC1ErmH,GAAwB0nH,IAC1BpiI,KAAK6kH,kSAMDwd,EAAqC,QAA7BriI,KAAKwH,MAAMyC,cACnBm3H,EAA2BphI,KAAKwH,MAAM2C,YAAYw2E,WAAW3gF,KAAKwH,MAAMu5H,6BAGxE9/G,QAAQqD,IAAI,CAChBtkB,KAAKC,MAAM4nC,aAAa7nC,KAAKwH,MAAM2C,YAAYsH,MAAOzR,KAAKwH,MAAM2C,YAAY03H,YAAa7hI,KAAKwH,MAAM2C,YAAY29B,KACjH9nC,KAAKC,MAAM4nC,aAAau5F,EAAyBj/H,KAAMi/H,EAAyB9zH,QAAS8zH,EAAyBt5F,8BAS1G7mB,QAAQqD,IAAI,CACpBtkB,KAAKsiI,gBAAgBtiI,KAAKwH,MAAMu5H,mBAAmB/gI,KAAKwH,MAAM2C,aAC9DnK,KAAK+C,cAAckuB,gBAAgBjxB,KAAKwH,MAAM2C,YAAYsH,MAAMzR,KAAKC,MAAMqQ,SAC3EtQ,KAAK+C,cAAc0hE,mBAAmBzkE,KAAKwH,MAAMyC,cAAcjK,KAAKC,MAAM4+E,aAAavxE,QAAQtN,KAAKC,MAAMqQ,SAC1GtQ,KAAK+C,cAAc0hE,mBAAmB28D,EAAyBj/H,KAAKnC,KAAKC,MAAM4+E,aAAavxE,QAAQtN,KAAKC,MAAMqQ,SAC/G+xH,EAAQriI,KAAK+C,cAAc8/E,cAAc7iF,KAAKC,MAAMqQ,SAAQ,GAAStQ,KAAK+C,cAAckuB,gBAAgBmwG,EAAyBj/H,KAAKnC,KAAKC,MAAMqQ,SAAQ,wCAVzJgwH,OACAQ,OACAE,OACAN,OAUF5hG,GATEA,SAS6B9+B,KAAK+C,cAAc2O,MAAM,GACxDovH,EAAoBA,GAAqB9gI,KAAK+C,cAAc2O,MAAM,GAElE1R,KAAKgI,SAAS,CACZs4H,cACAxhG,eACA4hG,gBACAI,oBACAE,qBACAI,oNAIsBn3H,2EACJ,GACA,GACdE,EAAcnK,KAAKC,MAAM6kH,UAAU10G,gBAAgBnG,GACnD82H,EAAqBphI,OAAOoE,KAAKoG,EAAYw2E,YAAY,GAE/D3gF,KAAKgI,SAAS,CACZm4H,YALkB,GAMlBC,YAPkB,GAQlBj2H,cACAF,gBACA82H,2KAIqBA,GACvB/gI,KAAKgI,SAAS,CACZ+4H,mEAKF,IAAMZ,EAAcngI,KAAKwH,MAAM84H,YAAY3yH,UAC3C3N,KAAKqhI,aAAa,CAChBp7G,OAAO,CACL9a,MAAMg1H,6LAkCVngI,KAAKgI,SAAS,CACZwV,SAAQ,IAIJ+kH,EAAY,CAChBC,OAAQxiI,KAAKwH,MAAM44H,YACnBqC,YAAaziI,KAAKwH,MAAM24H,YACxBuC,SAAU1iI,KAAKwH,MAAMu5H,mBACrBlmG,gBAAiB76B,KAAKwH,MAAM2C,YAAYmD,QACxCq1H,MAAO3iI,KAAKwH,MAAM2C,YAAYw2E,WAAW3gF,KAAKwH,MAAMu5H,oBAAoBzzH,SAKpE80B,EAAkBpiC,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,oBAChEygC,EAAel2C,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAY2sB,IAC7FwgG,YAAc1sF,+BAAiCqsF,EAAUE,iCAAwBF,EAAUG,4BAAmBH,EAAUC,mCAA0BD,EAAU1nG,0BAE3I76B,KAAK+C,cAAco0C,YAAYyrF,aAAhDngE,SAEAg9D,EAAQh9D,GAAYA,EAAS53D,KAAO43D,EAAS53D,KAAO,6BAGxD7K,KAAKgI,SAAS,CACZwV,SAAQ,uBAEH,kBAIH3S,EAAO7K,KAAKC,MAAM6e,KAAK0C,IAAIsmB,IAAI+6F,iBACnC,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,UAAW,WACrD,CAACpD,EAAMr8F,MAAOq8F,EAAMqD,WAAYrD,EAAMsD,UAAWtD,EAAMuD,YAAavD,EAAMx0H,EAAGw0H,EAAMjiF,EAAGiiF,EAAM9oG,IAGxFssG,EAAajjI,KAAK+C,cAAc+yB,KAAK,aACf91B,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKC,MAAM4+E,aAAa18E,KAAK,yBAA1FknG,SACA65B,EAAYljI,KAAK+C,cAAc+yB,KAAK2pG,EAAMr8F,OAC1C+/F,EAAeD,EAAUE,IAAIpjI,KAAK+C,cAAc+yB,KAAKuzE,IAAgBg6B,KAAK,KAAOrH,IAAIkH,GACrFI,EAActjI,KAAK+C,cAAcszB,MAAMksG,EAAUE,YAAYh/G,YAC7Dm9G,EAAkBuC,EAClBjD,EAAYlgI,KAAK+C,cAAcmS,iBAAiB0rH,EAAgB5gI,KAAKwH,MAAM2C,YAAYxG,UACvF08H,EAAaH,EAAU18G,IAAIxjB,KAAKwH,MAAM24H,aAAazyH,MAAM,KAAK8V,IAAIxjB,KAAKwH,MAAM44H,aAAa1yH,MAAM,KAIhG6Q,EAAoB,CACxBgkH,EAAU1nG,gBACV0nG,EAAUI,MACVW,EACAf,EAAUC,OACVS,EACArC,EACA/1H,GAGIg2H,EAAqD,QAAlC7gI,KAAKwH,MAAMu5H,mBAA+BoC,EAAe,KAMrE,GACG,EAEhBnjI,KAAKgI,SAAS,CACZ46G,KAJW,EAKX6c,QACAjiH,SALc,EAMd0iH,YACAG,aACAO,kBACAC,mBACAtiH,mKAgDc2lG,GACZA,IAAmBlkH,KAAKwH,MAAM08G,gBAChClkH,KAAKgI,SAAS,CACZk8G,8DAKahlC,GACjB,IAAMgiD,EAAuBlhI,KAAKwH,MAAM05H,qBAAuBlhI,KAAKwH,MAAMi5H,gBAAgBhhH,KAAM,SAAAw/D,GAAK,OAAIltE,SAASktE,EAAM9zE,SAAW+zE,IAAY,KAE/Il/E,KAAKgI,SAAS,CACZk5H,yDAWFlhI,KAAKgI,SAAS,CACZ46G,KAPW,EAQX6c,MAPY,KAQZvgD,QAPc,KAQdkhD,YAPkB,GAQlBD,YAPkB,GAQlB5hH,kBAPwB,sCAWnB,IAAAzT,EAAA9K,KACP,OACE2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuJ,GAAI,CAAC,EAAE,GACPtI,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,CAAC,EAAE,KACVkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,kBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER6C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdN,KAAM,WACNG,UAAW,UACXK,KAAM,eACNxB,YAAa,UACbb,SAAyC,YAA9BP,KAAKwH,MAAM08G,eACtBzjH,YAAc,SAAAqG,GAAC,OAAIgE,EAAKu8G,kBAAkB,eAE5C1+G,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER6C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdN,KAAM,aACNG,UAAW,SACXK,KAAM,eACNxB,YAAa,UACbb,SAAyC,UAA9BP,KAAKwH,MAAM08G,eACtBzjH,YAAc,SAAAqG,GAAC,OAAIgE,EAAKu8G,kBAAkB,eAKhB,YAA9BrnH,KAAKwH,MAAM08G,gBACTv7G,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACTG,GAAG,EACHE,GAAG,EACHe,GAAG,EACHhB,MAAM,GAERS,UAAU,EACVD,eAAe,EACf8B,KAAM,mBACNI,UAAW,CACTF,MAAM,cAERK,UAAW,CACTL,MAAM,cAERM,KAAI,yJAEJ+F,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CACEp9G,GAAI,EACJjD,WAAY,IACZH,MAAO,UACPI,SAAU,OACViD,WAAY,UACZwgB,KAAM,wDAENxd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,UAHlB,YAME0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrD,KAAM,QACNC,MAAO,UACPH,KAAM,cAVV,OAkBwB,YAA9BnC,KAAKwH,MAAM08G,eACTv7G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPkB,cAAe,MACfC,eAAgB,iBAGdtB,OAAOoE,KAAK/D,KAAKwH,MAAMm7G,OAAO78G,IAAK,SAAA+8G,GAAS,OAC1Cl6G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLokH,UAAU,IACVzqG,KAAK,UACLujH,eAAe,OACfr0H,OAAOpE,EAAKtD,MAAMo7G,MAAMC,EAAY,UAAY,WAElDngH,SAAU,EACV4G,UAAW,SACXzC,IAAG,QAAAF,OAAUk8G,GACbvgH,MAAQwI,EAAKtD,MAAMo7G,MAAMC,EAAY,UAAY,WACjDl9G,WAAamF,EAAKtD,MAAMo7G,MAAMC,EAAY,UAAY,WACtD2gB,YAAc14H,EAAKtD,MAAMo7G,MAAMC,EAAY,UAAY,YAEtD/3G,EAAKtD,MAAMm7G,MAAME,OAK1Bl6G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACNiC,OAAO,QAEToJ,MAAQ,EAAExL,OAAOoE,KAAK/D,KAAKwH,MAAMm7G,OAAO3+G,OAAQhE,KAAKwH,MAAMo7G,QAI5D5iH,KAAKwH,MAAMyC,eAAkBjK,KAAKwH,MAAMs3B,aAcrC9+B,KAAKwH,MAAM03E,QACbv2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,GAELjH,KAAM,UACNI,UAAW,CACTF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,qEAAA+D,OAAuE3G,KAAKwH,MAAM03E,QAAlF,eAENv2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,OACPqD,WAAY,UACZC,QAAS5F,KAAKyjI,MAAMvkH,KAAKlf,OAJ3B,kBASCA,KAAKwH,MAAMi4H,MA4Nd92H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,WAJT,kBAQAqG,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACH0O,GAAG,EACHxO,GAAG,GAELQ,UAAU,EACVD,eAAe,GAEfqI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,aAQAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,WAJT,gBAQAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,gBAQAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAMyC,eAEdtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,iBAQAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAM24H,YANd,IAM4BngI,KAAKwH,MAAMu5H,oBAEvCp4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,iBAQAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAM44H,YANd,SAQAz3H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,gBAQAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAM04H,UAAUvyH,QAAQ,GANhC,IAMqC3N,KAAKwH,MAAMu5H,oBAEhDp4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,gBAQAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAM64H,WAAW1yH,QAAQ,GANjC,MASFhF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMs3B,cAAc1sB,GAAGpS,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMi4H,MAAMr8F,QAC7Fz6B,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFgN,GAAG,IAGL5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,MACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,yBAMyBtJ,KAAKwH,MAAMu5H,mBANpC,oBAQAp4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,OACPqD,WAAY,UACZC,QAAS5F,KAAKyjI,MAAMvkH,KAAKlf,OAJ3B,mBAUDA,KAAKwH,MAAMk5H,cA4Dd/3H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2e,YAAa,CACX9e,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB4B,UAAW2kH,IACXloG,eAAgB,CACd5c,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,IACT0B,aAAa,EACbyF,UAAU,UACVkE,MAAM,eACNjE,SAASlH,KAAKwH,MAAMk5G,gBAEtB/uG,OAAQ,eACRkM,WAAY,WACZ1S,MAAOnL,KAAKwH,MAAMq5H,iBAClBziH,OAAQpe,KAAKwH,MAAM+W,kBACnBR,aAAc/d,KAAKC,MAAM4+E,aAAa18E,KACtC4F,SAAU/H,KAAKgiI,6BAA6B9iH,KAAKlf,SAEnD2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,OACPqD,WAAY,UACZC,QAAS5F,KAAKyjI,MAAMvkH,KAAKlf,OAJ3B,kBA1FF2I,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFgN,GAAG,IAGL5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,MACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,+DAQAX,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2e,YAAa,CACX9e,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB4B,UAAW2kH,IACXloG,eAAgB,CACd5c,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,IACT0B,aAAa,EACb2J,MAAM,UACNlE,UAAU,WAEZ0K,OAAQ,UACRkM,WAAY,UACZ9V,SAAU/H,KAAKwhI,iBAAiBtiH,KAAKlf,MACrC+d,aAAc/d,KAAKwH,MAAM45H,yBAAyBj/H,KAClDic,OAAQ,CAACpe,KAAKC,MAAM4+E,aAAavxE,QAAQtN,KAAKC,MAAM6e,KAAKkX,MAAMkwC,iBAAiB,UAElFv9D,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,OACPqD,WAAY,UACZC,QAAS5F,KAAKyjI,MAAMvkH,KAAKlf,OAJ3B,qBAhbZ2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,0BAGA5F,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJ2a,aAAa,EACblE,cAAc,EACd5R,cAAejK,KAAKwH,MAAMyC,cAC1B2S,SAAU5c,KAAKmiI,oBAAoBjjH,KAAKlf,MACxCoQ,gBAAiBpQ,KAAKC,MAAM6kH,UAAU10G,oBAG1CzH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJxN,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,8BAGAD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0mB,UAAW,MACXC,QAAO,kFAEP5mB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrD,KAAM,MACNF,KAAM,OACNG,MAAO,gBAIbqG,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8f,aAAa,EACb9V,cAAejK,KAAKwH,MAAMu5H,mBAC1BnkH,SAAU5c,KAAK0jI,yBAAyBxkH,KAAKlf,MAC7CoQ,gBAAiBpQ,KAAKwH,MAAM2C,YAAYw2E,eAI1C3gF,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAM84H,aAAahrH,GAAG,GAClD3M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,kCAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkJ,IAAK,EACL8wG,KAAM,EACN9iH,MAAO,OACPyD,KAAM,SACNq0B,UAAU,EACV71B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZkK,YAAa,aACbjM,gBAAiB,SACjBuO,UAAW,kBACX9D,MAAOnL,KAAKwH,MAAM24H,YAClBvjH,SAAU5c,KAAKqhI,aAAaniH,KAAKlf,MACjCuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,SAC7Cg3G,YAAW,UAAAj3G,OAAY3G,KAAKwH,MAAMu5H,mBAAmBrrH,cAA1C,aAEb/M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPwG,SAAU,OACVvF,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVD,WAAY,EACZH,MAAO,YACPgH,UAAW,QACX3D,WAAY,YACZC,QAAU,SAACkB,GAAD,OAAOgE,EAAK64H,qBACtBt9H,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAZjB,kBAekBzG,KAAKwH,MAAM84H,YAAY3yH,QAAQ3N,KAAKC,MAAM+B,SAAW,EAAI,GAf3E,IAegFhC,KAAKwH,MAAMu5H,sBAI/Fp4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,sBAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkJ,IAAK,EACLhS,MAAO,OACPyD,KAAM,SACNq0B,UAAU,EACV71B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZ6H,YAAa,MACbs5H,YAAa,QACbljI,gBAAiB,SACjBuO,UAAW,kBACX9D,MAAOnL,KAAKwH,MAAM44H,YAClBxiB,YAAa,0BACbhhG,SAAU5c,KAAKshI,aAAapiH,KAAKlf,MACjC2M,YAAa3M,KAAKwH,MAAMg5H,YAAc,aAAe,SAGpDxgI,KAAKwH,MAAMg5H,aACV73H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJ4B,SAAU,EACVJ,MAAO,OAHT,2CASJqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJtI,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdtB,OAAOoE,KAAK/D,KAAKwH,MAAMo4H,eAAe95H,IAAK,SAAA08H,GACzC,IAAMqB,EAAa/4H,EAAKtD,MAAMo4H,cAAc4C,GACtCjiI,EAAWuK,EAAKtD,MAAMm5H,iBAAiB6B,EACvC1iI,EAAS,EAAEH,OAAOoE,KAAK+G,EAAKtD,MAAMo4H,eAAe57H,OAAQ,IAC/D,OACE2E,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFzB,MAAMA,GAERS,SAAUA,EACVD,eAAe,EACfuG,IAAG,eAAAF,OAAiB67H,GACpB/hI,YAAa,SAAAqG,GAAC,OAAIgE,EAAKy2H,aAAaiB,KAEpC75H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZ6G,UAAW,SACXhH,MAAOwI,EAAK7K,MAAMM,SAAW,YAAc,UAE1CsjI,EAAW51H,YAQ1BtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPmB,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC2I,GAAA,EAAD,CACEzD,YAAa,CACXxE,GAAG,EACHF,GAAG,CAAC,EAAG,GACPyB,KAAK,SACLb,aAAa,EACbyF,UAAU,OACVC,UAAWlH,KAAKwH,MAAM+4H,cAAgBvgI,KAAKwH,MAAMu5H,qBAAuB/gI,KAAKwH,MAAM44H,cAAgBpgI,KAAKwH,MAAMg5H,aAEhHt3H,WAAY,YACZF,UAAWhJ,KAAKwH,MAAMgW,QACtB/c,YAAc,SAAAqG,GAAC,OAAIgE,EAAKg5H,SAASh9H,QAKvC6B,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,GAELjH,KAAM,WACNI,UAAW,CACTF,MAAM,YAERM,KAAI,gBAAA+D,OAAkB3G,KAAKwH,MAAMyC,cAA7B,uCA7PZtB,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACTuF,GAAG,EACHrI,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,uBAugBkB,UAA9B5C,KAAKwH,MAAM08G,gBACbv7G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAGLE,KAAKwH,MAAMi5H,gBAAgBz8H,OAAO,EAChC2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,iBAGA5F,EAAAxI,EAAAC,cAACoa,EAAA,EAAD7a,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4b,cAAc,EACd1Z,KAAM,mBACNyY,QAAS5a,KAAKwH,MAAMi5H,gBACpB7jH,SAAU5c,KAAK+jI,mBAAmB7kH,KAAKlf,MACvC8a,aAAc9a,KAAKwH,MAAM25H,yBAGzBnhI,KAAKwH,MAAM05H,qBAAqBpjD,QAC9Bn1E,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,GAELjH,KAAM,UACNI,UAAW,CACTF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,uCAAA+D,OAAyC3G,KAAKwH,MAAM05H,qBAAqBvhD,cAAchyE,QAAQ,GAA/F,KAAAhH,OAAqG3G,KAAKwH,MAAM05H,qBAAqBrgD,WAArI,+BAGNl4E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,EACHkF,GAAG,IAGL5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,MACNC,MAAO,WACPH,KAAM,eAERwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAHb,uBAKsBX,EAAAxI,EAAAC,cAAA,cAASJ,KAAKwH,MAAM05H,qBAAqBphD,gBAAgBnyE,QAAQ,GAAjE,IAAsE3N,KAAKwH,MAAM05H,qBAAqBrgD,YAL5H,oBAOAl4E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,QACPgH,UAAW,UAHb,yFASJX,EAAAxI,EAAAC,cAACsnH,EAAD/nH,OAAAC,OAAA,CACE6d,MAAO,MACHzd,KAAKC,MAFX,CAGEsgH,eAAe,EACfE,gBAAgB,EAChB9uG,OAAQ,cACRxH,YAAanK,KAAKwH,MAAM2C,YACxB00E,aAAc7+E,KAAKC,MAAM4+E,aACzB6hC,eAAgB1gH,KAAKwH,MAAMy5H,oBAC3Bl5H,SAAU/H,KAAK8hI,0BAA0B5iH,KAAKlf,MAC9C+gH,oBAAqB/gH,KAAK0hI,iBAAiBxiH,KAAKlf,MAChD2gH,iBAAkB3gH,KAAKyhI,2BAA2BviH,KAAKlf,MACvDqe,qBAAsBre,KAAK4hI,0BAA0B1iH,KAAKlf,MAC1DijH,mBAAoB,+DACpBnkF,aAAc9+B,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMs5H,mBAAmBxrH,GAAGtV,KAAKwH,MAAM05H,qBAAqBlhD,kBAAoBhgF,KAAKwH,MAAM05H,qBAAqBlhD,iBAAmBhgF,KAAKwH,MAAMs5H,oBAE1Ln4H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAGLV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,sBAMsBtJ,KAAKwH,MAAMyC,cANjC,yBAgBdtB,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,GAELjH,KAAM,UACNI,UAAW,CACTF,MAAM,YAERM,KAAI,2DAvqCAC,8CCyYXmhI,8MA7Ybx8H,MAAQ,CACNmK,OAAO,KACP+wG,QAAQ,KACRuhB,YAAY,KACZ95H,YAAY,KACZ+5H,aAAa,KACbplG,aAAa,KACb+/C,aAAa,KACb50E,cAAc,KACdw2G,gBAAe,EACfwC,mBAAmB,KACnB6T,yBAAwB,KAI1B/zH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAUC,6EACjC5H,KAAKkD,YAECq/G,EAAiB36G,EAAU+J,SAAW3R,KAAKwH,MAAMmK,QAAY3R,KAAKC,MAAM0R,SAAWhK,EAAUgK,OAC7FwyH,EAAuBt0H,KAAKC,UAAU9P,KAAKC,MAAMq5H,iBAAmBzpH,KAAKC,UAAUnI,EAAU2xH,eAC7F8K,EAAsBv0H,KAAKC,UAAU9P,KAAKC,MAAMu5H,gBAAkB3pH,KAAKC,UAAUnI,EAAU6xH,eAC7FjX,GAAiB4hB,GAAwBC,IAC3CpkI,KAAK0H,wQAKDiK,EAAS3R,KAAKC,MAAM0R,QAAU3R,KAAKwH,MAAMmK,QAAU,OACzD3R,KAAKgI,SAAS,CACZ2J,UACA,WACAxO,EAAKkhI,cACLlhI,EAAKmhI,uMAIazlD,4EAEfA,4CACI,UAGL//C,EAAe,UACX+/C,EAAa18E,YACd,+CACkBnC,KAAK+C,cAAc8/E,cAAc7iF,KAAKC,MAAMqQ,uBAAjEwuB,uDAIM9+B,KAAKC,MAAM4nC,aAAag3C,EAAa18E,KAAK08E,EAAavxE,QAAQuxE,EAAa/2C,8BAC7D9nC,KAAK+C,cAAckuB,gBAAgB4tD,EAAa18E,KAAKnC,KAAKC,MAAMqQ,wBAArFwuB,6CAIJA,EAAeA,GAAgB9+B,KAAK+C,cAAc2O,MAAM,qBAEjDotB,sQAKF9+B,KAAKC,MAAM6kH,UAAUwU,eAAkBt5H,KAAKC,MAAM6kH,UAAU0U,uDACxD,0BAOCv4G,QAAQqD,IAAI,CACpBtkB,KAAKixB,gBAAgBjxB,KAAKC,MAAM6kH,UAAU0U,cAC1Cx5H,KAAKixB,gBAAgBjxB,KAAKC,MAAM6kH,UAAUwU,oDAJ1C2K,OACAC,OAMIplG,EAAqC,SAAtB9+B,KAAKwH,MAAMmK,OAAoBuyH,EAAeD,EAGnEjkI,KAAKgI,SAAS,CACZi8H,cACAC,eACAplG,+JAIc,IAAAh0B,EAAA9K,KACZ0iH,EAAU,KACVv4G,EAAc,KACd20B,EAAe,KACf70B,EAAgB,KAChBw2G,GAAiB,EACjBwC,EAAqB,KAEzB,OAAQjjH,KAAKwH,MAAMmK,QACjB,IAAK,OACH8uG,GAAiB,EACjB3hF,EAAe9+B,KAAKwH,MAAM08H,aAC1B/5H,EAAcnK,KAAKC,MAAM6kH,UAAUwU,cACnCrvH,EAAgBjK,KAAKC,MAAM6kH,UAAUwU,cAAcn3H,KACnD8gH,EAAkB,eAAAt8G,OAAkB3G,KAAKC,MAAM6kH,UAAU0U,aAAar3H,KAApD,iDAClBugH,EAAU,CACRtgH,KAAK,eAILQ,KAAI,aAAA+D,OAAc3G,KAAKC,MAAM6kH,UAAUwU,cAAcn3H,KAAjD,aAAAwE,OAAiE3G,KAAKC,MAAM6kH,UAAU0U,aAAar3H,OAE3G,MACA,IAAK,SACH8H,EAAgBjK,KAAKC,MAAM6kH,UAAU0U,aAAar3H,KAClDs+G,GAAiB,EACjB3hF,EAAe9+B,KAAKwH,MAAMy8H,YAC1B95H,EAAcnK,KAAKC,MAAM6kH,UAAU0U,aACnCvW,EAAkB,oBAAAt8G,OAAuB3G,KAAKC,MAAM6kH,UAAUwU,cAAcn3H,KAA1D,iDAClBugH,EAAU,CACRtgH,KAAK,aAILQ,KAAI,eAAA+D,OAAgB3G,KAAKC,MAAM6kH,UAAU0U,aAAar3H,KAAlD,kBAAAwE,OAAuE3G,KAAKC,MAAM6kH,UAAUwU,cAAcn3H,OAOpHnC,KAAKgI,SAAS,CACZ06G,UACAv4G,cACA20B,eACA70B,gBACAw2G,iBACAwC,sBACA,WACAn4G,EAAKu5H,kDAIC1yH,GACR3R,KAAKgI,SAAS,CACZ2J,wDAIiBH,EAAG4e,EAAOhS,GAAO,IAAA6+F,EAAAj9G,KAChC0iH,EAAU,KAEd,OAAQ1iH,KAAKwH,MAAMmK,QACjB,IAAK,OACH,IAAM4yH,EAAU/yH,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkB0vG,EAAKh9G,MAAM6kH,UAAU0U,aAAalsH,QAAQC,gBAAkB,KACzKi3H,EAAeD,EAAUxyH,SAASwyH,EAAQ15H,KAAK,IAAMulB,EACzDo0G,EAAexkI,KAAK+C,cAAcmS,iBAAiBsvH,EAAaxkI,KAAKwH,MAAM2C,YAAYxG,UACvF++G,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,6BAAA+D,OAA8B69H,EAAa72H,QAAQ,GAAnD,KAAAhH,OAAyD3G,KAAKC,MAAM6kH,UAAU0U,aAAar3H,KAA3F,cAER,MACA,IAAK,SACH,IAAMsiI,EAAcjzH,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkB0vG,EAAKh9G,MAAM6kH,UAAU0U,aAAalsH,QAAQC,gBAAkB,KAC7Ky5G,EAAkByd,EAAc1yH,SAAS0yH,EAAY55H,KAAK,IAAMulB,EACpE42F,EAAkBhnH,KAAK+C,cAAcmS,iBAAiB8xG,EAAgBhnH,KAAKwH,MAAM2C,YAAYxG,UAC7F++G,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,6BAAA+D,OAA8BqgH,EAAgBr5G,QAAQ,GAAtD,KAAAhH,OAA4D3G,KAAKC,MAAM6kH,UAAUwU,cAAcn3H,KAA/F,cAQVnC,KAAKqkI,cAELrkI,KAAKgI,SAAS,CACZ06G,yDAIiBtyF,GACnB,IAAMhS,EAAS,GACf,OAAQpe,KAAKwH,MAAMmK,QACjB,IAAK,OACHyM,EAAOjT,MAAQilB,EACfhS,EAAOi6C,aAAe,GACtBj6C,EAAOP,WAAa7d,KAAKC,MAAM6kH,UAAUwU,cAAcC,WACzD,MACA,IAAK,SACHn7G,EAAOjT,MAAQ,KACfiT,EAAOi6C,aAAe,CAACjoC,GACvBhS,EAAOP,WAAa7d,KAAKC,MAAM6kH,UAAU0U,aAAaC,aAK1D,OAAOr7G,mCAGA,IAAAunG,EAAA3lH,KAED0kI,IAAc1kI,KAAKC,MAAMykI,UAE/B,OACE/7H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBoI,GAAI,CAAC,EAAEq7H,EAAY,EAAI,IAEvB/7H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,UACZC,cAAe,SACfC,eAAgB,SAChBnB,MAAO,CAAC,EAAE4kI,EAAY,EAAI,MAGvB1kI,KAAKC,MAAMqQ,QAoCV3H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,IAGJE,KAAKC,MAAM0R,QACVhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,sBAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,OACNL,UAAW,UACXH,KAAM,gBACNhB,YAAa,UACbb,SAAiC,SAAtBP,KAAKwH,MAAMmK,OACtBlR,YAAc,SAAAqG,GAAC,OAAI6+G,EAAKsU,UAAU,YAEpCtxH,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,SACNL,UAAW,SACXH,KAAM,cACNhB,YAAa,UACbb,SAAiC,WAAtBP,KAAKwH,MAAMmK,OACtBlR,YAAc,SAAAqG,GAAC,OAAI6+G,EAAKsU,UAAU,gBAO5CtxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPgB,GAAI4jI,EAAY,EAAI,GAGQ,OAA1B1kI,KAAKwH,MAAMs3B,aACTn2B,EAAAxI,EAAAC,cAACsnH,EAAD/nH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwgH,gBAAgB,EAChB9uG,OAAQ3R,KAAKwH,MAAMmK,OACnB+wG,QAAS1iH,KAAKwH,MAAMk7G,QACpBv4G,YAAanK,KAAKwH,MAAM2C,YACxB20B,aAAc9+B,KAAKwH,MAAMs3B,aACzB+/C,aAAc7+E,KAAKC,MAAM6kH,UAAU0U,aACnCzxH,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzCijH,mBAAoBjjH,KAAKwH,MAAMy7G,mBAE/B5kG,qBAAsBre,KAAKqe,qBAAqBa,KAAKlf,QAErD2I,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,IAGJoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,sBAMsBtJ,KAAKwH,MAAMyC,cANjC,OAMoDjK,KAAKwH,MAAMmK,OAN/D,uBAYNhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,0BAjJlB+F,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAGLV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCG,KAAM,QACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACP3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,uDAQAX,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM83G,2BAL1B,sBAtQSl1G,iEC6RZ8hI,8MA5Rbn9H,MAAQ,CACNmC,UAAU,KACVi7H,WAAW,KACXC,YAAY,KACZ56H,cAAc,KACd0qE,oBAAoB,QAItB5xE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,gNAQLlD,KAAK0vH,qMAGkB/nH,EAAWC,mEAClC5H,KAAKkD,6RAKCs6B,EAAY,GACdonG,EAAa5kI,KAAK+C,cAAc2O,MAAM,GACpCkC,EAAyC,SAAhC5T,KAAKC,MAAM4T,0BAEpB7T,KAAK+C,cAAc2N,aAAa/Q,OAAOoE,KAAK/D,KAAKC,MAAMmQ,iBAAvD,eAAAO,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAwE,SAAAC,EAAOU,GAAP,IAAAtH,EAAAmK,EAAAhC,EAAAwsB,EAAA,OAAA9N,EAAA7wB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtElH,EAAchH,EAAKlD,MAAMmQ,gBAAgBqB,GAD6BN,EAAAE,KAAA,EAE7ClO,EAAKJ,cAAckuB,gBAAgB9mB,EAAYmoB,KAAK7gB,MAAMtO,EAAKlD,MAAMqQ,SAFxB,YAEtEgE,EAFsEnD,EAAAiD,MAAA,CAAAjD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKjDlO,EAAKJ,cAAcu+B,kBAAkBn3B,GALY,cAKpEmI,EALoEnB,EAAAiD,KAAAjD,EAAAE,KAAA,GAM/ClO,EAAKJ,cAAc6vB,oBAAoBte,EAAiB5G,MAAM4E,GAAYb,EAAMtH,EAAYyJ,GAN7C,SAMpEkrB,EANoE3tB,EAAAiD,MAQzDkB,GAAG,KAClBkoB,EAAU/rB,GAASqtB,EAGnB8lG,EAAaA,EAAW1yH,KAAK4sB,IAZ2C,yBAAA3tB,EAAAqB,SAAAzB,EAAA/Q,SAAxE,gBAAAyS,GAAA,OAAA9B,EAAA+B,MAAA1S,KAAA2S,YAAA,2BAkB8B3S,KAAK+C,cAAcsjG,yBAAyBrmG,KAAKC,MAAMqQ,QAAQtQ,KAAKC,MAAMmQ,gBAAgB,MAAM,MAAK,WAAnI61F,WAEJtmG,OAAOoE,KAAKkiG,GAAuBhiG,QAAS,SAAAokC,GAC1C,IAAMg9D,EAAkBliG,EAAKJ,cAAc2O,MAAMu0F,EAAsB59D,IACvE7K,EAAU6K,GAAYg9D,EACtBu/B,EAAaA,EAAW1yH,KAAKmzF,KAI3B17F,EAAY,GAElBhK,OAAOoE,KAAKy5B,GAAWv5B,QAAQ,SAAAwN,GAC7B,IAAMqtB,EAAetB,EAAU/rB,GAC/B,GAAIqtB,EAAaxpB,GAAG,GAAG,CACrB,IAAMq/G,EAAkB71F,EAAatb,IAAIohH,GAAYl3H,MAAM,KACvDo3H,EAAgB3hI,EAAKJ,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,QAAQ,QACrGovH,EAAgBA,EAAgBA,EAAc92H,KAAK,KAAO,UAC1DrE,EAAUiE,KAAK,CACbxI,GAAGqM,EACHnP,MAAM,OAAOwiI,EAAc,IAC3B35H,MAAM0G,KAAKwwD,MAAMsyD,GACjB1mH,MAAMwD,EAAM6T,OAAO,EAAE,GAAG5P,cAAcjE,EAAM6T,OAAO,QAKzDtlB,KAAKgI,SAAS,CACZw1B,YACA7zB,YACAi7H,mJAIK,IAAA95H,EAAA9K,KAED4J,EAAa,CACjBQ,SAAS,EACTC,SAAQ,EACRC,YAAY,EACZC,aAAa,EACbE,YAAY,IACZD,cAAc,GACdE,gBAAgB,GAChBhJ,OAAO,SAAAiJ,GAAC,OAAIA,EAAErI,OACd0I,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GACV,OAAI8C,WAAW9C,EAAEQ,QAAQ,EAChBR,EAAEQ,MAAM,IAER,MAGXC,YAAa,SAAAT,GACX,OAAO,MAETlJ,MAAM,CACJ4J,QAAS,CACPC,UAAW,CACT7C,QAAS,SAGbiD,OAAO,CACL9I,KAAK,CACHF,SAAS,GACTD,WAAW,IACXkJ,WAAYlK,KAAMmK,MAAMC,YAG5BC,QAAQ,CACNlJ,KAAK,CACHF,SAAS,GACTD,WAAW,IACXkJ,WAAYlK,KAAMmK,MAAMC,aAI9BE,sBAAsB,EACtBC,sBAAsB,GACtBE,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCE,sBAAsB,CAAEC,KAAM,SAC9Bq4H,wBAAwBhzH,SAAgC,GAAvB/R,KAAKwH,MAAMq9H,aAC5ChkI,OAAQb,KAAKC,MAAM+B,SAAW,CAAE6K,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHpC,aAAa,SAACC,EAAM/D,GAClB,IAAMmD,EAAgBY,EAAKzF,GACrBuvE,EAAsB1qE,EAAgBa,EAAK7K,MAAMmQ,gBAAgBnG,IAAkBa,EAAK/H,cAAc0S,gBAAgB,CAAC,QAAQ,SAASxL,EAAcyL,gBAAkB,KAC9K5K,EAAK9C,SAAS,CACZiC,gBACA0qE,yBAGJ5pE,aAAa,SAACF,EAAM/D,GAClBgE,EAAK9C,SAAS,CACZiC,cAAc,KACd0qE,oBAAoB,QAGxB7oE,QAAQ,CACN,CACEgmH,UAAW,GACXC,WAAY,GACZK,WAAYpyH,KAAKC,MAAM+B,SAAW,GAAK,GACvCgwH,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXG,cAAe5wH,KAAMC,OAAOkW,OAC5Bu6G,YAAa,SACbG,QAAS,CACP,CACE94D,GAAI,QACJnzD,MAAO,CACLgsH,cAAe,aAQrBpoH,IAA6C,OAA7BjK,KAAKwH,MAAMyC,gBAA0BjK,KAAKwH,MAAMg2B,UAAUx9B,KAAKwH,MAAMyC,iBAAiBjK,KAAKwH,MAAMg2B,UAAUx9B,KAAKwH,MAAMyC,eACtI+6H,EAAehlI,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAazV,KAAKC,MAAM4T,iBAAiB,SAC5FwtF,IAAerhG,KAAKwH,MAAMyC,eAAgBjK,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,SAASzV,KAAKwH,MAAMyC,cAAcyL,cAAc,wBAE5I,OACE/M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,IAGJE,KAAKwH,MAAMo9H,YAAc36H,IACxBtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0F,OAAQ,EACRzB,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACb1D,UAAW,SACXvI,WAAY,SACZjB,MAAO,CAAC,MAAM,OACduO,SAAU,WACVtM,OAAQ,CAAC,MAAM,OACff,cAAe,SACfC,eAAgB,UAGdgJ,EACEtB,EAAAxI,EAAAC,cAAAuI,EAAAxI,EAAA02G,SAAA,KACEluG,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACEzoG,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJsO,GAAG,EACHxM,OAAO,UAGX0P,MAAOzR,KAAKwH,MAAMyC,cAClBE,YAAanK,KAAKwH,MAAMmtE,sBAE1BhsE,EAAAxI,EAAAC,cAAC0C,GAAA,EAAD,CACEyB,UAAW,CACTmB,GAAG,EACHhD,SAAS,EACTD,WAAW,GAEbkB,SAAU,EACVjB,SAAU,CAAC,EAAE,GACbkB,aAAc,EACdnB,WAAY,CAAC,EAAE,GACf0B,KAAOk9F,EAAe,IAAM,KAC5Bh+F,OAAQrD,KAAKwH,MAAMg2B,UAAUx9B,KAAKwH,MAAMyC,iBAE1CtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAENtC,KAAKwH,MAAMyC,gBAIhBtB,EAAAxI,EAAAC,cAAAuI,EAAAxI,EAAA02G,SAAA,KACEluG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJxM,OAAQ,QACRD,IAAKkjI,IAEPr8H,EAAAxI,EAAAC,cAAC0C,GAAA,EAAD,CACEqB,KAAM,IACNI,UAAW,CACTmB,GAAG,EACHhD,SAAS,EACTD,WAAW,GAEbkB,SAAU,EACVjB,SAAU,CAAC,EAAE,GACbkB,aAAc,EACdnB,WAAY,CAAC,EAAE,GACfY,OAAQrD,KAAKwH,MAAMo9H,aAErBj8H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAHT,iBAYZqG,EAAAxI,EAAAC,cAACytB,EAAA,EAADluB,OAAAC,OAAA,CACE2D,KAAMmL,MACF9E,EAFN,CAGE+E,YAAY,EACZ9D,KAAM7K,KAAKwH,MAAMmC,UACjB2Q,SAAUta,KAAKC,MAAMqa,SACrBC,eAAgBva,KAAKC,MAAMqa,oBAtRRzX,wBC6ddoiI,8MA7dbz9H,MAAQ,CACN09H,eAAe,KACfC,oBAAoB,KACpBC,uBAAuB,KACvBC,6BAA6B,KAC7BC,gBAAgB,CACdC,EAAE,CACAC,MAAQ,CACNC,KAAK,EAAE,GACP3lI,MAAM,EAAE,GAEV4lI,WAAW,CACTD,KAAK,EAAE,EACP3lI,MAAM,EAAE,GAEV6lI,WAAW,CACTF,KAAK,IACL3lI,MAAM,EAAE,EACR8lI,WAAW,OAGfC,GAAG,CACDF,WAAW,CACTF,KAAK,IACL3lI,MAAM,KAERgmI,WAAW,CACTL,KAAK,EAAE,GACP3lI,MAAM,EAAE,IAEVimI,KAAO,CACLN,KAAK,EACL3lI,MAAM,EAAE,GACR8lI,WAAW,OAGf7F,GAAG,CACDgG,KAAO,CACLN,KAAK,EACL3lI,MAAM,EAAE,GAEVkmI,UAAU,CACRP,KAAK,EACL3lI,MAAM,EAAE,GAEVmmI,UAAU,CACRR,KAAK,EACL3lI,MAAM,GACN8lI,WAAW,WAOnB7iI,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAKkmI,oMAGkBv+H,EAAUC,mEACjC5H,KAAKkD,gKAGgBiiI,GACrBnlI,KAAKgI,SAAS,CACZm9H,2MAKEgB,EAAa,GACbjB,EAAiB,GAGftxH,EAAyC,SAAhC5T,KAAKC,MAAM4T,iBAEpBuyH,EAAqB,CACzBC,SAASrmI,KAAK+C,cAAc2O,MAAM,GAClCT,WAAWjR,KAAK+C,cAAc2O,MAAM,GACpC40H,aAAatmI,KAAK+C,cAAc2O,MAAM,aAGlC1R,KAAK+C,cAAc2N,aAAa1Q,KAAKC,MAAM8P,cAA3C,eAAAY,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAyD,SAAAC,EAAOU,GAAP,IAAAtH,EAAAi1B,EAAAtrB,EAAAoN,EAAAjQ,EAAAwyB,EAAA2yD,EAAAnlB,EAAAo1D,EAAAC,EAAA7kG,EAAAD,EAAA+kG,EAAAC,EAAAC,EAAA,OAAAz1G,EAAA7wB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvDlH,EAAchH,EAAKlD,MAAMmQ,gBAAgBqB,GADcN,EAAAE,KAAA,EAE/BlO,EAAKJ,cAAc++B,mBAAmB33B,EAAYhH,EAAKlD,MAAMqQ,SAF9B,cAEvD8uB,EAFuDjuB,EAAAiD,KAAAjD,EAAAE,KAAA,EAIP4P,QAAQqD,IAAI,CAChEnhB,EAAKJ,cAAc6vB,oBAAoBwM,EAAgB3tB,EAAMtH,EAAYyJ,GACzEzQ,EAAKJ,cAAc6gC,eAAe,CAACnyB,GAAOtO,EAAKlD,MAAMqQ,SACrDnN,EAAKJ,cAAcu+B,kBAAkBn3B,KAPsB,cAAA2J,EAAA3C,EAAAiD,KAAA8M,EAAAvhB,OAAA6yB,EAAA,EAAA7yB,CAAAmU,EAAA,GAItD7C,EAJsDiQ,EAAA,GAI3CuiB,EAJ2CviB,EAAA,GAI/Bk1E,EAJ+Bl1E,EAAA,GAUvD+vD,EAAemlB,EAAe5yE,IAAIigB,EAAYhyB,IAAQU,MAAM,GAC5Dk0H,EAAWp1H,EAAWvD,MAAMujE,GAE9Bq1D,EAAe,EACf7kG,EAAW,EAd8CtwB,EAAAE,KAAA,GAerClO,EAAKJ,cAAc8+B,aAAa13B,GAfK,SAevDq3B,EAfuDrwB,EAAAiD,OAgBvB,OAArBotB,EAAU8xB,SACzB7xB,EAAWD,EAAUO,OACrBukG,EAAer1H,EAAWvD,MAAM+zB,EAASje,IAAI,OAGzC+iH,EAAmB10H,KAAKgF,MAAMwvH,EAAS7iH,IAAI8iH,GAAc54H,MAAM,MAE/D84H,EAAgB7mI,OAAOoE,KAAKZ,EAAKqE,MAAM89H,iBAAiB/zH,OAAO,SAAAk0H,GAAI,OAAIA,GAAMc,IAC7EE,EAAkB10H,SAASy0H,EAAc7xH,OAE/CwxH,EAAWM,GAAmBN,EAAWM,GAAmBN,EAAWM,GAAiB,EAAI,EAEvFtjI,EAAKJ,cAAc2O,MAAMT,GAAY3N,SAAYH,EAAKJ,cAAc2O,MAAM0kF,GAAgB9yF,SAAYH,EAAKJ,cAAc2O,MAAM20H,GAAU/iI,SAAYH,EAAKJ,cAAc2O,MAAM40H,GAAchjI,UAC/L4hI,EAAezzH,GAAS,CACtB40H,WACAp1H,aACAq1H,eACAlwC,kBAOFgwC,EAAmBC,SAAWD,EAAmBC,SAASn0H,KAAKm0H,GAC/DD,EAAmBn1H,WAAam1H,EAAmBn1H,WAAWiB,KAAKjB,GACnEm1H,EAAmBE,aAAeF,EAAmBE,aAAap0H,KAAKo0H,IA1CZ,yBAAAn1H,EAAAqB,SAAAzB,EAAA/Q,SAAzD,gBAAAyS,GAAA,OAAA9B,EAAA+B,MAAA1S,KAAA2S,YAAA,WA8CA+zH,EAAe/mI,OAAOoE,KAAKoiI,GAAYlhG,OAAQ,SAACyhG,EAAa9jB,GACjE,IAAM3O,EAAQkyB,EAAWvjB,GAKzB,OAJI3O,EAAMyyB,EAAazyB,QACrByyB,EAAa9jB,KAAO7wG,SAAS6wG,GAC7B8jB,EAAazyB,MAAQliG,SAASkiG,IAEzByyB,GACP,CACA9jB,KAAK,EACL3O,MAAM,IAGFkxB,EAAsBuB,EAAa9jB,MAAQ7wG,SAASpS,OAAOoE,KAAK/D,KAAKwH,MAAM89H,iBAAiB,IAE5FqB,EAAwB,GAC9B3mI,KAAKC,MAAM8P,cAAc9L,QAAS,SAAAwN,GAC5ByzH,EAAezzH,KACjBk1H,EAAsBl1H,GAASyzH,EAAezzH,MAIlDyzH,EAAiByB,EAGbhnI,OAAOoE,KAAKmhI,GAAgBlhI,OAAO,IACrCkhI,EAAc,IAAUkB,GAGtBf,EAA+B,KAC7BD,EAAyBzlI,OAAOoE,KAAK/D,KAAKwH,MAAM89H,iBAAiBx/H,IAAK,SAAA88G,GAC1E,IAAMgkB,EAAiBjnI,OAAO2R,OAAOnO,EAAKqE,MAAM89H,gBAAgB1iB,IAAOjuG,MACjE1G,EAAQ24H,EAAehB,WAAagB,EAAehB,WAAajmI,OAAOoE,KAAKZ,EAAKqE,MAAM89H,gBAAgB1iB,IAAOjuG,MAC9GxJ,EAAQ4G,SAAS6wG,GACjBiJ,EAAS,CAAE1gH,QAAO8C,SAKxB,OAHI9C,IAAUg6H,IACZE,EAA+BxZ,GAE1BA,IAGT7rH,KAAKgI,SAAS,CACZk9H,iBACAC,sBACAC,yBACAC,qKAIK,IAAAv6H,EAAA9K,KAEP,IAAKA,KAAKwH,MAAM09H,eACd,OACEv8H,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,MACdytB,UAAUzuB,KAAKC,MAAM8B,QAEvB6jB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,2BAKZ,IAAM0iI,EAAkBtlI,KAAKwH,MAAM89H,gBAAgBtlI,KAAKwH,MAAM29H,qBAAuBnlI,KAAKwH,MAAM89H,gBAAgBtlI,KAAKwH,MAAM29H,qBAAuBnlI,KAAKwH,MAAM89H,gBAAgB,GAE7K,OACE38H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEosH,GAAI,EACJl0H,GAAI,EACJhB,MAAO,EACPC,GAAI,CAAC,EAAE,GACPF,GAAI,CAAC,EAAE,GACPoP,UAAW,EACXzN,aAAc,EACdmL,YAAa,aACbjM,gBAAiB,UAEjBiI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJD,OAAQ,KACRrN,eAAgB,YAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0F,OAAQ,KACRxO,MAAO,CAAC,EAAE,IACVkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACoa,EAAA,EAAD,CACEW,WAAY,CACV5Z,EAAE,EACFxB,GAAG,GAELoC,KAAM,kBACNyY,QAAS5a,KAAKwH,MAAM49H,uBACpBxoH,SAAW,SAAA3R,GAAC,OAAIH,EAAK+7H,uBAAuB57H,IAC5C6P,aAAc9a,KAAKwH,MAAM69H,iCAK7B1lI,OAAOoE,KAAK/D,KAAKwH,MAAM09H,gBAAgBp/H,IAAI,SAAC2L,EAAM+4D,GAChD,IAAMrgE,EAAcW,EAAK7K,MAAMmQ,gBAAgBqB,GACzCmwB,EAAgB92B,EAAKtD,MAAM09H,eAAezzH,GAC1Cq1H,EAAqBh8H,EAAK/H,cAAc2O,MAAM/R,OAAO2R,OAAOg0H,GAAiB3wH,MAAM8wH,MACnFsB,EAAgBnlG,EAAc0kG,aAAa54H,MAAMo5H,GACjDE,EAAaD,EAAczxH,GAAG,GAAKzD,KAAKC,IAAI,EAAErE,WAAWm0B,EAAcykG,SAAS7iH,IAAIujH,KAAmB,EACvGhY,EAAY5kH,GAAeA,EAAY/H,KAAO+H,EAAY/H,KAA9C,iBAAAuE,OAAqE8K,EAArE,QACZw1H,EAAgBn8H,EAAK/H,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,QAAQ,QAAQ1H,KAAK,KAEpH,OACErF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACExD,GAAE,SAAAuB,OAAW8K,GACbzQ,cAAe,MACf6F,IAAG,SAAAF,OAAW8K,GACds6G,UAAsB,QAAVt6G,EAAA,aAAA9K,OAA+BmE,EAAK7K,MAAMwB,MAAMC,OAAOkF,SAAY,MAE/E+B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,KACVuO,SAAU,YAEV1F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiC,OAAQ,OACRsM,SAAU,WACVtN,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,IAAK,MAGf6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,IAAK,IACbiC,OAAQ,OACRf,cAAe,OAGbrB,OAAOoE,KAAKuhI,GAAiBx/H,IAAI,SAACmI,EAAMi5H,GACtC,IAAMN,EAAiBtB,EAAgBr3H,GACjCk5H,EAAyBvlG,EAAc0kG,aAAa54H,MAAM5C,EAAK/H,cAAc2O,MAAMk1H,EAAenB,OACpG2B,EAAkCt8H,EAAK/H,cAAcS,YAAY2jI,EAAuBr8H,EAAK7K,MAAM+B,SAAW,EAAImlI,EAAuB/0H,GAAG,GAAK,EAAI,GAKzJ,OAJ4BtH,EAAK/H,cAAc0S,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,0BAEnG0xH,EAAkC,KAAKA,GAGvCz+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEosH,GAAI,EACJ/zH,eAAgB,WAChBnB,MAAO8mI,EAAe9mI,MACtBgiB,GAAe,QAAVrQ,EAAkB,EAAI,KAC3B5K,IAAG,kBAAAF,OAAoB8K,EAApB,KAAA9K,OAA6BugI,GAChCG,YAAW,aAAA1gI,OAAemE,EAAK7K,MAAMwB,MAAMC,OAAOkF,WAGrC,QAAV6K,GAAoBy1H,IAAkBvnI,OAAOoE,KAAKuhI,GAAiBthI,OAAO,IACzE2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,OACb2D,MAAO,CACLihI,UAAU,aAEZhlI,MAAOs/B,EAAcykG,SAASlhE,IAAIgiE,GAA0B,YAAc,UAEzEC,QASnBz+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPwO,OAAQ,EACRvN,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChB6gB,GAAe,QAAVrQ,EAAkB,CAAC,MAAM,SAAW,QACzC8sG,GAAK/zC,EAAW7qE,OAAOoE,KAAK+G,EAAKtD,MAAM09H,gBAAgBlhI,OAAO,EAAI,MAAQ,GAE1E2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,IAAK,IACbmB,eAAgB,CAAC,aAAa,aAE9B0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEosH,GAAI,CAAC,EAAE,GACPtyH,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAEdgP,IAGL9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,IAAK,IACbiB,WAAY,SACZC,cAAe,MACfe,OAAQ,CAAC,OAAO,QAChBd,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7G,OAAQ,OACRjC,MAAOknI,EACPtmI,gBAAiB,UAEjBiI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7G,OAAQ,OACRjC,MAAO,OACP0B,aAAc,CAAC,gBAAgB,iBAC/B6E,MAAO,CAACmF,WAAU,+BAAA7E,OAAgCsgI,EAAhC,iBAAAtgI,OAA6DsgI,EAA7D,oBAAAtgI,OAA6FsgI,EAA7F,iBAGtBt+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACExC,GAAI,EACJtG,MAAO,OACPiC,OAAQ,OACRhB,WAAY,SACZE,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAO9G,IAAKitH,EAAWhtH,OAAQ,CAAC,QAAQ,YAGxC4G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACExC,GAAI,EACJrF,WAAY,UAGA,QAAV0Q,EACE9I,EAAAxI,EAAAC,cAACgoH,EAAA,EAADzoH,OAAAC,OAAA,GACMkL,EAAK7K,MADX,CAEEwR,MAAOA,EACPtH,YAAaA,EACbwV,UAAW,CACTxd,KAAK,kBACLlC,MAAM,CACJ0D,SAASmH,EAAK7K,MAAM+B,SAAW,EAAI,EACnC4B,aAAakH,EAAK7K,MAAM+B,SAAW,EAAI,GACvCqE,MAAM,CACJ/D,MAAMwI,EAAK7K,MAAMwB,MAAMC,OAAOqa,UAC9BtZ,WAAWqI,EAAK7K,MAAM+B,SAAW,IAAM,IACvCU,SAASoI,EAAK7K,MAAM+B,SAAW,OAAS,aAMhD2G,EAAAxI,EAAAC,cAAC80H,GAADv1H,OAAAC,OAAA,GACMkL,EAAK7K,MADX,CAEE0D,SAAUmH,EAAK7K,MAAM+B,SAAW,EAAI,EACpC4B,aAAckH,EAAK7K,MAAM+B,SAAW,EAAI,GACxCgxH,aAAc,CACZ1wH,MAAMwI,EAAK7K,MAAMwB,MAAMC,OAAOqa,UAC9BtZ,WAAWqI,EAAK7K,MAAM+B,SAAW,IAAM,IACvC2J,WAAWb,EAAK7K,MAAMwB,MAAMmK,MAAMC,UAClCnJ,SAASoI,EAAK7K,MAAM+B,SAAW,OAAS,gBAWvD8I,EAAK7K,MAAM+B,UACV2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9I,MAAO,IAAMiB,WAAY,aAAcE,eAAgB,gBAOzE0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,KACVuO,SAAU,YAEV1F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9I,MAAO,CAAC,IAAK,MACnB6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,IAAK,IACbkB,cAAe,OAGbrB,OAAOoE,KAAKuhI,GAAiBx/H,IAAI,SAACyhI,EAAgBL,GAChD,IAAMN,EAAiBtB,EAAgBiC,GACvC,OACE5+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,EACJkzG,GAAI,CAAC,EAAE,GACP/zH,eAAgB,WAChBnB,MAAO8mI,EAAe9mI,MACtB+G,IAAG,kBAAAF,OAAoBugI,GACvBG,YAAW,aAAA1gI,OAAemE,EAAK7K,MAAMwB,MAAMC,OAAOkF,UAElD+B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,UAENilI,UAUdvnI,KAAKC,MAAM+B,UACV2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9I,MAAO,IAAMiB,WAAY,aAAcE,eAAgB,UAC3D0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMnG,WAAY,EAAGC,SAAU,cArddG,aCuFlB2kI,8MAvFbzkI,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,kJAIL,OACEyF,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTs1H,GAAG,EACHn1H,GAAG,CAAC,EAAE,GACNuG,GAAG,CAAC,EAAE,IAER7F,UAAU,EACVD,eAAe,EACfG,YAAaT,KAAKC,MAAMQ,aAExBkI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7G,OAAQ,OACRhB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7I,GAAI,CAAC,EAAE,IAGLC,KAAKC,MAAMmC,KACTuG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAMnC,KAAKC,MAAMmC,KACjBC,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,MACtCM,MAAOtC,KAAKC,MAAMsC,UAAYvC,KAAKC,MAAMsC,UAAY,WAErDvC,KAAKC,MAAMkB,OACbwH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9G,IAAK9B,KAAKC,MAAMkB,MAChBrB,MAAOE,KAAKC,MAAM+B,SAAW,QAAU,QACvCD,OAAQ/B,KAAKC,MAAM+B,SAAW,QAAU,WAKhD2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,CAAC,EAAE,GACP1E,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,IAEZ1C,KAAKC,MAAM+mB,OAEdre,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAENtC,KAAKC,MAAM2C,OAGhB+F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE1H,MAAO,SACPoB,MAAO,WACPH,KAAM,qBACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,mBAlFhBa,aCuRnB4kI,8MApRbjgI,MAAQ,CACNkgI,QAAO,EACPC,eAAc,EACdC,oBAAoB,KACpBC,mCAAmC,QAIrC9kI,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAILlD,KAAK0H,gMAGkBC,EAAUC,2EACjC5H,KAAKkD,YAEC0sB,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClDw3H,EAAwBngI,EAAU8tC,iBAAmBz1C,KAAKC,MAAMw1C,gBAClE7lB,GAAkBk4G,IACpB9nI,KAAK0H,mRAKF1H,KAAKC,MAAMqQ,SAAYtQ,KAAKC,MAAMw1C,yDAC9B,aAGLoyF,EAAqC,KACnCtiH,EAAiBvlB,KAAK+C,cAAcyf,qBACpCulH,EAAsB/nI,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,kBAClEkyH,EAAgBI,EAAoB11G,SAAW01G,EAAoBn6E,kBAAkBn5B,SAASlP,EAAengB,6CAG1GpF,KAAKgI,SAAS,CACnB0/H,QAAO,EACPC,2CAI8B3nI,KAAK+C,cAAc0tC,oBAAoBzwC,KAAKC,MAAMqQ,kBAA9Es3H,WAIqBA,EAAoB5jI,OAAO,IACpD6jI,EAAqCD,EAAoB9hI,IAAK,SAAC0L,GAC7D,IAAMrH,EAAchH,EAAKJ,cAAc0S,gBAAgB,CAAC,QAAQ,gBAAgB,QAAQ,kBAAkBjE,EAAGse,cACzGk4G,EAAa,KACjB,OAAQx2H,EAAGG,QACT,QACA,IAAK,UACHq2H,EAAa,gBACf,MACA,IAAK,WACHA,EAAa,cACf,MACA,IAAK,OACHA,EAAa,OAuBjB,MApBoB,CAClBA,aACA53G,OAAO5e,EAAGrG,MACVsG,MAAMD,EAAGse,YACTne,OAAOH,EAAGG,OAAO+D,cACjBi+B,WAAWniC,EAAGmiC,WAAWj+B,cACzB9D,OAAOJ,EAAGyiC,SAAW,YAAc,UACnCpsC,KAAK1E,EAAKJ,cAAcmF,YAAYsJ,EAAG3J,MACvCogI,WAAWz2H,EAAGyiC,SAAW,OAAS,YAClCi0F,gBAAgB,CACd5lI,MAAMa,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAagQ,OAAOH,EAAGG,OAAOpE,eAC5DwiB,QAAQ5sB,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAaC,SAAS4P,EAAGG,OAAOpE,gBAElEssB,IAAI12B,EAAKJ,cAAcqjB,2BAA2B5U,EAAG3J,KAAK2J,EAAGmmB,WAC7DrhB,KAAKnT,EAAKJ,cAAc8P,YAAmC,IAAvBd,SAASP,EAAGQ,YAAiBiE,OAAO,gBACxEkyH,gBAAgB,CACd7lI,MAAMkP,EAAGyiC,SAAW9wC,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAYlpB,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAO0a,SAE1HyiG,UAAU5kH,EAAY/H,MAAQe,EAAKJ,cAAc0S,gBAAgB,CAAC,QAAQ,SAASjE,EAAGse,YAAYpa,cAAc,UAAtG,iBAAA/O,OAAmI6K,EAAGse,YAAtI,YAQhB9vB,KAAKgI,SAAS,CACZ0/H,QAAO,EACPC,gBACAC,sBACAC,2KAIK,IAAA/8H,EAAA9K,KAEP,OAAKA,KAAKwH,MAAMkgI,QAAW1nI,KAAKwH,MAAMmgI,cAKpCh/H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKC,MAAM+mB,QAAWhnB,KAAKwH,MAAMqgI,oCAAsC7nI,KAAKwH,MAAMqgI,mCAAmC7jI,OAAO,GAAMhE,KAAKC,MAAMwJ,WAC3Id,EAAAxI,EAAAC,cAAC6tH,EAAA,EACKjuH,KAAKC,MAAM03G,WAEd33G,KAAKC,MAAM+mB,OAKhBhnB,KAAKwH,MAAMqgI,oCAAsC7nI,KAAKwH,MAAMqgI,mCAAmC7jI,OAAO,EACpG2E,EAAAxI,EAAAC,cAAC4uH,GAAA,EAADrvH,OAAAC,OAAA,CACEwoI,mBAAmB,EACnB3nI,YAAa,SAACR,GAAD,OAAW6K,EAAK/H,cAAc+4E,WAAW77E,EAAMwgG,IAAI5mE,MAChE0+E,KAAM,CACJ,CACEvxF,MAAM,OACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACEvjD,KAAK,SACLsC,KAAK,CAAC,eAER,CACEtC,KAAK,OACLsC,KAAK,CAAC,QACN5F,MAAM,CACJyF,GAAG,CAAC,EAAE,OAKd,CACEshB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACEvjD,KAAK,OACLsC,KAAK,CAAC,aAIZ,CACEmhB,MAAM,OACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACEvjD,KAAK,OACLsC,KAAK,CAAC,WAIZ,CACEmhB,MAAM,SACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACEvjD,KAAK,OACLsC,KAAK,CAAC,iBAIZ,CACEmhB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACEvjD,KAAK,OACLoB,QAAO,EACPkB,KAAK,CAAC,cACN5F,MAAM,CACJoB,GAAG,EACHgB,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,UAGzC,CACEG,KAAK,SACL0D,KAAK,CAAC,UACN5F,MAAM,CACJoG,MAAM,CACJ+8G,cAAc,kBAMxB,CACEz+G,QAAO,EACPqiB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACEvjD,KAAK,SACLsC,KAAK,CAAC,UACN5F,MAAM,CACJ0D,SAAU,IAGd,CACExB,KAAK,YACLlC,MAAM,CACJyF,GAAG,MAKX,CACEshB,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACEvjD,KAAK,QACLsC,KAAK,CAAC,aACN5F,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEwB,KAAK,OACLsC,KAAK,CAAC,cAKV7F,KAAKC,MAvIX,CAwIE4/F,KAAM7/F,KAAKwH,MAAMqgI,sCAEjB7nI,KAAKC,MAAMwJ,UA/JZ,YAhH2B5G,aCorDzBwlI,8MAnqDb7gI,MAAQ,CACNg2B,UAAU,KACVmD,gBAAgB,GAChBE,gBAAgB,GAChB0sF,iBAAiB,GACjBqG,gBAAgB,KAChBlyC,gBAAgB,KAChBsyC,iBAAgB,EAChBsU,kBAAiB,EACjBC,mBAAmB,KACnBC,yBAAyB,KACzBC,+BAA+B,KAC/BvU,8BAA8B,UAIhCnxH,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,2DAILlD,KAAKyH,oBAAqB,sKAIpBzH,KAAK0vH,qMAGY/nH,EAAWC,kFAClC5H,KAAKkD,YAEC0sB,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClDo4H,EAAyB74H,KAAKC,UAAUnI,EAAUyI,mBAAqBP,KAAKC,UAAU9P,KAAKC,MAAMmQ,kBACnGwf,GAAkB84G,IACpB1oI,KAAKqI,aAAa,CAChB2rH,iBAAgB,GAChB,WACA7wH,EAAKusH,oMAKQ5nH,wFAASC,iCAAS,KAC9B/H,KAAKyH,mDACKzH,KAAKgI,SAASF,EAASC,2EAE/B,kKAGwBmsH,GAC/Bl0H,KAAKqI,aAAa,CAChB6rH,8NAKI9jH,EAAkBpQ,KAAKC,MAAMmQ,iBAAmB,IAGlDpQ,KAAKwH,MAAMwsH,kBAAmBh0H,KAAKwH,MAAM8gI,2DACpC,0BAGHtoI,KAAKqI,aAAa,CACtBigI,kBAAiB,eAIftoI,KAAKC,MAAMqQ,gCACPxI,EAAW,GACXyvC,EAAmBv3C,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,qBAGvEzV,KAAK+C,cAAcsN,gBAAgBrQ,KAAKC,MAAMqQ,QAAQinC,EAAiB,SAAS53C,OAAOoE,KAAKqM,cAMlF6Q,QAAQqD,IAAI,CAEpB,GAEAtkB,KAAK+C,cAAc09B,oBAAoBrwB,EAAgBpQ,KAAKC,MAAMqQ,kDANlEoxE,OACAlkD,OAQF11B,EAAS01B,UAAYA,EAErB11B,EAAS45E,gBAAkBA,GAAmB/hF,OAAOoE,KAAK29E,GAAiB19E,OAAO,EAAI09E,EAAkB,KAEpG55E,EAAS45E,kBACX55E,EAAS2gI,+BAAiC9oI,OAAOoE,KAAK+D,EAAS45E,iBAAiBz8C,OAAQ,SAACwjG,EAA+Bh3H,GACtH,IAAMk3H,EAAY7gI,EAAS45E,gBAAgBjwE,GACrCtH,EAAcW,EAAK/H,cAAc0S,gBAAgB,CAAC,QAAQ,eAAe,QAAQ,kBAAkBhE,IACzG,GAAItH,EAAYk3B,WAAav2B,EAAK7K,MAAM4T,iBAAiB,CACvD,OAAQ80H,EAAU/2H,QAChB,IAAK,UACHzH,EAAY89H,WAAa,YACzB99H,EAAYg+H,gBAAkB,CAC5B7lI,MAAMwI,EAAK7K,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAO0a,SAEtD,MACA,IAAK,WACHniB,EAAY89H,WAAa,OACzB99H,EAAYg+H,gBAAkB,CAC5B7lI,MAAMwI,EAAK7K,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAMxDliB,EAAYsH,MAAQA,EACpBtH,EAAYyH,OAAS+2H,EAAU/2H,OAC/BzH,EAAYo5B,UAAYolG,EAAUlmD,cAClCt4E,EAAYy+H,WAAaD,EAAUnmD,aACnCimD,EAA+Bt+H,EAAYqyB,WAAaryB,EAE1D,OAAOs+H,GACP,KAGJ3gI,EAAS64B,gBAAkB,GAC3B74B,EAAS+4B,gBAAkB,IAEvBrD,0BACImD,EAAkBhhC,OAAOoE,KAAKy5B,EAAUhtB,eAAee,OAAO,SAAAE,GAAK,OAAM3G,EAAK/H,cAAc2O,MAAM8rB,EAAUhtB,cAAciB,GAAO6C,kBAAkBgB,GAAG,KAE5JxN,EAAS64B,gBAAkBA,EAErB/sB,EAAyC,SAAhC5T,KAAKC,MAAM4T,iBAEtB6pB,EAAS19B,KAAK+C,cAAc2O,MAAM,GAElCmsB,EAAkB79B,KAAK+C,cAAc2O,MAAM,aAGzC1R,KAAK+C,cAAc2N,aAAaiwB,EAAhC,eAAAzf,EAAAvhB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAgD,SAAAiD,EAAOtC,GAAP,IAAAtH,EAAAg0B,EAAAC,EAAAoD,EAAAvwB,EAAA0wB,EAAA7C,EAAA4C,EAAAD,EAAA,OAAAzQ,EAAA7wB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgBwC,EAAA5C,KAAA,EAO1C4P,QAAQqD,IAAI,CACpBxZ,EAAK/H,cAAc8+B,aAAa13B,GAEhCW,EAAK/H,cAAc++B,mBAAmB33B,EAAYW,EAAK7K,MAAMqQ,WAVX,cAAA6tB,EAAAlqB,EAAAG,KAAAgqB,EAAAz+B,OAAA6yB,EAAA,EAAA7yB,CAAAw+B,EAAA,GAIlDqD,EAJkDpD,EAAA,GAMlDntB,EANkDmtB,EAAA,GAAAnqB,EAAA5C,KAAA,EAatBvG,EAAK/H,cAAc6vB,oBAAoB3hB,EAAWQ,EAAMtH,EAAYyJ,GAb9C,OAa9C+tB,EAb8C1tB,EAAAG,KAe9C0qB,EAAetB,EAAUhtB,cAAciB,GAAOqtB,aAC9C4C,EAAc5C,EAAatb,IAAIga,EAAUG,eACzC8D,EAAWD,EAAUO,SAAWj3B,EAAK/H,cAAc2O,MAAM8vB,EAAUO,QAAQz+B,QAAUwH,EAAK/H,cAAc2O,MAAM8vB,EAAUO,QAAUj3B,EAAK/H,cAAc2O,MAAM,IAEnJpO,UACZo6B,EAASA,EAAOxrB,KAAKuvB,EAAS/zB,MAAMg0B,KAQlCC,IACF9D,EAAkBA,EAAgB3rB,KAAKyvB,IA7BW,yBAAA1tB,EAAAzB,SAAAuB,EAAA/T,SAAhD,gBAAAqU,GAAA,OAAA6M,EAAAxO,MAAA1S,KAAA2S,YAAA,6BAwC8B3S,KAAK+C,cAAcu1E,6BAA6Bt4E,KAAKC,MAAMqQ,QAAQF,EAAgB,sBAAjHs9G,mBAC6B1tH,KAAK+C,cAAcsjG,yBAAyBrmG,KAAKC,MAAMqQ,QAAQF,EAAgB,cAA5Gq9G,SACAK,EAA+BL,EAAuB9tH,OAAOoE,KAAK0pH,GAAsB3nH,IAAK,SAAAuiC,GACjG,IAAMh2B,EAAUo7G,EAAqBplF,GACrC,OAAIh2B,EAAQiD,GAAG,GACb,IAAA3O,OAAW0L,EAAQ1E,QAAQ,GAA3B,KAAAhH,OAAiC0hC,GAE1B,OAER92B,OAAO,SAAAtG,GAAC,OAAW,OAANA,IAAe,KAE/BnD,EAAS41B,OAASA,EAElB51B,EAAS+4B,gBAAkBrD,EAAUqD,gBACrC/4B,EAAS4lH,sBAAwBA,EACjC5lH,EAASgmH,6BAA+BA,UAG1ChmH,EAASksH,iBAAkB,EAC3BlsH,EAASwgI,kBAAmB,EAEtB1U,EAAkBj0H,OAAOoE,KAAKqM,GAAiBmB,OAAO,SAAAE,GAAK,OAAM3J,EAAS64B,gBAAgBlM,SAAShjB,KAAW9R,OAAOoE,KAAK+D,EAAS+4B,iBAAiBpM,SAAShjB,KACnK3J,EAAS8rH,gBAAkBA,EAG3B5zH,KAAKqI,aAAaP,2BAGlB9H,KAAKqI,aAAa,CAChBw4B,gBAAgB,GAChBF,gBAAgB,GAChBqzF,iBAAgB,EAChBsU,kBAAiB,EACjB1U,gBAAgBj0H,OAAOoE,KAAKqM,yIAK1B,IAAA6sG,EAAAj9G,KACAwiH,EAAwC,WAA7BxiH,KAAKC,MAAMwiH,cACtBl9F,EAAiBvlB,KAAK+C,cAAcyf,qBACpCgvD,EAAYxxE,KAAK+C,cAAc0S,gBAAgB,CAAC,cAChDozH,EAAU7oI,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,YACzDqzH,EAAe9oI,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,iBAC9DgsE,EAAqBzhF,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,iBAEjEsyH,EAAsB/nI,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,kBAClEszH,EAAe/oI,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAazV,KAAKC,MAAM4T,iBAAiB,UAC5Fm1H,EAAc,CAAC,WAAW,cAAc,aAAaz3H,OAAQ,SAAA03H,GACjE,IAAMC,EAAajsB,EAAKl6G,cAAc0S,gBAAgB,CAAC,QAAQwzH,IAC/D,OAAOC,EAAW72G,WAAa62G,EAAWt7E,kBAAkB5pD,QAAUklI,EAAWt7E,kBAAkBn5B,SAAS1iB,SAASwT,EAAengB,QAGtI,OACEuD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACE1/G,GAAI,GAEHw6H,EAHH,aAqDG/oI,KAAKwH,MAAMwsH,gBAiBVrrH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAGLE,KAAKC,MAAMqQ,SAAWtQ,KAAKwH,MAAMm5B,gBAAgB38B,OAAO,EACtD2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPuJ,GAAI,CAAC,EAAE,GACPtI,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEosH,GAAI,CAAC,EAAE,GACPl1H,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACN0O,GAAG,CAAC,EAAE,GACN9F,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMk2B,OACT/0B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE8uG,WAAY,EACZj1G,WAAY,CAAC,EAAE,GACfH,MAAO,YACPqJ,WAAY,UACZjJ,SAAU,CAAC,EAAE,SACb6G,wBAAyB,CAAEC,OAAQxJ,KAAKwH,MAAMk2B,OAAO/vB,QAAQ,GAAG,sBAIlEhF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAK,SAGjBsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,WAOAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0mB,UAAW,SACXC,QAASvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,aAExD9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,mBAOnBqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEosH,GAAI,CAAC,EAAE,GACPl1H,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACN0O,GAAG,CAAC,EAAE,GACN9F,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMg2B,UACT70B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC60H,GAADt1H,OAAAC,OAAA,CACE+D,SAAU,GACN3D,KAAKC,MAFX,CAGEu9B,UAAWx9B,KAAKwH,MAAMg2B,aAExB70B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UA2BhB0H,EAAAxI,EAAAC,cAAC80H,GAADv1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkE,KAAM,KACNR,SAAU,EACVqvH,aAAc,CACZtwH,SAAS,GACTD,WAAW,IACXH,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDmR,UAAWx9B,KAAKwH,MAAMg2B,eAK5B70B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAK,SAGjBsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,iBAQEtC,KAAKwH,MAAMkmH,uBACT/kH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0mB,UAAW,SACXC,QAAS,8DAA8DvvB,KAAKwH,MAAMkmH,uBAAyB1tH,KAAKwH,MAAMkmH,sBAAsBp4G,GAAG,GAAxE,KAAA3O,OAAkF3G,KAAKwH,MAAMsmH,6BAA6B9/G,KAAK,OAA/H,KAA2I,KAElNrF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,mBASvBqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACN0O,GAAG,CAAC,EAAE,GACN9F,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMg2B,UACT70B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE8uG,WAAY,EACZj1G,WAAY,CAAC,EAAE,GACfH,MAAO,YACPqJ,WAAY,UACZjJ,SAAU,CAAC,EAAE,SACb6G,wBAAyB,CAAEC,OAAQ,mBAAmBxJ,KAAKwH,MAAMg2B,UAAUM,kBAAkBnwB,QAAQ,GAAG,sBAI1GhF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAK,SAGjBsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,gBAOAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0mB,UAAW,SACXC,QAASvvB,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,qBAExD9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,oBAQrBqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPsF,GAAI,mBACJnE,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,CAAC,EAAE,MACVkB,cAAe,SACfoE,GAAI,yBAEJuD,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACE9vF,MAAO,cACP2wF,WAAc33G,KAAKC,MAAM+B,SAIrB,KAJgC,CAClCqE,MAAM,CACJooB,UAAU,UAId9lB,EAAAxI,EAAAC,cAAC+oI,GAADxpI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqa,SAAU,6BAIhB3R,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,MACVkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,KACEnuG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,CAAC,EAAE,GACP/hB,GAAI,CAAC,EAAE,GACPg1H,UAAW,SACX/zH,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,IACVkB,cAAe,SACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CACExrH,WAAY,EACZC,SAAU,CAAC,EAAE,GACb4G,UAAW,QAHb,gBAQFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACPvJ,MAAO,CAAC,EAAE,IACVkB,cAAe,SACfC,eAAgB,YAEhB0H,EAAAxI,EAAAC,cAACoa,EAAA,EAAD,CACEW,WAAY,CACV5Z,EAAE,EACFxB,GAAG,GAEL+a,aACE,CAAC3P,MAAM,OAAO8C,MAAM,MAEtB9L,KAAM,mBACNyY,QAAS,CACP,CAACzP,MAAM,OAAO8C,MAAM,MACpB,CAAC9C,MAAM,QAAQ8C,MAAM,MACrB,CAAC9C,MAAM,SAAS8C,MAAM,MACtB,CAAC9C,MAAM,SAAS8C,MAAM,MACtB,CAAC9C,MAAM,MAAM8C,MAAM,QAErB2O,SAAW,SAAA3R,GAAC,OAAIgyG,EAAKoY,iCAAiCpqH,QAI5DtC,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,CAAC,EAAE,GACPqvH,UAAW,SACX9zH,eAAgB,SAChBmE,GAAI,yBAEJuD,EAAAxI,EAAAC,cAACkP,GAAA,EAAD3P,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8P,cAAe,GACfuK,SAAU,wBACVC,eAAgB,wBAChB3K,mBAAoB5P,KAAKwH,MAAM0sH,8BAC/B/9G,iBAAkBnW,KAAK+C,cAAc0wD,oBAAoB,MAAM,WAQ3E9qD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ3N,GAAI,OACJd,MAAO,CAAC,EAAE,IACVi1H,UAAW,SACX9zH,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACb4G,UAAW,UAGTtJ,KAAKC,MAAM+B,SACThC,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAazV,KAAKC,MAAM4T,iBAAiB,cAE7E7T,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAazV,KAAKC,MAAM4T,iBAAiB,gBAOtF2uG,GAAYxiH,KAAKwH,MAAMm5B,gBAAgB38B,OAAO,GAAKhE,KAAKC,MAAMqQ,SAAW04H,EAAYhlI,QAAQ,GAC5F2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPsF,GAAI,QACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJz+G,MAAO,EACPyO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbi7G,aAAc,yBAEdj/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAQuG,GAAT,CACEzM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,UAOFkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,CAAC,SAAS,QAGvB,CAAC,WAAW,cAAc,aAAa8E,IAAK,SAACmjI,EAASG,GACpD,IAAMF,EAAajsB,EAAKl6G,cAAc0S,gBAAgB,CAAC,QAAQwzH,IAC/D,OACEtgI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE/B,IAAG,QAAAF,OAAUyiI,GACb76H,GAAI66H,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1BpU,GAAIoU,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1BtpI,MAAO,CAAC,EAAE,EAAEkpI,EAAYhlI,SAExB2E,EAAAxI,EAAAC,cAACipI,GAAD1pI,OAAAC,OAAA,GACMq9G,EAAKh9G,MADX,CAEEmC,KAAM8mI,EAAW9mI,KACjBQ,KAAMsmI,EAAWzqB,KACjBt9G,MAAO+nI,EAAW/nI,MAClB6lB,MAAOkiH,EAAWj7H,MAClBxN,YAAc,SAAAqG,GAAC,OAAIm2G,EAAKh9G,MAAM8G,YAAX,SAAAJ,OAAgCuiI,EAAWhrD,iBA8B9El+E,KAAKwH,MAAMk6E,iBACT/4E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPnJ,GAAI,mBACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CAAOntH,GAAI,CAAC,EAAE,IAAd,oBACA6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACkpI,GAAA,EAAD3pI,OAAAC,OAAA,CACEmQ,cAAepQ,OAAOoE,KAAK/D,KAAKwH,MAAMihI,gCACtClwB,KAAM,CACJ,CACEvxF,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,GAAI,KAEbgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACEwC,QAAO,EACPqiB,MAAM,YACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACE3kD,KAAK,SACLoB,KAAK,SACLsC,KAAK,CAAC,aACN5F,MAAM,CACJ0D,SAAU,IAGd,CACExB,KAAK,YACLlC,MAAM,CACJyF,GAAG,MAKX,CACEshB,MAAM,aACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACE3kD,KAAK,SACLoB,KAAK,SACLsC,KAAK,CAAC,cACN5F,MAAM,CACJ0D,SAAU,IAGd,CACEJ,KAAK,OACLpB,KAAK,SACL0D,KAAK,CAAC,SACN5F,MAAM,CACJyF,GAAG,MAKX,CACEshB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACEvjD,KAAK,OACLoB,QAAO,EACPxC,KAAK,SACL0D,KAAK,CAAC,cACN5F,MAAM,CACJoB,GAAG,EACHgB,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,UAGzC,CACEG,KAAK,SACL0D,KAAK,CAAC,UACN5F,MAAM,CACJoG,MAAM,CACJ+8G,cAAc,kBAMxB,CACEp8F,MAAM,GACN0xF,kBAAiB,EACjB/zG,OAA8B,OAAvB3E,KAAKC,MAAMqQ,QAClBrQ,MAAM,CACJH,MAAM,CAAC,IAAK,MAEd8e,YAAY,CACV9e,MAAM,GAERgnD,OAAO,CACL,CACE3kD,KAAK,SACL8L,MAAM,QACN4qG,UAAU,CACR3xG,SAAS,SAACjH,GAAD,MAAyC,YAA7BA,EAAMkK,YAAYyH,SAEzC3R,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbyN,UAAU,KACVhI,UAAU,UACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAWg9G,EAAKh9G,MAAM8G,YAAX,SAAAJ,OAAgC86E,EAAmBvD,MAAnD,KAAAv3E,OAA4D1G,EAAMkK,YAAYsH,eAM3GzR,KAAKC,MAjIX,CAkIEmQ,gBAAiBpQ,KAAKwH,MAAMihI,oCAMtC9/H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPsF,GAAI,mBACJpE,cAAe,SACfuN,GAAKvO,KAAKwH,MAAMm5B,gBAAgB38B,OAAa,EAAJ,IAGtChE,KAAKwH,MAAMm5B,gBAAgB38B,OAAO,GAAKrE,OAAOoE,KAAK/D,KAAKwH,MAAMq5B,iBAAiB78B,OAAO,GAAKhE,KAAKwH,MAAMosH,gBAAgB5vH,OAAO,IAC5H2E,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CAAOntH,GAAI,CAAC,EAAE,IAAd,oBAEJ6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9I,MAAO,EAAGkB,cAAe,UAE3BrB,OAAOoE,KAAK/D,KAAKwH,MAAMq5B,iBAAiB78B,OAAO,GAC/C2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPnJ,GAAI,iBACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJz+G,MAAO,EACPyO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbi7G,aAAc,yBAEdj/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAQuG,GAAT,CACEzM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,sBAOFkG,EAAAxI,EAAAC,cAACkpI,GAAA,EAAD3pI,OAAAC,OAAA,CACEmQ,cAAepQ,OAAOoE,KAAK/D,KAAKwH,MAAMq5B,iBACtCpgC,YAAa,SAACR,GAAD,OAAWg9G,EAAKh9G,MAAMigB,YAAYjgB,EAAMwR,QACrD8mG,KAAM,CACJ,CACEvxF,MAAM,WACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACE6kB,MAAM,OACN0xF,kBAAiB,EACjB/zG,OAA8B,OAAvB3E,KAAKC,MAAMqQ,QAClBrQ,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACEqjB,MAAM,MACNy3F,KAAKoqB,EACL5oI,MAAM,CACJH,MAAM,CAAC,IAAK,MAEd8e,YAAY,CACV5d,cAAc,SACdD,WAAW,cAEb+lD,OAAO,CACL,CACE3kD,KAAK,MACLmuH,aAAY,GAEd,CACE3hH,YAAW,EACXxM,KAAK,mBACLlC,MAAM,CACJ0D,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,EACnCU,SAAS1C,KAAKC,MAAM+B,SAAW,MAAQ,GAEzC22G,QAAkC,WAA1BpzF,EAAe9C,YAI7B,CACEuE,MAAM,UACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,YAIX,CACE6kB,MAAM,UACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAK,MAEd8e,YAAY,CACV9e,MAAM,EACNk1H,GAAG,CAAC,EAAE,IAERluE,OAAO,CACL,CACE3kD,KAAK,qBAIX,CACEwC,QAAO,EACPqiB,MAAM,UACNy3F,KAAKqqB,EACL7oI,MAAM,CACJH,MAAM,CAAC,IAAK,KACZwJ,UAAU,UAEZw9C,OAAO,CACL,CACE3kD,KAAK,eAIX,CACE6kB,MAAM,GACN0xF,kBAAiB,EACjB/zG,OAA8B,OAAvB3E,KAAKC,MAAMqQ,QAClBrQ,MAAM,CACJH,MAAM,CAAyB,OAAvBE,KAAKC,MAAMqQ,QAAmB,IAAO,EAAG,MAElDsO,YAAY,CACV9e,MAAM,GAERgnD,OAAO,CACL,CACE3kD,KAAK,SACL8L,MAAO,UACPhO,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbyN,UAAU,KACVhI,UAAU,UACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAWg9G,EAAKh9G,MAAMigB,YAAYjgB,EAAMwR,cAM1DzR,KAAKC,SAKfD,KAAKwH,MAAMm5B,gBAAgB38B,OAAO,GAChC2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAKvO,KAAKwH,MAAMosH,gBAAgB5vH,OAAO,EAAI,CAAC,EAAE,GAAK,EACnDlE,MAAO,EACPsF,GAAI,mBACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJz+G,MAAO,EACPyO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbi7G,aAAc,yBAEdj/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAQuG,GAAT,CACEzM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,qBAOFkG,EAAAxI,EAAAC,cAACkpI,GAAA,EAAD3pI,OAAAC,OAAA,CACEmQ,cAAe/P,KAAKwH,MAAMm5B,gBAC1BlgC,YAAa,SAACR,GAAD,OAAWg9G,EAAKh9G,MAAMigB,YAAYjgB,EAAMwR,QACrD8mG,KAAM,CACJ,CACEvxF,MAAM,WACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACE6kB,MAAM,OACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACEqjB,MAAM,MACNy3F,KAAKoqB,EACL5oI,MAAM,CACJH,MAAM,CAAC,GAAK,MAEd8e,YAAY,CACV5d,cAAc,SACdD,WAAW,cAEb+lD,OAAO,CACL,CACE3kD,KAAK,MACLmuH,aAAY,GAEd,CACEnuH,KAAK,mBACLwM,YAAW,EACX1O,MAAM,CACJ0D,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,EACnCU,SAAS1C,KAAKC,MAAM+B,SAAW,MAAQ,GAEzC22G,QAAkC,WAA1BpzF,EAAe9C,YAI7B,CACEuE,MAAM,YACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACE3kD,KAAK,gBAIX,CACEwC,QAAO,EACPqiB,MAAM,UACNy3F,KAAKqqB,EACL7oI,MAAM,CACJH,MAAM,CAAC,IAAK,KACZwJ,UAAU,UAEZw9C,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACEgB,QAAO,EACPqiB,MAAM,WACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZwJ,UAAU,UAEZsV,YAAY,CACV7d,WAAW,SACXC,cAAc,UAEhB8lD,OAAO,CACL,CACE3kD,KAAK,WACLlC,MAAM,CACJ0D,SAAS,IAGb,CACExB,KAAK,eACLwM,YAAW,EACX46H,eAAc,EACdtpI,MAAM,CACJyC,SAAS,EACTiB,SAAS,MAkBjB,CACEqjB,MAAM,GACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAER8e,YAAY,CACV9e,MAAM,GAERgnD,OAAO,CACL,CACE3kD,KAAK,SACL8L,MAAM,SACNhO,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbyN,UAAU,KACVhI,UAAU,SACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAWg9G,EAAKh9G,MAAMigB,YAAYjgB,EAAMwR,cAM1DzR,KAAKC,SAKbD,KAAKwH,MAAMosH,gBAAgB5vH,OAAO,GAClC2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMxD,GAAG,mBAAmBtF,MAAO,EAAGkB,cAAe,UACnD2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJz+G,MAAO,EACPyO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbi7G,aAAc,yBAEdj/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAQuG,GAAT,CACEzM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,qBAOFkG,EAAAxI,EAAAC,cAACkpI,GAAA,EAAD3pI,OAAAC,OAAA,CACEmQ,cAAe/P,KAAKwH,MAAMosH,gBAC1BnzH,YAAa,SAACR,GAAD,OAAWg9G,EAAKh9G,MAAMigB,YAAYjgB,EAAMwR,QACrD8mG,KAAM,CACJ,CACEvxF,MAAM,WACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACEwC,QAAO,EACPqiB,MAAM,OACN0xF,kBAAiB,EACjBz4G,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACEqjB,MAAM,MACNy3F,KAAKoqB,EACL5oI,MAAM,CACJH,MAAM,CAAC,IAAK,MAEd8e,YAAY,CACV5d,cAAc,SACdD,WAAW,cAEb+lD,OAAO,CACL,CACE3kD,KAAK,MACLmuH,aAAY,GAEd,CACEnuH,KAAK,mBACLwM,YAAW,EACX1O,MAAM,CACJ0D,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,EACnCU,SAAS1C,KAAKC,MAAM+B,SAAW,MAAQ,GAEzC22G,QAAkC,WAA1BpzF,EAAe9C,YAI7B,CACEuE,MAAM,UACN0xF,kBAAiB,EACjB/zG,OAA8B,OAAvB3E,KAAKC,MAAMqQ,QAClBmuG,KAAKqqB,EACL7oI,MAAM,CACJH,MAAM,CAAC,IAAK,KACZwJ,UAAU,UAEZw9C,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACEqjB,MAAM,gBACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAER8e,YAAY,CACV9e,MAAM,EACNk1H,GAAG,CAAC,EAAE,IAERluE,OAAO,CACL,CACE3kD,KAAK,WACLkE,MAAM,CACJE,SAAS,cAKjB,CACEygB,MAAM,GACN0xF,kBAAiB,EACjB/zG,OAA8B,OAAvB3E,KAAKC,MAAMqQ,QAClBrQ,MAAM,CACJH,MAAM,CAAyB,OAAvBE,KAAKC,MAAMqQ,QAAmB,IAAO,EAAI,MAEnDsO,YAAY,CACV9e,MAAM,GAERgnD,OAAO,CACL,CACE3kD,KAAK,SACL8L,MAAO,SAAChO,GACN,OAAON,OAAOoE,KAAKk5G,EAAKz1G,MAAMq5B,iBAAiBpM,SAASx0B,EAAMwR,OAAS,UAAY,WAErFxR,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbyN,UAAU,KACV5M,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAWg9G,EAAKh9G,MAAMigB,YAAYjgB,EAAMwR,SAEtDonG,UAAU,CACR5xG,UAAW,SAAChH,GACV,OAAON,OAAOoE,KAAKk5G,EAAKz1G,MAAMq5B,iBAAiBpM,SAASx0B,EAAMwR,OAAS,UAAY,iBAO3FzR,KAAKC,WAOjBD,KAAKwH,MAAMm5B,gBAAgB38B,OAAO,GAChC2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPsF,GAAI,gBACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CAAOntH,GAAI,CAAC,EAAE,IAAd,iBACA6H,EAAAxI,EAAAC,cAACkpI,GAAA,EAAD3pI,OAAAC,OAAA,CACEmQ,cAAepQ,OAAOoE,KAAK/D,KAAK+C,cAAc8+F,uBAC9C0W,KAAM,CACJ,CACEvxF,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,GAAI,MAEbgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACEwC,QAAO,EACPqiB,MAAM,UACN/mB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfgnD,OAAO,CACL,CACE3kD,KAAK,eACLlC,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEglB,MAAM,aACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,8BACpDxV,MAAM,CACJH,MAAM,CAAC,IAAK,IACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACE3kD,KAAK,oBACLlC,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEglB,MAAM,eACNy3F,KAAKz+G,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAW,0BACpDxV,MAAM,CACJH,MAAM,CAAC,IAAK,KAEdgnD,OAAO,CACL,CACE3kD,KAAK,wBACLlC,MAAM,CACJ0D,SAAS,QAgDf3D,KAAKC,MA9GX,CA+GEmQ,gBAAiBohE,MAKvBxxE,KAAKwH,MAAMm5B,gBAAgB38B,OAAO,GAChC2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPsF,GAAG,sBACHpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CAAOntH,GAAI,CAAC,EAAE,IAAd,sBACA6H,EAAAxI,EAAAC,cAACopI,GAAD7pI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8P,cAAe/P,KAAKwH,MAAMm5B,oBAKhC3gC,KAAKC,MAAMqQ,SAAWy3H,EAAoB11G,SAAW01G,EAAoBn6E,kBAAkBn5B,SAASlP,EAAengB,KACjHuD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,SACfoE,GAAI,wBAEJuD,EAAAxI,EAAAC,cAACqpI,GAAD9pI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE+mB,MAAO,8BACP2wF,WAAY,CACV72G,GAAG,OAOXd,KAAKC,MAAMqQ,SAAWtQ,KAAKwH,MAAMm5B,gBAAgB38B,OAAO,GACtD2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPzO,MAAO,EACPsF,GAAI,eACJpE,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC6tH,EAAA,EAAD,CAAOntH,GAAI,CAAC,EAAE,IAAd,gBACA6H,EAAAxI,EAAAC,cAAC0vH,EAAA,EAADnwH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE8P,cAAe,GACfwoG,KAAM,CACJ,CACEvxF,MAAOhnB,KAAKC,MAAM+B,SAAW,GAAK,OAClC/B,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,OACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEc,KAAK,OACLwC,QAAO,KAIb,CACEqiB,MAAM,SACNriB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAERgnD,OAAO,CACL,CACE3kD,KAAK,YAIX,CACE6kB,MAAM,OACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdgnD,OAAO,CACL,CACE3kD,KAAK,UAIX,CACE6kB,MAAM,SACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACE3kD,KAAK,aACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEsD,QAAO,EACPxC,KAAK,YAIX,CACE6kB,MAAM,SACN/mB,MAAM,CACJH,MAAM,KAERgnD,OAAO,CACL,CACE3kD,KAAK,YAIX,CACE6kB,MAAM,QACN/mB,MAAM,CACJH,MAAM,CAAC,IAAK,IACZmB,eAAe,CAAC,SAAS,eAE3B6lD,OAAO,CACL,CACE3kD,KAAK,YACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,GACNU,OAAO,CAAC,QAAQ,WAGpB,CACE4C,QAAO,EACPxC,KAAK,qBAz2CvBwG,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACEhlH,UAAW,CACT4yH,SAAS,EACT9yH,WAAW,GAEbmjB,YAAa,CACXrX,GAAG,EACHlM,KAAK,QAEPyB,UAAW,CACT2qB,UAAU,OACVztB,cAAc,UAEhB4B,KAAM,iCAzTOC,oDCwwCZ6mI,8MA/vCbliI,MAAQ,CACNmiI,UAAS,EACTpnD,YAAY,GACZqnD,YAAW,EACXj4H,OAAO,UACP8wE,cAAc,GACdt4E,YAAY,KACZmT,WAAW,CACT+B,QAAQ,CACN9B,OAAO,KACPC,SAAQ,GAEV6iE,MAAM,CACJ9iE,OAAO,KACPC,SAAQ,IAGZqsH,WAAU,EACVrnD,aAAa,GACbE,cAAc,KACd69B,eAAc,EACdupB,cAAa,EACbC,cAAa,EACb9/H,cAAc,KACdu2G,eAAc,EACdz+B,eAAe,KACfioD,gBAAe,EACfC,gBAAe,EACf75H,gBAAgB,KAChByD,iBAAiB,KACjBu7G,iBAAgB,EAChB8a,kBAAiB,EACjBjpG,kBAAiB,EACjBkpG,oBAAmB,EACnBx1D,oBAAoB,KACpB5gD,oBAAoB,KACpBq2G,qBAAoB,EACpBC,2BAA0B,EAC1B1U,2BAA2B,QAI7B5yH,cAAgB,OA+ZhBk3H,UAAY,SAACtoH,GACX,GAAe,OAAXA,GAAmB,CAAC,UAAU,UAAU8iB,SAAS9iB,EAAOpE,eAAe,CAEzErI,EAAK8C,SAAS,CACZ2J,SACAw4H,oBAHyB,QAc/BG,yBAA2B,SAACrpG,GAC1B/7B,EAAK8C,SAAS,CACZi5B,wBAIJspG,kBAAoB,SAAC/4H,GACnBtM,EAAKslI,aAAY,+EAnbbxqI,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAKyqI,sMAGkB9iI,EAAUC,sFACjC5H,KAAKkD,YAEoByE,EAAUs9G,UAAUC,SAAWllH,KAAKC,MAAMglH,UAAUC,QAE3EllH,KAAKgI,SAAS,CACZonH,iBAAgB,GADlBzvH,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAEE,SAAAsQ,IAAA,OAAA4P,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAAAkQ,EAAAlQ,KAAA,EACMlO,EAAK6yH,aADX,wBAAAz0G,EAAA/O,SAAA4O,EAAAphB,UAK4B4H,EAAUiM,mBAAqB7T,KAAKwH,MAAMqM,mBAElE5J,EAAgBtK,OAAOoE,KAAK/D,KAAKwH,MAAM4I,iBAAiB,GAC9DpQ,KAAKg8G,YAAY/xG,IAGbyQ,EAAuB9S,EAAUqC,gBAAkBjK,KAAKwH,MAAMyC,cAC9DygI,EAA0B9iI,EAAUsiI,mBAAqBlqI,KAAKwH,MAAM0iI,iBACpElT,EAA0BpvH,EAAUyiI,4BAA8BrqI,KAAKwH,MAAM6iI,2BAC/E3vH,GAAwBs8G,GAA2B0T,IACrD1qI,KAAKwqI,6QAOS,EAEVG,EAAkB,SAACn5H,EAAGiM,GAC1B,IAAMulC,EAA4B,YAAdxxC,EAAGI,OAGjB8L,EAAY,CAChBI,YAAa,UACbH,cAAe,gBAGbF,IACFC,EAAUE,WAAa9S,EAAK/H,cAAcib,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAU9L,SACrB9G,EAAK/H,cAAckb,yBAAyBP,GAG9C5S,EAAK9C,SAAS,SAACJ,GAAD,MAAgB,CAC5BsiI,iBAAiBlnF,EACjB1lC,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAER+B,QAAQ,CACN9B,OAAO,KACPC,SAAQ,SAMVotH,EAAyB,SAACp5H,GAC9B,IAAM+L,EAAS/L,EAAG2M,gBAClBrT,EAAK9C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAER+B,QAAQ1f,OAAA+4B,EAAA,EAAA/4B,CAAA,GACHiI,EAAU0V,WAAW+B,QADnB,CAEL9B,iBAMRvd,KAAKC,MAAMwe,0BAA0Bze,KAAKwH,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAM,eAAgB,EAAC,GAAO,KAAMwoI,EAAiBC,GAE3I5qI,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAER+B,QAAQ1f,OAAA+4B,EAAA,EAAA/4B,CAAA,GACHiI,EAAU0V,WAAW+B,QADnB,CAEL7B,SApDU,oUA0DA2sH,kCAEVz1C,EAAwB10F,KAAKwH,MAAMmtE,oBAAoBp6C,2BAEvDtZ,QAAQqD,IAAI,CAChBtkB,KAAKC,MAAM4nC,aAAa6sD,EAAsBvyF,KAAKuyF,EAAsBpnF,QAAQonF,EAAsB5sD,KACvG9nC,KAAKC,MAAM4nC,aAAa7nC,KAAKwH,MAAM2C,YAAYhI,KAAKnC,KAAKwH,MAAM2C,YAAYmD,QAAQtN,KAAKwH,MAAM2C,YAAY29B,8BAOlG7mB,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAck+E,4BAA4ByT,EAAsBpnF,SACrEtN,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKwH,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAK,aAC7FnC,KAAK+C,cAAc0hE,mBAAmBzkE,KAAKwH,MAAM2C,YAAYhI,KAAKuyF,EAAsBpnF,QAAQtN,KAAKC,MAAMqQ,8CAN3G6xE,OACAJ,OACAsoD,OAQER,GAAY,GACXQ,GAA6B31C,EAAsBj1D,WAAwD,IAA3Ci1D,EAAsBj1D,UAAUz7B,SAC7F6mI,EAAen2C,EAAsBj1D,UAAU,GACrDoqG,EAA8C,qBAA3BgB,EAAahB,WAA4BgB,EAAahB,UACnEvnE,EAActiE,KAAK+C,cAAc0S,gBAAgB,CAAC,SAASzV,KAAKwH,MAAM2C,YAAYhI,KAAK,gBACvF2oI,EAAiB9qI,KAAK+C,cAAc20B,kBAAkB13B,KAAKwH,MAAM2C,YAAYhI,MACnF0nI,EAAYA,GAAaiB,KAAoBxoE,QAAuD5zC,IAAxCo8G,EAAepxF,QAAQ4oB,KAG/Ex6D,EAAW,GACXy6E,EAAc,GACdC,EAAe,GACfC,EAAgB,GAClBunD,GAAiB,EAErBjoD,EAAiBA,GAAkB,EAC1BC,EAAa,eAAGA,GAAcjwE,SAASgwE,sCAKpC9gE,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKwH,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAK,cAAc,CAAC6/E,IAC5GhiF,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKwH,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAK,sBAAsB,CAAC6/E,IACpHhiF,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKwH,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAK,gBAAgB,CAACnC,KAAKC,MAAMqQ,QAAQ0xE,0CANjII,OACAC,OACAC,OAMEF,GAA6B,OAAfA,IAChBG,EAAYP,GAAchiF,KAAK+C,cAAcmS,iBAAiBktE,EAAWpiF,KAAKwH,MAAM2C,YAAYxG,WAE7E,OAAjB2+E,IACFD,EAAcriF,KAAK+C,cAAcmS,iBAAiBmtE,EAAY,KAC9DC,EAAetiF,KAAK+C,cAAcmS,iBAAiBotE,EAAatiF,KAAKwH,MAAM2C,YAAYxG,WACtE2R,GAAG,KAClBmtE,EAAcT,GAAcM,EAE5BE,EAAaR,GAAcM,EAAa50E,MAAM20E,GAAa7+D,IAAI++D,EAAYP,IACvEQ,EAAaR,GAAY1sE,GAAG+sE,KAC9BG,EAAaR,GAAcK,GAGzBL,EAAaD,IACfioD,GAAiB,aAzByChoD,4BA+BlEl6E,EAAS26E,cAAgBA,EAEnBqnD,EAAgBrnD,GAAiB9iF,OAAOoE,KAAK0+E,GAAez+E,OAAO,EAEnE0+E,EAAgBP,GAAmBA,EAAgBn+E,OAASm+E,EAAgB,GAAK,KACjF4oD,EAAmB/qI,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,iBAC/D20H,EAAsBW,EAAiBC,eAE7CljI,EAAS+hI,UAAYA,EACrB/hI,EAAS04G,eAAgB,EACzB14G,EAASmiI,gBAAiB,EAC1BniI,EAASsnH,iBAAkB,EAC3BtnH,EAASoiI,kBAAmB,EAC5BpiI,EAASy6E,YAAcA,EACvBz6E,EAASgiI,aAAeA,EACxBhiI,EAAS06E,aAAeA,EACxB16E,EAAS46E,cAAgBA,EACzB56E,EAASi6E,eAAiBA,EAC1Bj6E,EAASkiI,eAAiBA,EAC1BliI,EAASqiI,mBAAqBA,EAC9BriI,EAASsiI,oBAAsBA,EAC/BtiI,EAAS6hI,SAAWK,GAAkBF,EAEtChiI,EAAS8hI,WAAaQ,IAAwBJ,EAC9CliI,EAASuiI,0BAA4BA,EACrCviI,EAAS6J,OAASm4H,GAAgBhiI,EAAS6hI,SAAW,SAAW,UAEjE3pI,KAAKgI,SAASF,mRAMRmjI,EAA0B,YAC1BjrI,KAAK+C,cAAc2N,aAAa/Q,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAjE,eAAAshB,EAAA/xB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAkF,SAAAqS,EAAO1R,GAAP,IAAAtH,EAAA,OAAA6mB,EAAA7wB,EAAA+Q,KAAA,SAAAoS,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAjS,MAAA,UAChFlH,EAAc8yG,EAAKh9G,MAAM6kH,UAAU10G,gBAAgBqB,GACnCwrG,EAAKl6G,cAAc20B,kBAAkBvtB,EAAYsH,SACjDtH,EAAY29B,IAHoD,CAAAxkB,EAAAjS,KAAA,eAAAiS,EAAAjS,KAAA,EAI9E4rG,EAAKh9G,MAAM4nC,aAAa19B,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY29B,KAJI,OAMtFmjG,EAAwB9gI,EAAYk3B,WAAY,EANsC,wBAAA/d,EAAA9Q,SAAA2Q,EAAAnjB,SAAlF,gBAAAyS,GAAA,OAAAif,EAAAhf,MAAA1S,KAAA2S,YAAA,YASAohB,EAAsBp0B,OAAOoE,KAAKknI,GAAyBnlI,IAAK,SAAAu7B,GACpE,IAAM8F,EAAiB81E,EAAKl6G,cAAc0S,gBAAgB,CAAC,aAAa4rB,IACxE,MAAO,CACLl2B,MAAMk2B,EACNj/B,KAAK+kC,EAAe/kC,KACpB6L,MAAMk5B,EAAengB,WAME+M,EAAoB/vB,OAAO,IAChD6P,EAAmBkgB,EAAoB,GAAG5oB,OAC1ClB,EAAgBjK,KAAKC,MAAMglH,UAAUC,QAAUllH,KAAKC,MAAM6kH,UAAU10G,gBAAgBpQ,KAAKC,MAAMglH,UAAUC,QAAUllH,KAAKC,MAAMglH,UAAUC,OAAS,QAE7IvwC,EAAsB30E,KAAKC,MAAM6kH,UAAU10G,gBAAgBnG,GACjEA,EAAgB0qE,EAAoBn4C,UACpC3oB,EAAmB8gE,EAAoBtzC,UAGzCrhC,KAAKgI,SAAS,CACZ+rB,uBACA,WACAkpF,EAAKiuB,eAAer3H,EAAiB5J,uLAcrB4J,8FAAiB5J,iCAAc,KAC7CmG,EAAkBzQ,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBACtDmB,OAAO,SAAA1K,GAAG,OAAI8+G,EAAK1lH,MAAM6kH,UAAU10G,gBAAgBvJ,GAAKw6B,WAAaxtB,IACrEoxB,OAAO,SAAC8/E,EAAKl+G,GACZ,IAAMsD,EAAcw7G,EAAK1lH,MAAM6kH,UAAU10G,gBAAgBvJ,GACnDk5C,EAAkB4lE,EAAK1lH,MAAM8zB,oBAAoBlgB,GAAkB1J,EAAYqyB,WAOrF,OALAryB,EAAY29B,IAAMiY,EAAgBjY,IAClC39B,EAAYsH,MAAQsuC,EAAgBtuC,MACpCtH,EAAYmD,QAAUyyC,EAAgBzyC,QACtCnD,EAAYxG,SAAWo8C,EAAgBp8C,SACvCohH,EAAI56G,EAAYqyB,WAAaryB,EACtB46G,GACN,IAEL/kH,KAAKgI,SAAS,CACZoI,kBACAyD,oBACA,WACI5J,GACF07G,EAAK3J,YAAY/xG,oLAKJA,iGACX0qE,EAAsB30E,KAAKwH,MAAM4I,gBAAgBnG,GACjDkhI,EAA0BnrI,KAAKC,MAAM8zB,oBAAoB4gD,EAAoBtzC,UAE7E0e,EAAkBorF,EAAwBx2D,EAAoBljE,QAE9DtH,EAAc,CAClBhI,KAAK49C,EAAgBtuC,MACrBA,MAAMsuC,EAAgBtuC,MACtBnE,QAAQyyC,EAAgBzyC,QACxB3J,SAASo8C,EAAgBp8C,WAIf2uB,KAAOytB,EAAgBztB,KAG7BmzB,EAAc,CAClB3d,IAAIiY,EAAgBjY,IACpB3lC,KAAK49C,EAAgBtuC,MACrBA,MAAMsuC,EAAgBtuC,MACtBnE,QAAQyyC,EAAgBzyC,SAGpBitB,EAAoBo6C,EAAoBp6C,kBAG1CwlB,EAAgBqrF,kBAClB7wG,EAAkBkF,UAAU,GAAGt9B,KAAO49C,EAAgBqrF,iBAGxDjhI,EAAYmwB,UAAY,CACtBjI,SAAQ,EACRozB,cACAlrB,oBACA4vG,oBAAmB,aAGfnqI,KAAKC,MAAMorI,iBAAiB12D,EAAoBtzC,SAAS0e,EAAgBtuC,eAE/EzR,KAAKgI,SAAS,CACZmC,cACAF,gBACA0qE,uBACA,WAEA,GAAIA,EAAoBtzC,WAAawkF,EAAKr+G,MAAMqM,iBAAiB,CAC/D,IAAMA,EAAmB8gE,EAAoBtzC,SAC7CwkF,EAAKqlB,eAAer3H,sQAMnB7T,KAAKwH,MAAMwiI,wDACP,cAGO,EACO,EACjBsB,EAAU3rI,OAAOoE,KAAK/D,KAAKwH,MAAMi7E,eAAe,GAEhD8oD,EAAgB,SAAC/5H,EAAGiM,GACxB,IAAMulC,EAA4B,YAAdxxC,EAAGI,OAGjB8L,EAAY,CAChBI,YAAa,QACbH,cAAa,eACbmkG,WAAY/vG,SAVO,GAWnB6L,WAAY2oG,EAAKtmH,MAAMgK,eAGrBwT,IACFC,EAAUE,WAAa2oG,EAAKxjH,cAAcib,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAU9L,SACrB20G,EAAKxjH,cAAckb,yBAAyBP,GAG9C6oG,EAAKv+G,SAAS,SAACJ,GAAD,MAAgB,CAC5BqiI,eAAejnF,EACf1lC,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAER+iE,MAAM,CACJ9iE,OAAO,KACPC,SAAQ,SAMVguH,EAAuB,SAACh6H,GAC5B,IAAM+L,EAAS/L,EAAG2M,gBAClBooG,EAAKv+G,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAER+iE,MAAM1gF,OAAA+4B,EAAA,EAAA/4B,CAAA,GACDiI,EAAU0V,WAAW+iE,MADrB,CAEH9iE,iBAMRvd,KAAKC,MAAMwe,0BAA0Bze,KAAKwH,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAM,WAAY,CAACmpI,GAAU,KAAMC,EAAeC,GAExIxrI,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAER+iE,MAAM1gF,OAAA+4B,EAAA,EAAA/4B,CAAA,GACDiI,EAAU0V,WAAW+iE,MADrB,CAEH7iE,SAxDU,4PA+DhBxd,KAAKgI,SAAS,CACZ+hI,cAAa,8IAKf/pI,KAAKgI,SAAS,CACZw4G,eAAc,oFAII6pB,mEAEhBA,IAA8BrqI,KAAKwH,MAAM6iI,2BAC3CrqI,KAAKgI,SAAS,CACZqiI,6KAec9pB,GAClBvgH,KAAKgI,SAAS,CACZu4G,mDAcK,IAAA0G,EAAAjnH,KAEP,IAAKA,KAAKwH,MAAMqM,iBACd,OAAO,KAGT,IAAMg2H,EAAY7pI,KAAKwH,MAAM+4G,eAAiBvgH,KAAKwH,MAAMqiI,UAEnDxnD,EAAcriF,KAAKwH,MAAMg7E,cAAgB7iF,OAAO2R,OAAOtR,KAAKwH,MAAMg7E,cAAcx+E,OAAO,EAAIrE,OAAO2R,OAAOtR,KAAKwH,MAAMg7E,cAAc,GAAK,KACvIF,EAAetiF,KAAKwH,MAAMi7E,eAAiB9iF,OAAO2R,OAAOtR,KAAKwH,MAAMi7E,eAAez+E,OAAO,EAAIrE,OAAO2R,OAAOtR,KAAKwH,MAAMi7E,eAAe,GAAK,KAC3Ik+B,EAAoBkpB,GAAa7pI,KAAKwH,MAAMuiI,eAAmBF,GAAa7pI,KAAKwH,MAAM6iI,0BACvFoB,EAAkBzrI,KAAKwH,MAAM+6E,aAAeviF,KAAKwH,MAAM+6E,YAAYviF,KAAKwH,MAAMu6E,iBAAmB/hF,KAAKwH,MAAM+6E,YAAYviF,KAAKwH,MAAMu6E,gBAAgBzsE,GAAG,GACtJo2H,EAAuB1rI,KAAKwH,MAAMqM,iBAAmB7T,KAAKwH,MAAMusB,oBAAoBtU,KAAM,SAAAkX,GAAC,OAAIA,EAAExrB,QAAU87G,EAAKz/G,MAAMqM,mBAAqB7T,KAAKwH,MAAMusB,oBAAoB,GAwGhL,OACEprB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuJ,GAAI,CAAC,EAAE,GACPtI,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,wBAKA5F,EAAAxI,EAAAC,cAACoa,EAAA,EAAD7a,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,WACN0Z,cAAc,EACdf,aAAc4wH,EACd1wH,kBAjIgB,SAAA/a,GACxB,IAAMgO,EAAQhO,EAAMgO,MACd9D,EAAc,CAClB/H,KAAKnC,EAAM4K,KAAKzI,MAGlB,OACEuG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,UAEZ4H,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP9D,YAAaA,EACbwV,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHvB,MAAM,MACNiC,OAAO,UAIb4G,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP0R,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,mBA+FVsY,QAAS5a,KAAKwH,MAAMusB,oBACpBnX,SAAU5c,KAAKkrI,eAAehsH,KAAKlf,MACnCib,qBAxFmB,SAAAhb,GAE3B,IACM0b,GAA4D,IADlD1b,EAAM0b,YAAYf,QACN2B,QAAQtc,EAAM0b,YAAYxQ,OAAgBlL,EAAM0b,YAAYxQ,MAAQ,KAEhG,IAAKwQ,EACH,OAAO,KAGT,IAAM1N,EAAQ0N,EAAY1N,MACpB9D,EAAc,CAClB/H,KAAKuZ,EAAYvZ,MAGnB,OACEuG,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACEyG,MAAO,CACL2Z,KAAK,KAEP/e,eAAgB,iBACZhB,EAAMkb,YAEVxS,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMkb,WAHZ,CAIEpa,WAAY,SACZC,cAAe,MACfqF,MAAO,CAAC6I,OAAO,WACfjO,eAAgB,eAEhB0H,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP9D,YAAaA,EACbwV,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,UAIb4G,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP0R,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,uBA2CZtC,KAAKwH,MAAM4I,iBACTzH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,4BAKA5F,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJ2a,aAAa,EACblE,cAAc,EACde,SAAU5c,KAAKg8G,YAAY98F,KAAKlf,MAChCiK,cAAejK,KAAKwH,MAAMyC,cAC1BmG,gBAAiBpQ,KAAKwH,MAAM4I,qBAKjCpQ,KAAKwH,MAAM4nH,iBACVzmH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,2BAMX5C,KAAKC,MAAMqQ,QAmCRtQ,KAAKwH,MAAM4nH,iBAAoBpvH,KAAKwH,MAAMmtE,sBAAwB30E,KAAKwH,MAAMoiI,YAAc5pI,KAAKwH,MAAMmiI,WACxGhhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFxB,GAAG,EACHsJ,GAAG,IAGLV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAOw+G,EAAmB,WAAa,WACvCr+G,MAAQq+G,EAAmB3gH,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAY,aAErF1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPgH,UAAW,QAGTugI,EAAY,uBAAyB,uCAI3ClhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAQnC,KAAKwH,MAAMsiI,cAAgB9pI,KAAKwH,MAAMwiI,eAAkB,WAAa,WAC7E1nI,MAAStC,KAAKwH,MAAMsiI,cAAgB9pI,KAAKwH,MAAMwiI,eAAkBhqI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAY,aAE3H1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPgH,UAAW,QAJb,gBAMgBtJ,KAAKwH,MAAMyC,gBAG7BtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAOnC,KAAKwH,MAAMwiI,eAAiB,WAAa,SAChD1nI,MAAQtC,KAAKwH,MAAMwiI,eAAiBhqI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAY,aAE9F1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPgH,UAAW,QAJb,2BAOEX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJjD,WAAY,EACZH,MAAO,UACPmG,QAAS,SACT9C,WAAY,UACZC,QAAU,SAAAkB,GAAC,OAAImgH,EAAKhnH,MAAM+wH,iBAAiB,2BAA2B/J,EAAKlkH,cAAc0S,gBAAgB,CAAC,WAAW,qCANvH,iBAYJ9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAOnC,KAAKwH,MAAMyiI,eAAiB,WAAa,SAChD3nI,MAAQtC,KAAKwH,MAAMyiI,eAAiBjqI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAY,aAE9F1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPgH,UAAW,QAJb,cAMctJ,KAAKwH,MAAM2C,YAAYmoB,KAAK7gB,OAE1C9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE0mB,UAAW,MACXC,QAAO,oFAAA5oB,OAAsF3G,KAAKwH,MAAM2C,YAAYmoB,KAAK7gB,QAEzH9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrD,KAAM,QACNF,KAAM,UACNG,MAAO,UACP+D,MAAO,CACL6I,OAAO,mBA3JvBvG,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAGLV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCG,KAAM,QACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACP3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,uDAQAX,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM83G,2BAL1B,aAgJN/3G,KAAKwH,MAAM4nH,iBAAmBpvH,KAAKC,MAAMqQ,SAAWtQ,KAAKwH,MAAM4I,iBAAmBpQ,KAAKwH,MAAMyC,eAC3FtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK9I,MAAO,IAEP6gH,GAAoB3gH,KAAKwH,MAAMmiI,WAC9BhhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,sBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN6+G,YAAY,WACV,OAAOsI,EAAKz/G,MAAMoiI,WAAa3iB,EAAKgT,UAAU,WAAa,OAG/D35H,eAAe,EACfE,YAAcR,KAAKwH,MAAMoiI,WACzBrpI,SAAiC,YAAtBP,KAAKwH,MAAMmK,QAEtBhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACqvB,GAAA,EAAD,CACEzO,YAAa,CACXrP,OAAO,WAETgO,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAITsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,GAFd,aAQJkG,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN6+G,YAAY,WACV,OAAOsI,EAAKz/G,MAAMmiI,SAAW1iB,EAAKgT,UAAU,UAAY,OAG5D35H,eAAe,EACfE,YAAcR,KAAKwH,MAAMmiI,SACzBppI,SAAiC,WAAtBP,KAAKwH,MAAMmK,QAEtBhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACqvB,GAAA,EAAD,CACEzO,YAAa,CACXrP,OAAO,UAETgO,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAITsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,GAFd,aAYVzC,KAAKwH,MAAMg5G,eAAuC,YAAtBxgH,KAAKwH,MAAMmK,QAAwB3R,KAAKwH,MAAMqiI,WAAa7pI,KAAKwH,MAAMy5B,mBAAqBjhC,KAAKwH,MAAM2iI,mBAChIxhI,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHsJ,GAAG,EACHZ,QAAQ,OACR1H,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNC,MAAO,WACPH,KAAM,qBAERwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAEVtJ,KAAKwH,MAAMyC,cANd,iIASFtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJuuB,UAAU,EACVmrF,QAAS/iH,KAAKwH,MAAM+4G,cACpBtyG,MAAK,8CACL2O,SAAW,SAAA9V,GAAC,OAAImgH,EAAKjE,oBAAoBl8G,EAAEmf,OAAO88F,cAGnD/iH,KAAKwH,MAAMg5G,eAAuC,YAAtBxgH,KAAKwH,MAAMmK,QAAwB3R,KAAKwH,MAAMqiI,WAAa7pI,KAAKwH,MAAMy5B,mBAAqBjhC,KAAKwH,MAAM2iI,oBACrIxhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,EACH8H,GAAI,EACJvJ,MAAO,EACP0B,aAAc,EACdT,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEU,UAAW,SACX3D,WAAY,UACZC,QAAS5F,KAAKwgH,cAActhG,KAAKlf,OAHnC,2CAWkB,YAAtBA,KAAKwH,MAAMmK,OACT3R,KAAKwH,MAAM4iI,oBACTzhI,EAAAxI,EAAAC,cAACurI,GAAA,EAADhsI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2rI,WAAW,EACXC,aAAa,EACbhC,UAAWA,EACX5xD,eAAe,EACf6zD,iBAAiB,EACjBC,qBAAqB,EACrBC,cAAe,eACf5sH,SAAU,uBACVjV,YAAanK,KAAKwH,MAAM2C,YACxBF,cAAejK,KAAKwH,MAAMyC,cAC1BwrF,gBAAiB,SAAAw2C,GAAS,MAAI,CAACA,IAC/Bp4H,iBAAkB7T,KAAKC,MAAM4T,iBAC7Bq4H,eAAgBlsI,KAAKksI,eAAehtH,KAAKlf,MACzCshH,gBAAiBthH,KAAKshH,gBAAgBpiG,KAAKlf,MAC3CuqI,kBAAmBvqI,KAAKuqI,kBAAkBrrH,KAAKlf,MAC/CsqI,yBAA0BtqI,KAAKsqI,yBAAyBprH,KAAKlf,MAC7DmsI,cAAa,gBAAAxlI,OAAkB3G,KAAKwH,MAAMyC,cAA7B,+CAAAtD,OAAwF3G,KAAKwH,MAAM2C,YAAYmoB,KAAK7gB,MAApH,OAEb9I,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAGLV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,sBAMsBtJ,KAAKwH,MAAMyC,cANjC,uBAYNtB,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAGL6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAHb,+CAWNX,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAIHrJ,KAAKwH,MAAM8V,WAAW+iE,MAAM7iE,QAC1B7U,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC+f,EAAA,EAADxgB,OAAAC,OAAA,GAAmBI,KAAKC,MAAxB,CAA+B6e,KAAM9e,KAAKC,MAAM6e,KAAMM,SAAQ,qBAAwBD,WAAU,gCAAmCtX,KAAM7H,KAAKwH,MAAM8V,WAAW+iE,MAAM9iE,WAErKvd,KAAKwH,MAAMyiI,eACbthI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,UACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCM,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,YAErD1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACP3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,wCAMwCtJ,KAAKwH,MAAM2C,YAAYmoB,KAAK7gB,MANpE,KAQA9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJC,UAAW,SACX3D,WAAY,UACZC,QAAU,SAAAkB,GAAC,OAAImgH,EAAKhnH,MAAM8G,YAAYkgH,EAAKz/G,MAAMmtE,oBAAoBtzC,SAAS,IAAI4lF,EAAKz/G,MAAMmtE,oBAAoBn4C,aAJnH,wBASAx8B,KAAKwH,MAAMwiI,eACbrhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCM,MAAO,WACPH,KAAM,eAERwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAHb,+BAK8BX,EAAAxI,EAAAC,cAAA,WAL9B,0BAK4DiiF,EAAY10E,QAAQ,GALhF,IAKqF3N,KAAKwH,MAAM2C,YAAYmoB,KAAK7gB,OAEjH9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,UACPgH,UAAW,UAHb,2BAK2BtJ,KAAKwH,MAAM2C,YAAYmoB,KAAK7gB,MALvD,iCAOA9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,IACTmH,UAAUjH,KAAKC,MAAMwB,MAAMC,OAAOG,QAEpCpB,YAAc,SAAAqG,GAAC,OAAImgH,EAAK5mC,UAN1B,WAaJ13E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNC,MAAO,WACPH,KAAM,mBAERwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACP3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAEXX,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CACEvjB,MAAO,YADT,mCAGkCqG,EAAAxI,EAAAC,cAAA,cAASkiF,EAAa30E,QAAQ,GAA9B,IAAmC3N,KAAKwH,MAAMyC,eAHhF,2DAGgKjK,KAAKwH,MAAM2C,YAAYmoB,KAAK7gB,MAH5L,QAaZzR,KAAKwH,MAAM+6E,YAAYviF,KAAKwH,MAAMu6E,iBAChCp5E,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAIHd,KAAKwH,MAAM8V,WAAW+B,QAAQ7B,QAC5B7U,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC+f,EAAA,EAADxgB,OAAAC,OAAA,GAAmBI,KAAKC,MAAxB,CAA+Bmf,SAAQ,+BAAkCD,WAAU,wCAA2CtX,KAAM7H,KAAKwH,MAAM8V,WAAW+B,QAAQ9B,WAElKvd,KAAKwH,MAAM0iI,iBACbvhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCG,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,YAErD1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACP3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,iCAUFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,IACZH,MAAO,YACPgH,UAAW,UAHb,eAKetJ,KAAKwH,MAAM+6E,YAAYviF,KAAKwH,MAAMu6E,gBAAgBp0E,QAAQ,GALzE,IAK8E3N,KAAKwH,MAAMyC,eAGvFwhI,GACE9iI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEU,UAAW,SACX3D,WAAY,UACZC,QAAS5F,KAAKqf,QAAQH,KAAKlf,OAH7B,iBASFA,KAAKwH,MAAM+6E,YAAYviF,KAAKwH,MAAMu6E,gBAAgB3vE,GAAGpS,KAAKwH,MAAMmtE,oBAAoBy3D,cAClFzjI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVJ,MAAO,QACPgH,UAAW,UAJb,wCAMwCtJ,KAAK+C,cAAcS,YAAYxD,KAAKwH,MAAMmtE,oBAAoBy3D,YAAY,GANlH,IAMuHpsI,KAAKwH,MAAMyC,cANlI,oBAWFjK,KAAKwH,MAAMk7E,eACT/5E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAHb,yBAKyBtJ,KAAK+C,cAAc8P,YAA+C,IAAnC7S,KAAKwH,MAAMk7E,cAAc1wE,WAAgBorE,MAAMnnE,OAAO,qCA/uCnHpT,6CC8xBZwpI,8MAzyBb7kI,MAAQ,CACNsG,MAAM,GACN60G,MAAM,KACN2pB,UAAU,GACV5pB,QAAQ,KACR3wE,WAAW,GACX+rE,WAAW,KACXyuB,YAAW,EACX30B,YAAY,KACZztG,YAAY,KACZs5G,YAAY,KACZ3kF,aAAa,KACb+/C,aAAa,KACb50E,cAAc,KACdi6G,eAAe,KACf+D,eAAe,KACf0O,eAAe,KACfpW,eAAc,EACdnwG,gBAAgB,KAChBw9C,kBAAkB,GAClB6yD,gBAAe,EACfE,kBAAiB,EACjB6rB,mBAAmB,KACnBvpB,mBAAmB,KACnBE,oBAAoB,KACpBspB,oBAAoB,KACpBhlB,qBAAqB,KACrBilB,wBAAwB,QAI1B3pI,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAK0H,yLAIoB1H,KAAK+C,cAAc0tC,6BAAtCsB,SACN/xC,KAAKgI,SAAS,CACZ+pC,aACAw6F,YAAW,GACX,WACAppI,EAAK4zH,oMAIgBpvH,EAAUC,2FACjC5H,KAAKkD,cAEwB0E,EAAUqC,gBAAkBjK,KAAKwH,MAAMyC,uCAE5DE,EAAcnK,KAAKC,MAAM6kH,UAAU10G,gBAAgBpQ,KAAKwH,MAAMyC,eAC9D0iI,EAAkBxiI,EAAY+oC,UAC9B05F,EAAmBziI,EAAY8oC,oBAG/BhyB,QAAQqD,IAAI,CAChBqoH,EAAkB3sI,KAAKC,MAAM4nC,aAAa8kG,EAAgBxqI,KAAKwqI,EAAgBr/H,QAAQq/H,EAAgB7kG,KAAO,KAC9G8kG,EAAmB5sI,KAAKC,MAAM4nC,aAAa+kG,EAAiBzqI,KAAKyqI,EAAiBt/H,QAAQs/H,EAAiB9kG,KAAO,cAGpH9nC,KAAKgI,SAAS,CACZmC,eACA,WACAW,EAAKisH,uCAGDxL,EAAwB3jH,EAAUs8G,iBAAmBlkH,KAAKwH,MAAM08G,eAChE8S,EAA0BpvH,EAAU+4G,mBAAqB3gH,KAAKwH,MAAMm5G,kBACtE4K,GAAyByL,IAC3Bh3H,KAAK+2H,qBAImBlnH,KAAKC,UAAUlI,EAAUi3E,gBAAkBhvE,KAAKC,UAAU9P,KAAKwH,MAAMq3E,eAE/F7+E,KAAK+gH,iUAI4B,oJAIhB3wF,GACnB,IAAIjlB,EAAQ,KACR0S,EAAa,KACbw6C,EAAe,GACft6C,EAAe,KACnBqS,EAASpwB,KAAK+C,cAAc+yB,KAAK1F,GACjC,IAAMujB,EAAa3zC,KAAKwH,MAAM2C,YAAYwpC,WAC1C,OAAQ3zC,KAAKwH,MAAM08G,gBACjB,IAAK,UACH,OAAQlkH,KAAKwH,MAAMyC,eACjB,IAAK,OACH4T,EAAa,kBACbE,EAAe,mBACf5S,EAAQnL,KAAKC,MAAM6e,KAAK0C,IAAIsmB,IAAI+kG,gBAAgB,UAAWz8G,GAC3DioC,EAAe,CAACr4D,KAAKC,MAAMqQ,SAC7B,MACA,QACE,IAAMw8H,EAAc9sI,KAAKC,MAAM6e,KAAK0C,IAAIsmB,IAAI+kG,gBAAgB,UAAWz8G,GACvE,OAAQujB,GACN,IAAK,SACH51B,EAAe,iBACfF,EAAa,sBACbw6C,EAAe,CAACr4D,KAAKwH,MAAM2C,YAAY+oC,UAAU5lC,QAAQtN,KAAKC,MAAMqQ,QAAQw8H,GAC9E,MACA,QACA,IAAK,MACHjvH,EAAa,aACbE,EAAe,mBACfs6C,EAAe,CAACr4D,KAAKC,MAAMqQ,QAAQtQ,KAAKwH,MAAM2C,YAAY+oC,UAAU5lC,QAAQw/H,IAKtF,MACA,IAAK,WACHjvH,EAAa,WACbw6C,EAAe,CAACjoC,GAChBrS,EAAe/d,KAAKwH,MAAM2C,YAAY8oC,WAAW9wC,KAC7CnC,KAAKwH,MAAM2C,YAAY4iI,YACzB5hI,EAAQnL,KAAKC,MAAM6e,KAAK0C,IAAIsmB,IAAI+kG,gBAAgB,UAAWz8G,IAcjE,MAAO,CACLjlB,QACA0S,aACAw6C,eACAt6C,oOASIR,EAASvd,KAAKwH,MAAMklI,wBAEpBM,EAAoBhtI,KAAKC,MAAM6kH,UAAUmoB,cAAcC,gCAClCltI,KAAKC,MAAMw1C,eAAe03F,SAASC,oBAAoB7vH,EAAOyvH,GAAkB,eAArGK,mDAGG,CAACA,oCAEH,yLAGc1sB,mEACrB3gH,KAAKgI,SAAS,CACZ24G,0MAIoB+rB,yEAChBD,EAAsBzsI,KAAKwH,MAAMuqC,WAAWtyB,KAAM,SAAAjO,GAAE,OAAIA,EAAG3J,KAAK0F,gBAAkBm/H,EAAwBn/H,gBAChHvN,KAAKgI,SAAS,CACZykI,sBACAC,oNAIuBl7H,EAAG4e,EAAOhS,gFAe7BqpG,EAAuBj2G,EAC7BxR,KAAKgI,SAAS,CACZy/G,wBACA,WACAxK,EAAK8Z,0SAKDjvH,EAAW,GACXu6H,EAAmC,SAA3BriI,KAAKwH,MAAMyC,cACnB0pC,EAAa3zC,KAAKwH,MAAM2C,YAAYwpC,gBAClC3zC,KAAKwH,MAAM08G,sBACZ,mBAqCA,qBA4DA,oCAhGHp8G,EAAS66G,MAAQ,GACjB76G,EAASy4G,eAAgB,EACzBz4G,EAAS8lD,kBAAoB,CAAC,EAAE,GAChC9lD,EAAS24G,gBAAkB4hB,EAC3Bv6H,EAASm7G,mBAAT,wCAAAt8G,OAAsE3G,KAAKwH,MAAMyC,eACjFnC,EAAS+2E,aAA8B,QAAflrC,EAAuB3zC,KAAKC,MAAM6kH,UAAUhtF,UAAUw1G,eAAiBttI,KAAKC,MAAM6kH,UAAUhtF,UAAUy1G,gBACvGlL,oCAAcriI,KAAK+C,cAAc8/E,cAAc7iF,KAAKC,MAAMqQ,sEAAiBtQ,KAAK+C,cAAckuB,gBAAgBjxB,KAAKwH,MAAM2C,YAAY+oC,UAAU/wC,KAAKnC,KAAKC,MAAMqQ,4CAAtLxI,EAAS27G,iBACLzjH,KAAKwH,MAAMigH,sBACT+lB,EAAqB,KACrBC,EAAuB,KACtBpL,GAIHoL,EAAuBztI,KAAKwH,MAAMigH,qBAAqBl0E,WAAavzC,KAAKwH,MAAMigH,qBAAqBl0E,UAAUmS,OAAS/lD,OAAO2R,OAAOtR,KAAKwH,MAAMigH,qBAAqBl0E,UAAUmS,QAAQjmC,KAAM,SAAAq+G,GAAK,OAAIA,EAAMxwH,QAAQC,gBAAkBo4G,EAAK1lH,MAAM6kH,UAAUhtF,UAAU41G,eAAepgI,QAAQC,eAAiBuwH,EAAMn4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAK1lH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,kBAAoBuwH,EAAMn4E,IAAI96C,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAChhBigI,EAAqBxtI,KAAKwH,MAAMigH,qBAAqBl0E,WAAavzC,KAAKwH,MAAMigH,qBAAqBl0E,UAAUtc,KAAOj3B,KAAKwH,MAAMigH,qBAAqBl0E,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBo4G,EAAK1lH,MAAM6kH,UAAUhtF,UAAU41G,eAAepgI,QAAQC,eAAiBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAK1lH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIjpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,OAJ3ekgI,EAAuBztI,KAAKwH,MAAMigH,qBAAqBl0E,WAAavzC,KAAKwH,MAAMigH,qBAAqBl0E,UAAUmS,OAAS/lD,OAAO2R,OAAOtR,KAAKwH,MAAMigH,qBAAqBl0E,UAAUmS,QAAQjmC,KAAM,SAAAq+G,GAAK,OAAIA,EAAMxwH,QAAQC,gBAAkBo4G,EAAKn+G,MAAM2C,YAAY+oC,UAAU5lC,QAAQC,eAAiBuwH,EAAMn4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAKn+G,MAAMq3E,aAAavxE,QAAQ8qB,QAAQ,KAAK,IAAI7qB,kBAAoBuwH,EAAMn4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAK1lH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,kBAAoBuwH,EAAMn4E,IAAI96C,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAC7nBigI,EAAqBxtI,KAAKwH,MAAMigH,qBAAqBl0E,WAAavzC,KAAKwH,MAAMigH,qBAAqBl0E,UAAUtc,KAAOj3B,KAAKwH,MAAMigH,qBAAqBl0E,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBo4G,EAAKn+G,MAAM2C,YAAY+oC,UAAU5lC,QAAQC,eAAiBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAKn+G,MAAMq3E,aAAavxE,QAAQ8qB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAK1lH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIjpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,MAK9kBozB,EAAkB6sG,EAAqBxtI,KAAK+C,cAAcmS,iBAAiBnD,SAASy7H,EAAmB3iI,KAAK,IAAI7K,KAAKwH,MAAM2C,YAAYxG,UAAc8pI,EAAuBztI,KAAK+C,cAAcmS,iBAAiBnD,SAAS07H,EAAqB9nF,IAAI96C,KAAK,IAAI7K,KAAKwH,MAAM2C,YAAYxG,UAAY3D,KAAK+C,cAAc2O,MAAM,GAC7T5J,EAAS46G,QAAU,CACjBtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,2CAAA+D,OAA4Cg6B,EAAgBhzB,QAAQ,GAApE,KAAAhH,OAA0E3G,KAAKwH,MAAMyC,cAArF,qHAGNnC,EAAS46G,QAAU,CACjBtgH,KAAK,cACLI,UAAU,CACRF,MAAM,YAERM,KAAI,kIAMRkF,EAASy4G,eAAgB,EACzBz4G,EAAS24G,gBAAiB,EAC1B34G,EAASm7G,mBAAqB,GAC9Bn7G,EAAS8lD,kBAAoB,CAAC,IAAI,OAClC9lD,EAAS+2E,aAAe7+E,KAAKwH,MAAM2C,YAAY8oC,qBAClBjzC,KAAK+C,cAAckuB,gBAAgBjxB,KAAKwH,MAAM2C,YAAY8oC,WAAW9wC,KAAKnC,KAAKC,MAAMqQ,oBAAlHxI,EAAS27G,mBAEHl+F,EAAiBvlB,KAAK+C,cAAcyf,qBACpCmrH,EAAepoH,EAAepjB,KAC9ByrI,EAAgB5tI,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAe8P,EAAengB,KAClHyoI,EAAkB7tI,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,oBAAoBm4H,EAAc,SACxG9lI,EAAS66G,MAAQ,CACf,CACEvgH,KAAK,WACLiqB,WAAU,EACVurF,YAAW,YAAAjxG,OAAa3G,KAAKwH,MAAMyC,cAAxB,UAAAtD,OAA8CgnI,EAA9C,aAEb,CACEvrI,KAAK,WACLiqB,WAAU,EACVurF,YAAW,2CAEb,CACEx1G,KAAK,SACLiqB,WAAU,EACVurF,YAAW,QAAAjxG,OAAS3G,KAAKwH,MAAMyC,cAApB,UAAAtD,OAA0CknI,EAA1C,eAGX7tI,KAAKwH,MAAMigH,sCACPqmB,EAAuB9tI,KAAKwH,MAAMigH,qBAAqBl0E,WAAavzC,KAAKwH,MAAMigH,qBAAqBl0E,UAAUmS,OAAS/lD,OAAO2R,OAAOtR,KAAKwH,MAAMigH,qBAAqBl0E,UAAUmS,QAAQjmC,KAAM,SAAAq+G,GAAK,OAAIA,EAAMxwH,QAAQC,gBAAkBo4G,EAAKn+G,MAAM2C,YAAY8oC,WAAW3lC,QAAQC,eAAiBuwH,EAAMn4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAKn+G,MAAMq3E,aAAavxE,QAAQ8qB,QAAQ,KAAK,IAAI7qB,kBAAoBuwH,EAAMn4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAK1lH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,kBAAoBuwH,EAAMn4E,IAAI96C,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAC9nBwgI,EAAqB/tI,KAAKwH,MAAMigH,qBAAqBl0E,WAAavzC,KAAKwH,MAAMigH,qBAAqBl0E,UAAUtc,KAAOj3B,KAAKwH,MAAMigH,qBAAqBl0E,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBo4G,EAAKn+G,MAAM2C,YAAY8oC,WAAW3lC,QAAQC,eAAiBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAKn+G,MAAMq3E,aAAavxE,QAAQ8qB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEjsB,cAAcknB,SAASkxF,EAAK1lH,MAAMqQ,QAAQ8nB,QAAQ,KAAK,IAAI7qB,kBAAoBumC,EAAIjpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KACnlBygI,EAAkBD,EAAqB/tI,KAAK+C,cAAcmS,iBAAiBnD,SAASg8H,EAAmBljI,KAAK,IAAI7K,KAAKwH,MAAM2C,YAAYxG,UAAa3D,KAAKwH,MAAMigH,qBAAqBl0E,WAAavzC,KAAKwH,MAAMigH,qBAAqBl0E,UAAUmS,QAAU1lD,KAAKwH,MAAMigH,qBAAqBl0E,UAAUmS,OAAOuoF,SAAWjuI,KAAK+C,cAAcmS,iBAAiBlV,KAAKwH,MAAMigH,qBAAqBl0E,UAAUmS,OAAOuoF,SAASjmG,aAAa78B,MAAMnL,KAAKwH,MAAM2C,YAAYxG,UAAcmqI,EAAuB9tI,KAAK+C,cAAcmS,iBAAiBnD,SAAS+7H,EAAqBnoF,IAAI96C,KAAK,IAAI7K,KAAKwH,MAAM2C,YAAYxG,UAAa3D,KAAK+C,cAAc2O,MAAM,GAChnB5J,EAAS46G,QAAU,CACjBtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,2CAAA+D,OAA4CqnI,EAAgBrgI,QAAQ,GAApE,KAAAhH,OAA0E3G,KAAKwH,MAAMyC,cAArF,iIAGFrH,EAAO,QACH+wC,SACD,kDACH/wC,EAAI,kGAIJA,EAAI,mGAGRkF,EAAS46G,QAAU,CACjB9/G,OACAR,KAAK,cACLI,UAAU,CACRF,MAAM,gEAMZwF,EAAS8lD,kBAAoB,CAAC,EAAE,GAChC9lD,EAASwkI,UAAYtsI,KAAKwH,MAAMuqC,WAAWxgC,OAAQ,SAAAC,GAAE,MAAkB,aAAdA,EAAGG,SAA0BH,EAAGgkC,QAAUhkC,EAAGse,YAAYpa,gBAAkBiwG,EAAKn+G,MAAMyC,cAAcyL,gBAAgB5P,IAAK,SAAA0L,GAEhL,MAAO,CACLvD,MAFY03G,EAAK5iH,cAAc8P,YAAyB,IAAbrB,EAAGQ,WAAgBiE,OAAO,oBAAoB,MAAMzE,EAAGrG,MAAMwC,QAAQ,GAAG,IAAI6D,EAAGC,MAG1H5G,KAAK2G,EACLrG,MAAMqG,EAAG3J,QAIbC,EAAS0kI,mBAAqB1kI,EAASwkI,UAAUtoI,OAAO,EAAI8D,EAASwkI,UAAU,GAAK,KACpFxkI,EAAS2kI,oBAAsB3kI,EAAS0kI,mBAAqB1kI,EAAS0kI,mBAAmB3hI,KAAO,KAChG/C,EAAS4kI,wBAA0B5kI,EAAS2kI,oBAAsB3kI,EAAS2kI,oBAAoB5kI,KAAO,sEAMrGC,EAAS27G,cACZ37G,EAAS27G,YAAczjH,KAAK+C,cAAc2O,MAAM,IAKlD1R,KAAKgI,SAASF,4QAIRsI,EAAkBzQ,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAiB60B,OAAQ,SAACpV,EAAOpe,GACxF,IAAMtH,EAAc07G,EAAK5lH,MAAM6kH,UAAU10G,gBAAgBqB,GAQzD,OAPItH,EAAYkoB,SACdxC,EAAOjiB,KAAPjO,OAAA+4B,EAAA,EAAA/4B,CAAA,CACEwL,MAAMsG,EACNxD,MAAMwD,GACHtH,IAGA0lB,GACP,IAEItK,EAAiBvlB,KAAK+C,cAAcyf,qBACpC0rH,EAAeluI,KAAKC,MAAMglH,UAAUC,QAAUllH,KAAKC,MAAM6kH,UAAU10G,gBAAgBpQ,KAAKC,MAAMglH,UAAUC,QACxGj7G,EAAgBikI,EAAeluI,KAAKC,MAAMglH,UAAUC,OAAUllH,KAAKC,MAAMgK,eAAiBjK,KAAKwH,MAAMyC,eAAiBmG,EAAgB,GAAGjF,MACzI88G,EAAiB73G,EAAgBqP,KAAM,SAAA+Z,GAAC,OAAIA,EAAEruB,QAAUlB,IACxDkkI,EAAiBD,EAAiF,UAArC,WAA5B3oH,EAAe9C,SAAwB,UAAY,WACpFyhG,EAAiBlkH,KAAKC,MAAM0R,QAAU3R,KAAKwH,MAAMmK,QAAUw8H,EAC3DhkI,EAAcnK,KAAKC,MAAM6kH,UAAU10G,gBAAgBnG,GAIzDjK,KAAKgI,SAAS,CACZmC,cACAF,gBACAg+G,iBACA/D,iBACA9zG,mBACA,WACAy1G,EAAKuoB,8YAQGnkI,GACVjK,KAAKgI,SAAS,CACZiC,oDAIMi6G,GACRlkH,KAAKgI,SAAS,CACZk8G,oDAIK,IAAAqC,EAAAvmH,KACD0kI,IAAc1kI,KAAKC,MAAMykI,UACzB2J,EAAuC,SAA9BruI,KAAKwH,MAAM08G,eACpByH,EAA0C,YAA9B3rH,KAAKwH,MAAM08G,eACvB0H,EAA2C,aAA9B5rH,KAAKwH,MAAM08G,eACxB3+F,EAAiBvlB,KAAK+C,cAAcyf,qBACpCmR,EAAmBpO,EAAengB,GAExC,OACEuD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjB,KAAKwH,MAAM4I,gBAmBVzH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGbjB,KAAKwH,MAAM4I,gBAAgBpM,OAU1B2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,UACZC,cAAe,SACfC,eAAgB,SAChBnB,MAAO,CAAC,EAAE4kI,EAAY,EAAI,UAGvB1kI,KAAKC,MAAMgK,eACVtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,iBAKA5F,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,CACEwF,GAAI,UACApF,KAAKC,MAFX,CAGE8f,aAAa,EACblE,cAAc,EACde,SAAU5c,KAAKg8G,YAAY98F,KAAKlf,MAChCiK,cAAejK,KAAKwH,MAAMyC,cAC1BmG,gBAAiBpQ,KAAKC,MAAM6kH,UAAU10G,oBAM5CpQ,KAAKwH,MAAMyC,eACTtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,IAGJE,KAAKC,MAAM0R,QACVhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,sBAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJxN,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,MAER6C,UAAW,CACTF,WAAW,EACXC,SAAS,CAAC,EAAE,IAEdE,KAAM,UACNL,UAAW,UACXH,KAAM,gBACNhB,YAAa,UACbX,YAAc,SAAAqG,GAAC,OAAIy/G,EAAK0T,UAAU,YAClC15H,SAAyC,YAA9BP,KAAKwH,MAAM08G,kBAExBv7G,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,MAER6C,UAAW,CACTF,WAAW,EACXC,SAAS,CAAC,EAAE,IAEdE,KAAM,WACNL,UAAW,SACXH,KAAM,cACNhB,YAAa,UACbX,YAAc,SAAAqG,GAAC,OAAIy/G,EAAK0T,UAAU,aAClC15H,SAAyC,aAA9BP,KAAKwH,MAAM08G,kBAExBv7G,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,MAER6C,UAAW,CACTF,WAAW,EACXC,SAAS,CAAC,EAAE,IAEdE,KAAM,OACNR,KAAM,YACNG,UAAW,SACXnB,YAAa,UACbX,YAAc,SAAAqG,GAAC,OAAIy/G,EAAK0T,UAAU,SAClC15H,SAAyC,SAA9BP,KAAKwH,MAAM08G,oBAO7BlkH,KAAKwH,MAAMomD,kBAAkBn5B,SAASd,GAqClC3zB,KAAKwH,MAAM2C,aAAenK,KAAKwH,MAAMi8G,aAAezjH,KAAKwH,MAAMq3E,aAClEl2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPyO,GAAI,CAAC,EAAE,IAGJo9G,GAAaC,EACZjjH,EAAAxI,EAAAC,cAACsnH,EAAD/nH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwd,MAAOzd,KAAKwH,MAAMiW,MAClBklG,MAAO3iH,KAAKwH,MAAMm7G,MAClBD,QAAS1iH,KAAKwH,MAAMk7G,QACpB/wG,OAAQ3R,KAAKwH,MAAM08G,eACnB/5G,YAAanK,KAAKwH,MAAM2C,YACxB20B,aAAc9+B,KAAKwH,MAAMi8G,YACzB5kC,aAAc7+E,KAAKwH,MAAMq3E,aACzB0hC,cAAevgH,KAAKwH,MAAM+4G,cAC1BE,eAAgBzgH,KAAKwH,MAAMi5G,eAC3B14G,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzCijH,mBAAoBjjH,KAAKwH,MAAMy7G,mBAC/BtC,iBAAkB3gH,KAAK2gH,iBAAiBzhG,KAAKlf,MAC7CmjH,oBAAqBnjH,KAAKwH,MAAM27G,oBAChCpC,oBAAqB/gH,KAAK+gH,oBAAoB7hG,KAAKlf,MACnDqe,qBAAsBre,KAAKqe,qBAAqBa,KAAKlf,QAGnD2rH,EACEhjH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC24G,EAAA,EAADp5G,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE66G,YAAY,EACZ7B,iBAAkB,GAClBI,SAAUr5G,KAAKwH,MAAMyC,kBAIvB2hH,GACFjjH,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,IAGJoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExC2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,sBAMsBtJ,KAAKwH,MAAMyC,cANjC,oBAaRokI,GACF1lI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAGJE,KAAKwH,MAAM+kI,WAkBRvsI,KAAKwH,MAAM8kI,UAAUtoI,OACvB2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,uBAGA5F,EAAAxI,EAAAC,cAACoa,EAAA,EAAD7a,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4b,cAAc,EACd1Z,KAAM,eACNyY,QAAS5a,KAAKwH,MAAM8kI,UACpB1vH,SAAU5c,KAAKsuI,kBAAkBpvH,KAAKlf,MACtC8a,aAAc9a,KAAKwH,MAAMglI,sBAGzBxsI,KAAKwH,MAAMilI,sBACRzsI,KAAKwH,MAAMilI,oBAAoBx4F,SAC9BtrC,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,EACHvJ,MAAM,GAERsC,KAAM,aACNQ,KAAM,0IAGR+F,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,CACE+R,OAAQ,OACR9O,UAAW2kH,IACX5oG,YAAa,CACXvV,GAAG,EACHtI,WAAW,SACXE,eAAe,UAEjBqe,eAAgB,CACd7c,WAAW,EACX3C,MAAM,CAAC,EAAE,EAAE,GACXuC,KAAK,SACLN,OAAO,OACPW,SAAS,CAAC,EAAE,GACZuM,UAAU,KACVzN,aAAa,EACbyF,UAAU,SACVkE,MAAM,oBAERiT,OAAQ,GACRP,WAAY,OACZW,oBAAoB,EACpBT,aAAc,mBACdhW,SAAU/H,KAAKuuI,aAAarvH,KAAKlf,MACjCse,0BAA2Bte,KAAKwuI,yBAAyBtvH,KAAKlf,OAC1DA,KAAKC,OAET0I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,MACfD,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJc,KAAM,OACNE,KAAM,QACNC,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,YAErD1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,IACZC,SAAU,OACVJ,MAAO,YACPgH,UAAW,UAJb,uCAcZX,EAAAxI,EAAAC,cAAC+I,EAAA,EAAD,CACEzJ,UAAW,CACT2J,GAAG,EACHvJ,MAAM,GAERsC,KAAM,UACNQ,KAAM,yCAtGR+F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,+BAiGtB+F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,qBA9OV+F,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFgN,GAAG,EACHzO,MAAM,IAGR6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,UACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,OAMMX,EAAAxI,EAAAC,cAAA,cAASJ,KAAK+C,cAAcmL,WAAWqX,EAAepjB,MAAtD,YANN,yDAMyIwG,EAAAxI,EAAAC,cAAA,cAASJ,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,oBAAoBzV,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAeke,IAAmB,SAAjL,YANzI,KAQAhrB,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,IACT4C,SAAS,CAAC,EAAE,IAEdjC,YAAa,SAAAqG,GAAC,OAAIy/G,EAAKtmH,MAAMwuI,mBAAmBloB,EAAKxjH,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAeke,OANrI,sBA/IhBhrB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPgH,UAAW,UAJb,gCAzBNX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,+BAxaMC,aCkwBb6rI,8MArwBblnI,MAAQ,CACNm7G,MAAM,KACND,QAAQ,KACRisB,SAAS,KACTnxG,UAAU,KACVsgF,WAAW,KACXlG,YAAY,KACZztG,YAAY,KACZ20B,aAAa,KACb+/C,aAAa,KACb50E,cAAc,KACdi6G,eAAe,KACfyS,eAAe,KACfz6C,gBAAgB,KAChB0yD,gBAAgB,KAChBC,iBAAiB,KACjBluB,kBAAiB,EACjBsC,mBAAmB,KACnBE,oBAAoB,KACpBsE,sBAAqB,KAIvB1kH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAIkBC,EAAUC,0FACjC5H,KAAKkD,cAE2B0E,EAAUinI,mBAAqB7uI,KAAKwH,MAAMqnI,0CAElE5kI,EAAgBjK,KAAKwH,MAAMqnI,iBAAiBjyD,WAC5CzyE,EAAcxK,OAAO2R,OAAOtR,KAAKC,MAAM8zB,qBAAqB,GAAG9pB,YAC1CjK,KAAK+C,cAAckuB,gBAAgBhnB,EAAcjK,KAAKC,MAAMqQ,gBAAjFwuB,SACAolF,EAAkBlkH,KAAKwH,MAAM08G,eAA4DlkH,KAAKwH,MAAM08G,eAArDlkH,KAAKC,MAAMglH,UAAUC,QAAU,QACpFllH,KAAKgI,SAAS,CACZmC,cACA20B,eACA70B,gBACAi6G,2BAIE8S,EAA0BpvH,EAAU+4G,mBAAqB3gH,KAAKwH,MAAMm5G,iBACpE4K,EAAwB3jH,EAAUs8G,iBAAmBlkH,KAAKwH,MAAM08G,eAChE4qB,EAAoBlnI,EAAUk2G,aAAe99G,KAAKwH,MAAMs2G,YAAc99G,KAAKwH,MAAMs2G,WAAWxoG,GAAG,GAC/Fy5H,EAAkBl/H,KAAKC,UAAUlI,EAAU+mI,YAAc9+H,KAAKC,UAAU9P,KAAKwH,MAAMmnI,WAAa3uI,KAAKwH,MAAMs2G,YAAc99G,KAAKwH,MAAMs2G,WAAWxoG,GAAG,IACpJi2G,GAAyBujB,GAAqBC,GAAmB/X,IACnEh3H,KAAK+2H,aAGqBlnH,KAAKC,UAAUlI,EAAUi3E,gBAAkBhvE,KAAKC,UAAU9P,KAAKwH,MAAMq3E,eAE/F7+E,KAAK+gH,wMAIS3wF,iFAChBA,EAASpwB,KAAK+C,cAAc2O,MAAM0e,IACtB9sB,UAAW8sB,EAAO9a,GAAG,wBAG3BtV,KAAKwH,MAAM8K,YAActS,KAAKwH,MAAMwnI,SAAWhvI,KAAKwH,MAAMynI,kCAEtDD,EAAUhvI,KAAKwH,MAAMwnI,QACrB18H,EAAatS,KAAKwH,MAAM8K,WAE9B48H,GADIA,EAAiB9+G,EAAO5M,IAAIlR,IACAH,MAAM+8H,EAAexhI,MAAMshI,sBAEpD,CACL5+G,SACA8+G,mDAKC,0RAGiBpxB,iCAAW,KAC/B6wB,EAAW,KACXxrB,EAAsB,OAC1BrF,EAAaA,GAAc99G,KAAKwH,MAAMs2G,cAEpB99G,KAAK+C,cAAc2O,MAAMosG,GAAYxoG,GAAG,yBAChDtV,KAAKwH,MAAM08G,sBACZ,gBAMA,kBACA,2CANHf,EAAsB,CACpB7gH,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAClDzpB,KAAI,kBAAA+D,OAAmBm3G,EAAWnwG,QAAQ,GAAtC,2DAKAyiB,EAASpwB,KAAK+C,cAAcwxD,qBAAqBupD,EAAW99G,KAAKwH,MAAM2C,YAAYxG,oBACxE3D,KAAKmvI,YAAY/+G,kBAAlCu+G,YAGIxrB,EADEwrB,EAASO,eAAev8G,IAAI3yB,KAAKwH,MAAMynI,WACnB,CACpB3sI,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAClDzpB,KAAI,kBAAA+D,OAAmB3G,KAAK+C,cAAcmS,iBAAiBy5H,EAASO,eAAe,IAAIvhI,QAAQ,GAA3F,KAAAhH,OAAiG3G,KAAKwH,MAAM08G,iBAG5F,CACpBthH,KAAI,uBACJN,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAO2a,0EAU9DvsB,KAAKgI,SAAS,CACZ2mI,WACA7wB,aACAqF,gNAIuB/yF,iFACrBvS,EAAa,KACbw6C,EAAe,KACnBjoC,EAASpwB,KAAK+C,cAAc2O,MAAM0e,GAC5Bg/G,EAAcpvI,KAAK+C,cAAc2O,MAAM,GAAG6wD,IAAI,KAAKpwD,MAAM,GAAGxE,QAAQ,QAClE3N,KAAKwH,MAAM08G,sBACZ,gBAIA,kBACA,2CAJHrmG,EAAa,WACbw6C,EAAe,CAACr4D,KAAKwH,MAAM2C,YAAYmD,QAAQyE,SAAS/R,KAAKwH,MAAMqnI,iBAAiB1xD,qBAAqBn9E,KAAK+C,cAAcqxD,aAAahkC,wCAIzIvS,EAAa,qBACPwxH,EAAsBrvI,KAAKwH,MAAMqnI,iBAAiB5xD,OAAOj9E,KAAKwH,MAAM08G,0BACnDlkH,KAAKmvI,YAAY/+G,gBAAlCu+G,+BAEAA,EAASO,eAAev8G,IAAI3yB,KAAKwH,MAAMynI,4BACzC52E,EAAe,CAACr4D,KAAKwH,MAAM2C,YAAYmD,QAAQtN,KAAK+C,cAAcqxD,aAAahkC,GAAQi/G,EAAoB/hI,QAAStN,KAAK+C,cAAcqxD,aAAau6E,EAASO,gBAAiBE,oDAEvK,mFAOR,CACLvxH,aACAw6C,sMAImBsoD,mEACrB3gH,KAAKgI,SAAS,CACZ24G,6MAIuBnvG,EAAG4e,EAAOhS,8GAC/BskG,EAAU,KACR4sB,aAAmBtvI,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAY,uBACnE85H,EAAcvvI,KAAK+C,cAAcmS,iBAAiBkb,EAAOpwB,KAAKwH,MAAM2C,YAAYxG,eAC9E3D,KAAKwH,MAAM08G,sBACZ,gBAaA,kBAYA,2CAxBGsrB,EAAiBh+H,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBpK,EAAKqE,MAAMqnI,iBAAiB5xD,OAA5B,MAA4C3vE,UAAY,KAC1KmiI,EAAmBj+H,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBpK,EAAKqE,MAAMqnI,iBAAiB5xD,OAA5B,QAA8C3vE,UAAY,KAC9KoiI,EAAoBF,EAAiBxvI,KAAK+C,cAAcmS,iBAAiBnD,SAASy9H,EAAe3kI,KAAK,IAAI7K,KAAKwH,MAAMq3E,aAAal7E,UAAY4rI,EAC9II,EAAsBF,EAAmBzvI,KAAK+C,cAAcmS,iBAAiBnD,SAAS09H,EAAiB5kI,KAAK,IAAI7K,KAAKwH,MAAMq3E,aAAal7E,UAAY4rI,EAC1J7sB,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,wCAAA+D,OAAyC+oI,EAAkB/hI,QAAQ,GAAnE,gCAAAhH,OAAoGgpI,EAAoBhiI,QAAQ,GAAhI,2CAAAhH,OAA4K2oI,EAA5K,qDAAA3oI,OAA4O3G,KAAKC,MAAMwB,MAAMC,OAAOsmB,QAApQ,8DAIA4nH,EAAmB5vI,KAAKwH,MAAMqnI,iBAAiB5xD,OAAOj9E,KAAKwH,MAAM08G,gBACjE2rB,EAAiBr+H,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBqiI,EAAiBtiI,UAAY,KAC/IwiI,EAAsBD,EAAiB7vI,KAAK+C,cAAcmS,iBAAiBnD,SAAS89H,EAAehlI,KAAK,IAAI+kI,EAAiBG,aAAapsI,UAAY3D,KAAK+C,cAAcmS,iBAAiBkJ,EAAO,GAAGwxH,EAAiBG,aAAapsI,UACxO++G,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,wCAAA+D,OAAyCmpI,EAAoBniI,QAAQ,GAArE,KAAAhH,OAA2E3G,KAAKwH,MAAM08G,eAAtF,uHAAAv9G,OAA0N2oI,EAA1N,qDAAA3oI,OAA0R3G,KAAKC,MAAMwB,MAAMC,OAAOsmB,QAAlT,8DAKAgoH,EAAqBhwI,KAAKwH,MAAMqnI,iBAAiB5xD,OAAOj9E,KAAKwH,MAAM08G,gBACnE+rB,EAAmBz+H,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkByiI,EAAmB1iI,UAAY,KACnJ4iI,EAAwBD,EAAmBjwI,KAAK+C,cAAcmS,iBAAiBnD,SAASk+H,EAAiBplI,KAAK,IAAImlI,EAAmBD,aAAapsI,UAAY3D,KAAK+C,cAAcmS,iBAAiBkJ,EAAO,GAAG4xH,EAAmBD,aAAapsI,UAClP++G,EAAU,CACRtgH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAEpDzpB,KAAI,wCAAA+D,OAAyCupI,EAAsBviI,QAAQ,GAAvE,KAAAhH,OAA6E3G,KAAKwH,MAAM08G,eAAxF,6HAAAv9G,OAAkO2oI,EAAlO,qDAAA3oI,OAAkS3G,KAAKC,MAAMwB,MAAMC,OAAOsmB,QAA1T,kGAQN26F,EAAQ3iH,KAAKwH,MAAMm7G,OACjB,GAAGt2F,WAAY,EAEfo7F,GAAuB,YACFznH,KAAK+C,cAAckuB,gBAAgBjxB,KAAKwH,MAAMyC,cAAcjK,KAAKC,MAAMqQ,iBAA5FwuB,SAIN9+B,KAAKgI,SAAS,CACZ26G,QACAD,UACA5jF,eACA2oF,iVAKEp+E,EAAM,KACJs5E,EAAQ,GACVD,EAAU,KACVssB,EAAU,KACVC,EAAY,KACZ38H,EAAa,KACbL,EAAc,KACd4sE,EAAe,KACfsxD,EAAmB,KACnBltB,EAAqB,KAEnB2sB,EAAmB5vI,KAAKwH,MAAMqnI,iBAAiB5xD,OAA5B,MACnB+yD,EAAqBhwI,KAAKwH,MAAMqnI,iBAAiB5xD,OAA5B,QACrBmzD,EAAsBR,EAAiBG,aACvCM,EAAwBL,EAAmBD,uBAE3C9uH,QAAQqD,IAAI,CAChBtkB,KAAKC,MAAM4nC,aAAa+nG,EAAiBztI,KAAKytI,EAAiBtiI,QAAQsiI,EAAiB9nG,KACxF9nC,KAAKC,MAAM4nC,aAAamoG,EAAmB7tI,KAAK6tI,EAAmB1iI,QAAQ0iI,EAAmBloG,KAC9F9nC,KAAKC,MAAM4nC,aAAauoG,EAAoBjuI,KAAKiuI,EAAoB9iI,QAAQ8iI,EAAoBtoG,KACjG9nC,KAAKC,MAAM4nC,aAAawoG,EAAsBluI,KAAKkuI,EAAsB/iI,QAAQ+iI,EAAsBvoG,gCAQ/F7mB,QAAQqD,IAAI,CAEpBtkB,KAAK+C,cAAckuB,gBAAgB2+G,EAAiBztI,KAAKnC,KAAKC,MAAMqQ,SAEpEtQ,KAAK+C,cAAckuB,gBAAgB++G,EAAmB7tI,KAAKnC,KAAKC,MAAMqQ,SAEtEtQ,KAAK+C,cAAckuB,gBAAgBm/G,EAAoBjuI,KAAKnC,KAAKC,MAAMqQ,SAEvEtQ,KAAK+C,cAAckuB,gBAAgBo/G,EAAsBluI,KAAKnC,KAAKC,MAAMqQ,+CAZzEggI,OACAC,OACAC,OACAC,OAaIC,EAAkBJ,GAAqBC,GAAuBD,EAAkBh7H,GAAG,IAAMi7H,EAAoBj7H,GAAG,QAG9GtV,KAAKwH,MAAM08G,sBACZ,iBAGA,oBAGA,0CALHrlC,EAAe7+E,KAAKC,MAAM6kH,UAAUjtF,6CAGpCgnD,EAAemxD,EAAmBD,iDAGlClxD,EAAe+wD,EAAiBG,iFAM9BV,EAAsBrvI,KAAKwH,MAAMqnI,iBAAiB5xD,OAAOj9E,KAAKwH,MAAM08G,iBAEtErlC,uBACEwwD,oCAKQpuH,QAAQqD,IAAI,CACpBtkB,KAAK+C,cAAcuuB,oBAAoButD,EAAa18E,KAAK,cACzDnC,KAAK+C,cAAcuuB,oBAAoButD,EAAa18E,KAAK,aAAa,CAACktI,EAAoB/hI,UAC3FtN,KAAK+C,cAAcuuB,oBAAoButD,EAAa18E,KAAK,eAAe,CAACnC,KAAKwH,MAAM2C,YAAYmD,QAAQ+hI,EAAoB/hI,gDAN5H0hI,OACAC,QACA38H,UASMusH,EAAwC,UAA9B7+H,KAAKwH,MAAM08G,eACrB/mC,EAAsBn9E,KAAKwH,MAAMqnI,iBAAiB1xD,oBAClDlqE,GAA6B,IAApBkqE,EAA2BrqE,KAAK84B,OAAjC,MACdt5B,EAAatS,KAAK+C,cAAcmS,iBAAiB5C,EAAWtS,KAAKwH,MAAM2C,YAAYxG,UAC7EgtI,EAAW9R,EAAUvsH,EAAatS,KAAK+C,cAAc2O,MAAM,GAAGS,MAAMG,GAAYkR,IAAIlR,GAC1F+2B,EAAMrpC,KAAK+C,cAAc2O,MAAM,KAAKhE,MAAMijI,GAAUjjI,MAAM,KAAK8V,IAAIvQ,IAIjE+7H,IACFA,EAAUhvI,KAAK+C,cAAcmS,iBAAiB85H,EAAQ,kBAIlDhvI,KAAKwH,MAAM08G,sBACZ,iBAiCA,oBAgCA,0CAhEHjB,EAAkB,sCAClBP,EAAU,CACRtgH,KAAK,iBACLQ,KAAI,SAAA+D,OAAU3G,KAAKwH,MAAMyC,cAArB,gYAAAtD,OAAia3G,KAAKC,MAAMwB,MAAMC,OAAOsmB,QAAzb,4BAGN26F,EAAM/0G,KAAK,CACTxL,KAAK,WACLw1G,YAAYqL,EACZ52F,UAAUrsB,KAAKwH,MAAMm5G,mBAGvBgC,EAAM/0G,KAAK,CACTxL,KAAK,WACLiqB,UAAUqkH,EACV94B,YAAW,kCAGb+K,EAAM/0G,KAAK,CACTxL,KAAK,SACLw1G,YAAW,6CACXvrF,UAAUmkH,GAA4BA,EAAyBl7H,GAAG,GAClEtP,KAAI,0CAAAW,OAA2C3G,KAAKwH,MAAMqnI,iBAAiB5xD,OAA5B,MAA4C8yD,aAAaziI,QAApG,OAGNq1G,EAAM/0G,KAAK,CACTxL,KAAK,SACLw1G,YAAW,+CACXvrF,UAAUokH,GAA8BA,EAA2Bn7H,GAAG,GACtEtP,KAAI,0CAAAW,OAA2C3G,KAAKwH,MAAMqnI,iBAAiB5xD,OAA5B,QAA8C8yD,aAAaziI,QAAtG,2CAIFtN,KAAKwH,MAAMmnI,UACbwB,EAAmBnwI,KAAK+C,cAAcmS,iBAAiBlV,KAAKwH,MAAMmnI,SAASv+G,OAAOpwB,KAAKwH,MAAM2C,YAAYxG,UACzGsO,EAAcjS,KAAK+C,cAAcmS,iBAAiBlV,KAAKwH,MAAMmnI,SAASO,eAAerwD,EAAal7E,UAClG++G,EAAU,CACRtgH,KAAK,eACLQ,KAAI,wBAAA+D,OAAyBwpI,EAAiBxiI,QAAQ,GAAlD,KAAAhH,OAAwD3G,KAAKwH,MAAMyC,cAAnE,wDAAAtD,OAAuIsL,EAAYtE,QAAQ,GAA3J,KAAAhH,OAAiK3G,KAAKwH,MAAMyC,cAA5K,oFAGNy4G,EAAU,CACRtgH,KAAK,eACLQ,KAAI,iCAAA+D,OAAkC3G,KAAKwH,MAAMyC,cAA7C,kGAKRy4G,EAAQ9/G,MAAR,GAAA+D,OAAiB0iC,EAAG,4BAAA1iC,OAA+B3G,KAAKC,MAAMwB,MAAMC,OAAOsmB,QAAvD,kFAAArhB,OAA+I0iC,EAAI17B,QAAQ,GAA3J,cAA4K,KAAhM,2JAAAhH,OAA8V3G,KAAKC,MAAMwB,MAAMC,OAAOsmB,QAAtX,iGAGAi7F,EAAkB,6CAClBN,EAAM/0G,KAAK,CACTxL,KAAK,WACLw1G,YAAYqL,EACZ52F,UAAUrsB,KAAKwH,MAAMm5G,mBAGvBgC,EAAM/0G,KAAK,CACTxL,KAAK,WACLiqB,UAAUkkH,GAAuBA,EAAoBj7H,GAAG,GACxDsiG,YAAW,gCAAAjxG,OAAiC3G,KAAKwH,MAAMyC,qDAIrDjK,KAAKwH,MAAMmnI,UACbwB,EAAmBnwI,KAAK+C,cAAcmS,iBAAiBlV,KAAKwH,MAAMmnI,SAASv+G,OAAOpwB,KAAKwH,MAAM2C,YAAYxG,UACzGsO,EAAcjS,KAAK+C,cAAcmS,iBAAiBlV,KAAKwH,MAAMmnI,SAASO,eAAerwD,EAAal7E,UACrE,GAC7B++G,EAAU,CACRtgH,KAAK,cACLQ,KAAI,wBAAA+D,OAAyBwpI,EAAiBxiI,QAAQ,GAAlD,KAAAhH,OAAwD3G,KAAKwH,MAAMyC,cAAnE,sDAAAtD,OAAqIsL,EAAYtE,QAAQ,GAAzJ,KAAAhH,OAA+J3G,KAAKwH,MAAMyC,cAA1K,aAAAtD,OAAwN,aAAAA,OAHjM,GAGiM,iCAAxN,6FAGN+7G,EAAU,CACRtgH,KAAK,cACLQ,KAAI,+BAAA+D,OAAgC3G,KAAKwH,MAAMyC,cAA3C,oHAIRy4G,EAAQ9/G,MAAR,GAAA+D,OAAiB0iC,EAAG,4BAAA1iC,OAA+B3G,KAAKC,MAAMwB,MAAMC,OAAOsmB,QAAvD,8EAAArhB,OAA2I0iC,EAAI17B,QAAQ,GAAvJ,KAA+J,KAAnL,oKAAAhH,OAA0V3G,KAAKC,MAAMwB,MAAMC,OAAOsmB,QAAlX,iGAGAi7F,EAAkB,2CAClBN,EAAM/0G,KAAK,CACTxL,KAAK,WACLw1G,YAAYqL,EACZ52F,UAAUrsB,KAAKwH,MAAMm5G,mBAGvBgC,EAAM/0G,KAAK,CACTxL,KAAK,WACLiqB,UAAUikH,GAAqBA,EAAkBh7H,GAAG,GACpDsiG,YAAW,8BAAAjxG,OAA+B3G,KAAKwH,MAAMyC,mFAO9B,EAC7BjK,KAAKgI,SAAS,CACZqhC,MACAs5E,QACAD,UACAssB,UACAC,YACA38H,aACAusE,eACAokC,qBACAwE,sBAV2B,4QAgBzBngE,EAAWv1C,SAASe,KAAK84B,MAAM,KAC/BswC,EAAkBl8E,KAAKC,MAAM6kH,UAAUvoC,UAAUt3C,OAAQ,SAACpV,EAAOkI,EAAEhyB,GACvE,GAAIgyB,EAAEolD,oBAAoB71B,EAAS,CACjC,IAAM8zB,EAAiBtwE,EAAK/H,cAAc8P,YAAkC,IAAtBklB,EAAEolD,qBAA0BC,MAAMnnE,OAAO,uBAAuB,OAChH7T,EAAI,iBAAAuE,OAAoBoxB,EAAE6kD,WAAtB,QACJ3uE,EAAK,eAAAtH,OAAkBoxB,EAAE6kD,WAApB,mBAAAj2E,OAAgDy0E,GAC3DvrD,EAAOjiB,KAAK,CACVxL,OACA6L,QACApD,KAAKktB,EACL5sB,MAAMiwE,IAGV,OAAOvrD,GACP,aAEsB7vB,KAAK+C,cAAc09B,6BAArCjD,SACAoxG,EAAkB1yD,EAAgBl4E,OAASk4E,EAAgB,GAAK,KAEtEl8E,KAAKgI,SAAS,CACZw1B,YACAoxG,kBACA1yD,mBACA,WACI0yD,GACF9jI,EAAK8lI,eAAehC,sLAKLlyD,yEACbmyD,EAAmBnyD,EAAS7xE,KAClC7K,KAAKgI,SAAS,CACZ6mI,0JAIM3qB,GACRlkH,KAAKgI,SAAS,CACZk8G,oDAIK,IAAAjH,EAAAj9G,KAED6wI,EAAuC,SAA9B7wI,KAAKwH,MAAM08G,eACpB4sB,EAA2C,UAA9B9wI,KAAKwH,MAAM08G,eACxB6sB,EAA6C,YAA9B/wI,KAAKwH,MAAM08G,eAC1B4V,EAAW+W,EAAS7wI,KAAKwH,MAAM08G,eAAd,OAAAv9G,OAAsC3G,KAAKwH,MAAM08G,gBAwGxE,OACEv7G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjB,KAAKwH,MAAM00E,gBAmBVvzE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGbjB,KAAKwH,MAAM00E,gBAAgBl4E,OAU1B2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,oBAGA5F,EAAAxI,EAAAC,cAACoa,EAAA,EAAD7a,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,WACN0Z,cAAc,EACdjB,QAAS5a,KAAKwH,MAAM00E,gBACpBlhE,kBAlKM,SAAA/a,GACxB,IAAMgO,EAAQhO,EAAMgO,MACd9D,EAAc,CAClB/H,KAAKnC,EAAM4K,KAAKzI,MAGlB,OACEuG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,UAEZ4H,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP9D,YAAaA,EACbwV,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHvB,MAAM,MACNiC,OAAO,UAIb4G,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP0R,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,mBAgIAwY,aAAc9a,KAAKwH,MAAMonI,gBACzBhyH,SAAU5c,KAAK4wI,eAAe1xH,KAAKlf,MACnCib,qBAzHS,SAAAhb,GAE3B,IACM0b,GAA4D,IADlD1b,EAAM0b,YAAYf,QACN2B,QAAQtc,EAAM0b,YAAYxQ,OAAgBlL,EAAM0b,YAAYxQ,MAAQ,KAEhG,IAAKwQ,EACH,OAAO,KAGT,IAAM1N,EAAQ0N,EAAY1N,MACpB9D,EAAc,CAClB/H,KAAKuZ,EAAYvZ,MAGnB,OACEuG,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACEyG,MAAO,CACL2Z,KAAK,KAEP/e,eAAgB,iBACZhB,EAAMkb,YAEVxS,EAAAxI,EAAAC,cAACwI,EAAA,EAADjJ,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMkb,WAHZ,CAIEpa,WAAY,SACZC,cAAe,MACfqF,MAAO,CAAC6I,OAAO,WACfjO,eAAgB,eAEhB0H,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP9D,YAAaA,EACbwV,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,UAIb4G,EAAAxI,EAAAC,cAACgoH,EAAA,EAAD,CACE32G,MAAOxD,EACP0R,UAAW,CACTxd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,uBA4EFtC,KAAKwH,MAAMqnI,kBACTlmI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,kBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOsrI,EAAS,EAAI,GAEtB/wI,MAAO,CAAC,EAAE,OACVo9G,QAAS,gBACTK,SAAU,kBACVv7G,SAAUhC,KAAKC,MAAM+B,SACrBgvI,WAAY,qDACZ/uI,WAAY,CACVsM,GAAG,EACHxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUswI,EACVpwI,YAAc,SAAAqG,GAAC,OAAIm2G,EAAKgd,UAAU,WAEpCtxH,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOurI,EAAa,EAAI,GAE1BhxI,MAAO,CAAC,EAAE,OACVo9G,QAAS,YACTK,SAAU,mBACVv7G,SAAUhC,KAAKC,MAAM+B,SACrBgvI,WAAY,wDACZ/uI,WAAY,CACVsM,GAAG,EACHxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUuwI,EACVrwI,YAAc,SAAAqG,GAAC,OAAIm2G,EAAKgd,UAAU,YAEpCtxH,EAAAxI,EAAAC,cAAC4rH,EAAA,EAAD,CACE1mH,YAAa,CACX1E,GAAG,EACH2E,OAAOwrI,EAAe,EAAI,GAE5BjxI,MAAO,CAAC,EAAE,OACVo9G,QAAS,cACTl7G,SAAUhC,KAAKC,MAAM+B,SACrBu7G,SAAU,qBACVyzB,WAAY,yDACZ/uI,WAAY,CACVsM,GAAG,EACHxM,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUwwI,EACVtwI,YAAc,SAAAqG,GAAC,OAAIm2G,EAAKgd,UAAU,eAIpCj6H,KAAKwH,MAAM2C,aAAenK,KAAKwH,MAAMs3B,cAAgB9+B,KAAKwH,MAAMq3E,cAC9Dl2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJkF,GAAI,EACJzO,MAAO,GAEP6I,EAAAxI,EAAAC,cAACsnH,EAAD/nH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0R,OAAQmoH,EACRr8G,MAAOzd,KAAKwH,MAAMiW,MAClBklG,MAAO3iH,KAAKwH,MAAMm7G,MAClBD,QAAS1iH,KAAKwH,MAAMk7G,QACpBv4G,YAAanK,KAAKwH,MAAM2C,YACxB20B,aAAc9+B,KAAKwH,MAAMs3B,aACzB+/C,aAAc7+E,KAAKwH,MAAMq3E,aACzB92E,SAAU/H,KAAKynH,qBAAqBvoG,KAAKlf,MACzC2gH,iBAAkB3gH,KAAK2gH,iBAAiBzhG,KAAKlf,MAC7CijH,mBAAoBjjH,KAAKwH,MAAMy7G,mBAC/BE,oBAAqBnjH,KAAKwH,MAAM27G,oBAChCpC,oBAAqB/gH,KAAK+gH,oBAAoB7hG,KAAKlf,MACnDqe,qBAAsBre,KAAKqe,qBAAqBa,KAAKlf,QAErD2I,EAAAxI,EAAAC,cAAC24G,EAAA,EAADp5G,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE66G,YAAY,EACZ7B,iBAAkB,GAClBI,SAAUr5G,KAAKwH,MAAMyC,qBA7HvCtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPgH,UAAW,UAJb,mCAzBNX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,yCA5mBMC,gHCgTbouI,8MAhTbzpI,MAAQ,CACN2C,YAAY,KACZsrH,kBAAkB,KAClBC,kBAAkB,KAClByU,oBAAmB,EACnBxU,2BAA2B,QAI7B5yH,cAAgB,OA0ChBmuI,gBAAkB,SAACjnI,GACjB,IAAMknI,EAAcjsI,EAAKnC,cAAc0S,gBAAgB,CAAC,QAAQ,mBAChEvQ,EAAKjF,MAAM8G,YAAX,SAAAJ,OAAgCwqI,EAAYjzD,MAA5C,KAAAv3E,OAAqDsD,OAGvD2rH,sDAAkB,SAAAj1G,EAAO80G,GAAP,IAAAprB,EAAAqrB,EAAAC,EAAA,OAAA3kG,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,OACVg5F,EAAYnlG,EAAKjF,MAAM6kH,UAAU10G,gBAAgBqlH,GAEnDC,EAAoB,KAClBC,EAA6B,IAE6C,qBAA7CzwH,EAAKjF,MAAM6kH,UAAU/wF,oBAAsC7uB,EAAKjF,MAAM6kH,UAAU/wF,oBAAsBp0B,OAAOoE,KAAKmB,EAAKjF,MAAM8zB,sBAE5I9vB,QAAS,SAAAo9B,GAC3B,IACM0e,EAD2B76C,EAAKjF,MAAM8zB,oBAAoBsN,GAChBgpE,EAAU7tE,WAC1D,IAAKujB,EACH,OAAO,SAIFA,EAAgB39C,KAElBszH,IACHA,EAAoB31E,EAAgBztB,KAAK7gB,OAE3CsuC,EAAgB1e,SAAWA,EAC3B0e,EAAgBvjB,UAAY6tE,EAAU7tE,UACtCm5F,EAA2B51E,EAAgBztB,KAAK7gB,OAASsuC,IAG3D76C,EAAK8C,SAAS,CACZmC,YAAY,KACZsrH,oBACAE,8BACA,WACAzwH,EAAK2wH,gBAAgBH,KA/BP,wBAAA70G,EAAArO,SAAAmO,EAAA3gB,iEAmClB61H,sDAAkB,SAAAz0G,EAAOs0G,GAAP,IAAA/6B,EAAA0P,EAAAlgG,EAAAs7C,EAAAlrB,EAAA,OAAAvJ,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAEVspF,EAAkBz1F,EAAKsC,MAAMmuH,2BAA2BD,GACxDrrB,EAAYnlG,EAAKjF,MAAM6kH,UAAU10G,gBAAgBlL,EAAKsC,MAAMiuH,oBAE5DtrH,EAAc,CAClBsH,MAAMkpF,EAAgBn+D,UACtBlvB,QAAQqtF,EAAgBrtF,QACxB3J,SAASg3F,EAAgBh3F,WAIf2uB,KAAOqoE,EAAgBroE,KAG7BmzB,EAAc,CAClB3d,IAAIuiE,EAAUviE,IACd3lC,KAAKkoG,EAAU54F,MACfA,MAAM44F,EAAU54F,MAChBnE,QAAQ+8F,EAAU/8F,SAGditB,EAAoBr1B,EAAKjF,MAAM6kH,UAAUvqF,kBAG3C8vE,EAAU+gC,kBACZ7wG,EAAkBkF,UAAU,GAAGt9B,KAAOkoG,EAAU+gC,iBAGlDjhI,EAAYmwB,UAAY,CACtBjI,SAAQ,EACRozB,cACAlrB,oBACA4vG,oBAAmB,GAjCL5oH,EAAAlQ,KAAA,GAoCVnM,EAAKjF,MAAMorI,iBAAiB1wC,EAAgBt5D,SAASgpE,EAAU7tE,WApCrD,QAsChBt3B,EAAK8C,SAAS,CACZmC,cACAurH,sBAxCc,yBAAAn0G,EAAA/O,SAAA4O,EAAAphB,iEA4ClBuqI,kBAAoB,WAClBrlI,EAAK8C,SAAS,CACZmiI,oBAAmB,gFA7HjBnqI,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,mKAK9CD,KAAKkD,qBACClD,KAAKg2H,gRAILP,EAAoBz1H,KAAKC,MAAMglH,UAAUC,QAAUllH,KAAKC,MAAM6kH,UAAU10G,gBAAgBpQ,KAAKC,MAAMglH,UAAUC,QAAUllH,KAAKC,MAAMglH,UAAUC,OAASvlH,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAiB,YAEvMpQ,KAAK+C,cAAc2N,aAAa/Q,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAjE,eAAA8Q,EAAAvhB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAkF,SAAAiD,EAAOtC,GAAP,IAAAtH,EAAA,OAAA6mB,EAAA7wB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,UAChFlH,EAAchH,EAAKlD,MAAM6kH,UAAU10G,gBAAgBqB,GACnCtO,EAAKJ,cAAc20B,kBAAkBvtB,EAAYsH,SACjDtH,EAAY29B,IAHoD,CAAA7zB,EAAA5C,KAAA,eAAA4C,EAAA5C,KAAA,EAI9ElO,EAAKlD,MAAM4nC,aAAa19B,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY29B,KAJI,wBAAA7zB,EAAAzB,SAAAuB,EAAA/T,SAAlF,gBAAAyS,GAAA,OAAAyO,EAAAxO,MAAA1S,KAAA2S,YAAA,WAQF8iH,GAAqBA,IAAsBz1H,KAAKC,MAAMglH,UAAUC,QAClEllH,KAAKkxI,gBAAgBzb,GAGvBz1H,KAAK41H,gBAAgBH,wLAGE9tH,EAAUC,sEACjC5H,KAAKkD,cAEoByE,EAAUs9G,UAAUC,SAAWllH,KAAKC,MAAMglH,UAAUC,wCAErEllH,KAAKg2H,mJAgGb,OAAKh2H,KAAKwH,MAAMiuH,kBAKd9sH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuJ,GAAI,CAAC,EAAE,GACPtI,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,4BAGA5F,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJ2a,aAAa,EACblE,cAAc,EACde,SAAU5c,KAAKkxI,gBACfjnI,cAAejK,KAAKwH,MAAMiuH,kBAC1BrlH,gBAAiBpQ,KAAKC,MAAM6kH,UAAU10G,oBAIxCpQ,KAAKwH,MAAMmuH,4BAA8B31H,KAAKwH,MAAMkuH,mBAClD/sH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,6BAGA5F,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJ2a,aAAa,EACbnD,SAAU5c,KAAK61H,gBACf5rH,cAAejK,KAAKwH,MAAMkuH,kBAC1BtlH,gBAAiBpQ,KAAKwH,MAAMmuH,+BAKlC31H,KAAKwH,MAAMiuH,mBAAqBz1H,KAAKwH,MAAMkuH,kBACzC/sH,EAAAxI,EAAAC,cAACurI,GAAA,EAADhsI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4rI,aAAa,EACb5zD,eAAe,EACf6zD,iBAAiB,EACjB3hI,YAAanK,KAAKwH,MAAM2C,YACxBogI,kBAAmBvqI,KAAKuqI,kBACxBtgI,cAAejK,KAAKwH,MAAMiuH,kBAC1B5hH,iBAAkB7T,KAAKC,MAAM4T,mBAG1B7T,KAAKC,MAAMqQ,QAoCV3H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAIHrJ,KAAKwH,MAAM2iI,mBACTxhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,YAErD1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,QAMQtJ,KAAKwH,MAAMiuH,kBANnB,sCAUF9sH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,sBAMsBtJ,KAAKwH,MAAMiuH,kBANjC,sBAvER9sH,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAGLV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,QACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,uDAQAX,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM83G,2BAL1B,cA+DR,OAxJH,YAlJgBl1G,aC2xBduuI,8MAxwBb5pI,MAAQ,CACNmiI,UAAS,EACTpnD,YAAY,GACZqnD,YAAW,EACXj4H,OAAO,UACP8wE,cAAc,GACdt4E,YAAY,KACZmT,WAAW,CACT+iE,MAAM,CACJ9iE,OAAO,KACPC,SAAQ,IAGZssH,cAAa,EACb7/H,cAAc,KACd+/H,gBAAe,EACfC,gBAAe,EACfE,oBAAmB,EACnBx1D,oBAAoB,KACpB01D,2BAA0B,EAC1B1U,2BAA2B,QAI7B5yH,cAAgB,OAwGhB6yH,sDAAkB,SAAAj1G,EAAO1W,GAAP,IAAA0qE,EAAAw2D,EAAAprF,EAAA51C,EAAAs7C,EAAAlrB,EAAA,OAAAvJ,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cAEVsjE,EAAsBzvE,EAAKjF,MAAM6kH,UAAU10G,gBAAgBnG,GAC3DkhI,EAA2BjmI,EAAKjF,MAAM8zB,oBAAoB4gD,EAAoBtzC,UAE9E0e,EAAkBorF,EAAwBx2D,EAAoBn4C,YAE9DryB,EAAc,CAClBsH,MAAMkjE,EAAoBn4C,UAC1BlvB,QAAQqnE,EAAoBrnE,QAC5B3J,SAASgxE,EAAoBhxE,WAInB2uB,KAAOytB,EAAgBztB,KAG7BmzB,EAAc,CAClB3d,IAAI6sC,EAAoB7sC,IACxB3lC,KAAKwyE,EAAoBxyE,KACzBsP,MAAMkjE,EAAoBljE,MAC1BnE,QAAQqnE,EAAoBrnE,SAGxBitB,EAAoBo6C,EAAoBp6C,kBAG1CwlB,EAAgBqrF,kBAClB7wG,EAAkBkF,UAAU,GAAGt9B,KAAO49C,EAAgBqrF,iBAGxDjhI,EAAYmwB,UAAY,CACtBjI,SAAQ,EACRozB,cACAlrB,oBACA4vG,oBAAmB,GAnCLtpH,EAAAxP,KAAA,GAsCVnM,EAAKjF,MAAMorI,iBAAiB12D,EAAoBtzC,SAAS0e,EAAgBvjB,WAtC/D,QAwChBt3B,EAAK8C,SAAS,CACZmC,cACAF,gBACA0qE,wBA3Cc,yBAAA9zD,EAAArO,SAAAmO,EAAA3gB,iEA+ClBqgF,2BAAQ,SAAAj/D,IAAA,IAAAkqH,EAAAC,EAAAC,EAAA,OAAAx6G,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,UACDnM,EAAKsC,MAAMwiI,eADV,CAAAzoH,EAAAlQ,KAAA,eAAAkQ,EAAAK,OAAA,SAEG,MAFH,QAKU,EACO,EACjB0pH,EAAU3rI,OAAOoE,KAAKmB,EAAKsC,MAAMi7E,eAAe,GAEhD8oD,EAAgB,SAAC/5H,EAAGiM,GACxB,IAAMulC,EAA4B,YAAdxxC,EAAGI,OAGjB8L,EAAY,CAChBC,cAAa,iBACbG,YAAa,QACbF,WAAY1Y,EAAKjF,MAAMgK,cACvB63G,WAAY/vG,SAXO,IAcjB0L,IACFC,EAAUE,WAAa1Y,EAAKnC,cAAcib,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAU9L,SACrB1M,EAAKnC,cAAckb,yBAAyBP,GAG9CxY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BqiI,eAAejnF,EACf1lC,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAER+iE,MAAM,CACJ9iE,OAAO,KACPC,SAAQ,SAMVguH,EAAuB,SAACh6H,GAC5B,IAAM+L,EAAS/L,EAAG2M,gBAClBjZ,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAER+iE,MAAM1gF,OAAA+4B,EAAA,EAAA/4B,CAAA,GACDiI,EAAU0V,WAAW+iE,MADrB,CAEH9iE,iBAMRrY,EAAKjF,MAAMwe,0BAA0BvZ,EAAKsC,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAM,WAAY,CAACmpI,GAAU,KAAMC,EAAeC,GAExItmI,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAER+iE,MAAM1gF,OAAA+4B,EAAA,EAAA/4B,CAAA,GACDiI,EAAU0V,WAAW+iE,MADrB,CAEH7iE,SAxDU,SALV,wBAAA+D,EAAA/O,SAAA4O,EAAAphB,WAmERi6H,UAAY,SAACtoH,GACI,OAAXA,GAAmB,CAAC,UAAU,UAAU8iB,SAAS9iB,EAAOpE,gBAC1DrI,EAAK8C,SAAS,CACZ2J,cAKN44H,kBAAoB,WAClBrlI,EAAKslI,cACLtlI,EAAK8C,SAAS,CACZmiI,oBAAmB,gFAlOjBnqI,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,mKAK9CD,KAAKkD,qBACClD,KAAKg2H,0SAKLthC,EAAwB10F,KAAKwH,MAAMmtE,oBAAoBp6C,2BAEvDtZ,QAAQqD,IAAI,CAChBtkB,KAAKC,MAAM4nC,aAAa6sD,EAAsBvyF,KAAKuyF,EAAsBpnF,QAAQonF,EAAsB5sD,KACvG9nC,KAAKC,MAAM4nC,aAAa7nC,KAAKwH,MAAMmtE,oBAAoBxyE,KAAKnC,KAAKwH,MAAMmtE,oBAAoBrnE,QAAQtN,KAAKwH,MAAMmtE,oBAAoB7sC,8BAG3E7mB,QAAQqD,IAAI,CACnEtkB,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKwH,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAK,aAC7FnC,KAAK+C,cAAc0hE,mBAAmBzkE,KAAKwH,MAAMmtE,oBAAoBxyE,KAAKuyF,EAAsBpnF,QAAQtN,KAAKC,MAAMqQ,iDAF9GyxE,OAAesoD,OAKhBviI,EAAW,GACX26E,EAAgB,GAChBF,EAAc,GAChBynD,GAAiB,EAEE,OAAnBjoD,mBACOC,EAAa,eAAGA,GAAcD,qCACC9gE,QAAQqD,IAAI,CAChDtkB,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKwH,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAK,cAAc,CAAC6/E,IAC5GhiF,KAAK+C,cAAcuuB,oBAAoBtxB,KAAKwH,MAAMmtE,oBAAoBp6C,kBAAkBp4B,KAAK,gBAAgB,CAACnC,KAAKC,MAAMqQ,QAAQ0xE,0CAF9HI,OAAWE,OAIZF,GAA6B,OAAfA,IAChBG,EAAYP,GAAchiF,KAAK+C,cAAcmS,iBAAiBktE,EAAWpiF,KAAKwH,MAAMmtE,oBAAoBhxE,WAErF,OAAjB2+E,IACFA,EAAetiF,KAAK+C,cAAcmS,iBAAiBotE,EAAatiF,KAAKwH,MAAMmtE,oBAAoBhxE,WAC9E2R,GAAG,KAElBmtE,EAAcT,GAAcM,EAExBN,EAAaD,IACfioD,GAAiB,YAf+BhoD,4BAqBxDl6E,EAAS26E,cAAgBA,UAGrBqnD,EAAgBrnD,GAAiB9iF,OAAOoE,KAAK0+E,GAAez+E,OAAO,EAEnEqtI,EAAqBrxI,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,mBACjE67H,EAA+BD,EAAmBrG,eAExDljI,EAASmiI,gBAAiB,EAC1BniI,EAASy6E,YAAcA,EACvBz6E,EAASkiI,eAAiBA,EAC1BliI,EAASgiI,aAAeA,EACxBhiI,EAAS8hI,YAAcE,GAAgBwH,EACvCxpI,EAAS6hI,SAAWK,GAAkBF,EACtChiI,EAAS6J,OAASm4H,EAAe,SAAW,UAC5ChiI,EAASuiI,0BAA4BA,EAErCrqI,KAAKgI,SAASF,uQAIRmC,EAAgBjK,KAAKC,MAAMglH,UAAUC,QAAUllH,KAAKC,MAAM6kH,UAAU10G,gBAAgBpQ,KAAKC,MAAMglH,UAAUC,QAAUllH,KAAKC,MAAMglH,UAAUC,OAASvlH,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAiB,YAEnMpQ,KAAK+C,cAAc2N,aAAa/Q,OAAOoE,KAAK/D,KAAKC,MAAM6kH,UAAU10G,iBAAjE,eAAA0hB,EAAAnyB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAkF,SAAAqR,EAAO1Q,GAAP,IAAAtH,EAAA,OAAA6mB,EAAA7wB,EAAA+Q,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,UAChFlH,EAAchH,EAAKlD,MAAM6kH,UAAU10G,gBAAgBqB,GACnCtO,EAAKJ,cAAc20B,kBAAkBvtB,EAAYsH,SACjDtH,EAAY29B,IAHoD,CAAAzlB,EAAAhR,KAAA,eAAAgR,EAAAhR,KAAA,EAI9ElO,EAAKlD,MAAM4nC,aAAa19B,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY29B,KAJI,wBAAAzlB,EAAA7P,SAAA2P,EAAAniB,SAAlF,gBAAA2hB,GAAA,OAAAmQ,EAAApf,MAAA1S,KAAA2S,YAAA,WAQN3S,KAAK41H,gBAAgB3rH,wLAGEtC,EAAUC,sEACjC5H,KAAKkD,cAEoByE,EAAUs9G,UAAUC,SAAWllH,KAAKC,MAAMglH,UAAUC,wCAErEllH,KAAKg2H,oBAGgBpuH,EAAUqC,gBAAkBjK,KAAKwH,MAAMyC,eAElEjK,KAAKwqI,oJAqIA,IAAA1/H,EAAA9K,KAEP,IAAKA,KAAKwH,MAAMyC,cACd,OAAO,KAGT,IACMqnI,EADqBtxI,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,mBACfu1H,eAElDM,EAAUtrI,KAAKwH,MAAMi7E,eAAiB9iF,OAAOoE,KAAK/D,KAAKwH,MAAMi7E,eAAez+E,OAAO,EAAIrE,OAAOoE,KAAK/D,KAAKwH,MAAMi7E,eAAe,GAAK,KAClIH,EAAetiF,KAAKwH,MAAMi7E,eAAiB9iF,OAAO2R,OAAOtR,KAAKwH,MAAMi7E,eAAez+E,OAAO,EAAIrE,OAAO2R,OAAOtR,KAAKwH,MAAMi7E,eAAe,GAAK,KAEjJ,OACE95E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuJ,GAAI,CAAC,EAAE,GACPtI,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,GAEP6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,4BAGA5F,EAAAxI,EAAAC,cAACof,EAAA,EAAD7f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJ2a,aAAa,EACblE,cAAc,EACde,SAAU5c,KAAK41H,gBACf3rH,cAAejK,KAAKwH,MAAMyC,cAC1BmG,gBAAiBpQ,KAAKC,MAAM6kH,UAAU10G,qBAIvCpQ,KAAKwH,MAAMoiI,YAAc5pI,KAAKwH,MAAMmiI,WACnChhI,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFxB,GAAG,EACHsJ,GAAG,IAGLV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAOnC,KAAKwH,MAAM6iI,0BAA4B,WAAa,WAC3D/nI,MAAQtC,KAAKwH,MAAM6iI,0BAA4BrqI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAY,aAEzG1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPgH,UAAW,QAJb,yCASFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAOnC,KAAKwH,MAAMsiI,aAAe,WAAa,WAC9CxnI,MAAQtC,KAAKwH,MAAMsiI,aAAe9pI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAY,aAE5F1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPgH,UAAW,QAJb,gBAMgBtJ,KAAKwH,MAAMmtE,oBAAoBljE,QAGjD9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAOnC,KAAKwH,MAAMwiI,eAAiB,WAAa,SAChD1nI,MAAQtC,KAAKwH,MAAMwiI,eAAiBhqI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAY,aAE9F1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPgH,UAAW,QAJb,sCASFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAOnC,KAAKwH,MAAMyiI,eAAiB,WAAa,SAChD3nI,MAAQtC,KAAKwH,MAAMyiI,eAAiBjqI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UAAY,aAE9F1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPgH,UAAW,QAJb,cAMctJ,KAAKwH,MAAMyC,cANzB,SAaRjK,KAAKwH,MAAMyC,cACTtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK9I,MAAO,GAERE,KAAKwH,MAAM6iI,4BAA8BrqI,KAAKwH,MAAMoiI,YAAc5pI,KAAKwH,MAAMmiI,WAC3EhhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJrI,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,sBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN6+G,YAAY,WACV,OAAO7zG,EAAKtD,MAAMoiI,WAAa9+H,EAAKmvH,UAAU,WAAa,OAG/D35H,eAAe,EACfE,YAAcR,KAAKwH,MAAMoiI,WACzBrpI,SAAiC,YAAtBP,KAAKwH,MAAMmK,QAEtBhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACqvB,GAAA,EAAD,CACEzO,YAAa,CACXrP,OAAO,WAETgO,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAITsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,GAFd,aAQJkG,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN6+G,YAAY,WACV,OAAO7zG,EAAKtD,MAAMmiI,SAAW7+H,EAAKmvH,UAAU,UAAY,OAG5D35H,eAAe,EACfE,YAAcR,KAAKwH,MAAMmiI,SACzBppI,SAAiC,WAAtBP,KAAKwH,MAAMmK,QAEtBhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACqvB,GAAA,EAAD,CACEzO,YAAa,CACXrP,OAAO,UAETgO,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAITsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,GAFd,aAYY,YAAtBzC,KAAKwH,MAAMmK,OACT2/H,EACE3oI,EAAAxI,EAAAC,cAACurI,GAAA,EAADhsI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4rI,aAAa,EACbp2C,gBAAiB,GACjBxd,eAAe,EACf6zD,iBAAiB,EACjBE,cAAe,eACf5sH,SAAU,uBACVjV,YAAanK,KAAKwH,MAAM2C,YACxBF,cAAejK,KAAKwH,MAAMyC,cAC1Bq3G,gBAAiBthH,KAAKwqI,YAAYtrH,KAAKlf,MACvC6T,iBAAkB7T,KAAKC,MAAM4T,iBAC7B02H,kBAAmBvqI,KAAKuqI,kBAAkBrrH,KAAKlf,MAC/CmsI,cAAa,gBAAAxlI,OAAkB3G,KAAKwH,MAAMmtE,oBAAoBljE,MAAjD,+CAAA9K,OAAoG3G,KAAKwH,MAAM2C,YAAYmoB,KAAK7gB,MAAhI,OAGVzR,KAAKC,MAAMqQ,QAoCV3H,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAIHwqI,EACE3iI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNC,MAAO,WACPH,KAAM,mBAERwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAGTtJ,KAAKwH,MAAMwiI,eACTrhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CACEvjB,MAAO,YADT,qFAIAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CACEvjB,MAAO,YADT,mCAGmCggF,EAAa30E,QAAQ,GAHxD,IAG6D3N,KAAKwH,MAAMmtE,oBAAoBljE,MAH5F,kEAK+C,qBAApCzR,KAAKwH,MAAM+6E,YAAY+oD,IAC9B3iI,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CACEvjB,MAAO,YAEPqG,EAAAxI,EAAAC,cAAA,WAHF,eAGqBJ,KAAKwH,MAAM+6E,YAAY+oD,GAAS39H,QAAQ,GAH7D,IAGkE3N,KAAKwH,MAAMmtE,oBAAoBljE,UAQ3GzR,KAAKwH,MAAM2iI,mBACbxhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,YAErD1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,wCAMwCtJ,KAAKwH,MAAMmtE,oBAAoBljE,MANvE,qBAUF9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,sBAMsBtJ,KAAKwH,MAAMmtE,oBAAoBljE,MANrD,sBA9GR9I,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAGLV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,QACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,uDAQAX,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM83G,2BAL1B,cAuGVpvG,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAGL6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAHb,iDAWNX,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAIHd,KAAKwH,MAAM8V,WAAW+iE,MAAM7iE,QAC1B7U,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,UAEf2H,EAAAxI,EAAAC,cAAC+f,EAAA,EAADxgB,OAAAC,OAAA,GAAmBI,KAAKC,MAAxB,CAA+Bmf,SAAQ,qBAAwBD,WAAU,gCAAmCtX,KAAM7H,KAAKwH,MAAM8V,WAAW+iE,MAAM9iE,WAE9Ivd,KAAKwH,MAAMyiI,eACbthI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,YAErD1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,wCAMwCtJ,KAAKwH,MAAMyC,cANnD,QAQAtB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJC,UAAW,SACX3D,WAAY,UACZC,QAAU,SAAAkB,GAAC,OAAIgE,EAAK7K,MAAM8G,YAAY+D,EAAKtD,MAAMmtE,oBAAoBtzC,SAAS,IAAIv2B,EAAKtD,MAAMmtE,oBAAoBn4C,aAJnH,wBASAx8B,KAAKwH,MAAMwiI,eACbrhI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNC,MAAO,WACPH,KAAM,eAERwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,+BAM8BX,EAAAxI,EAAAC,cAAA,WAN9B,0BAM4DJ,KAAKwH,MAAM2C,YAAYmoB,KAAK7gB,MANxF,QAQA9I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,IACTmH,UAAUjH,KAAKC,MAAMwB,MAAMC,OAAOG,QAEpCpB,YAAc,SAAAqG,GAAC,OAAIgE,EAAKu1E,UAN1B,WAaJ13E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNC,MAAO,WACPH,KAAM,mBAERwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAEXX,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CACEvjB,MAAO,YADT,mCAGmCggF,EAAa30E,QAAQ,GAHxD,IAG6D3N,KAAKwH,MAAMmtE,oBAAoBljE,MAH5F,qEAK+C,qBAApCzR,KAAKwH,MAAM+6E,YAAY+oD,IAC9B3iI,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CACEvjB,MAAO,YAEPqG,EAAAxI,EAAAC,cAAA,WAHF,eAGqBJ,KAAKwH,MAAM+6E,YAAY+oD,GAAS39H,QAAQ,GAH7D,IAGkE3N,KAAKwH,MAAMmtE,oBAAoBljE,YAYnH,cAlwBa5O,6IC6xCd0uI,8MAzyCb/pI,MAAQ,CACNgqI,QAAQ,GACRl0H,WAAY,CACVC,OAAO,KACPC,SAAQ,EACRi0H,YAAY,IAEd9/H,OAAO,SACP+/H,WAAU,EACVC,WAAW,KACXC,WAAW,KACXC,WAAU,EACVC,aAAa,GACb3nI,YAAY,KACZ20B,aAAa,KACb+/C,aAAa,KACbkzD,aAAY,EACZC,aAAa,KACbC,cAAc,KACdC,kBAAkB,GAClBC,kBAAiB,EACjB94F,OAAO,CACL,CACEl3C,KAAK,QACLoB,KAAK,WAEP,CACEpB,KAAK,YACLoB,KAAK,WAEP,CACEpB,KAAK,gBACLoB,KAAK,eAMXR,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,yCAItC0R,GACR3R,KAAKgI,SAAS,CACZ2J,SACAigI,WAAW,KACXD,WAAW,KACXM,cAAc,KACdE,iBAAiB,2JAKnBnyI,KAAKgI,SAAS,CACZsV,WAAY,CACVC,OAAO,KACPC,SAAQ,EACRi0H,YAAY,6PAMhBzxI,KAAKkD,YACLlD,KAAK+hI,qMAGkBp6H,EAAUC,mEACjC5H,KAAKkD,YACLlD,KAAKoyI,eACLpyI,KAAKqyI,cAEoBzqI,EAAUuqI,mBAAqBnyI,KAAKwH,MAAM2qI,kBAAoBnyI,KAAKwH,MAAM2qI,kBAEhGnyI,KAAK+hI,qSAKD53H,EAAcnK,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAY,SAC9D68H,EAAuBtyI,KAAKC,MAAM6kH,UAAUhtF,UAAUw6G,qBACtDv6E,EAAY/3D,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,8BACrCzV,KAAK+C,cAAc+0D,sBAAsB,eAAgB,eAAgB,CAACC,YAAWN,QAAS,yBAAnH86E,SACAC,EAA6BD,EAAahhI,OAAQ,SAAAhQ,GAAC,OAAIA,EAAEymC,aAAayqG,eAAellI,gBAAkB+kI,EAAqBhlI,QAAQC,gBAAgBzH,IAAK,SAAAvE,GAAC,OAAIA,EAAEymC,aAAa0qG,QAG7KR,EAAoB,aACpBlyI,KAAK+C,cAAc2N,aAAa8hI,EAAhC,eAAA7hI,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA4D,SAAAiD,EAAO8mB,GAAP,IAAA9c,EAAAjK,EAAAoN,EAAA0+C,EAAAy9D,EAAAsV,EAAAC,EAAAC,EAAA9vG,EAAA,OAAA/R,EAAA7wB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAC1D0M,EAD0D,cAAApX,OAC7Bk0B,GAD6B5mB,EAAA5C,KAAA,EAE1DlO,EAAKlD,MAAM4nC,aAAa9pB,EAAa8c,EAAgBy3G,EAAqBxqG,KAFhB,cAAA7zB,EAAA5C,KAAA,EAUtD4P,QAAQqD,IAAI,CAElBnhB,EAAKJ,cAAcuuB,oBAAoBvT,EAAa,SACpD5a,EAAKJ,cAAcuuB,oBAAoBvT,EAAa,aACpD5a,EAAKJ,cAAcuuB,oBAAoBvT,EAAa,iBACpD5a,EAAKJ,cAAckuB,gBAAgB9mB,EAAYsH,MAAMopB,GACrD13B,EAAKJ,cAAcuuB,oBAAoBvT,EAAa,uBAhBQ,OAAAjK,EAAAG,EAAAG,KAAA8M,EAAAvhB,OAAA6yB,EAAA,EAAA7yB,CAAAmU,EAAA,GAK9D8rD,EAL8D1+C,EAAA,GAM9Dm8G,EAN8Dn8G,EAAA,GAO9DyxH,EAP8DzxH,EAAA,GAQ9D0xH,EAR8D1xH,EAAA,GAS9D2xH,EAT8D3xH,EAAA,GAmB5D6hB,EAAiB5/B,EAAKJ,cAAc2O,MAAM,GAC1CmhI,IACF9vG,EAAiB8vG,EAAe5tG,OAAQ,SAAC6G,EAAM1b,GAE7C,OADA0b,EAAQA,EAAM55B,KAAKke,IAEnBjtB,EAAKJ,cAAc2O,MAAM,IAE3BqxB,EAAiB5/B,EAAKJ,cAAcmS,iBAAiB6tB,EAAe54B,EAAYxG,WAKlFuuI,EAAkBtkI,KAAK,CACrBgyD,QACAy9D,YACAt/G,eACA40H,gBACA5vG,iBACAlI,kBACA+3G,qBAtC8D,yBAAA3+H,EAAAzB,SAAAuB,EAAA/T,SAA5D,gBAAAyS,GAAA,OAAA9B,EAAA+B,MAAA1S,KAAA2S,YAAA,6BAyCqB3S,KAAK+C,cAAckuB,gBAAgB,OAAOjxB,KAAKC,MAAMqQ,iBAA1EwuB,SAIN9+B,KAAKgI,SAAS,CACZmC,cACA20B,eACAozG,gKAKF,IAAMR,EAAY/xI,OAAO2R,OAAOtR,KAAKwH,MAAMgqI,SAASxtI,OAAO,EACvD0tI,IAAc1xI,KAAKwH,MAAMkqI,WAC3B1xI,KAAKgI,SAAS,CACZ0pI,2DAKethH,GAMnB,MALe,CACbjlB,MAAM,KACN0S,WAAW,UACXw6C,aAAa,CAACjoC,0CAKJ5e,GAAG,IAAA1G,EAAA9K,KAEf,GAAkB,YAAdwR,EAAGI,OAAqB,CAC1B5R,KAAK+hI,gBAEL,IAAM+Q,EAAmBthI,EAAG+hC,WAAa/hC,EAAG+hC,UAAUtc,KAAOzlB,EAAG+hC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAIxmC,QAAQC,gBAAkBzC,EAAKtD,MAAM2C,YAAYmD,QAAQC,gBAAkB,KAC3K,GAAIulI,EAAiB,CACnB,IAAMb,EAAgBjyI,KAAK+C,cAAcmS,iBAAiBnD,SAAS+gI,EAAiBjoI,KAAK,IAAI7K,KAAKwH,MAAM2C,YAAYxG,UACpH3D,KAAKgI,SAAS,CACZiqI,4DAMQzgI,EAAG4e,EAAOhS,GAEN,YAAd5M,EAAGI,QACL5R,KAAK+hI,8DAIax+H,GAAwB,IAAnBwvI,EAAmBpgI,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,GACxCqgI,EAAe,KACnB,OAAQzvI,GACN,IAAK,UACHyvI,EAAe,sBACjB,MACA,IAAK,YACHA,EAAe,+BACjB,MACA,IAAK,SACHA,EAAe,SACjB,MACA,IAAK,OACHA,EAAe,QACjB,MACA,IAAK,UACL,IAAK,QACHA,EAAe,SACjB,MACA,QACEA,EAAe,KAQnB,OAJKD,GAAgBC,IACnBA,EAAe,IAAIh5G,OAAOg5G,IAGrBA,wCAGI,IAAA/1B,EAAAj9G,KAEX,IAAKA,KAAKwH,MAAMwqI,aACd,OAAO,EAGT,IAAM34F,EAASr5C,KAAKwH,MAAM6xC,OACtB04F,EAAcpyI,OAAO2R,OAAOtR,KAAKwH,MAAMwqI,cAAchuI,SAAWq1C,EAAOr1C,OAEvE+tI,GACFpyI,OAAO2R,OAAOtR,KAAKwH,MAAMwqI,cAAc/tI,QAAS,SAAC65G,EAAWm1B,GAC1D,IAAMC,EAAY75F,EAAO45F,GACnBD,EAAe/1B,EAAKk2B,sBAAsBD,EAAU3vI,MACpD6vI,GAAaJ,GAAkD,OAAnCl1B,EAAWvpE,MAAMy+F,GACnDjB,EAAcA,GAAeqB,IAK7BrB,IAAgB/xI,KAAKwH,MAAMuqI,aAC7B/xI,KAAKgI,SAAS,CACZ+pI,oDAKMjrI,EAAEmsI,GACZ,IAAII,EAAcvsI,EAAEmf,OAAO9a,MAC3BnL,KAAKgI,SAAS,CACZqrI,oDAIQvsI,EAAEmsI,GACZ,IAAIn1B,EAAah3G,EAAEmf,OAAO9a,MAE1BnL,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5BoqI,aAAaryI,OAAA+4B,EAAA,EAAA/4B,CAAA,GACRiI,EAAUoqI,aADHryI,OAAA2zI,GAAA,EAAA3zI,CAAA,GAETszI,EAAYn1B,8CAMjB,GAA8B,OAA1B99G,KAAKwH,MAAMoqI,WAAoB,CACjC,IAAIJ,EAAUxxI,KAAKwH,MAAMgqI,QACzB,GAAIA,EAAQxxI,KAAKwH,MAAMoqI,YAAY,QAC1BJ,EAAQxxI,KAAKwH,MAAMoqI,YAC1BJ,EAAU7xI,OAAO2R,OAAOkgI,GAIxBxxI,KAAKgI,SAAS,CACZwpI,UACAI,WALiB,KAMjBI,aALmB,6CAWhB,IAAArsB,EAAA3lH,KA2BT,GAxBeL,OACE2R,OAAOtR,KAAKwH,MAAMwqI,cAAczgI,OAAQ,SAAAtG,GAAC,OAAIA,EAAEjH,OAAO,IACtD8B,IAAK,SAACg4G,EAAWm1B,GAChB,IAAMC,EAAYvtB,EAAKn+G,MAAM6xC,OAAO45F,GACpC,OAAQC,EAAU3vI,MAChB,IAAK,YACHu6G,EAAaA,EAAWpyD,MAAM,KAChC,MACA,IAAK,YACHoyD,EAAaA,EAAWpyD,MAAM,KAAK5lD,IAAK,SAAAiwB,GAAC,OAAI4vF,EAAK5iH,cAAc+yB,KAAKC,KACvE,MACA,IAAK,UACH+nF,EAAa6H,EAAK5iH,cAAc+yB,KAAKgoF,GACvC,MACA,QACoC,OAA9Bo1B,EAAU3vI,KAAK+hB,QAAQ,KACzBw4F,EAAaA,EAAWpyD,MAAM,MAKpC,OAAOoyD,IAGd95G,OAAOhE,KAAKwH,MAAM6xC,OAAOr1C,OAClC,OAAO,EAGT,IAAM2N,EAAS,CACb4hI,QAAQ,KACR14G,gBAAgB,KAChBwe,OAAOr5C,KAAKwH,MAAMwqI,cAIdR,EAAU7xI,OAAO2R,OAAOtR,KAAKwH,MAAMgqI,SAEX,OAA1BxxI,KAAKwH,MAAMoqI,WACbJ,EAAQ5jI,KAAK+D,GAEb6/H,EAAQxxI,KAAKwH,MAAMoqI,YAAcjgI,EAMnC3R,KAAKgI,SAAS,CACZwpI,UACAK,WAdgB,EAehBD,WANiB,KAOjBI,aANmB,6CAUTJ,GAEZ,IAAK5xI,KAAKwH,MAAMgqI,QAAQI,GACtB,OAAO,EAGT,GAAIA,IAAe5xI,KAAKwH,MAAMoqI,WAC5B,OAAO,EAGT,IAGMI,EAHShyI,KAAKwH,MAAMgqI,QAAQI,GAGNv4F,OAE5Br5C,KAAKgI,SAAS,CACZ6pI,WAJgB,EAKhBD,aACAI,uDAIUL,GAEZ,GAAIA,IAAe3xI,KAAKwH,MAAMmqI,WAAW,CACvC,IAAMW,EAAuBtyI,KAAKC,MAAM6kH,UAAUhtF,UAAUw6G,qBACtDkB,EAAmBxzI,KAAKwH,MAAM0qI,kBAAkBP,GAChD9yD,EAAe,CACnB/2C,IAAIwqG,EAAqBxqG,IACzB3lC,KAAKqxI,EAAiBz1H,aACtBzQ,QAAQkmI,EAAiB34G,iBAE3B76B,KAAKgI,SAAS,CACZ2pI,aACA9yD,eACAozD,cAAc,6CAKPJ,GACX,GAAIA,IAAc7xI,KAAKwH,MAAMqqI,UAC3B,OAAO,EAKT7xI,KAAKgI,SAAS,CACZ6pI,YACAD,WAJiB,oFAQF9qI,6FACjBA,EAAEgI,iBAEIwjI,EAAuBtyI,KAAKC,MAAM6kH,UAAUhtF,UAAUw6G,qBACtDmB,EAAczzI,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAY,OAAO,YAErE1N,EAAW,SAACyJ,EAAGiM,EAAMg0H,GACzB,IAAMzuF,EAA4B,YAAdxxC,EAAGI,OACjB4/H,EAAU7xI,OAAO2R,OAAOu0G,EAAKr+G,MAAMgqI,SACnCkC,EAAe3hI,SAAS0/H,KAAe1/H,SAAS8zG,EAAKr+G,MAAMgqI,QAAQxtI,QAAQ,EAC3EmuI,EAAmBnvF,GAAe0wF,EAExC,GAAI1wF,EAAY,CACd,IAAM2wF,EAAsBniI,EAAG+hC,UAAUmS,QAAUl0C,EAAG+hC,UAAUmS,OAAOkuF,aAAepiI,EAAG+hC,UAAUmS,OAAOkuF,aAAa5rG,aAAa,GAAxG,KAAArhC,OAAkH6K,EAAG+hC,UAAUtc,KAAK,GAAGpsB,KAAKya,QAAQ,KAChLksH,EAAQC,GAAa52G,gBAAkB84G,OAGvCnC,EAAQC,GAAa8B,SAAU,EAKjC1tB,EAAK79G,SAAS,CACZwpI,UACAW,oBACA,WACIuB,GACF7tB,EAAK5mG,uBAKLf,EAAkB,SAAC1M,EAAGigI,GAC1B,IAAMl0H,EAAS/L,EAAG2M,gBAEZb,EAAa3d,OAAOC,OAAO,GAAGimH,EAAKr+G,MAAM8V,YAC/CA,EAAWC,OAASA,EACpBD,EAAWm0H,YAAY7jI,KAAK6jI,GAC5B5rB,EAAK79G,SAAS,CACZsV,gBAIJtd,KAAKwH,MAAMgqI,QAAQvtI,QAAQ,SAAC0N,EAAO8/H,GACjC,IAAMoC,EAAeliI,EAAO0nC,OAAO,GAC7By6F,EAAmBniI,EAAO0nC,OAAO,GACjCs5F,EAAgBhhI,EAAO0nC,OAAO,GAE9B06F,EAAWluB,EAAK5lH,MAAM6e,KAAK0C,IAAIsmB,IAAI+6F,iBACvC,CAAC,UAAU,UAAU,UAAU,WAC/B,CAACgR,EAAaJ,EAAYK,EAAiBnB,IAEvCt6E,EAAe,CAACi6E,EAAqBhlI,QAL3B,8CAK2CymI,GAC3DluB,EAAK9iH,cAAc0b,0BAA0B,eAAgB,gBAAiB45C,EAAc,SAAC7mD,EAAGiM,GAAJ,OAAc1V,EAASyJ,EAAGiM,EAAMg0H,IAAc,SAACjgI,GAAD,OAAQ0M,EAAgB1M,EAAGigI,OAGvKzxI,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAU0V,WADL,CAERE,SAAQ,0BAIL,uIAGA,IAAA+oG,EAAAvmH,KAEDg0I,EAAmBh0I,KAAKC,MAAMqQ,QAAUtQ,KAAKwH,MAAM0qI,kBAAkB3gI,OAAQ,SAAAwmB,GAAC,OAAIA,EAAE6nC,MAAMryD,gBAAkBg5G,EAAKtmH,MAAMqQ,QAAQ/C,gBAAkB,GACjJ0mI,EAAiBj0I,KAAKC,MAAMqQ,QAAUtQ,KAAKwH,MAAM0qI,kBAAkB3gI,OAAQ,SAAAwmB,GAAC,OAAIA,EAAEslG,UAAU9vH,gBAAkBg5G,EAAKtmH,MAAMqQ,QAAQ/C,gBAAkB,GAEzJ,OACE5E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,GADN,sBAKA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,SACNR,KAAM,cACNG,UAAW,UACXnB,YAAa,UACbb,SAAiC,WAAtBP,KAAKwH,MAAMmK,OACtBlR,YAAc,SAAAqG,GAAC,OAAIy/G,EAAK0T,UAAU,cAEpCtxH,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,UACNL,UAAW,UACXH,KAAM,gBACNhB,YAAa,UACbb,SAAiC,YAAtBP,KAAKwH,MAAMmK,OACtBlR,YAAc,SAAAqG,GAAC,OAAIy/G,EAAK0T,UAAU,eAEpCtxH,EAAAxI,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,QACNL,UAAW,SACXH,KAAM,cACNhB,YAAa,UACbb,SAAiC,UAAtBP,KAAKwH,MAAMmK,OACtBlR,YAAc,SAAAqG,GAAC,OAAIy/G,EAAK0T,UAAU,eAIxCtxH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE21G,GAAI,EACJz+G,MAAO,EACPgB,GAAI,CAAC,EAAE,GACP6L,YAAa,UACbi7G,aAAc,yBAEdj/G,EAAAxI,EAAAC,cAACwI,EAAA,EAAQuG,GAAT,CACEzM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,GACf4D,MAAO,CACL+8G,cAAc,eAGfpjH,KAAKwH,MAAMmK,SAGhBhJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,UAGS,WAAtBhB,KAAKwH,MAAMmK,OACThJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACP4xI,UAAW1xI,KAAKwH,MAAMkqI,UACtBwC,SAAUl0I,KAAKm0I,aAAaj1H,KAAKlf,OAG/BL,OAAO2R,OAAOtR,KAAKwH,MAAMgqI,SAAS1rI,IAAK,SAAC6L,EAAO8/H,GAC7C,OACE9oI,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHwO,GAAG,EACHzO,MAAM,GAER23G,iBAAkB,CAChB/xG,GAAG,EACH5E,GAAG,EACHG,eAAe,UAEjB02G,WAAY,CACVj1G,SAAS,EACTD,WAAW,GAEbnC,eAAe,EACfuG,IAAG,UAAAF,OAAY8qI,GACfzqH,MAAQu/F,EAAK/+G,MAAMoqI,aAAeH,EAAc,gBAAkB,KAClEhxI,YAAc,SAAAqG,GAAC,OAAoIy/G,EAAK6tB,cAAc3C,KAGpKlrB,EAAK/+G,MAAMoqI,aAAeH,EACxB9oI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdslH,EAAK/+G,MAAM6xC,OAAOvzC,IAAK,SAACspB,EAAM6jH,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQ5/G,SAASrF,EAAM7rB,MAAQ,SAAW,OACjEyvI,EAAezsB,EAAK4sB,sBAAsB/jH,EAAM7rB,MAAK,GAC3D,OACEoF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhB6F,IAAG,SAAAF,OAAWssI,GACdhlI,MAAK,GAAAtH,OAAKyoB,EAAMjtB,KAAX,MAAAwE,OAAoByoB,EAAM7rB,KAA1B,MAELoF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACR93B,MAAO,EACPyD,KAAM8wI,EACNC,QAAStB,EACTrmI,YAAa,aACbjM,gBAAiB,SACjBk9G,YAAW,GAAAj3G,OAAKyoB,EAAMjtB,KAAX,MAAAwE,OAAoByoB,EAAM7rB,KAA1B,KACXqZ,SAAW,SAAA9V,GAAC,OAAIy/G,EAAKguB,YAAYztI,EAAEmsI,IACnC9nI,MAAOo7G,EAAK/+G,MAAMwqI,cAAgBzrB,EAAK/+G,MAAMwqI,aAAaiB,GAAc1sB,EAAK/+G,MAAMwqI,aAAaiB,GAAc,QAMxHtqI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd0Q,EAAOkpB,gBACLlyB,EAAAxI,EAAAC,cAAC0iH,EAAA,EAAD,CACEpgH,SAAU,EACVJ,MAAOikH,EAAKtmH,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UACnD1mB,WAAY4gH,EAAKtmH,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,UACxDlG,KAAMogG,EAAKxjH,cAAcusD,uBAAuB39C,EAAOkpB,kBAJzD,eAMelpB,EAAOkpB,kBAEnB0rF,EAAK/+G,MAAM8V,WAAWE,SACzB7U,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACXvF,GAAG,CAAC,EAAE,GACNwD,KAAK,SACLzD,MAAM,CAAC,EAAE,QACToH,UAAUq/G,EAAK/+G,MAAMuqI,aAEvBtxI,YAAa8lH,EAAKiuB,UAAUt1H,KAAKqnG,IAPnC,iBAWA59G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ/G,MAAO,MACPqD,WAAY,MACZC,QAAS2gH,EAAKkuB,aAAav1H,KAAKqnG,IAJlC,sBAcV59G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACG29G,EAAKxjH,cAAcmF,YAAYyJ,EAAO0nC,OAAO,IADhD,MACwDktE,EAAKxjH,cAAcmF,YAAYyJ,EAAO0nC,OAAO,IADrG,MAC6G1nC,EAAO0nC,OAAO,GAD3H,IACiI1nC,EAAOkpB,gBAAkB,aAAe,IAGvKlpB,EAAOkpB,gBACLlyB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,MACHR,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,OACNjB,MAAO,SACPmB,KAAMkkH,EAAKtmH,MAAM+B,SAAW,QAAU,QACtCM,MAAOikH,EAAKtmH,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,aAGrDk6F,EAAK/+G,MAAM8V,WAAWE,SAAW+oG,EAAK/+G,MAAM8V,WAAWm0H,aAAelrB,EAAK/+G,MAAM8V,WAAWm0H,YAAYh9G,SAAS1iB,SAAS0/H,IAC5H9oI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAK,SACXsP,EAAO4hI,QACT5qI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,MACHR,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,MACPH,KAAM,QACNjB,MAAO,SACPmB,KAAOkkH,EAAKtmH,MAAM+B,SAAW,QAAU,WAI3C2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,CAAC,MAAM,OACVC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAkB6lH,EAAKtmH,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAEhE8G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,OACNjB,MAAO,SACPoB,MAAO,SACPD,KAAOkkH,EAAKtmH,MAAM+B,SAAW,QAAU,gBAazDhC,KAAKwH,MAAM2qI,mBAAqBnyI,KAAKwH,MAAM8V,WAAWE,WAAaxd,KAAKwH,MAAMgqI,SAAW7xI,OAAO2R,OAAOtR,KAAKwH,MAAMgqI,SAASxtI,OAAOhE,KAAKwH,MAAMsqI,eAC7InpI,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHwO,GAAG,EACHzO,MAAM,GAER23G,iBAAkB,CAChB/xG,GAAG,EACH5E,GAAG,EACHG,eAAe,UAEjB02G,WAAY,CACVj1G,SAAS,EACTD,WAAW,GAEbnC,eAAe,EACfG,YAAc,SAAAqG,GAAC,OAAIy/G,EAAKmuB,cAAa,IACrC1tH,MAAQhnB,KAAKwH,MAAMqqI,UAAY,eAAiB,MAG9C7xI,KAAKwH,MAAMqqI,UACTlpI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAM6xC,OAAOvzC,IAAK,SAACspB,EAAM6jH,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQ5/G,SAASrF,EAAM7rB,MAAQ,SAAW,OACjEyvI,EAAezsB,EAAK4sB,sBAAsB/jH,EAAM7rB,MAAK,GAC3D,OACEoF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhB6F,IAAG,SAAAF,OAAWssI,GACdhlI,MAAK,GAAAtH,OAAKyoB,EAAMjtB,KAAX,MAAAwE,OAAoByoB,EAAM7rB,KAA1B,MAELoF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACR93B,MAAO,EACPyD,KAAM8wI,EACNC,QAAStB,EACTrmI,YAAa,aACbjM,gBAAiB,SACjBk9G,YAAW,GAAAj3G,OAAKyoB,EAAMjtB,KAAX,MAAAwE,OAAoByoB,EAAM7rB,KAA1B,KACXqZ,SAAW,SAAA9V,GAAC,OAAIy/G,EAAKguB,YAAYztI,EAAEmsI,IACnC9nI,MAAOo7G,EAAK/+G,MAAMwqI,cAAgBzrB,EAAK/+G,MAAMwqI,aAAaiB,GAAc1sB,EAAK/+G,MAAMwqI,aAAaiB,GAAc,QAMxHtqI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACXvF,GAAG,CAAC,EAAE,GACNwD,KAAK,SACLzD,MAAM,CAAC,EAAE,QACToH,UAAUlH,KAAKwH,MAAMuqI,aAEvBtxI,YAAaT,KAAKw0I,UAAUt1H,KAAKlf,OAPnC,kBAcJ2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,qBAGAD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,CAAC,MAAM,OACVC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAkBV,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAEhE8G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,MACNjB,MAAO,SACPoB,MAAO,SACPD,KAAOrC,KAAKC,MAAM+B,SAAW,QAAU,aASvD2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGdjB,KAAKwH,MAAM2qI,iBACTxpI,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHD,MAAM,CAAC,EAAE,UAGX6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,UACNjB,MAAO,SACPmB,KAAOrC,KAAKC,MAAM+B,SAAW,QAAU,QACvCM,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,YAErD1jB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ5G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPgH,UAAW,UALb,8CAWFtJ,KAAKwH,MAAM8V,YAActd,KAAKwH,MAAM8V,WAAWE,QACjD7U,EAAAxI,EAAAC,cAAC+f,EAAA,EAADxgB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4H,KAAM7H,KAAKwH,MAAM8V,WAAWC,OAC5B6B,SAAQ,0BACRD,WAAU,mCACVF,kBAAmBjf,KAAKif,kBAAkBC,KAAKlf,SAGjD2I,EAAAxI,EAAAC,cAAC8iH,EAAA,EAAD,CACE59G,YAAa,CACX/B,KAAK,SACLzD,MAAM,CAAC,EAAE,QACToH,UAAUlH,KAAKwH,MAAMkqI,YAJzB,sBAagB,YAAtB1xI,KAAKwH,MAAMmK,OACbqiI,EAAiBhwI,OAAO,EACtBgwI,EAAiBluI,IAAK,SAAC+4E,EAAa4yD,GAClC,OACE9oI,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHwO,GAAG,EACHzO,MAAM,GAER23G,iBAAkB,CAChB/xG,GAAG,EACH5E,GAAG,EACHG,eAAe,UAEjB02G,WAAY,CACVj1G,SAAS,EACTD,WAAW,GAEbnC,eAAe,EACfuG,IAAG,UAAAF,OAAY8qI,GACfhxI,YAAc,SAAAqG,GAAC,OAAIy/G,EAAKouB,cAAclD,IACtCzqH,MAAQu/F,EAAK/+G,MAAMmqI,aAAeF,EAAc,gBAAkB,MAGhElrB,EAAK/+G,MAAMmqI,aAAeF,EACxB9oI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBiN,MAAK,oBAELtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACRg9G,UAAQ,EACR90I,MAAO,EACPyD,KAAM,UACNoJ,YAAa,aACbjM,gBAAiB,SACjByK,MAAO0zE,EAAahkD,mBAItB0rF,EAAK/+G,MAAM6xC,OAAOvzC,IAAK,SAACspB,EAAM6jH,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQ5/G,SAASrF,EAAM7rB,MAAQ,SAAW,OACvE,OACEoF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhB6F,IAAG,SAAAF,OAAWssI,GACdhlI,MAAK,GAAAtH,OAAKyoB,EAAMjtB,KAAX,MAAAwE,OAAoByoB,EAAM7rB,KAA1B,MAELoF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACRg9G,UAAQ,EACR90I,MAAO,EACPyD,KAAM8wI,EACN1nI,YAAa,aACbjM,gBAAiB,SACjByK,MAAO0zE,EAAazvD,EAAMjtB,WAMpCwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBiN,MAAK,mBAELtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACRg9G,UAAQ,EACR90I,MAAO,EACPyD,KAAM,UACNoJ,YAAa,aACbjM,gBAAiB,SACjByK,MAAO0zE,EAAa97C,eAAep1B,QAAQ,MAG/ChF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBiN,MAAK,qBAELtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACRg9G,UAAQ,EACR90I,MAAO,EACPyD,KAAM,UACNoJ,YAAa,aACbjM,gBAAiB,SACjByK,MAAO0zE,EAAa+zD,iBAAiBjlI,QAAQ,MAGjDhF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB8qH,UAAW,yBAEXpjH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACsnH,EAAD/nH,OAAAC,OAAA,GACM2mH,EAAKtmH,MADX,CAEE0R,OAAQ40G,EAAK/+G,MAAMmK,OACnBxH,YAAao8G,EAAK/+G,MAAM2C,YACxB20B,aAAcynF,EAAK/+G,MAAMs3B,aACzB+/C,aAAc0nC,EAAK/+G,MAAMq3E,aACzB92E,SAAUw+G,EAAKsuB,gBAAgB31H,KAAKqnG,GACpCloG,qBAAsBkoG,EAAKloG,qBAAqBa,KAAKqnG,GACrDtD,mBAAoB,iDAEpBt6G,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACT6B,EAAE,IAGJoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZC,cAAe,UAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,QACNF,KAAM,WACNG,MAAO,aAETqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAJb,kDAeZX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACG29G,EAAKxjH,cAAcmF,YAAY22E,EAAajf,OAD/C,MAC0D2mD,EAAKxjH,cAAcmF,YAAY22E,EAAaw+C,WADtG,MACqHx+C,EAAa8zD,eAElIhqI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,CAAC,MAAM,OACVC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAkB6lH,EAAKtmH,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAEhE8G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,SACNjB,MAAO,SACPoB,MAAO,SACPD,KAAOkkH,EAAKtmH,MAAM+B,SAAW,QAAU,eAUvD2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEU,UAAW,UADb,0CAMoB,UAAtBtJ,KAAKwH,MAAMmK,QACXsiI,EAAejwI,OAAO,EACpBiwI,EAAenuI,IAAK,SAAC+4E,EAAa4yD,GAChC,OACE9oI,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHwO,GAAG,EACHzO,MAAM,GAER23G,iBAAkB,CAChB/xG,GAAG,EACH5E,GAAG,EACHG,eAAe,UAEjB02G,WAAY,CACVj1G,SAAS,EACTD,WAAW,GAEbnC,eAAe,EACfuG,IAAG,UAAAF,OAAY8qI,GACfhxI,YAAc,SAAAqG,GAAC,OAAIy/G,EAAKouB,cAAclD,IACtCzqH,MAAQu/F,EAAK/+G,MAAMmqI,aAAeF,EAAc,gBAAkB,MAGhElrB,EAAK/+G,MAAMmqI,aAAeF,EACxB9oI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBiN,MAAK,oBAELtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACRg9G,UAAQ,EACR90I,MAAO,EACPyD,KAAM,UACNoJ,YAAa,aACbjM,gBAAiB,SACjByK,MAAO0zE,EAAahkD,mBAItB0rF,EAAK/+G,MAAM6xC,OAAOvzC,IAAK,SAACspB,EAAM6jH,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQ5/G,SAASrF,EAAM7rB,MAAQ,SAAW,OACvE,OACEoF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhB6F,IAAG,SAAAF,OAAWssI,GACdhlI,MAAK,GAAAtH,OAAKyoB,EAAMjtB,KAAX,MAAAwE,OAAoByoB,EAAM7rB,KAA1B,MAELoF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACRg9G,UAAQ,EACR90I,MAAO,EACPyD,KAAM8wI,EACN1nI,YAAa,aACbjM,gBAAiB,SACjByK,MAAO0zE,EAAazvD,EAAMjtB,WAMpCwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBiN,MAAK,mBAELtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACRg9G,UAAQ,EACR90I,MAAO,EACPyD,KAAM,UACNoJ,YAAa,aACbjM,gBAAiB,SACjByK,MAAO0zE,EAAa97C,eAAep1B,QAAQ,MAG/ChF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBiN,MAAK,qBAELtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACRg9G,UAAQ,EACR90I,MAAO,EACPyD,KAAM,UACNoJ,YAAa,aACbjM,gBAAiB,SACjByK,MAAO0zE,EAAa+zD,iBAAiBjlI,QAAQ,MAGjDhF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB8qH,UAAW,yBAEXpjH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdslH,EAAK/+G,MAAMyqI,eACTtpI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAOikH,EAAKtmH,MAAMwB,MAAMC,OAAOC,aAAaiQ,OAAOya,WAJrD,iCAMiCk6F,EAAK/+G,MAAMyqI,cAActkI,QAAQ,GANlE,IAMuE44G,EAAK/+G,MAAM2C,YAAYsH,OAKhGotE,EAAa+zD,kBAAoB/zD,EAAa+zD,iBAAiBt9H,GAAG,MAChE3M,EAAAxI,EAAAC,cAACgd,EAAA,EAADzd,OAAAC,OAAA,CACEwe,OAAQ,IACJmoG,EAAKtmH,MAFX,CAGE4C,UAAW2kH,IACXloG,eAAgB,CACdjd,KAAK,SACL8I,MAAM,QACNlE,UAAU,UAEZ4W,WAAY,QACZlM,OAAQ40G,EAAK/+G,MAAMmK,OACnB5J,SAAUw+G,EAAK0I,cAAc/vG,KAAKqnG,GAClCxoG,aAAc8gE,EAAa9gE,gBAG7BpV,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,4BAcVqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACG29G,EAAKxjH,cAAcmF,YAAY22E,EAAajf,OAD/C,MAC0D2mD,EAAKxjH,cAAcmF,YAAY22E,EAAaw+C,WADtG,MACqHx+C,EAAa8zD,eAElIhqI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,CAAC,MAAM,OACVC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAkB6lH,EAAKtmH,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAEhE8G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,SACNjB,MAAO,SACPoB,MAAO,SACPD,KAAOkkH,EAAKtmH,MAAM+B,SAAW,QAAU,eAUvD2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEU,UAAW,UADb,oDA7xCazG,gLCwEzByhC,GAAMwwG,8/CAENjnI,GAAgB,CACpBknI,QAAS,OACT30E,QAAS,OACT5jC,UAAW,MACXyvB,QAAS,uBACT+oF,SAAU,2BACVC,YAAa,2BACbC,WAAY,6BACZC,WAAY,kCACZC,MAAO,CACLx4G,IAAI,IACJy4G,UAAS,GAEX5zI,MAAO,CACL6zI,iBAAiB,GAEnBnpF,aAAc,CACZopF,KAAM,CACJnzG,gBAAiB,EACjBvI,IAAK,wBAEP27G,KAAM,CACJpzG,gBAAiB,EACjBvI,IAAK,6BAEP47G,QAAS,CACPrzG,gBAAiB,IACjBvI,IAAK,iCAGT4yB,QAAS,4BACT8vD,UAAW,CACTm5B,IAAK,2BACLC,IAAK,iBACLC,IAAK,YACLC,IAAK,SACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SACLC,IAAK,YACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SACLC,IAAK,eACLC,IAAK,eAEPr/G,KAAM,CAEJO,eAAe,EACfN,iBAAiB,GAEnBq/G,WAAY,CAEVC,SAAU,CACRnkH,SAAS,EACT2+G,WAAY,qBAEdyF,MAAO,CACLpkH,SAAS,EACT2+G,WAAY,yBAEd0F,OAAQ,CACNrkH,SAAS,EACTjwB,KAAM,aACN4uI,WAAY,qBAEd2F,SAAU,CACRtkH,SAAS,EACTjwB,KAAM,eACN4uI,WAAY,gCAEd4F,YAAa,CACXvkH,SAAS,EACT2+G,WAAY,6BAEd6F,cAAe,CACbxkH,SAAS,EACTykH,UAAW,oBACX9F,WAAY,wBAEd+F,WAAY,CACV1kH,SAAS,EACTjwB,KAAM,eACND,KAAM,kBACN6uI,WAAY,wBAEdgG,OAAQ,CACN3kH,SAAS,EAETlwB,KAAM,kBACN6uI,WAAY,gCAEdiG,UAAW,CACT5kH,SAAS,EACT2+G,WAAY,2BAEdkG,OAAQ,CACN7kH,SAAS,EACT2+G,WAAY,qBAEdmG,UAAW,CACT9kH,SAAS,EACT2+G,WAAY,uBAEdoG,MAAO,CACL/kH,SAAS,EACTjwB,KAAM,YACN4uI,WAAY,+BAEdqG,OAAQ,CACNhlH,SAAS,EACT2+G,WAAY,mBAEdsG,OAAQ,CACNjlH,SAAS,EACT2+G,WAAY,mBAEduG,WAAY,CACVllH,SAAS,EACT2+G,WAAY,uBAEdwG,OAAQ,CACNnlH,SAAS,EACT2+G,WAAY,mBAGhByG,uBAAwB,CACtBt/F,SAAU,iDAEZinE,SAAU,CACRs4B,WAAY,sBACZC,SAAU,0BACVC,gBAAiB,oDACjBtlI,WAAY,2DACZulI,YAAa,2DACbC,SAAS,0EACTC,WAAY,kFACZC,mBAAoB,8EACpBptG,kBAAmB,mFACnBqtG,WAAY,4FACZ1xG,YAAY,oGACZ2xG,eAAgB,qGAChBrf,sBAAuB,iHACvBsf,YAAa,iIACbp6G,eAAgB,8HAChBq6G,YAAa,kIACbC,0BAA2B,6IAC3BC,eAAgB,8JAChBC,cAAe,wLACfC,8BAA+B,qNAC/BC,mCAAkC,oRAClC5P,QAAS,8TACT6P,UAAS,0aACTC,kBAAiB,2bACjB7P,aAAc,ucACd8P,kCAAiC,yfAEnCnrF,UAAW,CACTC,OAAQ,CACNhI,OAAQ,CACNrzB,SAAS,EACTg7B,cAAc,EACdM,sBAAsB,GAExBkrF,SAAU,CACRxmH,SAAS,KAIfymH,OAAQ,CAENC,wBAAwB,EACxBC,qBAAqB,EACrBpuH,QAAS,CACPyH,SAAS,EACTu7B,kBAAmB,CAAC,IAEtBqrF,QAAS,CAEP5mH,SAAS,EACTy/B,UAAW,SAGfonF,UAAW,CACTC,UAAW,aACX13I,MAAO,CACLwgG,KAAM,QACNqzC,iBAAiB,IAGrB8D,WAAY,CACVC,MAAM,EACNhnH,SAAS,EACT+kC,WAAY,SACZxJ,kBAAmB,CAAC,GACpBurF,UAAW,cACXl5I,MAAO,CACL4wB,UAAW,OACXyoH,mBAAoB,CAClBtnE,OACAunE,eACAC,eACAC,iBACAC,iBACAC,iBACAC,oBAGJ1pF,UAAW,CACT2pF,GAAI,CACFjiC,YAAW,+gBAEbkiC,GAAI,CACFliC,YAAa,mSAEfmiC,EAAG,CACDniC,YAAW,+mBAUf9/E,UAAW,CACTkiH,UAAW,OACXZ,WAAY,CACVa,GAAG,CACD93I,KAAK,gBACLs1D,QAAQ,YAEVyiF,GAAG,CACD/3I,KAAK,gBACLs1D,QAAQ,aAKhB9+C,MAAO,CACL0Z,SAAS,EACTjU,OAAQ,CACN62E,QAAS,EACThnF,MAAO,QACPiwE,MAAO,mBACP/8E,MAAO,6BACPg5I,cAAe,kCAEjBx6C,MAAO,CACL95F,KAAM,CAAC,MAAO,MAAO,QACrBsyC,SAAU,8CAEZiiG,aAAc,CACZz2I,SAAU,GACVmkC,IAAKuyG,GACLl4I,KAAM,4BACNsP,MAAO,4BACPnE,QAAS,8CAEXuqF,gBAAiB,CACf/vD,IAAKwyG,GACLn4I,KAAM,mBACNmL,QAAS,8CAEXitI,cAAe,CACbzyG,IAAK0yG,GACLr4I,KAAM,mBACNmL,QAAS,8CAEXmtI,YAAa,CACX3yG,IAAK4yG,GACLv4I,KAAM,eACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKwyG,GACLn4I,KAAM,mBACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,mBAIZiO,gBAAiB,CACfuqI,aAAc,CACZh3I,SAAU,GACV0uB,SAAS,EACTmK,UAAW,MACX/qB,MAAO,eACPnE,QAAS,6CACTmoF,gBAAiB,CACfR,QAAS,EACTK,UAAW,IAGfslD,cAAe,CACbj3I,SAAU,GACV0uB,SAAS,EACTmK,UAAW,OACX/qB,MAAO,gBACPnE,QAAS,6CACTmoF,gBAAiB,CACfR,QAAS,EACTK,UAAW,IAGfulD,cAAe,CACbl3I,SAAU,GACV0uB,SAAS,EACTmK,UAAW,OACX/qB,MAAO,gBACPnE,QAAS,6CACTmoF,gBAAiB,CACfR,QAAS,EACTK,UAAW,MAKnBt1B,OAAQ,CACNi/C,IAAK,CACH7+C,QAAS,EACT2B,WAAY,KACZO,YAAa,SACbngE,KAAM,iBACNoB,KAAM,CACJ,CAAEpB,KAAM,SAAUoB,KAAM,WACxB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,SAAUoB,KAAM,WACxB,CAAEpB,KAAM,UAAWoB,KAAM,UAG7Bu3I,KAAM,CACJ16E,QAAS,EACTj+D,KAAM,WACN4/D,WAAY,KACZO,YAAa,SACb/+D,KAAM,CACJ,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,WAAYoB,KAAM,aAG9Bw3I,IAAK,CACH36E,QAAS,EACT2B,WAAY,KACZO,YAAa,SACbngE,KAAM,qBACNoB,KAAM,CACJ,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,WAAYoB,KAAM,cAIhCiuE,UAAW,CACTQ,KAAM,CACJlqC,IAAKkqC,EACLruE,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACTm5E,SAAS,EACTwvC,SAAS,EACT/8G,SAAU,OACVg9G,WAAW,EACXl7H,aAAa,EACb6kF,gBAAgB,EAChBptB,iBAAkB,QAClB5pB,kBAAmB,CAAC,EAAG,KACvB/4B,sBAAuB,MACvBvyB,MAAO,sBACPF,KAAM,yBACNgkF,UAAW,CACTs5C,EAAG,6CACHwb,IAAK,8CAEP5tI,QAAS,6CACTsrF,eAAgB,CACd8mC,EAAG,CAAC,cAAe,eAAgB,gBACnCwb,IAAK,CAAC,eAAgB,gBAAiB,mBAG3CC,KAAM,CACJrzG,IAAKqzG,GACLx3I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACTm5E,SAAS,EACTwvC,SAAS,EACTC,WAAW,EACXl7H,aAAa,EACb64E,eAAgB,GAChB36D,SAAU,WACV2mE,gBAAgB,EAChBh3C,kBAAmB,CAAC,GACpB4pB,iBAAkB,QAClB3iD,sBAAuB,MACvBvyB,MAAO,sBACPgL,QAAS,8CAGX8tI,IAAK,CACHtzG,IAAK47C,GACLjyE,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACTm5E,SAAS,EACTwvC,SAAS,EACTC,WAAW,EACXh9G,SAAU,OACVle,aAAa,EACb64E,eAAgB,GAChBgM,gBAAgB,EAChBh3C,kBAAmB,CAAC,GACpBtrD,MAAO,mBACPk1E,iBAAkB,QAClB3iD,sBAAuB,MACvBvnB,QAAS,8CAGX+tI,QAAS,CACPvzG,IAAKwzG,GACL33I,SAAU,GACV6nG,SAAS,EACTwvC,SAAS,EACT3oH,SAAS,EACT4oH,WAAW,EACXxpI,MAAO,UACPsO,aAAa,EACbke,SAAU,SACV2mE,gBAAgB,EAChBh3C,kBAAmB,CAAC,GACpB4pB,iBAAkB,SAClBl1E,MAAO,qBACPuyB,sBAAuB,MACvBvnB,QAAS,6CACTmjF,gBAAiB,6CACjBmI,eAAgB,CACd8mC,EAAG,CAAC,gBAAiB,gBAAiB,kBAG1C6b,OAAQ,CACNzzG,IAAK47C,GACL//E,SAAU,GACV6nG,SAAS,EACTwvC,SAAS,EACT3oH,SAAS,EACT5gB,MAAO,SACPwpI,WAAW,EACXl7H,aAAa,EACbke,SAAU,SACV26D,eAAgB,GAChBgM,gBAAgB,EAChBptB,iBAAkB,SAClBl1E,MAAO,qBACPuyB,sBAAuB,MACvB+4B,kBAAmB,CAAC,IAAK,OAEzBtgD,QAAS,6CACTmjF,gBAAiB,+CAGrB34D,UAAW,CACTojH,IAAK,CACHM,qBAAsB,CACpB1zG,IAAK0zG,GACLluI,QAAS,8CAEXmuI,kBAAmB,CACjB3zG,IAAK2zG,GAELnuI,QAAS,8CAEXouI,cAAe,CACb/jH,UAAW,EACXmQ,IAAK6zG,GACLruI,QAAS,8CAEXsuI,gBAAiB,CACf9zG,IAAK+zG,GACLvuI,QAAS,+CAGboyH,EAAG,CACD6N,eAAgB,CACdzlG,IAAKylG,GACLjgI,QAAS,8CAEXwuI,iBAAkB,CAChBh0G,IAAKg0G,GAELxuI,QAAS,8CAEXyuI,aAAc,CACZj0G,IAAKk0G,GACL1uI,QAAS,8CAEX2uI,WAAY,CACVn0G,IAAKm0G,GACL3uI,QAAS,8CAEXisI,YAAa,CACXzxG,IAAKyxG,GACLjsI,QAAS,8CAEXksI,YAAa,CACX1xG,IAAK0xG,GACLlsI,QAAS,8CAGX4uI,SAAU,CACRp0G,IAAKo0G,GACL5uI,QAAS,8CAGXqsI,cAAe,CACb7xG,IAAK6xG,GACLrsI,QAAS,8CAGX6uI,cAAe,CACbr0G,IAAKq0G,GACL7uI,QAAS,8CAGXssI,eAAgB,CACd9xG,IAAK8xG,GACLtsI,QAAS,8CAGX8uI,aAAc,CACZt0G,IAAKs0G,GACL9uI,QAAS,8CAGXmsI,cAAe,CACb3xG,IAAK2xG,GACLnsI,QAAS,8CAGXosI,cAAe,CACb5xG,IAAK4xG,GACLpsI,QAAS,8CAEX+uI,YAAa,CACXv0G,IAAKu0G,GACL/uI,QAAS,8CAGXsuI,gBAAiB,CACf9zG,IAAK+zG,GACLvuI,QAAS,8CAEXouI,cAAe,CACb5zG,IAAK6zG,GACLruI,QAAS,8CAEXgvI,sBAAuB,CACrBx0G,IAAKw0G,GACLhvI,QAAS,8CAEXivI,gBAAgB,CACdz0G,IAAIy0G,GACJjvI,QAAQ,8CAEVkvI,iBAAiB,CACf10G,IAAI00G,GACJlvI,QAAQ,8CAEVmvI,sBAAsB,CACpB30G,IAAI20G,GACJnvI,QAAQ,gDAId2vE,OAAQ,CACNgiC,IAAK,CACHy9B,cAAe,CACbC,YAAa,0BACbzjD,UACE,6EACF0jD,cAAe,CACbC,aAAc,6CACdxzC,cAAe,SAIrByxC,KAAM,CACJ4B,cAAe,CACbC,YAAa,0BACbzjD,UACE,6EACF0jD,cAAe,CACbC,aAAc,6CACdxzC,cAAe,UAKvByzC,YAAa,CACX36I,KAAM,2BACN4uH,SAAU,uBACVtS,KAAM,mLACN0S,OAAQ,wBACRE,WACE,6EACFD,WACE,oFACFF,WAAY,yBACZ1I,UAAW,CACT,CACE/J,KAAM,gBACNwS,IAAK,6hBAEP,CACExS,KAAM,uCACNwS,IAAK,0dAIXxzF,SAAU,CACRiuC,GAAI,CACFppE,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,IAAK,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtBxK,KAAM,KACN26E,MAAO,SACP97E,KAAM,WACNjB,MAAO,2BACP67I,OAAQ,0BACRzsB,SAAU,SACVpuH,KAAM,iBACNuuH,SAAU,CACR,mCACA,0BACA,8BACA,+BACA,iCAEF9Y,YAAa,CACX1rF,SAAU,4DACVmzF,MAAO,0EACPC,QAAS,4EACT0K,YAAa,2FACbC,aAAc,qGACdwG,KAAM,uIACN9lG,QAAS,4IACT0e,IAAI,4NAGRsoC,GAAI,CACFrvE,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,IAChBhvI,IAAK,CAAC,KAAM,MAAO,QAErBxK,KAAM,KACN26E,MAAO,SACP97E,KAAM,aACNjB,MAAO,2BACP67I,OAAQ,0BACRzsB,SAAU,SACVpuH,KAAM,iBACNuuH,SAAU,CACR,6CACA,qDACA,8BACA,gCAEF9Y,YAAa,CACX1rF,SAAU,4DACVmzF,MAAO,0EACPC,QAAS,4EACT0K,YAAa,2FACbC,aAAc,qGACdwG,KAAM,iIACN9lG,QAAS,+IACT0e,IAAI,6NAIV4zG,WAAY,CACVC,KAAM,CACJ96I,KAAM,6BACN+6I,SAAU,kCACVC,aAAc,8BACdC,iBAAkB,oCAEpBC,OAAQ,CACNl7I,KAAM,+BACN+6I,SAAU,oCACVC,aAAc,gCACdC,iBAAkB,sCAEpB5/G,SAAU,CACRr7B,KAAM,iCACN+6I,SAAU,sCACVC,aAAc,qCACdC,iBAAkB,2CAEpBE,KAAM,CACJn7I,KAAM,6BACN+6I,SAAU,kCACVC,aAAc,8BACdC,iBAAkB,oCAEpBvvI,MAAO,CACL1L,KAAM,8BACN+6I,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBG,MAAO,CACLp7I,KAAM,8BACN+6I,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBI,MAAO,CACLr7I,KAAM,8BACN+6I,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBh+B,MAAO,CACLj9G,KAAM,8BACN+6I,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBK,YAAa,CACXt7I,KAAM,oCACN+6I,SAAU,yCACVC,aAAc,qCACdC,iBAAkB,2CACjBM,SAAU,CACXv7I,KAAM,iCACN+6I,SAAU,sCACVC,aAAc,kCACdC,iBAAkB,wCACjBntF,UAAW,CACZ9tD,KAAM,kCACN+6I,SAAU,uCACVC,aAAc,mCACdC,iBAAkB,yCACjBO,SAAU,CACXx7I,KAAM,iCACN+6I,SAAU,sCACVC,aAAc,kCACdC,iBAAkB,yCAGtBQ,kBAAmB,CACjBpgH,SAAU,CACR9F,UAAW,EACXghF,SAAS,EACTlnG,MAAO,QACPlO,KAAM,UACNu6I,YAAa,GACb7/G,SAAU,OACV37B,MAAO,UACPy7I,YAAY,EACZnxE,cAAc,EACdoxE,aAAc,KACd38G,SAAU,WACV8mF,UAAWuL,GACXjuH,SAAU,WACVmoD,kBAAmB,CAAC,GACpBqwF,kBAAkB,EAClBj3H,MAAO,qBACPk3H,WAAY,kBACZ97I,KAAM,oCACNg7I,aAAc,qCACdC,iBAAkB,uCAClB5+B,KAAM,sEACN0/B,UAAW,mKACXC,SAAU,oLAEZlB,KAAM,CACJvlH,UAAW,EACXlmB,MAAO,MACPknG,SAAS,EACTt3E,SAAU,OACVy8G,YAAa,GACbx7I,MAAO,UACPiB,KAAM,WACNw6I,YAAY,EACZnxE,cAAc,EACdoxE,aAAc,KACdh3H,MAAO,aACPvhB,SAAU,WACVmoD,kBAAmB,GACnBqwF,kBAAkB,EAClB91B,UAAWkgB,GACX6V,WAAY,kBACZ97I,KAAM,gCACNg7I,aAAc,iCACdC,iBAAkB,mCAClB5+B,KAAM,8CACN2/B,SAAU,4lBACVD,UAAW,0JAEb1I,QAAS,CACPhkI,MAAO,MACPknG,SAAS,EACThhF,UAAW,IACXmmH,YAAa,GACbz8G,SAAU,OACV/+B,MAAO,UACPiB,KAAM,WACNw6I,YAAY,EACZnxE,cAAc,EACdoxE,aAAc,KACdh3H,MAAO,aACPvhB,SAAU,WACVmoD,kBAAmB,GACnBqwF,kBAAkB,EAClB91B,UAAWkgB,GACX6V,WAAY,kBACZ97I,KAAM,gCACNg7I,aAAc,gCACdC,iBAAkB,gCAClB5+B,KAAM,yDACN2/B,SAAU,4lBACVD,UAAW,2JAGfrtF,WAAY,CACVrzB,SAAU,CACRhsB,MAAO,MACPknG,SAAS,EACTp1G,KAAM,UACNu6I,YAAa,GACb7/G,SAAU,OACV37B,MAAO,UACPy7I,YAAY,EACZ/2H,MAAO,WACP4lD,cAAc,EACdoxE,aAAc,KACd71B,UAAWuL,GACXjuH,SAAU,WACVmoD,kBAAmB,CAAC,GACpBqwF,kBAAkB,EAClBC,WAAY,kBACZ97I,KAAM,oCACNg7I,aAAc,qCACdC,iBAAkB,uCAClB5+B,KAAM,sEACN0/B,UAAW,mKACXC,SAAU,oLAEZlB,KAAM,CACJzrI,MAAO,MACPknG,SAAS,EACTmlC,YAAa,GACbx7I,MAAO,UACPiB,KAAM,WACNw6I,YAAY,EACZnxE,cAAc,EACdoxE,aAAc,KACdh3H,MAAO,aACPvhB,SAAU,WACVw4I,kBAAkB,EAClB91B,UAAWkgB,GACXz6E,kBAAmB,CAAC,EAAG,KACvBswF,WAAY,kBACZ97I,KAAM,gCACNg7I,aAAc,iCACdC,iBAAkB,mCAClB5+B,KAAM,8CACN2/B,SAAU,4lBACVD,UAAW,0JAEbZ,KAAM,CACJ9rI,MAAO,MACPknG,SAAS,EACTmlC,YAAa,GACbx7I,MAAO,UACPiB,KAAM,WACNw6I,YAAY,EACZC,aAAc,KACdpxE,cAAc,EACdnnE,SAAU,WACVmoD,kBAAmB,CAAC,GACpB5mC,MAAO,gBACPi3H,kBAAkB,EAClB91B,UAAWkgB,GACX6V,WAAY,mBACZ97I,KAAM,gCACNg7I,aAAc,iCACdC,iBAAkB,mCAClB5+B,KAAM,oDACN2/B,SAAU,6aACVD,UAAW,yGAmBfrwI,MAAO,CACLukB,SAAS,EACTu7B,kBAAmB,CAAC,EAAG,KACvB+xC,MAAO,CACL/iE,IAAK,IACLub,SAAU,CACRunF,EAAG,kCACHwb,IAAK,4CAGThtC,KAAM,CACJtxE,IAAK,IACLub,SAAU,CACRunF,EAAG,iCACHwb,IAAK,2CAGT1pF,KAAM,CACJ50B,IAAK,IACLub,SAAU,CACRunF,EAAG,iCACHwb,IAAK,2CAGTmD,SAAU,CACRzhH,IAAK,KACLub,SAAU,CACRunF,EAAG,qCACHwb,IAAK,+CAGT9lC,OAAQ,CACNx4E,IAAK,IACLub,SAAU,CACRunF,EAAG,qCAGPh2E,OAAQ,CACN40F,QAAQ,KACRnjF,QAAS72B,GAAIi6G,mBAAqB,CAAEC,cAAa,UAAA73I,OAAY29B,GAAIi6G,qBAAyB,IAE5FE,SAAU,CAYRC,GAAI,CACFzwI,MAAO,UACP0wI,oBAAqB,GACrBv3F,aAAc,WACdD,eAAgB,WAChBy3F,wBAAwB,EACxBC,iBAAkB,CAChBtB,KAAM,CACJn2F,aAAc,aAGlB03F,kBAAmB,CAAC,OAAQ,QAC5B/uI,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,SAEzDgvI,GAAI,CACF9wI,MAAO,UACPm5C,aAAc,KACdD,eAAgB,WAChB23F,kBAAmB,CAAC,OAAQ,QAC5BF,wBAAwB,EACxBC,iBAAkB,CAChBtB,KAAM,CACJp2F,eAAgB,aAGpBp3C,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAC9E4uI,oBAAqB,CACnB,CACEh7I,SAAU,GACVs6B,SAAU,WACV97B,KAAM,mBACN4N,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAEjE,CACEpM,SAAU,GACVs6B,SAAU,SACV97B,KAAM,oBACN4N,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,WAK/EktE,OAAQ,CACNgiC,IAAK,CACHxtG,MAAM,MACN9N,SAAU,GACV0uB,SAAS,EACT/vB,MAAO,CACLy6I,IAAK,CAAC,IAAK,IAAK,IAChBxyB,IAAK,UACLx8G,IAAK,CAAC,KAAM,MAAO,QAErBixI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC93F,eAAgB,aAChB75C,QAAS,6CACT4xI,mBAAoB,8KAEtBC,IAAK,CACH1tI,MAAM,MACN9N,SAAU,GACV0uB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,OACLwyB,IAAK,CAAC,GAAI,GAAI,IACdhvI,IAAK,CAAC,eAERT,QAAS,8CAEX8xI,MAAO,CACLz7I,SAAU,GACV0uB,SAAS,EACT5gB,MAAM,QACNxD,MAAO,QACP3L,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,EAAG,IAAK,KACdhvI,IAAK,CAAC,MAAO,OAAQ,QAEvB3L,KAAM,0BACNoT,oBAAqB,gBACrBlI,QAAS,8CAEX+xI,IAAK,CACH5tI,MAAM,MACNxD,MAAO,MACPtK,SAAU,GACV0uB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,GAAI,IACdhvI,IAAK,CAAC,IAAK,KAAM,QAEnBT,QAAS,8CAEX8tI,IAAK,CACH3pI,MAAM,MACNxD,MAAO,MACPtK,SAAU,GACV0uB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,IAAK,MAAO,QAEpBT,QAAS,8CAEXgyI,IAAK,CACH7tI,MAAO,MACPxD,MAAO,MACPtK,SAAU,GACV0uB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,OACLwyB,IAAK,CAAC,EAAG,EAAG,GACZhvI,IAAK,CAAC,IAAK,KAAM,OAEnBT,QAAS,8CAEXiyI,IAAK,CACH57I,SAAU,GACVsK,MAAO,MACPwD,MAAO,MACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,IAAK,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEXyyG,SAAU,CACRp8G,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,WACPwD,MAAO,WACPrP,KAAM,6BACNE,MAAO,CACLioH,IAAK,OACLwyB,IAAK,CAAC,GAAI,GAAI,IACdhvI,IAAK,CAAC,eAERT,QAAS,8CAEX0yG,QAAS,CACPr8G,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,UACPwD,MAAO,UACPnP,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEX4yG,UAAW,CACTv8G,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,YACPwD,MAAO,YACPrP,KAAM,8BACNE,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,kBAERT,QAAS,8CAEX8yG,SAAU,CACRz8G,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,WACPwD,MAAO,WACPrP,KAAM,6BACNE,MAAO,CACLioH,IAAK,OACLwyB,IAAK,CAAC,GAAI,GAAI,IACdhvI,IAAK,CAAC,eAERT,QAAS,8CAEX+yG,QAAS,CACP18G,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,UACPwD,MAAO,UACPnP,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,IAAK,OAAQ,QAErBT,QAAS,8CAEXkyI,KAAM,CACJ77I,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,OACPwD,MAAO,OACPrP,KAAM,yBACNE,MAAO,CACLioH,IAAK,OACLwyB,IAAK,CAAC,GAAI,GAAI,IACdhvI,IAAK,CAAC,eAERT,QAAS,8CAEXmyI,MAAO,CACL97I,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,QACPwD,MAAO,QACPnP,MAAO,CACLioH,IAAK,OACLwyB,IAAK,CAAC,GAAI,GAAI,IACdhvI,IAAK,CAAC,eAERT,QAAS,8CAEX6yG,OAAQ,CACNx8G,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,OACPwD,MAAO,OACPnP,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,KAAM,MAAO,QAErByH,oBAAqB,cACrBlI,QAAS,6CACTmjF,gBAAiB,6CACjBojB,oBAAqB,8CAEvB6rC,OAAQ,CACN/7I,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,SACPwD,MAAO,SACPrP,KAAM,2BACNE,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,MAAO,OAAQ,QAEvByH,oBAAqB,gBACrBlI,QAAS,6CACTmjF,gBAAiB,8CAEnBkvD,MAAO,CACLh8I,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,QACPwD,MAAO,QACPrP,KAAM,0BACNE,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEXsyI,MAAO,CACLj8I,SAAU,GACV0uB,SAAS,EACT5gB,MAAO,QACPnP,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,GAAI,KACfhvI,IAAK,CAAC,kBAERT,QAAS,8CAEXuyI,IAAK,CACHpuI,MAAO,MACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,KAAM,MAAO,QAErBixI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExC3xI,QAAS,KACT65C,eAAgB,cAElB2zF,KAAM,CACJn3I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,IAAK,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtBixI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExC93F,eAAgB,aAChB75C,QAAS,6CACT4xI,mBACE,8KAEJY,KAAM,CACJn8I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,IAAK,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtBixI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC93F,eAAgB,aAChB75C,QAAS,6CACT4xI,mBACE,8KAEJa,KAAM,CACJp8I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,SACLwyB,IAAK,CAAC,EAAG,GAAI,KACbhvI,IAAK,CAAC,MAAO,MAAO,QAEtBixI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExC93F,eAAgB,aAChB75C,QAAS,8CAEX0yI,KAAM,CACJr8I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,GAAI,IACdhvI,IAAK,CAAC,MAAO,MAAO,QAEtBixI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExC93F,eAAgB,aAChB75C,QAAS,8CAEX2yI,KAAM,CACJt8I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,IAAK,IAChBhvI,IAAK,CAAC,KAAM,MAAO,QAErBo5C,eAAgB,aAChB3xC,oBAAqB,eACrBwpI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3xI,QAAS,6CACT4xI,mBACE,8KAEJgB,KAAM,CACJv8I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,GAAI,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtBo5C,eAAgB,aAChB3xC,oBAAqB,eACrBwpI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3xI,QAAS,6CACT4xI,mBACE,8KAEJ/D,KAAM,CACJx3I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,EAAG,IAAK,KACdhvI,IAAK,CAAC,MAAO,OAAQ,QAEvBo5C,eAAgB,aAChB3xC,oBAAqB,eACrBwpI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3xI,QAAS,8CAEX6yI,QAAS,CACPx8I,SAAU,GACV0uB,SAAS,EACT5gB,MAAO,UACPnP,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,GAAI,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtBo5C,eAAgB,aAChB/kD,KAAM,4BACNoT,oBAAqB,eACrBwpI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3xI,QAAS,8CAEX0kE,KAAM,CACJruE,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,GAAI,KACdhvI,IAAK,CAAC,MAAO,MAAO,QAEtBo5C,eAAgB,aAChB3xC,oBAAqB,eACrBwpI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3xI,QAAS,8CAEX8yI,IAAK,CACH3uI,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,IAAK,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtBsyI,eAAgB,CAAC,SACjBl5F,eAAgB,aAChB/kD,KAAM,wBACNoT,oBAAqB,cACrBwpI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3xI,QAAS,8CAEXmyG,IAAK,CACHhuG,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACT/vB,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,IAAK,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtBsyI,eAAgB,CAAC,SACjBl5F,eAAgB,aAChB3xC,oBAAqB,cACrBwpI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3xI,QAAS,8CAEXiuI,OAAQ,CACN53I,SAAU,GACV0uB,SAAS,EACT5gB,MAAO,SACPnP,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,GAAI,IAAK,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtBo5C,eAAgB,aAChB63F,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3xI,QAAS,8CAEXgzI,4BAA6B,CAC3B38I,SAAU,GACV0uB,SAAS,EACTlwB,KAAM,WACNG,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,EAAG,GACdhvI,IAAK,CAAC,IAAK,OAAQ,QAErBo5C,eAAgB,aAChB11C,MAAO,8BAGXxE,UAAW,CACTszI,SAAU,CACR3oI,QAAQ,EACRya,SAAS,EACTpkB,MAAO,WACP3L,MAAO,CACLy6I,IAAK,CAAC,EAAG,IAAK,KACdhvI,IAAK,CAAC,MAAO,OAAQ,SAGzByyI,kBAAmB,CACjBnuH,SAAS,EACTpkB,MAAO,oBACPk5C,eAAgB,sBAMhB7kD,MAAO,CACLioH,IAAK,UACLwyB,IAAK,CAAC,IAAK,GAAI,KACfhvI,IAAK,CAAC,MAAO,MAAO,QAEtB0yI,UAAW,CAAC,OAAQ,sBAEtBC,iBAAkB,CAChBruH,SAAS,EACTpkB,MAAO,kBACP3L,MAAO,CACLy6I,IAAK,CAAC,EAAG,IAAK,KACdhvI,IAAK,CAAC,MAAO,OAAQ,QAEvB0yI,UAAW,CAAC,OAAQ,0BAEtBE,QAAS,CACP/oI,QAAQ,EACRya,SAAS,EACTpkB,MAAO,UACP3L,MAAO,CACLy6I,IAAK,CAAC,EAAG,IAAK,KACdhvI,IAAK,CAAC,MAAO,MAAO,SAGxB6yI,IAAK,CACH3yI,MAAO,MACPokB,SAAS,EACTjwB,KAAM,WACNE,MAAO,CACLy6I,IAAK,CAAC,IAAK,GAAI,IACfhvI,IAAK,CAAC,MAAO,MAAO,SAGxB8yI,KAAM,CACJjpI,QAAQ,EACR3J,MAAO,OACPokB,SAAS,EACT/vB,MAAO,CACLy6I,IAAK,CAAC,GAAI,GAAI,IACdhvI,IAAK,CAAC,MAAO,KAAM,SAGvB+yI,MAAO,CACL7yI,MAAO,QACPokB,SAAS,GAEX0uH,KAAM,CACJ9yI,MAAO,UACP2J,QAAQ,EACRya,SAAS,EACT/vB,MAAO,CACLy6I,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,MAAO,MAAO,SAGxBizI,OAAQ,CACNppI,QAAQ,EACRya,SAAS,EACTjwB,KAAM,WACN6L,MAAO,UACP3L,MAAO,CACLy6I,IAAK,CAAC,IAAK,GAAI,KACfhvI,IAAK,CAAC,MAAO,MAAO,SAGxBkzI,MAAO,CACLrpI,QAAQ,EACRya,SAAS,EACTpkB,MAAO,QACP7L,KAAM,YACNE,MAAO,CACLy6I,IAAK,CAAC,IAAK,IAAK,KAChBhvI,IAAK,CAAC,MAAO,MAAO,SAGxB2xG,KAAM,CACJ9nG,QAAQ,EACRya,SAAS,EACTpkB,MAAO,OACP7L,KAAM,WACNE,MAAO,CACLy6I,IAAK,CAAC,EAAG,IAAK,KACdhvI,IAAK,CAAC,MAAO,OAAQ,SAGzB+xG,OAAQ,CACNloG,QAAQ,EACRya,SAAS,EACTpkB,MAAO,SACP3L,MAAO,CACLy6I,IAAK,CAAC,GAAI,GAAI,IACdhvI,IAAK,CAAC,IAAK,KAAM,SAGrBmzI,QAAS,CACPtpI,QAAQ,EACRya,SAAS,EACTpkB,MAAO,UACP3L,MAAO,CACLy6I,IAAK,CAAC,EAAG,EAAG,GACZhvI,IAAK,CAAC,IAAK,KAAM,QAGrBozI,KAAM,CACJvpI,QAAQ,EACRya,SAAS,EACTpkB,MAAO,OACP7L,KAAM,WACNE,MAAO,CACLy6I,IAAK,CAAC,EAAG,EAAG,GACZhvI,IAAK,CAAC,IAAK,KAAM,QAGrB4K,MAAO,CACL1K,MAAO,GACPokB,SAAS,EACT/vB,MAAO,CACLy6I,IAAK,CAAC,EAAG,GAAI,KACbhvI,IAAK,CAAC,MAAO,OAAQ,SAGzBukB,KAAM,CACJrkB,MAAO,OACPokB,SAAS,EACT/vB,MAAO,CACLy6I,IAAK,CAAC,EAAG,GAAI,KACbhvI,IAAK,CAAC,MAAO,OAAQ,WAK7B8pB,SAAU,CACR6hB,QAAS,CACPnoB,iBAAkB,CAChBc,SAAS,EACTu7B,kBAAmB,CAAC,IAEtB/rD,OAAQ,CACNu/I,eAAe,EACfC,yBAAyB,GAE3B12H,QAAS,CACP22H,UAAU,EACVC,iBAAkB,IAClBC,uBAAuB,EACvBC,yBAAyB,EACzBJ,yBAAyB,EAEzBK,4BAA6B,CAC3BC,UAAW,CACTtvH,SAAS,EACTyV,IAAK85G,GACLz/I,KAAM,iBACN0/I,SAAU,cACVv0I,QAAS,8CAGX2vE,OAAQ,CACNgiC,IAAK,CACH5sF,SAAS,EACToqC,WAAY,aACZ30B,IAAKg6G,GACLD,SAAU,mBACV1/I,KAAM,0BACNmL,QAAS,8CAGXwtI,KAAM,CACJzoH,SAAS,EACTyV,IAAKg6G,GACLrlF,WAAY,iBACZt6D,KAAM,2BACN0/I,SAAU,0BACVv0I,QAAS,gDAKfy0I,cAAe,CACb1vH,SAAS,EACTyV,IAAKk6G,GACL7/I,KAAM,kBACN0/I,SAAU,sBACVv0I,QAAS,+CAGbsd,QAAS,CACPw2H,eAAe,EACfa,sBAAuB,IACvBC,4BAA6B,KAE/BC,gBAAiB,CACf9vH,SAAS,GAEXkmH,cAAe,CACblmH,SAAS,EACTumE,eAAgB,CAAC,cAAe,eAAgB,iBAElDwpD,UAAW,CACT/vH,SAAS,EACTyV,IAAKu6G,MAIXtjI,QAAS,CACP6uC,kBAAmB,CACjB8xE,EAAG,CACDt/D,QAAS,KACTj+D,KAAM,WACNq6B,UAAW,MACXl6B,MAAO,UACPmgB,SAAU,SACV1D,QAAS,UACTsH,SAAU,YACVixC,cAAe,IACfr7B,UAAW,oBAEbqmH,GAAI,CACFngJ,KAAM,QACNG,MAAO,UACPk6B,UAAW,MACX/Z,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,0BAEbsmH,EAAG,CACDpgJ,KAAM,UACNG,MAAO,UACPk6B,UAAW,MACX/Z,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,4BAEbumH,EAAG,CACDrgJ,KAAM,UACNG,MAAO,UACPk6B,UAAW,MACX/Z,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,4BAEbi/G,IAAK,CACH96E,QAAS,KACTj+D,KAAM,UACNG,MAAO,UACPyc,QAAS,UACTyd,UAAW,QACXnW,SAAU,UACV5D,SAAU,UACV60C,cAAe,IACfr7B,UAAW,0BAEbwmH,EAAG,CACDtgJ,KAAM,WACNG,MAAO,UACPk6B,UAAW,MACX4jC,QAAS,SACTrhD,QAAS,UACT0D,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,6BAEbymH,KAAM,CACJvgJ,KAAM,UACNq6B,UAAW,MACXl6B,MAAO,UACPmgB,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,oBAEb0mH,MAAO,CACLxgJ,KAAM,SACNG,MAAO,UACP89D,QAAS,SACTrhD,QAAS,UACTyd,UAAW,QACXnW,SAAU,UACV5D,SAAU,UACV60C,cAAe,IACfr7B,UAAW,yBAGf2mH,UAAU,EACVxgH,gBAAiB,EACjB/O,cAAe,QACfgmE,eAAgB,QAChBwpD,sBAAuB,EACvBC,gBAAiB,CAAC,EAAG,KACrBvrG,iBAAkB,QAClBwrG,sBAAuB,EACvBxgH,UAAW,CACTygH,OAAQ,CACNn8I,IAAKy9B,GAAI2+G,qBACT3mH,IAAK,CACHmmH,EAAG,+BACHH,GAAI,8BACJ5iB,EAAG,gCACHgjB,KAAM,gCACNxH,IAAK,gCACLyH,MAAO,iCAGXlN,QAAS,CACPpjH,SAAS,EAETxrB,IAAKy9B,GAAI2+G,qBACTz+G,QAAS,CACP02G,IAAK,0BACLyH,MAAO,0CAETO,aAAc,CACZxjB,EAAG,IACHwb,IAAK,EACLuH,EAAG,MACHE,MAAO,GAETtmH,UAAW,CACT6+G,IAAK,2BAEP5+G,IAAK,CAMHojG,EAAG,wCACH+iB,EAAG,wCACHvH,IAAK,wCACLyH,MAAO,0CAQXQ,MAAO,CACLtwG,UAAW,CACT6sF,EAAG,iCACH4iB,GAAI,2CAGRzlH,IAAK,CACHxK,SAAS,EACT0K,kBAAmB,CAAC,IAEtBqmH,SAAU,CACR/wH,SAAS,EACTxrB,IAAKy9B,GAAI++G,uBACTxwG,UAAW,CACTqoG,IAAK,qCACLyH,MAAO,yCAGXW,UAAW,CACTjxH,SAAS,EACTtuB,KAAM,CACJugC,GAAIi/G,wBACJj/G,GAAIk/G,yBACJl/G,GAAIm/G,yBACJn/G,GAAIo/G,0BAEN7wG,UAAW,CACT6sF,EAAG,+BACHgjB,KAAM,+BACND,EAAG,sCACHH,GAAI,sCAEN99G,QAAS,CACPk7F,EAAG,uBACHgjB,KAAM,uBACND,EAAG,8BACHH,GAAI,+BAGRqB,SAAU,CACRlmH,SAAS,CACPpL,SAAQ,EACR8lB,SAAS,kEACTmQ,SAAS,CACPC,aAAa,CACX,KACA,MACA,YACA,cACA,cACA,eACA,oBAKRsI,SAAU,CACRZ,UAAW,CACT,6CACA,8CAEFpd,UAAW,CACTqd,UAAW,oCAEb0zF,KAAM,CACJ1zF,UAAW,2DAEb2zF,QAAS,CACP3zF,UAAS,+lBA6BT4zF,gBAAe,wrBAgCnBC,SAAU,CACR1xH,SAAS,EACT2xH,aAAa,EACbjnH,kBAAmB,CAAC,EAAG,IACvBknH,gBAAiB,CAAC,YAAY,UAC9BpxG,UAAW,CACTooB,OAAQ,mDAEV78C,OAAQ,CACN43B,OAAO,EACPwU,OAAQlmB,GAAI4/G,uBACZC,OAAQ7/G,GAAI8/G,yBACZlpF,MAAO,yCAIXlM,SAAU,CACR38B,SAAS,EACT0K,kBAAmB,CAAC,GACpBsnH,WAAY,SAAC1sH,EAAWi2B,GACtB,IAAI02F,EAAc,KAClB,OAAQ3sH,GACN,KAAK,EACH2sH,EAAc,UACd,MACF,QACEA,EAAc12F,EAAkBj2B,GAC5Bi2B,EAAkBj2B,GAAWpqB,cAC7B,UAGR,OAAO+2I,GAETlmI,OAAQ,CACNmmI,UAAW5/H,OAAOmV,SAAS2K,OAC3BswG,QAAS,OACTyP,MAAO,uCACPC,qBAAqB,EACrB1lI,QAAS,cAKjB2mC,OAAQ,CACNu5D,IAAK,CACHn4D,OAAQ,CACN7tB,GAAI,MACJvsB,KAAM,MACNvB,MAAO,QAGXs0G,IAAK,CACH34D,OAAQ,CACN7tB,GAAI,MACJvsB,KAAM,MACNvB,MAAO,SAIbu5I,cAAe,CAab,CACEryH,SAAS,EACTs+B,IAAK,cACLx3B,MAAO,cACP7iB,KAAM,yBACN0Q,MAAO,2BACPnf,KAAM,kCACN1G,MAAO,mCACPyB,KAAM,+CAGV46I,MAAO,CACLF,OAAQ,CACNjrH,SAAS,EACTpkB,MAAO,SACPiwE,MAAO,SACPymE,aAActhC,EACdz1D,kBAAmB,CAAC,GACpBzsD,MAAO,kBACPg5I,cAAe,2BACf17B,KAAM,wEACNx+G,MAAO,CACLylH,kBAAkB,MAClBN,QAAQ,CACNt9E,IAAK88G,GACLjhJ,SAAU,GACV8N,MAAO,UACPsuB,YAAa,OACbzyB,QAAS,8CAEXwqB,UAAU,CACR+sH,aAAa,CACXx6E,WAAW,EACXviC,IAAI+8G,KAGR9gC,gBAAgB,CACdpE,MAAM,CACJ1hF,SAAS,OACT6J,IAAIg9G,GACJn7E,aAAa,CAAC,QACd8B,gBAAgB,QAChBtpE,KAAM,+BACNsP,MAAO,+BACPnE,QAAQ,6CACRy3I,aAAa,CACXp7E,aAAa,CAAC,OACdxnE,KAAK,6BACLmL,QAAQ,8CAEV+xB,aAAa,CACXyI,IAAK47C,GACLvhF,KAAM,gBACNsP,MAAO,gBACPnE,QAAS,+CAGb4yG,UAAU,CACRjiF,SAAS,SACT6J,IAAIg9G,GACJn7E,aAAa,CAAC,QACd8B,gBAAgB,YAChBtpE,KAAM,qCACNsP,MAAO,qCACPnE,QAAQ,6CACR+xB,aAAa,CACXyI,IAAK47C,GACLvhF,KAAM,sBACNsP,MAAO,sBACPnE,QAAS,+CAGbyyG,SAAS,CACP9hF,SAAS,SACT6J,IAAIg9G,GACJn7E,aAAa,CAAC,QACd8B,gBAAgB,WAChBtpE,KAAM,oCACNsP,MAAO,oCACPnE,QAAQ,6CACR+xB,aAAa,CACXyI,IAAK47C,GACLvhF,KAAM,qBACNsP,MAAO,qBACPnE,QAAS,+CAGb0yG,QAAQ,CACN/hF,SAAS,SACT6J,IAAIg9G,GACJn7E,aAAa,CAAC,QACd8B,gBAAgB,UAChBtpE,KAAM,mCACNsP,MAAO,mCACPnE,QAAQ,6CACR+xB,aAAa,CACXyI,IAAK47C,GACLvhF,KAAM,oBACNsP,MAAO,oBACPnE,QAAS,+CAGb6yG,OAAO,CACLliF,SAAS,SACT6J,IAAIg9G,GACJn7E,aAAa,CAAC,QACd8B,gBAAgB,OAChBtpE,KAAM,gCACNsP,MAAO,gCACPnE,QAAQ,6CACR+xB,aAAa,CACXyI,IAAK47C,GACLvhF,KAAM,iBACNsP,MAAO,iBACPnE,QAAS,+CAGb2yG,OAAO,CACLhiF,SAAS,SACT6J,IAAIg9G,GACJn7E,aAAa,CAAC,QACd8B,gBAAgB,SAChBtpE,KAAM,kCACNsP,MAAO,kCACPnE,QAAQ,6CACR+xB,aAAa,CACXyI,IAAK47C,GACLvhF,KAAM,mBACNsP,MAAO,mBACPnE,QAAS,+CAGb8yG,SAAS,CACPniF,SAAS,SACT6J,IAAIg9G,GACJn7E,aAAa,CAAC,QACd8B,gBAAgB,WAChBtpE,KAAM,oCACNsP,MAAO,oCACPnE,QAAQ,6CACRy3I,aAAa,CACXp7E,aAAa,CAAC,QACdxnE,KAAK,kCACLmL,QAAQ,8CAEV+xB,aAAa,CACXyI,IAAK47C,GACLvhF,KAAM,qBACNsP,MAAO,qBACPnE,QAAS,+CAGb+yG,QAAQ,CACNpiF,SAAS,SACT6J,IAAIg9G,GACJn7E,aAAa,CAAC,QACd8B,gBAAgB,UAChBtpE,KAAM,mCACNsP,MAAO,mCACPnE,QAAQ,6CACRy3I,aAAa,CACXp7E,aAAa,CAAC,OACdxnE,KAAK,iCACLmL,QAAQ,8CAEV+xB,aAAa,CACXyI,IAAK47C,GACLvhF,KAAM,oBACNsP,MAAO,oBACPnE,QAAS,kDAsBnB+xG,MAAO,CACLhtF,SAAS,EACTjwB,KAAM,SACN6L,MAAO,UACPiwE,MAAO,UACPymE,aAAc38B,EACdp6D,kBAAmB,CAAC,GACpB6wD,KAAM,gDACNx+G,MAAO,CACLmQ,gBAAiB,CACf4hE,KAAM,CACJm2C,UAAWwS,GACX9iG,SAAU,CACRiQ,IAAK88G,GACLjhJ,SAAU,GACVxB,KAAM,UACN41D,UAAW,SACXh4B,YAAa,OACbzyB,QAAS,8CAEXmuH,eAAgB,CACd1jE,UAAW,SACXjwB,IAAKk9G,GACL7iJ,KAAM,wBACNmL,QAAS,8CAEXw6B,IAAKkqC,EACL7vE,KAAM,OACNsP,MAAO,OACP9N,SAAU,GACV0uB,SAAS,EACTpkB,MAAO,OACP7L,KAAM,yBACNkL,QAAS,6CACTysH,SACE,4EAEJghB,IAAK,CACH5yB,UAAWiO,GACXv+F,SAAU,CACRl0B,SAAU,GACVxB,KAAM,YACNw2H,cAAe,EACf7wF,IAAKm9G,GACLnsB,aAAc,IACd/4F,YAAa,OACbzyB,QAAS,8CAEXnL,KAAM,MACNsP,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACTyV,IAAKo9G,GACLj3I,MAAO,8BACP7L,KAAM,iCACNkL,QAAS,6CACTysH,SACE,mFAKVorB,aAAc,CACZ9yH,SAAS,EACTjwB,KAAM,SACN6L,MAAO,UACP02I,aAAc38B,EACdp6D,kBAAmB,CAAC,KACpBswB,MAAO,kBACPugC,KAAM,yDACNx+G,MAAO,CACLmQ,gBAAiB,CACf2qI,IAAK,CACH5yB,UAAWiO,GACXv+F,SAAU,CACRl0B,SAAU,GACVxB,KAAM,YACNw2H,cAAe,EACf7wF,IAAKm9G,GACLnsB,aAAc,GACd/4F,YAAa,OACbzyB,QAAS,8CAEXnL,KAAM,MACNsP,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACTyV,IAAKo9G,GACLj3I,MAAO,+BACP7L,KAAM,iCACNkL,QAAS,6CACTysH,SAAU,2FAKlBqrB,YAAa,CACX/yH,SAAS,EACTjwB,KAAM,WACN87E,MAAO,WACPjwE,MAAO,WACP2/C,kBAAmB,CAAC,GACpB6wD,KAAM,0DACNkmC,aAAcnlB,GACdv/H,MAAO,CACLmQ,gBAAiB,CACfuqI,aAAc,CACZh3I,SAAU,GACVmkC,IAAKu9G,GACLljJ,KAAM,eACNsP,MAAO,eAEPnE,QAAS,6CACTu0H,YAAa,6CAEblhD,WAAY,CACVs+B,IAAK,CACHn3E,IAAK47C,GACLvhF,KAAM,MACNsP,MAAO,MACP9N,SAAU,GAEV2J,QAAS,gDAKfutI,cAAe,CACbl3I,SAAU,GACVmkC,IAAKu9G,GACLljJ,KAAM,gBACNsP,MAAO,gBAEPnE,QAAS,6CACTu0H,YAAa,6CACblhD,WAAY,CACVs+B,IAAK,CACHn3E,IAAK47C,GACLvhF,KAAM,MACNsP,MAAO,MACP9N,SAAU,GAEV2J,QAAS,kDAOnBsxE,YAAa,CAEXxnB,WAAY,SAEZopB,2BAA4B,QAC5B3B,aAAc,CACZ/2C,IAAKw9G,GACLnjJ,KAAM,yBAENmL,QAAS,8CAEX+wE,cAAe,CACbv2C,IAAKy9G,GACLpjJ,KAAM,uBAENmL,QAAS,gDAIfk4I,WAAY,CACVnzH,SAAS,EACTsmF,SAAS,EACTv2G,KAAM,cACN6L,MAAO,cACP2/C,kBAAmB,CAAC,GACpBswB,MAAO,uBACPymE,aAAcpT,GACd9yB,KAAM,qJACNx+G,MAAO,CACL63B,UAAW,CACTw6G,qBAAsB,CACpBxqG,IAAK29G,GACLn4I,QAAS,iDAKjBo4I,cAAe,CACbrzH,SAAS,EACT6rD,MAAO,iBACPtwB,kBAAmB,CAAC,EAAG,KACvB+2F,aAActY,GACdp+H,MAAO,iCACP9M,MAAO,+BACPs9G,KAAM,2FACNx+G,MAAO,CACL63B,UAAW,CACTw1G,eAAgB,CACdxlG,IAAKwlG,GACLnrI,KAAM,iBAENmL,QAAS,8CAEXogI,eAAgB,CACd5lG,IAAK4lG,GACLvrI,KAAM,iBAENmL,QAAS,8CAEXigI,eAAgB,CACdzlG,IAAKylG,GACLprI,KAAM,iBACNmL,QAAS,8CAEXwuI,iBAAkB,CAChB35I,KAAM,mBACNmL,QAAS,8CAEXq4I,YAAa,CACXxjJ,KAAM,cACNmL,QAAS,+CAGb2/H,cAAc,CACZC,uBAAwB,sEAE1B98H,gBAAiB,CAmBfwvI,MAAO,CACLz9I,KAAM,QACNsP,MAAO,QACP9N,SAAU,GACV0uB,SAAS,EACT06G,WAAW,EACXp5F,WAAY,SACZT,UAAW,CACTpL,IAAK47C,GACLvhF,KAAM,QACNmL,QAAS,8CAEX2lC,WAAY,CACVnL,IAAK89G,GACLzjJ,KAAM,aACNmL,QAAS,+CAGb4yI,KAAM,CACJ/9I,KAAM,OACNsP,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACTshB,WAAY,MACZT,UAAU,CACR/wC,KAAK,MACLmL,QAAQ,8CAEV2lC,WAAY,CACVnL,IAAK89G,GACLzjJ,KAAM,YACNmL,QAAS,+CAuBb2xG,IAAK,CACH98G,KAAM,MACNsP,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACT06G,WAAW,EACXp5F,WAAY,MACZT,UAAW,CACTpL,IAAKm3E,EACL98G,KAAM,MAENmL,QAAS,8CAEX2lC,WAAY,CACVnL,IAAK89G,GACLzjJ,KAAM,WAENmL,QAAS,+CAGbwtI,KAAM,CACJn3I,SAAU,EACVxB,KAAM,OACNsP,MAAO,OACP4gB,SAAS,EACTshB,WAAY,MACZT,UAAW,CACTpL,IAAKgzG,GACL34I,KAAM,OAENmL,QAAS,8CAEX2lC,WAAY,CACVnL,IAAK89G,GACLzjJ,KAAM,YAENmL,QAAS,+CAGb0kE,KAAM,CACJruE,SAAU,GACVxB,KAAM,OACNsP,MAAO,OACP4gB,SAAS,EACTshB,WAAY,MACZT,UAAW,CACTpL,IAAKkqC,EACL7vE,KAAM,OACNmL,QAAS,8CAEX2lC,WAAY,CACVnL,IAAK89G,GACLzjJ,KAAM,YACNmL,QAAS,kDAyBnBu4I,WAAY,CACVxzH,SAAS,EACTpkB,MAAO,cACPiwE,MAAO,cACPtwB,kBAAmB,CAAC,EAAG,IACvB+2F,aAAc3gB,GACd7iI,MAAO,yBACPs9G,KAAM,iEACNx+G,MAAO,CACLq5H,cAAe,CACbn3H,KAAM,MACNsP,MAAO,MACP9N,SAAU,GACV41H,WAAY,WAEdC,aAAc,CACZ1xF,IAAKo4G,GACL/9I,KAAM,OACNwB,SAAU,GACV8N,MAAO,OACPgoH,aAAc,WACdnsH,QAAS,gDAIfw4I,cAAe,CACbzzH,SAAS,EACTu7B,kBAAmB,CAAC,GACpB3/C,MAAO,iBACPiwE,MAAO,iBACPymE,aAAcjW,GACdvtI,MAAO,kCACPs9G,KAAM,8DACNvhC,aAAc,6DACdj9E,MAAO,CACL43B,SAAU,CACRl0B,SAAU,GACVmkC,IAAKi+G,GACL5jJ,KAAM,YACNmL,QAAS,8CAEXivE,UAAW,CACT,CACEK,WAAY,MACZO,oBAAqB,WACrBF,OAAQ,CACN+oE,MAAO,CACLl+G,IAAKm+G,GACL9jJ,KAAM,oCACNmL,QAAS,6CACTyiI,aAAc,CACZpsI,SAAU,GACVmkC,IAAKo+G,GACL/jJ,KAAM,wCACNmL,QAAS,+CAGb64I,QAAS,CACPr+G,IAAKm+G,GACL9jJ,KAAM,sCACNmL,QAAS,6CACTyiI,aAAc,CACZpsI,SAAU,GACVmkC,IAAKo+G,GACL/jJ,KAAM,0CACNmL,QAAS,oDAQvBg1E,aAAc,CACZjwD,SAAS,EACTjwB,KAAM,UACNgkJ,cAAc,EACdpb,gBAAgB,EAChBp9E,kBAAmB,CAAC,GACpBswB,MAAO,gBACPjwE,MAAO,gBACP02I,aAAcjb,GACdjrB,KAAM,6FACNx+G,MAAO,CACLmQ,gBAAiB,CACfuqI,aAAc,CACZh3I,SAAU,GACV09B,SAAU,OACV7E,UAAW,MACX4vG,YAAa,IACb7xG,kBAAmB,CACjBuN,IAAKu+G,GACLlkJ,KAAM,qBACNmL,QAAS,6CAETmyB,UAAW,CACT,CACEt9B,KAAM,UACN0nI,WAAW,EACX57H,MAAO,UACP+zD,WAAY,uBAKpB44E,cAAe,CACbj3I,SAAU,EACV09B,SAAU,OACV7E,UAAW,OACX4vG,YAAa,IACb7xG,kBAAmB,CACjBuN,IAAKu+G,GACLlkJ,KAAM,sBACNmL,QAAS,6CAETmyB,UAAW,CACT,CACEt9B,KAAM,UACN8L,MAAO,UACP47H,WAAW,EACX7nE,WAAY,0CAQ1BtnC,eAAgB,CACdrI,SAAS,EACT+zH,cAAc,EACdhkJ,KAAM,eACN4oI,gBAAgB,EAChBp9E,kBAAmB,CAAC,GACpBswB,MAAO,kBACPjwE,MAAO,kBACP02I,aAAcvT,GACd3yB,KAAM,8FACNx+G,MAAO,CACLmQ,gBAAiB,CACfuqI,aAAc,CACZh3I,SAAU,GACVmkC,IAAKw+G,GACLjlH,SAAU,OACV7E,UAAW,MACXr6B,KAAM,iBACNsP,MAAO,iBACPnE,QAAS,6CACTitB,kBAAmB,CACjBuN,IAAKy+G,GACLpkJ,KAAM,wBACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,cAKdy4I,cAAe,CACbj3I,SAAU,GACVmkC,IAAKw+G,GACLjlH,SAAU,OACV7E,UAAW,OACXr6B,KAAM,kBACNsP,MAAO,kBACPnE,QAAS,6CACTitB,kBAAmB,CACjBuN,IAAKy+G,GACLpkJ,KAAM,yBACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,cAKd04I,cAAe,CACbl3I,SAAU,GACVmkC,IAAKw+G,GACLjlH,SAAU,OACV7E,UAAW,OACXr6B,KAAM,kBACNsP,MAAO,kBACPnE,QAAS,6CACTitB,kBAAmB,CACjBuN,IAAKy+G,GACLpkJ,KAAM,yBACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,cAKdqkJ,cAAe,CACb7iJ,SAAU,GACVmkC,IAAKw+G,GACLjlH,SAAU,OACV7E,UAAW,OACXr6B,KAAM,kBACNsP,MAAO,kBACPnE,QAAS,6CACTitB,kBAAmB,CACjBuN,IAAKy+G,GACLpkJ,KAAM,yBACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,cAKdskJ,cAAe,CACb9iJ,SAAU,GACVmkC,IAAKw+G,GACLjlH,SAAU,OACV7E,UAAW,OACXr6B,KAAM,kBACNsP,MAAO,kBACPnE,QAAS,6CACTitB,kBAAmB,CACjBuN,IAAKy+G,GACLpkJ,KAAM,yBACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,cAKdukJ,cAAe,CACb/iJ,SAAU,GACVmkC,IAAKw+G,GACLjlH,SAAU,OACV7E,UAAW,OACXr6B,KAAM,kBACNsP,MAAO,kBACPnE,QAAS,6CACTitB,kBAAmB,CACjBuN,IAAKy+G,GACLpkJ,KAAM,yBACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,cAKdwkJ,YAAa,CACXhjJ,SAAU,GACVmkC,IAAKw+G,GACLjlH,SAAU,OACV7E,UAAW,MACXr6B,KAAM,gBACNsP,MAAO,gBACPnE,QAAS,6CACTitB,kBAAmB,CACjBuN,IAAKy+G,GACLpkJ,KAAM,4BACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,cAKdykJ,aAAc,CACZjjJ,SAAU,GACVmkC,IAAKw+G,GACLjlH,SAAU,OACV7E,UAAW,OACXr6B,KAAM,iBACNsP,MAAO,iBACPnE,QAAS,6CACTitB,kBAAmB,CACjBuN,IAAKy+G,GACLpkJ,KAAM,6BACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,cAKd0kJ,aAAc,CACZljJ,SAAU,GACVmkC,IAAKw+G,GACLjlH,SAAU,OACV7E,UAAW,OACXr6B,KAAM,iBACNsP,MAAO,iBACPnE,QAAS,6CACTitB,kBAAmB,CACjBuN,IAAKy+G,GACLpkJ,KAAM,6BACNmL,QAAS,6CACTmyB,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,iBAQpB2kJ,eAAgB,CACdz0H,SAAS,EACTjwB,KAAM,YACN87E,MAAO,UACPtwB,kBAAmB,CAAC,GACpB3/C,MAAO,kBACPwwG,KAAM,yEACNkmC,aAAc1T,GACdhxI,MAAO,CACLs6B,kBAAmB,CACjBp4B,KAAM,kBACN2lC,IAAKi/G,GACLz5I,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,uBAIZ4xB,oBAAqB,CAAC,OAAQ,QAC9B3jB,gBAAiB,CACf42I,UAAW,CACTrjJ,SAAU,GACV0uB,SAAS,EACT4L,SAAU,OACVzB,UAAW,MACXsL,IAAKm/G,GACLx1I,MAAO,aACPrP,KAAM,4BACNgpI,gBAAiB,oBACjB99H,QAAS,8CAEX45I,KAAM,CACJvjJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,OACP+qB,UAAW,MACXyB,SAAU,WACVmtG,gBAAiB,4BACjB99H,QAAS,8CAEX65I,KAAM,CACJxjJ,SAAU,GACV0uB,SAAS,EACT5gB,MAAO,OACP+qB,UAAW,MACXyB,SAAU,UACVmtG,gBAAiB,2BACjB99H,QAAS,8CAEX85I,KAAM,CACJzjJ,SAAU,GACV0uB,SAAS,EACT5gB,MAAO,OACPwsB,SAAU,OACVzB,UAAW,MACX4uG,gBAAiB,wBACjB99H,QAAS,8CAEX+5I,OAAQ,CACN1jJ,SAAU,GACV0uB,SAAS,EACT5gB,MAAO,SACPq2B,IAAKu/G,GAAOv/G,IACZtL,UAAW,MACXyB,SAAU,QACV77B,KAAM,yBACNgpI,gBAAiB,yBACjB99H,QAAS,8CAEXg6I,OAAQ,CACN3jJ,SAAU,GACV0uB,SAAS,EACT5gB,MAAO,SACP+qB,UAAW,MACXsL,IAAKu/G,GAAOv/G,IACZ7J,SAAU,QACV77B,KAAM,yBACNgpI,gBAAiB,yBACjB99H,QAAS,8CAEXi6I,WAAY,CACV5jJ,SAAU,GACV0uB,SAAS,EACT4L,SAAU,OACV6J,IAAKm/G,GACLzqH,UAAW,OACX/qB,MAAO,cACPrP,KAAM,6BACNgpI,gBAAiB,oBACjB99H,QAAS,8CAEXk6I,MAAO,CACL7jJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACP+qB,UAAW,OACXyB,SAAU,WACVmtG,gBAAiB,4BACjB99H,QAAS,8CAEXm6I,MAAO,CACL9jJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACP+qB,UAAW,OACXyB,SAAU,UACVmtG,gBAAiB,2BACjB99H,QAAS,8CAEXo6I,MAAO,CACL/jJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACPwsB,SAAU,OACVzB,UAAW,OACX4uG,gBAAiB,wBACjB99H,QAAS,8CAEXq6I,QAAS,CACPhkJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,UACPwsB,SAAU,QACV6J,IAAK6/G,GAAQ7/G,IACbtL,UAAW,OACXp6B,KAAM,0BACNgpI,gBAAiB,yBACjB99H,QAAS,8CAEXs6I,QAAS,CACPjkJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,UACPwsB,SAAU,QACV6J,IAAK6/G,GAAQ7/G,IACbtL,UAAW,OACXp6B,KAAM,0BACNgpI,gBAAiB,yBACjB99H,QAAS,8CAEXu6I,MAAO,CACLlkJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACP+qB,UAAW,OACXyB,SAAU,WACVmtG,gBAAiB,4BACjB99H,QAAS,8CAEXw6I,MAAO,CACLnkJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACP+qB,UAAW,OACXyB,SAAU,UACVmtG,gBAAiB,2BACjB99H,QAAS,8CAEXy6I,MAAO,CACLpkJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACPwsB,SAAU,OACVzB,UAAW,OACX4uG,gBAAiB,wBACjB99H,QAAS,8CAEX06I,QAAS,CACPrkJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,UACPq2B,IAAKkgH,GAAQlgH,IACb7J,SAAU,QACVzB,UAAW,OACXp6B,KAAM,0BACNgpI,gBAAiB,yBACjB99H,QAAS,8CAEX26I,QAAS,CACPtkJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,UACPq2B,IAAKkgH,GAAQlgH,IACb7J,SAAU,QACVzB,UAAW,OACXp6B,KAAM,0BACNgpI,gBAAiB,yBACjB99H,QAAS,8CAEX46I,WAAY,CACVvkJ,SAAU,GACV0uB,SAAS,EACTyV,IAAKm/G,GACLhpH,SAAU,OACVzB,UAAW,OACX/qB,MAAO,mBACPsiB,oBAAqB,CAAC,QACtBq3G,gBAAiB,oBACjBhpI,KAAM,kCACNkL,QAAS,8CAEX66I,MAAO,CACLxkJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACPwsB,SAAU,OACVzB,UAAW,OACX4uG,gBAAiB,wBACjB99H,QAAS,8CAEX86I,QAAS,CACPzkJ,SAAU,GACV0uB,SAAS,EACT5gB,MAAO,UACPq2B,IAAKsgH,GACL5rH,UAAW,OACXyB,SAAU,QACVlK,oBAAqB,CAAC,QACtB3xB,KAAM,4BACNgpI,gBAAiB,yBACjB99H,QAAS,8CAEX+6I,WAAY,CACV1kJ,SAAU,GACV0uB,SAAS,EACTyV,IAAKm/G,GACLhpH,SAAU,OACVzB,UAAW,OACX/qB,MAAO,mBACPsiB,oBAAqB,CAAC,QACtBq3G,gBAAiB,oBACjBhpI,KAAM,kCACNkL,QAAS,8CAEXg7I,MAAO,CACL3kJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACPwsB,SAAU,OACVzB,UAAW,OACX4uG,gBAAiB,wBACjB99H,QAAS,8CAEXi7I,QAAS,CACP5kJ,SAAU,GACV0uB,SAAS,EACTyV,IAAKygH,GACL92I,MAAO,UACP+qB,UAAW,OACXyB,SAAU,QACV77B,KAAM,4BACNgpI,gBAAiB,yBACjB99H,QAAS,8CAEXk7I,MAAO,CACL7kJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACP+qB,UAAW,OACXyB,SAAU,WACVmtG,gBAAiB,4BACjB99H,QAAS,8CAEXm7I,MAAO,CACL9kJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACP+qB,UAAW,OACXyB,SAAU,UACVmtG,gBAAiB,2BACjB99H,QAAS,8CAEXo7I,MAAO,CACL/kJ,SAAU,EACV0uB,SAAS,EACT5gB,MAAO,QACPwsB,SAAU,OACVzB,UAAW,OACX4uG,gBAAiB,wBACjB99H,QAAS,iDAKjBq7I,SAAU,CACRt2H,SAAS,EACT6rD,MAAO,YACPjwE,MAAO,YACP2/C,kBAAmB,CAAC,GACpBxrD,KAAM,mBACNq8G,KAAM,oEACNkmC,aAAc5rC,IACdn6B,YAAa,CACXk8B,YAAY,EACZsC,eAAe,IAGnBwrC,UAAW,CACTv2H,SAAS,EACTjwB,KAAM,OACN87E,MAAO,aACPjwE,MAAO,aACP2/C,kBAAmB,CAAC,GACpB6wD,KAAM,kDACNkmC,aAAcnvB,GACdv1H,MAAO,CACLmQ,gBAAiB,CACf+uI,IAAK,CAAE1tI,MAAO,OACdwtG,IAAK,CAAExtG,MAAO,OACduuI,KAAM,CAAEvuI,MAAO,QACfsuI,KAAM,CAAEtuI,MAAO,QACfqpI,KAAM,CAAErpI,MAAO,QACfo3I,KAAM,CAAEp3I,MAAO,QACfquI,KAAM,CAAEruI,MAAO,QACfwuI,KAAM,CAAExuI,MAAO,QACfyuI,KAAM,CAAEzuI,MAAO,QACfq3I,KAAM,CAAEr3I,MAAO,QACfs3I,KAAM,CAAEt3I,MAAO,QACfu3I,OAAQ,CAAEv3I,MAAO,QACjBw3I,IAAK,CAAEx3I,MAAO,OACdy3I,MAAO,CAAEz3I,MAAO,SAChB03I,KAAM,CAAE13I,MAAO,QACf23I,IAAK,CAAE33I,MAAO,OACd43I,IAAK,CAAE53I,MAAO,OACd63I,KAAM,CAAE73I,MAAO,QACf83I,IAAK,CAAE93I,MAAO,OACd+3I,IAAK,CAAE/3I,MAAO,OACdg4I,IAAK,CAAEh4I,MAAO,OACdi4I,IAAK,CAAEj4I,MAAO,OACdk4I,IAAK,CAAEl4I,MAAO,OACdm4I,IAAK,CAAEn4I,MAAO,OACdo4I,IAAK,CAAEp4I,MAAO,OACdq4I,IAAK,CAAEr4I,MAAO,OACds4I,IAAK,CAAEt4I,MAAO,OACdu4I,IAAK,CAAEv4I,MAAO,OACdw4I,IAAK,CAAEx4I,MAAO,OACdy4I,IAAK,CAAEz4I,MAAO,OACd04I,MAAO,CAAE14I,MAAO,SAChB24I,IAAK,CAAE34I,MAAO,OACd44I,IAAK,CAAE54I,MAAO,OACd64I,IAAK,CAAE74I,MAAO,OACd84I,IAAK,CAAE94I,MAAO,OACd+4I,IAAK,CAAE/4I,MAAO,OACdg5I,KAAM,CAAEh5I,MAAO,QACfi5I,IAAK,CAAEj5I,MAAO,OACdk5I,IAAK,CAAEl5I,MAAO,OACdm5I,KAAM,CAAEn5I,MAAO,QACfo5I,KAAM,CAAEp5I,MAAO,QACfq5I,KAAM,CAAEr5I,MAAO,QACfs5I,IAAK,CAAEt5I,MAAO,OACdu5I,KAAM,CAAEv5I,MAAO,QACfw5I,IAAK,CAAEx5I,MAAO,OACdy5I,IAAK,CAAEz5I,MAAO,OACd05I,IAAK,CAAE15I,MAAO,OACd25I,IAAK,CAAE35I,MAAO,OACd45I,IAAK,CAAE55I,MAAO,OACd65I,IAAK,CAAE75I,MAAO,OACd85I,IAAK,CAAE95I,MAAO,OACd+5I,MAAO,CAAE/5I,MAAO,SAChBg6I,KAAM,CAAEh6I,MAAO,QACfi6I,IAAK,CAAEj6I,MAAO,OACdk6I,IAAK,CAAEl6I,MAAO,OACdm6I,IAAK,CAAEn6I,MAAO,OACdo6I,IAAK,CAAEp6I,MAAO,OACdq6I,KAAM,CAAEr6I,MAAO,QACfs6I,IAAK,CAAEt6I,MAAO,OACdu6I,IAAK,CAAEv6I,MAAO,OACdw6I,KAAM,CAAEx6I,MAAO,QACfy6I,KAAM,CAAEz6I,MAAO,QACf06I,GAAI,CAAE16I,MAAO,MACb26I,IAAK,CAAE36I,MAAO,OACd46I,IAAK,CAAE56I,MAAO,OACd66I,IAAK,CAAE76I,MAAO,OACd86I,IAAK,CAAE96I,MAAO,OACd+6I,IAAK,CAAE/6I,MAAO,OACdg7I,IAAK,CAAEh7I,MAAO,OACdi7I,IAAK,CAAEj7I,MAAO,OACdk7I,IAAK,CAAEl7I,MAAO,OACdm7I,IAAK,CAAEn7I,MAAO,OACdo7I,IAAK,CAAEp7I,MAAO,OACdq7I,IAAK,CAAEr7I,MAAO,OACds7I,IAAK,CAAEt7I,MAAO,OACdu7I,MAAO,CAAEv7I,MAAO,SAChBw7I,IAAK,CAAEx7I,MAAO,OACdy7I,IAAK,CAAEz7I,MAAO,OACd07I,IAAK,CAAE17I,MAAO,OACd27I,KAAM,CAAE37I,MAAO,QACf47I,IAAK,CAAE57I,MAAO,OACd67I,IAAK,CAAE77I,MAAO,OACd87I,IAAK,CAAE97I,MAAO,SAGlBmtE,YAAa,KAGjB4uE,UAAW,CACTpI,YAAa,CACXn3I,MAAO,eACP9M,MAAO,oCACPssJ,UAAW,2CAEb3H,cAAe,CACb73I,MAAO,iBACP9M,MAAO,kCACPssJ,UAAW,oCAGflzC,SAAU,CAER7gE,QAAS,CACPg0G,KAAM,CACJ7+F,gBAAiB,KACjB8sD,iBAAiB,EACjB17G,MAAO,CACLs9G,SAAU,kBACVL,QAAS,iBAGbywC,KAAM,CACJ9+F,gBAAiB,KACjB8sD,iBAAiB,EACjB17G,MAAO,CACLs9G,SAAU,wBACVL,QAAS,gBAGb0wC,OAAQ,CACN/+F,gBAAiB,gBACjB8sD,iBAAiB,EACjB17G,MAAO,CACLs9G,SAAU,6BACVL,QAAS,kBACTj7G,WAAY,CACVyrB,QAAS,CAAC,IAAK,WAKvB6U,UAAW,CACTsrH,KAAM,CACJx7H,SAAS,EACTkrF,SAAU,2BACVt7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENo8G,QAAS,WACT4wC,WAAY,MACZ9c,WAAY,gBACZz1B,iBAAkB,CAAC,QACnBc,mBAAoB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC/DZ,gBAAiB,CAAC,OAAQ,MAAO,OACjCe,gBAAiB,GACjBl4E,IAAK,OACLypH,UAAW,CACT1U,KAAM,CACJ2U,UAAW,kBAEbC,KAAM,CACJD,UAAW,mBAGf/yC,QAAS,SAAAh7G,GACP,IAAMktB,EAAO,GACb,GAAIltB,EAAM+4G,gBAAkB/4G,EAAM+4G,eAChC,OAAQ/4G,EAAM+4G,gBACZ,IAAK,OACH7rF,EAAK6jH,WAAL,8BACA,MACF,IAAK,OACH7jH,EAAK6jH,WAAL,4BAMN,OAAO7jH,GAETqtF,cAAe,SAACv6G,EAAO4N,EAAe0rG,GACpC,IAAMj1E,EAAMz2B,EAAc0sG,SAASh4E,UAAUsrH,KAAKvpH,IAE5C4pH,EADYrgJ,EAAc0sG,SAASh4E,UAAUsrH,KAAKE,UAAUzpH,GAC9B0pH,UAG9B5vI,EAAS,CACb+vI,KAAI,YAAAxnJ,OAAc1G,EAAMqQ,SACxB89I,aAAc70C,EAAUtvG,cAAgBsvG,EAAUtvG,cAAgBhK,EAAMkK,YAAY0jJ,MAAQ5tJ,EAAMkK,YAAY0jJ,KAAKO,aAAenuJ,EAAMkK,YAAY0jJ,KAAKO,aAAenuJ,EAAMgK,cAC9KikJ,oBACAG,YAAaxgJ,EAAco+C,SAI7B,MACE,GAAAtlD,OAXU,oCAWV,KACAhH,OAAOoE,KAAKqa,GACTtY,IACC,SAAAwoJ,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBnwI,EAAOkwI,MAE9DtgJ,KAAK,MAGZysG,OAAQ,SAACd,EAAYvpF,EAAQnwB,EAAO4N,GAElC,IADmBqgB,SAASC,eAAe,eAC1B,CACf,IAAMqgI,EAAYtgI,SAAS9tB,cAAc,OA2BzC,GA1BAouJ,EAAUj4H,UAAV,68BAAA5vB,OASegzG,EATf,2dAAAhzG,OAgBsBkH,EAAc0sG,SAASh4E,UAAUsrH,KAAKtwC,SAhB5D,oQAuBArvF,SAASq2D,KAAKC,YAAYgqE,IAGrBtgI,SAASC,eAAe,oBAAqB,CAChD,IAAMsgI,EAAYvgI,SAAS9tB,cAAc,SACzCquJ,EAAUrpJ,GAAK,mBACfqpJ,EAAUl4H,UAAV,4aAaArI,SAASq2D,KAAKC,YAAYiqE,OAKlCC,KAAM,CACJr8H,SAAS,EACTkrF,SAAU,2BACVt7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENo8G,QAAS,WACT4wC,WAAY,MACZ9c,WAAU,0BACVz1B,iBAAkB,CAAC,OAAQ,QAC3BozC,MAAO,CACL/rJ,KAAM,iBACNN,MAAO,OACPytB,QAAS,WAEX0rF,gBAAiB,CAAC,MAAO,MAAO,QAChCY,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFpB,QAAS,SAAAh7G,GACP,IAAMktB,EAAO,GACb,OAAQltB,EAAM+4G,gBACZ,IAAK,OACH7rF,EAAKkvF,mBAAqB,CAAC,MAAO,OAClClvF,EAAK6jH,WAAL,qBACA,MACF,IAAK,OACH7jH,EAAKkvF,mBAAqB,CACxB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFlvF,EAAK6jH,WAAL,gBAKJ,OAAO7jH,GAETqtF,cAAe,SAACv6G,EAAO4N,EAAe0rG,GACpC,MAAO,CACLq1C,YAAa,OACbz1F,YAAal5D,EAAMqQ,QACnBu+I,WAAYvqH,GAAIwqH,mBAChBz0C,QAASp6G,EAAM+B,SAAW,SAAW,UACrC+sJ,YAAW,GAAApoJ,OAAKkH,EAAco+C,QAAnB,0BACX+iG,UAAWz1C,EAAUtvG,cACjBsvG,EAAUtvG,cACVhK,EAAMkK,YAAYukJ,MAAQzuJ,EAAMkK,YAAYukJ,KAAKM,UAC/C/uJ,EAAMkK,YAAYukJ,KAAKM,UACvB/uJ,EAAMgK,gBAGhBwwG,OAAQ,SAACd,EAAYvpF,EAAQnwB,EAAO4N,GAClC,IAAIohJ,KAAet1C,GAChBngD,GAAG,IADN,eAAA7oD,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KACW,SAAA6P,EAAMm9G,GAAN,IAAA/6H,EAAA+R,EAAA7C,EAAA,OAAA+e,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,OACDtO,EAAgB,IAAIE,IAAchD,GACpC6U,EAAgB,KAChB7C,EAAc,KAHX4O,EAAA6R,GAKCorG,EAAMv6H,KALPsd,EAAAxP,KAMA,wBANAwP,EAAA6R,GAAA,yBAQHzyB,EAAMq6G,oBARHz5F,EAAAxP,KAAA,EAUmBpR,EAAM+yD,mBAVzB,cAUHl+C,EAVG+L,EAAAzM,KAYHnC,EAAc6rH,EAAMoxB,QAAQC,SAASl9I,YACrCA,EAAclP,EACX2O,MAAMO,EAAYwR,YAClBD,IACCzgB,EAAc2O,MACZG,KAAK0wD,IAAI,GAAIxwD,SAAS+C,IAAgB2O,aAGzCA,WAGHkB,OAAOo1F,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAAtzG,OAAKsL,EAAL,KAAAtL,OAAoB1G,EAAMgK,cAA1B,2BAChBiwG,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YA5BRx5F,EAAAe,OAAA,2BAAAf,EAAAe,OAAA,qCAAAf,EAAArO,SAAAmO,EAAA3gB,SADX,gBAAA0hB,GAAA,OAAA/Q,EAAA+B,MAAA1S,KAAA2S,YAAA,IAqCGy8I,SAGPC,QAAS,CACPh9H,SAAS,EACTkrF,SAAU,8BACVt7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENo8G,QAAS,WACT4wC,WAAY,MACZ9c,WAAU,+BACVz1B,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,QAChEe,gBAAiB,CAAE8yC,0CAA2C,IAC9DhrH,IAAK,OACLqqH,MAAO,CACL/rJ,KAAM,UACNmtB,QAAS,WAEXg+H,UAAW,CACT1U,KAAM,CACJ7uF,OAAQlmB,GAAIirH,2BACZ11H,IAAK,8BAEPo0H,KAAM,CACJzjG,OAAQlmB,GAAIkrH,2BACZ31H,IAAK,+BAGTohF,QAAS,SAAAh7G,GACP,IAAMktB,EAAO,GAEP6rF,EAAiB/4G,EAAM+4G,gBAAkB/4G,EAAM+4G,eACjDz/B,EAAyB,SAAnBy/B,EAA4B,OAAS,OAE/C,GAAI/4G,EAAMi5G,iBAAmBj5G,EAAMi5G,gBAAgB/tG,MACjD,OAAQlL,EAAMi5G,gBAAgB/tG,MAAMuK,eAClC,IAAK,MACHyX,EAAKwhI,MAAQ,CACX/rJ,KAAM,UACNmtB,QAAS,WAEX5C,EAAK6jH,WAAL,KAAArqI,OAAuB4yE,EAAvB,oBACA,MACF,IAAK,MACHA,EAAM,OACNpsD,EAAKwhI,MAAQ,CACX/rJ,KAAM,UACNmtB,QAAS,WAEX5C,EAAK6jH,WAAL,KAAArqI,OAAuB4yE,EAAvB,oBACA,MACF,IAAK,MAEDpsD,EAAKwhI,MADgB,SAAnB31C,EACW,CACXp2G,KAAM,OACNN,MAAO,WACPytB,QAAS,WAGE,CACXntB,KAAM,UACNmtB,QAAS,WAGb5C,EAAK6jH,WAAL,KAAArqI,OAAuB4yE,EAAvB,oBAMN,OAAOpsD,GAETqtF,cAAe,SAACv6G,EAAO4N,EAAe0rG,GACpC,IAAMj1E,EAAMz2B,EAAc0sG,SAASh4E,UAAU8sH,QAAQ/qH,IAC/CypH,EACJlgJ,EAAc0sG,SAASh4E,UAAU8sH,QAAQtB,UAAUzpH,GAEjDmrH,EAAe,KAEnB,GAAIl2C,EAAUL,iBAAmBK,EAAUL,gBAAgB/tG,MACzD,OAAQouG,EAAUL,gBAAgB/tG,MAAMuK,eACtC,IAAK,MACH+5I,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,QACEA,EAAe,MAKrB,IAAIC,EAAqBn2C,EAAUtvG,cAC/BsvG,EAAUtvG,cAAcsD,cACxBtN,EAAMkK,YAAYklJ,SAClBpvJ,EAAMkK,YAAYklJ,QAAQM,aACxB1vJ,EAAMkK,YAAYklJ,QAAQM,aAC1B1vJ,EAAMgK,cACZylJ,EAAqBA,EAAmBh6I,cAOxC,MAAO,CACL80C,OANaujG,EAAUvjG,OAOvBklG,qBACAE,cAPoB3vJ,EAAMqQ,QAQ1Bm/I,eACAI,kBARwB5vJ,EAAMqQ,QAS9Bw/I,0BAR+B,EAS/BhwJ,MAAO,OACPiC,OAAQ,SAIZ04G,OAAQ,SAACd,EAAYvpF,EAAQnwB,EAAO4N,GAClC,GAAI8W,OAAOorI,cAAe,CAExB,IADsB7hI,SAASC,eAAe,kBAC1B,CAClB,IAAMqgI,EAAYtgI,SAAS9tB,cAAc,OAmBzC,GAlBAouJ,EAAUj4H,UAAV,szCAAA5vB,OAQsBkH,EAAc0sG,SAASh4E,UAAU8sH,QAAQ9xC,SAR/D,iQAeArvF,SAASq2D,KAAKC,YAAYgqE,IAGrBtgI,SAASC,eAAe,uBAAwB,CACnD,IAAM6hI,EAAe9hI,SAAS9tB,cAAc,SAC5C4vJ,EAAa5qJ,GAAK,sBAClB4qJ,EAAaz5H,UAAb,6cAaArI,SAASq2D,KAAKC,YAAYwrE,IAI9BrrI,OAAOorI,cAAct1C,OAAOd,EAAY,+BAI9Cs2C,QAAS,CACP59H,SAAS,EACTkrF,SAAU,8BACVt7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENo8G,QAAS,WACT4wC,WAAY,MACZ9c,WAAY,eACZz1B,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,OAAQ,MAAO,OACjCn3E,IAAK,OACLypH,UAAW,CACT1U,KAAM,CACJx/G,IAAK,iCACL2wB,OAAQlmB,GAAI4rH,4BAEdjC,KAAM,CACJp0H,IAAK,yBACL2wB,OAAQlmB,GAAI6rH,6BAGhBl1C,QAAS,SAAAh7G,GACP,IAAMktB,EAAO,GACb,GAAIltB,EAAM+4G,gBAAkB/4G,EAAM+4G,eAChC,OAAQ/4G,EAAM+4G,gBACZ,IAAK,OACH,GAAI/4G,EAAMi5G,iBAAmBj5G,EAAMi5G,gBAAgB/tG,MACjD,OAAQlL,EAAMi5G,gBAAgB/tG,MAAMuK,eAClC,IAAK,MACHyX,EAAKwhI,MAAQ,CACX/rJ,KAAM,OACNN,MAAO,WACPytB,QAAS,WAEX5C,EAAK6jH,WAAL,yBACA,MACF,IAAK,MACH7jH,EAAKwhI,MAAQ,CACX/rJ,KAAM,OAERuqB,EAAK6jH,WAAL,yBACA,MACF,QACE7jH,EAAKwhI,MAAQ,KACbxhI,EAAK6jH,WAAL,6BAIN,MACF,IAAK,OACH7jH,EAAKwhI,MAAQ,KACbxhI,EAAK6jH,WAAL,aAMN,OAAO7jH,GAETqtF,cAAe,SAACv6G,EAAO4N,EAAe0rG,GACpC,IAAMj1E,EAAMz2B,EAAc0sG,SAASh4E,UAAU0tH,QAAQ3rH,IAC/CypH,EACJlgJ,EAAc0sG,SAASh4E,UAAU0tH,QAAQlC,UAAUzpH,GAE/ClmB,EAAS,CACbosC,OAFaujG,EAAUvjG,OAGvBmlG,aAAcp2C,EAAUtvG,cACpBsvG,EAAUtvG,cAAcsD,cACxBtN,EAAMkK,YAAY8lJ,SAClBhwJ,EAAMkK,YAAY8lJ,QAAQN,aACxB1vJ,EAAMkK,YAAY8lJ,QAAQN,aAC1B1vJ,EAAMgK,cAAcsD,cAC1BqiJ,cAAe3vJ,EAAMqQ,QACrB8/I,iBAAkB,MAClBC,uBAAuB,GAGnB32G,EAAU,CACdg0G,KAAM,CACJ/X,IAAK,oBACLK,IAAK,sBAEP2X,KAAM,qBAGFz0C,EACJK,EAAUL,iBAAmBK,EAAUL,gBAAgB/tG,MACnDouG,EAAUL,gBAAgB/tG,MAAMuK,cAChC,KAGN,GAAI6jG,EAAUP,eACZ,OAAQO,EAAUP,gBAChB,IAAK,OAGH,OAFA56F,EAAOkyI,sBACL52G,EAAQ6/D,EAAUP,gBAAlB,IACME,GACN,IAAK,MACL,IAAK,MACH96F,EAAOkyI,sBACL52G,EAAQ6/D,EAAUP,gBAAgBE,GACpC,MACF,QACE96F,EAAOkyI,sBAAwB3wJ,OAAO2R,OACpCooC,EAAQ6/D,EAAUP,iBAClBhrG,KAAK,KAGX,MACF,IAAK,OACL,QACEoQ,EAAOkyI,sBACL52G,EAAQ6/D,EAAUP,gBAM1B,OAAQE,GACN,IAAK,MACH96F,EAAOgyI,iBAAmB,MAC1B,MACF,IAAK,MACHhyI,EAAOgyI,iBAAmB,MAC1B,MACF,QACEhyI,EAAOgyI,iBAAmB,MAI9B,IAAIv2H,EAAMk0H,EAAUl0H,IAgBpB,OAbe02H,UAAUC,UAAUj0I,QAAQ,WAAa,IAGnD2R,SAASuiI,OAAOl8G,MACf,+CAGFrmB,SAASuiI,OACP,qEACF52H,GAAO,gBAKT,GAAAlzB,OAAGkzB,EAAH,KACAl6B,OAAOoE,KAAKqa,GACTtY,IACC,SAAAwoJ,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBnwI,EAAOkwI,MAE9DtgJ,KAAK,MAGZysG,OAAQ,SAACd,EAAYvpF,EAAQnwB,EAAO4N,GAElC,IADsBqgB,SAASC,eAAe,kBAC1B,CAClB,IAAMqgI,EAAYtgI,SAAS9tB,cAAc,OA8BzC,GA7BAouJ,EAAUj4H,UAAV,iqBAAA5vB,OAQiBgzG,EARjB,yeAAAhzG,OAewBkH,EAAc0sG,SAASh4E,UAAU0tH,QAAQ1yC,SAfjE,iwBA0BArvF,SAASq2D,KAAKC,YAAYgqE,IAGrBtgI,SAASC,eAAe,uBAAwB,CACnD,IAAMuiI,EAAexiI,SAAS9tB,cAAc,SAC5CswJ,EAAatrJ,GAAK,sBAClBsrJ,EAAan6H,UAAb,qbAaArI,SAASq2D,KAAKC,YAAYksE,OAKlChU,cAAe,CACbrqH,SAAS,EACTkrF,SAAU,oCACVt7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENo8G,QAAS,WACT4wC,WAAY,MACZ9c,WAAY,gBACZz1B,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1Be,gBAAiB,CAAEm0C,uCAAwC,IAC3Dn2C,cAAe,SACbv6G,EACA4N,EACA0rG,EACAC,EACAC,GAEA,IAAMm3C,EAAc/iJ,EAAcovE,OAAOs8B,EAAUtvG,eAC7Cw4G,EAAgB99F,OAAOksI,mBACzBlsI,OAAOksI,mBAAmBpuC,cAC1B,KAEJ,OAAKmuC,EAAYlU,cAIV,CACL/kH,UAAW9pB,EAAckR,QAAQqjB,gBACjC3G,QAAS5tB,EAAckR,QAAQqjB,gBAC/B3f,SACEggG,GACoB,aAAlBA,GACA99F,OAAOksI,mBAAmBC,UAAUruC,EAAcl1G,eAChDoX,OAAOksI,mBAAmBC,UAC1BnsI,OAAOksI,mBAAmBpuC,cAAcl1G,eACxCkV,SACAkC,OAAOsd,SACb06G,YAAaiU,EAAYlU,cAAcC,YACvCC,cAAegU,EAAYlU,cAAcE,cACzCmU,yBAA0BH,EAAYlU,cAAcxjD,UACpD83D,oBAAqB,CAACJ,EAAYlU,cAAcxjD,WAChD+3D,gCAAgC,EAChCz3C,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cApBtB,MAuBXgB,OAAQ,SAACd,EAAYvpF,GACfzL,OAAO+3H,eAAiB/iC,IACtBvpF,IACFupF,EAAWu3C,sBAAwBzjJ,WAAW2iB,IAEhDzL,OAAO+3H,cAAcjiC,OAAOd,EAAY,WAI9Cw3C,UAAW,CACT9+H,SAAS,EACTkrF,SAAU,4BACVt7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENo8G,QAAS,YACT4wC,WAAY,MACZ9c,WAAY,gBACZz1B,iBAAkB,CAAC,UACnBE,gBAAiB,CACf,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OAEF21C,iBAAkB,CAEhB/+H,SAAS,EACTwI,gBAAiB,6CACjBw2H,eAAgB,CACd,CACE93G,aAAc,UACdp3C,KAAM,gBACNoB,KAAM,WAER,CACEg2C,aAAc,UACdp3C,KAAM,gBACNoB,KAAM,WAER,CACEg2C,aAAc,UACdp3C,KAAM,eACNoB,KAAM,WAER,CACEg2C,aAAc,UACdp3C,KAAM,eACNoB,KAAM,aAIZi5G,gBAAiB,CACf80C,iDAAkD,GAClDC,gDAAiD,CAC/C30C,cAAe1uF,SAASq2D,KACxBo4B,QAAS,SAAC18G,EAAO4N,EAAemtG,GAG9B,IADA,IAAM5tF,EAAUc,SAASsjI,iBAAiB,wBACjCrkJ,EAAI,EAAGA,EAAIigB,EAAQppB,OAAQmJ,IAClCigB,EAAQjgB,GAAGskJ,SASb,IADA,IAAMC,EAAUxjI,SAASsjI,iBAAiB,qBACjCrkJ,EAAI,EAAGA,EAAIukJ,EAAQ1tJ,OAAQmJ,IAClCukJ,EAAQvkJ,GAAGskJ,SAGb,IAAM17B,EAAW91H,EAAM81H,SACnB91H,EAAM81H,SADO,iBAAApvH,OAEI1G,EAAMgK,eAC3B,IAAKikB,SAASC,eAAe4nG,GAAW,CACtC,IAAM51H,EAAI+tB,SAAS9tB,cAAc,KACjCD,EAAEiF,GAAK2wH,EACP51H,EAAEgmB,KAAO60F,EAAaR,cAAcv6G,EAAO4N,GAC3C1N,EAAE8lB,OAAS,SACX9lB,EAAE+lB,IAAM,+BACR/lB,EAAE0I,UAAY,kDACd1I,EAAE6mB,MAAQ,kBACV7mB,EAAEkG,MAAQ,gBACV6nB,SAASq2D,KAAKC,YAAYrkF,OAKlCq6G,cAAe,SAACv6G,EAAO4N,GAAoC8E,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,OACnD6pB,EAAYv8B,EAAMu8B,UAAYv8B,EAAMu8B,UAAY,MAChDpe,EAAS,CACbuzI,KAAM,KACNpuJ,KAAM,OACN0+F,KAAM,SACNxgG,MAAO,cACPmwJ,iBAAiB,EAEjBC,aAAY,GAAAlrJ,OAAK61B,EAAL,KAAA71B,OAAkB1G,EAAMgK,eACpC+c,MAAK,QAAArgB,OAAU61B,EAAV,SAAA71B,OAA2B1G,EAAMgK,eACtC6nJ,YAAW,GAAAnrJ,OAAK61B,EAAL,KAAA71B,OAAkB1G,EAAMgK,eACnC8nJ,aAAc,6CACdhzI,QAC4C,IAA1ClR,EAAckR,QAAQqjB,gBAAwB,UAAY,QAK9D,MACE,GAAAz7B,OAHU,uCAGV,KACAhH,OAAOoE,KAAKqa,GACTtY,IACC,SAAAwoJ,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBnwI,EAAOkwI,MAE9DtgJ,KAAK,MAGZysG,OAAQ,SAACd,EAAYvpF,EAAQnwB,GAC3B,IAAM81H,EAAW91H,EAAM81H,SACnB91H,EAAM81H,SADO,iBAAApvH,OAEI1G,EAAMgK,eACrB9J,EAAI+tB,SAASC,eAAe4nG,GAC9B51H,GACFA,EAAE6xJ,UAgCRC,QAAS,CACP5/H,SAAS,EACTkrF,SAAU,8BACVt7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENo8G,QAAS,WACT4wC,WAAY,MACZ9c,WAAY,aACZz1B,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1Bn3E,IAAK,aACLk4E,gBAAiB,CACf01C,mDAAoD,IAEtD13C,cAAe,SACbv6G,EACA4N,EACA0rG,EACA44C,EACA14C,GAEA,MAAO,CACLn1E,IAAK,aACL29D,KAAM,MACNxwF,MAAOxR,EAAMkK,YAAYmD,QACzBkvB,UAAW,MACX21H,WAAYA,GAA0B,aACtC14C,QAASA,GAAoB,eAGjCgB,OAAQ,SAACd,EAAYvpF,EAAQnwB,GACvB0kB,OAAOytI,iBACLhiI,IACFupF,EAAWvpF,OAASA,EAAO3M,YAE7BkB,OAAOytI,eAAe33C,OAAOd,EAAY,WAI/C04C,MAAO,CACLhgI,SAAS,EACTkrF,SAAU,4BACVt7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENo8G,QAAS,WACT4wC,WAAY,MACZ9c,WAAY,aACZz1B,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1Bn3E,IAAK,aACLk4E,gBAAiB,CAAE81C,0CAA2C,IAC9D93C,cAAe,SACbv6G,EACA4N,EACA0rG,EACA44C,EACA14C,GAEA,MAAO,CACL84C,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1BloG,OAAQ,KACRmoG,uBAAwB,OAG5Bl4C,OAAQ,SAACd,EAAYvpF,EAAQnwB,GAC3B,GAAI0kB,OAAOiuI,YAAa,CACtB,IAAMC,EAAS,eACf,IAAK3kI,SAASC,eAAe0kI,GAAS,CACpC,IAAMC,EAAuB5kI,SAAS9tB,cAAc,OACpD0yJ,EAAqB1tJ,GAAKytJ,EAC1B3kI,SAASq2D,KAAKC,YAAYsuE,GAG5BnuI,OAAOiuI,YAAY5mI,QAAQ+mI,IACzBp5C,EACAzrF,SAASC,eAAe0kI,UASvBhlJ,6gBCzlGAq5I,EAAA,CAAE55I,QAptCD,6CAotCUw6B,IAntCd,CACV,CACEsR,UAAY,EACZC,OAAU,GACVl3C,KAAQ,OACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,WAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,UACRoB,KAAQ,WAEV,CACEpB,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,UACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,SAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,wBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,UACRoB,KAAQ,YAGZpB,KAAQ,uBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,cACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,qBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,MACRoB,KAAQ,WAEV,CACEpB,KAAQ,MACRoB,KAAQ,WAEV,CACEpB,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,eACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,SAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,eACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,WACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,QACRoB,KAAQ,YAGZpB,KAAQ,sBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,UACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,iBACRoB,KAAQ,YAGZpB,KAAQ,kBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,eACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,cACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,kBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,8BACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,qBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,aACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,QACRoB,KAAQ,YAGZpB,KAAQ,YACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,sBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,gBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,SACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,WAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,UACRoB,KAAQ,YAGZpB,KAAQ,sBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,iBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,MACRoB,KAAQ,WAEV,CACEpB,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,WACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,SAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,cACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,qBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,aACRoB,KAAQ,WAEV,CACEpB,KAAQ,WACRoB,KAAQ,WAEV,CACEpB,KAAQ,cACRoB,KAAQ,YAGZpB,KAAQ,QACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,kBACRoB,KAAQ,YAGZpB,KAAQ,mBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,sBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,UACRoB,KAAQ,YAGZpB,KAAQ,qBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,WAEV,CACEpB,KAAQ,GACRoB,KAAQ,WAEV,CACEpB,KAAQ,GACRoB,KAAQ,WAEV,CACEpB,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,QACRoB,KAAQ,WAEV,CACEpB,KAAQ,UACRoB,KAAQ,YAGZpB,KAAQ,YACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,eACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,uBACRoB,KAAQ,YAGZpB,KAAQ,wBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,oBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,QACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,qBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,2BACRoB,KAAQ,YAGZpB,KAAQ,oBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,GACVl3C,KAAQ,WACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,SAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnBl2C,KAAQ,YAEV,CACE81C,OAAU,CACR,CACEl3C,KAAQ,cACRoB,KAAQ,WAEV,CACEpB,KAAQ,eACRoB,KAAQ,WAEV,CACEpB,KAAQ,qBACRoB,KAAQ,WAEV,CACEpB,KAAQ,+BACRoB,KAAQ,WAEV,CACEpB,KAAQ,QACRoB,KAAQ,UAEV,CACEpB,KAAQ,UACRoB,KAAQ,UAEV,CACEpB,KAAQ,YACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,cACbzgB,gBAAmB,aACnBl2C,KAAQ,eAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,sBACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,cACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,iBACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,SACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,aACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,aACRoB,KAAQ,YAGZpB,KAAQ,OACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,WACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,eACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,SACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,WACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,eACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,iBACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,SACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,QACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,WACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,cACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,iBACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,cACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,aACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,WACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,cACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,mBACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,cACRoB,KAAQ,YAGZpB,KAAQ,kBACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,kBACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,kBACRoB,KAAQ,YAGZpB,KAAQ,kBACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,WACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,WACRoB,KAAQ,YAGZpB,KAAQ,WACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,iBACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,iBACRoB,KAAQ,YAGZpB,KAAQ,iBACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,uBACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,uBACRoB,KAAQ,YAGZpB,KAAQ,6BACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,2BACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,2BACRoB,KAAQ,YAGZpB,KAAQ,mBACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,QACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,eACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,mBACRoB,KAAQ,YAGZpB,KAAQ,kBACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,QACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,OACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,UACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,OACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,KACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,WACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACEyvJ,WAAa,EACb35G,OAAU,CACR,CACE45G,SAAW,EACX9wJ,KAAQ,QACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,UACRoB,KAAQ,WAEV,CACE0vJ,SAAW,EACX9wJ,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,WACR+3D,UAAa,qEACb32D,KAAQ,SAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,aACRoB,KAAQ,YAGZpB,KAAQ,OACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,SACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,mBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,SACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,cACRoB,KAAQ,YAGZpB,KAAQ,cACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,WACRoB,KAAQ,WAEV,CACEpB,KAAQ,cACRoB,KAAQ,YAGZpB,KAAQ,oBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,YAEV,CACE61C,UAAY,EACZC,OAAU,CACR,CACEl3C,KAAQ,WACRoB,KAAQ,WAEV,CACEpB,KAAQ,cACRoB,KAAQ,WAEV,CACEpB,KAAQ,mBACRoB,KAAQ,YAGZpB,KAAQ,kBACRm3C,QAAW,CACT,CACEn3C,KAAQ,GACRoB,KAAQ,YAGZi2C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnBl2C,KAAQ,gCC/sCGmgF,EAAA,CAAEp2E,QAFD,6CAEUw6B,IADd,CAAC,CAACsR,UAAW,EAAKC,OAAS,GAAGl3C,KAAO,OAAOm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,YAAYi2C,SAAU,EAAMC,gBAAkB,OAAOl2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,GAAGl3C,KAAO,OAAOm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,UAAUm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,SAASi2C,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,SAASoB,KAAO,YAAYpB,KAAO,WAAWm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAKC,OAAS,GAAGl3C,KAAO,cAAcm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,YAAYi2C,SAAU,EAAMC,gBAAkB,OAAOl2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,eAAem3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,SAASi2C,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAKC,OAAS,GAAGl3C,KAAO,WAAWm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,YAAYi2C,SAAU,EAAMC,gBAAkB,OAAOl2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,QAAQoB,KAAO,YAAYpB,KAAO,UAAUm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAKC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,YAAYm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,YAAYi2C,SAAU,EAAMC,gBAAkB,OAAOl2C,KAAO,YAAY,CAAC61C,UAAW,EAAKC,OAAS,GAAGl3C,KAAO,UAAUm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,SAASi2C,SAAU,EAAMC,gBAAkB,OAAOl2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,aAAaoB,KAAO,YAAYpB,KAAO,eAAem3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAKC,OAAS,GAAGl3C,KAAO,QAAQm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,YAAYi2C,SAAU,EAAMC,gBAAkB,OAAOl2C,KAAO,YAAY,CAAC61C,UAAW,EAAKC,OAAS,GAAGl3C,KAAO,SAASm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,YAAYi2C,SAAU,EAAMC,gBAAkB,OAAOl2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,WAAWm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,SAASi2C,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,GAAGl3C,KAAO,QAAQm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAKC,OAAS,GAAGl3C,KAAO,YAAYm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,YAAYi2C,SAAU,EAAMC,gBAAkB,OAAOl2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,UAAUm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,SAASi2C,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC61C,UAAW,EAAKC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,YAAYm3C,QAAU,CAAC,CAACn3C,KAAO,GAAGoB,KAAO,YAAYi2C,SAAU,EAAMC,gBAAkB,OAAOl2C,KAAO,YAAY,CAAC61C,UAAW,EAAMC,OAAS,CAAC,CAACl3C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOm3C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,YAAY,CAAC81C,OAAS,CAAC,CAACl3C,KAAO,UAAUoB,KAAO,YAAYi2C,SAAU,EAAMC,gBAAkB,aAAal2C,KAAO,eAAe,CAACyvJ,WAAY,EAAM35G,OAAS,CAAC,CAAC45G,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAM9wJ,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOoB,KAAO,SAAS,CAACyvJ,WAAY,EAAM35G,OAAS,CAAC,CAAC45G,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAM9wJ,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOoB,KAAO,SAAS,CAACyvJ,WAAY,EAAM35G,OAAS,CAAC,CAAC45G,SAAU,EAAK9wJ,KAAO,YAAYoB,KAAO,YAAYpB,KAAO,kBAAkBoB,KAAO,SAAS,CAACyvJ,WAAY,EAAM35G,OAAS,CAAC,CAAC45G,SAAU,EAAK9wJ,KAAO,QAAQoB,KAAO,YAAYpB,KAAO,cAAcoB,KAAO,SAAS,CAACyvJ,WAAY,EAAK35G,OAAS,CAAC,CAAC45G,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,UAAU,CAAC0vJ,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAM9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAM9wJ,KAAO,MAAMoB,KAAO,UAAUpB,KAAO,UAAUoB,KAAO,SAAS,CAACyvJ,WAAY,EAAM35G,OAAS,CAAC,CAAC45G,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAM9wJ,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,WAAWoB,KAAO,SAAS,CAACyvJ,WAAY,EAAM35G,OAAS,CAAC,CAAC45G,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAK9wJ,KAAO,MAAMoB,KAAO,WAAW,CAAC0vJ,SAAU,EAAM9wJ,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,WAAWoB,KAAO,iFCc3kL6M,EAAkB,CAEtBqyI,EAAE,CACAvF,KAAK,CACHj+B,IAAI,CACFn3E,IAAIm3E,EACJxtG,MAAM,MACN9N,SAAS,GACT0uB,SAAQ,EACR6gI,mBAAkB,EAClB5wJ,MAAM,oBACNgL,QAAQ,6CACRqd,QAAQ,CACN42H,iBAAiB,KAEnBsM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACR1hJ,MAAM,OAER6gB,KAAK,CACHwV,IAAIu9G,EACJ5zI,MAAM,eACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE66B,IAAIwzG,EACJn5I,KAAK,OACLkwB,SAAQ,EACR5gB,MAAM,QACNnE,QAAQ,6CACR3J,SAAS,GACT87B,UAAU,OAOlB89G,KAAK,IAIPoF,MAAM,CACJzF,KAAK,CACHj+B,IAAI,CACFn3E,IAAIm3E,EACJxtG,MAAM,MACN9N,SAAS,GACT0uB,SAAQ,EACR6gI,mBAAkB,EAClB5wJ,MAAM,oBACNgL,QAAQ,6CACRqd,QAAQ,CACN42H,iBAAiB,KAEnBsM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACR1hJ,MAAM,OAER6gB,KAAK,CACHwV,IAAIu9G,EACJ5zI,MAAM,eACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE66B,IAAIwzG,EACJn5I,KAAK,SACLkwB,SAAQ,EACR5gB,MAAM,QACNnE,QAAQ,6CACR3J,SAAS,GACT87B,UAAU,OAmDlB89G,KAAK,IAIPrC,IAAI,CACFgC,KAAK,CACHj+B,IAAI,CACFn3E,IAAIm3E,EACJxtG,MAAM,MACN9N,SAAS,GACT0uB,SAAQ,EACR6gI,mBAAkB,EAClB5wJ,MAAM,oBACNgL,QAAQ,6CACRqd,QAAQ,CACN42H,iBAAiB,KAEnBsM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACR1hJ,MAAM,OAER6gB,KAAK,CACHwV,IAAIu9G,EACJ5zI,MAAM,eACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE66B,IAAIsrH,EACJzvJ,SAAS,GACTxB,KAAK,QACLkwB,SAAQ,EACR5gB,MAAM,QACNguB,UAAU,CACRmzB,aAAa,CACXzwD,KAAK,qBACLic,OAAO,KAGX9Q,QAAQ,8CAEV,CACEw6B,IAAIwzG,EACJn5I,KAAK,SACLkwB,SAAQ,EACR5gB,MAAM,QACNnE,QAAQ,6CACR3J,SAAS,GACT87B,UAAU,MAMhBq7G,KAAK,CACHhzG,IAAIgzG,EACJn3I,SAAS,EACT8N,MAAM,OACN4gB,SAAQ,EACR6gI,mBAAkB,EAClB5wJ,MAAM,qBACNgL,QAAQ,6CACRqd,QAAQ,CACN42H,iBAAiB,KAEnBsM,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZmE,UAAU,CACR1hJ,MAAM,QAER6gB,KAAK,CACHwV,IAAIu9G,EACJ5zI,MAAM,gBACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE66B,IAAIsrH,EACJzvJ,SAAS,GACTxB,KAAK,QACLkwB,SAAQ,EACR5gB,MAAM,SACNguB,UAAU,CACRmzB,aAAa,CACXzwD,KAAK,qBACLic,OAAO,KAGX9Q,QAAQ,8CAEV,CACEw6B,IAAIwzG,EACJn5I,KAAK,SACLkwB,SAAQ,EACR5gB,MAAM,SACNnE,QAAQ,6CACR3J,SAAS,GACT87B,UAAU,MAMhBygH,KAAK,CACHp4G,IAAIo4G,EACJzuI,MAAM,OACN9N,SAAS,GACT0uB,SAAQ,EACR6gI,mBAAkB,EAClB5wJ,MAAM,oBACNgL,QAAQ,6CACRqd,QAAQ,CACN42H,iBAAiB,KAEnBsM,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZmE,UAAU,CACR1hJ,MAAM,QAER6gB,KAAK,CACHwV,IAAIu9G,EACJ5zI,MAAM,gBACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE66B,IAAIsrH,EACJzvJ,SAAS,GACTxB,KAAK,QACLkwB,SAAQ,EACR5gB,MAAM,SACNguB,UAAU,CACRmzB,aAAa,CACXzwD,KAAK,qBACLic,OAAO,KAGX9Q,QAAQ,8CAEV,CACEw6B,IAAIwzG,EACJ33I,SAAS,GACT0uB,SAAQ,EACR5gB,MAAM,QACNtP,KAAK,SACLmL,QAAQ,6CACRmyB,UAAU,OAOlB89G,KAAK,IAKP+E,GAAG,CACDpF,KAAK,CACHj+B,IAAI,CACFn3E,IAAIm3E,EACJxtG,MAAM,MACN9N,SAAS,GACT0uB,SAAQ,EACR6gI,mBAAkB,EAClB5wJ,MAAM,oBACNgL,QAAQ,6CACRqd,QAAQ,CACN42H,iBAAiB,KAEnBsM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACR1hJ,MAAM,OAER6gB,KAAK,CACHwV,IAAIu9G,EACJ5zI,MAAM,eACNnE,QAAQ,8CAEVL,UAAU,CACR,CACEtJ,SAAS,GACT8N,MAAM,OACN4gB,SAAQ,EACRyV,IAAIurH,EAAOvrH,IACX3lC,KAAK,WACLmL,QAAQ,6CACRmyB,UAAU,CACRmzB,aAAa,CACXzwD,KAAK,qBACLic,OAAO,QAMjB08H,KAAM,CACJhzG,IAAKgzG,EACLrpI,MAAO,OACP9N,SAAU,EACV0uB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,oBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbmE,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXL,UAAW,CACT,CACEtJ,SAAU,GACV0uB,SAAS,EACT5gB,MAAO,QACPq2B,IAAKurH,EAAOvrH,IACZ3lC,KAAM,WACNmL,QAAS,6CACTmyB,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,SAOpBm/H,KAAM,IAIRmF,KAAM,CACJxF,KAAM,CACJj+B,IAAK,CACHn3E,IAAKm3E,EACLxtG,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,oBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACT1hJ,MAAO,OAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,gHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,UACPtP,KAAM,iBACNmL,QAAS,8CAEX2+F,aAAc,CACZ,CACE9pG,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,WACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,OAKhBmc,kBAAmB,CACjB9oB,MAAO,UACPq2B,IAAKi/G,EACL5kJ,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACEolB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZ3lC,KAAM,WACNmL,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACE0pB,IAAKyrH,EACLlhI,SAAS,EACTlwB,KAAM,UACNmL,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACE0pB,IAAKwzG,EACLn5I,KAAM,OACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqI,IAAKwzG,EACLn5I,KAAM,SACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,SACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqI,IAAK0rH,EACLrxJ,KAAM,MACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqI,IAAKwrH,EACLnxJ,KAAM,OACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,QAMlB08H,KAAM,CACJhzG,IAAKgzG,EACLn3I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEX2+F,aAAc,CACZ,CACEnkE,IAAKwrH,EACLnxJ,KAAM,OACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,YACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE9K,KAAM,WACNkwB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZx6B,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACEjc,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqI,IAAKwzG,EACL33I,SAAU,GACV0uB,SAAS,EACTlwB,KAAM,SACNsP,MAAO,UACPnE,QAAS,6CACTmyB,UAAW,IAIb,CACEt9B,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,SACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,QAMlB0hI,KAAM,CACJn8I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE9K,KAAM,WACNkwB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZx6B,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACEjc,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqI,IAAKwzG,EACL33I,SAAU,GACVxB,KAAM,SACNkwB,SAAS,EACT5gB,MAAO,UACPnE,QAAS,6CACTmyB,UAAW,MAMjBugH,KAAM,CACJr8I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnBO,oBAAoB,EACpBnxJ,MAAO,qBAEPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE9K,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEt9B,KAAM,SACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,UACP9N,SAAU,GACV87B,UAAW,MAMjBsgH,KAAM,CACJp8I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnBO,oBAAoB,EACpBnxJ,MAAO,sBACPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE9K,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqI,IAAKwzG,EACLjpH,SAAS,EACTlwB,KAAM,SACNsP,MAAO,UACPnE,QAAS,6CACT3J,SAAU,GACV87B,UAAW,MAMjBygH,KAAM,CACJp4G,IAAKo4G,EACLzuI,MAAO,OACP9N,SAAU,GACV0uB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,oBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbmE,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXL,UAAW,CACT,CACEolB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZ3lC,KAAM,WACNmL,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACE0pB,IAAKwzG,EACLn5I,KAAM,SACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,MAMjBwgH,KAAM,CACJt8I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnB5wJ,MAAO,oBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACEolB,SAAS,EACT5gB,MAAO,QACPq2B,IAAKurH,EAAOvrH,IACZ3lC,KAAM,WACNmL,QAAS,6CACT3J,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACE0pB,IAAKyrH,EACL5vJ,SAAU,GACV8N,MAAO,QACP4gB,SAAS,EACTlwB,KAAM,UACNmL,QAAS,6CACTmyB,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACE0pB,IAAKwzG,EACLn5I,KAAM,OACNkwB,SAAS,EACT5gB,MAAO,QACPnE,QAAS,6CACT3J,SAAU,GACV87B,UAAW,IAIb,CACEqI,IAAKwzG,EACLjpH,SAAS,EACTlwB,KAAM,SACNsP,MAAO,UACPnE,QAAS,6CACT3J,SAAU,GACV87B,UAAW,MAMjB2gH,IAAK,CACHz1H,QAAS,GACTlZ,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXg2G,YAAa,GACboV,mBAAmB,EACnB5wJ,MAAO,mBACPF,KAAM,wBACNkL,QAAS,6CACTglB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXL,UAAW,CACT,CACE66B,IAAKsrH,EACLzvJ,SAAU,GACV0uB,SAAS,EACTlwB,KAAM,QACNsP,MAAO,QACPguB,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,KAGZ9Q,QAAS,8CAEX,CACEw6B,IAAK4rH,EACL/vJ,SAAU,GACVxB,KAAM,OACNsP,MAAO,OACP4gB,SAAS,EACToN,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,KAGZ9Q,QAAS,gDAIfmyG,IAAK,CACH90F,QAAS,GACTlZ,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXg2G,YAAa,GACboV,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTglB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXL,UAAW,CACT,CACE66B,IAAKsrH,EACLzvJ,SAAU,GACV0uB,SAAS,EACTlwB,KAAM,QACNsP,MAAO,QACPguB,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,KAGZ9Q,QAAS,8CAEX,CACEw6B,IAAK4rH,EACL/vJ,SAAU,GACVxB,KAAM,OACNsP,MAAO,OACP4gB,SAAS,EACToN,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,KAGZ9Q,QAAS,iDAKjBiwI,KAAM,CACJt+B,IAAK,CACHn3E,IAAKm3E,EACLt7G,SAAU,GACV8N,MAAO,MACP4gB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,oBACPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACT1hJ,MAAO,OAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,cACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,UACPtP,KAAM,gBACNmL,QAAS,8CAEX2+F,aAAc,CACZ,CACE9pG,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,WACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,UACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE9K,KAAM,WACNkwB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZx6B,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACEjc,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,IAIb,CACEt9B,KAAM,MACNkwB,SAAS,EACTyV,IAAK0rH,EACLlmJ,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,IAIb,CACEt9B,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,QAMlB08H,KAAM,CACJhzG,IAAKgzG,EACLn3I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,iBACNmL,QAAS,8CAEX2+F,aAAc,CACZ,CACE9pG,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,YACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE9K,KAAM,WACNkwB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZx6B,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACEjc,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEt9B,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,SACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,QAMlB0hI,KAAM,CACJn8I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,iBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,UACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE9K,KAAM,WACNkwB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZx6B,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACEjc,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,QAQrBigG,EAAG,CACDwd,KAAM,CACJj+B,IAAK,CACHn3E,IAAKm3E,EACLxtG,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,oBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACT1hJ,MAAO,OAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,gHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,UACPtP,KAAM,iBACNmL,QAAS,8CAEX2+F,aAAc,CACZ,CACE9pG,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,WACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,OAKhBmc,kBAAmB,CACjB9oB,MAAO,UACPq2B,IAAKi/G,EACL5kJ,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE6zF,UAAW,IACXzuE,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZ3lC,KAAM,WACNmL,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACE0pB,IAAKyrH,EACLlhI,SAAS,EACTlwB,KAAM,UACNmL,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACE0iF,UAAW,IACXh5D,IAAKwzG,EACLn5I,KAAM,OACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqhE,UAAW,IACXh5D,IAAKwzG,EACLn5I,KAAM,SACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,SACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqI,IAAK0rH,EACLrxJ,KAAM,MACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqhE,UAAW,IACXh5D,IAAKwrH,EACLnxJ,KAAM,OACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,QAMlB08H,KAAM,CACJhzG,IAAKgzG,EACLn3I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEX2+F,aAAc,CACZ,CACEnkE,IAAKwrH,EACLnxJ,KAAM,OACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,YACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE6zF,UAAW,EACXzuE,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZ3lC,KAAM,WACNmL,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACE0iF,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqhE,UAAW,IACXh5D,IAAKwzG,EACL33I,SAAU,GACV0uB,SAAS,EACTlwB,KAAM,SACNsP,MAAO,UACPnE,QAAS,6CACTmyB,UAAW,IAIb,CACEqhE,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,SACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,QAMlB0hI,KAAM,CACJn8I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE6zF,UAAW,IACX3+F,KAAM,WACNkwB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZx6B,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACE0iF,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqhE,UAAW,IACXh5D,IAAKwzG,EACL33I,SAAU,GACVxB,KAAM,SACNkwB,SAAS,EACT5gB,MAAO,UACPnE,QAAS,6CACTmyB,UAAW,MAMjBugH,KAAM,CACJr8I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnBO,oBAAoB,EACpBnxJ,MAAO,qBAEPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE6zF,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqhE,UAAW,IACX3+F,KAAM,SACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,UACP9N,SAAU,GACV87B,UAAW,MAMjBsgH,KAAM,CACJp8I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnBO,oBAAoB,EACpBnxJ,MAAO,sBACPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE6zF,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqhE,UAAW,IACXh5D,IAAKwzG,EACLjpH,SAAS,EACTlwB,KAAM,SACNsP,MAAO,UACPnE,QAAS,6CACT3J,SAAU,GACV87B,UAAW,MAMjBygH,KAAM,CACJp4G,IAAKo4G,EACLzuI,MAAO,OACP9N,SAAU,GACV0uB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,oBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbmE,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXL,UAAW,CACT,CACE6zF,UAAW,IACXzuE,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZ3lC,KAAM,WACNmL,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACE0iF,UAAW,IACXh5D,IAAKwzG,EACLn5I,KAAM,SACNkwB,SAAS,EACT/kB,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,MAMjBwgH,KAAM,CACJt8I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnB5wJ,MAAO,oBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,gBACPnE,QAAS,8CAEXgtB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE6zF,UAAW,IACXzuE,SAAS,EACT5gB,MAAO,QACPq2B,IAAKurH,EAAOvrH,IACZ3lC,KAAM,WACNmL,QAAS,6CACT3J,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACE0pB,IAAKyrH,EACL5vJ,SAAU,GACV8N,MAAO,QACP4gB,SAAS,EACTlwB,KAAM,UACNmL,QAAS,6CACTmyB,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACE0iF,UAAW,IACXh5D,IAAKwzG,EACLn5I,KAAM,OACNkwB,SAAS,EACT5gB,MAAO,QACPnE,QAAS,6CACT3J,SAAU,GACV87B,UAAW,IAIb,CACEqhE,UAAW,IACXh5D,IAAKwzG,EACLjpH,SAAS,EACTlwB,KAAM,SACNsP,MAAO,UACPnE,QAAS,6CACT3J,SAAU,GACV87B,UAAW,MAMjB2gH,IAAK,CACHz1H,QAAS,GACTlZ,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXg2G,YAAa,GACb6V,mBAAmB,EACnBT,mBAAmB,EACnB5wJ,MAAO,mBACPF,KAAM,wBACNkL,QAAS,6CACTglB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXL,UAAW,CAiBT,CACE66B,IAAK4rH,EACL/vJ,SAAU,GACVxB,KAAM,OACNsP,MAAO,OACP4gB,SAAS,EACToN,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,KAGZ9Q,QAAS,8CAEX,CACEw6B,IAAKwzG,EACL33I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACTlwB,KAAM,SACNs9B,UAAW,GAEXnyB,QAAS,gDAIfmyG,IAAK,CACH90F,QAAS,GACTlZ,MAAO,MACP9N,SAAU,GACV0uB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXg2G,YAAa,GACb6V,mBAAmB,EACnBT,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTglB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXL,UAAW,CACT,CACE66B,IAAKsrH,EACLzvJ,SAAU,GACV0uB,SAAS,EACTlwB,KAAM,QACNsP,MAAO,QACPguB,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,KAGZ9Q,QAAS,8CAEX,CACEw6B,IAAK4rH,EACL/vJ,SAAU,GACVxB,KAAM,OACNsP,MAAO,OACP4gB,SAAS,EACToN,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,KAGZ9Q,QAAS,8CAEX,CACEw6B,IAAKwzG,EACL33I,SAAU,GACV8N,MAAO,OACP4gB,SAAS,EACToN,UAAW,GACXt9B,KAAM,SACNmL,QAAS,iDAKjBiwI,KAAM,CACJt+B,IAAK,CACHn3E,IAAKm3E,EACLt7G,SAAU,GACV8N,MAAO,MACP4gB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,oBACPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACT1hJ,MAAO,OAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,cACPnE,QAAS,8CAEXs8H,WAAY,CACVv3G,SAAS,EACTuhI,yBAA0B,oCAC1BC,0BAA2B,sCAE7Bv5H,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,UACPtP,KAAM,gBACNmL,QAAS,8CAEX2+F,aAAc,CACZ,CACE9pG,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,WACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,UACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE6zF,UAAW,IACXzuE,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZ3lC,KAAM,WACNmL,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACE0iF,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,IAIb,CACEt9B,KAAM,MACNkwB,SAAS,EACTyV,IAAK0rH,EACLlmJ,QAAS,6CACTmE,MAAO,OACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqhE,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,QAMlB08H,KAAM,CACJhzG,IAAKgzG,EACLn3I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACT6gI,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTqd,QAAS,CACP42H,iBAAkB,KAEpBsM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXs8H,WAAY,CACVv3G,SAAS,EACTuhI,yBAA0B,oCAC1BC,0BAA2B,sCAE7Bv5H,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,iBACNmL,QAAS,8CAEX2+F,aAAc,CACZ,CACE9pG,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,YACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,WACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE6zF,UAAW,EACX3+F,KAAM,WACNkwB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZx6B,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACE0iF,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,IAIb,CACEqhE,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwrH,EACLhmJ,QAAS,6CACTmE,MAAO,SACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,QACNic,OAAQ,QAMlB0hI,KAAM,CACJn8I,SAAU,EACV8N,MAAO,OACP4gB,SAAS,EACTyV,IAAK47C,EAAM57C,IACXorH,mBAAmB,EACnB5wJ,MAAO,qBACPgL,QAAS,6CACTugJ,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACT1hJ,MAAO,QAET6gB,KAAM,CACJwV,IAAKu9G,EACL5zI,MAAO,eACPnE,QAAS,8CAEXs8H,WAAY,CACVv3G,SAAS,EACTuhI,yBAA0B,oCAC1BC,0BAA2B,sCAE7Bv5H,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKw+G,EACL70I,MAAO,WACPtP,KAAM,iBACNmL,QAAS,8CAEXitB,kBAAmB,CACjBuN,IAAKi/G,EACLt1I,MAAO,UACPtP,KAAM,kBACNmL,QAAS,6CACTmtB,aAAc,GACdgF,UAAW,CACT,CACExxB,MAAO,UACP9L,KAAM,wBAKd8K,UAAW,CACT,CACE6zF,UAAW,IACX3+F,KAAM,WACNkwB,SAAS,EACTyV,IAAKurH,EAAOvrH,IACZx6B,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,qBACNic,OAAQ,MAId,CACEjc,KAAM,UACNkwB,SAAS,EACTyV,IAAKyrH,EACLjmJ,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,CACTmzB,aAAc,CACZzwD,KAAM,aACNic,OAAQ,MAId,CACE0iF,UAAW,IACX3+F,KAAM,OACNkwB,SAAS,EACTyV,IAAKwzG,EACLhuI,QAAS,6CACTmE,MAAO,QACP9N,SAAU,GACV87B,UAAW,SAURrvB,0+jBC1uEA0jJ,6MA3VbtsJ,MAAQ,2EAGN,OACEmB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAWC,IAAOlE,gBAAiB25G,GAAI,CAAC,EAAE,GAAIx+G,GAAI,CAAC,EAAE,GAAI+hB,GAAI,CAAC,MAAO,QACxEnZ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAWC,IAAOjE,iBACvB8D,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKyF,SAAU,WAAYC,OAAQ,IACjC3F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,SAAUD,WAAY,SAAUuF,SAAU,CAAC,OAAQ,QAAS1F,GAAI,OAAQ29G,GAAI,EAAGj1G,UAAW,SAAUwY,GAAI,CAAC,MAAO,QACnInZ,EAAAxI,EAAAC,cAACwI,EAAA,EAAQmrJ,GAAT,CAAYpoJ,WAAY,YAAa+rG,WAAY,QAASnpG,GAAI,QAAS7L,SAAU,CAAC,QAAQ,GAAI4G,UAAW,SAAUhH,MAAO,SAA1H,oBAGAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAQorJ,GAAT,CAAYvxJ,WAAY,MAAOi1G,WAAY,CAAC,QAAS,OAAQh1G,SAAU,CAAC,EAAE,GAAI4G,UAAW,SAAUhH,MAAO,SAA1G,+BAIFqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,SAAUD,WAAY,SAAUuF,SAAU,CAAC,OAAQ,QAAS1F,GAAI,OAAQ0I,UAAW,UACtGX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAWC,IAAO9D,cAAejE,WAAY,SAAUjB,MAAO,OAAQ2uB,UAAW,CAAC,OAAO,QAAS/tB,gBAAiB,QAAS4B,MAAO,YAAaf,EAAG,CAAC,EAAE,GAAI0N,UAAW,wCAAyCzN,aAAc,OAAQ6E,MAAO,CAACgI,SAAS,aACxP1F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,kBAAmBm5G,GAAI,GAC9B51G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM21G,GAAI,GAAV,wZAGA51G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM21G,GAAI,GAAV,sgBAGA51G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM21G,GAAI,GAAV,ikBAGA51G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM21G,GAAI,GAAV,iuBAGA51G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,+mCAKFD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,kBAAmBvF,GAAI,CAAC,EAAE,IACjC8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,sBAIAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,sGAIA8I,EAAAxI,EAAAC,cAAA,MAAIyI,UAAWC,IAAO/D,MACpB4D,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,4CADF,yKAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,iDADF,mjBAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,wCADF,sLAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,mDADF,4IAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,sDADF,mHAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,yDADF,6JAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,yCADF,mOAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,2CADF,wJAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,wCADF,iFAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,4CADF,4CAGAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,0DADF,sJAMJuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,sBAAuBvF,GAAI,CAAC,EAAE,IACrC8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,mCAIAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,mjBAKF8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,WAAYvF,GAAI,CAAC,EAAE,IAC1B8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,gBAKFiG,EAAAxI,EAAAC,cAAA,MAAIyI,UAAWC,IAAO/D,MACpB4D,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,+BAA8BuI,EAAAxI,EAAAC,cAAA,WADhC,qTAIAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,2BAA0BuI,EAAAxI,EAAAC,cAAA,WAD5B,kGAIAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,2CAA0CuI,EAAAxI,EAAAC,cAAA,WAD5C,qzBAIAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,kDAAiDuI,EAAAxI,EAAAC,cAAA,WADnD,uMAIAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,iEAAgEuI,EAAAxI,EAAAC,cAAA,WADlE,oWAIAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,4CAA2CuI,EAAAxI,EAAAC,cAAA,WAD7C,8EAGEuI,EAAAxI,EAAAC,cAAA,MAAIyI,UAAWC,IAAO/D,KAAMsB,MAAO,CAAC4tJ,UAAU,gBAC5CtrJ,EAAAxI,EAAAC,cAAA,0GACAuI,EAAAxI,EAAAC,cAAA,kMACAuI,EAAAxI,EAAAC,cAAA,4KAGJuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,kDAAiDuI,EAAAxI,EAAAC,cAAA,WADnD,iFAGEuI,EAAAxI,EAAAC,cAAA,MAAIyI,UAAWC,IAAO/D,KAAMsB,MAAO,CAAC4tJ,UAAU,gBAC5CtrJ,EAAAxI,EAAAC,cAAA,mNACAuI,EAAAxI,EAAAC,cAAA,oKACAuI,EAAAxI,EAAAC,cAAA,gQACAuI,EAAAxI,EAAAC,cAAA,wOACAuI,EAAAxI,EAAAC,cAAA,0LACAuI,EAAAxI,EAAAC,cAAA,2JACAuI,EAAAxI,EAAAC,cAAA,qLACAuI,EAAAxI,EAAAC,cAAA,mEACAuI,EAAAxI,EAAAC,cAAA,uVACAuI,EAAAxI,EAAAC,cAAA,qNACAuI,EAAAxI,EAAAC,cAAA,0OACAuI,EAAAxI,EAAAC,cAAA,yHAIJuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,+CAA8CuI,EAAAxI,EAAAC,cAAA,WADhD,sCAGEuI,EAAAxI,EAAAC,cAAA,MAAIyI,UAAWC,IAAO/D,KAAMsB,MAAO,CAAC4tJ,UAAU,gBAC5CtrJ,EAAAxI,EAAAC,cAAA,0LACAuI,EAAAxI,EAAAC,cAAA,+PACAuI,EAAAxI,EAAAC,cAAA,mUACAuI,EAAAxI,EAAAC,cAAA,yIACAuI,EAAAxI,EAAAC,cAAA,6QARJ,uXAYAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,iDAAgDuI,EAAAxI,EAAAC,cAAA,WADlD,sCAGEuI,EAAAxI,EAAAC,cAAA,MAAIyI,UAAWC,IAAO/D,KAAMsB,MAAO,CAAC4tJ,UAAU,gBAC5CtrJ,EAAAxI,EAAAC,cAAA,0HACAuI,EAAAxI,EAAAC,cAAA,4GAGJuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,oCAAmCuI,EAAAxI,EAAAC,cAAA,WADrC,80BAMFuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,iBAAkBvF,GAAI,CAAC,EAAE,IAChC8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,qBAGAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,sLAKF8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,qBAAsBvF,GAAI,CAAC,EAAE,IACpC8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,yBAGAiG,EAAAxI,EAAAC,cAAA,MAAIyI,UAAWC,IAAO/D,MACpB4D,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,iEAAgEuI,EAAAxI,EAAAC,cAAA,WADlE,sjBAIAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,8EAA6EuI,EAAAxI,EAAAC,cAAA,WAD/E,snCAIAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,iCAAgCuI,EAAAxI,EAAAC,cAAA,WADlC,wVAOJuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,iCAAkCvF,GAAI,CAAC,EAAE,IAChD8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,uCAGAiG,EAAAxI,EAAAC,cAAA,MAAIyI,UAAWC,IAAO/D,MACpB4D,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,0CAAyCuI,EAAAxI,EAAAC,cAAA,WAD3C,uRAIAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,mCAAkCuI,EAAAxI,EAAAC,cAAA,WADpC,mOAIAuI,EAAAxI,EAAAC,cAAA,UACEuI,EAAAxI,EAAAC,cAAA,+BAA8BuI,EAAAxI,EAAAC,cAAA,WADhC,sRAOJuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,qBAAsBvF,GAAI,CAAC,EAAE,IACpC8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,yBAGAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,sqBAKF8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,kBAAmBvF,GAAI,CAAC,EAAE,IACjC8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,sBAGAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,klCAKF8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,0BAA2BvF,GAAI,CAAC,EAAE,IACzC8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,+BAGAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,4rBAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,+lBAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,2ZAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,weAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,sWAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,gjCAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,8mBAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,6MAKF8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,0CAA2CvF,GAAI,CAAC,EAAE,IACzD8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,sDAGAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,wwCAKF8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,0CAA2CvF,GAAI,CAAC,EAAE,IACzD8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,+BAGAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,yyBAKF8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,iCAAkCvF,GAAI,CAAC,EAAE,IAChD8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,0CAGAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,woBAIA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,62DAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,40BAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,2xBAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,4bAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,mPAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,2aAGA8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,giCAKF8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,gBAAiBvF,GAAI,CAAC,EAAE,IAC/B8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,qBAGAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,mzBAKF8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKxD,GAAI,gBAAiBvF,GAAI,CAAC,EAAE,IAC/B8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7rH,MAAO,YAAagH,UAAW,OAAQ7G,WAAY,EAAGi1G,WAAY,UAAWh1G,SAAU,CAAC,EAAE,IAAtG,qBAGAiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM/I,GAAI,GAAV,62DASV8I,EAAAxI,EAAAC,cAACg+G,EAAA,EAAD,cAtVUv7G,6BCDHqxJ,EAAA,CACbttI,YAAa,CAAC,OAAQ,QAEtB9K,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrC6K,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERrb,MAAO,CACLsb,MAAO,2CACPrb,UAAW,qCACXsb,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCvnB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BynB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,oBAAqB,qBAClCC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACP7gB,SAAU,IAEZxF,OAAQ,CACNsmB,QAAS,UACTG,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAK/L,KAAK,GAC1BqM,OAAQ,UACRN,KAAM,UACNO,KAAM,UACNC,YAAa,UACbC,QAAS,UACTC,UAAW,UACX5M,UAAW,UACX6M,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,UACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cACbC,MAAO,UAIP/mB,KAAM,UACN2C,OAAQ,UACRskB,QAAS,UACTC,MAAO,UACPC,YAAa,UACbC,cAAe,UACfC,gBAAiB,UACjBC,SAAU,UACVC,aAAc,UACd3Q,gBAAiB,UACjB4Q,qBAAsB,UACtBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACV7jB,QAAS,UACTugB,QAAS,UACTtlB,OAAQ,UACRmE,KAAM,UACN2kB,QAAS,UACTC,QAAS,UACThT,OAAQ,UACRnM,OAAQ,UACRof,OAAQ,UACRC,UAAW,UACXC,WAAY,UACZK,YAAa,UACbC,WAAY,UACZC,WAAY,UACZC,aAAc,UACdN,eAAgB,UAChBC,eAAgB,UAChBF,gBAAiB,UACjBQ,aAAc,UACdC,WAAY,UACZN,gBAAiB,iCACjBxpB,aAAc,CACZgQ,OAAQ,CACN+Z,KAAM,UACNC,KAAM,UACNwoI,KAAM,UACNvoI,MAAO,UACP/pB,OAAQ,UACRgqB,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTC,QAAS,UACTnB,QAAS,UACToB,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,gBAAiB,WAEnBxqB,SAAU,CACR8pB,KAAM,UACNC,KAAM,UACNwoI,KAAM,UACNvoI,MAAO,UACP/pB,OAAQ,UACRgqB,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTE,QAAS,UACTD,QAAS,UACTnB,QAAS,UACTsB,SAAU,UACVD,SAAU,UACVE,eAAgB,UAChBC,gBAAiB,WAEnBxa,OAAQ,CACNya,UAAW,UACXC,QAAS,UACTC,OAAQ,YAGZC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZzE,KAAM,CACJ5lB,MAAO,UACPqK,YAAa,UACbjM,gBAAiB,WAEnBosB,QAAS,CACPxqB,MAAOsqB,YAAM,GAAKjD,IAAMzB,MACxBxnB,gBAAiBmsB,YAAK,GAAKlD,IAAMzB,MACjCvb,YAAagd,IAAMzB,MAErB6E,QAAS,CACPzqB,MAAOsqB,YAAM,GAAKI,IAAO9E,MACzBxnB,gBAAiBmsB,YAAK,GAAKG,IAAO9E,MAClCvb,YAAaqgB,IAAO9E,MAEtB+E,OAAQ,CACN3qB,MAAOsqB,YAAM,GAAKM,IAAIhF,MACtBxnB,gBAAiBmsB,YAAK,GAAKK,IAAIhF,MAC/Bvb,YAAaugB,IAAIhF,MAEnBiF,KAAM,CACJ7qB,MAAO,UACPqK,YAAa,UACbjM,gBAAiB,YAGrB0sB,QAAS,CACPpF,QAAS,CACP1lB,MAAO2lB,IAAKrlB,KACZlC,gBAAiBunB,IAAKC,KAEtBmF,eAAgBpF,IAAKC,KACrBoF,mBAAoBrF,IAAKrlB,MAE3B2qB,OAAQ,CACNjrB,MAAOwmB,IAAWD,MAClByE,mBAAoBxE,IAAWD,OAEjCiE,QAAS,CACPO,eAAgB1D,IAAMzB,KACtBoF,mBAAoB3D,IAAM/mB,MAE5BqqB,OAAQ,CACNI,eAAgBH,IAAIhF,KACpBoF,mBAAoBJ,IAAItqB,OAG5B4qB,YAAa,CACXC,MAAO,CACL/qB,SAAU,UACVX,OAAQ,OACRoF,SAAU,OACVumB,QAAS,UAEXC,OAAQ,CACNjrB,SAAU,OACVX,OAAQ,OACRoF,SAAU,QAEZymB,MAAO,CACLlrB,SAAU,SACVX,OAAQ,OACRoF,SAAU,OACV3F,aAAc,gLChPC4yJ,cAEnB,SAAAA,EAAYC,GAAQ,IAAAnvJ,EAAAvF,OAAAixB,EAAA,EAAAjxB,CAAAK,KAAAo0J,GAAA,IACLE,EAA+BD,EAApCE,IAAY56C,EAAwB06C,EAAxB16C,WAAe66C,EADjB70J,OAAA80J,EAAA,EAAA90J,CAC0B00J,EAD1B,6BAElBnvJ,EAAAvF,OAAAopH,EAAA,EAAAppH,CAAAK,KAAAL,OAAAqpH,EAAA,EAAArpH,CAAAy0J,GAAAx6G,KAAA55C,KAAMw0J,KAEDpd,MAAQ,KACblyI,EAAKovJ,MAAQA,EACbpvJ,EAAKy0G,WAAaA,EANAz0G,6LAUblF,KAAKo3I,QACRp3I,KAAKo3I,MAAQ,IAAIp3I,KAAKs0J,MAAM,CAC1BI,eAAgB,2BAGd10J,KAAKo3I,MAAMud,8BACX30J,KAAKo3I,MAAMwd,4RAIV,IAAI3zI,QAAJ,eAAAtQ,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAa,SAAAsQ,EAAOC,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OAClBgQ,EAAQle,EAAKi0I,MAAM30H,UADD,wBAAAlB,EAAA/O,SAAA4O,EAAAphB,SAAb,gBAAA0hB,EAAAC,GAAA,OAAAhR,EAAA+B,MAAA1S,KAAA2S,YAAA,kLAKQ8P,yFACQziB,KAAKo3I,MAAMyd,0BAA5B9lG,0CAES/uD,KAAKo3I,MAAM0d,iBAAiB,CACvCC,SAAShmG,EAASgmG,SAClBC,WAAWjmG,EAASimG,qFAGjB,0QAIDh1J,KAAKo3I,MAAM6d,iJAGLl2I,GACZpf,OAAAsiB,EAAA,EAAAtiB,QAAAqpH,EAAA,EAAArpH,CAAAy0J,EAAAn1D,WAAA,0BAAAj/F,MAAA45C,KAAA55C,KAA8B,CAAEk1J,iBAAiB,WA3CTC,KCAvBC,cAEnB,SAAAA,EAAYf,GAAQ,IAAAnvJ,EAAAvF,OAAAixB,EAAA,EAAAjxB,CAAAK,KAAAo1J,GAAA,IACLC,EAAgChB,EAArCE,IAAgBx1I,EAAqBs1I,EAArBt1I,QAAYy1I,EADlB70J,OAAA80J,EAAA,EAAA90J,CAC2B00J,EAD3B,0BAElBnvJ,EAAAvF,OAAAopH,EAAA,EAAAppH,CAAAK,KAAAL,OAAAqpH,EAAA,EAAArpH,CAAAy1J,GAAAx7G,KAAA55C,KAAMw0J,KAEDrd,UAAY,KACjBjyI,EAAKmwJ,UAAYA,EACjBnwJ,EAAK6Z,QAAUA,EANG7Z,mMAUblF,KAAKm3I,YACRn3I,KAAKm3I,UAAY,IAAIn3I,KAAKq1J,UAAUr1J,KAAK+e,mBAEpB/e,KAAKs1J,0BAAtB7yI,0CAEEA,EAAS8yI,yCACR9yI,uRAKF,IAAIxB,QAAJ,eAAAtQ,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAa,SAAAsQ,EAAOC,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OAClBgQ,EAAQle,EAAKg0I,UAAUme,eADL,wBAAA/zI,EAAA/O,SAAA4O,EAAAphB,SAAb,gBAAA0hB,EAAAC,GAAA,OAAAhR,EAAA+B,MAAA1S,KAAA2S,YAAA,kLAKQ8P,6EACXA,kCACqBA,EAAS+yI,0BAA1BC,YACUA,EAASzxJ,gDAChByxJ,EAAS,oCAGb,yQAIgBz1J,KAAKs1J,0BAAtB7yI,0CAEEA,EAASizI,0CACRjzI,2IAIG1D,GACZ/e,KAAK21J,YAAY,CACfpB,IAAKv0J,KAAKq1J,UACVt2I,YAEFpf,OAAAsiB,EAAA,EAAAtiB,QAAAqpH,EAAA,EAAArpH,CAAAy1J,EAAAn2D,WAAA,0BAAAj/F,MAAA45C,KAAA55C,KAA8B,CAAEk1J,iBAAiB,WAnDLC,eCA3BS,cAEnB,SAAAA,EAAYC,GAAkB,IAAA3wJ,EAAA,OAAAvF,OAAAixB,EAAA,EAAAjxB,CAAAK,KAAA41J,IAC5B1wJ,EAAAvF,OAAAopH,EAAA,EAAAppH,CAAAK,KAAAL,OAAAqpH,EAAA,EAAArpH,CAAAi2J,GAAAljJ,MAAA1S,KAAS2S,aACJmjJ,YAAa,EAClB5wJ,EAAK2wJ,iBAAmBA,EACxB3wJ,EAAKud,SAAW,IAAIvd,EAAK2wJ,iBACzB3wJ,EAAK6wJ,eALuB7wJ,yLASvBlF,KAAKyiB,WACRziB,KAAKyiB,SAAW,IAAIziB,KAAK61J,mBAGvB71J,KAAKyiB,yCACDziB,KAAKyiB,SAASuzI,2CACbh2J,KAAKyiB,6PAKVziB,KAAKyiB,yCACMziB,KAAKyiB,SAASwzI,ySAKzBj2J,KAAKyiB,yCACMziB,KAAKyiB,SAAS6yI,0SAKzBt1J,KAAKyiB,yCACMziB,KAAKyiB,SAASyzI,ySAKzBl2J,KAAKyiB,yCACMziB,KAAKyiB,SAAS09C,gTAKzBngE,KAAKyiB,yCACiBziB,KAAKyiB,SAAS0zI,0BAAhCA,SACNn2J,KAAK81J,YAAa,oBACXK,mPAKLn2J,KAAKyiB,gCACPziB,KAAKyiB,SAAS2zI,+BACPp2J,KAAKyiB,mHAxD+B0yI,KCA5BkB,cAEnB,SAAAA,EAAYhC,GAAQ,IAAAnvJ,EAAAvF,OAAAixB,EAAA,EAAAjxB,CAAAK,KAAAq2J,GAAA,IACLC,EAAiEjC,EAAtEE,IAAiBxf,EAAqDsf,EAArDtf,QAASwhB,EAA4ClC,EAA5CkC,UAAW96H,EAAiC44H,EAAjC54H,QAAS+6H,EAAwBnC,EAAxBmC,WAAehC,EADnD70J,OAAA80J,EAAA,EAAA90J,CAC4D00J,EAD5D,6DAElBnvJ,EAAAvF,OAAAopH,EAAA,EAAAppH,CAAAK,KAAAL,OAAAqpH,EAAA,EAAArpH,CAAA02J,GAAAz8G,KAAA55C,KAAMw0J,KAED/xI,SAAW,KAChBvd,EAAKuxJ,WAAa,KAClBvxJ,EAAK6vI,QAAUA,EACf7vI,EAAKu2B,QAAUA,EACfv2B,EAAKqxJ,UAAYA,EACjBrxJ,EAAKsxJ,WAAaA,EAClBtxJ,EAAKoxJ,WAAaA,EAVApxJ,+LAcblF,KAAKy2J,aACRz2J,KAAKy2J,WAAa,IAAIz2J,KAAKs2J,WAAW,CACpCI,UAAU,EACV3hB,QAAS/0I,KAAK+0I,QACdwhB,UAAWv2J,KAAKu2J,UAChBC,WAAYx2J,KAAKw2J,gBAIf/zI,EAAWziB,KAAKs1J,+CAEd7yI,EAAS8yI,yCACR9yI,2IAQT,OAHKziB,KAAKyiB,WACRziB,KAAKyiB,SAAWziB,KAAKy2J,WAAWE,iBAAiB32J,KAAKu2J,UAAWv2J,KAAKy7B,UAEjEz7B,KAAKyiB,oFAGGA,6EACXA,kCAEqBA,EAASiJ,KAAK,mCAA/B+pI,YACUA,EAASzxJ,gDAChByxJ,EAAS,oCAGb,8PAIDhzI,EAAWziB,KAAKs1J,sCAEpBt1J,KAAKy2J,WAAWG,sBACVn0I,EAASo0I,wCACRp0I,2IAIG1D,GACZ/e,KAAK21J,YAAY,CACf52I,UACAw1I,IAAKv0J,KAAKs2J,WACVvhB,QAAS/0I,KAAK+0I,QACdt5G,QAASz7B,KAAKy7B,QACd86H,UAAWv2J,KAAKu2J,UAChBC,WAAYx2J,KAAKw2J,aAEnB72J,OAAAsiB,EAAA,EAAAtiB,QAAAqpH,EAAA,EAAArpH,CAAA02J,EAAAp3D,WAAA,0BAAAj/F,MAAA45C,KAAA55C,KAA8B,CAAEk1J,iBAAiB,WApEJC,gBCA5B2B,eAEnB,SAAAA,EAAYzC,GAAQ,IAAAnvJ,EAAAvF,OAAAixB,EAAA,EAAAjxB,CAAAK,KAAA82J,GAAA,IACLC,EAA6D1C,EAAlEE,IAA4CyC,GAAsB3C,EAAtC7jH,eAAsC6jH,EAAtB2C,UAAaxC,EAD/C70J,OAAA80J,EAAA,EAAA90J,CACwD00J,EADxD,4CAElBnvJ,EAAAvF,OAAAopH,EAAA,EAAAppH,CAAAK,KAAAL,OAAAqpH,EAAA,EAAArpH,CAAAm3J,GAAAl9G,KAAA55C,KAAMw0J,KAED/xI,SAAW,KAChBvd,EAAK6xJ,sBAAwBA,EAC7B7xJ,EAAK8xJ,SAAWA,EANE9xJ,yLAUblF,KAAKyiB,WACRziB,KAAKyiB,SAAW,IAAIziB,KAAK+2J,sBAAsB,CAC7CC,SAASh3J,KAAKg3J,aAIdh3J,KAAKyiB,yCACDziB,KAAKyiB,SAAS8yI,yCACbv1J,KAAKyiB,mRAKPziB,KAAKyiB,0PAIRziB,KAAKyiB,gCACPziB,KAAKyiB,SAASo0I,0BACP72J,KAAKyiB,mHA/BkC0yI,KCelD8B,GAMEC,aANFD,kBACAE,GAKED,aALFC,qBACAC,GAIEF,aAJFE,gBACAC,GAGEH,aAHFG,gBACAC,GAEEJ,aAFFI,mBACAC,GACEL,aADFK,gBAGIjzH,GAAMwwG,8/CAEN0iB,GAAgBlzH,GAAImzH,gCACpBC,GAAiBpzH,GAAIqzH,8BACrBnnH,GAAiB3iC,IAAckR,QAAQqjB,gBACvCw1H,GAAkBtzH,GAAIuzH,gCACtBC,GAAexzH,GAAIyzH,yBACnBC,GAAgB1zH,GAAI2zH,yBAEpBC,GAAuB,GAE7Bv4J,OAAOoE,KAAK8J,IAAckR,QAAQwjB,UAAUygH,OAAO1mH,KAAKr4B,QAAQ,SAAC0zB,EAAU5xB,GACzE4xB,EAAY5lB,SAAS4lB,GACrBugI,GAAqBvgI,GAAa9pB,IAAckR,QAAQwjB,UAAUygH,OAAO1mH,IAAI3E,GAAW2M,GAAI2+G,uBAG9F,IAAMkV,GAAW,IAAIlB,GAAkB,CACrCl6H,kBAAmBlvB,IAAckR,QAAQ+jI,kBAGrCsV,GAAS,IAAIjB,GAAqB,CACtCkB,YAAaH,GAAqB1nH,MAI9B8nH,GAAS,IAAIlB,GAAgB,CACjC7C,IAAKgE,IACLL,wBACA1nH,kBACAgnH,iBACAE,oBAGIc,GAAS,IAAInB,GAAgB,CACjCa,wBACA1nH,oBAGIioH,GAAgB,IAAI3B,GAAuB,CAC/CtmH,kBACA0nH,wBACA3D,IAAKwC,IACLC,SAAS1yH,GAAI2+G,qBACbyV,OAAQ,qCAGJC,GAAY,IAAIrB,GAAmB,CACvC/C,IAAKqE,IACLpuG,OAAQotG,GACRiB,sBAAsB,IAGlBC,GAAS,IAAIvB,GAAgB,CACjChD,IAAKwE,IACLC,OAAQlB,GACR/4I,QAASi5I,KAGL3C,GAAY,IAAID,EAAmB,CACvCb,IAAK0E,IACLl6I,QAASlR,IAAckR,QAAQ6uC,kBAAkBpd,IAAgBruC,KAAKoL,gBAGlEkpJ,GAAa,IAAIJ,EAAoB,CACzC9B,IAAK+B,IACLI,UAAU,EACVj7H,QAAS+U,GACTukG,QAASlnI,IAAcknI,QACvBwhB,UAAW2B,GAAqB1nH,IAChCgmH,WAAY,8CAGRlC,GAAQ,IAAIF,EAAe,CAC/BG,IAAK2E,IACLv/C,WAAW,CACTw/C,SAAU,aACVC,eAAe,EACfr6I,QAAS,CACPs6I,KAAMxrJ,IAAckR,QAAQ6uC,kBAAkBpd,IAAgBruC,KAAKoL,cACnEkuB,QAAS+U,GACT8zG,YAAaz2I,IAAckR,QAAQ6uC,kBAAkBpd,IAAgBruC,KAAKoL,eAE5E+rJ,iBAAiB,KAMN/iB,GAAA,CACb4hB,YACAC,UACAK,iBACAzhB,OANa,IAAI4e,EAAoBC,qBAOrCY,cACAkC,aACAG,UACAzD,aACAf,SACAgE,UACAE,mFCtFae,oLAxBX,OACE5wJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKvC,MAVa,CAClBgI,SAAU,QACVtB,OAAQ,EACRC,KAAM,EACNF,MAAO,EACPhN,MAAO,OACPwO,OAAQ,MAIiB5N,gBAAiB,uBAAwBa,EAAG,GACnEoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKrH,EAAG,GACNoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,UAAUG,MAAM,OAAOD,KAAK,QAEzCsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,UACnB2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMnG,WAAY,QAAlB,0CAGAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,+CAC0C,IACxCD,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CAAWxf,MAAO,CAAE+8G,cAAe,eAAnC,IACIpjH,KAAKC,MAAM8e,QAAQiZ,QAAQ71B,KAD/B,KAEa,IAJf,sEArBqBk8G,IAAMx7G,WCexB22J,oLAZX,OACE7wJ,EAAAxI,EAAAC,cAAA,YAC8C,IAA1CJ,KAAKC,MAAM8e,QAAQ06I,oBAAgCz5J,KAAKC,MAAM6e,MAC9DnW,EAAAxI,EAAAC,cAACs5J,GAAD,CACE36I,QAAS/e,KAAKC,MAAM8e,kBANNs/F,IAAMx7G,iFCiIjB82J,8MA/HbC,cAAgB,WACd,OACEjxJ,EAAAxI,EAAAC,cAACuI,EAAAxI,EAAM02G,SAAP,KACEluG,EAAAxI,EAAAC,cAACwI,EAAA,EAAQorJ,GAAT,CACEtxJ,SAAU,EACVD,WAAY,EACZi1G,WAAY,UACZ52G,GAAI,GAJN,uCASC+4J,KAAWC,iBACVnxJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,GAAV,8GAE6C,IAC3C6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,qBACLa,MAAM,oBACNf,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,iCACLa,MAAM,gBACNf,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,+BACLa,MAAM,kBACNf,OAAO,SAASC,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BAvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,GAAV,qGAE0C,IACxC6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,8BACLa,MAAM,yBACNf,OAAO,SAASC,IAAI,gCAHtB,SAHF,IAUI,IACFvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,2BACLa,MAAM,2BACNf,OAAO,SAASC,IAAI,gCAHtB,WAXF,IAkBI,IACFvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,iCACLa,MAAM,yBACNf,OAAO,SAASC,IAAI,gCAHtB,SAnBF,OA0BO,IACLvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,iCACLa,MAAM,0BACNf,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCAvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CAAWirG,MAAI,GAAf,0BADF,2DAE8C,IAC5CnoH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,qBACLa,MAAM,oBACNf,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,iCACLa,MAAM,gBACNf,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,+BACLa,MAAM,kBACNf,OAAO,SAASC,IAAI,gCAHtB,mBAnBF,gFAmCR,OACEvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAD,CAAWjL,UAAWj+G,KAAKC,MAAMy6G,YAC/B/xG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACGn+G,KAAK45J,0BAxHev7C,IAAMx7G,WCiDxBk3J,oLAxCX,OACEpxJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMrH,EAAG,EAAG+E,SAAU,SACpBqC,EAAAxI,EAAAC,cAACwI,EAAA,EAAOzC,KAAR,CACE6zJ,UAAQ,EACR53J,KAAM,QACNE,MAAO,YACP+L,SAAU,WACVxB,IAAK,EACLC,MAAO,EACPzD,GAAI,EACJhI,GAAI,EACJuE,QAAS5F,KAAKC,MAAMy6G,aAGtB/xG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,SAAUC,eAAgB,iBAC7C0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM3H,eAAgB,SAAUH,GAAI,GAClC6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,UAAUG,MAAM,OAAOD,KAAK,QAGzCsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAQorJ,GAAT,CAAYlzJ,GAAI,GAAhB,uBAEA6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,GAAV,4GAKA6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpBvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgB53J,KAAK,SAArB,qCAjCcg8G,IAAMx7G,WC0CnBq3J,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApBx1I,OAAOsd,SAChBk4H,EAAoD,qBAA/Bx1I,OAAOsd,SAASm4H,WACL,qBAAhBz1I,OAAO7F,OACvBq7I,EAAgE,qBAA3Cx1I,OAAO7F,KAAK6c,gBAAgBy+H,YAA8Bz1I,OAAO7F,KAAK6c,gBAAgBy+H,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhB11I,OAAO7F,MAA+D,qBAAhC6F,OAAO7F,KAAK6c,kBACL,qBAAxChX,OAAO7F,KAAK6c,gBAAgB2+H,SAA2B31I,OAAO7F,KAAK6c,gBAAgB2+H,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhB51I,OAAO7F,MAA+D,qBAAhC6F,OAAO7F,KAAK6c,kBACI,qBAAjDhX,OAAO7F,KAAK6c,gBAAgB4+H,kBAAoC51I,OAAO7F,KAAK6c,gBAAgB4+H,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1B71I,OAAO81I,eAM9B,MAJ+B,qBAApB91I,OAAOsd,WAChBu4H,EAAgD,qBAA7B71I,OAAOsd,SAASy4H,UAA4B/1I,OAAOsd,SAASy4H,UAG1EF,GAETG,QAAS,WACP,MAAO,cAActhB,KAAKkX,UAAUC,YAGtCoK,UAAW,WACT,IAAMA,IAAY,WAAWvhB,KAAKkX,UAAUC,WAE5C,OAAOoK,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmBxhB,KAAKkX,UAAUC,YAAe7rI,OAAOm2I,UAI1D,OAAOD,IC0BIE,8MA7DbnB,cAAgB,WACd,OACEjxJ,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACEx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAQorJ,GAAT,CAAYlzJ,GAAI,GAAhB,iBACiBoE,EAAKjF,MAAM8e,QAAQ6Y,SAASz1B,KAD7C,cAC8D,IAC3D+3J,GAAYC,cAAZ,uBAGHxxJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,GAAV,iCACiC,IAC/B6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CAAWxf,MAAO,CAAE+8G,cAAe,eAChCl+G,EAAKjF,MAAM8e,QAAQ6Y,SAASz1B,MAClB,IAJf,wCAKmC,IACjCwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CAAWxf,MAAO,CAAE+8G,cAAe,eAChC,IACAl+G,EAAKjF,MAAM8e,QAAQiZ,QAAQ71B,MACjB,IATf,YAaC+3J,GAAYC,gBAAkBa,KAAYlB,iBACzCnxJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKgmB,GAAI,UAAWrtB,EAAG,EAAGkH,QAAS,CAAC,OAAQ,UAC1CE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKyF,SAAU,WAAYvO,MAAO,OAChC6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAM,UAGlBsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMnG,WAAY,GAAlB,oCACAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMnG,WAAY,GAAlB,sCAMJ,KAEJkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKH,QAAS,CAAC,QAAS,SACtBE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQhD,QAASV,EAAKjF,MAAMy6G,WAAY56G,MAAO,GAA/C,iFASN,OACE6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAD,CAAWjL,UAAWj+G,KAAKC,MAAMy6G,YAC/B/xG,EAAAxI,EAAAC,cAACuI,EAAAxI,EAAM02G,SAAP,KACG72G,KAAK45J,0BAtDcv7C,IAAMx7G,kDCiDvBo4J,OA3Df,SAA6Bh7J,GAC3B,OACE0I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAUhL,OAAX,CAAkBl3F,MAAO,6CAA8C+pG,SAAU,wDAAyDmqC,UAAW,0EACrJvyJ,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACEx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,CAAC,SAAU,OAC9BC,eAAgB,gBAChBH,GAAI,CAAC,EAAG,IACR6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKoX,KAAM,MAAOlgB,MAAO,EAAGuJ,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIlN,GAAI,GACtDsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM3H,eAAgB,SAAUsN,GAAI,GAClC5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAK,cACLG,MAAM,UACND,KAAK,SAGTsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAASlG,SAAU,EAAG4G,UAAW,UAAjC,oBACAX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAU,EAAG4G,UAAW,UAA9B,6FAKFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKoX,KAAM,MAAOlgB,MAAO,EAAGuJ,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIlN,GAAI,GACtDsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM3H,eAAgB,SAAUsN,GAAI,GAClC5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAK,qBACLG,MAAM,UACND,KAAK,SAGTsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAASlG,SAAU,EAAG4G,UAAW,UAAjC,0BACAX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAU,EAAG4G,UAAW,UAA9B,6DAIFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKoX,KAAM,MAAOlgB,MAAO,EAAGuJ,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIlN,GAAI,GACtDsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM3H,eAAgB,SAAUsN,GAAI,GAClC5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAK,iBACLG,MAAM,UACND,KAAK,QAEPsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAK,gBACLG,MAAM,UACND,KAAK,SAGTsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAASlG,SAAU,EAAG4G,UAAW,UAAjC,wBACAX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAU,EAAG4G,UAAW,UAA9B,qGC1CN2Z,GAAY,WAAc,QAAA6T,EAAAnkB,UAAA3O,OAAV/D,EAAU,IAAA82B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAV/2B,EAAU+2B,GAAArkB,UAAAqkB,IAEjB,SAASmkI,GAAsBl7J,GAC5C,IAAMm7J,EAAUC,2BAEXD,EAAQlkD,QAAWkkD,EAAQ39I,MAErB29I,EAAQ39I,MACjBwF,GAAU,gBAAiBm4I,GAE3Bn4I,GAAU,kBAAmBm4I,GAJ7Bn4I,GAAU,kBAAmBm4I,GAO/B,IAAME,EAAY,eAAA3qJ,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAG,SAAA6P,EAAO8hG,EAActgH,GAArB,IAAAo5J,EAAA,OAAAvqI,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cACfkqJ,EAAmC,aAAlB94C,EAA+BtgH,EAAOsgH,EACvDt+F,eACFA,aAAaoxC,QAAQ,iBAAkBgmG,GACvCp3I,aAAaoxC,QAAQ,gBAAiBktD,IAGpCxiH,EAAMq7J,cAA8C,oBAAvBr7J,EAAMq7J,cACrCr7J,EAAMq7J,aAAa74C,EAAc84C,GAIK,oBAA7Bt7J,EAAMu7J,oBACfv7J,EAAMu7J,qBAbW36I,EAAAe,OAAA,SAgBZ6gG,GAhBY,wBAAA5hG,EAAArO,SAAAmO,EAAA3gB,SAAH,gBAAA0hB,EAAAC,GAAA,OAAAhR,EAAA+B,MAAA1S,KAAA2S,YAAA,GAoBZ8oJ,EAAc,eAAA3nJ,EAAAnU,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAG,SAAAsQ,IAAA,OAAA4P,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OACrB+pJ,EAAQK,iBACJx7J,EAAMq7J,cAA8C,oBAAvBr7J,EAAMq7J,cACrCr7J,EAAMq7J,aAAa,SAAS,UAHT,wBAAA/5I,EAAA/O,SAAA4O,EAAAphB,SAAH,yBAAA8T,EAAApB,MAAA1S,KAAA2S,YAAA,GAUdgoJ,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBkB,EAAaxB,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BsB,IAAiBplB,GAAWS,OAAOv0H,SAASm5I,KAC5CrB,EAAmBL,GAAYK,mBAC/BsB,EAAwBH,GAAcf,GAAWD,GAAYH,GAAoBF,EAEjFyB,EAAoB77J,EAAM67J,kBAC1BC,EAAe97J,EAAM87J,aAEvBxlB,GAAWuiB,SACTiD,GACFxlB,GAAWuiB,OAAOl+I,QAAU27H,GAAWuiB,OAAOl+I,SAAW,GACzD27H,GAAWuiB,OAAOl+I,QAAQohJ,uBAAwB,IAElDzlB,GAAWuiB,OAAOl+I,QAAU27H,GAAWuiB,OAAOl+I,SAAW,GACzD27H,GAAWuiB,OAAOl+I,QAAQohJ,uBAAwB,IAItD,IAAIC,EAAsBt8J,OAAOoE,KAAKwyI,IAAYhlI,OAAO,SAAAwmB,GAAC,MAAU,WAANA,IAO9D,GALI+jI,IACFG,EAAsBA,EAAoB1qJ,OAAO,SAAAwkB,GAAC,OAA4F,IAAxF+lI,EAAkBh2J,IAAI,SAACmF,GAAQ,OAAOA,EAAEsC,gBAAkBgP,QAAQwZ,EAAExoB,kBAIxHouJ,EAAa,CACf,IAAMO,EAAgBD,EAAoB1/I,QAAQ,YAElD0/I,EAAoB7yG,OAAO8yG,EAAc,GAEzC,IAAMC,EAAcF,EAAoB1/I,QAAQ,UAChD0/I,EAAoB7yG,OAAO+yG,EAAY,GAEvCF,EAAoB34F,QAAQ,cACvB,CACL,IAAM64F,EAAcF,EAAoB1/I,QAAQ,UAEhD0/I,EAAoB7yG,OAAO+yG,EAAY,GAGzC,IAAM/uI,EAAU6uI,EAAoBn2J,IAAK,SAAC28G,EAAc18G,GACtD,OAAQ08G,GACN,IAAK,WACH,GAAIo5C,EAAuB,CACzB,IAAI15J,EAAO,KACPu5J,EACFv5J,EAAO,WACEw4J,EACTx4J,EAAO,QACEu4J,EACTv4J,EAAO,SACEo4J,EACTp4J,EAAO,WACEk4J,IACTl4J,EAAO,eAGT,IAAMi6J,EAAgBvuJ,IAAc0oI,WAAWp0I,EAAKoL,eACpD,GAAI6uJ,GAAiBA,EAAc/pI,QAAQ,CACzC,IAAMgqI,EAAaD,EAAch6J,KAAOg6J,EAAch6J,KAAnC,GAAAuE,OAA6CxE,EAAKoL,cAAlD,QACnB,OACE5E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACP+G,IAAG,UAAAF,OAAYxE,GACflB,eAAgB,gBAChBoF,MAAO,CACL2Z,KAAK,UAEPhf,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAAC4rH,GAAA,EAAD,CACE1mH,YAAa,CACXC,OAAO,GAET23G,QAAS/6G,EACTH,UAAU,EACVlC,MAAO,CAAC,EAAE,KACVmC,WAAY,CAACnC,MAAM,OAAOiC,OAAO,QACjCw7G,SAAQ,qBAAA52G,OAAuB01J,GAC/B57J,YAAWd,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAG,SAAAC,IAAA,OAAAigB,EAAA7wB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBiqJ,EAAa74C,EAActgH,GAA7C,cAAAgP,EAAAyQ,OAAA,SAAAzQ,EAAAiD,MAAA,wBAAAjD,EAAAqB,SAAAzB,EAAA/Q,SACdgxI,WAAaorB,GAAiBA,EAAcprB,WAAaorB,EAAcprB,WAA1D,iBAAArqI,OAAwFxE,KAEvGwG,EAAAxI,EAAAC,cAAC4rH,GAAA,EAAD,CACE1mH,YAAa,CACXC,OAAO,GAETvD,UAAU,EACVlC,MAAO,CAAC,EAAE,KACVo9G,QAAS,gBACTK,SAAQ,wBACRyzB,WAAY,4BACZ/uI,WAAY,CAACnC,MAAM,OAAOiC,OAAO,QACjCtB,YAAc,SAAAqG,GAAC,OAAI7G,EAAMwmD,kBAAiB,OAKlD,OAAO,KAEP,IAAM21G,EAAgBvuJ,IAAc0oI,WAAW9zB,EAAcl1G,eAC7D,OACE5E,EAAAxI,EAAAC,cAAC4rH,GAAA,EAAD,CACE1mH,YAAa,CACXC,OAAO,GAETvD,UAAU,EACVk7G,QAAS,iBACTr2G,IAAG,UAAAF,OAAY87G,GACfxgH,WAAY,CAACnC,MAAM,OAAOiC,OAAO,QACjCw7G,SAAQ,uCACR98G,YAAWd,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAG,SAAAiD,IAAA,OAAAid,EAAA7wB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA5C,KAAA,EAAkBiqJ,EAAa74C,GAA/B,cAAAxuG,EAAA2N,OAAA,SAAA3N,EAAAG,MAAA,wBAAAH,EAAAzB,SAAAuB,EAAA/T,SACdgxI,WAAaorB,GAAiBA,EAAcprB,WAAaorB,EAAcprB,WAA1D,iCACbsrB,YAAcr8J,EAAM+B,SAAW,CAACf,eAAe,aAAa+e,KAAK,UAAY,CAAC/e,eAAe,aAAa+e,KAAK,WAIvH,QACE,IAAMo8I,EAAgBvuJ,IAAc0oI,WAAW9zB,EAAcl1G,eAC7D,GAAI6uJ,GAAiBA,EAAc/pI,QAAQ,CACzC,IAAMgqI,EAAaD,EAActlB,UAAYslB,EAActlB,UAAaslB,EAAch6J,KAAOg6J,EAAch6J,KAAnC,GAAAuE,OAA6C87G,EAAcl1G,cAA3D,QAEpE2vG,EAAUk/C,EAAcj6J,KAAOi6J,EAAcj6J,KAAOsgH,EACxD,OACE95G,EAAAxI,EAAAC,cAAC4rH,GAAA,EAAD,CACE1mH,YAAa,CACXC,OAAO,GAETvD,UAAU,EACVk7G,QAASA,EACTr2G,IAAG,UAAAF,OAAY87G,GACflF,SAAQ,qBAAA52G,OAAuB01J,GAC/Bp6J,WAAY,CAACnC,MAAM,OAAOiC,OAAO,QACjCtB,YAAWd,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAG,SAAAqR,IAAA,OAAA6O,EAAA7wB,EAAA+Q,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,cAAAgR,EAAAhR,KAAA,EAAkBiqJ,EAAa74C,GAA/B,cAAApgG,EAAAT,OAAA,SAAAS,EAAAjO,MAAA,wBAAAiO,EAAA7P,SAAA2P,EAAAniB,SACdgxI,WAAaorB,GAAiBA,EAAcprB,WAAaorB,EAAcprB,WAA1D,iBAAArqI,OAAwF87G,GACrG65C,YAAcr8J,EAAM+B,SAAW,CAACf,eAAe,aAAa+e,KAAK,UAAY,CAAC/e,eAAe,aAAa+e,KAAK,WAIrH,OAAO,QAIb,OACErX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK9I,MAAO,CAAC,IACX6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,SAAUD,WAAY,UACxCq6J,EAAQ39I,OACP9U,EAAAxI,EAAAC,cAACwI,EAAA,EAAKrH,EAAN,CAAQ+H,UAAU,UAAlB,+DAEEX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMud,KAAK,uBAAuBF,OAAO,SAASC,IAAI,gCAAtD,sBAFF,KAMEvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMud,KAAK,8BAA8BF,OAAO,SAASC,IAAI,gCAA7D,eANF,6OAgBAk1I,EAAQlkD,QAAWkkD,EAAQ39I,OAAS29I,EAAQ34C,gBAA6C,WAA1B24C,EAAQ34C,eACvE95G,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CACEn6J,MAAO,CAAC,IACR+I,UAAW,CAACC,KAAOimB,QACnBxgB,GAAI,CAAC,EAAG,GACRlM,KAAM,QACNwE,IAAK,QACLjB,QAAOjG,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAE,SAAAqS,IAAA,OAAA6N,EAAA7wB,EAAA+Q,KAAA,SAAAoS,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAjS,MAAA,cAAAiS,EAAAjS,KAAA,EAAkBoqJ,IAAlB,cAAAn4I,EAAA1B,OAAA,SAAA0B,EAAAlP,MAAA,wBAAAkP,EAAA9Q,SAAA2Q,EAAAnjB,UAERo7J,EAAQlkD,OAAS,uBAAyB,UAIjDvuG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE00G,SAAU,OACVt8G,cAAe,MACfC,eAAgB,iBAEfmsB,kBCkVMmvI,8MApiBb/0J,MAAQ,CACNkqI,WAAU,EACV8qB,YAAW,EACX91G,cAAc,GACd+1G,eAAe,KACfC,kBAAiB,EACjBC,kBAAiB,EACjBC,mBAAmB,KACnBC,oBAAmB,EACnBC,oBAAoB,QAItB/5J,cAAgB,OAShBg6J,iBAAmB,SAAAj2J,GACjBA,EAAEgI,iBAEF5J,EAAK8C,SAAS,CACZw0J,YAAat3J,EAAKsC,MAAMg1J,gBAI5BQ,iBAAmB,WACjB,IAAIP,EAAiB,KASrB,OARIt4I,eACFs4I,EAAiBt4I,aAAaC,QAAQ,oBAEpClf,EAAK8C,SAAS,CACZy0J,mBAICA,KAGTzsJ,kBAAoB,WAClB9K,EAAKhC,YACLgC,EAAK83J,sBAGP/zC,mBAAqB,WACnB/jH,EAAKhC,eAGP03G,WAAa,SAAA9zG,GACX5B,EAAK8C,SAAS,CACZw0J,YAAY,EACZC,eAAe,KACfE,kBAAiB,EACjBD,kBAAkB,EAClBI,oBAAoB,UAIxBxB,mDAAe,SAAA36I,EAAO8hG,EAActgH,GAArB,IAAAo5J,EAAA,OAAAvqI,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cACTkqJ,EAAmC,aAAlB94C,EAA+BtgH,EAAOsgH,EAG3Dv9G,EAAKnC,cAAckb,yBAAyB,CAC1CN,cAAc,UACdC,WAAW29I,EACXz9I,YAAY,kBAGV5Y,EAAKjF,MAAMq7J,cAAmD,oBAA5Bp2J,EAAKjF,MAAMq7J,cAC/Cp2J,EAAKjF,MAAMq7J,aAAa74C,EAAc84C,GAIxCr2J,EAAK8C,SAAS,CACZ80J,oBAAqBr6C,IAGvBv9G,EAAK+3J,iBAnBQp8I,EAAAe,OAAA,SAqBN6gG,GArBM,wBAAA5hG,EAAArO,SAAAmO,EAAA3gB,mEA0Bfi9J,eAAiB,WACf,IAAML,EAAqB13J,EAAKsC,MAAMo1J,mBAAqB13J,EAAKsC,MAAMo1J,mBAAmB,EAAI,EACxFA,EAGHl5I,WAAW,WAAQxe,EAAK+3J,kBAAmB,KAF3C/3J,EAAKw1G,aAIPx1G,EAAK8C,SAAS,CACZ40J,0BAIJM,gBAAkB,SAACp2J,EAAEq2J,GACnBr2J,EAAEgI,iBACF5J,EAAK8C,SAAS,CACZ80J,oBAAqBK,OAIzBziD,WAAa,WAEXx1G,EAAK01G,aAEL11G,EAAK83J,mBAEL93J,EAAKjF,MAAMy6G,gBAGb0iD,kBAAoB,SAACt2J,EAAE21J,GACrB31J,EAAEgI,iBACF5J,EAAK8C,SAAS,CACZy0J,mBAGmB,iBAAjBA,IAEFv3J,EAAKnC,cAAckb,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,cACbF,WAAY6+I,IAGdv3J,EAAKnC,cAAcyhB,gBAAgB,iBAAiBi4I,OAIxDY,qBAAuB,WAErB,OADqBn4J,EAAKnC,cAAci6B,aAAa93B,EAAKsC,MAAMk/C,gBAE9DxhD,EAAKuhD,kBAAiB,GACtBvhD,EAAKnC,cAAc0jD,iBAAiBvhD,EAAKsC,MAAMk/C,eAC/CxhD,EAAKo2J,aAAa,SAAS,UAC3B53I,WAAW,WAAQxe,EAAKw1G,cAAe,MAChC,GAEAx1G,EAAK8C,SAAS,CACnB60J,oBAAmB,OAKzBS,oBAAsB,SAACx2J,GACrB,IACM4/C,EAAgB5/C,EAAEmf,OAAO9a,MACzBumI,EAAYxsI,EAAKnC,cAAci6B,aAAa0pB,GAClDxhD,EAAK8C,SAAS,CACZ0pI,YACAhrF,gBACAm2G,oBANyB,OAU7Bp2G,iBAAmB,SAACk2G,GAClBz3J,EAAK8C,SAAS,CACZ20J,wBAIJY,mBAAqB,WAEnB,IAAMC,EACJ70J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMU,UAAW,SAAU5G,SAAU,EAAG7C,GAAI,CAAC,EAAE,IAA/C,kCAAkF8I,EAAAxI,EAAAC,cAACq9J,GAAA,EAAD,CAAYxkI,GAAG,oBAAoB32B,MAAO,UAAW+D,MAAO,CAAC/D,MAAM4C,EAAKjF,MAAMwB,MAAMC,OAAOsmB,QAAQu7G,eAAe,aAAct9G,OAAQ,SAAUC,IAAI,gCAAtJ,sBAIhFw3I,EAA8C,QAA9Bx4J,EAAKsC,MAAMi1J,eAC3BkB,EAAsD,WAA9Bz4J,EAAKsC,MAAMi1J,eAGzC,MAFuD,iBAA9Bv3J,EAAKsC,MAAMi1J,eAIhC9zJ,EAAAxI,EAAAC,cAACuI,EAAAxI,EAAM02G,SAAP,KACEluG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAUhL,OAAX,CAAkBl3F,MAAO,qBAAsB+pG,SAAU,4DACzDpoH,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACEx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,CAAC,SAAU,OAC1BC,eAAgB,gBAChBH,GAAI,CAAC,EAAG,IAER6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKoX,KAAM,MAAOlgB,MAAO,EAAGuJ,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIlN,GAAI,GACtDsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM3H,eAAgB,SAAUsN,GAAI,GAClC5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAK,SACLG,MAAM,UACND,KAAK,SAGTsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAASlG,SAAU,EAAG4G,UAAW,UAAjC,4BACAX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAU,EAAG4G,UAAW,UAA9B,4IAMFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKoX,KAAM,MAAOlgB,MAAO,EAAGuJ,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIlN,GAAI,GACtDsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM3H,eAAgB,SAAUsN,GAAI,GAClC5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAK,uBACLG,MAAM,UACND,KAAK,SAGTsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAASlG,SAAU,EAAG4G,UAAW,UAAjC,4BACAX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAU,EAAG6L,GAAI,EAAGjF,UAAW,UAArC,kJAG2BX,EAAAxI,EAAAC,cAAA,WACzBuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEoe,MAAM,wCACNvkB,WAAY,IACZH,MAAO,OACPgH,UAAW,SACX3D,WAAY,OACZwgB,KAAK,IACLvgB,QAASV,EAAK63J,kBAPhB,gCAaJp0J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKoX,KAAM,MAAOlgB,MAAO,EAAGuJ,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,IAC9C5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM3H,eAAgB,SAAUsN,GAAI,GAClC5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAK,SACLG,MAAM,UACND,KAAK,SAGTsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAASlG,SAAU,EAAG4G,UAAW,UAAjC,gCACAX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAU,EAAG4G,UAAW,UAA9B,6GAWRpE,EAAKsC,MAAMm1J,iBAEXh0J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAUhL,OAAX,CACEl3F,MAAO,qBACP5kB,KAAM,uBACN2uH,SAAU,+BAGZpoH,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACEx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPqH,SAAU,CAAC,EAAE,QACbnG,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPmO,MAAO,oBAEPtF,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEgvB,UAAQ,EACR93B,MAAO,EACPyD,KAAM,OACNsF,UAAWC,KAAOsmB,MAClBziB,YAAa,aACbjM,gBAAiB,SACjB4zI,QAAS,sBACTnpI,MAAOjG,EAAKsC,MAAMk/C,cAClB9pC,SAAW,SAAA9V,GAAC,OAAI5B,EAAKo4J,oBAAoBx2J,IACzC82G,YAAa,qCAIf14G,EAAKsC,MAAMq1J,oBACTl0J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ7L,SAAU,EACVJ,MAAO,MACPG,WAAY,EACZ6G,UAAW,UALb,mCAWJX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7I,GAAI,CAAC,EAAE,GACPa,GAAI,OACJ6B,WAAY,EACZJ,KAAM,SACNK,SAAU,CAAC,EAAE,GACblB,aAAc,EACd8oH,cAAe,UACfzhH,UAAW,CAACC,KAAOkmB,gBACnBppB,QAAU,SAAAkB,GAAC,OAAI5B,EAAKm4J,yBATtB,YAcF10J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,EACJ/gB,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEjD,WAAY,OACZ2D,UAAW,SACX1D,QAAU,SAAAkB,GAAC,OAAI5B,EAAKuhD,kBAAiB,KAHvC,0BAQA+2G,IAMNG,EAEAh1J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAUhL,OAAX,CAAkBl3F,MAAO,qBAAsB+pG,SAAU,6BAA8B3uH,KAAM,yBAC7FuG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACEx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9I,MAAO,EAAGC,GAAI,CAAC,EAAE,GAAIiB,cAAe,SAAUC,eAAgB,UAClE0H,EAAAxI,EAAAC,cAAC+6J,GAAD,CACEr7J,MAAO,GACPkC,SAAUkD,EAAKjF,MAAM+B,SACrBs5J,aAAcp2J,EAAKo2J,aACnBE,mBAAoBt2J,EAAKw1G,WACzBr4G,KAAM6C,EAAKjF,MAAM+B,SAAW,SAAW,QACvCykD,iBAAkBvhD,EAAKuhD,iBAAiBvnC,KAAtBvf,OAAAi+J,GAAA,EAAAj+J,QAAAi+J,GAAA,EAAAj+J,CAAAuF,QAGtByD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMkZ,GAAI,EAAG/gB,WAAY,SAAUE,eAAgB,UACjD0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMU,UAAW,SAAU3D,WAAY,OAAQC,QAAU,SAAAkB,GAAC,OAAI5B,EAAKk4J,kBAAkBt2J,EAAE,SAAvF,0BAEA02J,IAMNE,EAEA/0J,EAAAxI,EAAAC,cAACuI,EAAAxI,EAAM02G,SAAP,KACEluG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAUhL,OAAX,CAAkBl3F,MAAO,0CAA4C5kB,KAAM,yBAC3EuG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KAEKj5G,EAAKsC,MAAMs1J,oBAoCVn0J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAU,EAAG4G,UAAW,SAAU7G,WAAY,EAAGi1G,WAAY,KAAnE,4BAC4BxyG,EAAKsC,MAAMs1J,oBADvC,uBAGAn0J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJpI,eAAgB,SAChBF,WAAY,SACZuI,UAAW,UACXX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAK,SALf,IAKyBsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,EAAGpD,MAAO,aAApB,cAA6C4C,EAAKsC,MAAMo1J,mBAAxD,iBA5C3Bj0J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9I,MAAO,EAAGC,GAAI,CAAC,EAAE,GAAIiB,cAAe,SAAUC,eAAgB,UAClE0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK2F,GAAI,GACP5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAU,CAAC,EAAE,GAAI4G,UAAW,SAAU7G,WAAY,EAAGi1G,WAAY,KAAvE,yCAIF/uG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,EAAGvN,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAClF0H,EAAAxI,EAAAC,cAAC4rH,GAAA,EAAD,CACE1mH,YAAa,CACXC,OAAO,GAET23G,QAAS,aACTK,SAAU,mBACVv7G,SAAUkD,EAAKjF,MAAM+B,SACrBgvI,WAAY,oBACZvwI,YAAc,SAAAqG,GAAC,OAAI5B,EAAKo2J,aAAa,SAAS,WAC9Cr5J,WAAaiD,EAAKjF,MAAM+B,SAAW,CAAClC,MAAM,OAAOiC,OAAO,QAAU,CAACwM,GAAG,MAAMzO,MAAM,OAAOiC,OAAO,UAElG4G,EAAAxI,EAAAC,cAAC4rH,GAAA,EAAD,CACE1mH,YAAa,CACXC,OAAO,GAET23G,QAAS,mBACTl7G,SAAUkD,EAAKjF,MAAM+B,SACrBu7G,SAAU,oBACVyzB,WAAY,uBACZvwI,YAAc,SAAAqG,GAAC,OAAI5B,EAAKo2J,aAAa,YAAY,cACjDr5J,WAAaiD,EAAKjF,MAAM+B,SAAW,CAAClC,MAAM,OAAOiC,OAAO,QAAU,CAACwM,GAAG,MAAMzO,MAAM,OAAOiC,OAAO,WAGpG4G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,SAAUE,eAAgB,UAC1C0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMU,UAAW,SAAU3D,WAAY,OAAQC,QAAU,SAAAkB,GAAC,OAAI5B,EAAKk4J,kBAAkBt2J,EAAE,YAAvF,6BAkBN02J,IAOR70J,EAAAxI,EAAAC,cAACuI,EAAAxI,EAAM02G,SAAP,KACEluG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAUhL,OAAX,CAAkBl3F,MAAO,kBAAmB5kB,KAAM,yBAClDuG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KAEIx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPC,GAAI,CAAC,EAAE,GACPiB,cAAe,SACfC,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK2F,GAAI,GACP5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbg1G,WAAY,IACZpuG,UAAW,UAJb,wCASFX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,CAAC,EAAE,GACPxN,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAAC4rH,GAAA,EAAD,CACE1mH,YAAa,CACXC,OAAO,GAET23G,QAAO,kBACPl7G,SAAUkD,EAAKjF,MAAM+B,SACrBgvI,WAAY,wBACZzzB,SAAU,6BACV98G,YAAc,SAAAqG,GAAC,OAAI5B,EAAKk4J,kBAAkBt2J,EAAE,WAC5C7E,WAAYiD,EAAKjF,MAAM+B,SAAW,CAAClC,MAAM,OAAOiC,OAAO,QAAU,CAACjC,MAAM,OAAOiC,OAAO,OAAO87J,aAAa,SAE5Gl1J,EAAAxI,EAAAC,cAAC4rH,GAAA,EAAD,CACE1mH,YAAa,CACXC,OAAO,GAET23G,QAAO,aACPl7G,SAAUkD,EAAKjF,MAAM+B,SACrBgvI,WAAY,oBACZzzB,SAAU,wBACV98G,YAAc,SAAAqG,GAAC,OAAI5B,EAAKk4J,kBAAkBt2J,EAAE,QAC5C7E,WAAYiD,EAAKjF,MAAM+B,SAAW,CAAClC,MAAM,OAAOiC,OAAO,QAAU,CAACjC,MAAM,OAAOiC,OAAO,OAAO87J,aAAa,UAG9Gl1J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,SACZE,eAAgB,UAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,UACPqD,WAAY,UACZC,QAAU,SAAAkB,GAAC,OAAI5B,EAAKuhD,kBAAiB,KAHvC,4BAUJ+2G,OAMVM,aAAe,WAEb,OAAI54J,EAAKsC,MAAMs1J,qBAAwB53J,EAAKsC,MAAMi1J,gBAAkBv3J,EAAKsC,MAAMm1J,iBACtE,KAIPh0J,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU9K,OAAX,KACKl5G,EAAKsC,MAAMi1J,iBAcNv3J,EAAKsC,MAAMm1J,kBAAgD,iBAA5Bz3J,EAAKsC,MAAMi1J,iBAC9C9zJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEC,UAAW,CAACC,KAAOkmB,eAAelmB,KAAOmmB,OACzCrpB,QAASV,EAAK01G,WACdv4G,KAAM,SACNb,aAAc,EACd8oH,cAAe,OACf7nH,WAAY,EACZC,SAAU,CAAC,EAAE,GACb9B,GAAI,OACJb,GAAI,CAAC,EAAE,IATT,QAdA4I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEC,UAAW,CAACC,KAAOkmB,eAAelmB,KAAOmmB,OACzCrpB,QAAU,SAAAkB,GAAC,OAAI5B,EAAKk4J,kBAAkBt2J,EAAE,iBACxCzE,KAAM,SACNb,aAAc,EACd8oH,cAAe,OACf7nH,WAAY,EACZC,SAAU,CAAC,EAAE,GACb9B,GAAI,OACJb,GAAI,CAAC,EAAE,IATT,kGA9dJC,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,wCA6f9C,OACE0I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAD,CAAWjL,UAAWj+G,KAAK06G,aACE,IAA1B16G,KAAKwH,MAAMg1J,WACV7zJ,EAAAxI,EAAAC,cAACuI,EAAAxI,EAAM02G,SAAP,KACG72G,KAAKu9J,qBACLv9J,KAAK89J,gBAGRn1J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAAC29J,GAAD,MACC/9J,KAAK89J,yBA5hBUz/C,IAAMx7G,WCkCrBm7J,8MA9CbpE,cAAgB,WACd,OACEjxJ,EAAAxI,EAAAC,cAACuI,EAAAxI,EAAM02G,SAAP,KACEluG,EAAAxI,EAAAC,cAACwI,EAAA,EAAQorJ,GAAT,CAAYlzJ,GAAI,GAAhB,4BAEA6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,GAAV,kFAEqB,IAClBo5J,GAAYC,cAAZ,2CAHH,KASAxxJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKgmB,GAAI,UAAWrtB,EAAG,EAAGkH,QAAS,CAAC,OAAQ,UAC1CE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKyF,SAAU,WAAYvO,MAAO,OAChC6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAM,UAGlBsG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMnG,WAAY,GAAlB,0CAGAkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMnG,WAAY,GAAlB,mHASV,OACEkG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAD,CAAWjL,UAAWj+G,KAAKC,MAAMy6G,YAC/B/xG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACGn+G,KAAK45J,0BAvCmBv7C,IAAMx7G,WCmC5Bo7J,8MA1CbC,iBAAmB,SAAApgC,GACjB54H,EAAKjF,MAAMy6G,aACXx1G,EAAKjF,MAAMk+J,iBAGbvE,cAAgB,WACd,OACEjxJ,EAAAxI,EAAAC,cAACuI,EAAAxI,EAAM02G,SAAP,KACEluG,EAAAxI,EAAAC,cAACwI,EAAA,EAAQorJ,GAAT,CAAYlzJ,GAAI,GAAhB,sDAIA6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,GAAV,8EAKA6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,CAAC,SAAU,OAAQC,eAAgB,WAAYoI,GAAI,GACtEV,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgBr0J,QAASV,EAAKjF,MAAMy6G,WAAYr5G,GAAI,CAAC,EAAG,GAAIkN,GAAI,CAAC,EAAG,IAApE,qBAGA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQhD,QAASV,EAAKg5J,kBAAtB,wFASN,OACEv1J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAD,CAAWjL,UAAWj+G,KAAKC,MAAMy6G,YAC/B/xG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACGn+G,KAAK45J,0BAnCwBv7C,IAAMx7G,WCiRjCu7J,8MApQb52J,MAAQ,CACN62J,eAAe,EACf7B,YAAY,KAGd8B,gBAAkB,WAChBp5J,EAAK8C,SAAS,CACZq2J,eAAgBn5J,EAAKsC,MAAM62J,mBAI/BtB,iBAAmB,SAAAj2J,GACjB2wB,QAAQqc,IAAI,aAAc5uC,EAAKsC,MAAMg1J,YACrC11J,EAAEgI,iBAEF5J,EAAK8C,SAAS,CACZw0J,YAAat3J,EAAKsC,MAAMg1J,sFAK1B,OACE7zJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEosH,GAAI,CAAC,EAAG,GACR5uH,GAAI,CAAC,EAAG,GACR0b,GAAI,CAAC,OAAQ,GACby8F,GAAI,CAAC,OAAQ,GACbj4G,SAAU,QACVC,SAAU,SACV8H,SAAU,YAEV1F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKyF,SAAU,YACb1F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE3H,eAAgB,WAChBI,GAAI,CAAC,GAAI,GACTgI,GAAI,CAAC,SAAU,GACfgF,SAAU,WACVxB,IAAK,IACLG,KAAM,IACNF,MAAO,IACP8hB,GAAI,QACJtgB,OAAQ,KAER3F,EAAAxI,EAAAC,cAACwI,EAAA,EAAOzC,KAAR,CACE6zJ,UAAQ,EACR53J,KAAM,QACNE,MAAO,YACPsD,QAAS5F,KAAKC,MAAMy6G,gBAKI,IAA7B16G,KAAKwH,MAAM62J,gBACc,IAA1Br+J,KAAKwH,MAAMg1J,WACT7zJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CAAEE,SAAU,QACnB24H,UAAW,uBAEXv2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK7I,GAAI,CAAC,EAAG,GAAI+hB,GAAI,CAAC,EAAG,GAAIy8F,GAAI,CAAC,EAAG,IAGnC51G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK21J,aAAa,SAAS1+J,GAAI,GAC7B8I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQorJ,GAAT,+CAIFrrJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,GAAV,+KAG8D,IAC5D5F,EAAAxI,EAAAC,cAAA,kDAAkD,IAClDuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEoe,MAAM,wCACNw3I,GAAI,IACJr4I,KAAK,IACLvgB,QAAS5F,KAAK+8J,kBAJhB,+BAUFp0J,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,yBAEAxlH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7H,WAAY,UACZH,GAAI,EACJ2N,GAAI,CAAC,EAAG,GACRlF,GAAI,CAAC,EAAG,GACRi0G,SAAU,CAAC,OAAQ,YAEnB30G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKrH,EAAG,CAAC,EAAG,GAAIzB,MAAO,CAAC,EAAG,KACzB6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,SACfC,eAAgB,gBAChBc,OAAQ,QAER4G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAQ61J,GAAT,iCACA91J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAS,KAAf,oKAQFiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgBn5J,GAAI,GAClB6H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,YAAYd,GAAI,IAD7B,qBAONsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKrH,EAAG,CAAC,EAAG,GAAIzB,MAAO,CAAC,EAAG,KACzB6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,SACfC,eAAgB,gBAChBc,OAAQ,QAER4G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAQ61J,GAAT,sCAGA91J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAS,KAAf,gIAMFiG,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgBn5J,GAAI,EAAG8E,QAAS5F,KAAKs+J,iBACnC31J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,oBAAoBd,GAAI,IADrC,8BAWZsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEyF,SAAU,WACVtB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACP/M,GAAI,CAAC,EAAG,GACR+hB,GAAI,EACJy8F,GAAI,EACJ3vF,GAAI,SAGJjmB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMmjH,UAAW,EAAGp/G,YAAa,SACjChE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMkZ,GAAI,EAAG7gB,eAAgB,CAAC,SAAU,aACtC0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQhD,QAAS5F,KAAKC,MAAMy6G,WAAY56G,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEHE,KAAKwH,MAAM62J,cACV11J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK2F,GAAI,GACP5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CAAEE,SAAU,QACnB24H,UAAW,uBAEXv2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK7I,GAAI,CAAC,EAAG,GAAI+hB,GAAI,CAAC,EAAG,GAAIy8F,GAAI,CAAC,EAAG,IAEnC51G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,EAAGG,eAAgB,UAC3B0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAM,IACN8I,MACEnL,KAAKC,MAAMqQ,QAAUtQ,KAAKC,MAAMqQ,QAAU,gBAKhD3H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAY9H,GAAI,EAAGwM,QAAStN,KAAKC,MAAMqQ,UACvC3H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,MAKd5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEyF,SAAU,WACVtB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACP/M,GAAI,CAAC,EAAG,GACR+hB,GAAI,EACJy8F,GAAI,EACJ3vF,GAAI,SAGJjmB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMmjH,UAAW,EAAGp/G,YAAa,SACjChE,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMS,GAAI,EAAGpI,eAAgB,CAAC,SAAU,aACtC0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CACEn6J,MAAO,CAAC,EAAG,QACX8F,QAAS5F,KAAKs+J,iBAFhB,cAUJ,KAEHt+J,KAAKwH,MAAMg1J,WACV7zJ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK2F,GAAI,GACP5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CAAEE,SAAU,QACnB24H,UAAW,uBAEXv2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAK7I,GAAI,CAAC,EAAG,GAAI+hB,GAAI,CAAC,EAAG,GAAIy8F,GAAI,CAAC,EAAG,IAEnC51G,EAAAxI,EAAAC,cAAC29J,GAAD,QAIJp1J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEyF,SAAU,WACVtB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACP/M,GAAI,CAAC,EAAG,GACR+hB,GAAI,EACJy8F,GAAI,EACJ3vF,GAAI,SAGJjmB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,EACJ7gB,eAAgB,CAAC,SAAU,YAC3B8qH,UAAW,EACXp/G,YAAa,QAEbhE,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CACEn6J,MAAO,CAAC,EAAG,QACX8F,QAAS5F,KAAK+8J,kBAFhB,cAUJ,cA9Pc1+C,IAAMx7G,WCoDnB67J,oLAtDX,OACE/1J,EAAAxI,EAAAC,cAAA,WACEuI,EAAAxI,EAAAC,cAACu+J,GAAD,CACEjkD,WAAY16G,KAAKC,MAAM64I,OAAOp/F,QAAQklH,wBACtC7gD,OAAQ/9G,KAAKC,MAAM64I,OAAOjuI,KAAKg0J,yBAC/B79I,YAAahhB,KAAKC,MAAM+gB,cAG1BrY,EAAAxI,EAAAC,cAAC0+J,GAAD,CACEpkD,WAAY16G,KAAKC,MAAM64I,OAAOp/F,QAAQqlH,mBACtChhD,OAAQ/9G,KAAKC,MAAM64I,OAAOjuI,KAAKm0J,oBAC/Bh+I,YAAahhB,KAAKC,MAAM+gB,cAG1BrY,EAAAxI,EAAAC,cAAC6+J,GAAD,CACEvkD,WAAY16G,KAAKC,MAAM64I,OAAOp/F,QAAQwlH,uBACtCnhD,OAAQ/9G,KAAKC,MAAM64I,OAAOjuI,KAAKs0J,wBAC/BpgJ,QAAS/e,KAAKC,MAAM8e,UAGtBpW,EAAAxI,EAAAC,cAACg/J,GAADz/J,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE+B,SAAUhC,KAAKC,MAAM+B,SACrBs5J,aAAct7J,KAAKC,MAAMq7J,aACzB/1I,eAAgBvlB,KAAKC,MAAM8e,QAAQiZ,QACnCqnI,gBAAiBr/J,KAAKC,MAAMo/J,gBAC5B3kD,WAAY16G,KAAKC,MAAM64I,OAAOp/F,QAAQ4lH,qBACtCvhD,OAAS/9G,KAAKC,MAAM64I,OAAOjuI,KAAK00J,wBAA0Bv/J,KAAKC,MAAMu/J,oBAGvE72J,EAAAxI,EAAAC,cAACq/J,GAAD,CACE/kD,WAAY16G,KAAKC,MAAM64I,OAAOp/F,QAAQgmH,4BACtC3hD,OAAQ/9G,KAAKC,MAAM64I,OAAOjuI,KAAK80J,yBAC/Bp6I,eAAgBvlB,KAAKC,MAAM8e,QAAQiZ,UAErCrvB,EAAAxI,EAAAC,cAACw/J,GAAD,CACEllD,WACE16G,KAAKC,MAAM64I,OAAOp/F,QAAQmmH,iCAE5B9hD,OAAQ/9G,KAAKC,MAAM64I,OAAOjuI,KAAKi1J,oBAC/B3B,YAAan+J,KAAKC,MAAMk+J,cAG1Bx1J,EAAAxI,EAAAC,cAAC2/J,GAAD,CACErlD,WAAY16G,KAAKC,MAAM64I,OAAOp/F,QAAQsmH,mBACtCjiD,OAAQ/9G,KAAKC,MAAM64I,OAAOjuI,KAAKo1J,oBAC/B16I,eAAgBvlB,KAAKC,MAAM8e,QAAQiZ,QACnC1nB,QAAStQ,KAAKC,MAAMqQ,kBAjDI+tG,IAAMx7G,iCC8EzBq9J,8MA7Ebn9J,cAAgB,gFAEV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAKkD,yDAILlD,KAAKkD,uFAGU4D,sEACfA,EAAEgI,iBAEG9O,KAAKC,MAAMqQ,+BAGdtQ,KAAKC,MAAMm7J,QAAQK,iBACnBz7J,KAAKC,MAAMq7J,aAAa,SAAS,eAC3Bt7J,KAAKC,MAAMm7J,QAAQ+E,uBAAuB,CAAC,kBAEnDngK,KAAKC,MAAM64I,OAAOp/F,QAAQ0mH,gKAGnB,IAAAj9J,EAAAnD,KAEDu7J,EAAiBv7J,KAAK+C,cAAc6rD,oBACpCyxG,EAAY9E,GAAmD,WAAjCA,EAAehuJ,eAAkF,kBAA3CvN,KAAKC,MAAM64I,OAAOjuI,KAAKy1J,iBAAgCtgK,KAAKC,MAAM64I,OAAOjuI,KAAKy1J,gBAAgB/yJ,cAAcknB,SAAS,UAE/M,OACE9rB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAD,CAAWjL,UAAY,SAAAn3G,GAAC,OAAI3D,EAAKu3G,WAAW5zG,KAC1C6B,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAUhL,OAAX,CAAkBl3F,MAAQq5I,EAAW,eAAH,mBAAyCj+J,KAAM,uBACjFuG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACEx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,EAAGhB,MAAO,EAAGkB,cAAe,SAAUJ,GAAI,QAClD+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAKrH,EAAN,CAAQe,MAAO,YAAagH,UAAW,UAAvC,iEACkE+2J,EAAW,SAAW,UADxF,IACoG13J,EAAAxI,EAAAC,cAAA,WAClGuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CAAWvjB,MAAO,MAAOG,WAAY,GAArC,IAA0CzC,KAAKC,MAAM64I,OAAOjuI,KAAKy1J,gBAAjE,KAA8F33J,EAAAxI,EAAAC,cAAA,WAE5FigK,EACE13J,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,sCACgCld,EAAAxI,EAAAC,cAAA,2BADhC,QAC+DuI,EAAAxI,EAAAC,cAAA,0BAD/D,0BAC+GuI,EAAAxI,EAAAC,cAAA,+BAD/G,QACkJuI,EAAAxI,EAAAC,cAAA,iCADlJ,uCACsNuI,EAAAxI,EAAAC,cAAA,YAGpN,0DAIVuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,EAAGvN,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1E0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJF,GAAI,CAAC,EAAG,GACRY,aAAc,EACdyF,UAAW,OACX5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtC4D,QAAO,eAAA+K,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAG,SAAAsQ,EAAOta,GAAP,OAAAkqB,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAAAkQ,EAAAlQ,KAAA,EAAqBlO,EAAKu3G,WAAW5zG,GAArC,wBAAAya,EAAA/O,SAAA4O,EAAAphB,SAAH,gBAAA2hB,GAAA,OAAAhR,EAAA+B,MAAA1S,KAAA2S,YAAA,IANT,qBA9DqB0rG,IAAMx7G,WC2E1B09J,8MAvEbx9J,cAAgB,gFAEV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAKkD,yDAILlD,KAAKkD,uFAGU4D,mEACfA,EAAEgI,iBACF9O,KAAKC,MAAM64I,OAAOp/F,QAAQ8mH,iKAGnB,IAAAr9J,EAAAnD,KAEDygK,EAAmE,kBAA5CzgK,KAAKC,MAAM64I,OAAOjuI,KAAK61J,kBAAiC1gK,KAAKC,MAAM64I,OAAOjuI,KAAK61J,iBAAiBnzJ,cAAcknB,SAAS,UAC9IksI,EAAmE,kBAA5C3gK,KAAKC,MAAM64I,OAAOjuI,KAAK61J,kBAAiC1gK,KAAKC,MAAM64I,OAAOjuI,KAAK61J,iBAAiBnzJ,cAAcknB,SAAS,8BAEpJ,OACE9rB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAD,CAAWjL,UAAY,SAAAn3G,GAAC,OAAI3D,EAAKu3G,WAAW5zG,KAC1C6B,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAUhL,OAAX,CAAkBl3F,MAAQ,oBAAsB5kB,KAAM,uBACtDuG,EAAAxI,EAAAC,cAAC8oH,GAAA,EAAU/K,KAAX,KACEx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,EAAGhB,MAAO,EAAGkB,cAAe,SAAUJ,GAAI,QAClD+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAKrH,EAAN,CAAQe,MAAO,YAAagH,UAAW,UAAvC,kEACiEX,EAAAxI,EAAAC,cAAA,WAC/DuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CAAWvjB,MAAO,MAAOG,WAAY,GAArC,IAA0CzC,KAAKC,MAAM64I,OAAOjuI,KAAK61J,iBAAjE,KAA+F/3J,EAAAxI,EAAAC,cAAA,WAE7FqgK,EACE93J,EAAAxI,EAAAC,cAACwI,EAAA,EAAKid,KAAN,CACEnjB,SAAU,GAEViG,EAAAxI,EAAAC,cAAA,WAHF,iCAGsCuI,EAAAxI,EAAAC,cAAA,2BAHtC,QAGqEuI,EAAAxI,EAAAC,cAAA,0BAHrE,0BAGqHuI,EAAAxI,EAAAC,cAAA,+BAHrH,QAGwJuI,EAAAxI,EAAAC,cAAA,iCAHxJ,uCAG4NuI,EAAAxI,EAAAC,cAAA,WAH5N,sEAIqEuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,SAAU,EAAGJ,MAAO,OAAQqD,WAAY,OAAQsgB,OAAQ,SAAUC,IAAK,+BAAgCC,KAAM,iHAAnH,qBAJrE,KAMEw6I,EAAgB,8FAAgG,0DAI1Hh4J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,EAAGvN,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1E0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJF,GAAI,CAAC,EAAG,GACRY,aAAc,EACdyF,UAAW,OACX5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtC4D,QAAO,eAAA+K,EAAAhR,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAG,SAAAsQ,EAAOta,GAAP,OAAAkqB,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAAAkQ,EAAAlQ,KAAA,EAAqBlO,EAAKu3G,WAAW5zG,GAArC,wBAAAya,EAAA/O,SAAA4O,EAAAphB,SAAH,gBAAA2hB,GAAA,OAAAhR,EAAA+B,MAAA1S,KAAA2S,YAAA,IANT,qBAxDsB0rG,IAAMx7G,WCM1C6yB,EAAQ,MAAUg0B,SAElB,IAAMk3G,GAA2BviD,IAAMwiD,cAAc,CACnD/hJ,KAAM,GACNxO,QAAS,GACTyzI,SAAU,GACV/0F,SAAU,GACVl3B,UAAW,GACX+b,WAAY,GACZqF,YAAa,GACb/uC,YAAa,GACbxI,aAAc,GACdm/J,aAAc,GACdC,cAAe,GACfC,eAAgB,GAChBvrH,eAAgB,GAChBwrH,SAAU,aACVzB,iBAAkB,GAClB0B,kBAAmB,GACnB/C,YAAa,aACbgD,kBAAmB,GACnBjpI,kBAAmB,GACnBg3B,aAAc,aACdrnB,aAAc,aACdi1B,qBAAsB,GACtBskG,oBAAqB,GACrBC,eAAgB,aAChBhC,gBAAiB,aACjBtgJ,QAAS,CACPiZ,QAAS,GACTJ,SAAU,GACV0pI,aAAc,aACdrpI,iBAAkB,KAClBwhI,mBAAoB,MAEtBp/B,oBAAoB,EACpBrnE,iBAAkB,aAClBuuG,iBAAkB,aAClBjnD,kBAAmB,aACnB6V,sBAAsB,EACtBqxC,yBAA0B,GAC1BC,oBAAqB,aACrBC,qBAAsB,aACtBC,0BAA0B,EAC1B5pD,0BAA2B,aAC3B+gC,OAAQ,CACNjuI,KAAM,CACJy1J,gBAAiB,GACjBL,oBAAqB,GACrBjB,oBAAqB,GACrBc,oBAAqB,GACrBP,sBAAuB,GACvBqC,uBAAwB,GACxBzC,wBAAyB,GACzBqC,yBAA0B,GAC1B7B,yBAA0B,GAC1Bd,yBAA0B,GAC1BgD,iCAAkC,IAEpCnoH,QAAS,CACPooH,kBAAmB,aACnB9B,mBAAoB,aACpB+B,sBAAuB,aACvB7C,uBAAwB,aACxB8C,uBAAwB,aACxBpD,wBAAyB,aACzBqD,yBAA0B,aAC1B7B,0BAA2B,aAC3B8B,0BAA2B,aAC3B1B,2BAA4B,aAC5B2B,2BAA4B,aAC5BzC,4BAA6B,aAC7B0C,gCAAiC,aACjCC,gCAAiC,aACjCxC,iCAAkC,aAClCyC,iCAAkC,eAGtCthJ,YAAa,CACXnW,KAAM,CACJlJ,aAAc,IAEhB4gK,KAAM,GACN7oH,QAAS,MAIT8oH,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJj7J,oBAAqB,IAGrB1E,cAAgB,OAkChB4/J,0CAAuB,SAAAvhJ,IAAA,IAAAuW,EAAAirI,EAAAjwJ,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAAOsmB,EAAPirI,EAAA5+J,OAAA,QAAA0qB,IAAAk0I,EAAA,GAAAA,EAAA,GAAiB,KACtC19J,EAAKnC,cAAciyD,iBAAiB,kBACpC9vD,EAAKnC,cAAciyD,iBAAiB,0BACpC9vD,EAAKnC,cAAciyD,iBAAiB,gBAHfzzC,EAAAlQ,KAAA,EAIfnM,EAAKjF,MAAM66E,gBAAXn7E,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA2B,SAAA6P,IAAA,OAAAqQ,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,OAO3BnM,EAAKsC,MAAMuX,QAAQ6Y,UAAYD,GAAa5lB,SAAS4lB,KAAe5lB,SAAS7M,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,IAC3Guf,OAAOmV,SAAS+oI,SAEhB39J,EAAK8C,SAAS,CACZ8W,KAAK,KACLgZ,UAAU,GACVisH,SAAS,KACT+c,aAAa,KACb5oI,kBAAkB,GAClB4qI,oBAAmB,EACnBhmG,qBAAqB,KACrBqzD,sBAAqB,GACrB,WACAjrH,EAAKo8J,iBApBsB,wBAAAzgJ,EAAArO,SAAAmO,EAAA3gB,UAJZ,wBAAAuhB,EAAA/O,SAAA4O,EAAAphB,WA8BvBgQ,uCAAoB,SAAAe,IAAA,OAAAigB,EAAA7wB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIlBnM,EAAK69J,oBAKLp+I,OAAOq+I,gBAAkB,SAAClnI,GACxB,IAAM9a,EAAc9b,EAAK+9J,oBAGzB,OAFAjiJ,EAAY8a,OAASA,EACrB52B,EAAKg+J,eAAeliJ,GACbA,GAGT2D,OAAO85C,kBAAoB,SAACz9C,EAAYnZ,EAAK+J,EAAOwM,GAWlD,OATA4C,EAAYpP,OAASA,EACrBoP,EAAY5C,OAASA,EACrB4C,EAAYzd,KAAO,WACnByd,EAAY8jC,QAAUhyC,KAAK84B,MAC3B5qB,EAAY7C,gBAAkBtW,EAI9B3C,EAAKu5D,kBAAkBz9C,GAChBA,GA3BS,wBAAA7P,EAAAqB,SAAAzB,EAAA/Q,WA+BpB+iK,kBAAoB,WAElB,GADyB79J,EAAKjF,MAAMs2I,WAAWS,OAAO8e,WACjC,CACnB,IAAMyF,EAAiBr2J,EAAKnC,cAAc6rD,oBACrB1pD,EAAKjF,MAAMs2I,WAAWS,OAAO8e,cAAgB5wJ,EAAKjF,MAAMs2I,WAAWS,OAAOv0H,SAASm5I,KAItG12J,EAAKjF,MAAMq7J,aAAa,SAAS,UACL,WAAnBC,GAETr2J,EAAKjF,MAAMq7J,aAAa,SAAS,UAKvCryC,yDAAqB,SAAAl1G,EAAOpM,EAAWC,GAAlB,IAAAu7J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnI,EAAA,OAAApqI,EAAA7wB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,UAEnBnM,EAAKhC,aAIqBgC,EAAKsC,MAAMg8J,kBAAoBt+J,EAAKjF,MAAMs2I,WAAWS,OAAO8e,YAGpF5wJ,EAAK8C,SAAS,CACZw7J,kBAAiB,GACjB,WACAt+J,EAAK69J,sBAIJp7J,EAAU86G,gBAAkBv9G,EAAKjF,MAAMwiH,eAAiBv9G,EAAKjF,MAAMwiH,eAAmBv9G,EAAKjF,MAAMm7J,QAAQlkD,QAAUvvG,EAAUyzJ,QAAQlkD,SAAWhyG,EAAKjF,MAAMm7J,QAAQlkD,OAEtKhyG,EAAK+7J,WACKt5J,EAAUyzJ,UAAYl2J,EAAKjF,MAAMm7J,QACvCl2J,EAAKjF,MAAMm7J,QAAQ39I,iBAAiB28C,OAASl1D,EAAKjF,MAAMm7J,QAAQ39I,MAAM8R,QAAQvrB,QAC1Em/J,EAAej+J,EAAKjF,MAAMm7J,QAAQ39I,MAAM8R,QACxC6zI,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBX,IAAwCY,GAE1Cl+J,EAAKjF,MAAMq7J,aAAa,SAAS,MAIjCkH,GAAmB,MAETY,EAIVl+J,EAAK+7J,WAHL/7J,EAAK+8J,yBAAyB,KAAKkB,IAM5Bj+J,EAAKjF,MAAMm7J,QAAQlkD,QAA6C,kBAAnChyG,EAAKjF,MAAMm7J,QAAQ34C,eAA8D,kBAA3Bv9G,EAAKjF,MAAMwiH,eAEvGv9G,EAAK+7J,YAEG/7J,EAAKjF,MAAMm7J,QAAQ34C,eAAiBv9G,EAAKjF,MAAMm7J,QAAQ34C,gBAAkBv9G,EAAKjF,MAAMwiH,eAAkB96G,EAAU++C,gBAAkBxhD,EAAKjF,MAAMymD,gBAEvJxhD,EAAK+7J,WAGuB/7J,EAAKsC,MAAMs7J,oBAAsBl7J,EAAUmX,QAAQiZ,QAAQ5yB,KAAOF,EAAKsC,MAAMuX,QAAQiZ,QAAQ5yB,IAGzHF,EAAK+7J,WAGwBr5J,EAAUmX,QAAQ6Y,SAASxyB,KAAOF,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,IAG3FF,EAAK8C,SAAS,CACZ8vB,UAAU,GACVI,kBAAkB,GAClBi4F,sBAAqB,GACpB,WACDjrH,EAAKjF,MAAMwjK,WAAWv+J,EAAKsC,MAAMuX,SACjC7Z,EAAK+7J,gBAI4Bt5J,EAAUosB,qBAAuB7uB,EAAKjF,MAAM8zB,qBAAyBpsB,EAAUosB,qBAAuB7uB,EAAKjF,MAAM8zB,qBAAuBlkB,KAAKC,UAAUnQ,OAAOoE,KAAK4D,EAAUosB,wBAA0BlkB,KAAKC,UAAUnQ,OAAOoE,KAAKmB,EAAKjF,MAAM8zB,uBAnE/P,CAAA9f,EAAA5C,KAAA,gBAAA4C,EAAA5C,KAAA,GAsEXnM,EAAKu8J,sBAtEM,QAyEb4B,EAAuB17J,EAAU++C,gBAAkBxhD,EAAKjF,MAAMymD,cAC9D48G,EAAwB37J,EAAUyzJ,QAAQ9qJ,UAAYpL,EAAKjF,MAAMm7J,QAAQ9qJ,QACzEizJ,EAAsB57J,EAAU86G,gBAAkBv9G,EAAKjF,MAAMwiH,eAA8C,WAA7Bv9G,EAAKjF,MAAMwiH,eAS3F4gD,GAAwBC,GAAyBC,IACnDr+J,EAAKi5J,cAMcx2J,EAAUsC,gBAAkB/E,EAAKjF,MAAMgK,eAE1D/E,EAAK8C,SAAS,CACZ8M,cAAe,OAKfnN,EAAUg6J,2BAA6Bz8J,EAAKjF,MAAM0hK,0BACpDz8J,EAAK8C,SAAS,CACZ25J,yBAAyBz8J,EAAKjF,MAAM0hK,2BAIjB/5J,EAAU0I,UAAYpL,EAAKsC,MAAM8I,SAEtDpL,EAAKw+J,qBAGHv/I,gBACIi3I,EAAUvrJ,KAAKwU,MAAMF,aAAaC,QAAQ,cAC/Blf,EAAKjF,MAAMm7J,QAAQlkD,SAAWkkD,EAAQlkD,QAAUhyG,EAAKjF,MAAMm7J,QAAQ34C,gBAAkB24C,EAAQ34C,eAC5Gv9G,EAAKnC,cAAcyhB,gBAAgB,UAAU3U,KAAKC,UAAU,CAAConG,OAAOhyG,EAAKjF,MAAMm7J,QAAQlkD,OAAOuL,cAAcv9G,EAAKjF,MAAMm7J,QAAQ34C,kBAIpG96G,EAAU+hD,OAAOtnB,kBAAoBl9B,EAAKjF,MAAMypD,OAAOtnB,iBAGpFl9B,EAAKy9J,uBAxHY,yBAAA1uJ,EAAAzB,SAAAuB,EAAA/T,mEA4HrB0jK,wCAAqB,SAAAvhJ,IAAA,IAAAszB,EAAAyrH,EAAAvpI,EAAAgsI,EAAAp+I,EAAA4rB,EAAAyc,EAAA5xB,EAAA4nI,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhzI,EAAA7wB,EAAA+Q,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,UACfokC,EAAiB,KACjByrH,EAAoB,KAGlBvpI,EAAYzyB,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,GACxCu+J,EAAgB91J,IAAckR,QAAQwjB,UAAUkzG,QAEhDlwH,EAAiBrgB,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,oBAAoBkiB,IACnFwZ,EAA+C,YAA5B5rB,EAAe9C,SAAyBkV,EAAYzyB,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAekiB,IAE1Ji2B,EAAoB1oD,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,sBAClEumB,EAAgB4xB,EAAkBj2B,KAEpCgsI,GAAiBA,EAActxI,SAAWsxI,EAAcrnI,KAAO38B,OAAOoE,KAAK4/J,EAAcrnI,KAAK7H,SAAS1iB,SAASo/B,GAAkB1tB,aAdnH,CAAApB,EAAAhR,KAAA,gBAeXuyJ,EAAiBD,EAAcrnI,IAAI6U,GAAkBjsC,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,UAAU,QACzHouJ,EAAgB3+J,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,SAAS,MAAMkiB,IAAYzyB,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,SAAS,QAExKquJ,EAAgB,IAAI5hI,IAAK,IAAIA,IAAKK,UAAUC,aAAaohI,IACzDG,EAAiB,IAAI7hI,IAAK,IAAIA,IAAKK,UAAUC,aAAaqhI,IAGhEI,eAAIC,qBAEJzuH,EAAiB,IAAI0uH,aAEfH,EAAuB,CAC3BI,OAAQ,CACN3hJ,SAAUshJ,EACVM,cAAe,CACb33J,KAAOxH,EAAKsC,MAAM8I,UAGtBg0J,MAAO,CACL7hJ,SAAUqhJ,EACVO,cAAe,CACb33J,KAAOxH,EAAKsC,MAAM8I,UAGtByO,QAASid,EAAcjd,QACvBqhD,QAASpkC,EAAcokC,SAxCR/9C,EAAAhR,KAAA,GA2CXokC,EAAek/G,KAAKqP,GA3CT,QA8CnBr/I,OAAO8wB,eAAiBA,EACxB9wB,OAAOu8I,kBAAoBA,EAE3Bh8J,EAAK8C,SAAS,CACZytC,iBACAyrH,sBAnDiB,yBAAA7+I,EAAA7P,SAAA2P,EAAAniB,WAwDrBihK,8BAAW,SAAAp9I,IAAA,IAAA4+F,EAAA24C,EAAAzjI,EAAA4jI,EAAA3tG,EAAA5xB,EAAAvZ,EAAA4f,EAAAC,EAAAiiI,EAAAV,EAAA/gB,EAAAie,EAAA7nH,EAAArF,EAAA8vH,EAAAp+I,EAAA4rB,EAAAyyH,EAAA9kJ,EAAA0lJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnxI,EAAAmnC,EAAAiqG,EAAAhhB,EAAAihB,EAAAryJ,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAgT,GAAA,cAAAA,EAAA9S,KAAA8S,EAAA7S,MAAA,UAAOoxG,EAAPuiD,EAAAhhK,OAAA,QAAA0qB,IAAAs2I,EAAA,GAAAA,EAAA,GAAqB,KAOzB9/J,EAAKsC,MAAMs7J,mBAPP,CAAA5+I,EAAA7S,KAAA,eAAA6S,EAAAtC,OAAA,UAQA,GARA,UAWHw5I,EAAUl2J,EAAKjF,MAAMm7J,QACrBzjI,EAAYzyB,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,GACxCm2J,EAAiBr2J,EAAKnC,cAAc6rD,oBAIpChB,EAAoB1oD,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,sBAClEumB,EAAgB4xB,EAAkBj2B,GAClClV,EAAWuZ,EAAgBA,EAAcvZ,SAAW,SACpD4f,EAAan9B,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAYgN,EAAS,QAChF6f,EAAUp9B,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAYgN,EAAS,MAAMkV,IAAY0K,EAE/FkiI,EAAkBr/J,EAAKsC,MAAMuX,QAAQkZ,iBACrC4rI,EAAgB3+J,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,SAAS,MAAMkiB,IAAYzyB,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,SAAS,QAExKqtI,EAAkB59I,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,oBAChEsrJ,EAAgBphK,OAAOoE,KAAK6pD,GAAmBr8C,OAAQ,SAAA0zJ,GAAK,OAAIniB,EAAgBruH,SAAS1iB,SAASkzJ,MAAUhgI,OAAQ,SAACC,EAAI+/H,GAC7H,IAAMjpI,EAAgB4xB,EAAkBq3G,GAClC/oI,EAAiBh3B,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAYumB,EAAcvZ,WACzFyiJ,EAAchpI,EAAeI,IAAI2oI,GAAO/oI,EAAer1B,IAE7D,OADAq+B,EAAI+/H,GAAS,IAAI/iI,IAAK,IAAIA,IAAKK,UAAUC,aAAa0iI,IAC/ChgI,GACP,IAEEgU,EAAc,KACZrF,EAAa,IAAI3R,IAAK,IAAIA,IAAKK,UAAUC,aAAaqhI,IAEtDF,EAAgB91J,IAAckR,QAAQwjB,UAAUkzG,QAChDlwH,EAAiBrgB,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,oBAAoBkiB,IACnFwZ,EAA+C,YAA5B5rB,EAAe9C,SAAyBkV,EAAYzyB,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAekiB,IAC5JgsI,GAAiBA,EAActxI,SAAWsxI,EAAcrnI,KAAO38B,OAAOoE,KAAK4/J,EAAcrnI,KAAK7H,SAAS1iB,SAASo/B,GAAkB1tB,cAC9HmgJ,EAAiBD,EAAcrnI,IAAI6U,GAAkBjsC,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,UAAU,QAC/HyjC,EAAc,IAAIhX,IAAK,IAAIA,IAAKK,UAAUC,aAAaohI,IACvDj/I,OAAOu0B,YAAcA,GAGnBp6B,EAAOylJ,EAAkBnJ,EAAQ+J,QAAU,KAG1CxgJ,OAAOksI,oBAAsBuK,EAAQ34C,gBAAkB99F,OAAOksI,mBAAmBpuC,gBACpF99F,OAAOksI,mBAAqBuK,GAI1B34C,EACF+/C,GAAmB,KAEnB//C,EAAgBv9G,EAAKjF,MAAMwiH,cAgBzB24C,GAA6B,WAAlB34C,GAA8BA,IAAkB24C,EAAQ34C,gBACjE3jG,GAAgD,oBAAjCA,EAAK6c,gBAAgB+5H,QACtC52I,EAAK6c,gBAAgB+5H,UACZ0F,EAAQtK,WAAkD,oBAA9BsK,EAAQtK,UAAU4E,SACvD0F,EAAQtK,UAAU4E,UAEpB52I,EAAO,KACP0jJ,GAAmB,MAGfgC,EAAwBpJ,EAAQ34C,eAAiB24C,EAAQ34C,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkB+/C,GAE9H,eAAlB//C,EAtFK,CAAAv+F,EAAA7S,KAAA,YAuFF+pJ,EAAQlkD,SAAUstD,EAvFhB,CAAAtgJ,EAAA7S,KAAA,aAyFDoxG,IAAiB+hD,EAzFhB,CAAAtgJ,EAAA7S,KAAA,YA2FmB,WAAlBoxG,GAA+Bv9G,EAAKsC,MAAMg8J,iBA3F3C,CAAAt/I,EAAA7S,KAAA,gBAAA6S,EAAAtC,OAAA,UA4FM,GA5FN,eAgGH4gJ,GAAmB//C,EAhGhBv+F,EAAA7S,KAAA,GAiGG+pJ,EAAQE,aAAa74C,GAjGxB,eAAAv+F,EAAAtC,OAAA,SAqGI9C,GArGJ,WA0GL2lJ,EAAWniI,EACXoiI,EAAe,KAId5lJ,EAYH4lJ,EAAe5lJ,EAAK6c,gBAXhBhX,OAAOsd,UACT/8B,EAAKnC,cAAckgB,UAAU,+BAC7ByhJ,EAAe//I,OAAOsd,UACbtd,OAAO7F,MAChB5Z,EAAKnC,cAAckgB,UAAU,uCAC7ByhJ,EAAe//I,OAAO7F,OAEtB5Z,EAAKnC,cAAckgB,UAAU,yDAC7BwhJ,EAAWZ,GAMXc,GAAgB,EAEdliD,GAAmC,WAAlBA,IAA+BiiD,GAA+C,oBAAxBA,EAAanP,OAhIjF,CAAArxI,EAAA7S,KAAA,gBAAA6S,EAAA9S,KAAA,GAAA8S,EAAA7S,KAAA,GAkICqzJ,EAAanP,SAlId,QAAArxI,EAAA7S,KAAA,iBAAA6S,EAAA9S,KAAA,GAAA8S,EAAAwO,GAAAxO,EAAA,UAoILwgJ,EAAe,KACfD,EAAWZ,EACXc,GAAgB,EAtIX,cA2Ia,eAAlBliD,IACFiiD,EAAe,IAAIU,2BAIjBV,GAAgBH,EAClBzlJ,EAAO,IAAIojB,IAAKwiI,GAEPD,IACT3lJ,EAAOiiJ,EAAcppI,IAKjBitI,EAzJG,eAAA9yI,EAAAnyB,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAyJY,SAAAqS,EAAO2hJ,GAAP,IAAAnJ,EAAA5X,EAAA,OAAA/yH,EAAA7wB,EAAA+Q,KAAA,SAAAoS,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAjS,MAAA,UAGfyzJ,IAAkB5/J,EAAKsC,MAAMs9J,cAHd,CAAAxhJ,EAAAjS,KAAA,eAAAiS,EAAA1B,OAAA,UAIV,GAJU,UAOnB+C,OAAO0gJ,aAAengK,EAAKsC,MAAMsX,KAGY,oBAAlC5Z,EAAKjF,MAAMqlK,qBACpBpgK,EAAKjF,MAAMqlK,qBACXpgK,EAAKjF,MAAMslK,sBAAsB,OAZhBjiJ,EAAAlS,KAAA,EAuBXuqJ,EAAez2J,EAAKjF,MAAMs2I,WAAWS,OAAO8e,cAAgB5wJ,EAAKjF,MAAMs2I,WAAWS,OAAOv0H,SAASm5I,KACnG12J,EAAKsC,MAAMuX,QAAQkZ,mBAAoB0jI,EAxB3B,CAAAr4I,EAAAjS,KAAA,eAAAiS,EAAAjS,KAAA,EAyBTnM,EAAKo8J,eAzBI,WA4Bbp8J,EAAKsC,MAAMuX,QAAQ06I,mBA5BN,CAAAn2I,EAAAjS,KAAA,gBAAAiS,EAAAjS,KAAA,GA6BTnM,EAAKu8J,sBA7BI,YA8BXrG,EAAQlkD,QAAUkkD,EAAQ34C,gBAAgBA,IAAiB24C,EAAQ9qJ,QA9BxD,CAAAgT,EAAAjS,KAAA,aAgCTnM,EAAKsC,MAAMu8I,SAhCF,CAAAzgI,EAAAjS,KAAA,YAiCL0yI,EAAW7+I,EAAKsC,MAAMu8I,UACPl2I,IAAckR,QAAQwjB,UAAUwhH,SACpCC,aAAgBD,EAASyhB,SAAY/C,GAnC3C,CAAAn/I,EAAAjS,KAAA,gBAoCToxJ,IAA0B,EAC1B1e,EAAS6Q,MAAMwG,EAAQ9qJ,QAAS,SAACmN,EAAOglD,GAGtC,GAAIhlD,EACF,OAAOvY,EAAK8C,SAAS,CACnB+7I,UAAS,GACT,WACA7+I,EAAKi5J,YAAY/C,EAAQ9qJ,WAI7BmyJ,IAA0B,EAEtBhgG,EAAStkD,gBACXjZ,EAAKi5J,YAAY/C,EAAQ9qJ,SACjBmyD,EAASgjG,cACjBvgK,EAAKi5J,YAAY/C,EAAQ9qJ,WArDpBgT,EAAA1B,OAAA,UAwDF,GAxDE,eAAA0B,EAAAjS,KAAA,GA4DPnM,EAAKi5J,YAAY/C,EAAQ9qJ,SA5DlB,QAAAgT,EAAAjS,KAAA,wBAAAiS,EAAAjS,KAAA,GA8DPnM,EAAKi5J,cA9DE,QAAA76I,EAAAjS,KAAA,iBAAAiS,EAAAlS,KAAA,GAAAkS,EAAAoP,GAAApP,EAAA,SAuEjBpe,EAAK+8J,yBAAyB,KAAK3+I,EAAAoP,GAAMnD,SAvExB,yBAAAjM,EAAA9Q,SAAA2Q,EAAAnjB,KAAA,aAzJZ,gBAAAyS,GAAA,OAAAqf,EAAApf,MAAA1S,KAAA2S,YAAA,GAqOHkyJ,EAAe/lJ,EACfgmJ,EAAgB/yJ,SAAS7M,EAAKsC,MAAMs9J,eAAe,EAGzD5/J,EAAK8C,SAAS,CACZ6rC,aACAqF,cACA4rH,gBACA/D,iBACA,cAIIptI,EAAmBzuB,EAAKsC,MAAMuX,QAAQiZ,QAAQ5yB,GAC9C01D,EAAejtD,IAAckR,QAAQwjB,UAAUwhH,WAI/B,WAAlBthC,GAA8B3nD,GAAgBA,EAAazoC,SAAWyoC,EAAa/9B,kBAAkBtI,SAASd,KAAuB4nI,GAAmBzgG,EAAampF,gBAAgBxvH,SAAS8mI,EAAehuJ,eAuD3MuR,IAAS5Z,EAAKsC,MAAMsX,KACtB5Z,EAAK8C,SAAS,CACZ8W,QACC,kBAAM8lJ,EAAaE,MACb1J,EAAQ9qJ,SAAWq0J,IAC5BC,EAAaE,IA1DTC,EAAuBL,GAA8B,IAAIxiI,IAAKK,UAAUC,aAAaiiI,GAC/D,OAAxBv/J,EAAKsC,MAAMu8I,UAAqB7+I,EAAKsC,MAAMu8I,SAASpoH,kBAAoBopI,KACpEhhB,EAAW,IAAI2hB,YAASX,EAAqBjqG,EAAa18C,UACpB,oBAArB2lI,EAAS4hB,SAG9BzgK,EAAK8C,SAAS,CACZqyH,oBAAmB,EACnBlK,sBAAqB,IAGvBrxG,EAAO,IAAIojB,IAAK6hH,GAChBA,EAAS4hB,QAAQ5hB,EAAS6hB,MAAO,WAC/B,GAAI1gK,EAAKuC,qBAA8C,IAAxBvC,EAAKsC,MAAMu8I,UAAuB7+I,EAAKsC,MAAMu8I,WAAaA,GAAYjlI,IAAS5Z,EAAKsC,MAAMsX,KAEvH,OAAO,EAGT,IAAMgiJ,EAAe/c,EAAS+c,aACxBhkG,EAAuBinF,EAASjnF,qBAEhCh1D,EAAW,CACfgX,OACAilI,WACAlwG,aACAitH,eACAC,gBACAjkG,wBAIEh+C,IAAS5Z,EAAKsC,MAAMsX,MACtB5Z,EAAK8C,SAASF,EAAU,kBAAM88J,EAAaE,OAE5Ca,QAAQ5hB,EAAS8hB,MAAO,SAACpoJ,EAAO8R,GACjCkI,QAAQha,MAAM,iBAAiBA,EAAM8R,EAAQrqB,EAAKsC,MAAMu8I,UACxDjlI,EAAO+lJ,GAEqB,IAAxB3/J,EAAKsC,MAAMu8I,UACb7+I,EAAK8C,SAAS,CACZ8W,OACAilI,UAAS,GACR,kBAAM6gB,EAAaE,QAI1B5/J,EAAK8C,SAAS,CACZ8W,OACAilI,UAAS,GACR,kBAAM6gB,EAAaE,OA1SnB5gJ,EAAAtC,OAAA,SAuTF9C,GAvTE,yBAAAoF,EAAA1R,SAAAqR,EAAA7jB,KAAA,gBA0TX6nC,mDAAe,SAAApjB,EAAOtiB,EAAMmL,EAASw6B,GAAtB,IAAAg+H,EAAAC,EAAApzJ,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAwT,GAAA,cAAAA,EAAAtT,KAAAsT,EAAArT,MAAA,cAA2By0J,EAA3BC,EAAA/hK,OAAA,QAAA0qB,IAAAq3I,EAAA,IAAAA,EAAA,GAAArhJ,EAAArT,KAAA,EAEAnM,EAAKmpD,eAAelsD,EAAMmL,EAASw6B,EAAKg+H,GAFxC,cAAAphJ,EAAA9C,OAAA,SAAA8C,EAAAtQ,MAAA,wBAAAsQ,EAAAlS,SAAAiS,EAAAzkB,qEAKfgmK,uBAAyB,SAAC7jK,EAAMmL,EAASw6B,GAAwB,IAAnBnQ,EAAmBhlB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAElDglB,GAAa5lB,SAAS4lB,KAAe5lB,SAAS7M,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,KAAOF,EAAKsC,MAAMuX,QAAQkZ,mBACtGN,EAAY,MAEd,IAAM+sI,EAAe/sI,GAAazyB,EAAKsC,MAAMu5J,cAAcppI,GAAazyB,EAAKsC,MAAMu5J,cAAcppI,GAAczyB,EAAKsC,MAAMuX,QAAQkZ,iBAAmB/yB,EAAKsC,MAAMsX,KAAO5Z,EAAKsC,MAAMu5J,cAAc77J,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,IAE5N,IAAKs/J,EACH,OAAO,KAIT,IAEE,MAAO,CAACviK,OAAM01B,SADG,IAAI6sI,EAAaljJ,IAAI23B,SAASrR,EAAKx6B,IAEpD,MAAOmQ,GACPvY,EAAKnC,cAAcq0B,eAAe,6BAA6Bj1B,EAAKmL,EAAQmQ,GAG9E,OAAO,QAGT4wC,qDAAiB,SAAAn6B,EAAO/xB,EAAMmL,EAASw6B,GAAtB,IAAAg+H,EAAApB,EAAA7sI,EAAAgnD,EAAAj+C,EAAAjuB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAsjB,GAAA,cAAAA,EAAApjB,KAAAojB,EAAAnjB,MAAA,UAA2By0J,EAA3BllI,EAAA58B,OAAA,QAAA0qB,IAAAkS,EAAA,IAAAA,EAAA,IAET8jI,EAAeoB,GAAqB5gK,EAAKsC,MAAMqsC,WAAa3uC,EAAKsC,MAAMqsC,WAAc3uC,EAAKsC,MAAMuX,QAAQkZ,iBAAmB/yB,EAAKsC,MAAMsX,KAAO5Z,EAAKsC,MAAMu5J,cAAc77J,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,MAMlL0iC,EARP,CAAAtT,EAAAnjB,KAAA,eAAAmjB,EAAA5S,OAAA,SASN,MATM,cAAA4S,EAAApjB,KAAA,EAcPymB,EAAW,IAAI6sI,EAAaljJ,IAAI23B,SAASrR,EAAKx6B,GAC9CuxE,EAAe,CAAC18E,OAAM01B,YAE5B3yB,EAAK8C,SAAS,SAAAJ,GAEZ,IAAMkwB,EAAYlwB,EAAUkwB,UAAUvmB,OAAQ,SAAAwmB,GAAC,OAAIA,EAAE51B,OAAS08E,EAAa18E,OAG3E,OADA21B,EAAUlqB,KAAKixE,GACR,CACL/mD,eAvBStD,EAAA5S,OAAA,SA2BNi9D,GA3BM,QAAArqD,EAAApjB,KAAA,GAAAojB,EAAA9B,GAAA8B,EAAA,SA6BbiD,QAAQha,MAAM,6BAA6Btb,EAAKmL,EAAQw6B,EAAxDtT,EAAA9B,IA7Ba,eAAA8B,EAAA5S,OAAA,SAgCR,MAhCQ,yBAAA4S,EAAAhiB,SAAA0hB,EAAAl0B,KAAA,yEAmCjBkvD,aAAe,WAEb,GAAIhqD,EAAKsC,MAAMwnD,SACb,OAAO9pD,EAAKsC,MAAMwnD,SAGpB,IAAMi3G,EAAep4J,IAAckR,QAAQwjB,UAAUysB,SACjDA,EAAW,KACTr3B,EAAYzyB,EAAKsC,MAAMuX,QAAQiZ,QAAQ5yB,IAAMF,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,GAE/E,GAAI6gK,GAAgBA,EAAa5zI,UAAkE,IAAvD4zI,EAAalpI,kBAAkBxgB,QAAQob,GAAmB,CACpG,IAAMuuI,EAAiBD,EAAa7nJ,OACpC8nJ,EAAennJ,QAAUknJ,EAAa5hB,WAAWn/I,EAAKsC,MAAMuX,QAAQiZ,QAAQ5yB,GAAGyI,IAAckR,QAAQ6uC,mBACrGoB,EAAW,IAAIm3G,KAASD,GAS1B,OANAvhJ,OAAOqqC,SAAWA,EAElB9pD,EAAK8C,SAAS,CACZgnD,aAGKA,KAGTmvG,iCAAc,SAAA1qI,IAAA,IAAAnjB,EAAAo2C,EAAA60G,EAAA6K,EAAAp3G,EAAA01F,EAAA2hB,EAAAC,EAAAzyI,EAAAlhB,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA4iB,GAAA,cAAAA,EAAA1iB,KAAA0iB,EAAAziB,MAAA,UAAOf,EAAPujB,EAAA7vB,OAAA,QAAA0qB,IAAAmF,EAAA,IAAAA,EAAA,GAEN6yB,EAAgBxhD,EAAKjF,MAAMymD,cAC3B60G,EAAiBr2J,EAAKnC,cAAc6rD,kBAAkB,WAExDlI,EALQ,CAAA5yB,EAAAziB,KAAA,eAAAyiB,EAAAlS,OAAA,SAOH1c,EAAK8C,SAAS,CACnBsI,QAAQo2C,EACR2zE,oBAAmB,GACnB,WACAn1H,EAAKo1G,uBAXG,UAa4B,WAA7Bp1G,EAAKjF,MAAMwiH,eAA+Bv9G,EAAKjF,MAAMwiH,eAAkBv9G,EAAKjF,MAAMm7J,QAAQlkD,OAbzF,CAAApjF,EAAAziB,KAAA,eAAAyiB,EAAAlS,OAAA,SAcH1c,EAAK8C,SAAS,CACnBsI,QAAQ,KACR+pH,oBAAmB,KAhBX,UAAAvmG,EAAA1iB,KAAA,EAwBNlM,EAAKjF,MAAMm7J,QAAQlkD,QAAUhyG,EAAKjF,MAAMm7J,QAAQ34C,gBAAgBv9G,EAAKjF,MAAMwiH,eAAiBv9G,EAAKjF,MAAMm7J,QAAQ9qJ,UACjHA,EAAUpL,EAAKjF,MAAMm7J,QAAQ9qJ,SAG1BA,EA5BK,CAAAwjB,EAAAziB,KAAA,gBAAAyiB,EAAAziB,KAAA,GA6BcnM,EAAKsC,MAAMsX,KAAK0C,IAAIg0I,cA7BlC,SA6BF4Q,EA7BEtyI,EAAA1f,OA+BOgyJ,EAAQpiK,SACrBsM,EAAU81J,EAAQ,IAhCZ,WAoCL91J,IACHA,EAAUpL,EAAKjF,MAAMm7J,QAAQ9qJ,SAG1BA,GAAWpL,EAAKsC,MAAM8I,UAAYA,EAxC7B,CAAAwjB,EAAAziB,KAAA,gBAAAyiB,EAAAlS,OAAA,SAyCD1c,EAAK8C,SAAS,CACnBqyH,oBAAoB,KA1Cd,YAiDN/pH,EAjDM,CAAAwjB,EAAAziB,KAAA,cAoDF29C,EAAW9pD,EAAKgqD,gBApDd,CAAAp7B,EAAAziB,KAAA,gBAAAyiB,EAAAziB,KAAA,GAwDsB29C,EAAS01F,gBAxD/B,SAwDAA,EAxDA5wH,EAAA1f,OA0DeswI,EAAc1gJ,QAAU2gB,OAAO4hJ,SAE9CF,EAAqB,GACrBliJ,eACFkiJ,EAAqBliJ,aAAaC,QAAQ,uBAAyBvU,KAAKwU,MAAMF,aAAaC,QAAQ,uBAAyBvU,KAAKwU,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvLsgI,EAAczgJ,QAAQ,SAAC8xB,EAAE5oB,GAEvB,IAAMq5J,EAAiBzwI,EAAE5zB,MAG2B,IAAhDkkK,EAAmB9pJ,QAAQiqJ,KAC7B7hJ,OAAO4hJ,OAAO34J,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQ1I,EAAKnC,cAAco1B,8BAA8BpC,EAAE0wI,YAGtGJ,EAAmBz4J,KAAK44J,MAKxBriJ,cACFjf,EAAKnC,cAAcyhB,gBAAgB,qBAAqB3U,KAAKC,UAAUu2J,KAhFrE,QAsFRnhK,EAAKnC,cAAckb,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,YACbF,WAAY29I,IAMdr2J,EAAK8C,SAAS,CACZsI,UAEA+pH,oBAAoB,GACpB,WAEAn1H,EAAKo1G,sBArGCxmF,EAAAziB,KAAA,wBAAAyiB,EAAAlS,OAAA,SA4GD1c,EAAK8C,SAAS,CACnBsI,QAAQ,KACR+pH,oBAAoB,KA9Gd,QAAAvmG,EAAAziB,KAAA,oBAAAyiB,EAAA1iB,KAAA,GAAA0iB,EAAApB,GAAAoB,EAAA,SAmHV5uB,EAAK8C,SAAS,CACZqyH,oBAAoB,IAItBn1H,EAAKnC,cAAckgB,UAAU,yCAA7B6Q,EAAApB,MAKIoB,EAAApB,IAASoB,EAAApB,GAAMnD,SAAWuE,EAAApB,GAAMnD,QAAQkF,SAAS,yCA7H3C,CAAAX,EAAAziB,KAAA,gBAAAyiB,EAAAlS,OAAA,kBAkIJ0kJ,EAAUxyI,EAAApB,cAAiB0nC,MAC7Bl1D,EAAKnC,cAAcwpD,kBAAoB+5G,GACzCI,KAAA5yI,EAAApB,IApIQ,yBAAAoB,EAAAthB,SAAAihB,EAAAzzB,KAAA,eA6Id0hK,qBAAuB,SAAAjkJ,GACrB,IAAIq7H,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAK80J,0BAA2B,EACvC7mB,EAAOjuI,KAAKi1J,qBAAsB,EAClC56J,EAAK8C,SAAS,CAAE8wI,cAGlBx+B,wDAAoB,SAAAnlF,EAAOwxI,GAAP,IAAA1yI,EAAAE,EAAA6sI,EAAAI,EAAAtsJ,EAAA,OAAAkc,EAAA7wB,EAAA+Q,KAAA,SAAAqkB,GAAA,cAAAA,EAAAnkB,KAAAmkB,EAAAlkB,MAAA,UAEbnM,EAAKsC,MAAMsX,KAFE,CAAAyW,EAAAlkB,KAAA,eAAAkkB,EAAA3T,OAAA,UAGT,GAHS,cAMlB+kJ,EAAiBA,EAAiBzhK,EAAKnC,cAAc2O,MAAMi1J,GAAkB,KAN3DpxI,EAAAnkB,KAAA,EAAAmkB,EAAAlkB,KAAA,EAcN4P,QAAQqD,IAAI,CACpBpf,EAAKsC,MAAMsX,KAAK0C,IAAIsP,WAAW5rB,EAAKsC,MAAM8I,SAC1CpL,EAAK+rB,gBAAgB/rB,EAAKsC,MAAM8I,SAChCpL,EAAK8tD,qBAjBS,OAAA/+B,EAAAsB,EAAAnhB,KAAA+f,EAAAx0B,OAAA6yB,GAAA,EAAA7yB,CAAAs0B,EAAA,GAWd+sI,EAXc7sI,EAAA,GAYditI,EAZcjtI,EAAA,GAadrf,EAbcqf,EAAA,GAsBZ6sI,IAGEA,EAAev9I,WAAWgR,SAAS,OACrCusI,EAAiB97J,EAAKsC,MAAMsX,KAAKkX,MAAMK,MAAM2qI,IAI/CA,EAAiB97J,EAAKsC,MAAMsX,KAAKkX,MAAMI,QACrC4qI,EACA,SAGFA,EAAiB97J,EAAKnC,cAAc2O,MAAMsvJ,GAAgBv9I,WAE1Dve,EAAK8C,SAAS,CACZg5J,mBAGF97J,EAAKnC,cAAckgB,UAAU,oBAAqB+9I,IAKhDI,GAEFA,EAAsBl8J,EAAKnC,cAAc2O,MAAM0vJ,GAG3CuF,GAAkBzhK,EAAKsC,MAAM45J,qBAAuBl8J,EAAKnC,cAAcwxD,qBAAqBrvD,EAAKsC,MAAM45J,oBAAoBtsJ,GAAe2O,aAAe29I,EAAoB39I,aAC/K29I,EAAsBA,EAAoBlvJ,KAAKy0J,IAGjDvF,EAAsBl8J,EAAKnC,cAAcmS,iBAAiBksJ,EAAoBtsJ,GAAe2O,WAK7Fve,EAAK8C,SAALrI,OAAA2zI,EAAA,EAAA3zI,CAAA,CACEyhK,uBADF,iBAAAz6J,OAEoBzB,EAAKjF,MAAMgK,eAAiBm3J,KAIhDl8J,EAAKnC,cAAckgB,UAAU,kCAAkCm+I,GAlEjD7rI,EAAAlkB,KAAA,iBAAAkkB,EAAAnkB,KAAA,GAAAmkB,EAAA7C,GAAA6C,EAAA,SAqEhBrwB,EAAKnC,cAAckgB,UAAU,iCAA7BsS,EAAA7C,IArEgB,yBAAA6C,EAAA/iB,SAAA2iB,EAAAn1B,KAAA,qEAyEpByhK,yCAAsB,SAAAh8H,IAAA,IAAA3N,EAAAI,EAAAgjD,EAAAttB,EAAAg5G,EAAAp1F,EAAAgjD,EAAAqyC,EAAAvpB,EAAAwpB,EAAAh/J,EAAA,OAAAkpB,EAAA7wB,EAAA+Q,KAAA,SAAA00B,GAAA,cAAAA,EAAAx0B,KAAAw0B,EAAAv0B,MAAA,UAEfnM,EAAKsC,MAAMsX,MAAS5Z,EAAKjF,MAAM8zB,oBAFhB,CAAA6R,EAAAv0B,KAAA,eAAAu0B,EAAAhkB,OAAA,UAGX,GAHW,cAQdkW,EAAY,GACZI,EAAoB,GACpBgjD,EAAoBnpE,SAAS7M,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,IACzDwoD,EAAoB1oD,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,oBAEpEvQ,EAAKjF,MAAM6uG,6BACbnvG,OAAOoE,KAAKmB,EAAKjF,MAAM6uG,6BAA6B7qG,QAAS,SAAA0zB,GAC3DO,EAAkBP,GAAa,GAC/B,IAAMm5B,EAAa5rD,EAAKjF,MAAM6uG,4BAA4Bn3E,GAC1Dh4B,OAAOoE,KAAK+sD,GAAY7sD,QAAS,SAAAo9B,GAC/B,IAAMjxB,EAAkBlL,EAAKjF,MAAM6uG,4BAA4Bn3E,GAAW0J,GAC1E1hC,OAAOoE,KAAKqM,GAAiBnM,QAAS,SAAAwN,GACpC,IAAMtH,EAAciG,EAAgBqB,GAEpCvM,EAAKnC,cAAckgB,UAAU,qCAAqCxR,EAAOtH,EAAYmD,SACrF4qB,EAAkBP,GAAW/pB,KAAK1I,EAAK8gK,uBAAuBv0J,EAAOtH,EAAYmD,QAASnD,EAAY29B,IAAKnQ,IAE3GzyB,EAAKnC,cAAckgB,UAAU,qCAAqC9Y,EAAYmoB,KAAK7gB,MAAOtH,EAAYmoB,KAAKhlB,SAC3G4qB,EAAkBP,GAAW/pB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYmoB,KAAK7gB,MAAOtH,EAAYmoB,KAAKhlB,QAASnD,EAAYmoB,KAAKwV,IAAKnQ,IAEtIxtB,EAAY8C,UAAUhJ,QAAtB,eAAA88B,EAAAphC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA8B,SAAAikB,EAAOxzB,EAAE4L,GAAT,OAAA6jB,EAAA7wB,EAAA+Q,KAAA,SAAA+jB,GAAA,cAAAA,EAAA7jB,KAAA6jB,EAAA5jB,MAAA,OAC5BnM,EAAKnC,cAAckgB,UAAU,6BAA6B1hB,EAAEkQ,MAAM,YAAYlQ,GAC9E22B,EAAkBP,GAAW/pB,KAAK1I,EAAK8gK,uBAAuBzkK,EAAEkQ,MAAOlQ,EAAE+L,QAAS/L,EAAEumC,IAAKnQ,IAF7D,wBAAA1C,EAAAziB,SAAAuiB,EAAA/0B,SAA9B,gBAAA8mC,EAAAC,GAAA,OAAAhG,EAAAruB,MAAA1S,KAAA2S,YAAA,WAWFi0J,EAAwB1hK,EAAKnC,cAAc0S,gBAAgB,CAAC,YAAYylE,MAE5Ev7E,OAAOoE,KAAK6iK,GAAuB3iK,QAAS,SAAA8Z,GAC1C,IAAM8gE,EAAe+nF,EAAsB7oJ,GAC3C,GAA6B,OAAzB8gE,EAAavxE,SAAyC,OAArBuxE,EAAa/2C,IAAa,CAC7D,IAAMnQ,EAAYknD,EAAalnD,UAAY5lB,SAAS8sE,EAAalnD,WAAaujD,EAE9EpjD,EAAUlqB,KAAK1I,EAAK8gK,uBAAuBjoJ,EAAc8gE,EAAavxE,QAASuxE,EAAa/2C,IAAKnQ,IACjGO,EAAkBgjD,GAAmBttE,KAAK1I,EAAK8gK,uBAAuBjoJ,EAAc8gE,EAAavxE,QAASuxE,EAAa/2C,IAAKnQ,QAK5H65C,EAAYtsE,EAAKnC,cAAc0S,gBAAgB,CAAC,gBAEpD9V,OAAOoE,KAAKytE,GAAWvtE,QAAS,SAAAwN,GAC9B,IAAMg3B,EAAiB+oC,EAAU//D,GAC5Bg3B,EAAepW,SAGpBu7B,EAAkB3pD,QAAS,SAAA0zB,GAEzB,IAAMkD,EAAkB4N,EAAe29C,WAAa39C,EAAe29C,UAAUzuD,GAAa8Q,EAAe29C,UAAUzuD,GAAa8Q,EAAen7B,QAC/IpI,EAAKnC,cAAckgB,UAAU,qCAAsCxR,EAAOopB,GACtE9oB,SAAS4lB,KAAe5lB,SAASmpE,IACnCpjD,EAAUlqB,KAAK1I,EAAK8gK,uBAAuBv0J,EAAOopB,EAAiB4N,EAAeX,MAEpF5P,EAAkBP,GAAW/pB,KAAK1I,EAAK8gK,uBAAuBv0J,EAAOopB,EAAiB4N,EAAeX,IAAKnQ,QAK5GzyB,EAAKjF,MAAM8zB,qBAEbp0B,OAAOoE,KAAKmB,EAAKjF,MAAM8zB,qBAAqB9vB,QAAS,SAAAo9B,GACnD,IAAMjxB,EAAkBlL,EAAKjF,MAAM8zB,oBAAoBsN,GACvD1hC,OAAOoE,KAAKqM,GAAiBnM,QAAS,SAAAwN,GACpC,IAAMtH,EAAciG,EAAgBqB,GAgBpC,GAdAvM,EAAKnC,cAAckgB,UAAU,qCAAqCxR,EAAOtH,EAAYmD,SACrFwqB,EAAUlqB,KAAK1I,EAAK8gK,uBAAuBv0J,EAAOtH,EAAYmD,QAASnD,EAAY29B,MAGnF5iC,EAAKnC,cAAckgB,UAAU,qCAAqC9Y,EAAYmoB,KAAK7gB,MAAOtH,EAAYmoB,KAAKhlB,SAC3GwqB,EAAUlqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYmoB,KAAK7gB,MAAOtH,EAAYmoB,KAAKhlB,QAASnD,EAAYmoB,KAAKwV,MAG9G39B,EAAY8C,UAAUhJ,QAAtB,eAAAixB,EAAAv1B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA8B,SAAAizB,EAAOxiC,EAAE4L,GAAT,OAAA6jB,EAAA7wB,EAAA+Q,KAAA,SAAAgzB,GAAA,cAAAA,EAAA9yB,KAAA8yB,EAAA7yB,MAAA,OAC5BnM,EAAKnC,cAAckgB,UAAU,6BAA6B1hB,EAAEkQ,MAAM,YAAYlQ,GAC9Eu2B,EAAUlqB,KAAK1I,EAAK8gK,uBAAuBzkK,EAAEkQ,MAAOlQ,EAAE+L,QAAS/L,EAAEumC,MAFrC,wBAAA5D,EAAA1xB,SAAAuxB,EAAA/jC,SAA9B,gBAAA6mC,EAAAoB,GAAA,OAAA/S,EAAAxiB,MAAA1S,KAAA2S,YAAA,IAMIxI,EAAYmwB,UAAU,CAExB,GAAInwB,EAAYmwB,UAAUmrB,YAAY,CACpC,IAAMA,EAAct7C,EAAYmwB,UAAUmrB,YAC1CvgD,EAAKnC,cAAckgB,UAAU,6BAA6BwiC,EAAYtjD,KAAK,YAAYsjD,GACvF3tB,EAAUlqB,KAAK1I,EAAK8gK,uBAAuBvgH,EAAYtjD,KAAMsjD,EAAYn4C,QAASm4C,EAAY3d,MAWhG,GAPI39B,EAAYmwB,UAAU2xE,cACxB9hG,EAAYmwB,UAAU2xE,aAAahoG,QAAnC,eAAAmxB,EAAAz1B,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAA2C,SAAA+zB,EAAOtjC,EAAE4L,GAAT,OAAA6jB,EAAA7wB,EAAA+Q,KAAA,SAAA8zB,GAAA,cAAAA,EAAA5zB,KAAA4zB,EAAA3zB,MAAA,OACzCnM,EAAKnC,cAAckgB,UAAU,6BAA6B1hB,EAAEkQ,MAAM,YAAYlQ,GAC9Eu2B,EAAUlqB,KAAK1I,EAAK8gK,uBAAuBzkK,EAAEkQ,MAAOlQ,EAAE+L,QAAS/L,EAAEumC,MAFxB,wBAAA9C,EAAAxyB,SAAAqyB,EAAA7kC,SAA3C,gBAAAspC,EAAAC,GAAA,OAAAnU,EAAA1iB,MAAA1S,KAAA2S,YAAA,IAMExI,EAAYmwB,UAAUC,kBAAkB,CAC1C,IAAMA,EAAoBpwB,EAAYmwB,UAAUC,kBAChDr1B,EAAKnC,cAAckgB,UAAU,6BAA6BsX,EAAkBp4B,KAAK,YAAYo4B,GAC7FzC,EAAUlqB,KAAK1I,EAAK8gK,uBAAuBzrI,EAAkBp4B,KAAMo4B,EAAkBjtB,QAASitB,EAAkBuN,YAOpH0sF,EAAiBtvH,EAAKnC,cAAc0S,gBAAgB,CAAC,aAAa,aACpEvQ,EAAKjF,MAAMs9B,mBACb59B,OAAOoE,KAAKmB,EAAKjF,MAAMs9B,mBAAmBt5B,QAAS,SAAAg6B,GACjD,IAAMg/C,EAAS/3E,EAAKjF,MAAMs9B,kBAAkBU,GAC5Ct+B,OAAOoE,KAAKk5E,GAAQh5E,QAAS,SAAAwN,GAC3B,IAAMtH,EAAc8yE,EAAOxrE,GACtB+iH,EAAe5mE,oBAAqB4mE,EAAe5mE,kBAAkBn5B,SAASymD,KAC7E/wE,EAAY29B,KACdhQ,EAAUlqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY29B,MAE/FhQ,EAAUlqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYuhE,GAAGvpE,KAAKgI,EAAYuhE,GAAGp+D,QAAQnD,EAAYuhE,GAAG5jC,MACrGhQ,EAAUlqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYwnE,GAAGxvE,KAAKgI,EAAYwnE,GAAGrkE,QAAQnD,EAAYwnE,GAAG7pC,MACrGhQ,EAAUlqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAY07B,IAAI1jC,KAAKgI,EAAY07B,IAAIv4B,QAAQnD,EAAY07B,IAAIiC,MACxGhQ,EAAUlqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYuhE,GAAG9rC,WAAWz9B,KAAKgI,EAAYuhE,GAAG9rC,WAAWtyB,QAAQnD,EAAYuhE,GAAG9rC,WAAWkI,MACtIhQ,EAAUlqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYwnE,GAAG/xC,WAAWz9B,KAAKgI,EAAYwnE,GAAG/xC,WAAWtyB,QAAQnD,EAAYwnE,GAAG/xC,WAAWkI,OAGpI39B,EAAY29B,KACd5P,EAAkB,GAAGtqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY29B,IAAI,IAE9G5P,EAAkB,GAAGtqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYuhE,GAAGvpE,KAAKgI,EAAYuhE,GAAGp+D,QAAQnD,EAAYuhE,GAAG5jC,IAAI,IACpH5P,EAAkB,GAAGtqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYwnE,GAAGxvE,KAAKgI,EAAYwnE,GAAGrkE,QAAQnD,EAAYwnE,GAAG7pC,IAAI,IACpH5P,EAAkB,GAAGtqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAY07B,IAAI1jC,KAAKgI,EAAY07B,IAAIv4B,QAAQnD,EAAY07B,IAAIiC,IAAI,IACvH5P,EAAkB,GAAGtqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYuhE,GAAG9rC,WAAWz9B,KAAKgI,EAAYuhE,GAAG9rC,WAAWtyB,QAAQnD,EAAYuhE,GAAG9rC,WAAWkI,IAAI,IACrJ5P,EAAkB,GAAGtqB,KAAK1I,EAAK8gK,uBAAuB77J,EAAYwnE,GAAG/xC,WAAWz9B,KAAKgI,EAAYwnE,GAAG/xC,WAAWtyB,QAAQnD,EAAYwnE,GAAG/xC,WAAWkI,IAAI,QAKrJ++H,EAA0B3hK,EAAKnC,cAAc0S,gBAAgB,CAAC,QAAQ,SAAS,sBAC/E6nI,EAASp4I,EAAKnC,cAAc0S,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,oBAC5E9V,OAAOoE,KAAKu5I,GAAQr5I,QAAQ,SAAA2hH,GAC1B,IAAMrnF,EAAc++G,EAAO13B,GACvBihD,EAAwBpyI,SAASymD,IACnCpjD,EAAUlqB,KAAK1I,EAAK8gK,uBAAuBznI,EAAYp8B,KAAKo8B,EAAYjxB,QAAQixB,EAAYuJ,MAE9F5P,EAAkB,GAAGtqB,KAAK1I,EAAK8gK,uBAAuBznI,EAAYp8B,KAAKo8B,EAAYjxB,QAAQixB,EAAYuJ,IAAI,MAGvGg/H,EAAennK,OAAOC,OAAO,GAAGsF,EAAKsC,MAAMswB,WACjDA,EAAU7zB,QAAS,SAAA46E,GACjB,GAAIA,EAAa,CACf,IAAMkoF,EAAgBD,EAAarnJ,KAAM,SAAAsY,GAAC,OAAIA,EAAE51B,OAAO08E,EAAa18E,OACpE,GAAK4kK,EAEE,CACL,IAAMC,EAAgBF,EAAavqJ,QAAQwqJ,GAC3CD,EAAaE,GAAiBnoF,OAH9BioF,EAAal5J,KAAKixE,MAUlB/2E,EAAW,CACfowB,oBACAJ,UAAUgvI,EACV32C,sBAAqB,GA/KHvqF,EAAAhkB,OAAA,SAkLb1c,EAAK8C,SAASF,IAlLD,yBAAA89B,EAAApzB,SAAAizB,EAAAzlC,WAqLtB03B,wDAAoB,SAAA2N,EAAOtnB,GAAP,IAAA8Z,EAAA1tB,EAAA,OAAA6mB,EAAA7wB,EAAA+Q,KAAA,SAAAq0B,GAAA,cAAAA,EAAAn0B,KAAAm0B,EAAAl0B,MAAA,WACdwmB,EAAW3yB,EAAKsC,MAAMswB,UAAUrY,KAAK,SAAAsY,GAAC,OAAIA,EAAE51B,OAAS4b,OAExC7Y,EAAKjF,MAAMkK,YAHV,CAAAo7B,EAAAl0B,KAAA,eAIVlH,EAAcjF,EAAKjF,MAAMkK,YAJfo7B,EAAAl0B,KAAA,EAKCnM,EAAK2iC,aAAa9pB,EAAc5T,EAAYmD,QAASnD,EAAY29B,KALlE,OAKhBjQ,EALgB0N,EAAAnxB,KAAA,cAAAmxB,EAAA3jB,OAAA,SAQXiW,EAAWA,EAASA,SAAW,MARpB,wBAAA0N,EAAA/yB,SAAA6yB,EAAArlC,iEAWpBgzD,sCAAmB,SAAA7sB,IAAA,IAAArxB,EAAA,OAAAkc,EAAA7wB,EAAA+Q,KAAA,SAAAu1B,GAAA,cAAAA,EAAAr1B,KAAAq1B,EAAAp1B,MAAA,UACbyD,EAAgB,KAEf5P,EAAKsC,MAAMsN,cAHC,CAAA2xB,EAAAp1B,KAAA,eAAAo1B,EAAAp1B,KAAA,EAKOnM,EAAKnC,cAAciwD,iBAAiB9tD,EAAKjF,MAAMgK,eALtD,OAKf6K,EALe2xB,EAAAryB,KAOflP,EAAK8C,SAAS,CACZ8M,kBARa2xB,EAAAp1B,KAAA,uBAAAo1B,EAAAp1B,KAAA,GAWQ,IAAI4P,QAAJ,eAAAgmJ,EAAAtnK,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAa,SAAA61B,EAAOtlB,EAASC,GAAhB,OAAA0P,EAAA7wB,EAAA+Q,KAAA,SAAA01B,GAAA,cAAAA,EAAAx1B,KAAAw1B,EAAAv1B,MAAA,OAClCgQ,EAAQnc,EAAKsC,MAAMsN,eADe,wBAAA8xB,EAAAp0B,SAAAm0B,EAAA3mC,SAAb,gBAAAypC,EAAAuC,GAAA,OAAAi7H,EAAAv0J,MAAA1S,KAAA2S,YAAA,IAXR,QAWfmC,EAXe2xB,EAAAryB,KAAA,eAAAqyB,EAAA7kB,OAAA,SAgBV9M,GAhBU,yBAAA2xB,EAAAj0B,SAAA2zB,EAAAnmC,WAmBnBixB,sDAAkB,SAAAiW,EAAO52B,GAAP,IAAAunB,EAAA,OAAA7G,EAAA7wB,EAAA+Q,KAAA,SAAAw2B,GAAA,cAAAA,EAAAt2B,KAAAs2B,EAAAr2B,MAAA,cAAAq2B,EAAAr2B,KAAA,EACOnM,EAAKwyB,kBAAkBxyB,EAAKjF,MAAMgK,eADzC,UACV4tB,EADU6P,EAAAtzB,KAAA,CAAAszB,EAAAr2B,KAAA,eAIdnM,EAAKnC,cAAcq0B,eAAe,sBAAuBlyB,EAAKjF,MAAMgK,eAJtDy9B,EAAA9lB,OAAA,SAKP,MALO,UAQXiW,EAAS6hB,QAAT,UARW,CAAAhS,EAAAr2B,KAAA,eASdnM,EAAKkyB,eAAe,+BATNsQ,EAAA9lB,OAAA,SAUP,MAVO,cAAA8lB,EAAAr2B,KAAA,GAaHwmB,EAAS6hB,QAAQwtH,UAAU52J,GAASspC,OAAOkQ,MAAM,SAAArsC,GAC5DvY,EAAKnC,cAAckgB,UAAnB,iBAAAtc,OAA8CzB,EAAKjF,MAAMgK,cAAzD,YAAkFwT,KAdpE,eAAAiqB,EAAA9lB,OAAA,SAAA8lB,EAAAtzB,MAAA,yBAAAszB,EAAAl1B,SAAA00B,EAAAlnC,iEAkBlBmnK,2BAA6B,WAE3B,IAAMpkB,EACyB,qBAAtB79I,EAAKjF,MAAMypD,QACiC,qBAA5CxkD,EAAKjF,MAAMypD,OAAOq5F,sBACrB79I,EAAKjF,MAAMypD,OAAOq5F,sBAClB,EAEAoe,EACJj8J,EAAKsC,MAAMw5J,eAAiBje,EAE9B79I,EAAK8C,SAAS,CACZm5J,yBAIJppD,gEAA4B,SAAA3vE,EAAOk9H,GAAP,OAAAt0I,EAAA7wB,EAAA+Q,KAAA,SAAA83B,GAAA,cAAAA,EAAA53B,KAAA43B,EAAA33B,MAAA,OAErBnM,EAAKsC,MAAM8I,UACdpL,EAAKjF,MAAMslK,sBAAsBD,GAEjCpgK,EAAKkiK,uBALmB,wBAAAp+H,EAAAx2B,SAAA41B,EAAApoC,iEAS5BwiB,mBAAqB,WAClB,IAAMmV,EAAyC,qBAAtBzyB,EAAKjF,MAAMypD,QAAuE,qBAAtCxkD,EAAKjF,MAAMypD,OAAOtnB,gBAAkCl9B,EAAKjF,MAAMypD,OAAOtnB,gBAAkBv0B,IAAckR,QAAQqjB,gBAEnL,MAAO,CACLh9B,GAAIuyB,EACJx1B,KAHkBw1B,GAAa9pB,IAAckR,QAAQ6uC,kBAAkBj2B,GAAa9pB,IAAckR,QAAQ6uC,kBAAkBj2B,GAAWx1B,KAAO,cAOlJmuC,uCAAoB,SAAAtG,IAAA,IAAArS,EAAAqK,EAAAsiH,EAAA+iB,EAAA10J,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAw6B,GAAA,cAAAA,EAAAt6B,KAAAs6B,EAAAr6B,MAAA,UAAOsmB,EAAP0vI,EAAArjK,OAAA,QAAA0qB,IAAA24I,EAAA,GAAAA,EAAA,GAAiB,KAC7BrlI,EAAc98B,EAAKnC,cAAco/B,iBADrBuJ,EAAAhZ,GAKN3gB,SAAS4lB,GALH+T,EAAAhZ,GAAA,CAAAgZ,EAAAr6B,KAAA,eAAAq6B,EAAAr6B,KAAA,EAKuB2wB,EAAYxgB,IAAI2gD,IAAIC,QAL3C,OAAA12B,EAAAhZ,GAAAgZ,EAAAt3B,KAAA,UAKlBujB,EALkB+T,EAAAhZ,GAAAgZ,EAAAoN,GAME5zC,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,oBAAoBkiB,EAAU,SAN9E+T,EAAAoN,GAAA,CAAApN,EAAAr6B,KAAA,gBAAAq6B,EAAAr6B,KAAA,GAMgG2wB,EAAYxgB,IAAI2gD,IAAImlG,iBANpH,QAAA57H,EAAAoN,GAAApN,EAAAt3B,KAAA,eAMZkwI,EANY54G,EAAAoN,GAAApN,EAAA9pB,OAAA,SAQX,CACLxc,GAAGuyB,EACHx1B,KAAKmiJ,IAVW,yBAAA54G,EAAAl5B,SAAAw3B,EAAAhqC,WAcrBunK,kCAAe,SAAA39H,IAAA,OAAA5Y,EAAA7wB,EAAA+Q,KAAA,SAAA44B,GAAA,cAAAA,EAAA14B,KAAA04B,EAAAz4B,MAAA,cAAAy4B,EAAA14B,KAAA,EAAA04B,EAAAloB,OAAA,SAEJ1c,EAAKsC,MAAMsX,KAAK0C,IAAI2gD,IAAIC,MAAM,SAAC3kD,EAAOka,GAC3C,IAAIK,EAAOr4B,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMuX,QAAQiZ,SACtCA,EAAQ5yB,GAAKuyB,EACb,IAAI5Y,EAAUpf,OAAOC,OAAO,GAAGsF,EAAKsC,MAAMuX,SAC1CA,EAAQiZ,QAAUA,EAClBjZ,EAAQkZ,iBAAmBpqB,IAAckR,QAAQ+jI,gBAAgBruH,SAASkD,GAC1EzyB,EAAK8C,SAAS,CAAE+W,eARP,OAAA+qB,EAAA14B,KAAA,EAAA04B,EAAApX,GAAAoX,EAAA,SAWX5kC,EAAKnC,cAAckgB,UAAU,6BAA7B6mB,EAAApX,IAXW,wBAAAoX,EAAAt3B,SAAAo3B,EAAA5pC,KAAA,cAefshK,kCAAe,SAAAj0H,IAAA,IAAA1V,EAAA5Y,EAAA+jJ,EAAA0E,EAAAptC,EAAAqtC,EAAA90J,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAy8B,GAAA,cAAAA,EAAAv8B,KAAAu8B,EAAAt8B,MAAA,cAAOsmB,EAAP8vI,EAAAzjK,OAAA,QAAA0qB,IAAA+4I,EAAA,GAAAA,EAAA,GAAiB,MACxB1oJ,EADOpf,OAAA+4B,EAAA,EAAA/4B,CAAA,GACOuF,EAAKsC,MAAMuX,UAEvB6Y,SAAW1yB,EAAKsd,qBAHXmrB,EAAAt8B,KAAA,EAIWnM,EAAKorC,kBAAkB3Y,GAJlC,cAIb5Y,EAAQiZ,QAJK2V,EAAAv5B,KAMP0uJ,IAAuB/jJ,EAAQiZ,QAAQ5yB,GAC7C2Z,EAAQkZ,kBAAoB6qI,GAAsB/jJ,EAAQiZ,QAAQ5yB,KAAO2Z,EAAQ6Y,SAASxyB,GAC1F2Z,EAAQ06I,oBAAsB16I,EAAQiZ,QAAQ5yB,IAAMyI,IAAckR,QAAQ+jI,gBAAgBruH,SAAS1V,EAAQiZ,QAAQ5yB,IAE7GoiK,EAAwBzoJ,EAAQiZ,QAAQ5yB,IAAM2Z,EAAQiZ,QAAQ5yB,KAAOF,EAAKsC,MAAMuX,QAAQiZ,QAAQ5yB,GAChGg1H,EAAyBr7G,EAAQ6Y,SAASxyB,IAAM2Z,EAAQ6Y,SAASxyB,KAAOF,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,KAEnFF,EAAKsC,MAAMuX,QAAQiZ,QAAQ5yB,IAAMoiK,GAAyBptC,IAA2Bl1H,EAAKsC,MAAMs7J,qBAIrH59J,EAAK8C,SAAS,CACZ+W,UACA+jJ,uBAnBSn1H,EAAA/rB,OAAA,SAuBN7C,GAvBM,yBAAA4uB,EAAAn7B,SAAA66B,EAAArtC,WA0Bfye,gEAA4B,SAAA0tB,EAAOpuB,EAAc2pJ,GAArB,IAAAtpJ,EAAAjT,EAAApD,EAAAsxD,EAAAb,EAAAsN,EAAA9kD,EAAA2mJ,EAAAr3J,EAAAwnB,EAAAD,EAAA+vI,EAAAtvG,EAAAgB,EAAAx2C,EAAA+kJ,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA2B,EAAAt1J,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAAg8B,GAAA,cAAAA,EAAA97B,KAAA87B,EAAA77B,MAAA,UAAqC+M,EAArC6pJ,EAAAjkK,OAAA,QAAA0qB,IAAAu5I,EAAA,GAAAA,EAAA,GAA8C,GAAI98J,EAAlD88J,EAAAjkK,OAAA,QAAA0qB,IAAAu5I,EAAA,GAAAA,EAAA,GAA0D,KAAMlgK,EAAhEkgK,EAAAjkK,OAAA,QAAA0qB,IAAAu5I,EAAA,GAAAA,EAAA,GAA2E,KAAM5uG,EAAjF4uG,EAAAjkK,OAAA,QAAA0qB,IAAAu5I,EAAA,GAAAA,EAAA,GAAoG,KAAMzvG,EAA1GyvG,EAAAjkK,OAAA,QAAA0qB,IAAAu5I,EAAA,GAAAA,EAAA,GAAqH,KAAMniG,EAA3HmiG,EAAAjkK,OAAA,QAAA0qB,IAAAu5I,EAAA,GAAAA,EAAA,GAAoI,KAEzJ/iK,EAAKsC,MAAMuX,QAAQkZ,iBAFE,CAAAiV,EAAA77B,KAAA,eAIxBnM,EAAKsC,MAAMsxI,OAAOp/F,QAAQqoH,wBAJF70H,EAAAtrB,OAAA,UAKjB,GALiB,UASrB1c,EAAKsC,MAAM8I,QATU,CAAA48B,EAAA77B,KAAA,gBAUxBnM,EAAKkiK,sBACmB,oBAAbr/J,GACTA,EAAS,KAAK,yBAZQmlC,EAAAtrB,OAAA,UAcjB,GAdiB,YAkBtB1c,EAAKsC,MAAM25J,kBAlBW,CAAAj0H,EAAA77B,KAAA,gBAmBxBnM,EAAK48J,oBACmB,oBAAb/5J,GACTA,EAAS,KAAK,uBArBQmlC,EAAAtrB,OAAA,UAuBjB,GAvBiB,YA8BtBZ,EAAc9b,EAAK+9J,kBAAkBn9F,IAC7BhqC,OAAS4rI,EAErBxiK,EAAKg+J,eAAeliJ,GAGpBA,EAAYzd,KAAO,WACnByd,EAAYpP,OAAS,UACrBoP,EAAY5C,OAASA,EAGrBlZ,EAAKu5D,kBAAkBz9C,GAzCG2mJ,EA2CKziK,EAAKsC,MAA5B8I,EA3CkBq3J,EA2ClBr3J,QAASwnB,EA3CS6vI,EA2CT7vI,UACbD,EAAWC,EAAUrY,KAAK,SAAAsY,GAAC,OAAIA,EAAE51B,OAAS4b,IA5CpB,CAAAmvB,EAAA77B,KAAA,eA8CA,oBAAbtJ,GACTA,EAAS,KAAK,sBA/CQmlC,EAAAtrB,OAAA,SAiDjB1c,EAAKnC,cAAckgB,UAAnB,yBAAAtc,OAAsDoX,KAjDrC,eAoD1B8Z,EAAWA,EAASA,SAOhB+vI,EAA8B,KA3DR16H,EAAA97B,KAAA,GA+DnBjG,IACHA,EAAQjG,EAAKnC,cAAc2O,MAAM,IAGnCxM,EAAKnC,cAAckgB,UAAU,4BAA4BlF,EAAa8Z,EAASqR,SAAS54B,EAAQo3J,EAAetpJ,EAAQjT,EAAQ,CAAEuB,KAAM4D,EAASnF,SAAU,CAAEuB,KAAM4D,IAnE1I48B,EAAA77B,KAAA,IAsERinD,EAAAzgC,EAAS6hB,SAAQguH,GAAjBh1J,MAAA4lD,EAAA34D,OAAAmgC,GAAA,EAAAngC,CAAoCye,IACjD06C,YAAY3tD,EAAQ,CAAEuB,KAAM4D,EAASnF,SAAU,CAAEuB,KAAM4D,IACvDw5C,MAAM,SAAAhjD,GAAC,OAAI2wB,QAAQha,MAAM3W,KAxEJ,eAsEpBgc,EAtEoBoqB,EAAA94B,QA6EtB0O,GADAA,EAAM5d,EAAKnC,cAAc2O,MAAMoR,IACrB5Q,KAAK4Q,EAAIpV,MAAMxI,EAAKnC,cAAc2O,MAAM,SAG9C8mD,GAAY11C,EAAI1Q,GAAGlN,EAAKnC,cAAc2O,MAAM8mD,MAC9C11C,EAAM5d,EAAKnC,cAAc2O,MAAM8mD,IAIjC11C,EAAM5d,EAAKsC,MAAMsX,KAAKkX,MAAMF,KAAKhT,EAAIsxC,aAAax9B,KAAUy9B,eAGxDwzG,EAAuB,SAACnuG,EAAoBC,GAI5CiuG,GACFjjJ,OAAOC,aAAagjJ,GAKtB5mJ,EAAYknJ,mBAAqB,EAEjC,IAAMpnD,GAAiBjzG,IAAckR,QAAQ6jI,UAAgC,oBAAb76I,GAA2D,IAAhCiZ,EAAYknJ,kBAGjGC,EAAsBjjK,EAAKjF,MAAMypD,OAAOm5F,uBAAyB,EAEjC,IAAlC7hI,EAAYknJ,kBAEdlnJ,EAAYpP,OAAS,YACZoP,EAAYknJ,kBAInBlnJ,EAAYknJ,oBAAsBC,EAGhCxuG,EAAQ/nD,OACVoP,EAAYpP,OAAS,UACX+nD,EAAQ/nD,SAClBoP,EAAYpP,OAAS,SAEdoP,EAAYknJ,kBAKnBpnD,IAEEnnD,IACF34C,EAAYuyB,UAAYomB,GAE1B34C,EAAYonJ,YAAc,eAC1BljK,EAAKu5D,kBAAkBz9C,GAEvBjZ,EAASiZ,GAET9b,EAAKnC,cAAckgB,UAAU,YAAay2C,EAAoBC,EAAS34C,KAIrE8mJ,EAAqB,SAArBA,EAAsB3pJ,EAAgBmgI,GAC1C,IAAKngI,EACH,OAAO,EAETjZ,EAAKsC,MAAMsX,KAAK0C,IAAI24B,sBAAsBh8B,EAAgB,SAACsD,EAAI8xB,GACzDA,GAAaA,EAAU3hC,QACzB1M,EAAKnC,cAAckgB,UAAU,wBAAyBswB,GACtDs0H,EAAqB,EAAEt0H,IAEvBq0H,EAA8BjjJ,OAAOjB,WAAY,kBAAMokJ,EAAmB3pJ,EAAgBmgI,IAAWA,MAKrGypB,EAAkB,SAAApuG,GAIlBiuG,GACFjjJ,OAAOC,aAAagjJ,GAIlBjuG,IACF34C,EAAYuyB,UAAYomB,GAE1B34C,EAAYonJ,YAAc,UAGtBv6J,IAAckR,QAAQ6jI,UACxB5hI,EAAYpP,OAAS,UACG,oBAAb7J,GACTA,EAASiZ,KAGX9b,EAAKu5D,kBAAkBz9C,GAGnB24C,EAAQ/nD,SACVg2J,EAA8BjjJ,OAAOjB,WAAY,kBAAMokJ,EAAmBnuG,EAAQx7C,gBAAgB,MAAO,QAlLvF+uB,EAAAtrB,OAAA,UA0LjB03C,EAAAzhC,EAAS6hB,SAAQguH,GAAjBh1J,MAAA4mD,EAAA35D,OAAAmgC,GAAA,EAAAngC,CAAoCye,IACxCsN,KAAKvgB,EAAQ,CAAEuB,KAAM4D,EAASnF,QAAO2X,OAAoB,CAAEpW,KAAM4D,EAASwS,QAC1E02C,GAAG,kBAAmB,SAAA3xD,GAGrB,GAFA3C,EAAKnC,cAAckgB,UAAU,sBAAuBpb,IAE/CA,EAEH,OADA3C,EAAKnC,cAAckgB,UAAU,yCAA0Cpb,IAChE,EAGTmZ,EAAY7C,gBAAkBtW,EAC9BmZ,EAAYpP,OAAS,UACrBoP,EAAYonJ,YAAc,kBAC1BljK,EAAKu5D,kBAAkBz9C,GAEnBq4C,GACFA,EAAiBr4C,GAIf9b,EAAKjF,MAAM+B,WACT4lK,GACFjjJ,OAAOC,aAAagjJ,GAEtBA,EAA8BjjJ,OAAOjB,WAAY,kBAAMokJ,EAAmBjgK,EAAK,MAAQ,QAG1F2xD,GAAG,UAAWuuG,GACdvuG,GAAG,eAAgBquG,GACnBruG,GAAG,QAAS,SAAA/7C,GAEXga,QAAQqc,IAAI,WAAWr2B,GAEvB,IAAMuqJ,KAAavqJ,IAASA,EAAM8R,SAA6C,oBAA3B9R,EAAM8R,QAAQkF,WAA0BhX,EAAM8R,QAAQkF,SAAS,qCASnH,GANAzT,EAAYpP,OAAS,QACrBoP,EAAYonJ,YAAc,QAC1BljK,EAAKu5D,kBAAkBz9C,IAIlBgnJ,EAAW,CACdrjJ,OAAOo1F,cAAcC,WAAW,uBAAwB,CACtD53G,KAAM,QACN+3G,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,iBAGpB,IAAMqsD,EAAU7oJ,aAAiB28C,MAEJ,qBAAlB38C,EAAM8R,QACfrqB,EAAKg9J,0BAA0B,KAAKzkJ,EAAM8R,SACjCrqB,EAAKnC,cAAcwpD,kBAAoB+5G,GAChDI,KAAwBjpJ,GAIJ,oBAAb1V,GACTA,EAASiZ,EAAYvD,MAxPH,eAAAyvB,EAAA97B,KAAA,GAAA87B,EAAAxa,GAAAwa,EAAA,UA6PxBzV,QAAQqc,IAAI,iBAAZ5G,EAAAxa,IAEA1R,EAAYpP,OAAS,QACrB1M,EAAKu5D,kBAAkBz9C,GAIvB2D,OAAOo1F,cAAcC,WAAW,4CAA6C,CAC3E53G,KAAM,QACN+3G,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,+BAGd+tD,KAAa96H,EAAAxa,KAASwa,EAAAxa,GAAMnD,UAAU2d,EAAAxa,GAAMnD,QAAQkF,SAAS,qCAE7D6xI,EAAUp5H,EAAAxa,cAAiB0nC,MAC5Bl1D,EAAKnC,cAAcwpD,kBAAoB+5G,IAAY0B,GACtDtB,KAAAx5H,EAAAxa,IAGsB,oBAAb3qB,GAETA,EAASiZ,EAADksB,EAAAxa,IAtRcwa,EAAAtrB,OAAA,UAyRjB,GAzRiB,yBAAAsrB,EAAA16B,SAAA25B,EAAAnsC,KAAA,wEA8R5BijK,kBAAoB,WAAiB,IAAhBn9F,EAAgBnzD,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KACtBqO,EAAWrhB,OAAA+4B,EAAA,EAAA/4B,CAAA,GACVmmE,GAUL,OARA9kD,EAAYuyB,UAAY,GACxBvyB,EAAY8jC,QAAUhyC,KAAK84B,MAC3B5qB,EAAYknJ,kBAAoB,EAChClnJ,EAAYpP,OAAS,cACrBoP,EAAYqnJ,YAAcv1J,KAAK84B,MAC/B5qB,EAAYvP,MAAQvM,EAAKjF,MAAMgK,cAC/B+W,EAAYqgB,SAAWn8B,EAAKjF,MAAM4T,iBAClCmN,EAAY2W,UAAYzyB,EAAKnC,cAAc0S,gBAAgB,CAAC,UAAU,oBAC/DuL,KAGTkiJ,eAAiB,SAAAliJ,GACf,IAAMrf,EAAYhC,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAM7F,cACrCA,EAAY,KAAAgF,OAAMqa,EAAY8jC,UAAa9jC,EAC3C9b,EAAK8C,SAAS,CAAErG,oBAIlB88D,kBAAoB,SAAA6pG,GAClB,IAAM3mK,EAAYhC,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAM7F,cAC/Bqf,EAAWrhB,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQ2oK,GAezB,OAdAtnJ,EAAYqnJ,YAAcv1J,KAAK84B,MAC/BjqC,EAAY,KAAAgF,OAAM2hK,EAAmBxjH,UAAa9jC,EAClD9b,EAAK8C,SAAS,CAAErG,iBAIZqf,EAAY7C,kBAEdjZ,EAAKnC,cAAc+3E,kBAGnB51E,EAAKnC,cAAck8C,qBAAnB,KAAAt4C,OAA6Cqa,EAAY8jC,SAAU9jC,IAG9DA,KAITs+I,qBAAuB,SAAAx4J,GACJ,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAK00J,uBAAwB,EAEpCr6J,EAAK8C,SAAS,CAAE8wI,cAGlBsuB,oBAAsB,SAAAtgK,GACH,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAK00J,uBAAwB,EACpCr6J,EAAK8C,SAAS,CAAE8wI,OAAQA,OAG1B4mB,4BAA8B,SAAA54J,GACX,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAK80J,0BAA2B,EACvCz6J,EAAK8C,SAAS,CAAE8wI,cAGlBqpB,2BAA6B,SAAAr7J,GACV,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAK80J,0BAA2B,EACvC7mB,EAAOjuI,KAAKg3J,kCAAmC,EAC/C/oB,EAAOjuI,KAAK00J,uBAAwB,EAEpCr6J,EAAK8C,SAAS,CAAE8wI,cAGlB0nB,2BAA6B,SAAA15J,GACV,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAK61J,kBAAmB,EAC/Bx7J,EAAK8C,SAAS,CAAE8wI,cAGlBopB,0BAA4B,SAACp7J,EAAE2W,GACZ,qBAAN3W,GAAqBA,GAC9BA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAK61J,iBAAmBjjJ,EAE/BvY,EAAK8C,SAAS,CAAE8wI,cAGlBsnB,0BAA4B,SAAAt5J,GAM1B,GALiB,qBAANA,GACTA,EAAEgI,kBAIC5J,EAAKsC,MAAMsxI,OAAOjuI,KAAKy1J,gBAC1B,OAAO,EAGT,IAAIxnB,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKy1J,iBAAkB,EAC9Bp7J,EAAK8C,SAAS,CAAE8wI,cAGlBmpB,yBAA2B,SAACn7J,EAAE2W,GACX,qBAAN3W,GAAqBA,GAC9BA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAGjB,oBAARr7H,IACFA,EAAQ,mCAGNvY,EAAKsC,MAAMsxI,OAAOjuI,KAAKy1J,kBAAoB7iJ,IAE7Cq7H,EAAOjuI,KAAKy1J,gBAAkB7iJ,EAC9BvY,EAAK8C,SAAS,CAAE8wI,eAIpB+mB,iCAAmC,SAAA/4J,GAChB,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKi1J,qBAAsB,EAClC56J,EAAK8C,SAAS,CAAE8wI,cAGlBspB,gCAAkC,SAAAt7J,GACf,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKi1J,qBAAsB,EAClC56J,EAAK8C,SAAS,CAAE8wI,cAGlB8lB,wBAA0B,SAAA93J,GACP,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKg0J,0BAA2B,EACvC35J,EAAK8C,SAAS,CAAE8wI,cAGlBkpB,uBAAyB,SAAAl7J,GACN,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKg0J,0BAA2B,EACvC35J,EAAK8C,SAAS,CAAE8wI,cAGlBimB,mBAAqB,SAAAj4J,GACF,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKm0J,qBAAsB,EAClC95J,EAAK8C,SAAS,CAAE8wI,cAGlByvB,kBAAoB,SAAAzhK,GACD,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKm0J,qBAAsB,EAClC95J,EAAK8C,SAAS,CAAE8wI,cAGlBomB,uBAAyB,SAAAp4J,GACN,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKs0J,yBAA0B,EACtCj6J,EAAK8C,SAAS,CAAE8wI,cAGlBipB,sBAAwB,SAAAj7J,GACL,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKs0J,yBAA0B,EACtCj6J,EAAK8C,SAAS,CAAE8wI,cAGlBknB,mBAAqB,SAAAl5J,GACF,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKo1J,qBAAsB,EAClC/6J,EAAK8C,SAAS,CAAE8wI,cAGlBgpB,kBAAoB,SAAAh7J,GACD,qBAANA,GACTA,EAAEgI,iBAGJ,IAAIgqI,EAAMn5I,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAQuF,EAAKsC,MAAMsxI,QAC7BA,EAAOjuI,KAAKo1J,qBAAsB,EAClC/6J,EAAK8C,SAAS,CAAE8wI,cAGlBtxI,MAAQ,CACNsX,KAAM,KACNs8I,QAAQ,KACR9qJ,QAAS,KACTwnB,UAAW,GACXisH,SAAU,KACV/0F,SAAU,KACVnb,WAAW,KACXixH,cAAc,EACdnjK,aAAc,GACdo/J,cAAc,GACdyH,YAAa,KACb1H,aAAa,KACbhsJ,cAAc,KACd2gC,eAAgB,KAChBurH,eAAgB,KAChB9oI,kBAAmB,GACnBk5H,iBAAkB,KAClBoO,iBAAkB,KAClBgE,kBAAiB,EACjBtC,kBAAkB,KAClBuH,kBAAmB,KACnBxH,SAAU/7J,EAAK+7J,SACfE,kBAAmB,KACnB2B,oBAAmB,EACnBzoC,oBAAmB,EACnBv9D,qBAAqB,KACrB4rG,uBAAuB,GACvBv4C,sBAAqB,EACrBguC,YAAaj5J,EAAKi5J,YAClBqD,yBAA0B,KAC1BtyG,aAAchqD,EAAKgqD,aACnBrnB,aAAc3iC,EAAK2iC,aACnBw5H,eAAgBn8J,EAAKm8J,eACrBhC,gBAAiBn6J,EAAKm6J,gBACtBkC,iBAAkBr8J,EAAKq8J,iBACvBvuG,iBAAkB9tD,EAAK8tD,iBACvBsnD,kBAAmBp1G,EAAKo1G,kBACxBmnD,oBAAqBv8J,EAAKu8J,oBAC1BC,qBAAsBx8J,EAAKw8J,qBAC3BjjJ,0BAA2BvZ,EAAKuZ,0BAChCs5F,0BAA2B7yG,EAAK6yG,0BAChC4pD,yBAA0Bz8J,EAAKjF,MAAM0hK,yBACrC5iJ,QAAS,CACPiZ,QAAS,GACTJ,SAAU,GACVK,iBAAkB,KAClBqpI,aAAcp8J,EAAKo8J,cAErBxoB,OAAQ,CACNjuI,KAAM,CACJy1J,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBqC,uBAAwB,KACxBzC,wBAAyB,KACzBQ,yBAA0B,KAC1B6B,yBAA0B,KAC1BK,iCAAkC,KAClC7C,oBAAqB95J,EAAK85J,oBAC1BH,yBAA0B35J,EAAK25J,0BAEjCnlH,QAAS,CACPooH,kBAAmB58J,EAAK48J,kBACxByG,kBAAmBrjK,EAAKqjK,kBACxBxJ,mBAAoB75J,EAAK65J,mBACzBiB,mBAAoB96J,EAAK86J,mBACzBoH,oBAAqBliK,EAAKkiK,oBAC1B9H,qBAAsBp6J,EAAKo6J,qBAC3ByC,sBAAuB78J,EAAK68J,sBAC5B7C,uBAAwBh6J,EAAKg6J,uBAC7B8C,uBAAwB98J,EAAK88J,uBAC7BpD,wBAAyB15J,EAAK05J,wBAC9BqD,yBAA0B/8J,EAAK+8J,yBAC/B7B,0BAA2Bl7J,EAAKk7J,0BAChC8B,0BAA2Bh9J,EAAKg9J,0BAChC1B,2BAA4Bt7J,EAAKs7J,2BACjC2B,2BAA4Bj9J,EAAKi9J,2BACjCzC,4BAA6Bx6J,EAAKw6J,4BAClC2C,gCAAiCn9J,EAAKm9J,gCACtCD,gCAAiCl9J,EAAKk9J,gCACtCE,iCAAkCp9J,EAAKo9J,iCACvCzC,iCAAkC36J,EAAK26J,mCAG3C7+I,YAAa,CACXnW,KAAM,CACJlJ,aAAc,MAEhB4gK,KAAM,GACN7oH,QAAS,gFAvzDX,IAAMz5C,EAAQN,OAAOC,OAAO,GAAGI,KAAKC,OACpCA,EAAM6e,KAAO9e,KAAKwH,MAAMsX,KACxB7e,EAAMqQ,QAAUtQ,KAAKwH,MAAM8I,QAC3BrQ,EAAM63B,UAAY93B,KAAKwH,MAAMswB,UACzB93B,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAS/C,GAE5BD,KAAK+C,cAAgB,IAAIE,KAAchD,kDAKzCD,KAAKyH,oBAAqB,yKAI1BzH,KAAKkD,qBACClD,KAAKshK,sBAGP38I,OAAOsd,UACTtd,OAAOsd,SAASu3B,GAAG,iBAAnB,eAAAtzB,EAAAvmC,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAAqC,SAAAu9B,EAAO1W,GAAP,OAAA3G,EAAA7wB,EAAA+Q,KAAA,SAAAo9B,GAAA,cAAAA,EAAAl9B,KAAAk9B,EAAAj9B,MAAA,OACnClO,EAAKw/J,qBAAqBhrI,GADS,wBAAA2W,EAAA97B,SAAA67B,EAAAruC,SAArC,gBAAAkuC,GAAA,OAAAhI,EAAAxzB,MAAA1S,KAAA2S,YAAA,IAMFgS,OAAOs8I,SAAWjhK,KAAKihK,SACvBt8I,OAAOw5I,YAAcn+J,KAAKm+J,+IAgyD1B,IAAMwK,EAA+E,kBAA3C3oK,KAAKwH,MAAMsxI,OAAOjuI,KAAKy1J,iBAAgCtgK,KAAKwH,MAAMsxI,OAAOjuI,KAAKy1J,gBAAgBt8J,OAAO,EACzI4kK,EAAiF,kBAA5C5oK,KAAKwH,MAAMsxI,OAAOjuI,KAAK61J,kBAAiC1gK,KAAKwH,MAAMsxI,OAAOjuI,KAAK61J,iBAAiB18J,OAAO,EAClJ,OACE2E,EAAAxI,EAAAC,cAAA,WACEuI,EAAAxI,EAAAC,cAACwgK,GAAyBiI,SAA1BlpK,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkL,MAAOnL,KAAKwH,SAEdmB,EAAAxI,EAAAC,cAAC0oK,GAADnpK,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE64I,OAAQ94I,KAAKwH,MAAMsxI,OACnB/5H,QAAS/e,KAAKwH,MAAMuX,QACpBzO,QAAStQ,KAAKwH,MAAM8I,QACpBtO,SAAUhC,KAAKC,MAAM+B,SACrBm8J,YAAan+J,KAAKwH,MAAM22J,YACxB7C,aAAct7J,KAAKC,MAAMq7J,aACzB+D,gBAAiBr/J,KAAKwH,MAAM63J,gBAC5BG,iBAAkBx/J,KAAKwH,MAAMg4J,iBAC7BG,yBAA0B3/J,KAAKwH,MAAMm4J,yBACrC6B,yBAA0BxhK,KAAKwH,MAAMg6J,4BAEvC74J,EAAAxI,EAAAC,cAAC2oK,GAAD,CACEjwB,OAAQ94I,KAAKwH,MAAMsxI,OACnBxoI,QAAStQ,KAAKwH,MAAM8I,QACpB8qJ,QAASp7J,KAAKC,MAAMm7J,QACpBr9C,OAAQ6qD,IAEVjgK,EAAAxI,EAAAC,cAAC4oK,GAAD,CACElwB,OAAQ94I,KAAKwH,MAAMsxI,OACnBxoI,QAAStQ,KAAKwH,MAAM8I,QACpB8qJ,QAASp7J,KAAKC,MAAMm7J,QACpBr9C,OAAQ4qD,EACRrN,aAAct7J,KAAKC,MAAMq7J,eAE3B3yJ,EAAAxI,EAAAC,cAAC6oK,GAAD,CACEnqJ,KAAM9e,KAAKwH,MAAMsX,KACjBrd,MAAOzB,KAAKC,MAAMwB,MAClBsd,QAAS/e,KAAKwH,MAAMuX,QACpB09I,eAAgBz8J,KAAKC,MAAMw8J,yBA32DLp+C,IAAMx7G,WAAhC6/J,GACGwG,SAAWtI,GAAyBsI,SAi3D9BxG,4BC3xDAxkD,8MAvLb12G,MAAQ,KAKRzE,cAAgB,gFAEV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAKLlD,KAAKkD,iMAGkByE,EAAWC,sEAElC5H,KAAKkD,aAEDlD,KAAKC,MAAM8e,SAAY/e,KAAKC,MAAM8e,QAAQkZ,2DACrC,yIAIF,IAAA90B,EAAAnD,KAEHmpK,EAAU,kBACVC,EAAa,CAAC,OAAO,QACLppK,KAAK+C,cAAcqpD,mBAErCg9G,EAAa,CAAC,OAAO,QACrBD,EAAU,6BAEZ,IAAME,EAAoBrpK,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAa,YAE3E,OACE9M,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvC,MAAO,CACL2G,KAAM,IACNF,MAAO,IACPwB,OAAQ,GACRD,SAAU,aAGZ1F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACErH,EAAG,EACHR,WAAY,SACZE,eAAgB,SAChBP,gBAAiB,YACjBM,cAAe,CAAC,SAAS,QAEzB2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,QACPgH,UAAW,UAFb,oEAMAX,EAAAxI,EAAAC,cAAC0iH,GAAA,EAAD,CACEkS,GAAI,EACJn1H,GAAI,EACJwJ,GAAI,CAAC,EAAE,GACP3D,GAAI,CAAC,EAAE,GACPU,GAAI,OACJ9D,MAAO,QACP+D,MAAO,CACLoC,QAAQ,OACRjH,aAAa,MACbR,cAAc,MACdD,WAAW,YAEbL,gBAAiB,UACjBylB,KAAM,2HAdR,gBAiBExd,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJrD,KAAM,QACNC,MAAO,QACPH,KAAM,yBAKZwG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEkZ,GAAI,CAAC,EAAE,GACPlhB,GAAI,OACJguB,GAAI,cACJ9uB,MAAO,CAAC,MAAM,QACdwG,SAAU,CAAC,OAAO,SAClBvF,WAAY,CAAC,SAAS,eAEtB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,CAAC,EAAG,GACR5F,MAAO,CAAC,GAAK,MAEb6I,EAAAxI,EAAAC,cAACq9J,GAAA,EAAD,CACExkI,GAAG,KAEHtwB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9G,IAAKqnK,EACL96J,SAAU,WACVtM,OAAQqnK,MAIdzgK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,CAAC,GAAI,EAAE,IACdiB,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEosH,GAAI,CAAC,EAAE,GACPj0H,WAAY,SACZC,cAAe,OAGbqoK,GACE1gK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,QACPqD,WAAY,QACZgG,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB1D,QAAU,SAACkB,GAAD,OAAO6d,OAAOmV,SAASjyB,KAAK,iBANxC,eAYD7H,KAAKC,MAAM+B,UACV2G,EAAAxI,EAAAC,cAAAuI,EAAAxI,EAAA02G,SAAA,KACEluG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEhI,GAAI,EACJ8B,SAAU,EACVJ,MAAO,QACPqD,WAAY,QACZgG,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB1D,QAAS,SAACkB,GAAO3D,EAAKJ,cAAci2B,SAAS9K,SAASC,eAAe,YAAYm7I,UAAU,OAP7F,cAWA3gK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVJ,MAAO,QACPqD,WAAY,QACZgG,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB1D,QAAS,SAACkB,GAAO3D,EAAKJ,cAAci2B,SAAS9K,SAASC,eAAe,OAAOm7I,UAAU,OANxF,oBAxJCjrD,IAAMx7G,qBCPZ,SAAS0mK,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACR/kJ,OAAOqU,SAAS,EAAG,IAClB,CAACwwI,IAEG,+BCwCMG,8MAxCbniK,MAAQ,2EAGN,OACEmB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAWC,KAAOlE,gBAAiB7E,GAAI,CAAC,EAAE,GAAI+hB,GAAI,CAAC,MAAO,QAC7DnZ,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAWC,KAAOjE,iBACvB8D,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKyF,SAAU,WAAYC,OAAQ,IACjC3F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,SAAUD,WAAY,SAAUuF,SAAU,CAAC,OAAQ,QAAS1F,GAAI,OAAQ0I,UAAW,SAAUwY,GAAI,CAAC,MAAO,QAC5HnZ,EAAAxI,EAAAC,cAACwI,EAAA,EAAQmrJ,GAAT,CAAYpoJ,WAAY,YAAa+rG,WAAY,QAASnpG,GAAI,QAAS7L,SAAU,CAAC,QAAQ,GAAI4G,UAAW,SAAUhH,MAAO,SAA1H,4BAGAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAYxiH,WAAY,YAAa+rG,WAAY,QAASnpG,GAAI,QAAS9L,WAAY,EAAGC,SAAU,CAAC,QAAQ,GAAI4G,UAAW,SAAUhH,MAAO,SAAzI,wDAGAqG,EAAAxI,EAAAC,cAACq9J,GAAA,EAAD,CAAYxkI,GAAG,IAAI5yB,MAAO,CAACk9H,eAAe,SACxC56H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEC,UAAW+gK,KAAc56I,eACzBxtB,aAAc,EACda,MAAMrC,KAAKC,MAAM+B,SAAW,UAC5BiF,UAAW,OACXqjH,cAAe,QACf7nH,WAAY,EACZC,SAAU,CAAC,EAAE,GACb9B,GAAI,OACJb,GAAI,CAAC,EAAE,GACPsJ,GAAI,GAVN,sBAkBRV,EAAAxI,EAAAC,cAACg+G,EAAA,EAAD,cAnCmBv7G,aCyCZgnK,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAI7kK,EAAKjF,MAAM8e,QACb,OAAQ7Z,EAAKjF,MAAM8e,QAAQ3Z,IACzB,KAAK,EACH2kK,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpBxoK,aAAc,MACdd,gBAAiBV,KAAK8pK,wBACtB/nK,OAAQ,MACRjC,MAAO,OAGT,OACE6I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKvC,MAAO2jK,EAAe3oK,GAAI,IAC/BsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMvC,MAAO,CAAE+8G,cAAe,eAC3BpjH,KAAKC,MAAM8e,QAAQ5c,cAxCAk8G,IAAMx7G,WCW9BonK,GAAkB,SAAAhqK,GAAK,OAC3B0I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKS,GAAI,EAAG0iH,UAAW,EAAGp/G,YAAY,UAAUmV,GAAI,GAClDnZ,EAAAxI,EAAAC,cAACwI,EAAA,EAAQuG,GAAT,CAAY7F,UAAW,UAAvB,cACAX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEhD,QAAS3F,EAAM64I,OAAOp/F,QAAQqoH,sBAC9B1/J,KAAK,QACLhB,GAAI,EACJkN,GAAI,GAJN,0BASA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEhD,QAAS3F,EAAM64I,OAAOp/F,QAAQ0tH,oBAC9B/kK,KAAK,QACLhB,GAAI,EACJkN,GAAI,GAJN,cAQA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAK,QACLuD,QAAS3F,EAAM64I,OAAOp/F,QAAQyoH,2BAC9B9gK,GAAI,EACJkN,GAAI,GAJN,sBAQA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAK,QACLuD,QAAS3F,EAAM64I,OAAOp/F,QAAQ0oH,gCAC9B/gK,GAAI,EACJkN,GAAI,GAJN,uBAQA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAK,QACLuD,QAAS,SAAAk4H,GACP79H,EAAM64I,OAAOp/F,QAAQooH,kBAAkBhkC,IAEzCz8H,GAAI,EACJkN,GAAI,GANN,aAUA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAK,QACLuD,QAAS3F,EAAM64I,OAAOp/F,QAAQsoH,uBAC9B3gK,GAAI,EACJkN,GAAI,GAJN,oBAQA5F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAK,QACLuD,QAAS3F,EAAM64I,OAAOp/F,QAAQ6uH,kBAC9BlnK,GAAI,EACJkN,GAAI,GAJN,eAuOW27J,oLA1NX,OACEvhK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9I,MAAO,QAASc,GAAI,OAAQb,GAAI,GACpC4I,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7kH,UAAW,UAAvB,iBAEAX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQG,MAAO,QAASjB,GAAI,IACvCsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,wCAIJD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UACff,KAAKC,MAAM6e,KACVnW,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQG,MAAO,QAASjB,GAAI,IAEvCsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQG,MAAO,MAAOjB,GAAI,IAEvCsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,kCAGA5I,KAAKC,MAAM6e,KAgBT,KAfFnW,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,EAAG3E,WAAY,SAAUE,eAAgB,iBACjD0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,OAAOd,GAAI,EAAGiB,MAAM,SAC/BqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAM,QAAZ,8BAGFqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEud,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpBvd,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgB53J,KAAK,SAArB,6BAQPrC,KAAKC,MAAM6e,KACVnW,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE/I,GAAI,EACJiB,GAAI,EACJirH,UAAW,EACXnE,aAAc,EACdj7G,YAAa,UACbrD,UAAW,SACXrI,eAAgB,eAChBF,WAAY,UAEZ4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvG,KAAK,QACLuD,QAAS5F,KAAKC,MAAM83G,0BACpB7wG,UAAWlH,KAAKC,MAAM6e,MAHxB,sBAOAnW,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,eACAD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAQvG,KAAK,QAAQ6E,UAAQ,GAA7B,6BAIA,KAEJyB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UACff,KAAKC,MAAM8e,QAAQkZ,iBAClBtvB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQG,MAAO,QAASjB,GAAI,IAEvCsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQG,MAAO,MAAOjB,GAAI,IAEvCsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,yBAGD5I,KAAKC,MAAM6e,OAAS9e,KAAKC,MAAM8e,QAAQkZ,iBACtCtvB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,EAAG3E,WAAY,SAAUE,eAAgB,iBACjD0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,OAAOd,GAAI,EAAGiB,MAAM,SAC/BqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJiB,MAAM,OACN+D,MAAO,CAAE+8G,cAAe,eAH1B,oBAOAz6G,EAAAxI,EAAAC,cAAC+pK,GAAD,CAAiBprJ,QAAS/e,KAAKC,MAAM8e,QAAQiZ,WAE/CrvB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEvH,GAAI,EACJiB,MAAM,OACN+D,MAAO,CAAE+8G,cAAe,eAH1B,qBAOAz6G,EAAAxI,EAAAC,cAAC+pK,GAAD,CAAiBprJ,QAAS/e,KAAKC,MAAM8e,QAAQ6Y,cAKnDjvB,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgB53J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMqhK,cAAjD,kBAIA,KACHthK,KAAKC,MAAM6e,MAAQ9e,KAAKC,MAAMg4B,iBAC7BtvB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,EAAG3E,WAAY,UACvB4H,EAAAxI,EAAAC,cAAC+pK,GAAD,CAAiBprJ,QAAS/e,KAAKC,MAAM8e,QAAQiZ,WAE7C,MAGNrvB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UACff,KAAKC,MAAMqQ,SAAWtQ,KAAKC,MAAMu/J,iBAChC72J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQG,MAAO,QAASjB,GAAI,IAEvCsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQG,MAAO,MAAOjB,GAAI,IAEvCsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,uCAGA5I,KAAKC,MAAMqQ,UACbtQ,KAAKC,MAAM6e,MACV9e,KAAKC,MAAM6/J,oBAWR,KAVFn3J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,EAAG3E,WAAY,SAAUE,eAAgB,iBACjD0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,OAAOd,GAAI,EAAGiB,MAAM,SAC/BqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAM,QAAZ,gCAGFqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgB53J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMk+J,aAAjD,YAKHn+J,KAAKC,MAAMqQ,SAAWtQ,KAAKC,MAAM6e,KAChCnW,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,EAAG3E,WAAY,UACvB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQG,MAAO,QAASjB,GAAI,IACvCsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAM,QAAZ,oBAAqCtC,KAAKC,MAAMqQ,SAChD3H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAOtC,KAAKC,MAAMkhK,kBAAoB,MAAQ,QAApD,mBACmBnhK,KAAKC,MAAM+gK,kBAIhC,KAEHhhK,KAAKC,MAAM6/J,oBACVn3J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,EAAGzE,eAAgB,iBAC3B0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQd,GAAI,EAAGiB,MAAM,QAChCqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAM,OAAZ,kCAGFqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgB53J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMk+J,aAAjD,YAIA,KAE8B,OAAhCn+J,KAAKC,MAAMu/J,mBACqB,IAAhCx/J,KAAKC,MAAMu/J,mBACbx/J,KAAKC,MAAM6e,KAgBP,KAfFnW,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJ5E,GAAI,EACJC,WAAY,SACZE,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,OAAOd,GAAI,EAAGiB,MAAM,SAC/BqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAM,QAAZ,yBAGFqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgB53J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMo/J,iBAAjD,cAM6B,IAAhCr/J,KAAKC,MAAMu/J,iBACV72J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElD,GAAI,EACJ5E,GAAI,EACJC,WAAY,SACZE,eAAgB,iBAEhB0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQd,GAAI,EAAGiB,MAAM,QAChCqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAM,OAAZ,yBAGFqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAOqxJ,QAAR,CAAgB53J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMo/J,iBAAjD,aAIA,MAEmC,IAAtCr/J,KAAKC,MAAM2hK,uBACVj5J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMlD,GAAI,GACRiD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMzG,KAAK,QAAQd,GAAI,EAAGiB,MAAM,QAChCqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAM,OAAZ,yBAEA,MAGNqG,EAAAxI,EAAAC,cAACgqK,GAAoBpqK,KAAKC,OAE1B0I,EAAAxI,EAAAC,cAACwI,EAAA,EAAaigK,SAAd,CAAuBr1C,IAAK,SAAA62C,GAAI,OAAK1lJ,OAAOo1F,cAAgBswD,aAtNzChsD,IAAMx7G,+BC/BhBynK,GAhDgB,CAC7B9pJ,YAAa,CACX+O,QAAS,+BACT0qF,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTj4G,KAAM,eAERmoK,QAAS,CACPh7I,QAAS,6BACT0qF,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTj4G,KAAM,eAERkqB,QAAS,CACPiD,QAAS,iCACT0qF,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTj4G,KAAM,eAERooK,UAAW,CACTj7I,QAAS,wBACT0qF,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTj4G,KAAM,eAER0qB,QAAS,CACPyC,QAAS,6BACT8qF,QAAS,UACTj4G,KAAM,eAERqb,MAAO,CACL8R,QAAS,0BACT0qF,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTj4G,KAAM,UCoJGqoK,8MA1LbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACPhrK,OAAOoE,KAAK4mK,GAAgB3mK,SAC1BrE,OAAOoE,KAAK6mK,GAAmB5mK,UAKrC6mK,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAYnrK,OAAOoE,KAAK6mK,GAAmBr5J,OAAO,SAAA1K,GACtD,OAAQlH,OAAOoE,KAAK4mK,GAAgBl2I,SAAS5tB,KAE/C,OAAO+jK,EAAkBE,GAEzB,OAAOnrK,OAAOoE,KAAK6mK,GAAmB9kK,IAAI,SAAAe,GACxC,OAAO+jK,EAAkB/jK,QAM/BkkK,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2BjrK,OAAOoE,KAAK4mK,GACpC7kK,IAAI,SAAAe,GACH,OACE8jK,EAAe9jK,GAAKwhK,cAAgBuC,EAAkB/jK,GAAKwhK,YAEpDuC,EAAkB/jK,GAElB,OAGV0K,OAAO,SAAAy5J,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAAxkK,OAAMukK,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAIp5J,EAAK,KACL65J,EAAY,GACZC,EAAS,GAEb,GAAIpmK,EAAKwlK,uBAAuBC,EAAgBC,GAC9Cp5J,EAAKtM,EAAK2lK,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAYnmK,EAAK6lK,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAASpmK,EAAK+lK,6BACZI,EAAUvmH,QACV6lH,GAMAU,EAAUz5J,SAAW05J,EAAO15J,SAC9BJ,EAAK65J,GAGT,OAAO75J,KAIT+5J,0BAA4B,SAAA5jK,GAC1B,IAAI6J,EAAK,KACL7R,OAAOoE,KAAKmB,EAAKjF,MAAM0B,cAAcqC,SACvCwN,EAAKtM,EAAKkmK,sBACRzjK,EAAUhG,aACVuD,EAAKjF,MAAM0B,eAIX6P,GACFtM,EAAKsmK,qBAAqBh6J,MAI9Bg6J,qBAAuB,SAAAxqJ,GAGrB,IAAIyqJ,EAAYvmK,EAAKwmK,wBAAwB1qJ,GAC7CyqJ,EAAUvxD,WAAah1G,EAAKjF,MAAMkQ,UAClCs7J,EAAUE,WAAY,EAItBhnJ,OAAOo1F,cAAcC,WAAW,IAAKyxD,MAGvCC,wBAA0B,SAAA1qJ,GACxB,IAAI4qJ,EAAuB,GAG3B,OAFa5qJ,EAAYpP,QAGvB,IAAK,cACHg6J,EAAuBtB,GAAyB9pJ,YAChD,MACF,IAAK,UACHorJ,EAAuBtB,GAAyBC,QAChD,MACF,IAAK,UACHqB,EAAuBtB,GAAyBh+I,QAChD,MACF,IAAK,YACHs/I,EAAuBtB,GAAyBE,UAChD,MACF,IAAK,UACHoB,EAAuBtB,GAAyBx9I,QAChD,MACF,IAAK,QACH8+I,EAAuBtB,GAAyB7sJ,MAOpD,IAAIouJ,EAAoB,GACxB,OAAQ7qJ,EAAY8a,QAClB,IAAK,kBACH+vI,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoB7qJ,EAAY8a,OAAOgwI,OAAO,GAAGp2J,cAAgBsL,EAAY8a,OAAOxW,OAAO,GAM/F,IAAIymJ,GAFJH,EAAuB/7J,KAAKwU,MAAMxU,KAAKC,UAAU87J,KAEXr8I,QAAQ6I,QAAQ,WAAWyzI,GAMjE,OALAE,EAAaA,EAAWD,OAAO,GAAGp2J,cAAgBq2J,EAAWlyJ,MAAM,GACnE+xJ,EAAqBr8I,QAAUw8I,EAC/BH,EAAqBD,WAAY,EACjCC,EAAqB1xD,WAAah1G,EAAKjF,MAAMkQ,UAEtCy7J,qFAGUjkK,EAAWC,GAC5B5H,KAAKurK,0BAA0B5jK,oCAI/B,OACEgB,EAAAxI,EAAAC,cAAA,WACEuI,EAAAxI,EAAAC,cAACwI,EAAA,EAAaigK,SAAd,CAAuBr1C,IAAK,SAAA62C,GAAI,OAAK1lJ,OAAOo1F,cAAgBswD,aAtLjChsD,IAAMx7G,WCsBnCmpK,GAAU3tD,IAAM4tD,KAAK,kBAAMxlJ,EAAA3f,EAAA,GAAAqtH,KAAA1tG,EAAAvH,KAAA,cAC3BgtJ,GAAY7tD,IAAM4tD,KAAK,kBAAMhrJ,QAAAqD,IAAA,CAAAmC,EAAA3f,EAAA,GAAA2f,EAAA3f,EAAA,GAAA2f,EAAA3f,EAAA,GAAA2f,EAAA3f,EAAA,KAAAqtH,KAAA1tG,EAAAvH,KAAA,cAC7BitJ,GAAa9tD,IAAM4tD,KAAK,kBAAMhrJ,QAAAqD,IAAA,CAAAmC,EAAA3f,EAAA,GAAA2f,EAAA3f,EAAA,GAAA2f,EAAA3f,EAAA,KAAAqtH,KAAA1tG,EAAAvH,KAAA,cAmnCrBktJ,8MAhnCb5kK,MAAQ,CACNuX,QAAS,KACTc,WAAY,GACZw5F,SAAU,KACVgzD,WAAY,KACZC,YAAa,IACbpuF,MAAO,UACP/tE,UAAW,QACXo8J,YAAY,EACZpiK,YAAa,KACbqiK,aAAc,KACd9lH,cAAe,KACf+7D,cAAe,KACfx4G,cAAe,KACfwiK,cAAehrK,IACfg7J,eAAgB,KAChBlB,eAAgB,KAChBnrJ,gBAAiB,KACjBs8J,gBAAgB,EAChB9iD,iBAAkB,KAClB/1G,iBAAkB,KAClB84J,kBAAmB,KACnBrH,mBAAoB,KACpBxlK,MAAO6kB,OAAOioJ,WACd74I,oBAAqB,KACrBhyB,OAAQ4iB,OAAOkoJ,YACfnjH,OAAO77C,IAAckR,QACrB+tJ,uBAAwB,KACxBnL,0BAA0B,EAC1B7yD,4BAA6B,QAI/B/rG,cAAgB,OAUhBgqK,kBAAoB,SAACjmK,GACfA,GACFA,EAAEgI,iBAEJ5J,EAAK8C,SAAS,CACZ2kK,kBAAmB,UAIvBK,iBAAmB,SAAC/sK,GAClBiF,EAAK8C,SAAS,CACZ2kK,kBAAmB1sK,OAIvBgtK,mBAAqB,SAAChtK,EAAO0H,OAyB7BmzE,qCAAkB,SAAAn6D,IAAA,IAAA5Y,EAAAgzE,EAAAG,EAAAr7D,EAAAqtJ,EAAAC,EAAAx6J,UAAA,OAAAqe,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,UAAOtJ,EAAPolK,EAAAnpK,OAAA,QAAA0qB,IAAAy+I,EAAA,GAAAA,EAAA,GAAkB,KAAMpyF,EAAxBoyF,EAAAnpK,OAAA,QAAA0qB,IAAAy+I,EAAA,IAAAA,EAAA,GAEXjoK,EAAKsC,MAAMuX,QAFA,CAAA8B,EAAAxP,KAAA,eAAAwP,EAAAe,OAAA,UAGP,GAHO,cAMVs5D,EAAoBh2E,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,IAEhDya,EARUlgB,OAAA+4B,EAAA,EAAA/4B,CAAA,GAQQuF,EAAKsC,MAAMqY,aACpBq7D,IACbv7E,OAAOoE,KAAK8b,EAAWq7D,IAAoBj3E,QAAQ,SAAA4C,GAErB,OADfgZ,EAAWq7D,GAAmBr0E,GAClCu0E,uBACAv7D,EAAWq7D,GAAmBr0E,MAKrCqmK,EAAmBnyF,EAAY,GAAK71E,EAAKnC,cAAcu8C,cAAc,gBACnD4tH,EAAiBhyF,IACvCv7E,OAAOoE,KAAKmpK,EAAiBhyF,IAAoBj3E,QAAS,SAAA4C,GAEtB,OADfqmK,EAAiBhyF,GAAmBr0E,GACxCu0E,uBACN8xF,EAAiBhyF,GAAmBr0E,KAKjD3B,EAAKnC,cAAcyhB,gBAAgB,aAAc0oJ,GAAkB,GA5BnDrsJ,EAAAxP,KAAA,GA8BVnM,EAAK8C,SAAS,CAClB6X,cACC,WACuB,oBAAb9X,GACTA,MAlCY,eAAA8Y,EAAAe,OAAA,UAsCT,GAtCS,yBAAAf,EAAArO,SAAAmO,EAAA3gB,WAyClB8f,cAAgB,SAACjZ,EAAKgE,GAA8C,IAAxC+xB,EAAwCjqB,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAlC,KAAMsoE,EAA4BtoE,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,IAAAA,UAAA,GAElE,IAAKzN,EAAKsC,MAAMuX,QACd,OAAO,EAGTlY,EAAMA,EAAI0G,cACV,IAAM+rB,EAAcvnB,SAASe,KAAK84B,MAAM,KAClCsvC,EAAoBh2E,EAAKsC,MAAMuX,QAAQ6Y,SAASxyB,GAChDgoK,EAAiBloK,EAAKsC,MAAMqY,WAAWq7D,GAAqBh2E,EAAKsC,MAAMqY,WAAWq7D,GAAmBr0E,GAAO,KAE9GqmK,EAAmBhoK,EAAKnC,cAAcu8C,cAAc,cAAa,EAAK,IACpE+tH,EAAiBH,EAAiBhyF,GAAqBgyF,EAAiBhyF,GAAmBr0E,GAAO,KAElGymK,EAAoBryF,KAAqBoyF,GAAsD,OAAlCA,EAAejyF,gBAA2BiyF,EAAejyF,gBAAkB9hD,GAAgBzpB,KAAKC,UAAUu9J,EAAexiK,QAAUgF,KAAKC,UAAUjF,IAGjNglB,GAAS,EAEb,IAJoBu9I,GAAsD,OAAlCA,EAAehyF,gBAA2BgyF,EAAehyF,gBAAkB9hD,GAAgBzpB,KAAKC,UAAUs9J,EAAeviK,QAAUgF,KAAKC,UAAUjF,IAAUyiK,EAIpL,CACd,IAAMlyF,EAAiBx+C,EAAMtD,EAAesD,EAAO,KAG/Cq+C,IACGiyF,KACHA,EAAmB,IACFhyF,GAAqB,IAKxCgyF,EAAgBvtK,OAAA+4B,EAAA,EAAA/4B,CAAA,GACXutK,EADWvtK,OAAA2zI,EAAA,EAAA3zI,CAAA,GAEbu7E,EAFav7E,OAAA+4B,EAAA,EAAA/4B,CAAA,GAGTutK,EAAiBhyF,GAHRv7E,OAAA2zI,EAAA,EAAA3zI,CAAA,GAIXkH,EAAM,CACLgE,OACAuwE,sBAKNl2E,EAAKnC,cAAcyhB,gBAAgB,aAAa0oJ,GAAiB,IAInEhoK,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BiY,WAAWlgB,OAAA+4B,EAAA,EAAA/4B,CAAA,GACNiI,EAAUiY,WADLlgB,OAAA2zI,EAAA,EAAA3zI,CAAA,GAEPu7E,EAFOv7E,OAAA+4B,EAAA,EAAA/4B,CAAA,GAGHiI,EAAUiY,WAAWq7D,GAHlBv7E,OAAA2zI,EAAA,EAAA3zI,CAAA,GAILkH,EAAM,CACLgE,OACAuwE,wBAIJ,WACFz2D,OAAO9E,WAAa3a,EAAKsC,MAAMqY,aAGjCgQ,GAAS,EAGX,OAAOA,KAGT01I,sBAAwB,SAACD,GACvBpgK,EAAK8C,SAAS,CACZs9J,0BAIJ7+G,iBAAmB,SAACC,GAEdA,IAAkBA,EAAcn5C,cAAcgnC,MAAM,gBACtDmS,EAAgB,MAGdA,IAAkBxhD,EAAKsC,MAAMk/C,eAC/BxhD,EAAK8C,SAAS,CACZ0+C,gBACAi7G,0BAA0B,OAgUhC5zI,uBAAyB,WACvB,IAAMjmB,EAAW,CACfhI,MAAOoF,EAAKsC,MAAM1H,MAClBiC,OAAQmD,EAAKsC,MAAMzF,QAGfwrK,EAAe5oJ,OAAOioJ,aAAe1nK,EAAKsC,MAAM1H,MAChD0tK,EAAgB7oJ,OAAOkoJ,cAAgB3nK,EAAKsC,MAAMzF,OAExD,OAAIwrK,GAAgBC,GACdD,IACFzlK,EAAShI,MAAQ6kB,OAAOioJ,YAEtBY,IACF1lK,EAAS/F,OAAS4iB,OAAOkoJ,aAEpB3nK,EAAK8C,SAASF,IAGhB,iFA9fH9H,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,iFA6KhC6G,EAAG2mK,4FACVztK,KAAKgI,SAAS,SAAAR,GAAK,OAAA7H,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAU6H,EAAV,CAAiB8kK,YAAamB,gSAIlD3lK,EAAW,GACXisB,EAAsB,GACtB+6E,EAA8B,GAC9B1sE,EAAkBpiC,KAAKwH,MAAMuX,SAAW/e,KAAKwH,MAAMuX,QAAQkZ,iBAAoBj4B,KAAKwH,MAAMuX,QAAQiZ,QAAQ5yB,IAAMpF,KAAKwH,MAAMuX,QAAQ6Y,SAASxyB,GAAMpF,KAAKwH,MAAMkiD,OAAOtnB,gBAK1KziC,OAAOoE,KAAKqM,MAAiBmB,OAAQ,SAAAomB,GAAS,OAAIx0B,EAAKJ,cAAc0S,gBAAgB,CAAC,UAAU,oBAAoBgf,SAAS1iB,SAAS4lB,MAAc1zB,QAAS,SAAA0zB,GAC3Jm3E,EAA4Bn3E,GAAa,GACzCh4B,OAAOoE,KAAKqM,KAAgBunB,IAAY1zB,QAAQ,SAACo9B,GAE/CytE,EAA4Bn3E,GAAW0J,GAAY1hC,OAAOoE,KAAKqM,KAAgBunB,GAAW0J,IAAW4D,OAAO,SAACl1B,EAAe0B,GAC1H,IAAMtH,EAAciG,KAAgBunB,GAAW0J,GAAU5vB,GACnDi8J,GAAcvjK,EAAY2zI,cAAgB3zI,EAAY2zI,YAAY95I,QAAUmG,EAAY2zI,YAAYrpH,SAAStxB,EAAKqE,MAAM6kK,YAI9H,OAHIliK,EAAYkoB,SAAWq7I,IACzB39J,EAAc0B,GAAStH,GAElB4F,GACN,IAECgC,SAAS4lB,KAAe5lB,SAASqwB,KACnCrO,EAAoBsN,GAAYytE,EAA4Bn3E,GAAW0J,QAK7Ev5B,EAASisB,oBAAsBA,EAC/BjsB,EAASgnG,4BAA8BA,GAKjCj7F,EAAmB7T,KAAKwH,MAAMqM,mBACZkgB,EAAoBlgB,KAC1C/L,EAASsI,gBAAkB2jB,EAAoBlgB,IAGzC5J,EAAgBjK,KAAKwH,MAAMyC,gBACZnC,EAASsI,gBAAgBnG,KAC5CnC,EAASqC,YAAcrC,EAASsI,gBAAgBnG,eAM9CjK,KAAKgI,SAASF,uLAGC+L,EAAkB5J,uGAAc2/G,iCAAiB,KAEhE7hH,EAAW,WACf+C,EAAK6iK,uBAID7lK,EAAW,CACfqC,YAAcF,EAAuBjK,KAAKwH,MAAM2C,YAAlB,KAC9BiG,gBAAkBnG,EAAuBjK,KAAKwH,MAAM4I,gBAAlB,KAClCnG,cAAgBA,EAAgCjK,KAAKwH,MAAMyC,cAA3BA,EAChC4J,iBAAmBA,EAAsC7T,KAAKwH,MAAMqM,iBAA9BA,GAIpCA,GAAoB7T,KAAKwH,MAAMusB,qBAAuBlgB,IAAqB7T,KAAKwH,MAAMqM,kBAAoBlU,OAAOoE,KAAK/D,KAAKwH,MAAMusB,qBAAqBU,SAAS5gB,EAAiBtG,eAClLzF,EAAS+L,iBAAmBA,EAAiBtG,cAEpB,aAAnBsG,GAA+BA,IAAmB7T,KAAKwH,MAAMqM,mBAEnE/L,EAAS+L,iBAAmBA,EAAiBtG,eAI1CtD,GAAiBA,IAAkBjK,KAAKwH,MAAMyC,gBAEzB,aAAnB4J,EAGE0pB,MAAqB59B,OAAOoE,KAAKw5B,KAAkBqsF,IAAmBn1F,SAASxqB,KAChFnC,EAASmC,cAAgBA,EACzBnC,EAASsI,gBAAkBmtB,KAC3Bz1B,EAAS8hH,iBAAmBA,EAC5B9hH,EAASqC,YAAcozB,KAAkBqsF,GAAkB3/G,IAGxDjK,KAAKwH,MAAM4I,iBAAmBzQ,OAAOoE,KAAK/D,KAAKwH,MAAM4I,iBAAiBqkB,SAASxqB,EAAcyL,gBACpG5N,EAASmC,cAAgBA,EAAcyL,cACvC5N,EAASqC,YAAcnK,KAAKwH,MAAM4I,gBAAgBnG,IAE3CjK,KAAKwH,MAAMusB,qBAAuBp0B,OAAOoE,KAAK/D,KAAKwH,MAAMusB,oBAAoBlgB,IAAmB4gB,SAASxqB,EAAcyL,iBAC9H5N,EAASmC,cAAgBA,EAAcyL,cACvC5N,EAASqC,YAAcnK,KAAKwH,MAAMusB,oBAAoBlgB,GAAkB/L,EAASmC,eACjFnC,EAASsI,gBAAkBpQ,KAAKwH,MAAMusB,oBAAoBlgB,cAMxD7T,KAAKgI,SAASF,EAAUC,2LAIPq6B,wFAAgBwrI,kCACvCxrI,EAAkBrwB,SAASqwB,IACvBv0B,IAAckR,QAAQ+jI,gBAAgBruH,SAAS2N,0BACjDpiC,KAAK+C,cAAcyhB,gBAAgB,kBAAkB4d,IAEjDwrI,GAAqB5tK,KAAKwH,MAAMi1J,gBAAgD,YAA9Bz8J,KAAKwH,MAAMi1J,iBAC/Dz8J,KAAK+C,cAAcg5B,iBAAiBqG,YAEzBpiC,KAAKgI,SAAS,SAAAJ,GAAS,MAAK,CACvC8hD,OAAO/pD,OAAA+4B,EAAA,EAAA/4B,CAAA,GACFiI,EAAU8hD,OADT,CAEJtnB,8OAMUvuB,mFAEV9L,EAAW,WACfk1G,EAAK0wD,uBAEPl2I,QAAQqc,IAAI,aAAa9zC,KAAKwH,MAAMusB,sBAEhClgB,GAAoBA,IAAqB7T,KAAKwH,MAAMqM,mBAAqBlU,OAAOoE,KAAK/D,KAAKwH,MAAMusB,qBAAqBU,SAAS5gB,EAAiBtG,gBAAmC,aAAnBsG,yBACjKA,EAAmBA,EAAiBtG,uBAC9BvN,KAAKgI,SAAS,CAClB6L,oBACC9L,oCACO8L,oCACJ7T,KAAKgI,SAAS,CAClB6L,oBACC9L,gLAIQkC,qFAEPlC,EAAW,WACf49G,EAAKgoD,wBAGH1jK,GAAiBA,IAAkBjK,KAAKwH,MAAMyC,gBAAiBtK,OAAOoE,KAAK/D,KAAKwH,MAAM4I,iBAAiBqkB,SAASxqB,EAAcyL,sCAChIzL,EAAgBA,EAAcyL,eACxB5N,EAAW,CACfmC,kBAEOE,YAAcnK,KAAKwH,MAAM4I,gBAAgBnG,YAC5CjK,KAAKgI,SAASF,EAAUC,oCACpBkC,oCACJjK,KAAKgI,SAAS,CAClBiC,gBACAE,YAAa,MACZpC,oQAML/H,KAAKkD,YAELyhB,OAAOjT,MAAQ1R,KAAK+C,cAAc2O,MAGbiT,OAAOmV,SAAS2K,OAAOl3B,cAAcknB,SAAS5mB,IAAco+C,QAAQ1+C,iBAEvFoX,OAAO8S,QAAQha,MAAQ,aACvBkH,OAAO8S,QAAQo2I,KAAO,cAGxBlpJ,OAAOmpJ,OAASA,IAEZnpJ,OAAOR,cACTnkB,KAAK+C,cAAciyD,iBAAiB,YAGhC7kD,EAAYnQ,KAAK+C,cAAcu8C,cAAc,aAAa,KAE9Dt/C,KAAK+tK,aAAa59J,IAGdiyB,EAAkBpiC,KAAK+C,cAAcu8C,cAAc,mBAAkB,KAEzEt/C,KAAKyuI,mBAAmBrsG,GAG1Bzd,OAAOqpJ,YAAc,SAACC,GAEpB,IADA,IAAMC,EAAUhgJ,SAASigJ,qBAAqB,UACrChhK,EAAI,EAAGA,EAAI+gK,EAAQlqK,OAAQmJ,IAAK,CACvC,IAAMihK,EAASF,EAAQ/gK,GACnBihK,EAAOC,gBAAkBJ,GAC3BtpJ,OAAOmpJ,OAAOM,GAAQE,QAAQ,qBAAqB,GAAG7c,WAK5D9sI,OAAOmJ,iBAAiB,SAAU9tB,KAAK+tB,wBAEvC/tB,KAAKuuK,yBACLvuK,KAAKwuK,6RAICnC,EAAarsK,KAAK+C,cAAcmpD,wBACtClsD,KAAKgI,SAAS,CACZqkK,cADF1sK,OAAAoxB,EAAA,EAAApxB,CAAAqxB,EAAA7wB,EAAA2Q,KAEG,SAAAojB,IAAA,OAAAlD,EAAA7wB,EAAA+Q,KAAA,SAAAsjB,GAAA,cAAAA,EAAApjB,KAAAojB,EAAAnjB,MAAA,OAQDw0G,EAAK8nD,sBARJ,wBAAAn5I,EAAAhiB,SAAA0hB,EAAAl0B,wJAaH,IAAKA,KAAKwH,MAAMk/C,eAES,WADA1mD,KAAK+C,cAAc6rD,kBAAkB,UAC3B,CAC/B,IAAMlI,EAAgB1mD,KAAK+C,cAAcyjD,mBACrCE,GAAiBA,IAAkB1mD,KAAKwH,MAAMk/C,eAChD1mD,KAAKgI,SAAS,CACZ0+C,kEAQR/hC,OAAOqJ,oBAAoB,SAAUhuB,KAAK+tB,qEAGxB,IAAAw4F,EAAAvmH,KAEZogE,EAAUpgE,KAAK+C,cAAcu8C,cAAc,WAAW,GAE5D,GAD6B8gB,IAAYvyD,IAAcuyD,QAC7B,CACxB3oC,QAAQqc,IAAR,+BAAAntC,OAA2Cy5D,EAA3C,QAAAz5D,OAAyDkH,IAAcuyD,UACvE,IAAMquG,EAAgBzuK,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,aAElEzV,KAAK86E,gBAAgB,WAEnByrC,EAAKxjH,cAAckyD,gBAAgB,CAAC,iBAAkB,gBAAiB,YAAa,oBACpFsxD,EAAKxjH,cAAcyhB,gBAAgB,UAAW3W,IAAcuyD,UAC3DquG,GAGLh3I,QAAQqc,IAAR,mBAAAntC,OAA+BkH,IAAcuyD,qDAG5Bz4D,EAAWC,GAI5B,GAHA5H,KAAKkD,YAEyB0E,EAAU60J,iBAAmBz8J,KAAKwH,MAAMi1J,eAEpE,GAAkC,YAA9Bz8J,KAAKwH,MAAMi1J,eACbz8J,KAAK+tK,aAAa,SAAS,OACtB,CAEL,IAAM59J,EAAYnQ,KAAK+C,cAAcu8C,cAAc,aAAa,IAAUt/C,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAa,QAAS,SACpIzV,KAAK+tK,aAAa59J,IAIMvI,EAAUmX,SAAW/e,KAAKwH,MAAMuX,SAE1D/e,KAAK0uK,qBAGP,IAAMC,EAAe/mK,EAAUqC,gBAAkBjK,KAAKwH,MAAMyC,cACtD2kK,EAAkBhnK,EAAUiM,mBAAqB7T,KAAKwH,MAAMqM,iBAC5Dg7J,EAAiBh/J,KAAKC,UAAUlI,EAAUmX,WAAalP,KAAKC,UAAU9P,KAAKwH,MAAMuX,UAEnF4vJ,GAAgBC,GAAmBC,IACrC7uK,KAAK2tK,kEAcP,GAHAhpJ,OAAOqoJ,iBAAmBhtK,KAAKgtK,iBAC/BroJ,OAAOooJ,kBAAoB/sK,KAAK+sK,kBAE5B5oJ,aAAc,CAChB,IAAIs+F,EAAgBt+F,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChGm3I,EAAiBp3I,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAGlFO,OAAOmV,SAAS3T,KAAKsO,SAAS,mBAEjDguF,EAAgB,aAChB84C,EAAiB,UAInBv7J,KAAKs7J,aAAa74C,EAAe84C,sCA0B3Br9E,GACR,OAAOl+E,KAAKgI,SAAS,CAAEk2E,gDAGXp3E,GAIZ,OAHIA,GACFA,EAAEgI,iBAEG9O,KAAKgI,SAAS,CACnBqxG,SAAU,KACVqzD,gBAAgB,yCAIP5lK,EAAGuyG,GAGd,OAFAvyG,EAAEgI,iBAEK9O,KAAKgI,SAAS,CACnBqxG,WACAqzD,gBAAgB,wJAMlB1sK,KAAKgI,SAAS,CACZ0+C,cAAe,OAGjB1mD,KAAK86E,gBAAgB,WAEnBmsC,EAAKlkH,cAAckyD,gBAAgB,CAAC,UAAW,YAAa,YAAa,aAAa,2JAI/El2C,GACT/e,KAAKgI,SAAS,CACZ+W,UACAgV,oBAAoB,4CAIX0uF,EAAe84C,GAAgB,IAAAn0C,EAAApnH,KAEtCo8J,EAAgBvuJ,IAAc0oI,WAAW9zB,EAAcl1G,eAO3D,IANK6uJ,GAAiBb,IACpBa,EAAgBvuJ,IAAc0oI,WAAWglB,EAAehuJ,gBAKrD6uJ,IAAkBA,EAAc/pI,SAA+B,aAAlBowF,IAAiC9iH,OAAOoE,KAAK8J,IAAc0oI,YAAY9hH,SAASguF,EAAcl1G,gBAAoBguJ,IAAmB57J,OAAOoE,KAAK8J,IAAc0oI,YAAY9hH,SAAS8mI,EAAehuJ,eACnPk1G,EAAgB,SAChB84C,EAAiB,cACZ,GAAsB,aAAlB94C,EAA8B,CACvC,IAAMqsD,EAAc5U,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQe,GACN,IAAK,YACEuT,GAAetU,IAClBe,EAAiB,UAEnB,MACF,IAAK,UACEf,GAAasU,IAChBvT,EAAiB,aAWzB,OAHAv7J,KAAK+C,cAAcyhB,gBAAgB,gBAAiBi+F,GACpDziH,KAAK+C,cAAcyhB,gBAAgB,iBAAkB+2I,GAE9Cv7J,KAAKgI,SAAS,CACnBy6G,gBACA84C,kBACC,WACDn0C,EAAKonD,2DAIIr+J,GAAyB,IAAd4+J,IAAcp8J,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,KAAAA,UAAA,GAChC85J,EAAgB,KAGdn3B,EAAkBt1I,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAa,QAAS,oBAKlF,OAJkB,SAAdtF,GAAyBmlI,IAC3BnlI,EAAY,SAGNA,GACN,QACA,IAAK,QACHs8J,EAAgBhrK,IAChB,MACF,IAAK,OACHgrK,EAAgBuC,EAIhBD,GACF/uK,KAAK+C,cAAcyhB,gBAAgB,YAAarU,GAGlDnQ,KAAKgI,SAAS,CACZmI,YACAs8J,4DAIchQ,GAChBz8J,KAAKgI,SAAS,CACZy0J,oDAIK,IAAAwS,EAAAjvK,KACDgC,EAAWhC,KAAKwH,MAAM1H,OAAS,IAC/BupK,EAAoBrpK,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAc,YAItEy5J,EACJvmK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACP2uB,UAAW,QACX1tB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBP,gBAAiB,YAEjBiI,EAAAxI,EAAAC,cAACunH,GAAA,EAAD,CACEhlH,UAAW,CACT4yH,SAAU,EACV9yH,WAAY,GAEdmjB,YAAa,CACXrX,GAAI,EACJlM,KAAM,OACNC,MAAO,WAETwB,UAAW,CACThD,GAAI,EACJE,cAAe,UAEjB4B,KAAM,MAKZ,OACE+F,EAAAxI,EAAAC,cAACq9J,GAAA,EAAD,KACE90J,EAAAxI,EAAAC,cAACmpK,GAAD,MACA5gK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEnH,MAAOzB,KAAKwH,MAAMilK,eAElB9jK,EAAAxI,EAAAC,cAAC+uK,EAAAhvK,EAAD,CACEivK,QAASltI,IACTq0G,WAAYA,GACZ84B,YAAa,WAEb1mK,EAAAxI,EAAAC,cAACkvK,EAAA,aAAD,CACEC,yBAAyB,EACzBC,yBAAyB,GAExB,SAAApU,GAEC,OACEzyJ,EAAAxI,EAAAC,cAACqvK,GAAD,CACErU,QAASA,EACTp5J,SAAUA,EACVu0I,WAAYA,GACZ7sF,OAAQulH,EAAKznK,MAAMkiD,OACnBjoD,MAAOwtK,EAAKznK,MAAMilK,cAClB5sJ,WAAYovJ,EAAKznK,MAAMqY,WACvB1V,YAAa8kK,EAAKznK,MAAM2C,YACxBozB,kBAAmBA,KACnBkmI,WAAYwL,EAAKxL,WAAWvkJ,KAAK+vJ,GACjCvoH,cAAeuoH,EAAKznK,MAAMk/C,cAC1Bz8C,cAAeglK,EAAKznK,MAAMyC,cAC1Bw4G,cAAewsD,EAAKznK,MAAMi7G,cAC1Bg6C,eAAgBwS,EAAKznK,MAAMi1J,eAC3BlB,eAAgB0T,EAAKznK,MAAM+zJ,eAC3BD,aAAc2T,EAAK3T,aAAap8I,KAAK+vJ,GACrC7+J,gBAAiB6+J,EAAKznK,MAAM4I,gBAC5B0P,cAAemvJ,EAAKnvJ,cAAcZ,KAAK+vJ,GACvCn0F,gBAAiBm0F,EAAKn0F,gBAAgB57D,KAAK+vJ,GAC3C3J,mBAAoB2J,EAAKznK,MAAM89J,mBAC/BvxI,oBAAqBk7I,EAAKznK,MAAMusB,oBAChCwxI,sBAAuB0J,EAAK1J,sBAAsBrmJ,KAAK+vJ,GACvDtN,yBAA0BsN,EAAKznK,MAAMm6J,yBACrC7yD,4BAA6BmgE,EAAKznK,MAAMsnG,6BAExCnmG,EAAAxI,EAAAC,cAACqvK,GAAWvG,SAAZ,KACG,SAAAhoJ,GA0CK,IAzCJpC,EAyCIoC,EAzCJpC,KACAg6H,EAwCI53H,EAxCJ43H,OACA/5H,EAuCImC,EAvCJnC,QACAzO,EAsCI4Q,EAtCJ5Q,QACA2wJ,EAqCI//I,EArCJ+/I,SACAjyG,EAoCI9tC,EApCJ8tC,SACA+0F,EAmCI7iI,EAnCJ6iI,SACAjsH,EAkCI5W,EAlCJ4W,UACA+b,EAiCI3yB,EAjCJ2yB,WACAqF,EAgCIh4B,EAhCJg4B,YACAl4B,EA+BIE,EA/BJF,YACAm9I,EA8BIj9I,EA9BJi9I,YACAt2H,EA6BI3mB,EA7BJ2mB,aACAy5H,EA4BIpgJ,EA5BJogJ,aACA3/J,EA2BIuf,EA3BJvf,aACAutD,EA0BIhuC,EA1BJguC,aACA4xG,EAyBI5/I,EAzBJ4/I,aAEArrH,GAuBIv0B,EAxBJpM,cAwBIoM,EAvBJu0B,gBACAurH,EAsBI9/I,EAtBJ8/I,eAEA3B,GAoBIn+I,EArBJwuJ,eAqBIxuJ,EApBJm+I,iBACAkC,EAmBIrgJ,EAnBJqgJ,iBACA/B,EAkBIt+I,EAlBJs+I,iBACAxsG,EAiBI9xC,EAjBJ8xC,iBACAsnD,EAgBIp5F,EAhBJo5F,kBACApiF,EAeIhX,EAfJgX,kBACAipI,EAcIjgJ,EAdJigJ,kBACA2B,EAaI5hJ,EAbJ4hJ,mBACAzoC,EAYIn5G,EAZJm5G,mBACA+mC,EAWIlgJ,EAXJkgJ,oBACAtB,EAUI5+I,EAVJ4+I,oBACA2B,EASIvgJ,EATJugJ,oBACA3kG,EAQI57C,EARJ47C,qBACA4kG,EAOIxgJ,EAPJwgJ,qBACAvxC,EAMIjvG,EANJivG,qBACAyxC,EAKI1gJ,EALJ0gJ,uBACAJ,EAIItgJ,EAJJsgJ,yBACAzpD,EAGI72F,EAHJ62F,0BACAt5F,EAEIyC,EAFJzC,0BACAkxJ,EACIzuJ,EADJyuJ,2BAEA,OACEhnK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,KACED,EAAAxI,EAAAC,cAACwvK,GAAA,EAAD,KACEjnK,EAAAxI,EAAAC,cAACwvK,GAAA,EAAD,CACE/pK,KAAK,kDACL40G,OACE,SAACx6G,GAAD,OACE0I,EAAAxI,EAAAC,cAACyvK,EAAA,SAAD,CACEC,SAAUZ,GAEVvmK,EAAAxI,EAAAC,cAAC8rK,GAADvsK,OAAAC,OAAA,GACMK,EADN,CAEE6e,KAAMA,EACNg6H,OAAQA,EACR/5H,QAASA,EACTq8I,QAASA,EACT9qJ,QAASA,EACTmM,aAAa,EACbwkJ,SAAUA,EACVld,SAAUA,EACV/hJ,SAAUA,EACVgtD,SAAUA,EACVl3B,UAAWA,EACX+b,WAAYA,EACZqF,YAAaA,EACbilH,YAAaA,EACb2C,aAAcA,EACd5xG,aAAcA,EACdrnB,aAAcA,EACdlmC,aAAcA,EACd03G,SAAU41D,EAAKznK,MAAM6xG,SACrB47C,OAAQga,EAAKha,OAAO/1I,KAAK+vJ,GACzBx5H,eAAgBA,EAChBurH,eAAgBA,EAChB7wJ,UAAW8+J,EAAKznK,MAAM2I,UACtB1O,MAAOwtK,EAAKznK,MAAMilK,cAClBpN,gBAAiBA,EACjBgN,WAAY4C,EAAKznK,MAAM6kK,WACvBE,WAAY0C,EAAKznK,MAAM+kK,WACvB1sJ,WAAYovJ,EAAKznK,MAAMqY,WACvBkwJ,SAAUd,EAAKc,SAAS7wJ,KAAK+vJ,GAC7BzP,iBAAkBA,EAClBxsG,iBAAkBA,EAClBuuG,iBAAkBA,EAClBp3J,YAAa8kK,EAAKznK,MAAM2C,YACxB+tB,kBAAmBA,EACnBqF,kBAAmBA,KACnB+8E,kBAAmBA,EACnB6mD,kBAAmBA,EACnB9mC,mBAAoBA,EACpByoC,mBAAoBA,EACpB74J,cAAeglK,EAAKznK,MAAMyC,cAC1Bw4G,cAAewsD,EAAKznK,MAAMi7G,cAC1ButD,YAAaf,EAAKe,YAAY9wJ,KAAK+vJ,GACnCnP,oBAAqBA,EACrBsB,oBAAqBA,EACrBK,oBAAqBA,EACrBlG,eAAgB0T,EAAKznK,MAAM+zJ,eAC3BmR,eAAgBuC,EAAKznK,MAAMklK,eAC3B5vG,qBAAsBA,EACtBqzD,qBAAsBA,EACtB8/C,aAAchB,EAAKgB,aAAa/wJ,KAAK+vJ,GACrCvN,qBAAsBA,EACtBwO,gBAAiBjB,EAAKkB,UAAUjxJ,KAAK+vJ,GACrC3T,aAAc2T,EAAK3T,aAAap8I,KAAK+vJ,GACrClB,aAAckB,EAAKlB,aAAa7uJ,KAAK+vJ,GACrC7+J,gBAAiB6+J,EAAKznK,MAAM4I,gBAC5BggK,cAAenB,EAAKmB,cAAclxJ,KAAK+vJ,GACvCnvJ,cAAemvJ,EAAKnvJ,cAAcZ,KAAK+vJ,GACvCp7J,iBAAkBo7J,EAAKznK,MAAMqM,iBAC7B+1G,iBAAkBqlD,EAAKznK,MAAMoiH,iBAC7Bg4C,uBAAwBA,EACxB9mF,gBAAiBm0F,EAAKn0F,gBAAgB57D,KAAK+vJ,GAC3C5jC,iBAAkB4jC,EAAK5jC,iBAAiBnsH,KAAK+vJ,GAC7CzN,yBAA0BA,EAC1BztI,oBAAqBk7I,EAAKznK,MAAMusB,oBAChCqpI,kBAAmB6R,EAAK7R,kBAAkBl+I,KAAK+vJ,GAC/Cl3D,0BAA2BA,EAC3Bt5F,0BAA2BA,EAC3BgwH,mBAAoBwgC,EAAKxgC,mBAAmBvvH,KAAK+vJ,GACjDU,2BAA4BA,EAC5BpK,sBAAuB0J,EAAK1J,sBAAsBrmJ,KAAK+vJ,GACvDngE,4BAA6BmgE,EAAKznK,MAAMsnG,mCAQhDu6D,GACE1gK,EAAAxI,EAAAC,cAACwvK,GAAA,EAAD,CACE/pK,KAAK,kCACL40G,OACE,SAACx6G,GAAD,OACE0I,EAAAxI,EAAAC,cAACyvK,EAAA,SAAD,CACEC,SAAUZ,GAEVvmK,EAAAxI,EAAAC,cAAC+rK,GAADxsK,OAAAC,OAAA,GACMK,EADN,CAEE6e,KAAMA,EACNg6H,OAAQA,EACR/5H,QAASA,EACTq8I,QAASA,EACT9qJ,QAASA,EACT2wJ,SAAUA,EACVld,SAAUA,EACV/hJ,SAAUA,EACVgtD,SAAUA,EACVqhH,cAAc,EACdv4I,UAAWA,EACX+b,WAAYA,EACZqF,YAAaA,EACbilH,YAAaA,EACbjvG,aAAcA,EACdrnB,aAAcA,EACdy5H,aAAcA,EACd3/J,aAAcA,EACd03G,SAAU41D,EAAKznK,MAAM6xG,SACrB47C,OAAQga,EAAKha,OAAO/1I,KAAK+vJ,GACzBjO,eAAgBA,EAChB7wJ,UAAW8+J,EAAKznK,MAAM2I,UACtB1O,MAAOwtK,EAAKznK,MAAMilK,cAClBpN,gBAAiBA,EACjBgN,WAAY4C,EAAKznK,MAAM6kK,WACvBE,WAAY0C,EAAKznK,MAAM+kK,WACvB1sJ,WAAYovJ,EAAKznK,MAAMqY,WACvBkwJ,SAAUd,EAAKc,SAAS7wJ,KAAK+vJ,GAC7BzP,iBAAkBA,EAClBxsG,iBAAkBA,EAClBuuG,iBAAkBA,EAClBp3J,YAAa8kK,EAAKznK,MAAM2C,YACxB+tB,kBAAmBA,EACnBoiF,kBAAmBA,EACnB6mD,kBAAmBA,EACnB9mC,mBAAoBA,EACpByoC,mBAAoBA,EACpB74J,cAAeglK,EAAKznK,MAAMyC,cAC1Bw4G,cAAewsD,EAAKznK,MAAMi7G,cAC1ButD,YAAaf,EAAKe,YAAY9wJ,KAAK+vJ,GACnCnP,oBAAqBA,EACrBsB,oBAAqBA,EACrBK,oBAAqBA,EACrBlG,eAAgB0T,EAAKznK,MAAM+zJ,eAC3BmR,eAAgBuC,EAAKznK,MAAMklK,eAC3Bv8C,qBAAsBA,EACtB8/C,aAAchB,EAAKgB,aAAa/wJ,KAAK+vJ,GACrCvN,qBAAsBA,EACtBwO,gBAAiBjB,EAAKkB,UAAUjxJ,KAAK+vJ,GACrC3T,aAAc2T,EAAK3T,aAAap8I,KAAK+vJ,GACrClB,aAAckB,EAAKlB,aAAa7uJ,KAAK+vJ,GACrC7+J,gBAAiB6+J,EAAKznK,MAAM4I,gBAC5BggK,cAAenB,EAAKmB,cAAclxJ,KAAK+vJ,GACvCnvJ,cAAemvJ,EAAKnvJ,cAAcZ,KAAK+vJ,GACvCp7J,iBAAkBo7J,EAAKznK,MAAMqM,iBAC7B+tJ,uBAAwBA,EACxB9mF,gBAAiBm0F,EAAKn0F,gBAAgB57D,KAAK+vJ,GAC3C5jC,iBAAkB4jC,EAAK5jC,iBAAiBnsH,KAAK+vJ,GAC7CzN,yBAA0BA,EAC1BztI,oBAAqBk7I,EAAKznK,MAAMusB,oBAChCqpI,kBAAmB6R,EAAK7R,kBAAkBl+I,KAAK+vJ,GAC/Cl3D,0BAA2BA,EAC3Bt5F,0BAA2BA,EAC3BgwH,mBAAoBwgC,EAAKxgC,mBAAmBvvH,KAAK+vJ,GACjD1J,sBAAuB0J,EAAK1J,sBAAsBrmJ,KAAK+vJ,GACvDngE,4BAA6BmgE,EAAKznK,MAAMsnG,mCAQtDnmG,EAAAxI,EAAAC,cAACwvK,GAAA,EAAD,KACEjnK,EAAAxI,EAAAC,cAACkwK,GAAD,CACEx3B,OAAQA,EACR/5H,QAASA,EACTq8I,QAASA,EACT9qJ,QAASA,EACT2wJ,SAAUA,EACVj/J,SAAUA,EACV81B,UAAWA,EACXqmI,YAAaA,EACbt2H,aAAcA,EACdwxE,SAAU41D,EAAKznK,MAAM6xG,SACrB2nD,eAAgBA,EAChB/L,OAAQga,EAAKha,OAAO/1I,KAAK+vJ,GACzB5P,gBAAiBA,EACjBkN,WAAY0C,EAAKznK,MAAM+kK,WACvB/M,iBAAkBA,EAClBxsG,iBAAkBA,EAClBuuG,iBAAkBA,EAClBwO,SAAU,SAAAjpK,GAAOmoK,EAAKc,SAASjpK,IAC/BqD,YAAa8kK,EAAKznK,MAAM2C,YACxB+tB,kBAAmBA,EACnBoiF,kBAAmBA,EACnB6mD,kBAAmBA,EACnB2B,mBAAoBA,EACpB74J,cAAeglK,EAAKznK,MAAMyC,cAC1Bw4G,cAAewsD,EAAKznK,MAAMi7G,cAC1Bq9C,oBAAqBA,EACrBsB,oBAAqBA,EACrB7F,eAAgB0T,EAAKznK,MAAM+zJ,eAC3BmR,eAAgBuC,EAAKznK,MAAMklK,eAC3Bv8C,qBAAsBA,EACtB8/C,aAAchB,EAAKgB,aAAa/wJ,KAAK+vJ,GACrCvN,qBAAsBA,EACtBwO,gBAAiBjB,EAAKkB,UAAUjxJ,KAAK+vJ,GACrC3T,aAAc2T,EAAK3T,aAAap8I,KAAK+vJ,GACrC7+J,gBAAiB6+J,EAAKznK,MAAM4I,gBAC5BggK,cAAenB,EAAKmB,cAAclxJ,KAAK+vJ,GACvCrN,uBAAwBA,EACxBJ,yBAA0BA,EAC1BzpD,0BAA2BA,EAC3B02B,mBAAoBwgC,EAAKxgC,mBAAmBvvH,KAAK+vJ,GACjDngE,4BAA6BmgE,EAAKznK,MAAMsnG,8BAInB,eAArBmgE,EAAKznK,MAAM02E,OACTv1E,EAAAxI,EAAAC,cAACmwK,GAAD,CACEzxJ,KAAMA,EACNxO,QAASA,EACT0wJ,eAAgBA,EAChBI,oBAAqBA,EACrBD,kBAAmBA,EACnBhD,YAAaA,EACbuD,qBAAsBA,EACtB5B,oBAAqBA,EACrBN,iBAAkBA,EAClBgC,yBAA0BA,EAC1BD,iBAAkBA,EAClBK,uBAAwBA,EACxBvC,gBAAiBA,EACjBtnD,0BAA2BA,EAC3B+gC,OAAQA,EACR/5H,QAASA,EACTiC,YAAaA,IAMI,YAArBiuJ,EAAKznK,MAAM02E,OACTv1E,EAAAxI,EAAAC,cAACwvK,GAAA,EAAD,KACEjnK,EAAAxI,EAAAC,cAACwvK,GAAA,EAAD,CAAOY,OAAK,EAAC3qK,KAAK,IAChB40G,OAAQ,SAACx6G,GAAD,OACN0I,EAAAxI,EAAAC,cAACyvK,EAAA,SAAD,CACEC,SAAUZ,GAEVvmK,EAAAxI,EAAAC,cAAC4rK,GAADrsK,OAAAC,OAAA,GACMK,EADN,CAEE6e,KAAMA,EACNC,QAASA,EACTzO,QAASA,EACTtO,SAAUA,EACVgtD,SAAUA,EACVl3B,UAAWA,EACX+P,aAAcA,EACd+kI,WAAYqC,EAAKznK,MAAM1H,MACvBm1J,OAAQga,EAAKha,OAAO/1I,KAAK+vJ,GACzBpC,YAAaoC,EAAKznK,MAAMzF,OACxBi/J,eAAgBA,EAChB7wJ,UAAW8+J,EAAKznK,MAAM2I,UACtB1O,MAAOwtK,EAAKznK,MAAMilK,cAClBsD,SAAU,SAAAjpK,GAAMmoK,EAAKc,SAASjpK,IAC9B+Y,WAAYovJ,EAAKznK,MAAMqY,WACvBwsJ,WAAY4C,EAAKznK,MAAM6kK,WACvBE,WAAY0C,EAAKznK,MAAM+kK,WACvBD,YAAa2C,EAAKznK,MAAM8kK,YACxBniK,YAAa8kK,EAAKznK,MAAM2C,YACxBg3J,kBAAmBA,EACnB7mD,kBAAmBA,EACnB/8E,kBAAmBA,KACnBrF,kBAAmBA,EACnB4qI,mBAAoBA,EACpBp8G,cAAeuoH,EAAKznK,MAAMk/C,cAC1Bz8C,cAAeglK,EAAKznK,MAAMyC,cAC1Bm3J,oBAAqBA,EACrB2L,kBAAmBkC,EAAKlC,kBACxB58C,qBAAsBA,EACtB8/C,aAAchB,EAAKgB,aAAa/wJ,KAAK+vJ,GACrClB,aAAckB,EAAKlB,aAAa7uJ,KAAK+vJ,GACrChC,mBAAoBgC,EAAKhC,mBACzB78J,gBAAiB6+J,EAAKznK,MAAM4I,gBAC5B0P,cAAemvJ,EAAKnvJ,cAAcZ,KAAK+vJ,GACvCwB,kBAAmBxB,EAAKkB,UAAUjxJ,KAAK+vJ,GACvCtC,kBAAmBsC,EAAKznK,MAAMmlK,kBAC9B7xF,gBAAiBm0F,EAAKn0F,gBAAgB57D,KAAK+vJ,GAC3Cl7I,oBAAqBk7I,EAAKznK,MAAMusB,oBAChCqpI,kBAAmB6R,EAAK7R,kBAAkBl+I,KAAK+vJ,GAC/Cl3D,0BAA2BA,EAC3B02B,mBAAoBwgC,EAAKxgC,mBAAmBvvH,KAAK+vJ,GACjDngE,4BAA6BmgE,EAAKznK,MAAMsnG,+BAE1CnmG,EAAAxI,EAAAC,cAAC8yH,GAAA/yH,EAAD,CACEuwK,QAAS,IACTxnK,WAAY,KACZ4wB,SAAU,SACV62I,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1BxqK,MAAO,CAAEmF,WAAY,yBAA0B8C,OAAQ,WACvDguJ,YAAa,CAAE7zJ,QAASzG,EAAW,QAAU,OAAQtB,gBAAiB,UAAW4B,MAAO,QAASwuK,UAAW9uK,EAAW,MAAQ,SAE/H2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,MAAOD,WAAY,CAAC,aAAc,UAAWE,eAAgB,aAAci+H,UAAW,CAAC,QAAS,WAAY74H,MAAOrE,EAAW,CAAE+uK,UAAW,UAAa,MAC3KpoK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOH,QAAS,CAAC,OAAQ,SAAU3G,IAAK,oBAAqBhC,MAAO,OAAQiC,OAAQ,SACpF4G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMxC,GAAI,CAAC,EAAG,GAAI9D,MAAO,YAAaI,SAAU,EAAG4G,UAAW,WAA9D,4RAC2RX,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMud,KAAM,gEAAiEF,OAAQ,SAAUC,IAAI,+BAA+BvgB,WAAY,QAA9I,iBAD3R,+LASVgD,EAAAxI,EAAAC,cAACwvK,GAAA,EAAD,CAAOY,OAAK,EAAC3qK,KAAK,qBAChB8C,EAAAxI,EAAAC,cAAC4wK,EAAD,OAEFroK,EAAAxI,EAAAC,cAACwvK,GAAA,EAAD,KACEjnK,EAAAxI,EAAAC,cAAC6wK,GAAD,UAOZtoK,EAAAxI,EAAAC,cAAC8wK,GAAD,CACEvvK,aAAcA,EACdwO,UAAW8+J,EAAKznK,MAAM2I,4BAhmClCtN,aClBEsuK,QACW,cAA7BxsJ,OAAOmV,SAASs3I,UAEe,UAA7BzsJ,OAAOmV,SAASs3I,UAEhBzsJ,OAAOmV,SAASs3I,SAAS78H,MACvB,2DCX2B,cAA7B5vB,OAAOmV,SAASs3I,UAClB1K,IAAY,CACV2K,IAAK,6DACLC,WAFU,SAECxzC,EAAOyzC,GAChB,IAAI1hJ,EAASiuG,EACPrgH,EAAQ8zJ,EAAKC,kBAMnB,OALI/zJ,GAASA,EAAM8R,SACb9R,EAAM8R,QAAQglB,MAAM,iDACtB1kB,GAAS,GAGNA,KAKb4hJ,IAASh3D,OAAO9xG,EAAAxI,EAAAC,cAACsxK,GAAD,MAASxjJ,SAASC,eAAe,SD0G3C,kBAAmBoiI,WACrBA,UAAUohB,cAAcC,MAAMz9C,KAAK,SAAA09C,GACjCA,EAAaC,+OEiJJC,6MA3QbvqK,MAAQ,CACNlB,SAAS,GACTa,SAAS,IACT+3H,UAAU,IACVlwH,UAAS,EACTgjK,cAAc,CACZpgK,OAAO,KACPqgK,OAAO,KACPzgC,QAAQ,SAIZ0gC,UAAY,SAAC3gK,EAAOpG,GAClBjG,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BoqK,cAAcryK,OAAA+4B,EAAA,EAAA/4B,CAAA,GACTiI,EAAUoqK,cADFryK,OAAA2zI,EAAA,EAAA3zI,CAAA,GAEV4R,EAAQpG,UAKfgnK,aAAe,WAAiB,IAAhBC,IAAgBz/J,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,KAAAA,UAAA,GACS,oBAA5BzN,EAAKjF,MAAMkyK,cACpBjtK,EAAKjF,MAAMkyK,aAAajtK,EAAKsC,MAAMwqK,eAEjCI,GACFltK,EAAKmtK,kBAITC,YAAc,SAAC/gK,GACbrM,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BoqK,cAAcryK,OAAA+4B,EAAA,EAAA/4B,CAAA,GACTiI,EAAUoqK,cADFryK,OAAA2zI,EAAA,EAAA3zI,CAAA,GAEV4R,EAAQ,SAEV,WACDrM,EAAKitK,cAAa,QAItBI,aAAe,WAAiB,IAAhBH,IAAgBz/J,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,KAAAA,UAAA,GAC9BzN,EAAK8C,SAAS,CACZgqK,cAAc,CACZpgK,OAAO,KACPqgK,OAAO,KACPzgC,QAAQ,OAEV,WACuC,oBAA5BtsI,EAAKjF,MAAMsyK,cACpBrtK,EAAKjF,MAAMsyK,eAETH,GACFltK,EAAKmtK,oBAKXA,aAAe,WACbntK,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BoH,UAAWpH,EAAUoH,qFAIhB,IAAA7L,EAAAnD,KACP,OACE2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE2F,GAAI,EACJ1B,IAAK,EACL/M,MAAO,EACPwO,OAAQ,EACRtN,cAAe,SACfD,WAAY,aACZE,eAAgB,SAChBoN,SAAU,CAAC,WAAW,aAEtB1F,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHD,MAAM,CAAC,EAAGE,KAAKwH,MAAMwH,SAAWhP,KAAKwH,MAAMlB,SAAWtG,KAAKwH,MAAML,UACjEd,MAAM,CACJmsK,WAAW,2BAGflyK,eAAiBN,KAAKwH,MAAMwH,SAC5BvO,YAAeT,KAAKwH,MAAMwH,SAA+B,KAApBhP,KAAKqyK,cAE1C1pK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuG,MAAO,CACL6I,OAAO,WAETnO,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB2E,QAAU5F,KAAKwH,MAAMwH,SAAWhP,KAAKqyK,aAAe,MAEpD1pK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,IACZH,MAAO,aAHT,WAOAqG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEtG,MAAO,YACPD,KAAOrC,KAAKC,MAAM+B,SAAW,QAAU,QACvCG,KAAOnC,KAAKwH,MAAMwH,SAAW,QAAU,UAG3CrG,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,SACfqF,MAAO,CACLE,SAAS,SACTisK,WAAW,8BACXtzC,UAAUl/H,KAAKwH,MAAMwH,SAAWhP,KAAKwH,MAAM03H,UAAY,IAGzDv2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJxJ,GAAI,EACJC,MAAO,EACPkB,cAAe,MACf+qH,UAAS,aAAAplH,OAAelF,IAAMC,OAAOkF,UAGnCjH,OAAOoE,KAAK/D,KAAKC,MAAMwyK,SAAS3sK,IAAI,SAAC4sK,GACnC,IAAMC,EAAexvK,EAAKlD,MAAMwyK,QAAQC,GACxC,OACE/pK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,SACf6F,IAAG,UAAAF,OAAY+rK,GACfrsK,MAAO,CACLokH,UAAU,IACVzqG,KAAK,YAGPrX,EAAAxI,EAAAC,cAACwyK,EAAA,EAAD,CACEr0D,GAAI,EACJ97G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAENowK,EAAeh9J,eAGhB/V,OAAOoE,KAAK4uK,GAAc7sK,IAAI,SAAC+sK,GAC7B,IAAMC,EAAcH,EAAaE,GAC3BE,EAAY5vK,EAAKqE,MAAMwqK,cAAcU,KAAkBG,EAC7D,OACElqK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9H,GAAI,EACJ4B,SAAU,CAAC,EAAE,GACbuL,MAAO6kK,EACP/vD,QAASgwD,EACTlqK,UAAWC,IAAOgmB,SAClBjoB,IAAG,UAAAF,OAAY+rK,EAAZ,KAAA/rK,OAA8BksK,GACjCj2J,SAAW,SAAA9V,GAAC,OAAI3D,EAAK+uK,UAAUQ,EAAeG,YAUhElqK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE5H,cAAe,OAEf2H,EAAAxI,EAAAC,cAACwI,EAAA,EAAOzC,KAAR,CACE1D,WAAY,EACZC,SAAU,CAAC,EAAE,GACbuE,UAAW,YACXrB,QAAS5F,KAAKmyK,cAJhB,iBAQAxpK,EAAAxI,EAAAC,cAACwI,EAAA,EAAOzC,KAAR,CACET,GAAI,EACJjD,WAAY,EACZC,SAAU,CAAC,EAAE,GACbuE,UAAW,YACXrB,QAAS5F,KAAKuyK,cALhB,aAaHvyK,KAAKwH,MAAMwH,UAAYhP,KAAKC,MAAM+xK,eAAiBryK,OAAO2R,OAAOtR,KAAKC,MAAM+xK,eAAezgK,OAAQ,SAAAtG,GAAC,OAAW,OAANA,IAAcjH,OAAO,GAC7H2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,EACJvJ,MAAO,EACPkB,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BE,eAAgB,CAAC,WAAW,eAG1BtB,OAAOoE,KAAK/D,KAAKC,MAAM+xK,eAAelsK,IAAI,SAACktK,GACzC,IAAMH,EAAc1vK,EAAKlD,MAAM+xK,cAAcgB,GAC7C,GAAoB,OAAhBH,EAAqB,CACvB,IAAMC,EAAc3vK,EAAKlD,MAAMwyK,QAAQO,GAAYH,GACnD,OACElqK,EAAAxI,EAAAC,cAAC02G,EAAA,EAAD,CACEp3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHwO,GAAG,CAAC,EAAE,GACNlN,GAAG,CAAC,EAAE,GACNvB,MAAM,CAAC,EAAEqD,EAAKqE,MAAML,WAEtB7G,eAAe,EACfuG,IAAG,UAAAF,OAAYqsK,IAEfrqK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuG,MAAO,CACL6I,OAAO,WAETnO,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB2E,QAAS,SAAAkB,GAAC,OAAI3D,EAAKmvK,YAAYU,KAE/BrqK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,IACZH,MAAO,WACP+D,MAAO,CACL+8G,cAAc,eAGf0vD,GAEHnqK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,QACNG,MAAO,WACPD,KAAOc,EAAKlD,MAAM+B,SAAW,QAAU,YAMjD,OAAO,OAGX2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACP3G,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,GACbH,MAAO,YACPqD,WAAY,YACZ2D,UAAW,CAAC,SAAS,QACrB1D,QAAU,SAAAkB,GAAC,OAAI3D,EAAKovK,cAAa,KAPnC,8BA3PuB1vK,aCG/BitH,6MAEJtoH,MAAQ,CACNolD,KAAK,EACLqmH,QAAQ,GACRC,WAAW,EACX11J,SAAQ,EACR21J,SAAS,KACTC,WAAW,KACXpB,cAAc,CACZpgK,OAAO,KACPqgK,OAAO,KACPzgC,QAAQ,MAEVihC,QAAQ,CACNjhC,QAAQ,CACN7mH,QAAQ,UACR9oB,OAAO,SACP6pB,KAAK,OACLK,QAAQ,UACRnB,QAAQ,UACRe,KAAK,UACLE,QAAQ,WACRK,SAAS,YAMXta,OAAO,CACLya,UAAU,YACVC,QAAQ,UACRC,OAAO,UAET0lJ,OAAO,IAEToB,YAAY,KACZ3wI,aAAa,KACb60B,gBAAgB,QAIlBx0D,cAAgB,OAmChBovK,aAAe,SAAAH,GACb9sK,EAAK8C,SAAS,CACZgqK,iBACA,WACA9sK,EAAKq3C,kBAITg2H,aAAe,WACbrtK,EAAK8C,SAAS,CACZgqK,cAAc,CACZpgK,OAAO,KACPqgK,OAAO,KACPzgC,QAAQ,OAEV,WACAtsI,EAAKq3C,kBAmGTA,WAAa,WAAe,IAAdqQ,EAAcj6C,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAEjBi6C,EAAOA,GAAc1nD,EAAKsC,MAAMolD,KAEhC,IAAMmjE,EAAmBpwH,OAAOoE,KAAKmB,EAAKsC,MAAMirK,QAAQjhC,SAAS1rI,IAAK,SAAA6L,GAAM,OAAKA,EAAOpE,gBAGlF+lK,EAAa3zK,OAAO2R,OAAOpM,EAAKsC,MAAMyrK,SACvB1hK,OAAO,SAAAC,GAAE,QAAO/D,WAAW+D,EAAGrG,SAC9BoG,OAAO,SAAAC,GAAE,OAC6B,OAApCtM,EAAKsC,MAAMwqK,cAAcpgK,QAAoBJ,EAAGI,QAAUJ,EAAGI,OAAOrE,gBAAkBrI,EAAKsC,MAAMwqK,cAAcpgK,OAAOrE,iBAClF,OAApCrI,EAAKsC,MAAMwqK,cAAcC,QAAoBzgK,EAAGC,OAASD,EAAGC,MAAMlE,gBAAkBrI,EAAKsC,MAAMwqK,cAAcC,OAAO1kK,gBACnHiE,EAAGG,QAAUo+G,EAAiBt7F,SAASjjB,EAAGG,OAAOpE,iBAAwD,OAArCrI,EAAKsC,MAAMwqK,cAAcxgC,SAAqBhgI,EAAGG,OAAOpE,gBAAkBrI,EAAKsC,MAAMwqK,cAAcxgC,QAAQjkI,iBAElL4/B,KAAK,SAAChtC,EAAEs5B,GAAH,OAAUt5B,EAAE6R,UAAYynB,EAAEznB,WAAc,EAAI,IAGhEmhK,EAAWG,EAAWtvK,OACtBovK,EAAavhK,KAAKwF,KAAK87J,EAASjuK,EAAKsC,MAAM0rK,YAE3CxwI,EAAe,GAIrB4wI,EAAWrvK,QAAQ,SAACuN,EAAIrE,GACtB,IAAMlD,EAAgBuH,EAAGC,MACnBtH,EAAcjF,EAAKjF,MAAMmQ,iBAAmBlL,EAAKjF,MAAMmQ,gBAAgBnG,GAAiB/E,EAAKjF,MAAMmQ,gBAAgBnG,GAAiB/E,EAAKnC,cAAc0S,gBAAgB,CAAC,QAAQ,SAASxL,EAAcyL,gBACvM/R,EAAWkO,KAAKC,IAAI3H,EAAYxG,SAAS,GAEzC2S,EAAO,IAAIxD,KAAkB,IAAbtB,EAAGQ,WACnBL,EAASH,EAAGG,OAASH,EAAGG,OAASzM,EAAKnC,cAAco3B,YAAY3oB,EAAGrH,GAEnEopK,EAAc9lK,WAAW+D,EAAGS,aAE5Bme,EAASmjJ,EAAeruK,EAAKjF,MAAM+B,SAAWuxK,EAAY5lK,QAAQ,GAAK4lK,EAAY5lK,QAAQhK,GAAa,IACxGkS,EAAa3Q,EAAKnC,cAAc8P,YAAYyD,GAGlD9E,EAAGG,OAASA,EACZH,EAAG4e,OAASA,EACZ5e,EAAGqE,WAAaA,EAChBrE,EAAGI,OAASJ,EAAGI,OAASJ,EAAGI,OAAS,YAEhCzE,IAAKy/C,EAAK,GAAG1nD,EAAKsC,MAAM0rK,YAAe/lK,GAAIy/C,EAAK,GAAG1nD,EAAKsC,MAAM0rK,WAAYhuK,EAAKsC,MAAM0rK,YACvFxwI,EAAa90B,KAAK4D,KAQtBtM,EAAK8C,SAAS,CACZwV,SAHc,EAId21J,WACAC,aACA1wI,6FA3ME1iC,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,wCAIvC6G,GACHA,GACFA,EAAEgI,iBAEJ,IAAM89C,EAAO/6C,KAAKqE,IAAI,EAAElW,KAAKwH,MAAMolD,KAAK,GACxC5sD,KAAKgI,SAAS,CACZ4kD,0CAIK9lD,GACHA,GACFA,EAAEgI,iBAEJ,IAAM89C,EAAO/6C,KAAKC,IAAI9R,KAAKwH,MAAM4rK,WAAWpzK,KAAKwH,MAAMolD,KAAK,GAAG5sD,KAAKu8C,WAAWqQ,GAC/E5sD,KAAKgI,SAAS,CACZ4kD,6JAKF5sD,KAAKkD,YACLlD,KAAKwzK,+LAuBkB7rK,EAAWC,mFAClC5H,KAAKkD,YACCurH,EAAsB5+G,KAAKC,UAAUnI,EAAUhG,gBAAkBkO,KAAKC,UAAU9P,KAAKC,MAAM0B,gBAC5EkO,KAAKC,UAAUnI,EAAUoI,iBAAmBF,KAAKC,UAAU9P,KAAKC,MAAM8P,kBAEvE0+G,yBAClBzuH,KAAKgI,SAAS,CACZ4kD,KAAK,EACLqmH,QAAQ,IACR,WACA9vK,EAAKqwK,+BAEA,UAEW5rK,EAAUglD,OAAS5sD,KAAKwH,MAAMolD,MAEhD5sD,KAAKu8C,0LAIK03D,8IAAqB,SAC5Bj0G,KAAKC,MAAMqQ,kDACP,aAGT2jG,EAAQA,GAAgB,EAExBj0G,KAAKgI,SAAS,CACZwV,SAAQ,IAGJ+5B,EAAmBv3C,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,qBAGnEw9J,iBAAcjzK,KAAKwH,MAAMyrK,SACzB17G,EAAkB1lD,KAAKqE,IAAIqhC,EAAiBv3C,KAAKwH,MAAM+vD,kBAEvDxnD,EAAgB/P,KAAKC,MAAM8P,gBACRA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAK/D,KAAKC,MAAMmQ,kBAGnC6hK,iBAAajyK,KAAKwH,MAAMirK,QAAQR,QAEtCliK,EAAc9L,QAAQ,SAACwN,GACrBwgK,EAAOxgK,GAASA,IAGd+/H,EAAUxxI,KAAKC,MAAM8vH,kBAAXpwH,OAAA+4B,EAAA,EAAA/4B,CAAA,GAAmCK,KAAKwH,MAAMirK,QAAQjhC,UAE9DiiC,EAAsD,qBAA9BzzK,KAAKC,MAAMwzK,eAAiCzzK,KAAKC,MAAMwzK,eAAiB,IAEnFzvK,SACjBwtI,EAAU,GACViiC,EAAexvK,QAAS,SAAA0N,GACtB6/H,EAAQ7/H,EAAOpE,eAAiBoE,UAIf3R,KAAKC,MAAMksH,wDAA0BnsH,KAAK+C,cAAcsN,gBAAgBrQ,KAAKC,MAAMqQ,QAAQinD,EAAgB,SAASxnD,sCAAnIQ,SAKcA,EAAavM,QAC/BuM,EAAatM,QAAQ,SAACuN,GAChBA,EAAGs8B,QACLmlI,EAAQzhK,EAAGs8B,SAAWt8B,EAEtByhK,EAAO,IAAAtsK,OAAK6K,EAAGQ,YAAeR,KAK9B4D,EAASzV,OAAO2R,OAAO2hK,GAASt+J,QAGxBS,EAAOmO,eAAiBvjB,KAAKwH,MAAM+vD,iBAAmBniD,EAAOmO,YAAYvjB,KAAKwH,MAAM+vD,mBAChGA,EAAkBxlD,SAASqD,EAAOmO,aAAa,qBAG1CvjB,KAAKgI,SAAU,SAAAJ,GAAS,MAAK,CAClCqrK,UACAz1J,SAAQ,EACR+5C,kBACAk7G,QAAQ9yK,OAAA+4B,EAAA,EAAA/4B,CAAA,GACHiI,EAAU6qK,QADR,CAELR,SACAzgC,cAEA,WACF1mI,EAAKyxC,qJAgEA,IAAA0gE,EAAAj9G,KAED0zK,EAAmB/zK,OAAO2R,OAAOtR,KAAKwH,MAAMwqK,eAAezgK,OAAQ,SAAAtG,GAAC,OAAW,OAANA,IAAcjH,OAAO,EAG9F0+B,EAAe1iC,KAAKwH,MAAMk7B,aAAe/iC,OAAO2R,OAAOtR,KAAKwH,MAAMk7B,cAAgB,KAExF,OACE/5B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,SAAUlB,MAAO,EAAG6zK,EAAG,UAExC3zK,KAAKwH,MAAMgW,QACT7U,EAAAxI,EAAAC,cAACunH,EAAA,EAAD,CACE7jH,UAAW,CACT9C,cAAc,MACdytB,UAAUzuB,KAAKC,MAAM8B,QAEvB6jB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,4BAGR+F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPuO,SAAU,WACVrN,cAAe,SACfoE,GAAI,8BACJ0c,GAAI,CAAC,EAAG4xJ,EAAmB,QAAU,IAErC/qK,EAAAxI,EAAAC,cAACwzK,EAADj0K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwyK,QAASzyK,KAAKwH,MAAMirK,QACpBT,cAAehyK,KAAKwH,MAAMwqK,cAC1BO,aAAcvyK,KAAKuyK,aAAarzJ,KAAKlf,MACrCmyK,aAAcnyK,KAAKmyK,aAAajzJ,KAAKlf,SAGrC0iC,GAAgBA,EAAa1+B,OAC3B2E,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE9I,MAAO,EACPkB,cAAe,UAEf2H,EAAAxI,EAAAC,cAACk+G,EAAA,EAAD,CACE/F,KAAMv4G,KAAKC,MAAMs4G,KACjBv2G,SAAUhC,KAAKC,MAAM+B,WAEvB2G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACExD,GAAI,oBACJpE,cAAe,UAGb0hC,EAAa58B,IAAK,SAAC0L,EAAGzL,GACpB,IAAMwX,EAAS/L,EAAG3J,KACZgsK,EAAYriK,EAAGs8B,QAKrB,OACEnlC,EAAAxI,EAAAC,cAAC43G,EAAA,EAADr4G,OAAAC,OAAA,GACMq9G,EAAKh9G,MADX,CAEEo4G,SAAU,CACR/3G,eAAc,GAEhBuH,KAAM0V,EACNyD,YAAaxP,EACb3K,IAAG,MAAAF,OAAQZ,GACXtF,YAbgB,SAACqG,GACnB,OAAQyW,EAASoH,OAAOo3D,KAAKkhC,EAAKl6G,cAAcqjB,2BAA2B7I,IAAW,MAapF+6F,MAAK,UAAA3xG,OAAYktK,GACjBz7D,OAAM,WAAAzxG,OAAaktK,GACnB37D,eAAgBzoF,UAM1B9mB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACE7G,OAAQ,OACRhB,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChBmE,GAAI,gCAEJuD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMvH,GAAI,GACRsH,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMvH,GAAI,EAAGuE,QAAU,SAAAkB,GAAC,OAAIm2G,EAAK62D,SAAShtK,KACxC6B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,oBACNE,KAAM,MACNC,MAAQtC,KAAKwH,MAAMolD,KAAK,EAAI,cAAgB,mBAGhDjkD,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMhD,QAAU,SAAAkB,GAAC,OAAIm2G,EAAK82D,SAASjtK,KACjC6B,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEzG,KAAM,qBACNE,KAAM,MACNC,MAAQtC,KAAKwH,MAAMolD,KAAK5sD,KAAKwH,MAAM4rK,WAAa,cAAgB,oBAItEzqK,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM7H,WAAY,UAChB4H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACElG,SAAU,EACVD,WAAY,EACZH,MAAO,YAHT,QAKQtC,KAAKwH,MAAMolD,KALnB,OAK6B5sD,KAAKwH,MAAM4rK,eAM9CzqK,EAAAxI,EAAAC,cAACwI,EAAA,EAAQulH,GAAT,CAAY7kH,UAAW,SAAUqC,WAAY,YAAalJ,WAAY,EAAGC,SAAU,CAAC,GAAIJ,MAAO,aAA/F,sCA9WaO,aA2XhBitH,4OC1XT6b,6MAEJnkI,MAAQ,CACN+yD,MAAM,EACN/8C,SAAQ,EACR7L,OAAO,UACP2L,WAAW,CACT+jG,QAAQ,CACN9jG,OAAO,KACPC,SAAQ,GAEVoN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,GAEV3b,OAAO,CACL0b,OAAO,KACPC,SAAQ,IAGZsgG,WAAW,GACX+rB,WAAU,EACVmqC,aAAa,KACbC,cAAc,KACdC,eAAc,EACdxzD,gBAAe,EACfz/E,iBAAiB,KACjB2/E,oBAAoB,GACpBjqD,mBAAmB,KACnBw9G,sBAAqB,EACrB9yB,yBAAwB,EACxBzqF,yBAAyB,KACzByzE,0BAA0B,QAI5BtnI,cAAgB,OAUhBk3H,UAAY,SAACtoH,GACI,OAAXA,GACFzM,EAAK8C,SAAS,CACZ2J,cAKNyiK,oBAAsB,SAACF,GACrBhvK,EAAK8C,SAAS,CACZksK,kBAG4C,oBAAnChvK,EAAKjF,MAAMm0K,qBACpBlvK,EAAKjF,MAAMm0K,oBAAoBF,MAInCrzD,iBAAmB,SAAC/5G,GAClB,IAAK5B,EAAKsC,MAAMmK,OACd,OAAO,EAET,IAAMye,EAAStpB,EAAEmf,OAAO9a,MAAMnH,SAAWV,MAAMwD,EAAEmf,OAAO9a,OAASjG,EAAKnC,cAAc2O,MAAM5K,EAAEmf,OAAO9a,OAASjG,EAAKnC,cAAc2O,MAAM,GAErIxM,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5Bg5G,oBAAoBjhH,OAAA00K,EAAA,EAAA10K,CAAA,GACfiI,EAAUg5G,oBADIjhH,OAAA20K,EAAA,EAAA30K,CAAA,GAEhBuF,EAAKsC,MAAMmK,OAAS,OAEvBmsG,WAAWn+G,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAUk2G,WADLn+G,OAAA20K,EAAA,EAAA30K,CAAA,GAEPuF,EAAKsC,MAAMmK,OAASye,UAK3BgxF,oBAAsB,WAAiB,IAAhBhxF,EAAgBzd,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAKzN,EAAKsC,MAAMmK,OACd,OAAO,EAEJye,IACHA,EAASlrB,EAAKsC,MAAMs2G,WAAW54G,EAAKsC,MAAMmK,SAE5C,IAAI+uG,GAAiB,EACrB,GAAItwF,EAEF,OADAswF,EAAiBtwF,EAAOuC,IAAI,GACpBztB,EAAKsC,MAAMmK,QACjB,IAAK,UACL,IAAK,SACH+uG,EAAiBA,GAAkBtwF,EAAO9a,GAAGpQ,EAAKsC,MAAMysK,eAM9D/uK,EAAK8C,SAAS,CACZ04G,sBAIJM,cAAgB,WACd,IAAK97G,EAAKsC,MAAMmK,QAAgE,OAAtDzM,EAAKsC,MAAMo5G,oBAAoB17G,EAAKsC,MAAMmK,QAClE,OAAO,EAGT,IAAIye,EAAS,KACP6wF,EAAqB/7G,EAAKnC,cAAc2O,MAAMxM,EAAKsC,MAAMo5G,oBAAoB17G,EAAKsC,MAAMmK,SAAS6R,IAAI,KAE3G,OAAOte,EAAKsC,MAAMmK,QAChB,IAAK,UACL,IAAK,SACHye,EAASlrB,EAAKsC,MAAMysK,cAAgB/uK,EAAKnC,cAAc2O,MAAMxM,EAAKsC,MAAMysK,eAAevmK,MAAMuzG,GAAsB,KAMvH/7G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5Bk2G,WAAWn+G,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAUk2G,WADLn+G,OAAA20K,EAAA,EAAA30K,CAAA,GAEPuF,EAAKsC,MAAMmK,OAASye,UAK3B+wF,uBAAyB,SAAC7gG,GACxB,IAAKpb,EAAKsC,MAAMmK,OACd,OAAO,EAETzM,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5Bg5G,oBAAoBjhH,OAAA00K,EAAA,EAAA10K,CAAA,GACfiI,EAAUg5G,oBADIjhH,OAAA20K,EAAA,EAAA30K,CAAA,GAEhBuF,EAAKsC,MAAMmK,OAAS2O,UAK3Bi0J,mCAAgB,SAAA5zJ,IAAA,IAAAm9F,EAAAtgG,EAAAq5C,EAAA29G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAh0J,EAAAzgB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,UAERysG,EAAa54G,EAAKsC,MAAMs2G,WAAW54G,EAAKsC,MAAMmK,SAEhDzM,EAAKsC,MAAMk5G,gBAAmB5C,IAAc54G,EAAKnC,cAAc2O,MAAMosG,GAAYnrF,IAAI,GAJ3E,CAAA9R,EAAAxP,KAAA,eAAAwP,EAAAe,OAAA,UAKL,GALK,OAQRpE,GAAU,EARFqD,EAAA6R,GAUNxtB,EAAKsC,MAAMmK,OAVLkP,EAAAxP,KAWP,WAXOwP,EAAA6R,GAAA,qBAaLxtB,EAAKjF,MAAMkK,YAAYmwB,WAAcp1B,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,YAbjE,CAAA5kC,EAAAxP,KAAA,eAAAwP,EAAAe,OAAA,UAcD,GAdC,cAiBJi1C,EAAkB3xD,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,YAAYtjD,KAE/DqyK,EAAoBtvK,EAAKnC,cAAcwxD,qBAAqBupD,EAAW,KAGtD,EACD,KAUhB42D,GADAD,EAAgG,IAClDzwK,SAAyD,IAA/CywK,EAA6Bl4J,QAAQ,KAAcrX,EAAKnC,cAAc2O,MAAM,MAAWxM,EAAKnC,cAAc2O,MAAM,KAExKijK,EAAiB,SAACnjK,EAAGiM,GACzB,IAAMulC,EAA4B,YAAdxxC,EAAGI,OAGjB8L,EAAY,CAChBC,cAAa,aACbG,YAAa5Y,EAAKjF,MAAMgK,cACxB2T,WAAYpM,EAAGI,OACfkwG,WAAY/vG,SAAS+rG,IAGnBrgG,IACFC,EAAUE,WAAa1Y,EAAKnC,cAAcib,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAU9L,SACrB1M,EAAKnC,cAAckb,yBAAyBP,GAG9CxY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAU0V,WADL3d,OAAA20K,EAAA,EAAA30K,CAAA,GAEPuF,EAAKsC,MAAMmK,OAAQ,CAClB4L,OAAO,KACPC,SAAQ,QAKVwlC,GACF99C,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5Bk2G,WAAWn+G,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAUk2G,WADLn+G,OAAA20K,EAAA,EAAA30K,CAAA,GAEPuF,EAAKsC,MAAMmK,OAASzM,EAAKnC,cAAc2O,MAAM,SAMhDkjK,EAAwB,SAACpjK,GAC7B,IAAM+L,EAAS/L,EAAG2M,gBAClBjZ,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAU0V,WADL3d,OAAA20K,EAAA,EAAA30K,CAAA,GAEPuF,EAAKsC,MAAMmK,OAFJhS,OAAA00K,EAAA,EAAA10K,CAAA,GAGHiI,EAAU0V,WAAWpY,EAAKsC,MAAMmK,QAH7B,CAIN4L,iBAMRrY,EAAKjF,MAAMwe,0BAA0Bo4C,EAAiB,kBAAmB,CACvE29G,GAnEqB,EAmEcC,GAClC,KAAME,EAAgBC,EAAuBF,GA1FtC7zJ,EAAAe,OAAA,2BAAAf,EAAAe,OAAA,oBAgGd1c,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAU0V,WADL3d,OAAA20K,EAAA,EAAA30K,CAAA,GAEPuF,EAAKsC,MAAMmK,OAFJhS,OAAA00K,EAAA,EAAA10K,CAAA,GAGHiI,EAAU0V,WAAWpY,EAAKsC,MAAMmK,QAH7B,CAIN6L,iBArGQ,yBAAAqD,EAAArO,SAAAmO,EAAA3gB,WAoJhB60K,8BAAgC,SAACxzB,GAC/Bn8I,EAAK8C,SAAS,CACZq5I,+BAIJyzB,oDAAiC,SAAA1zJ,IAAA,IAAAszE,EAAAqgF,EAAAl+G,EAAA6pE,EAAA,OAAA9/G,EAAAzgB,EAAA+Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,WAC3BnM,EAAKjF,MAAMkK,YAAYmwB,YAAap1B,EAAKjF,MAAMkK,YAAYmwB,UAAUC,kBAD1C,CAAAhZ,EAAAlQ,KAAA,YAEvBqjF,EAAwBxvF,EAAKjF,MAAMkK,YAAYmwB,UAAUC,kBACzDw6I,EAAwBrgF,EAAsBvyF,MAC1B+C,EAAKnC,cAAc20B,kBAAkBq9I,GAJlC,CAAAxzJ,EAAAlQ,KAAA,gBAMrBwlD,EAAkB3xD,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,YAAYtjD,KAN1Cof,EAAAlQ,KAAA,EAOCnM,EAAKnC,cAAc0hE,mBAAmB5N,EAAgB69B,EAAsBpnF,QAAQpI,EAAKjF,MAAMqQ,SAPhG,cAOrBowH,EAPqBn/G,EAAAnN,KAAAmN,EAAAK,OAAA,SAQpB8+G,GARoB,eAAAn/G,EAAAK,OAAA,UAWxB,GAXwB,yBAAAL,EAAA/O,SAAA4O,EAAAphB,WAcjCohC,oCAAiB,SAAArwB,IAAA,IAAAyM,EAAAyjB,EAAA+yI,EAAAgB,EAAAp+G,EAAAyzE,EAAAh/B,EAAA4oE,EAAAt9G,EAAAshB,EAAAg9F,EAAAC,EAAAr+G,EAAApR,EAAAlrB,EAAA4D,EAAAC,EAAAyrG,EAAA/hI,EAAAqtK,EAAA,OAAAv0J,EAAAzgB,EAAA+Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEVnM,EAAKjF,MAAMkK,aAAgBjF,EAAKjF,MAAMqQ,QAF5B,CAAAa,EAAAE,KAAA,eAAAF,EAAAyQ,OAAA,UAGN,GAHM,UAMXpE,GAAU,EACdtY,EAAK8C,SAAS,CACZwV,UACAF,WAAW,CACT+jG,QAAQ,CACN9jG,OAAO,KACPC,SAAQ,GAEVoN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,GAEV3b,OAAO,CACL0b,OAAO,KACPC,SAAQ,MAKVyjB,GAAmB,EACnB+yI,EAAe,aACfgB,EAAyB,KACzBp+G,EAA2B,KAC3ByzE,GAA4B,EAC5Bh/B,EAAgBnmG,EAAKnC,cAAc2O,MAAM,GACzCuiK,EAAgB/uK,EAAKnC,cAAc2O,MAAM,GACzCilD,EAAqBzxD,EAAKnC,cAAc2O,MAAM,GAC5CumE,OAA6CvpD,IAA7BxpB,EAAKjF,MAAMg4E,eAA8B/yE,EAAKjF,MAAMg4E,eAGtE/yE,EAAKjF,MAAMkK,YAAYmwB,YAAap1B,EAAKjF,MAAMkK,YAAYmwB,UAAUjI,QApC1D,CAAAlhB,EAAAE,KAAA,YAqCP4jK,EAAkB/vK,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,YACnDyvH,EAAiBD,EAAgBntI,IACjC+uB,EAAkBo+G,EAAgB9yK,MACpCsjD,EAAcvgD,EAAKnC,cAAc20B,kBAAkBm/B,MAGnCq+G,EA3CP,CAAA/jK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4CSnM,EAAKjF,MAAM4nC,aAAagvB,EAAgBo+G,EAAgB3nK,QAAQ4nK,GA5CzE,QA4CXzvH,EA5CWt0C,EAAAiD,KAAA,YA+CTmmB,EAAoBr1B,EAAKnC,cAAc20B,kBAAkBxyB,EAAKjF,MAAMkK,YAAYmwB,UAAUC,kBAAkBp4B,SAEtF+C,EAAKjF,MAAMkK,YAAYmwB,UAAUC,kBAAkBuN,IAjDhE,CAAA32B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkDenM,EAAKjF,MAAM4nC,aAAa3iC,EAAKjF,MAAMkK,YAAYmwB,UAAUC,kBAAkBp4B,KAAK+C,EAAKjF,MAAMkK,YAAYmwB,UAAUC,kBAAkBjtB,QAAQpI,EAAKjF,MAAMkK,YAAYmwB,UAAUC,kBAAkBuN,KAlD7M,QAkDXvN,EAlDWppB,EAAAiD,KAAA,YAqDTqxC,IAAelrB,EArDN,CAAAppB,EAAAE,KAAA,gBAuDX2iK,EAAe9uK,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,YAAYh0C,MAvDjDN,EAAAE,KAAA,GA8DD4P,QAAQqD,IAAI,CAEpBpf,EAAKnC,cAAciwD,iBAAiB6D,GAEpC3xD,EAAK4vK,iCAEL5vK,EAAKnC,cAAcu8B,mBAAmBu3B,EAAgB3xD,EAAKjF,MAAMqQ,SAEhE2nE,EAAgB/yE,EAAKnC,cAAcuuB,oBAAoBulC,EAAgB,cAAgB,OAtE/E,QAAA14B,EAAAhtB,EAAAiD,KAAAgqB,EAAAz+B,OAAA4kB,EAAA,EAAA5kB,CAAAw+B,EAAA,GA0DTy4B,EA1DSx4B,EAAA,GA2DTisG,EA3DSjsG,EAAA,GA4DTu4B,EA5DSv4B,EAAA,GA6DTitE,EA7DSjtE,EAAA,GA2EPu4B,IAEFs9G,EAAgB/uK,EAAKnC,cAAcmS,iBAAiByhD,EAAmBC,GACnEy0C,IACFA,EAAgBnmG,EAAKnC,cAAcmS,iBAAiBm2F,EAAcnmG,EAAKjF,MAAMkK,YAAYxG,UACzFqxK,EAAyB9vK,EAAKnC,cAAc2O,MAAMuiK,GAAevmK,MAAMxI,EAAKnC,cAAc2O,MAAM25F,KAGlGpqE,EAAmB/7B,EAAKnC,cAAc2O,MAAMilD,GAAoBrhD,GAAG,IAnF1D,WAwFfkI,GAAU,EAGJqsH,EAAY3kI,EAAKjF,MAAM4pI,UAEvB/hI,EAAW,CACf0V,UACAqsH,YACAmqC,eACAC,gBACAhzI,mBACA01B,qBACAq+G,yBACAp+G,2BACAyzE,8BAGEnlI,EAAKjF,MAAM8jJ,SAzGA,CAAA5yI,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0GgBnM,EAAKnC,cAAc43D,oBAAoBz1D,EAAKjF,MAAMqQ,SA1GlE,SA0GP6kK,EA1GOhkK,EAAAiD,QA2GU+gK,EAAe3yG,UACpC16D,EAASqsK,sBAAuB,GA5GrB,cAgHoC,oBAAxCjvK,EAAKjF,MAAMqqI,0BACpBplI,EAAKjF,MAAMqqI,yBAAyBrpG,GAjHvB9vB,EAAAyQ,OAAA,SAuHR1c,EAAK8C,SAASF,IAvHN,yBAAAqJ,EAAAqB,SAAAzB,EAAA/Q,WA0HjBo1K,0DAAsB,SAAArhK,EAAOjN,GAAP,IAAA4tF,EAAA,OAAA9zE,EAAAzgB,EAAA+Q,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,OAChBvK,GACFA,EAAEgI,iBAEE4lF,EAAwBxvF,EAAKjF,MAAMkK,YAAYmwB,UAAUC,kBACrCr1B,EAAKnC,cAAc20B,kBAAkBg9D,EAAsBvyF,OAEnF+C,EAAK+gE,aAAa,KAAK/gE,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,YAAYtjD,KAAKuyF,EAAsBpnF,SAP7E,wBAAA2G,EAAAzB,SAAAuB,EAAA/T,iEAWtBif,uCAAoB,SAAAkD,IAAA,OAAAvB,EAAAzgB,EAAA+Q,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,OAClBnM,EAAK8C,SAAS,CACZsV,WAAY,CACV+jG,QAAQ,CACN9jG,OAAO,KACPC,SAAQ,GAEVoN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,GAEV3b,OAAO,CACL0b,OAAO,KACPC,SAAQ,MAbI,wBAAA6E,EAAA7P,SAAA2P,EAAAniB,WAmBpBq1K,uDAAmB,SAAAlyJ,EAAOrc,GAAP,IAAA4tF,EAAA4sB,EAAAC,EAAA,OAAA3gG,EAAAzgB,EAAA+Q,KAAA,SAAAoS,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAjS,MAAA,UACbvK,GACFA,EAAEgI,iBAEE4lF,EAAwBxvF,EAAKjF,MAAMkK,YAAYmwB,UAAUC,mBACrCr1B,EAAKnC,cAAc20B,kBAAkBg9D,EAAsBvyF,MALpE,CAAAmhB,EAAAjS,KAAA,eAAAiS,EAAAjS,KAAA,EASyBnM,EAAK4vK,iCAT9B,OAAAxxJ,EAAAlP,KA8EblP,EAAK8C,SAAS,CACZqiI,2BAA0B,KAlEtB/oB,EAAkB,SAAC9vG,EAAGiM,GAE1B,IAAMC,EAAY,CAChBC,cAAe,UACfG,YAAa,UACbF,WAAYpM,EAAKA,EAAGI,OAAS,MAGzBoxC,EAAcxxC,GAAoB,YAAdA,EAAGI,OAIzB6L,IACFC,EAAUE,WAAa1Y,EAAKnC,cAAcib,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAU9L,SACrB1M,EAAKnC,cAAckb,yBAAyBP,GAG9CxY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5ByiI,0BAA2BrnF,EAC3B1lC,WAAW3d,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAU0V,WADL,CAER+jG,QAAQ,CACN9jG,OAAO,KACPC,SAAQ,QAK4B,oBAA/BtY,EAAKjF,MAAMqhH,iBAAkCt+D,GACtD99C,EAAKjF,MAAMqhH,gBAAgB9vG,GAG7BtM,EAAKk8B,kBAGDmgF,EAAyB,SAAC/vG,GAC9B,IAAM+L,EAAS/L,EAAG2M,gBAClBjZ,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAU0V,WADL,CAER+jG,QAAQ1hH,OAAA00K,EAAA,EAAA10K,CAAA,GACHiI,EAAU0V,WAAW+jG,QADnB,CAEL9jG,iBAMRrY,EAAKnC,cAAcqjE,YAAYlhE,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,YAAYtjD,KAAKuyF,EAAsBpnF,QAAQg0G,EAAgBC,GAE/Hr8G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAU0V,WADL,CAER+jG,QAAQ,CACN9jG,OAAO,KACPC,SAAQ,KAGZ6sH,2BAA0B,MA3Ef,wBAAA/mH,EAAA9Q,SAAA2Q,EAAAnjB,iEAqFnB4qB,8CAAU,SAAA/G,EAAO/c,EAAEwuK,GAAT,IAAA5gF,EAAAn6D,EAAAg7I,EAAAC,EAAAtpC,EAAAN,EAAAqoC,EAAAhoC,EAAAwpC,EAAAxzB,EAAAxsD,EAAAigF,EAAAl7G,EAAAswE,EAAAD,EAAA,OAAAjqH,EAAAzgB,EAAA+Q,KAAA,SAAAgT,GAAA,cAAAA,EAAA9S,KAAA8S,EAAA7S,MAAA,UACRvK,EAAEgI,iBAEI4lF,EAAwBxvF,EAAKjF,MAAMkK,YAAYmwB,UAAUC,oBACzDA,EAAoBr1B,EAAKnC,cAAc20B,kBAAkBg9D,EAAsBvyF,OAJ7E,CAAA+hB,EAAA7S,KAAA,YAaEkkK,EAAkB,SAAC/jK,EAAGiM,IAErBA,GAASjM,GAAoB,UAAdA,EAAGI,OACrB6L,EAAQ,CACN8R,QAAQ,kBAEA/d,GAAMiM,IAChBjM,EAAK,CACHI,OAAO,UAIX,IAAMoxC,EAAcxxC,GAAoB,YAAdA,EAAGI,OAGvB8L,EAAY,CAChBC,cAAe,UACfG,YAAaw3J,EACb13J,WAAYpM,EAAKA,EAAGI,OAAS,KAC7BkwG,WAAY/vG,SAASkiK,IAGnBx2J,IACFC,EAAUE,WAAa1Y,EAAKnC,cAAcib,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAU9L,SACrB1M,EAAKnC,cAAckb,yBAAyBP,GAK1CslC,GAEFr+B,OAAOo1F,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,+BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGPn1G,EAAKjF,MAAMsqI,mBAA6D,oBAAjCrlI,EAAKjF,MAAMsqI,mBACpDrlI,EAAKjF,MAAMsqI,kBAAkB/4H,KAI/BmT,OAAOo1F,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIXn1G,EAAKk8B,kBAGPl8B,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5Bq5B,kBAAiB+hB,EACjB1lC,WAAW3d,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAU0V,WADL,CAERsN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,SAMVg4J,EAAyB,SAAChkK,GAC9B,IAAM+L,EAAS/L,EAAG2M,gBAClBjZ,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAU0V,WADL,CAERsN,QAAQjrB,OAAA00K,EAAA,EAAA10K,CAAA,GACHiI,EAAU0V,WAAWsN,QADnB,CAELrN,iBAMF2uH,EAAiB,WACoB,oBAA9BhnI,EAAKjF,MAAMisI,gBACpBhnI,EAAKjF,MAAMisI,kBAITN,GAAqC,IAAzB1mI,EAAKjF,MAAM2rI,WAAuB1mI,EAAKjF,MAAM8jJ,UAAY7+I,EAAKsC,MAAM65I,0BAA4Bn8I,EAAKsC,MAAM2sK,qBAGvHF,EAAgB/uK,EAAKsC,MAAMysK,cAC3BhoC,EAAY/mI,EAAKjF,MAAM8rI,oBAAsB7mI,EAAKnC,cAAcqxD,aAAalvD,EAAKnC,cAAcwxD,qBAAqBrvD,EAAKsC,MAAMs2G,WAAW54G,EAAKsC,MAAMmK,QAAQzM,EAAKsC,MAAMovD,2BAA6B1xD,EAAKnC,cAAcqxD,aAAalvD,EAAKsC,MAAMmvD,oBAGnP8+G,EAAsE,qBAA9CvwK,EAAKjF,MAAMkK,YAAYspJ,mBAAqCvuJ,EAAKjF,MAAMkK,YAAYspJ,mBAAqBvuJ,EAAKnC,cAAc0S,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAGnMwsI,EAAwB,MAExBwzB,EApHA,CAAAvxJ,EAAA7S,KAAA,cAwHA4wI,EADErW,EACsB1mI,EAAKnC,cAAc0S,gBAAgB,CAAC,WAAW,UAAU,UAAU,gCAEnEvQ,EAAKnC,cAAc0S,gBAAgB,CAAC,WAAW,UAAU,UAAU,2BA1H3F,CAAAyO,EAAA7S,KAAA,gBAAA6S,EAAA7S,KAAA,GA8H8BnM,EAAKnC,cAAc6vB,oBAAoBqhJ,EAAc/uK,EAAKjF,MAAMgK,cAAc/E,EAAKjF,MAAMkK,aAAY,GA9HnI,QAAA+Z,EAAA9P,KA+HoB+wD,IAAIjgE,EAAKnC,cAAc2O,MAAMuwI,MAC/CwzB,GAAiB,GAhInB,QAuI2B,oBAF3BhgF,EAAkBvwF,EAAKjF,MAAMw1F,gBAAkBvwF,EAAKjF,MAAMw1F,gBAAkB,CAACw2C,EAAU/mI,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,YAAYn4C,QAAQpI,EAAKjF,MAAMkK,YAAYmoB,KAAKhlB,QAAQpI,EAAKjF,MAAMkK,YAAYmD,QAAQmoK,MAGjNhgF,EAAkBA,EAAgBw2C,IAIhCL,GACIpxE,GAAoBk7G,EAAAn7I,EAAkBmf,SAAQ47H,GAA1B5iK,MAAAgjK,EAAA/1K,OAAAw9G,EAAA,EAAAx9G,CAA8C81F,IAAiB55B,YACzF32D,EAAKnC,cAAc+7D,+BAA+B41B,EAAsBvyF,KAAMq4D,EAAmB+6G,EAAiBC,KAG5G1qC,EAAiB5lI,EAAKnC,cAAc20B,kBAAkBxyB,EAAKjF,MAAMkK,YAAYhI,MAC7E0oI,EAAen2C,EAAsBj1D,UAAUhgB,KAAM,SAAA4jD,GAAC,OAAIA,EAAElhE,OAASmzK,IACvEpwK,EAAKjF,MAAM4pI,WAAaiB,EAC1B5lI,EAAKnC,cAAcu4D,iBAAiBp2D,EAAKjF,MAAMkK,YAAYhI,KAAM+C,EAAKjF,MAAMqQ,QAASokF,EAAsBvyF,KAAM0oI,EAAa7oE,WAAYyzB,EAAiB8/E,EAAiBC,EAAwBtpC,GAGpMhnI,EAAKnC,cAAc0b,0BAA0Bi2E,EAAsBvyF,KAAMmzK,EAAiB7/E,EAAiB8/E,EAAiBC,IAMhItwK,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0V,WAAW3d,OAAA00K,EAAA,EAAA10K,CAAA,GACNiI,EAAU0V,WADL,CAERsN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,QAlKV,eAAA0G,EAAAtC,OAAA,UAyKD,GAzKC,yBAAAsC,EAAA1R,SAAAqR,EAAA7jB,4IA7fJA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAiN9CD,KAAKkD,YACLlD,KAAKohC,yGAOYz5B,EAAUC,GAC3B5H,KAAKkD,YAEL,IAAM0sB,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClDqlK,EAAkBhuK,EAAUo8I,WAAa/jJ,KAAKC,MAAM8jJ,SACpD6xB,EAAmBjuK,EAAUkiI,YAAc7pI,KAAKC,MAAM4pI,WACvCliI,EAAUsC,gBAAkBjK,KAAKC,MAAMgK,gBAAmBtC,EAAUwC,aAAenK,KAAKC,MAAMkK,aAE/FylB,GAAkB+lJ,GAAmBC,IACvD51K,KAAKohC,iBAGP,IAAMmhF,EAAgBviH,KAAKwH,MAAMmK,SAAW/J,EAAU+J,OAChDkkK,EAA6B71K,KAAKwH,MAAMo5G,oBAAoB5gH,KAAKwH,MAAMmK,UAAY/J,EAAUg5G,oBAAoB5gH,KAAKwH,MAAMmK,SAC9H4wG,GAAiBszD,IACnB71K,KAAKghH,gBAGmBp5G,EAAUk2G,aAAe99G,KAAKwH,MAAMs2G,YAE5D99G,KAAKohH,sBAGyBx5G,EAAUyiI,4BAA8BrqI,KAAKwH,MAAM6iI,2BAGvC,oBAA/BrqI,KAAKC,MAAMqhH,iBACpBthH,KAAKC,MAAMqhH,gBAAgBthH,KAAKwH,MAAM6iI,4DAkbnC,IAAAlnI,EAAAnD,KAEP,IAAKA,KAAKC,MAAMkK,cAAgBnK,KAAKC,MAAMgK,cACzC,OAAO,KAGT,IAAM02G,EAAmB3gH,KAAKC,MAAM4pI,WAAa7pI,KAAKwH,MAAM6iI,0BACtDgH,EAAqBrxI,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,mBACjEqgK,EAAwBzkC,EAAmBh/G,SAAkG,qBAAhFg/G,EAAmBpxI,MAAMmQ,gBAAgBpQ,KAAKC,MAAMkK,YAAYmoB,KAAK7gB,OAClI6/H,EAA+BD,EAAmBrG,eAIlD+qC,EAAyB,SAAC91K,GAAD,OAC7B+1K,EAAA71K,EAAAC,cAAC61K,EAAA,EAAD,CACEv2K,UAAW,CACToiB,GAAG,EACHy8F,GAAG,EACHx+G,GAAG,EACHwO,GAAG,EACH9F,QAAQ,OACR1H,WAAW,SACXC,cAAc,SACdC,eAAe,SACfoI,GAAGlG,EAAKqE,MAAM0sK,cAAgB,EAAI,IAGpC8B,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEp2K,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB+0K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7zK,KAAM,QACNC,MAAO,WACPH,KAAM,iBAGV6zK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEt+I,UAAU,EACVmrF,QAAS5/G,EAAKqE,MAAM0sK,cACpBjmK,MAAK,wCACL2O,SAAW,SAAA9V,GAAC,OAAI3D,EAAKixK,oBAAoBttK,EAAEmf,OAAO88F,cAKlDozD,EAAkBn2K,KAAK+C,cAAc0S,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAgBzV,KAAKwH,MAAM2sK,qBAExH,OACEn0K,KAAKwH,MAAMgW,SAAWxd,KAAKC,MAAMqQ,QAC/B0lK,EAAA71K,EAAAC,cAAC61K,EAAA,EAAD,CACEv2K,UAAW,CACT6B,EAAE,EACF8H,GAAG,EACHolB,UAAU,QACVpoB,MAAM,CACJoC,QAAQ,OACR1H,WAAW,SACXE,eAAe,YAInB+0K,EAAA71K,EAAAC,cAACg2K,EAAA,EAAD,CACEtyK,UAAW,CACT9C,cAAc,OAEhB4kB,YAAa,CACXvjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,2BAIT5C,KAAKwH,MAAMy5B,mBAAqBjhC,KAAKwH,MAAM0sK,cAC1C8B,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CAAKp2K,MAAO,IAEPE,KAAKC,MAAM6rI,iBACZkqC,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJrI,cAAe,UAEfg1K,EAAA71K,EAAAC,cAAC61K,EAAA,EAAD,CACEv2K,UAAW,CACT6B,EAAE,IAGJy0K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEn1K,WAAY,SACZC,cAAe,UAEfg1K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7zK,KAAM,QACNC,MAAO,WACPH,KAAOnC,KAAKC,MAAM6rI,gBAAkB,YAAc,YAEpDkqC,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAEwB,OAAjCtJ,KAAKC,MAAMo2K,kBAA6Br2K,KAAKC,MAAMo2K,kBAAoB,KACtC,OAAjCr2K,KAAKC,MAAMo2K,mBACXL,EAAA71K,EAAAC,cAAA,WARJ,OAUSJ,KAAKC,MAAM6rI,gBAA4B,GAAV,QAVtC,SAU0DkqC,EAAA71K,EAAAC,cAAA,cAASJ,KAAKwH,MAAMysK,cAActmK,QAAQ,GAA1C,IAA+C3N,KAAKwH,MAAMwsK,aAA1D,IAAyEh0K,KAAKwH,MAAMwtK,uBAAX,IAAAruK,OAAwC3G,KAAKwH,MAAMwtK,uBAAuBrnK,QAAQ,GAAlF,KAAAhH,OAAwF3G,KAAKC,MAAMgK,cAAnG,KAAsH,IAVzP,eAUiR+rK,EAAA71K,EAAAC,cAAA,WAClP,OAA3BJ,KAAKC,MAAMq2K,YAAuBt2K,KAAKC,MAAMq2K,YAAc,+EAOzC5nJ,IAA3B1uB,KAAKC,MAAM4rI,aAA6B7rI,KAAKC,MAAM4rI,cAClDmqC,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJrI,cAAe,WAGZhB,KAAKC,MAAM6rI,iBACVkqC,EAAA71K,EAAAC,cAAC21K,EAAD,MAEJC,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CAAM3nK,GAAI,GAAV,sBAGAynK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEn1K,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB+0K,EAAA71K,EAAAC,cAAC61K,EAAA,EAAD,CACEv2K,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN6+G,YAAY,WACVx7G,EAAK82H,UAAU,aAGnB35H,eAAe,EACfC,SAAiC,YAAtBP,KAAKwH,MAAMmK,QAEtBqkK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEp1K,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB+0K,EAAA71K,EAAAC,cAACm2K,EAAA,EAAD,CACEv1J,YAAa,CACXrP,OAAO,WAETgO,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAIT20K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACExzK,SAAU,EACVD,WAAY,GAFd,aAQJuzK,EAAA71K,EAAAC,cAAC61K,EAAA,EAAD,CACEv2K,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN6+G,YAAY,WACVx7G,EAAK82H,UAAU,YAGnB35H,eAAe,EACfC,SAAiC,WAAtBP,KAAKwH,MAAMmK,QAEtBqkK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEp1K,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB+0K,EAAA71K,EAAAC,cAACm2K,EAAA,EAAD,CACEv1J,YAAa,CACXrP,OAAO,UAETgO,UAAW,CACTxd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAIT20K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACExzK,SAAU,EACVD,WAAY,GAFd,cAYY,YAAtBzC,KAAKwH,MAAMmK,OACTqkK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJkF,GAAI,EACJvN,cAAe,UAGZ80K,GAAyBxkC,IAAiCtxI,KAAKC,MAAM6rI,iBACpEkqC,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE3nK,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB+0K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE5sK,UAAW,SACX3D,WAAY,UACZwgB,KAAI,sBAAAxf,OAAwB0qI,EAAmBnzD,MAA3C,KAAAv3E,OAAoD3G,KAAKC,MAAMkK,YAAYmoB,KAAK7gB,QAHtF,wDAOAukK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACExwK,GAAI,EACJrD,KAAM,MACNC,MAAO,UACPH,KAAM,qBAKZw+G,EACE3gH,KAAKwH,MAAM8V,WAAWsN,QAAQpN,QAC5Bw4J,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJrI,cAAe,UAEfg1K,EAAA71K,EAAAC,cAACo2K,EAAA,EAAD72K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4H,KAAM7H,KAAKwH,MAAM8V,WAAWsN,QAAQrN,OACpC4B,WAAU,kCACVF,kBAAmBjf,KAAKif,kBAAkBC,KAAKlf,MAC/Cof,SAAWpf,KAAKC,MAAMmf,SAAWpf,KAAKC,MAAMmf,SAAW,yBACvD4G,eAAiBhmB,KAAKC,MAAM8jJ,UAAY/jJ,KAAKwH,MAAM65I,wBAA0B,8BAAgC,6BAG/GrhJ,KAAKC,MAAM8rI,oBACbiqC,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJrI,cAAe,UAEfg1K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE3nK,GAAI,EACJzO,MAAO,EACPkB,cAAe,UAEfg1K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE3nK,GAAI,EACJxN,WAAY,SACZC,cAAe,MACfC,eAAgBjB,KAAKC,MAAMkjH,oBAAsB,gBAAkB,YAGjEnjH,KAAKC,MAAMkjH,qBACT6yD,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEp2K,MAAO,EACPwG,SAAU,MACVvF,WAAY,SACZC,cAAe,OAEfg1K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACExzK,SAAU,EACVD,WAAY,EACZ6G,UAAW,OACXjD,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,YAEfnE,MAAOtC,KAAKC,MAAMkjH,oBAAoB7gH,MAAQtC,KAAKC,MAAMkjH,oBAAoB7gH,MAAQ,aAEpFtC,KAAKC,MAAMkjH,oBAAoBvgH,OAMtC5C,KAAKwH,MAAMysK,eACT+B,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEp2K,MAAO,EACPwG,SAAU,MACVvF,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhB+0K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACExzK,SAAU,EACVD,WAAY,EACZH,MAAO,YACPgH,UAAW,QACX3D,WAAY,YACZC,QAAU,SAACkB,GAAD,OAAO3D,EAAKg+G,uBAAuB,OAN/C,YAQYnhH,KAAKwH,MAAMysK,cAActmK,QAAQ,GAR7C,IAQkD3N,KAAKC,MAAMgK,iBAMrE+rK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEpkK,IAAK,EACLvO,KAAM,SACNq0B,UAAU,EACV71B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZkK,YAAa,aACbjM,gBAAiB,SACjBuO,UAAW,kBACX2uG,YAAa,gBACbhhG,SAAU5c,KAAK6gH,iBAAiB3hG,KAAKlf,MACrCuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,SAC7CuE,MAAOnL,KAAKwH,MAAMs2G,WAAW99G,KAAKwH,MAAMmK,QAAU3R,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMs2G,WAAW99G,KAAKwH,MAAMmK,SAAShE,UAAY,KAEnIqoK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJtI,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK6E,IAAK,SAAAwa,GAAU,OAC5B01J,EAAA71K,EAAAC,cAACq2K,EAAA,EAAD,CACEn2J,WAAYA,EACZzZ,IAAG,YAAAF,OAAc2Z,GACjBq+F,YAAa,kBAAIx7G,EAAKg+G,uBAAuB7gG,IAC7C/f,SAAU4C,EAAKqE,MAAMo5G,oBAAoBz9G,EAAKqE,MAAMmK,UAAYI,SAASuO,SAMnF01J,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJvJ,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGdjB,KAAKC,MAAMkK,YAAYmwB,UAAUC,kBAAkBkF,UAAU35B,IAAI,SAAC+kI,EAAa19H,GAC7E,IAAMupK,EAAe7rC,EAAa1oI,KAClC,OACE6zK,EAAA71K,EAAAC,cAACu2K,EAAA,EAAD,CACErxK,YAAa,CACXxF,MAAM,CAAC,EAAE,IACToH,SAAS/D,EAAKqE,MAAMk5G,eACpBz5G,UAAU9D,EAAKlD,MAAMwB,MAAMC,OAAOkpB,SAEpC/jB,IAAG,WAAAF,OAAawG,GAChB1M,YAAc,SAAAqG,GAAC,OAAI3D,EAAKynB,QAAQ9jB,EAAE4vK,KAEhC7rC,EAAa58H,WAQ3B+nK,EAAA71K,EAAAC,cAAC61K,EAAA,EAAD,CACEv2K,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAGL2sK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEn1K,WAAY,SACZC,cAAe,UAGbhB,KAAKC,MAAM22K,eACTZ,EAAA71K,EAAAC,cAAC81K,EAAA,EACKl2K,KAAKC,MAAM22K,gBAGjBZ,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7zK,KAAM,QACNC,MAAO,WACPH,KAAOnC,KAAKC,MAAM+rI,cAAgBhsI,KAAKC,MAAM+rI,cAAiBhsI,KAAKC,MAAM6rI,gBAAkB,YAAc,WAI/GkqC,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAGTtJ,KAAKC,MAAMksI,cACT6pC,EAAA71K,EAAAC,cAAC81K,EAAA,EAAKrwJ,KAAN,CACEgxJ,mBAAoB72K,KAAKC,MAAM42K,mBAC/BttK,wBAAyB,CACvBC,OAAOxJ,KAAKC,MAAMksI,iBAKtB6pC,EAAA71K,EAAAC,cAAC81K,EAAA,EAAKrwJ,KAAN,CACEvjB,MAAO,YADT,oDAGqDtC,KAAKC,MAAM6rI,gBAAkB9rI,KAAKwH,MAAMysK,cAActmK,QAAQ,GAAK,MAHxH,IAGiI3N,KAAKwH,MAAMwsK,aAAeh0K,KAAKC,MAAM6rI,gBAAX,kBAAAnlI,OAA+C3G,KAAKC,MAAMkK,YAAYsH,MAAtE,KAAA9K,OAA+E3G,KAAKC,MAAM4T,iBAA1F,aAAwH,GAHnR,MAQNmiK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEp2K,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAGhBk1K,GACEH,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEr2K,GAAI,EACJE,GAAI,EACJsJ,GAAI,EACJvJ,MAAO,EACP0B,aAAc,EACdT,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBP,gBAAiB,cACjB6E,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAO6oB,YAE7CyrJ,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAGTtJ,KAAKC,MAAM8jJ,SAAX,0HAGE,4GAIN/jJ,KAAKC,MAAM8jJ,UACTiyB,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJuuB,UAAU,EACV3pB,MAAO,gCACP80G,QAAS/iH,KAAKwH,MAAM65I,wBACpBzkI,SAAW,SAAA9V,GAAC,OAAI3D,EAAK0xK,8BAA8B/tK,EAAEmf,OAAO88F,aAMpE/iH,KAAKC,MAAMkK,YAAYmwB,UAAUC,kBAAkBkF,UAAU35B,IAAI,SAAC+kI,EAAa19H,GAC7E,IAAMupK,EAAe7rC,EAAa1oI,KAClC,OACE6zK,EAAA71K,EAAAC,cAACu2K,EAAA,EAAD,CACErxK,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,IACTmH,UAAU9D,EAAKlD,MAAMwB,MAAMC,OAAOkpB,SAEpC/jB,IAAG,WAAAF,OAAawG,GAChB1M,YAAc,SAAAqG,GAAC,OAAI3D,EAAKynB,QAAQ9jB,EAAE4vK,KAEhC7rC,EAAa58H,YAS3BjO,KAAKwH,MAAM8V,WAAW+jG,QAAQ7jG,QAChCw4J,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJrI,cAAe,UAEfg1K,EAAA71K,EAAAC,cAACo2K,EAAA,EAAD72K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,SAAQ,uBACRvX,KAAM7H,KAAKwH,MAAM8V,WAAW+jG,QAAQ9jG,OACpC4B,WAAU,gCACVF,kBAAmBjf,KAAKif,kBAAkBC,KAAKlf,UAInDg2K,EAAA71K,EAAAC,cAAC61K,EAAA,EAAD,CACEv2K,UAAW,CACT6B,EAAE,EACF8H,GAAG,IAGL2sK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEn1K,WAAY,SACZC,cAAe,UAEfg1K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7zK,KAAM,QACNF,KAAM,WACNG,MAAO,aAET0zK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJ3G,SAAU,EACVJ,MAAO,WACPgH,UAAW,UAGTtJ,KAAKC,MAAM62K,YAAc92K,KAAKC,MAAM62K,YAApC,mBAAAnwK,OAAuE3G,KAAKC,MAAM6rI,gBAA0B,GAAR,MAApG,KAAAnlI,OAAmH3G,KAAKwH,MAAMwsK,aAA9H,mDAGJgC,EAAA71K,EAAAC,cAACu2K,EAAA,EAAD,CACErxK,YAAa,CACX+D,GAAG,EACHvJ,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKq1K,iBAAiBn2J,KAAKlf,OAL1C,cAeTA,KAAKwH,MAAM8V,WAAWtd,KAAKwH,MAAMmK,QAAQ6L,QAmExCw4J,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJrI,cAAe,UAEfg1K,EAAA71K,EAAAC,cAACo2K,EAAA,EAAD72K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEgf,kBAAmBjf,KAAKif,kBAAkBC,KAAKlf,MAC/C6H,KAAM7H,KAAKwH,MAAM8V,WAAWtd,KAAKwH,MAAMmK,QAAQ4L,OAC/C4B,WAAU,cAAAxY,OAAgB3G,KAAKwH,MAAMmK,OAA3B,eACVyN,SAAQ,GAAAzY,OAAK3G,KAAK+C,cAAcmL,WAAWlO,KAAKwH,MAAMmK,QAA9C,qBA3EZqkK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJrI,cAAe,UAEfg1K,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEpkK,IAAK,EACLvO,KAAM,SACNq0B,UAAU,EACV71B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZoG,UAAWC,IAAOsmB,MAClBziB,YAAa,aACbjM,gBAAiB,SACjBuO,UAAW,kBACX2N,SAAU5c,KAAK6gH,iBAAiB3hG,KAAKlf,MACrCuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,SAC7Cg3G,YAAW,UAAAj3G,OAAY3G,KAAKwH,MAAMwsK,aAAvB,WACX7oK,MAAoD,OAA7CnL,KAAKwH,MAAMs2G,WAAW99G,KAAKwH,MAAMmK,QAAmB3R,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMs2G,WAAW99G,KAAKwH,MAAMmK,SAAS8R,WAAa,KAE7IuyJ,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJtI,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB+0K,EAAA71K,EAAAC,cAACq2K,EAAA,EAAD,CACEn2J,WAAY,GACZq+F,YAAa,kBAAIx7G,EAAKg+G,uBAAuB,KAC7C5gH,SAAUP,KAAKwH,MAAMo5G,oBAAoB5gH,KAAKwH,MAAMmK,UAAYI,SAAS,MAE3EikK,EAAA71K,EAAAC,cAACq2K,EAAA,EAAD,CACEn2J,WAAY,GACZq+F,YAAa,kBAAIx7G,EAAKg+G,uBAAuB,KAC7C5gH,SAAUP,KAAKwH,MAAMo5G,oBAAoB5gH,KAAKwH,MAAMmK,UAAYI,SAAS,MAE3EikK,EAAA71K,EAAAC,cAACq2K,EAAA,EAAD,CACEn2J,WAAY,GACZq+F,YAAa,kBAAIx7G,EAAKg+G,uBAAuB,KAC7C5gH,SAAUP,KAAKwH,MAAMo5G,oBAAoB5gH,KAAKwH,MAAMmK,UAAYI,SAAS,MAE3EikK,EAAA71K,EAAAC,cAACq2K,EAAA,EAAD,CACEn2J,WAAY,IACZq+F,YAAa,kBAAIx7G,EAAKg+G,uBAAuB,MAC7C5gH,SAAUP,KAAKwH,MAAMo5G,oBAAoB5gH,KAAKwH,MAAMmK,UAAYI,SAAS,QAG7EikK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACE7sK,GAAI,EACJpI,eAAgB,UAEhB+0K,EAAA71K,EAAAC,cAACu2K,EAAA,EAAD,CACErxK,YAAa,CACXxF,MAAM,CAAC,EAAE,IACToH,SAASlH,KAAKwH,MAAMk5G,eACpBr6G,MAAM,CACJ+8G,cAAc,eAGlB3iH,YAAaT,KAAKwH,MAAMk5G,eAAiB,KAAO1gH,KAAKu0K,cAAcr1J,KAAKlf,OAEvEA,KAAKwH,MAAMmK,WAsB1BqkK,EAAA71K,EAAAC,cAAC81K,EAAA,EAAD,CACEp2K,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,WAGZjB,KAAKC,MAAM6rI,iBAAmB9rI,KAAKwH,MAAMy5B,kBACzC+0I,EAAA71K,EAAAC,cAAC21K,EAAD,MAGF/1K,KAAKC,MAAMwJ,SAAWzJ,KAAKC,MAAMwJ,SAAW,aAp1CpC5G,aA61CP8oI,8HCr2CTte,qdAMqB1lH,EAAUC,kMAKjC,OACEW,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACE+F,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfuH,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACEwsH,GAAI,EACJ3uH,MAAO,CACLokH,UAAU,IACVzqG,KAAK,WAEPjf,WAAY,SACZE,eAAgB,cAGdjB,KAAKC,MAAMqC,OACXiG,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACEnH,GAAI,EACJvB,MAAO,OACPiC,OAAQ,OACRP,aAAc,MACdd,gBAAiBV,KAAKC,MAAMqC,QAIhCiG,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACE9F,SAAU,EACVD,WAAY,EACZ6G,UAAW,OACXhH,MAAO,YACP+D,MAAO,CACL+8G,cAAc,eAGfpjH,KAAKC,MAAMgO,QAGhB1F,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACEnC,MAAO,CACLokH,UAAU,IACVzqG,KAAK,WAEPjf,WAAY,SACZE,eAAgB,YAEhBsH,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACE9F,SAAU,EACVD,WAAY,EACZH,MAAO,WACPgH,UAAW,QACXjD,MAAO,CACLG,WAAW,UAEb+C,wBAAyB,CACvBC,OAAQxJ,KAAKC,MAAMkL,kBAnEGtI,aA6ErBwqH,gKCzETic,6MAEJ9hI,MAAQ,KAGRzE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KAEH+P,EAAgB/P,KAAKC,MAAM8P,cAK/B,OAJKA,GAAkBA,EAAc/L,SACnC+L,EAAgBpQ,OAAOoE,KAAK/D,KAAKC,MAAMmQ,kBAIvC/L,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,wBAAwBtF,MAAO,EAAGkB,cAAe,UACxDqD,EAAAlE,EAAAC,cAAC22K,EAAA,EAADp3K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEs4G,KAAMv4G,KAAKC,MAAMs4G,KACjBv2G,SAAUhC,KAAKC,MAAM+B,YAEvBqC,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,cAAcpE,cAAe,UAElC+O,EAAcjK,IAAI,SAAA2L,GAChB,IAAMtH,EAAchH,EAAKlD,MAAMmQ,gBAAkBjN,EAAKlD,MAAMmQ,gBAAgBqB,GAAS,KACrF,OAAKtH,EAIH9F,EAAAlE,EAAAC,cAAC42K,EAAA,EAADr3K,OAAAC,OAAA,CACE6R,MAAOA,GACHtO,EAAKlD,MAFX,CAGE4G,IAAG,SAAAF,OAAW8K,GACdtH,YAAaA,EACbmuG,MAAK,aAAA3xG,OAAe8K,GACpB2mG,OAAM,cAAAzxG,OAAgB8K,GACtBymG,eAAgB/0G,EAAKlD,MAAMi4G,gBAAkBkQ,OAVxC,gBA1CEvlH,aA+DVymI,wuFCrEf9kI,EAAAC,QAAA,CAAkBwyK,OAAA,uBAAAjxK,KAAA,00PCGZkjH,EAAY,SAAAv4G,GAAA,IAAElH,EAAFkH,EAAElH,SAAUw0G,EAAZttG,EAAYstG,UAAch+G,EAA1BN,OAAAu3K,EAAA,EAAAv3K,CAAAgR,EAAA,iCAChBwmK,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACE71K,EAAG,EACHgE,OAAQ,EACR3E,GAAI,OACJE,GAAI,OACJiB,OAAQ,OACRP,aAAc,EACd+E,SAAU,OACVzG,MAAQG,EAAMH,MAAQG,EAAMH,MAAQ,OACpCqH,SAAWlH,EAAMkH,SAAWlH,EAAMkH,SAAW,OAC7Cb,SAAWrG,EAAMqG,SAAWrG,EAAMqG,SAAW,SAE7C6wK,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACEvqK,IAAK,IACLyB,OAAQ,EACRxB,MAAO,IACPuB,SAAU,YAEV8oK,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAOjxK,KAAR,CACE6zJ,UAAQ,EACR53J,KAAM,QACNC,KAAM,QACNuD,QAASq4G,EACTh3G,UAAYhH,EAAMgH,UAAYhH,EAAMgH,UAAa,eAGrDkwK,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACEr1K,OAAQ,OACRie,KAAM,WACNhf,cAAe,SACf6H,UAAW,CAAE5I,EAAMo3K,QAAUvuK,IAAO8lB,GAAK,MACzCvoB,MAAO,CACLE,SAAU,OACV+wK,iBAAiB,YACjBC,mBAAmB,eACnBC,eAAiBv3K,EAAMuL,WAAqB,KAAR,MACpCisK,gBAAgB,mCAChBjsK,WAAYvL,EAAMuL,WAAavL,EAAMuL,WAAa,MAEpD9K,gBAAiB,UAEhB+I,KAKPy/G,EAAUhL,OAAS,SAACj+G,GAAD,OACjBk3K,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACEt3K,MAAO,EACPyO,GAAI,CAAC,EAAE,GACPgwG,GAAI,CAAC,EAAE,GACPz8F,GAAK7hB,EAAM6hB,GAAK7hB,EAAM6hB,GAAM7hB,EAAMmC,KAAO,EAAI,CAAC,EAAE,GAChDwlH,aAAe3nH,EAAM2nH,aAAe3nH,EAAM2nH,aAAe,kBAEzDuvD,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACEr3K,GAAI,CAAC,EAAE,GACPgB,WAAY,SACZC,cAAe,UAEbf,EAAMmC,MAAQ+0K,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CAAOt3K,MAAQG,EAAMkpH,WAAalpH,EAAMkpH,WAAa,OAASrnH,IAAK7B,EAAMmC,OACzF+0K,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAQjpD,GAATxuH,OAAAC,OAAA,CACE2O,GAAI,EACJ7L,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPgH,UAAW,SACXD,GAAIpJ,EAAMmC,KAAO,EAAI,EACrBuJ,WAAY,aACR1L,EAAM03G,YAET13G,EAAM+mB,OAGP/mB,EAAM8wH,UACNomD,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAQjoK,GAATxP,OAAAC,OAAA,CACEkiB,GAAI,CAAC,EAAE,GACPrf,WAAY,EACZC,SAAU,CAAC,EAAE,GACbg1G,WAAY,IACZp1G,MAAO,YACPgH,UAAW,UACPrJ,EAAMy3K,eAETz3K,EAAM8wH,UAIT9wH,EAAMi7J,WACNic,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAQjoK,GAAT,CAAY2S,GAAI,EAAGpf,SAAU,CAAC,EAAE,GAAI4G,UAAW,SAAU7G,WAAY,EAAGi1G,WAAY,IAAKp1G,MAAO,aAC7FrC,EAAMi7J,cAOjBhyC,EAAU/K,KAAO,SAAArqG,GAAA,IAAErK,EAAFqK,EAAErK,SAAaxJ,EAAfN,OAAAu3K,EAAA,EAAAv3K,CAAAmU,EAAA,qBACfqjK,EAAAh3K,EAAAC,cAACg3K,EAAA,EAADz3K,OAAAC,OAAA,CACEE,MAAO,EACPC,GAAI,CAAC,EAAE,IACHE,GAEHwJ,IAaLy/G,EAAU9K,OAAS,SAAAl9F,GAAA,IAAEzX,EAAFyX,EAAEzX,SAAF9J,OAAAu3K,EAAA,EAAAv3K,CAAAuhB,EAAA,qBACjBi2J,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACEp3J,KAAM,WACN/e,eAAgB,SAChB8qH,UAAW,EACXp/G,YAAa,aACb5M,GAAI,CAAC,EAAE,GACPF,GAAI,GAEH4J,IAKLy/G,EAAUyuD,WAAa,SAAAx5I,GAAA,IAAEv4B,EAAFu4B,EAAEv4B,QAAFjG,OAAAu3K,EAAA,EAAAv3K,CAAAw+B,EAAA,oBACrBg5I,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACE/oK,SAAU,WACVxB,IAAK,IACLG,KAAM,IACN2mK,EAAG,EACH/kJ,GAAI,SAEJuoJ,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAOnd,QAAR,CACEr0J,QAASA,EACTo0J,UAAQ,EACR53J,KAAM,YACNC,KAAM,YAKG6mH,uCCtJfziG,EAAA9b,EAAAgc,EAAA,sBAAAsB,IAAAxB,EAAA9b,EAAAgc,EAAA,sBAAAgD,IAAAlD,EAAA9b,EAAAgc,EAAA,sBAAAqG,IAAAvG,EAAA9b,EAAAgc,EAAA,sBAAAuG,IAAA,IAAA0qJ,EAAAnxJ,EAAA,IAGMqC,EAAa,CACjBD,MAAO,UACPY,MAAO,OACPxB,KAAM,UACN4vJ,SAAU,UACVluJ,MAAO,UACPqD,OAAQ,UACRE,IAAK,UACL4qJ,QAAS,UACTC,cAAe,WAIXr2K,EAAS,CACbo2K,QAAS,CACP5vJ,KAAMY,EAAWgvJ,QACjBl1K,KAAMo1K,YAAclvJ,EAAWgvJ,SAC/BzvJ,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWgvJ,UACnC57J,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWgvJ,WAErC7vJ,KAAM,CACJC,KAAMY,EAAWb,KACjBrlB,KAAMo1K,YAAclvJ,EAAWb,MAC/BI,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWb,OACnC/L,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWb,QAErC0B,MAAO,CACLzB,KAAMY,EAAWa,MACjB/mB,KAAMkmB,EAAWW,MACjBpB,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWa,QACnCzN,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWa,SAErCqD,OAAQ,CACN9E,KAAMY,EAAWkE,OACjBpqB,KAAMo1K,YAAclvJ,EAAWkE,QAC/B3E,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWkE,SACnC9Q,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWkE,UAErCE,IAAK,CACHhF,KAAMY,EAAWoE,IACjBtqB,KAAMo1K,YAAclvJ,EAAWoE,KAC/B7E,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWoE,MACnChR,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWoE,QAKjCjF,EAAOvmB,EAAOumB,KACd0B,EAAQjoB,EAAOioB,MACfqD,EAAStrB,EAAOsrB,OAChBE,EAAMxrB,EAAOwrB,IAOJpE,wKCtDTyoG,6MAEJ/pH,MAAQ,CACNqlG,SAAS,KACTorE,kBAAkB,QAIpBl1K,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAKk4K,oMAGkBvwK,EAAUC,yEACjC5H,KAAKkD,YACCitH,EAAuBxoH,EAAUwoH,uBAAyBnwH,KAAKC,MAAMkwH,uBACvCxoH,EAAUosB,qBAAuBlkB,KAAKC,UAAUnI,EAAUosB,uBAAyBlkB,KAAKC,UAAU9P,KAAKC,MAAM8zB,sBAC/Go8F,IAChCnwH,KAAKk4K,0RAMDlqE,EAAchuG,KAAKC,MAAM+tG,cAAe,EAEzChuG,KAAKC,MAAM8zB,qBAAwB/zB,KAAKC,MAAMkwH,wBAAyBniB,IAAehuG,KAAKwH,MAAMqlG,oDAC7F,cAGL7sG,KAAKC,MAAM4sG,WAAY7sG,KAAKC,MAAMg4K,2DAC7Bj4K,KAAKgI,SAAS,CACnB6kG,SAAS7sG,KAAKC,MAAM4sG,SACpBorE,kBAAkBj4K,KAAKC,MAAMg4K,+BAI3BE,EAA8Bn4K,KAAKC,MAAMk4K,6BAA+B,EAAC,EAAKnqE,GAKpC,oBAArChuG,KAAKC,MAAMwxH,wDAA6C2mD,EAAAp4K,KAAKC,OAAMwxH,sBAAX/+G,MAAA0lK,EAAAz4K,OAAAw9G,EAAA,EAAAx9G,CAAoCw4K,iEAAqCE,EAAAr4K,KAAK+C,eAAc+qG,mBAAnBp7F,MAAA2lK,EAAA14K,OAAAw9G,EAAA,EAAAx9G,CAAyCw4K,8CAFnLz6I,WACAmvE,aAGEorE,EAAoBj4K,KAAK+C,cAAc2O,MAAM,GAC5C1R,KAAK+C,cAAc2O,MAAMm7F,GAAUvpG,SAAYtD,KAAK+C,cAAc2O,MAAMgsB,GAAQp6B,UACnF20K,EAAoBprE,EAAS36F,KAAK26F,EAASn/F,MAAMgwB,EAAOla,IAAI,0BAGvDxjB,KAAKgI,SAAS,CACnB6kG,WACAorE,2JAIK,IAAA90K,EAAAnD,KACP,OAAOA,KAAKwH,MAAMqlG,SAChBrnF,EAAArlB,EAAAC,cAACk4K,EAAA,EAAD34K,OAAAC,OAAA,CACEE,MAAO,GACHE,KAAKC,MAAM6D,WAEf0hB,EAAArlB,EAAAC,cAACm4K,EAAAp4K,EAAD,CACEgzH,MAAO,EACPxvH,SAAU,EACV6rD,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACXn6F,SAAU,QACVC,MAAO1rB,WAAWzN,KAAKwH,MAAMqlG,UAC7Bl8C,IAAKljD,WAAWzN,KAAKwH,MAAMywK,mBAC3B3kD,aAAe,SAAAv9F,GAAC,MAAI,KAAK5yB,EAAKJ,cAAcS,YAAYuyB,EAAE,KAEzD,SAAAjiB,GAAA,IAAGy/G,EAAHz/G,EAAGy/G,WAAHz/G,EAAeqlB,MAAf,OACC3T,EAAArlB,EAAAC,cAAA,QACEiG,MAAQlD,EAAKlD,MAAM+yH,aAAe7vH,EAAKlD,MAAM+yH,aAAe,CAC1DvqH,QAAQ,QACRnG,MAAM,YACNkE,WAAW,SACXmF,WAAWxI,EAAKlD,MAAMwB,MAAMmK,MAAMub,QAClC1kB,WAAWU,EAAKlD,MAAMwB,MAAMua,YAAY,GACxC1S,UAAWnG,EAAKlD,MAAM+B,SAAW,SAAW,QAC5CU,SAAUS,EAAKlD,MAAM+B,SAAW,QAAUmB,EAAKlD,MAAMwB,MAAMqa,UAAU,IAEvE03G,IAAKD,OAKuB,qBAAxBvzH,KAAKC,MAAM8wH,UAA4B/wH,KAAKC,MAAM8wH,WACxDvrG,EAAArlB,EAAAC,cAACo4K,EAAA,EAAD74K,OAAAC,OAAA,CACE6C,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPgH,UAAW,CAAC,SAAS,UACjBtJ,KAAKC,MAAMy3K,eAEflyJ,EAAArlB,EAAAC,cAACk4K,EAAA,EAAKzyJ,KAAN,CAAWpjB,WAAY,UAAWH,MAAO,UAAWI,SAAU,WAAY1C,KAAKC,MAAM8wH,UAAY,6BAMzGvrG,EAAArlB,EAAAC,cAACk4K,EAAA,EAAD,CACEx4K,MAAO,EACPiB,WAAY,SACZE,eAAgBjB,KAAKC,MAAMuxH,aAAe,UAE1ChsG,EAAArlB,EAAAC,cAACk4K,EAAA,EAAD,CACEj2K,KAAM,iBAtHoBQ,aA6HrB0uH,gKC5HT1J,6MAEJrgH,MAAQ,KAGRzE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KAEH8nH,EAAmB9nH,KAAKC,MAAM6nH,iBAC7BA,GAAqBA,EAAiB9jH,SACzC8jH,EAAmBnoH,OAAOoE,KAAK/D,KAAKC,MAAMs9B,oBAE5C,IAAMoD,EAAgB3gC,KAAKC,MAAM0gC,gBACjC,OACEt8B,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,0BAA0BtF,MAAO,EAAGkB,cAAe,UAC1DqD,EAAAlE,EAAAC,cAACq4K,EAAA,EAAD94K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEs4G,KAAMv4G,KAAKC,MAAMs4G,KACjBv2G,SAAUhC,KAAKC,MAAM+B,SACrB+lH,UAAW/nH,KAAKC,MAAM8nH,aAGvB/nH,KAAKC,MAAM0rH,UAEXhrF,GACDt8B,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,gBAAgBpE,cAAe,UAEpC2/B,EAAgB76B,IAAK,SAAA2L,GACnB,IAAMtH,EAAchH,EAAKlD,MAAMs9B,kBAAkB9rB,EAAMwsB,UAAUxsB,EAAMA,OACvE,OACEpN,EAAAlE,EAAAC,cAAC42K,EAAA,EAADr3K,OAAAC,OAAA,GACMuD,EAAKlD,MADX,CAEEwR,MAAOA,EAAMA,MACbk8D,cAAc,EACdtvC,QAAS5sB,EAAM4sB,QACfJ,SAAUxsB,EAAMwsB,SAChB9zB,YAAaA,EACbmuG,MAAK,eAAA3xG,OAAiB8K,EAAMwsB,UAC5Bm6E,OAAM,gBAAAzxG,OAAkB8K,EAAMwsB,UAC9Bi6E,eAAgB/0G,EAAKlD,MAAMi4G,gBAAkBwS,IAC7C7jH,IAAG,WAAAF,OAAa8K,EAAMwsB,SAAnB,KAAAt3B,OAA+B8K,EAAMA,MAAMA,EAAM4sB,SACpDC,cAA+B,OAAhB7sB,EAAM4sB,QAAel0B,EAAYuhE,GAAGvhE,EAAYwnE,SAQxEttE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,gBAAgBpE,cAAe,UAErC8mH,EAAiBhiH,IAAI,SAAAm4B,GACnB,IAAMC,EAAiB/6B,EAAKlD,MAAMs9B,kBAAkBU,GACpD,IAAKC,EACH,OAAO,KAET,IAAMG,EAAUl7B,EAAKlD,MAAM4oD,aAAe,KAC1C,OAAOlpD,OAAOoE,KAAKm6B,GAAgBp4B,IAAK,SAAA2L,GACtC,OACEpN,EAAAlE,EAAAC,cAAC42K,EAAA,EAADr3K,OAAAC,OAAA,GACMuD,EAAKlD,MADX,CAEEwR,MAAOA,EACP4sB,QAASA,EACTJ,SAAUA,EACVq6E,MAAK,eAAA3xG,OAAiBs3B,GACtB9zB,YAAa+zB,EAAezsB,GAC5B2mG,OAAM,gBAAAzxG,OAAkBs3B,GACxBp3B,IAAG,WAAAF,OAAas3B,EAAb,KAAAt3B,OAAyB8K,GAC5BymG,eAAgB/0G,EAAKlD,MAAMi4G,gBAAkBwS,oBArFtC7nH,aAmGZglH,uGCvGT6wD,mLAEK,IAAAxzK,EAAAlF,KAED24K,EAAgB,kBACpBvxK,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACEhF,MAAiC,OAAzB4C,EAAKjF,MAAMiyH,UAAsB,UAAY,UACrD/vH,KAAgC,OAAzB+C,EAAKjF,MAAMiyH,UAAsB,cAAgB,gBACxD7vH,KAAO6C,EAAKjF,MAAMuF,SAAWN,EAAKjF,MAAMuF,SAAaN,EAAKjF,MAAM+B,SAAW,QAAU,SAIzF,OACEoF,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACEvG,WAAY,SACZC,cAAe,MACflB,MAAQE,KAAKC,MAAMH,MAAQE,KAAKC,MAAMH,MAAQ,EAC9CmB,eAAgBjB,KAAKC,MAAMgB,eAAiBjB,KAAKC,MAAMgB,eAAiB,YAGpEjB,KAAKC,MAAM24K,SAAgC,SAArB54K,KAAKC,MAAM24K,UACjCxxK,EAAAjH,EAAAC,cAACu4K,EAAD,MAEH34K,KAAKC,MAAMwJ,SAEW,UAArBzJ,KAAKC,MAAM24K,SACTxxK,EAAAjH,EAAAC,cAACu4K,EAAD,cA1BkB91K,aAiCf61K,2BCnCfl0K,EAAAC,QAAA,CAAkBwX,YAAA,qCAAAO,gBAAA,yCAAAN,KAAA,8BAAAC,kBAAA,m0OCAlB3X,EAAAC,QAAA,CAAkBo0K,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,myuCCEZpxD,mLAEF,OACEznH,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZE,eAAgB,UACZjB,KAAKC,MAAM6D,WAEf5D,EAAAC,EAAAC,cAACO,EAAA,EAAWX,KAAKC,MAAM2lB,aAErB5lB,KAAKC,MAAM2C,MACT1C,EAAAC,EAAAC,cAACO,EAAA,EAASX,KAAKC,MAAM0C,UAAY3C,KAAKC,MAAM2C,cAZ/BC,aAmBV8kH,qsWCVT+C,6MAEJljH,MAAQ,CACNoqK,OAAM,KAIR7uK,cAAgB,OAChB0E,oBAAqB,IA8DrBioB,+BAAY,SAAA/O,IAAA,IAAAq4J,EAAAhxK,EAAA2X,EAAAqQ,EAAA48C,EAAAc,EAAAC,EAAA6mD,EAAAykD,EAAAC,EAAArpJ,EAAAu3B,EAAAD,EAAAgyH,EAAAvnJ,EAAA/R,EAAA/L,EAAAoN,EAAAk4J,EAAAC,EAAA3iK,EAAArD,EAAAimK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1M,EAAAx6J,UAAA,OAAA9B,EAAA1Q,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,UAAM2nK,EAAN7L,EAAAnpK,OAAA,QAAA0qB,IAAAy+I,EAAA,GAAAA,EAAA,GAAgB,MAEtBjoK,EAAKuC,oBAAuBvC,EAAKjF,MAAMg+B,UAAa/4B,EAAKjF,MAAMwR,OAAUvM,EAAKjF,MAAMkK,aAAgBjF,EAAKjF,MAAMkwH,qBAFzG,CAAAtvG,EAAAxP,KAAA,eAAAwP,EAAAe,OAAA,UAGD,GAHC,UAMJ5Z,EAAyB,OAAdgxK,EACXr5J,EAAYza,EAAKjF,MAAM0f,UACxBq5J,IACHA,EAAYr5J,EAAUxd,MAGlB6tB,EAAarQ,EAAU1f,MACvB2sE,EAAkD,qBAA5B1nE,EAAKjF,MAAM2sE,cAA+B1nE,EAAKjF,MAAM2sE,aAC3Ec,EAAgD,qBAA3BxoE,EAAKjF,MAAMytE,aAA8BxoE,EAAKjF,MAAMytE,YACzEC,EAAkD,qBAA5BzoE,EAAKjF,MAAM0tE,cAA+BzoE,EAAKjF,MAAM0tE,aAE3E6mD,EAAiBtvH,EAAKnC,cAAc0S,gBAAgB,CAAC,aACrDwjK,EAAoB/zK,EAAKnC,cAAcmL,WAAWsmH,EAAe9oD,GAAG6kD,UACpE2oD,EAAoBh0K,EAAKnC,cAAcmL,WAAWsmH,EAAe7iD,GAAG4+C,UAEtE1gG,EAAS,MACT3qB,EAAKjF,MAAMwR,MAtBL,CAAAoP,EAAAxP,KAAA,SAAAwP,EAAA6R,GAuBAsmJ,EAvBAn4J,EAAAxP,KAwBD,aAxBCwP,EAAA6R,GAAA,uBA0BE00B,EAAer1C,SAASe,KAAK84B,MAAM,KACnCub,EAAiBC,EAAc,OAGjC+xH,EAAe,GACbvnJ,EA/BF,mBAAAjrB,OA+BqCzB,EAAKjF,MAAMkK,YAAYmD,WAG7C,QAFbuS,EAAa3a,EAAKnC,cAAc6vC,cAAchhB,KAEzB/R,EAAW,IAAMA,EAAW,GAAGhV,MAAQgV,EAAW,GAAGhV,KAAK7G,OAAO,GAlCxF,CAAA6c,EAAAxP,KAAA,SAmCF8nK,EAAet5J,EAnCbgB,EAAAxP,KAAA,wBAAAwP,EAAAxP,KAAA,GAwCQ4P,QAAQqD,IAAI,CACpBpf,EAAKnC,cAAcgkD,uBAAuB7hD,EAAKjF,MAAMkK,YAAYuhE,GAAGp+D,QAAQ65C,EAAeC,GAC3FliD,EAAKnC,cAAcgkD,uBAAuB7hD,EAAKjF,MAAMkK,YAAYwnE,GAAGrkE,QAAQ65C,EAAeC,KA1C3F,QAAAtzC,EAAA+M,EAAAzM,KAAA8M,EAAAvhB,OAAAm6K,EAAA,EAAAn6K,CAAAmU,EAAA,GAsCAslK,EAtCAl4J,EAAA,GAuCAm4J,EAvCAn4J,EAAA,GA6CExK,EAAY,EACZrD,EAAgB,EACdimK,EAAgBF,EAAcp1K,OAC9Bu1K,EAAgBF,EAAcr1K,OAEpCm1K,EAAavrK,KAAK,CAChBtL,MAAMkyH,EAAe9oD,GAAGppE,MAAMioH,IAC9BnlH,GAAE,GAAAuB,OAAIzB,EAAKjF,MAAMwR,MAAf,KAAA9K,OAAwBsyK,EAAxB,QACFpuK,KAAKuuK,EAActzK,IAAI,SAAC6E,EAAEwC,GACxB,IAAMoJ,EAAIrR,EAAKnC,cAAc8P,YAAwB,IAAZlI,EAAEqH,WAAgBiE,OAAO,oBAC5DO,EAAI/I,WAAWvI,EAAKnC,cAAcomC,QAAQjkC,EAAKnC,cAAcmS,iBAAiBvK,EAAEy+B,IAAI,IAAI5lB,IAAI,MAAM9V,MAAM,MAG9G,OAFA2F,EAAgBxB,KAAKqE,IAAI7C,EAAcmD,GAEhC,CAAED,IAAGC,IAAGI,QADC/E,KAAKgF,MAAMH,IAAY4iK,EAAc,UAKzD5iK,EAAY,EACZyiK,EAAavrK,KAAK,CAChBtL,MAAMkyH,EAAe7iD,GAAGrvE,MAAMioH,IAC9BnlH,GAAE,GAAAuB,OAAIzB,EAAKjF,MAAMwR,MAAf,KAAA9K,OAAwBuyK,EAAxB,QACFruK,KAAKwuK,EAAcvzK,IAAI,SAAC6E,EAAEwC,GACxB,IAAMoJ,EAAIrR,EAAKnC,cAAc8P,YAAwB,IAAZlI,EAAEqH,WAAgBiE,OAAO,oBAC5DO,EAAI/I,WAAWvI,EAAKnC,cAAcomC,QAAQjkC,EAAKnC,cAAcmS,iBAAiBvK,EAAEy+B,IAAI,IAAI5lB,IAAI,MAAM9V,MAAM,MAG9G,OAFA2F,EAAgBxB,KAAKqE,IAAI7C,EAAcmD,GAEhC,CAAED,IAAGC,IAAGI,QADC/E,KAAKgF,MAAMH,IAAY6iK,EAAc,UAKrDJ,EAAan1K,QAAUm1K,EAAa,GAAGtuK,KAAK7G,OAAO,GACrDkB,EAAKnC,cAAc+c,cAAc8R,EAAcunJ,GA5E/C,eAiFgC,IAAhCA,EAAa,GAAGtuK,KAAK7G,UACjBw1K,EAAW75K,OAAOC,OAAO,GAAGu5K,EAAa,GAAGtuK,KAAK,KAC9C0L,EAAIrR,EAAKnC,cAAc8P,YAAY2mK,EAAS,oBAAoBx9C,IAAI,EAAE,SAAS/lH,OAAO,oBAC/FkjK,EAAa,GAAGtuK,KAAK+C,KAAK4rK,IAGxBC,EAAgB,EAChBC,EAAiB,GAEfC,EAAiB,WACrB,IAAMI,EAAqB70K,EAAKjF,MAAMqa,UAAY4T,SAASC,eAAejpB,EAAKjF,MAAMqa,UAAY4T,SAASC,eAAejpB,EAAKjF,MAAMqa,UAAY4T,SAASC,eAAejpB,EAAKjF,MAAMq4G,OACnL,GAAIyhE,EAAmB,CACrB,IAAMC,EAAsBr1J,OAAOmpJ,OAAOiM,GAC1CN,EAAgBO,EAAoBpN,aAAan/J,WAAWusK,EAAoBC,IAAI,kBAAkBxsK,WAAWusK,EAAoBC,IAAI,iBACzIP,EAAiBM,EAAoBnN,cACjC4M,IAAkBv0K,EAAKsC,MAAMiyK,eAAkBv0K,EAAKsC,MAAMkyK,gBAC5Dx0K,EAAKmD,aAAa,CAChBoxK,gBACAC,eAAgBx0K,EAAKsC,MAAMkyK,eAAiBx0K,EAAKsC,MAAMkyK,eAAiBA,SAQhF/0J,OAAOqJ,oBAAoB,SAAU2rJ,EAAez6J,KAAfvf,OAAAu6K,EAAA,EAAAv6K,QAAAu6K,EAAA,EAAAv6K,CAAAuF,MACrCyf,OAAOmJ,iBAAiB,SAAU6rJ,EAAez6J,KAAfvf,OAAAu6K,EAAA,EAAAv6K,QAAAu6K,EAAA,EAAAv6K,CAAAuF,MAG5B00K,EAAev/J,IAEfw/J,EAAgB,CACpB1hK,UAAU,EACVgiK,UAAU,EACV/hK,SAAQ,EACRC,SAAS,KACThO,SAAQ,EACRsN,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjBvY,eAAc,EACdoB,OAAO,SAAAiJ,GAAC,OAAIA,EAAErI,OACdmW,cAAavT,EAAKjF,MAAM+B,UAAmB,IAC3C0V,QAAQ,SAAAvM,GAAK,OAAIsC,WAAWtC,GAAOwC,QAAQ,GAAG,KAC9CyL,KAAK,CACH,CAAEm7B,MAAO,CAAEnvC,GAAIF,EAAKjF,MAAMwR,OAAUrM,GAAI,iBAE1CvE,OAAQ,CAAEgM,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9C0M,aAAa,SAACC,GAAc,IAClBE,EAAUF,EAAVE,MACFD,EAAQC,EAAMC,OAAO,GAC3B,OACEsgK,EAAAj6K,EAAAC,cAACi6K,EAAA,EAAD,CACEzgK,MAAOA,GAGiB,kBAAjBC,EAAMC,QAAuBD,EAAMC,OAAO9V,QAC/C6V,EAAMC,OAAOhU,IAAI,SAAA8T,GACf,IAAMxM,EAAewM,EAAMK,QACrBqgK,EAAkB1gK,EAAM/O,KAAKqP,WAEnC,OACEkgK,EAAAj6K,EAAAC,cAACm6K,EAAA,EAAD,CACE1zK,IAAK+S,EAAMxU,GACX9C,MAAOsX,EAAMtX,MACb2L,MAAOb,EACPjC,MAAOmvK,SAUnBp1K,EAAKjF,MAAM2J,YAET1E,EAAKjF,MAAM2J,YAAcjK,OAAOoE,KAAKmB,EAAKjF,MAAM2J,YAAY5F,QAC9DrE,OAAOoE,KAAKmB,EAAKjF,MAAM2J,YAAY3F,QAAQ,SAAA1C,GACzCs4K,EAAct4K,GAAK2D,EAAKjF,MAAM2J,WAAWrI,KAK3CyG,GACF9C,EAAKmD,aAAa,CAChBupK,OAAM,EACNgI,eACAT,eACAU,gBACAJ,gBACAC,mBAGJ7pJ,EAASspJ,EArLLt4J,EAAAe,OAAA,2BAAAf,EAAAxP,KAAA,GAwLWnM,EAAKnC,cAAcgqE,iBAAiBisG,EAAUhpJ,EAAW9qB,EAAKjF,MAAMg+B,SAAS/4B,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMo+B,QAAQn5B,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMq+B,cAAcp5B,EAAKjF,MAAMqQ,QAAQs8D,EAAac,EAAYC,GAxLxN,oBAyLWj/C,KADfmB,EAxLIhP,EAAAzM,OAyLwBpM,GAC1B9C,EAAKmD,aAAL1I,OAAA66K,EAAA,EAAA76K,CAAA,CACEiyK,OAAM,GACLoH,EAAWnpJ,IA5LZhP,EAAAe,OAAA,2BAAAf,EAAAe,OAAA,SAmMHiO,GAnMG,yBAAAhP,EAAArO,SAAAmO,EAAA3gB,oFA3DNA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,8JAK9CD,KAAKyH,oBAAqB,yPAI1BzH,KAAKkD,kQAILlD,KAAK0vB,2LAIY5nB,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,4LAGgBJ,EAAWC,oGAClC5H,KAAKkD,YAECyrK,EAAehnK,EAAU8J,QAAUzR,KAAKC,MAAMwR,MAC9Cme,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClDmqK,EAAiB9yK,EAAU02B,UAAYr+B,KAAKC,MAAMo+B,QAClDpuB,EAAgBtI,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClD04K,EAAkB/yK,EAAUs2B,WAAaj+B,KAAKC,MAAMg+B,SACpD/tB,EAAmBvI,EAAUwI,YAAcnQ,KAAKC,MAAMkQ,UACtDwqK,EAAehzK,EAAUgY,UAAUxd,OAASnC,KAAKC,MAAM0f,UAAUxd,KACjEguH,GAAwBxoH,EAAUwoH,sBAAwBnwH,KAAKC,MAAMkwH,qBACrEiK,GAA2BzyH,EAAUoX,SAAW/e,KAAKC,MAAM8e,SAAapX,EAAUoX,SAAW/e,KAAKC,MAAM8e,SAAWlP,KAAKC,UAAUnI,EAAUoX,QAAQ6Y,YAAc/nB,KAAKC,UAAU9P,KAAKC,MAAM8e,QAAQ6Y,UACpM62F,EAAsB9mH,EAAUhG,cAAgB3B,KAAKC,MAAM0B,cAAgBhC,OAAO2R,OAAO3J,EAAUhG,cAAc4P,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqB5N,SAAWrE,OAAO2R,OAAOtR,KAAKC,MAAM0B,cAAc4P,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqB5N,OAEjP22K,GAAgBhM,GAAgB+L,GAAmBD,GAAkB7qJ,GAAkB6+F,GAAuB0B,GAAwBiK,EAExIp6H,KAAKqI,aAAa,CAChBupK,OAAM,GACN,WACAzuK,EAAKusB,eAEEzf,GAAiBC,KAEpB+iH,EAAWtzH,OAAOC,OAAO,GAAGI,KAAKwH,OACvCxH,KAAKqI,aAAa,CAChBupK,OAAM,GACN,WACAzuK,EAAK6E,SAASirH,6IA2MZ,IAAAnoH,EAAA9K,KACF6vB,EAAS,KACPlQ,EAAY3f,KAAKC,MAAM0f,UAEvBrX,OADsComB,IAAzB/O,EAAUhR,YAA4BgR,EAAUhR,WACtCyrK,EAAAj6K,EAAAC,cAAC81K,EAAA,EAAD,CAAQ7zK,KAAK,SAAa,KAEjD2tB,EAAa,CACjBvtB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,WACNwB,UAAU,CACR7C,eAAe,eAKf0e,EAAU1f,OAASN,OAAOoE,KAAK4b,EAAU1f,OAAO+D,QAClDrE,OAAOoE,KAAK4b,EAAU1f,OAAOgE,QAAQ,SAAA1C,GACnCyuB,EAAWzuB,GAAKoe,EAAU1f,MAAMsB,KAKhCoe,EAAUk5F,WAAal5G,OAAOoE,KAAK4b,EAAUk5F,WAAW70G,QAC1DrE,OAAOoE,KAAK4b,EAAUk5F,WAAW50G,QAAQ,SAAA1C,GACH,oBAAzBoe,EAAUk5F,UAAUt3G,KAC7ByuB,EAAWzuB,GAAKoe,EAAUk5F,UAAUt3G,GAAGuJ,EAAK7K,UAQlD,IAAM2D,EAAeosB,GAAcje,SAASie,EAAWpsB,eAAe,EAAIosB,EAAWpsB,aAAe,EAC9FD,EAAWqsB,GAAcje,SAASie,EAAWrsB,WAAW,EAAIqsB,EAAWrsB,SAAa3D,KAAKC,MAAM+B,SAAW,EAAI,EAC9G6B,EAAemsB,GAAcje,SAASie,EAAWnsB,eAAe,EAAImsB,EAAWnsB,aAAiB7D,KAAKC,MAAM+B,SAAW,EAAI,EAG1H8B,EAAYksB,EAAWlsB,UAG7B,cAFOksB,EAAWlsB,UAEV6b,EAAUxd,MAChB,IAAK,eACH,IAAM+7B,EAAiBl+B,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAS,YAAazV,KAAKC,MAAMg+B,WACtF9vB,EAAe+vB,GAAkBA,EAAe97B,KAAO87B,EAAe97B,KAAvD,GAAAuE,OAAiE3G,KAAKC,MAAMg+B,SAA5E,QACrBpO,EACEuqJ,EAAAj6K,EAAAC,cAAC81K,EAAA,EAADv2K,OAAAC,OAAA,CAAOkC,IAAG,oBAAA6E,OAAsBwH,IAAoB6hB,IAExD,MACA,IAAK,oBAEH,GADAH,EAAS,KACL7vB,KAAKwH,MAAMozK,mBAAqB56K,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMozK,mBAAmBtlK,GAAG,GAAG,CAC/F,IAAMulK,EAAW76K,KAAK+C,cAAcW,iBAAiB1D,KAAKwH,MAAMozK,kBAAmB,EAAGh3K,EAAc,GAAnF,IAAA+C,OAA4F3G,KAAKC,MAAMwR,OACxHoe,EACEuqJ,EAAAj6K,EAAAC,cAAC81K,EAAA,EAAD,CACE5mJ,UAAW,MACXC,QAAO,oDAAA5oB,OAAsDk0K,IAE7DT,EAAAj6K,EAAAC,cAAC81K,EAAA,EAADv2K,OAAAC,OAAA,CAAOkC,IAAG,2BAAiCkuB,KAInD,MACA,IAAK,cACHH,EAAS,KACT,IAAIirJ,EAAY,KACZC,EAAa,KAEZ/6K,KAAKwH,MAAMwzK,aAGVh7K,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAMwzK,aAAa1lK,GAAG,IACtDwlK,EAAY,eACZC,EAAa,iBAEbD,EAAY,aACZC,EAAa,cAEflrJ,EACEuqJ,EAAAj6K,EAAAC,cAAC81K,EAAA,EAAD,CACEn2K,GAAI,EACJF,GAAI,EACJ2B,aAAc,EACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAiBq6K,GAEjBX,EAAAj6K,EAAAC,cAAC81K,EAAA,EAAD,CACExzK,SAAU,EACVD,WAAY,EACZH,MAAO,SAENw4K,KAvBPjrJ,EAASvnB,EA4Bb,MACA,IAAK,kBACH,IAAMyhH,EAAiB/pH,KAAK+C,cAAc0S,gBAAgB,CAAC,WAAWzV,KAAKC,MAAMo+B,UACjFxO,EACEuqJ,EAAAj6K,EAAAC,cAAC81K,EAAA,EAADv2K,OAAAC,OAAA,CACE2B,EAAG,MACHC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAe,QAAAiG,OAAUojH,EAAeznH,MAAMy6I,IAAI/uI,KAAK,KAAxC,UACXlK,GAEJs2K,EAAAj6K,EAAAC,cAAC81K,EAAA,EAADv2K,OAAAC,OAAA,GACMowB,EADN,CAEE9uB,MAAO,SACPiB,KAAM4nH,EAAe3nH,KACrBE,MAAOynH,EAAeznH,MAAMioH,QAIpC,MACA,IAAK,YACH,IAAMpgH,EAAcnK,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,SAASzV,KAAKC,MAAMwR,MAAMiE,gBACpFq5G,EAAY5kH,GAAeA,EAAY/H,KAAO+H,EAAY/H,KAA9C,iBAAAuE,OAAsE3G,KAAKC,MAAMwR,MAAjF,QAClBoe,EACEuqJ,EAAAj6K,EAAAC,cAAC81K,EAAA,EAADv2K,OAAAC,OAAA,CAAOkC,IAAKitH,GAAe/+F,IAE/B,MACA,IAAK,SACH,IAAMirJ,EAAyC,oBAApBt7J,EAAU1R,MAAuB0R,EAAU1R,MAAMjO,KAAKC,OAAS0f,EAAU1R,MACpG4hB,EACEuqJ,EAAAj6K,EAAAC,cAAC81K,EAAA,EAADv2K,OAAAC,OAAA,GAAYowB,EAAZ,CAAwBpqB,QAAS,kBAAMoqB,EAAWvvB,YAAYqK,EAAK7K,UAAUg7K,GAEjF,MACA,IAAK,SACHprJ,EACEuqJ,EAAAj6K,EAAAC,cAAC86K,EAAA,EAAD,CACEz6E,IAAKzgG,KAAKC,MACV0f,UAAWA,IAGjB,MACA,IAAK,cACHkQ,EAAS7vB,KAAKwH,MAAMoqK,OAAS5xK,KAAKwH,MAAM2zK,aAAen7K,KAAKwH,MAAM2zK,YAAYprG,WAAa/vE,KAAKwH,MAAM2zK,YAAYrrG,QAChHsqG,EAAAj6K,EAAAC,cAACg7K,EAAAj7K,EAAD,CACEgzH,MAAO,EACP3jE,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACXn6F,SAAU,QACVv1B,SAAUA,EACVgtD,IAAKljD,WAAWzN,KAAKwH,MAAM2zK,YAAYrrG,SACvC32C,MAAO1rB,WAAWzN,KAAKwH,MAAM2zK,YAAYprG,WACzCujD,aAAe,SAAAv9F,GAAC,OAAIjrB,EAAK/H,cAAcW,iBAAiBqyB,EAAEpyB,EAASC,EAAaC,KAE/E,SAAAs6B,GAAA,IAAGo1F,EAAHp1F,EAAGo1F,WAAHp1F,EAAehF,MAAf,OACCihJ,EAAAj6K,EAAAC,cAAA,QAAMiG,MAAO2pB,EAAW3pB,MAAOmtH,IAAKD,MAGtCjrH,EACN,MACA,IAAK,kBACHunB,EAAS7vB,KAAKwH,MAAMoqK,OAAS5xK,KAAKwH,MAAMqoE,iBAAmB7vE,KAAKwH,MAAMqoE,gBAAgBP,eAAiBtvE,KAAKwH,MAAMqoE,gBAAgBJ,YAChI2qG,EAAAj6K,EAAAC,cAACg7K,EAAAj7K,EAAD,CACEgzH,MAAO,EACP3jE,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACXn6F,SAAU,QACVv1B,SAAUA,EACVgtD,IAAKljD,WAAWzN,KAAKwH,MAAMqoE,gBAAgBJ,aAC3Ct2C,MAAO1rB,WAAWzN,KAAKwH,MAAMqoE,gBAAgBP,eAC7CgkD,aAAe,SAAAv9F,GAAC,OAAIjrB,EAAK/H,cAAcW,iBAAiBqyB,EAAEpyB,EAASC,EAAaC,KAE/E,SAAAu6B,GAAA,IAAGm1F,EAAHn1F,EAAGm1F,WAAHn1F,EAAejF,MAAf,OACCihJ,EAAAj6K,EAAAC,cAAA,QAAMiG,MAAO2pB,EAAW3pB,MAAOmtH,IAAKD,MAGtCjrH,EACN,MACA,IAAK,wBACH,GAAItI,KAAKwH,MAAMmY,EAAUxd,MAAM,CAC7B,IAAIk5K,EAAiB,IAAA10K,OAAI3G,KAAKC,MAAMwR,MAAf,MAAA9K,OAAyB3G,KAAKwH,MAAMmY,EAAUxd,MAAMuuE,QAAQ/iE,QAAQhK,GAAU,MACnGhE,OAAOoE,KAAK/D,KAAKwH,MAAMmY,EAAUxd,MAAMquE,WAAWvsE,QAAS,SAAAokC,GACzD,IAAMl9B,EAAQL,EAAKtD,MAAMmY,EAAUxd,MAAMquE,UAAUnoC,GAAU16B,QAAQhK,GACrE03K,EAAeztK,KAAf,GAAAjH,OAAuB0hC,EAAvB,MAAA1hC,OAAoCwE,EAApC,QAGFkwK,EAAiBA,EAAertK,KAAK,MACrC,IAAM+jE,EAAe/xE,KAAKwH,MAAMmY,EAAUxd,MAAM4vE,aAE9CliD,EADElwB,OAAOoE,KAAK/D,KAAKwH,MAAMmY,EAAUxd,MAAMquE,WAAWxsE,OAAO,EAEzDo2K,EAAAj6K,EAAAC,cAACk7K,EAAA,EAAD,CACE9rJ,aAAc,CACZF,UAAU,SAEZ1sB,KAAMmvE,EACNpvE,UAAWqtB,EACXT,QAAS8rJ,IAIHjB,EAAAj6K,EAAAC,cAAC81K,EAAA,EAADv2K,OAAAC,OAAA,GAAUowB,EAAV,CAAsBzmB,wBAAyB,CAACC,OAAOuoE,WAGnEliD,OAAyCnB,IAA/B1uB,KAAKwH,MAAMmY,EAAUxd,MAAsBmG,EAAS,KAElE,MACA,IAAK,WACHunB,EAAS7vB,KAAKwH,MAAM2xK,aAClBiB,EAAAj6K,EAAAC,cAACm7K,EAAA,EAAD57K,OAAAC,OAAA,GACMI,KAAKwH,MAAMqyK,cADjB,CAEEt2K,KAAMvD,KAAKwH,MAAMoyK,aACjB/uK,KAAM7K,KAAKwH,MAAM2xK,aACjBr5K,MAAOE,KAAKwH,MAAMiyK,cAClB13K,OAAQ/B,KAAKwH,MAAMkyK,kBAEnBpxK,EACN,MACA,IAAK,YACL,IAAK,cACL,IAAK,iBACHunB,EAAS7vB,KAAKwH,MAAMmY,EAAUxd,OAASxC,OAAOoE,KAAK/D,KAAKwH,MAAMmY,EAAUxd,OAAO6B,OAAO,EACpFo2K,EAAAj6K,EAAAC,cAAC81K,EAAA,EAADv2K,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,cACZ0e,EAAUf,aAGZjf,OAAOoE,KAAK/D,KAAKwH,MAAMmY,EAAUxd,OAAO2D,IAAK,SAACuiC,EAAS0+D,GACrD,IAAMt+D,EAAiB39B,EAAKtD,MAAMmY,EAAUxd,MAAMkmC,GAClD,OACE+xI,EAAAj6K,EAAAC,cAACo7K,EAAA,EAAD,CACE/pK,MAAO42B,EACPl+B,YAAas+B,EACb5hC,IAAG,SAAAF,OAAWogG,GACdpnF,UAAW,CACTxd,KAAK,cACLqtB,aAAa,CACXD,QAAQ,GAAA5oB,OAAG0hC,IAAYv9B,EAAKtD,MAAM07F,+BAAiCp4F,EAAKtD,MAAM07F,8BAA8B76D,GAArF,KAAA1hC,OAAsGmE,EAAKtD,MAAM07F,8BAA8B76D,GAAU16B,QAAQhK,GAAjK,KAAAgD,OAA8K8hC,EAAe5T,sBAA7L,yBAA4O,KAErQ50B,MAAM,CACJuB,aAAa,MACb6M,SAAS,WACTtM,OAAO,CAAC,QAAQ,OAChB2D,GAAGqhG,EAAgB,QAAU,EAC7Bz4F,OAAO3O,OAAO2R,OAAOxG,EAAKtD,MAAMmY,EAAUxd,OAAO6B,OAAO+iG,EACxD93F,UAAU,CAAC,kCAAkC,0CAQzDjP,KAAKwH,MAAMmY,EAAUxd,MACvBi4K,EAAAj6K,EAAAC,cAAC81K,EAAA,EAASlmJ,EAAV,KACE1nB,EACN,MACA,QACE,IAAImzK,EAAiBz7K,KAAKwH,MAAMmY,EAAUxd,MACtCnC,KAAKwH,MAAMmY,EAAUxd,OAASnC,KAAKwH,MAAMmY,EAAUxd,MAAMu5K,eAC3DD,EAAiBz7K,KAAKwH,MAAMmY,EAAUxd,MAAMwL,QAAQhK,IAGtDksB,EAAS7vB,KAAKwH,MAAMmY,EAAUxd,MAC5Bi4K,EAAAj6K,EAAAC,cAAC81K,EAAA,EAADv2K,OAAAC,OAAA,GAAUowB,EAAV,CAAsBzmB,wBAAyB,CAACC,OAAOiyK,WACrB/sJ,IAA/B1uB,KAAKwH,MAAMmY,EAAUxd,MAAsBmG,EAAS,KAG7D,OAAOunB,SA1hBgBhtB,aA8hBZ6nH,sGCviBTxH,mLAEF,IAAM59G,EAAc3F,OAAOC,OAAO,CAChCE,MAAM,EACN2C,WAAW,EACXV,OAAO,OACPW,SAAS,CAAC,EAAE,GACZuM,UAAU,KACVzN,aAAa,EACbyF,UAAU,QACVjH,KAAKC,MAAMqF,aAEb,OACG8B,EAAAjH,EAAAC,cAACkH,EAAA,EAAD3H,OAAAC,OAAA,GACK0F,EADL,CAECM,QAAS5F,KAAKC,MAAMQ,cAEnBT,KAAKC,MAAMwJ,iBAjBM5G,aAuBXqgH,sGCvBTJ,mLAGF,OACE17G,EAAAjH,EAAAC,cAACkH,EAAA,EAAD3H,OAAAC,OAAA,CACE0C,MAAO,OACP2jB,OAAQ,SACRC,IAAK,gCACDlmB,KAAKC,OAERD,KAAKC,MAAMwJ,iBAVE5G,aAgBPigH,iskBCVT1E,6MAGJr7G,cAAgB,gFAEV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,+IAIL,IAAMy4K,GAAW,IAAI7oK,MAAO8oK,cACtBvS,EAAoBrpK,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAa,YACrEomK,EAAcxS,EAAoB,IAAM,EAAE,EAChD,OACE1qJ,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CACE7pB,GAAI,EACJhB,GAAI,SACJrE,WAAY,SACZC,cAAe,SACf6H,UAAWC,IAAOmuK,OAClBv2K,gBAAiB,QACjBO,eAAgB,cAEhB0d,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CACEnwB,MAAO,EACPC,GAAI,CAAC,EAAE,GACPkB,eAAgB,UAEhB0d,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CACEnwB,MAAO,EACPiC,OAAQ,CAAC,OAAO,QAChBhB,WAAY,aACZuF,SAAU,CAAC,OAAO,QAClBrF,eAAgB,aAChBD,cAAe,CAAC,SAAS,QAEzB2d,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMnwB,MAAO,CAAC,EAAE+7K,GAAc76K,cAAe,SAAUe,OAAQ,CAAC,OAAO,SACrE4c,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAQk+F,GAAT,CAAY7kH,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAI5B,GAAI,EAAGwB,MAAO,aAAlG,aAGAqc,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMnwB,MAAO,EAAGkB,cAAe,UAC7B2d,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CACEv9D,GAAI,CAAC,EAAE,GACPj8G,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZgG,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB6c,KAAM,mCAENxH,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,iBAA5B,gBATF,kBAWAr9J,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CACEv9D,GAAI,CAAC,EAAE,GACPj8G,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZgG,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB6c,KAAM,mFAENxH,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,gBAA5B,gBATF,iBAWAr9J,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMsuF,GAAI,CAAC,EAAE,GAAIz+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnD0d,EAAAxe,EAAAC,cAAC67K,EAAA,EAAD,CACE35K,MAAO,OACP22B,GAAG,oBACHpwB,UAAWC,IAAO9C,MAElB2Y,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CACExtB,WAAY,EACZH,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZgG,WAAY,YACZrC,UAAW,CAAC,SAAS,SAErBqV,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,oBAA5B,gBARF,uBAYJr9J,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CACEv9D,GAAI,CAAC,EAAE,GACPj8G,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZgG,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB6c,KAAM,mDAENxH,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,kBAA5B,wCATF,mBAWAr9J,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CACEv9D,GAAI,CAAC,EAAE,GACPj8G,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZgG,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB6c,KAAM,iEAENxH,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,iBAA5B,gBATF,oBAcF3S,GACE1qJ,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMnwB,MAAO,CAAC,EAAE+7K,GAAc76K,cAAe,SAAUe,OAAQ,CAAC,OAAO,SACrE4c,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAQk+F,GAAT,CAAY7kH,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAI5B,GAAI,EAAGwB,MAAO,aAAlG,cAGAqc,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMnwB,MAAO,EAAGkB,cAAe,UAC7B2d,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMsuF,GAAI,CAAC,EAAE,GAAIz+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnD0d,EAAAxe,EAAAC,cAAC67K,EAAA,EAAD,CACE35K,MAAO,OACP22B,GAAI,cACJpwB,UAAWC,IAAO9C,MAElB2Y,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAM3mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHgZ,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,uBAA5B,gBADF,eAKJr9J,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMsuF,GAAI,CAAC,EAAE,GAAIz+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnD0d,EAAAxe,EAAAC,cAAC67K,EAAA,EAAD,CACE35K,MAAO,OACPuG,UAAWC,IAAO9C,KAClBizB,GAAI,yBAEJta,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAM3mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHgZ,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,wBAA5B,gBADF,gBAKJr9J,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMsuF,GAAI,CAAC,EAAE,GAAIz+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnD0d,EAAAxe,EAAAC,cAAC67K,EAAA,EAAD,CACE35K,MAAO,OACPuG,UAAWC,IAAO9C,KAClBizB,GAAI,2BAEJta,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAM3mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHgZ,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,0BAA5B,gBADF,kBAKJr9J,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMsuF,GAAI,CAAC,EAAE,GAAIz+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnD0d,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CAAS31J,KAAK,6BACZxH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAM3mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHgZ,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,oBAA5B,gBADF,YAKJr9J,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMsuF,GAAI,CAAC,EAAE,GAAIz+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnD0d,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CAAS31J,KAAK,sGACZxH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAM3mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHgZ,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,oBAA5B,gBADF,aAQZr9J,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMnwB,MAAO,CAAC,EAAE+7K,GAAc76K,cAAe,SAAUe,OAAQ,CAAC,OAAO,SACrE4c,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAQk+F,GAAT,CAAY7kH,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAI5B,GAAI,EAAGwB,MAAO,aAAlG,wBAGAqc,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAM3mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAIJ,MAAO,OAAQqD,WAAY,QACvGgZ,EAAAxe,EAAAC,cAAA,QAAM27K,KAAK,MAAMC,aAAW,SAA5B,gBADF,uBAIFr9J,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMnwB,MAAO,CAAC,EAAE+7K,GAAc76K,cAAe,UAC3C2d,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAQk+F,GAAT,CAAY7kH,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAajJ,SAAU,CAAC,EAAE,GAAI5B,GAAI,EAAGwB,MAAO,aAAlG,WAGAqc,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAMjvB,cAAe,MAAOC,eAAgB,CAAC,eAAe,eAC1D0d,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CAAS31J,KAAK,mCACZxH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAOnuB,IAAI,4BAA4BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAImO,UAAW,EAAGzN,aAAc,SAEjHmd,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CAAS31J,KAAK,4BACZxH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAOnuB,IAAI,6BAA6BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAImO,UAAW,EAAGzN,aAAc,SAElHmd,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CAAS31J,KAAK,8BACZxH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAOnuB,IAAI,4BAA4BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAImO,UAAW,EAAGzN,aAAc,SAEjHmd,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CAAS31J,KAAK,mCACZxH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAOnuB,IAAI,2BAA2BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAImO,UAAW,EAAGzN,aAAc,SAEhHmd,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CAAS31J,KAAK,iCACZxH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAOnuB,IAAI,2BAA2BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAImO,UAAW,EAAGzN,aAAc,SAEhHmd,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CAAS31J,KAAK,gDACZxH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAOnuB,IAAI,6BAA6BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAImO,UAAW,EAAGzN,aAAc,SAElHmd,EAAAxe,EAAAC,cAAC07K,EAAA,EAAD,CAAS31J,KAAK,mCACZxH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CAAOnuB,IAAI,+BAA+BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAImO,UAAW,EAAGzN,aAAc,aAM5Hmd,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CACEnwB,MAAO,EACPiC,OAAQ,CAAC,OAAO,QAChBf,cAAe,SACfD,WAAY,CAAC,SAAS,YACtBE,eAAgB,CAAC,SAAS,aAE1B0d,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CACE1uB,EAAG,EACHzB,MAAO,EACPiB,WAAY,SACZE,eAAgB,SAChBP,gBAAiB,YACjBM,cAAe,CAAC,SAAS,QAEzB2d,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CACE3tB,MAAO,QACPgH,UAAW,CAAC,SAAS,aAFvB,QAIUqyK,EAJV,qBAMAh9J,EAAAxe,EAAAC,cAAC67K,EAAA,EAAD,CACE35K,MAAO,OACP22B,GAAI,oBACJ5yB,MAAO,CAACk9H,eAAe,SAEvB5kH,EAAAxe,EAAAC,cAAC6vB,EAAA,EAAD,CACE7pB,GAAI,EACJ9D,MAAO,OACPgH,UAAW,CAAC,SAAS,aAHvB,+BAzOOzG,aAwPNu7G,0HC7PTw0D,mLACK,IAAA1tK,EAAAlF,KAEDk8K,EAAW,SAACj8K,GAAD,OACfC,EAAAC,EAAAC,cAACkE,EAAA,EAAQ6K,GAATxP,OAAAC,OAAA,CACE6C,WAAY,CAAC,EAAE,GACfH,MAAO,YACP+D,MAAO,CACLvG,MAAM,OACN0G,WAAW,UAEb9D,SAAU,CAAC,OAAO,GAClBg1G,WAAY,WACRz3G,EACAA,EAAM8nH,WAET9nH,EAAMwJ,WAIX,OACEvJ,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAOE,KAAKC,MAAMH,OAGfE,KAAKC,MAAMw+G,MAAQz+G,KAAKC,MAAMw+G,KAAKz6G,OAAO,EACzC9D,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,UAEZb,EAAAC,EAAAC,cAAC87K,EACKl8K,KAAKC,OAEXC,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACE+B,MAAO,CACL6I,OAAO,WAETtJ,QAAU,SAAAkB,GAAC,OAAI5B,EAAKjF,MAAM+wH,iBAAiB9rH,EAAKjF,MAAM+mB,MAAM9hB,EAAKjF,MAAMw+G,QAEvEv+G,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEgrB,UAAW,MACXC,QAAS,iCAETrvB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEoB,GAAI,EACJvD,KAAM,OACNG,MAAO,YACPuG,UAAWC,IAAOuC,QAClBhJ,KAAOrC,KAAKC,MAAM+B,SAAW,MAAQ,aAM7C9B,EAAAC,EAAAC,cAAC87K,EACKl8K,KAAKC,eAtDO4C,aA+Df+vK,+GC/DTuJ,mLAGF,OACE/0K,EAAAjH,EAAAC,cAACC,EAAA,EAAD,CACEwG,IAAK7G,KAAKC,MAAM2Z,MAAMxU,GACtB1F,UAAW,CACTG,GAAG,EACHE,GAAG,EACHD,MAAM,EACNkN,KAAMhN,KAAKC,MAAM2Z,MAAM/O,KAAK+L,QAAQ,GAAK,QAAU,MAGrDxP,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACExH,MAAO,EACPkB,cAAe,UAGbhB,KAAKC,MAAM2Z,MAAM/O,KAAKuxK,YACpBh1K,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACEiH,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,WACPgH,UAAW,QAEVtJ,KAAKC,MAAM2Z,MAAM/O,KAAKuxK,YAG5Bp8K,KAAKC,MAAMwJ,kBA7BM5G,aAoCbs5K,uGCrCTE,mLAGF,OACEn8K,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE4N,GAAI,EACJzO,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfd,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEq0H,GAAI,EACJ3uH,MAAO,CACLokH,UAAU,IACVzqG,KAAK,WAEPjf,WAAY,SACZE,eAAgB,cAGdjB,KAAKC,MAAMqC,OACXpC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEU,GAAI,EACJvB,MAAO,OACPiC,OAAQ,OACRP,aAAc,MACdd,gBAAiBV,KAAKC,MAAMqC,QAIhCpC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE+B,SAAU,EACVD,WAAY,EACZ6G,UAAW,OACXhH,MAAO,YACP+D,MAAO,CACLG,WAAW,SACX48G,cAAc,eAGfpjH,KAAKC,MAAMgO,QAGhB/N,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE0F,MAAO,CACLokH,UAAU,IACVzqG,KAAK,WAEPjf,WAAY,SACZE,eAAgB,YAEhBf,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE+B,SAAU,EACVD,WAAY,EACZH,MAAO,WACPgH,UAAW,QACXjD,MAAO,CACLG,WAAW,UAEb+C,wBAAyB,CACvBC,OAAQxJ,KAAKC,MAAMkL,kBA5DFtI,aAsEhBw5K,sICrETjvD,qdAMqBzlH,EAAUC,kMAKjC,OACEvD,EAAAlE,EAAAC,cAACk8K,EAAA,EAAD,CACEz1K,IAAK7G,KAAKC,MAAM2Z,MAAMxU,GACtB1F,UAAW,CACTG,GAAG,EACHE,GAAG,EACHD,MAAM,EACNkN,KAAMhN,KAAKC,MAAM2Z,MAAM/O,KAAK+L,SAAW5W,KAAKC,MAAM2Z,MAAM/O,KAAK+L,QAAQ,GAAK,QAAU,MAGtFvS,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAO,EACPkB,cAAe,UAGbhB,KAAKC,MAAM2Z,MAAM/O,KAAKuxK,YACpB/3K,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEiK,GAAI,EACJ7L,SAAU,EACVD,WAAY,EACZH,MAAO,WACPgH,UAAW,QAEVtJ,KAAKC,MAAM2Z,MAAM/O,KAAKuxK,YAG5Bp8K,KAAKC,MAAMwJ,kBArCW5G,aA4ClBuqH,iKCzCT4B,6MAEJxnH,MAAQ,CACNolD,KAAK,EACL2vH,YAAY,EACZnJ,WAAW,KACXoJ,cAAc,QAIhBz5K,cAAgB,OAkChB05K,YAAc,WAAe,IAAd7vH,EAAcj6C,UAAA3O,OAAA,QAAA0qB,IAAA/b,UAAA,GAAAA,UAAA,GAAT,KAClBi6C,EAAOA,GAAc1nD,EAAKsC,MAAMolD,KAEhC,IAAM8vH,EAAYx3K,EAAKjF,MAAM4/F,KAAK77F,OAC5BovK,EAAavhK,KAAKwF,KAAKqlK,EAAUx3K,EAAKsC,MAAM+0K,aAE9CC,EAAgB,GAChBt3K,EAAKjF,MAAMmoI,kBACbljI,EAAKjF,MAAM4/F,KAAK57F,QAAQ,SAACw8F,EAAKtzF,GACxBA,IAAKy/C,EAAK,GAAG1nD,EAAKsC,MAAM+0K,aAAgBpvK,GAAIy/C,EAAK,GAAG1nD,EAAKsC,MAAM+0K,YAAar3K,EAAKsC,MAAM+0K,aACzFC,EAAc5uK,KAAK6yF,KAIvB+7E,EAAgBt3K,EAAKjF,MAAM4/F,KAG7B36F,EAAK8C,SAAS,CACZorK,aACAoJ,8FAlDEx8K,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAKy8K,mMAGkB90K,EAAWC,iFAClC5H,KAAKkD,cAEe2M,KAAKC,UAAUnI,EAAUk4F,QAAUhwF,KAAKC,UAAU9P,KAAKC,MAAM4/F,8BAG/E7/F,KAAKgI,SAAS,CACZ4kD,KAAK,GACL,WACAzpD,EAAKs5K,mCAEA,UAEW70K,EAAUglD,OAAS5sD,KAAKwH,MAAMolD,MAEhD5sD,KAAKy8K,oJA2BA31K,GACHA,GACFA,EAAEgI,iBAEJ,IAAM89C,EAAO/6C,KAAKqE,IAAI,EAAElW,KAAKwH,MAAMolD,KAAK,GACxC5sD,KAAKgI,SAAS,CACZ4kD,0CAIK9lD,GACHA,GACFA,EAAEgI,iBAEJ,IAAM89C,EAAO/6C,KAAKC,IAAI9R,KAAKwH,MAAM4rK,WAAWpzK,KAAKwH,MAAMolD,KAAK,GAAG5sD,KAAKy8K,YAAY7vH,GAChF5sD,KAAKgI,SAAS,CACZ4kD,0CAIK,IAAA9hD,EAAA9K,KAEP,OACEuI,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CAAMhJ,GAAG,wBAAwBtF,MAAO,EAAGkB,cAAe,UACxDuH,EAAApI,EAAAC,cAAC22K,EAAA,EAADp3K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEs4G,KAAMv4G,KAAKC,MAAMs4G,KACjBv2G,SAAUhC,KAAKC,MAAM+B,YAEvBuG,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CAAMhJ,GAAG,cAAcpE,cAAe,UAElChB,KAAKwH,MAAMg1K,cAAc12K,IAAK,SAAC26F,EAAIk8E,GACjC,OACEp0K,EAAApI,EAAAC,cAACw8K,EAAA,EAADj9K,OAAAC,OAAA,CACE6gG,IAAKA,GACD31F,EAAK7K,MAFX,CAGE4G,IAAG,SAAAF,OAAWg2K,GACdzkE,eAAgB2kE,IAChBvkE,MAAK,aAAA3xG,OAAeg2K,GACpBvkE,OAAM,cAAAzxG,OAAgBg2K,SAO9B38K,KAAKC,MAAMmoI,mBACT7/H,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CACErM,OAAQ,OACRhB,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChBmE,GAAI,gCAEJmD,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CAAM/M,GAAI,GACRkH,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CAAM/M,GAAI,EAAGuE,QAAU,SAAAkB,GAAC,OAAIgE,EAAKgpK,SAAShtK,KACxCyB,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CACEjM,KAAM,oBACNE,KAAM,MACNC,MAAQtC,KAAKwH,MAAMolD,KAAK,EAAI,cAAgB,mBAGhDrkD,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CAAMxI,QAAU,SAAAkB,GAAC,OAAIgE,EAAKipK,SAASjtK,KACjCyB,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CACEjM,KAAM,qBACNE,KAAM,MACNC,MAAQtC,KAAKwH,MAAMolD,KAAK5sD,KAAKwH,MAAM4rK,WAAa,cAAgB,oBAItE7qK,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CAAMrN,WAAY,UAChBwH,EAAApI,EAAAC,cAACgO,EAAA,EAAD,CACE1L,SAAU,EACVD,WAAY,EACZH,MAAO,YAHT,QAKQtC,KAAKwH,MAAMolD,KALnB,OAK6B5sD,KAAKwH,MAAM4rK,sBA/I/BvwK,aA0JVmsH,sGC9JTf,mLACK,IAAA/oH,EAAAlF,KACDC,EAAQ,CACZwC,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,YACNgH,UAAU,SACVouG,WAAW,WAIT13G,KAAKC,OAASN,OAAOoE,KAAK/D,KAAKC,OAAO+D,QACxCrE,OAAOoE,KAAK/D,KAAKC,OAAOgE,QAAQ,SAAA1C,GAC9BtB,EAAMsB,GAAK2D,EAAKjF,MAAMsB,KAI1B,IAAMu7K,EAAmB98K,KAAKC,MAAMkoH,UAAYnoH,KAAKC,MAAMkoH,UAAY+F,IAAQ6lC,GAE/E,OACE3sJ,EAAAjH,EAAAC,cAAC08K,EACK78K,EAEHD,KAAKC,MAAMwJ,iBAvBA5G,aA6BLorH,iKCkCA8uD,6MArDbh6K,cAAgB,OAqBhBi6K,MAAQ,WAEN93K,EAAKnC,cAAckb,yBAAyB,CAC1CN,cAAe,QACfG,YAAa,UACbF,WAAY1Y,EAAKjF,MAAMmkK,SAGzB,IAAM6J,EAAIp8J,KAAKC,IAAI6S,OAAOioJ,WAAW,KAE/Br2J,GAAKoO,OAAOioJ,WAAWqB,GAAG,EAEhCtpJ,OAAOo3D,KAAP,yCAAAp1E,OAAqDzB,EAAKjF,MAAM6qH,OAAQ,SAAxE,8CAAAnkH,OADU,IACV,UAAAA,OAAyI4P,EAAzI,WAAA5P,OAAoJsnK,EAApJ,YAAAtnK,OAHU,kFA5BN3G,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAKkD,yDAILlD,KAAKkD,6CAkBE,IAAAC,EAAAnD,KACP,OACI2I,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CACEpH,aAAc,EACdyF,UAAW,UACXqjH,cAAe,QACf1kH,QAAU,SAAAkB,GAAO3D,EAAK65K,UAEtBr0K,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM5H,cAAe,MAAOD,WAAY,SAAUE,eAAgB,UAChE0H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAKC,UAAWC,IAAO+lB,cACvBlmB,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAO,QAASG,WAAY,EAAGiD,GAAI,GAAK1F,KAAKC,MAAM2C,KAAO5C,KAAKC,MAAM2C,KAAO,kBAjD7DC,gCCE3B+nH,6MAGJ7nH,cAAgB,OAqBhB23G,iDAAa,SAAA/5F,EAAOhP,GAAP,OAAAqf,EAAA7wB,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,WACWnM,EAAKnC,cAAc4oD,mBAEvB8B,UAAUC,OAAOhI,OAAOrzB,QAH/B,CAAAxR,EAAAxP,KAAA,eAAAwP,EAAAxP,KAAA,EAIHnM,EAAKnC,cAAckb,yBAAyB,CAChDN,cAAe,QACfG,YAAanM,EACbiM,WAAY,eAPL,OAST1Y,EAAKjF,MAAMy6G,aATF75F,EAAAxP,KAAA,eAWTnM,EAAKjF,MAAMy6G,aAXF,wBAAA75F,EAAArO,SAAAmO,EAAA3gB,0IAnBPA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAKkD,yDAILlD,KAAKkD,6CAkBE,IAAAC,EAAAnD,KACD8qH,EAAQnmG,OAAOs4J,OAAOj9K,KAAKC,MAAM6qH,OACjCoyD,EAAa,CAAC1zK,OAAQxJ,KAAKC,MAAM2C,MACvC,OACE+F,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAOm1G,OAAQ/9G,KAAKC,MAAM89G,QACxBp1G,EAAAxI,EAAAC,cAAC8oH,EAAA,EAAD,CAAWjL,UAAWj+G,KAAKC,MAAMy6G,YAE7B16G,KAAKC,MAAM4qH,iBACXliH,EAAAxI,EAAAC,cAAC+8K,EAAAh9K,EAAD,CACEkG,MAAO,CAAEgI,SAAU,QAAQC,OAAS,MACpCykJ,KAAK,EACLqqB,SAAS,EACTt9K,MAAO6kB,OAAOioJ,WACd7qK,OAAQ4iB,OAAOkoJ,cAGnBlkK,EAAAxI,EAAAC,cAAC8oH,EAAA,EAAUhL,OAAX,CAAkBl3F,MAAOhnB,KAAKC,MAAM+mB,MAAO5kB,KAAMpC,KAAKC,MAAMmC,OAC5DuG,EAAAxI,EAAAC,cAAC8oH,EAAA,EAAU/K,KAAX,KACEx1G,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM9H,GAAI,EAAGhB,MAAO,EAAGkB,cAAe,SAAUJ,GAAI,QAClD+H,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMtG,MAAO,YAAagH,UAAW,SAAU5G,SAAU,EAAG6L,GAAI,EAAGhF,wBAAyB2zK,KAE9Fv0K,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAM2F,GAAI,EAAGvN,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1E0H,EAAAxI,EAAAC,cAACi9K,EAAD,CAAoBvyD,MAAOA,EAAOloH,KAAM,YAAawhK,OAAQ,eAC7Dz7J,EAAAxI,EAAAC,cAACwI,EAAA,EAAD,CAAMS,GAAI,EAAGzD,QAAU,SAAAkB,GAAC,OAAI3D,EAAKu3G,WAAW,6BAA8B/0G,WAAY,QAAtF,uCA9DW04G,IAAMx7G,WAuEhB+nH,uJC7ETiyD,6MAEJr1K,MAAQ,KAGRzE,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,8JAK9CD,KAAKyH,oBAAqB,yPAI1BzH,KAAKkD,gbAOkByE,EAAWC,mEAClC5H,KAAKkD,kJAGC,IAAAC,EAAAnD,KACA2f,EAAY3f,KAAKC,MAAM0f,UAEvBqQ,EAAa,CACjBvtB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,YAIJqd,EAAU1f,OAASN,OAAOoE,KAAK4b,EAAU1f,OAAO+D,QAClDrE,OAAOoE,KAAK4b,EAAU1f,OAAOgE,QAAQ,SAAA1C,GACnCyuB,EAAWzuB,GAAKoe,EAAU1f,MAAMsB,KAKhCoe,EAAUk5F,WAAal5G,OAAOoE,KAAK4b,EAAUk5F,WAAW70G,QAC1DrE,OAAOoE,KAAK4b,EAAUk5F,WAAW50G,QAAQ,SAAA1C,GACH,oBAAzBoe,EAAUk5F,UAAUt3G,KAC7ByuB,EAAWzuB,GAAKoe,EAAUk5F,UAAUt3G,GAAG4B,EAAKlD,UAKlD,IAAI4vB,EAAS,KACTS,EAAkB,KAClBgtJ,GAAuB,EACrBjpC,EAAY10H,EAAUpc,KACtBg6K,EAAY59J,EAAU9Z,KACtB8I,IAAegR,EAAUhR,WAC3B4hB,EAAcgtJ,EAAYv9K,KAAK+C,cAAcytB,aAAa+sJ,EAAUv9K,KAAKC,MAAMwgG,KAAO,KAG1F,GAAI88E,EAAU,CACZ,IAAMC,EAAkB79K,OAAO2R,OAAOisK,GAAW5oK,MACjD,GAAI3U,KAAKC,MAAMwgG,IAAX,GAAA95F,OAAkB62K,EAAlB,UAA0C,CAC5C,IAAMC,EAAmBz9K,KAAKC,MAAMwgG,IAAX,GAAA95F,OAAkB62K,EAAlB,UAErBC,GAAoB99K,OAAOoE,KAAK05K,GAAkBz5K,QACpDrE,OAAOoE,KAAK05K,GAAkBx5K,QAAQ,SAAA1C,GACpCyuB,EAAWzuB,GAAKk8K,EAAiBl8K,MAMzC,OAAQ8yI,GACN,IAAK,QACH/jH,EAAkBG,IAClBT,EAAWluB,IAAMyuB,EACnB,MACA,IAAK,SACHA,EAAcA,EAAcvwB,KAAK+C,cAAc2O,MAAM6e,GAAa9M,WAAa,KAC/E6M,EAAkBxtB,IAClBktB,EAAW3sB,OAASktB,EACtB,MACA,IAAK,OACHD,EAAkBpqB,IACpB,MACA,IAAK,OACHoqB,EAAkBI,IAClBV,EAAW7tB,KAAOouB,EACpB,MACA,IAAK,SACHD,EAAkB,SAACrwB,GAAD,OAChBsI,EAAApI,EAAAC,cAACk4K,EAAA,EAAD,CACE/2K,EAAG,MACHC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAiBT,EAAM8vB,SAEvBxnB,EAAApI,EAAAC,cAACk4K,EAAA,EAAD,CACEp3K,MAAO,SACPiB,KAAMouB,EACNjuB,MAAOrC,EAAMqC,MACbD,KAAMc,EAAKlD,MAAM+B,SAAW,MAAQ,YAI1CguB,EAAW7tB,KAAOouB,EACpB,MACA,IAAK,SACHD,EAAkBk3F,IAClB81D,GAAuB,EACvB/sJ,EAAc5Q,EAAU1R,OAAS+hB,EAAW/hB,MAC5C+hB,EAAWpqB,QAAQ,kBAAMoqB,EAAWvvB,YAAY0C,EAAKlD,QACvD,MACA,IAAK,OACH4vB,EAAUtnB,EAAApI,EAAAC,cAACk4K,EAAA,EAAD34K,OAAAC,OAAA,GAAUowB,EAAV,CAAsBzmB,wBAAyB,CACvDC,OAAQ+mB,MAEZ,MACA,IAAK,aACHV,EAASU,GAAe5wB,OAAOoE,KAAKwsB,GAAavsB,OAAO,EACtDuE,EAAApI,EAAAC,cAACk4K,EAAA,EAAD34K,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,cACZ0e,EAAUf,aAGZjf,OAAOoE,KAAKwsB,GAAazqB,IAAK,SAAC2L,EAAM+4D,GACnC,IAAMrgE,EAAcomB,EAAY9e,GAChC,OACElJ,EAAApI,EAAAC,cAACs9K,EAAA,EAAD,CACEjsK,MAAOA,EACPtH,YAAaA,EACbtD,IAAG,SAAAF,OAAW6jE,GACd7qD,UAAW,CACTxd,KAAK,cACLqtB,aAAa,CACXD,QAAO,GAAA5oB,OAAI8K,IAEbxR,MAAM,CACJuB,aAAa,MACb6M,SAAS,WACTtM,OAAO,CAAC,QAAQ,OAChB2D,GAAG8kE,EAAa,QAAU,EAC1Bl8D,OAAO3O,OAAO2R,OAAOif,GAAavsB,OAAOwmE,EACzCv7D,UAAU,CAAC,kCAAkC,0CAQzD,KACN,MACA,QACEqhB,EAAkBnqB,IAClBm3K,GAAuB,EAI3B,OAAK/sJ,GAAe5hB,EACVpG,EAAApI,EAAAC,cAACk4K,EAAA,EAAD,CAAQj2K,KAAK,SAGhBiuB,EAAmBgtJ,EAAwB/0K,EAAApI,EAAAC,cAACkwB,EAAoBN,EAAaO,GAAmChoB,EAAApI,EAAAC,cAACkwB,EAAoBN,GAAoBH,SA9K1IhtB,aAkLXg6K,uPC3KTz0D,6MAEJ5gH,MAAQ,CACNoqK,OAAM,KAIR7uK,cAAgB,OAChB0E,oBAAqB,IAyDrBioB,+BAAY,SAAA/O,IAAA,IAAAq4J,EAAAplK,EAAA5L,EAAA2X,EAAAqQ,EAAA48C,EAAAjpE,EAAA+hG,EAAA71E,EAAA2hD,EAAA0xB,EAAA5wF,EAAAwB,EAAAotB,EAAAhgB,EAAA8yD,EAAAD,EAAA51C,EAAA03C,EAAAD,EAAAx3C,EAAA1M,EAAAm+C,EAAAw5B,EAAAt5B,EAAAD,EAAAh+C,EAAA9N,EAAA6vD,EAAA8pG,EAAA7pG,EAAA8pG,EAAA35J,EAAAmP,EAAAyqJ,EAAAvuG,EAAAqG,EAAAlG,EAAAmlC,EAAAhuC,EAAAskC,EAAAzpE,EAAAwiE,EAAA65E,GAAAC,GAAAC,GAAAC,GAAAC,GAAA/E,GAAAvnJ,GAAA/R,GAAAsnC,GAAA3wC,GAAArJ,GAAA8uH,GAAA1lH,GAAAJ,GAAAgoK,GAAAznK,GAAA0nK,GAAA5E,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAwE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAp5K,GAAAsnK,GAAAx6J,UAAA,OAAA9B,EAAA1Q,EAAA+Q,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,UAAM2nK,EAAN7L,GAAAnpK,OAAA,QAAA0qB,IAAAy+I,GAAA,GAAAA,GAAA,GAAgB,MAItBjoK,EAAKuC,oBAAuBvC,EAAKjF,MAAMwR,OAAUvM,EAAKjF,MAAMkK,aAAgBjF,EAAKjF,MAAMkwH,qBAJjF,CAAAtvG,EAAAxP,KAAA,eAAAwP,EAAAe,OAAA,SAKD,MALC,UAQJhO,EAAyC,SAAhC1O,EAAKjF,MAAM4T,iBAEpB7L,EAAyB,OAAdgxK,EACXr5J,EAAYza,EAAKjF,MAAM0f,UACxBq5J,IACHA,EAAYr5J,EAAUxd,MAGlB6tB,EAAarQ,EAAU1f,MACvB2sE,EAAkD,qBAA5B1nE,EAAKjF,MAAM2sE,cAA+B1nE,EAAKjF,MAAM2sE,aAE3EjpE,EAAWqsB,GAAcA,EAAWrsB,SAAWqsB,EAAWrsB,SAAauB,EAAKjF,MAAM+B,SAAW,EAAI,EACjG0jG,EAAmBxgG,EAAKnC,cAAc0S,gBAAgB,CAAC,QAAQ,SAASvQ,EAAKjF,MAAMwR,MAAMiE,gBAE3Fma,EAAS,MACT3qB,EAAKjF,MAAMwR,MAvBL,CAAAoP,EAAAxP,KAAA,UAAAwP,EAAA6R,GAwBAsmJ,EAxBAn4J,EAAAxP,KAyBD,iBAzBCwP,EAAA6R,GAAA,GAiCD,cAjCC7R,EAAA6R,GAAA,GAyCD,eAzCC7R,EAAA6R,GAAA,GAqDD,QArDC7R,EAAA6R,GAAA,GA6DD,oBA7DC7R,EAAA6R,GAAA,GAyED,eAzEC7R,EAAA6R,GAAA,GAiFD,qBAjFC7R,EAAA6R,GAAA,GAyFD,kCAzFC7R,EAAA6R,GAAA,GA8GD,6BA9GC7R,EAAA6R,GAAA,GAmID,aAnIC7R,EAAA6R,GAAA,GA2ID,gBA3IC7R,EAAA6R,GAAA,GAoKD,yBApKC7R,EAAA6R,GAAA,GA4LD,oBA5LC7R,EAAA6R,GAAA,GAqND,sBArNC7R,EAAA6R,GAAA,GA6ND,UA7NC7R,EAAA6R,GAAA,IAsOD,SAtOC7R,EAAA6R,GAAA,IA8OD,sBA9OC7R,EAAA6R,GAAA,IAuPD,iBAvPC7R,EAAA6R,GAAA,IAgQD,QAhQC7R,EAAA6R,GAAA,IA4QD,WA5QC7R,EAAA6R,GAAA,IAkTD,aAlTC7R,EAAA6R,GAAA,IAiUD,aAjUC7R,EAAA6R,GAAA,IAgVD,qBAhVC7R,EAAA6R,GAAA,IAgWD,QAhWC7R,EAAA6R,GAAA,IAoXD,oBApXC7R,EAAA6R,GAAA,IA2ZD,aA3ZC7R,EAAA6R,GAAA,IAskBD,qBAtkBC7R,EAAA6R,GAAA,IAsrBD,WAtrBC7R,EAAA6R,GAAA,6BAAA7R,EAAAxP,KAAA,GA0BWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GA1BlH,eA0BJ/8C,EA1BIhP,EAAAzM,OA2BUpM,GACZ9C,EAAKmD,aAAa,CAChBy2B,aAAajP,EAAOpM,aA7BpB5C,EAAAe,OAAA,4BAkCE4vD,EAAYtsE,EAAKnC,cAAcg/F,kBAAkB78F,EAAKjF,MAAMkK,aAlC9D0W,EAAAxP,KAAA,GAmCwCnM,EAAKnC,cAAcmgG,8BAA8Bh+F,EAAKjF,MAAMkK,aAnCpG,eAmCE+4F,EAnCFriF,EAAAzM,KAoCJlP,EAAKmD,aAAa,CAChBmpE,YACA0xB,kCAtCEriF,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GA0CWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GA1ClH,eA0CJ/8C,EA1CIhP,EAAAzM,OA2CUpM,IACRsK,EAAa,KAC+B,qBAArCpN,EAAKjF,MAAMkK,YAAY8wI,WAA6B/1I,EAAKjF,MAAMkK,YAAY8wI,aACpF3oI,EAAaud,EAAOpM,YAEtBve,EAAKmD,aAAa,CAChBiK,gBAjDAuO,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GAsDWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAtDlH,eAsDJ/8C,EAtDIhP,EAAAzM,OAuDUpM,GACZ9C,EAAKmD,aAAa,CAChBkxE,IAAI1pD,EAAOpM,aAzDX5C,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GAgEMnM,EAAKnC,cAAcq+B,eAAel8B,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAhElF,eAAA94D,EAAA+M,EAAAzM,KA+DF8sB,EA/DEptB,EA+DFotB,4BAGEl5B,GAAYk5B,IACdh8B,EAAKmD,aAAa,CAChB62K,gBAAgBh+I,EAA4Bzd,aAE9CoM,EAASqR,GAtEPrgB,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GA0EWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GA1ElH,eA0EJ/8C,EA1EIhP,EAAAzM,OA2EUpM,GACZ9C,EAAKmD,aAAa,CAChB4I,WAAW4e,EAAOpM,aA7ElB5C,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GAkFWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAlFlH,eAkFJ/8C,EAlFIhP,EAAAzM,OAmFUpM,GACZ9C,EAAKmD,aAAa,CAChBiM,iBAAiBub,EAAOpM,aArFxB5C,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GA6FMnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GA7F7G,eAAA1rD,EAAAL,EAAAzM,KA2FF4/D,EA3FE9yD,EA2FF8yD,2BACAD,EA5FE7yD,EA4FF6yD,8BAGiCC,IAC7BhsE,GACF9C,EAAKmD,aAAa,CAChBupK,OAAM,EACN59F,4BACAD,gCAIJlkD,EAAS,CACPmkD,4BACAD,gCA1GAlzD,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GAkHMnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAlH7G,eAAAzuC,EAAAtd,EAAAzM,KAgHFyhE,EAhHE13C,EAgHF03C,sBACAD,EAjHEz3C,EAiHFy3C,yBAG4BC,IACxB7tE,GACF9C,EAAKmD,aAAa,CAChBupK,OAAM,EACN/7F,uBACAD,2BAIJ/lD,EAAS,CACPgmD,uBACAD,2BA/HA/0D,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GAoIWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GApIlH,eAoIJ/8C,EApIIhP,EAAAzM,OAqIUpM,GACZ9C,EAAKmD,aAAa,CAChBg+H,SAASx2G,EAAOpM,aAvIhB5C,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GA4I0C4P,QAAQqD,IAAI,CACxDpf,EAAKwqB,UAAU,mBACfxqB,EAAKnC,cAAc+lG,aAAa5jG,EAAKjF,MAAMkK,eA9IzC,eAAAi0B,EAAAvd,EAAAzM,KAAAsd,EAAA/xB,OAAAm6K,EAAA,EAAAn6K,CAAAy+B,EAAA,GA4IGyxC,EA5IHn+C,EAAA,GA4ImB23E,EA5InB33E,EAAA,GAiJAm+C,GAAmBA,EAAgBP,eAAiBO,EAAgBJ,aAAe45B,IAE/Et5B,EAAYF,EAAgBP,cAAc5hE,MAAM27F,GAChDv5B,EAAUD,EAAgBJ,YAAY/hE,MAAM27F,GAE9CrhG,GACF9C,EAAKmD,aAAa,CAChBupK,OAAM,EACN9hG,UACAC,cAIJlgD,EAAS,CACPigD,UACAC,cAhKAlvD,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GAqKwD4P,QAAQqD,IAAI,CACtEpf,EAAKnC,cAAck0E,cACnB/xE,EAAKnC,cAAc2vE,eAAe,gBAAgBxtE,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAC7G1nE,EAAKnC,cAAc2vE,eAAe,kBAAkBxtE,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,KAxK7G,eAAA96C,EAAAjR,EAAAzM,KAAA4P,EAAArkB,OAAAm6K,EAAA,EAAAn6K,CAAAmyB,EAAA,GAqKG+hD,EArKH7vD,EAAA,GAqKY25J,EArKZ35J,EAAA,IAqK+B8vD,EArK/B9vD,EAAA,KA2KmB25J,GAAsB9pG,IACrC+pG,EAAmB9pG,EAAgBx+D,GAAG,GAAKw+D,EAAgBpmE,MAAMmmE,EAASrwD,IAAI,MAAMtR,KAAKyrK,GAAsB,EAEjH31K,GACF9C,EAAKmD,aAAa,CAChBupK,OAAM,EACNgM,mBACAD,uBAIJ9tJ,EAAS,CACP+tJ,mBACAD,uBAxLA98J,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,GA6L8C4P,QAAQqD,IAAI,CAC5Dpf,EAAKnC,cAAc2vE,eAAe,MAAMxtE,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GACnG1nE,EAAKnC,cAAc2vE,eAAe,WAAWxtE,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GACxG1nE,EAAKnC,cAAc2vE,eAAe,aAAaxtE,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,KAhMxG,eAAA3oD,EAAApD,EAAAzM,KAAAgf,EAAAzzB,OAAAm6K,EAAA,EAAAn6K,CAAAskB,EAAA,GA6LC45J,EA7LDzqJ,EAAA,GA6LWk8C,EA7LXl8C,EAAA,IA6LyBuiD,EA7LzBviD,EAAA,KAoMek8C,GAAiBuuG,IAC5BpuG,EAAckG,EAAYrgE,GAAG,GAAKqgE,EAAYjoE,MAAMmwK,EAAUr6J,IAAI,MAAMtR,KAAKo9D,GAAiB,EAEhGtnE,GACF9C,EAAKmD,aAAa,CAChBupK,OAAM,EACNniG,cACAH,kBAIJz/C,EAAS,CACP4/C,cACAH,kBAjNAzuD,EAAAe,OAAA,4BAAAf,EAAAxP,KAAA,IAsNWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAtNlH,gBAsNJ/8C,EAtNIhP,EAAAzM,OAuNUpM,GACZ9C,EAAKmD,aAAa,CAChBiuE,kBAAkBzmD,EAAOpM,aAzNzB5C,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IA8NqBnM,EAAKnC,cAAcwxG,cAAcrvG,EAAKjF,MAAMkK,YAAYyJ,GA9N7E,gBA8NEghG,EA9NF/zF,EAAAzM,KA+NApM,GACF9C,EAAKmD,aAAa,CAChBk4F,MAAMqU,IAA0B,IAGpC/kF,EAAS+kF,EApOL/zF,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IAuOWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAvOlH,gBAuOJ/8C,EAvOIhP,EAAAzM,OAwOUpM,GACZ9C,EAAKmD,aAAa,CAChBkjC,SAAS1b,EAAOpM,aA1OhB5C,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IA+OWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GA/OlH,gBA+OJ/8C,EA/OIhP,EAAAzM,OAgPUpM,GACZ9C,EAAKmD,aAAa,CAChB82K,2BAA2B1xK,WAAWoiB,GAAQ,EAAI,KAAO,OACzDuvJ,kBAAkB3xK,WAAWoiB,GAAQliB,QAAQhK,KAnP7Ckd,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IAwPWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAxPlH,gBAwPJ/8C,EAxPIhP,EAAAzM,OAyPUpM,GACZ9C,EAAKmD,aAAa,CAChB4oE,aAAaxjE,WAAWoiB,GAAQliB,QAAQhK,GACxC07K,sBAAsB5xK,WAAWoiB,GAAQ,EAAI,KAAO,SA5PpDhP,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IAiQWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAjQlH,gBAiQJ/8C,EAjQIhP,EAAAzM,OAkQUpM,IACR4+D,EAAW,KAC+B,qBAAnC1hE,EAAKjF,MAAMkK,YAAY6wI,SAA2B91I,EAAKjF,MAAMkK,YAAY6wI,WAClFp0E,EAAWn5D,WAAWoiB,GAAQliB,QAAQhK,IAExCuB,EAAKmD,aAAa,CAChBu+D,cAxQA/lD,EAAAe,OAAA,0BA6QA1c,EAAKjF,MAAMkK,YAAYmwB,YAAap1B,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,YA7QrE,CAAA5kC,EAAAxP,KAAA,iBA8QI65F,EAAiBvrG,OAAOC,OAAO,GAAGsF,EAAKjF,MAAMkK,cACpCmoB,KAAO3yB,OAAOC,OAAO,GAAGsF,EAAKjF,MAAMkK,YAAYmwB,UAAUmrB,aACxEylD,EAAej+F,UAAYtN,OAAO2R,OAAOpM,EAAKjF,MAAMkK,YAAY8C,WAGhEi+F,EAAe54E,KAAK7gB,MAAQy5F,EAAe54E,KAAKnwB,KAG5C+oG,EAAe5wE,UAAU2xE,cAC3Bf,EAAe5wE,UAAU2xE,aAAahoG,QAAS,SAAAioG,GAC7C,IAAM9L,EAAgB8K,EAAej+F,UAAUwS,KAAM,SAAAle,GAAC,OAAKA,EAAEY,OAAS+pG,EAAY/pG,OAClF,GAAIi+F,EAAc,CAChB,IAAM+L,EAAcjB,EAAej+F,UAAUsP,QAAQ6jF,GACrD8K,EAAej+F,UAAUk/F,GAAeD,KA3R5CrrF,EAAAxP,KAAA,IAgSanM,EAAKnC,cAAc2vE,eAAe,MAAMxtE,EAAKjF,MAAMwR,MAAMy5F,EAAehmG,EAAKjF,MAAMqQ,SAAQ,GAhSxG,SAgSFuf,EAhSEhP,EAAAzM,KAAAyM,EAAAxP,KAAA,0BAAAwP,EAAAxP,KAAA,IAmSanM,EAAKwqB,UAAU,YAnS5B,SAmSFG,EAnSEhP,EAAAzM,KAAA,gBAsSAyb,GAAU7nB,IACP6nB,EAAOvsB,QAKV4B,EAAKmD,aAAa,CAChBi3K,QAAO,IALTp6K,EAAKmD,aAAa,CAChBi3K,OAAO7xK,WAAWoiB,GAAQliB,QAAQhK,MAzSpCkd,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IAmTWnM,EAAKnC,cAAc2vE,eAAe,MAAMxtE,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,SAAQ,GAnT9G,gBAmTJuf,EAnTIhP,EAAAzM,OAqTUpM,IACP6nB,EAAOvsB,QAKV4B,EAAKmD,aAAa,CAChBk3K,eAAc,IALhBr6K,EAAKmD,aAAa,CAChBk3K,cAAc9xK,WAAWoiB,GAAQliB,QAAQhK,MAxT3Ckd,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IAkUWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAlUlH,gBAkUJ/8C,EAlUIhP,EAAAzM,OAoUUpM,IACP6nB,EAAOvsB,QAKV4B,EAAKmD,aAAa,CAChBwrE,UAAS,IALX3uE,EAAKmD,aAAa,CAChBwrE,SAASpmE,WAAWoiB,GAAQliB,QAAQhK,MAvUtCkd,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IAiVWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAjVlH,gBAiVJ/8C,EAjVIhP,EAAAzM,OAmVUpM,IACP6nB,EAAOvsB,QAKV4B,EAAKmD,aAAa,CAChB+qE,kBAAiB,IALnBluE,EAAKmD,aAAa,CAChB+qE,kBAAqC,IAAnB3lE,WAAWoiB,IAAaliB,QAAQhK,MAtVpDkd,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IAiWWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAjWlH,cAiWJ/8C,EAjWIhP,EAAAzM,QAoWUpM,EApWV,CAAA6Y,EAAAxP,KAAA,aAqWGwe,EAAOvsB,QArWV,CAAAud,EAAAxP,KAAA,aAsWMowB,EAAWh0B,WAAWoiB,GAAQliB,QAAQhK,MACvBuB,EAAKjF,MAAM+B,eAAuC0sB,IAA1B/O,EAAU2wG,aAA6B3wG,EAAU2wG,aAvW9F,CAAAzvG,EAAAxP,KAAA,iBAAAwP,EAAAxP,KAAA,IAwW0CnM,EAAKnC,cAAc+gG,iBAAiB5+F,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,aAxW1G,SAAA0W,EAAAi4B,GAAAj4B,EAAAzM,KAAAyM,EAAAxP,KAAA,mBAAAwP,EAAAi4B,GAwWyH,KAxWzH,SAwWMmrD,EAxWNpjF,EAAAi4B,GAyWA5zC,EAAKmD,aAAa,CAChBo5B,WACAwiE,kBA3WFpjF,EAAAxP,KAAA,mBA8WAnM,EAAKmD,aAAa,CAChBo5B,UAAS,IA/WX,gBAAA5gB,EAAAe,OAAA,6BAqXAk8J,GAAuB,EACvBC,GAAwB,GAEtBC,GAAwB,WAC5B,IAAMwB,EAA4BtxJ,SAASC,eAAejpB,EAAKjF,MAAMqa,UAAY4T,SAASC,eAAejpB,EAAKjF,MAAMqa,UAAY4T,SAASC,eAAejpB,EAAKjF,MAAMq4G,OACnK,GAAIknE,EAA0B,CAC5B,IAAMC,EAA6B96J,OAAOmpJ,OAAO0R,GACjD1B,GAAuB2B,EAA2B7S,aAAan/J,WAAWgyK,EAA2BxF,IAAI,kBAAkBxsK,WAAWgyK,EAA2BxF,IAAI,iBACrK8D,GAAwB0B,EAA2B5S,cAGnDiR,GAAuB/rK,SAAS+rK,IAAsB,EAAIjsK,KAAKC,IAAIgsK,GAAqBC,IAAyBA,GACjHA,GAAwBD,GAGpBA,KAAyB54K,EAAKsC,MAAMs2K,sBAClC91K,GACF9C,EAAKmD,aAAa,CAChBy1K,wBACAC,gCASVp5J,OAAOqJ,oBAAoB,SAAUgwJ,GAAsB9+J,KAAtBvf,OAAAu6K,EAAA,EAAAv6K,QAAAu6K,EAAA,EAAAv6K,CAAAuF,MACrCyf,OAAOmJ,iBAAiB,SAAUkwJ,GAAsB9+J,KAAtBvf,OAAAu6K,EAAA,EAAAv6K,QAAAu6K,EAAA,EAAAv6K,CAAAuF,MAE9B8C,GACF9C,EAAKmD,aAAa,CAChBy1K,wBACAC,2BAvZAl9J,EAAAe,OAAA,yBA6ZEq8J,GAAuBrqK,EAAS1O,EAAKnC,cAAc0S,gBAAgB,CAAC,QAAQ,WAAW,KAAK,iBAAmB,KAC/GyoK,GAAyBtqK,EAASqqK,GAAsB,OAAcpsK,KAAKqE,IAAIhR,EAAKnC,cAAc0S,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAAS7M,EAAKnC,cAAc8P,YAAY3N,EAAKnC,cAAc8P,YAAY,IAAIC,MAAQmD,OAAO,uBAAuB,uBAAuBjD,SAAS,EAAE,QAAQooC,GAAG1nC,UAAU,MAGxUylK,GAAe,KACbvnJ,GAlaF,YAAAjrB,OAka8BzB,EAAKjF,MAAMkK,YAAYmD,QAlarD,KAAA3G,OAkagEiN,GAC9DiM,GAAa3a,EAAKnC,cAAc6vC,cAAchhB,IAEpDunJ,GAAe,CAAC,CACd/zK,GAAGF,EAAKjF,MAAMwR,MACdnP,MAAO4C,EAAKjF,MAAMqC,MAAQ4C,EAAKjF,MAAMqC,MAAQ,OAAOojG,EAAiBpjG,MAAMyL,IAAIC,KAAK,KAAK,IACzFnD,KAAM,OAGW,OAAfgV,IAAuBA,GAAW,IAAMA,GAAW,GAAGhV,MAAQgV,GAAW,GAAGhV,KAAK7G,OAAO,GA3axF,CAAA6c,EAAAxP,KAAA,UA4aF8nK,GAAet5J,GA5abgB,EAAAxP,KAAA,sBAgbuB,SAArBnM,EAAKjF,MAAMwR,MAhbb,CAAAoP,EAAAxP,KAAA,UAobA,IAHA8nK,GAAa,GAAGtuK,KAAO,GACjBs8C,IAAiB,IAAIr0C,MAAOY,UAC9B8C,GAAI,GACCrJ,GAAE,EAAGA,IAAG,GAAIA,KACb8uH,GAAQ/2H,EAAKnC,cAAc8P,YAAYs0C,IAAgB60E,IAAI7uH,GAAE,OAC7DoJ,GAAI0lH,GAAMhmH,OAAO,oBAElB9I,IAAG,GAAKA,IAAG,IAAQA,IAAG,GACzBqJ,IAAiB,EAAd3E,KAAK6tK,SAAW,EAInBlpK,IAAiB,EAAd3E,KAAK6tK,SAAW,EAGrBvG,GAAa,GAAGtuK,KAAK+C,KAAK,CAAC2I,KAAEC,OAhc/BqK,EAAAxP,KAAA,0BAmcM8E,GAAmBjR,EAAKnC,cAAc0wD,oBAAoB,OAAO,IAncvE5yC,EAAAxP,KAAA,IAuciCnM,EAAKnC,cAAcoR,gBAAgBjP,EAAKjF,MAAMkK,YAAYmD,QAAQsG,EAAOsqK,GAAuBD,IAAqB,EAAM9nK,IAvc5J,SAucMgoK,GAvcNt9J,EAAAzM,KAycIsC,GAAY,EACV0nK,GAAaD,GAAmBn6K,OAEtCm6K,GAAmBl6K,QAAQ,SAAC0G,EAAEwC,GAC5B,IAAMoJ,EAAIrR,EAAKnC,cAAc8P,YAAwB,IAAZlI,EAAEkK,WAAgBoB,OAAO,oBAC5DO,EAAI/I,WAAWvI,EAAKnC,cAAcmS,iBAAiBvK,EAAE21F,SAAS,KAC9D1pF,EAAU/E,KAAKgF,MAAMH,KAAY0nK,GAAW,KAClDjF,GAAa,GAAGtuK,KAAK+C,KAAK,CAAE2I,IAAGC,IAAGI,cAhdpC,SAodEuiK,GAAa,GAAGtuK,KAAK7G,OAAO,GAC9BkB,EAAKnC,cAAc+c,cAAc8R,GAAcunJ,IArd/C,gBA0dgC,IAAhCA,GAAa,GAAGtuK,KAAK7G,UACjBw1K,GAAW75K,OAAOC,OAAO,GAAGu5K,GAAa,GAAGtuK,KAAK,KAC9C0L,EAAIrR,EAAKnC,cAAc8P,YAAY2mK,GAAS,oBAAoBx9C,IAAI,EAAE,SAAS/lH,OAAO,oBAC/FkjK,GAAa,GAAGtuK,KAAK+C,KAAK4rK,KAGxBC,GAAgB,EAChBC,GAAiB,GAEfC,GAAiB,WACrB,IAAMI,EAAqB7rJ,SAASC,eAAejpB,EAAKjF,MAAMqa,UAAY4T,SAASC,eAAejpB,EAAKjF,MAAMqa,UAAY4T,SAASC,eAAejpB,EAAKjF,MAAMq4G,OAC5J,GAAIyhE,EAAmB,CACrB,IAAMC,EAAsBr1J,OAAOmpJ,OAAOiM,GAC1CN,GAAgBO,EAAoBpN,aAAan/J,WAAWusK,EAAoBC,IAAI,kBAAkBxsK,WAAWusK,EAAoBC,IAAI,iBACzIP,GAAiBM,EAAoBnN,cACjC4M,KAAkBv0K,EAAKsC,MAAMiyK,eAAkBv0K,EAAKsC,MAAMkyK,gBAC5Dx0K,EAAKmD,aAAa,CAChBoxK,iBACAC,eAAgBx0K,EAAKsC,MAAMkyK,eAAiBx0K,EAAKsC,MAAMkyK,eAAiBA,UAQhF/0J,OAAOqJ,oBAAoB,SAAU2rJ,GAAez6J,KAAfvf,OAAAu6K,EAAA,EAAAv6K,QAAAu6K,EAAA,EAAAv6K,CAAAuF,MACrCyf,OAAOmJ,iBAAiB,SAAU6rJ,GAAez6J,KAAfvf,OAAAu6K,EAAA,EAAAv6K,QAAAu6K,EAAA,EAAAv6K,CAAAuF,MAG5B00K,GAAev/J,IAEfw/J,GAAgB,CACpB1hK,UAAU,EACVgiK,UAAU,EACV/hK,SAAQ,EACRC,SAAS,KACThO,SAAQ,EACRsN,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjBvY,eAAc,EACdoB,OAAO,SAAAiJ,GAAC,OAAIA,EAAErI,OACdq9K,KAAK,CACHC,YAAkB,eAAgB,CAC9B,CAAEC,OAAQ,EAAGv9K,MAAO,WACpB,CAAEu9K,OAAQ,GAAIv9K,MAAO,cAG3BmW,cAAavT,EAAKjF,MAAM+B,UAAmB,IAC3C0V,QAAQ,SAAAvM,GAAK,OAAIsC,WAAWtC,GAAOwC,QAAQ,GAAG,KAC9CyL,KAAK,CACH,CAAEm7B,MAAO,CAAEnvC,GAAIF,EAAKjF,MAAMwR,OAAUrM,GAAI,iBAE1CvE,OAAQ,CAAEgM,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9C0M,aAAa,SAACC,GAAc,IAClBE,EAAUF,EAAVE,MACFD,EAAQC,EAAMC,OAAO,GAC3B,OACEsgK,EAAAj6K,EAAAC,cAAC0/K,EAAA,EAAD,CACElmK,MAAOA,GAGiB,kBAAjBC,EAAMC,QAAuBD,EAAMC,OAAO9V,QAC/C6V,EAAMC,OAAOhU,IAAI,SAAA8T,GACf,IAAMxM,EAAewM,EAAMK,QACrBqgK,EAAkB1gK,EAAM/O,KAAKqP,WAEnC,OACEkgK,EAAAj6K,EAAAC,cAAC2/K,EAAA,EAAD,CACEl5K,IAAK+S,EAAMxU,GACX9C,MAAOsX,EAAMtX,MACb2L,MAAOb,EACPjC,MAAOmvK,SAUnBp1K,EAAKjF,MAAM2J,YAET1E,EAAKjF,MAAM2J,YAAcjK,OAAOoE,KAAKmB,EAAKjF,MAAM2J,YAAY5F,QAC9DrE,OAAOoE,KAAKmB,EAAKjF,MAAM2J,YAAY3F,QAAQ,SAAA1C,GACzCs4K,GAAct4K,GAAK2D,EAAKjF,MAAM2J,WAAWrI,KAK3CyG,GACF9C,EAAKmD,aAAa,CAChBupK,OAAM,EACNgI,gBACAT,gBACAU,iBACAJ,iBACAC,oBAGJ7pJ,EAASspJ,GApkBLt4J,EAAAe,OAAA,6BAukBAy8J,GAAkB,KAClBC,GAAiB,KAYjBC,GAAwB,EACxBC,GAAyB,GAEvBC,GAAyB,WAC7B,IAAMuB,EAA6B9xJ,SAASC,eAAejpB,EAAKjF,MAAMqa,UAAY4T,SAASC,eAAejpB,EAAKjF,MAAMqa,UAAY4T,SAASC,eAAejpB,EAAKjF,MAAMq4G,OACpK,GAAI0nE,EAA2B,CAC7B,IAAMC,EAA8Bt7J,OAAOmpJ,OAAOkS,GAClDzB,GAAwB0B,EAA4BrT,aAAan/J,WAAWwyK,EAA4BhG,IAAI,kBAAkBxsK,WAAWwyK,EAA4BhG,IAAI,iBACzKuE,GAAyByB,EAA4BpT,cACjD0R,KAA0Br5K,EAAKsC,MAAM+2K,uBAA0Br5K,EAAKsC,MAAMg3K,wBAC5Et5K,EAAKmD,aAAa,CAChBk2K,yBACAC,uBAAwBt5K,EAAKsC,MAAMg3K,uBAAyBt5K,EAAKsC,MAAMg3K,uBAAyBA,UAQxG75J,OAAOqJ,oBAAoB,SAAUywJ,GAAuBv/J,KAAvBvf,OAAAu6K,EAAA,EAAAv6K,QAAAu6K,EAAA,EAAAv6K,CAAAuF,MACrCyf,OAAOmJ,iBAAiB,SAAU2wJ,GAAuBv/J,KAAvBvf,OAAAu6K,EAAA,EAAAv6K,QAAAu6K,EAAA,EAAAv6K,CAAAuF,MAE5Bw5K,GAAex5K,EAAKnC,cAAc8P,YAAY3N,EAAKnC,cAAc8P,YAAY,IAAIC,MAAQE,SAAS,EAAE,OAAOiD,OAAO,oBAAoB,oBACtI0oK,GAAiBD,GAAa3rK,QAAQC,SAAS,EAAE,QAGjD4rK,GAAuB/sK,KAAKqE,IAAIhR,EAAKnC,cAAc0S,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAAS4sK,GAAevjI,GAAG1nC,UAAU,MA/mBtJmN,EAAAxP,KAAA,IAknBmCnM,EAAKnC,cAAcoR,gBAAgBjP,EAAKjF,MAAMkK,YAAYmD,QAAQsG,EAAOgrK,GAAoB,MAAK,EAAM,OAlnB3I,gBAknBAC,GAlnBAh+J,EAAAzM,KAonBE0qK,GAAuBD,GAA2B/4K,IAAI,SAAC6E,EAAEwC,GAC7D,IAAIqJ,EAAI,EACFD,EAAIrR,EAAKnC,cAAc8P,YAAwB,IAAZlI,EAAEkK,WAAgBoB,OAAO,oBAC5D3D,EAAapN,EAAKnC,cAAcmS,iBAAiBvK,EAAEsK,UAAU/P,EAAKjF,MAAMkK,YAAYxG,UAY1F,OAVK06K,GAGH7nK,EAAI/I,WAAW6E,EAAWkR,IAAI66J,IAAiBlsK,MAAM,GAAGzE,MAAM,MAF9D2wK,GAAkB/rK,EAKG,OAAnBgsK,KACFA,GAAiBvsK,SAASpH,EAAEu1K,cAGvB,CAAE3pK,IAAGC,OAGRuoK,GAAuB,CAAC,CAC5B35K,GAAG,OACH9C,MAAO,OAAOojG,EAAiBpjG,MAAMyL,IAAIC,KAAK,KAAK,IACnDnD,KAAMi0K,KAIFE,GAAuB3kK,IAEvB4kK,GAAwB,CAC5B9mK,UAAU,EACVgiK,UAAU,EACV/hK,SAAQ,EACR/N,SAAQ,EACRgO,SAAS,KACTV,WAAW,KACXa,YAAW,EACXI,aAAY,EACZF,aAAY,EACZC,MAAM,YACNF,cAAa,EACbI,iBAAiB,EACjBnX,OAAO,SAAAiJ,GAAC,OAAIA,EAAErI,OACdwW,mBAAmB,GACnBjY,OAAQ,CAAEgM,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,IAG3C9H,EAAKjF,MAAM2J,YAET1E,EAAKjF,MAAM2J,YAAcjK,OAAOoE,KAAKmB,EAAKjF,MAAM2J,YAAY5F,QAC9DrE,OAAOoE,KAAKmB,EAAKjF,MAAM2J,YAAY3F,QAAQ,SAAA1C,GACzC09K,GAAsB19K,GAAK2D,EAAKjF,MAAM2J,WAAWrI,KAKnDyG,GACF9C,EAAKmD,aAAa,CAChBupK,OAAM,EACNoN,wBACAD,wBACAE,yBACAV,yBACAC,4BAGJ3uJ,EAASkvJ,GAprBLl+J,EAAAe,OAAA,6BAurBE/b,GAAO8Z,EAAU9Z,MACvBgqB,EAAS3qB,EAAKnC,cAAcytB,aAAa3qB,GAAKX,EAAKjF,MAAMkK,eAEvDjF,EAAKmD,aAAL1I,OAAA66K,EAAA,EAAA76K,CAAA,GACGq5K,EAAWnpJ,IA3rBZhP,EAAAe,OAAA,6BAAAf,EAAAxP,KAAA,IAgsBWnM,EAAKnC,cAAc2vE,eAAesmG,EAAU9zK,EAAKjF,MAAMwR,MAAMvM,EAAKjF,MAAMkK,YAAYjF,EAAKjF,MAAMqQ,QAAQs8D,GAhsBlH,gBAgsBJ/8C,EAhsBIhP,EAAAzM,OAisBUpM,GACZ9C,EAAKmD,aAAL1I,OAAA66K,EAAA,EAAA76K,CAAA,CACEiyK,OAAM,GACLoH,EAAWnpJ,IApsBZhP,EAAAe,OAAA,6BAAAf,EAAAe,OAAA,SA2sBHiO,GA3sBG,0BAAAhP,EAAArO,SAAAmO,EAAA3gB,oFAtDNA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,8JAK9CD,KAAKyH,oBAAqB,yPAI1BzH,KAAKkD,kQAILlD,KAAK0vB,2LAGY5nB,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,4LAGgBJ,EAAWC,gGAClC5H,KAAKkD,YAECyrK,EAAehnK,EAAU8J,QAAUzR,KAAKC,MAAMwR,MAC9Cme,EAAiBjoB,EAAU2I,UAAYtQ,KAAKC,MAAMqQ,QAClDL,EAAgBtI,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDkO,EAAmBvI,EAAUwI,YAAcnQ,KAAKC,MAAMkQ,UACtDwqK,EAAehzK,EAAUgY,UAAUxd,OAASnC,KAAKC,MAAM0f,UAAUxd,KACjEguH,GAAwBxoH,EAAUwoH,sBAAwBnwH,KAAKC,MAAMkwH,qBACrEiK,GAA2BzyH,EAAUoX,SAAW/e,KAAKC,MAAM8e,SAAapX,EAAUoX,SAAW/e,KAAKC,MAAM8e,SAAWlP,KAAKC,UAAUnI,EAAUoX,QAAQ6Y,YAAc/nB,KAAKC,UAAU9P,KAAKC,MAAM8e,QAAQ6Y,UACpM62F,EAAsB9mH,EAAUhG,cAAgB3B,KAAKC,MAAM0B,cAAgBhC,OAAO2R,OAAO3J,EAAUhG,cAAc4P,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqB5N,SAAWrE,OAAO2R,OAAOtR,KAAKC,MAAM0B,cAAc4P,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqB5N,OAEjP22K,GAAgBhM,GAAgB/+I,GAAkB6+F,GAAuB0B,GAAwBiK,EACnGp6H,KAAKqI,aAAa,CAChBupK,OAAM,GACN,WACAzuK,EAAKusB,eAEEzf,GAAiBC,KACpB+iH,EAAWtzH,OAAOC,OAAO,GAAGI,KAAKwH,OACvCxH,KAAKqI,aAAa,CAChBupK,OAAM,GACN,WACAzuK,EAAK6E,SAASirH,6IAmtBZ,IAAAnoH,EAAA9K,KACA2f,EAAY3f,KAAKC,MAAM0f,UACzBkQ,EAAS,KAGPvnB,OADsComB,IAAzB/O,EAAUhR,YAA4BgR,EAAUhR,WACtCyrK,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAAD,CAAQ99K,KAAK,SAAa,KAEjD2tB,EAAa,CACjBvtB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,WACNwB,UAAU,CACR7C,eAAe,eAKf0e,EAAU1f,OAASN,OAAOoE,KAAK4b,EAAU1f,OAAO+D,QAClDrE,OAAOoE,KAAK4b,EAAU1f,OAAOgE,QAAQ,SAAA1C,GACnCyuB,EAAWzuB,GAAKoe,EAAU1f,MAAMsB,KAKhCoe,EAAUk5F,WAAal5G,OAAOoE,KAAK4b,EAAUk5F,WAAW70G,QAC1DrE,OAAOoE,KAAK4b,EAAUk5F,WAAW50G,QAAQ,SAAA1C,GACH,oBAAzBoe,EAAUk5F,UAAUt3G,KAC7ByuB,EAAWzuB,GAAKoe,EAAUk5F,UAAUt3G,GAAGuJ,EAAK7K,UAKlD,IAAMylG,EAAmB1lG,KAAKC,MAAMwR,MAAQzR,KAAK+C,cAAc0S,gBAAgB,CAAC,QAAQ,SAASzV,KAAKC,MAAMwR,MAAMiE,gBAAkB,KAC9HvL,EAAcnK,KAAKC,MAAMkK,aAAeu7F,EAExC9hG,EAAeosB,GAAcA,EAAWpsB,aAAeosB,EAAWpsB,aAAe,EACjFD,EAAWqsB,GAAcA,EAAWrsB,SAAWqsB,EAAWrsB,SAAa3D,KAAKC,MAAM+B,SAAW,EAAI,EACjG6B,EAAemsB,GAAcA,EAAWnsB,aAAemsB,EAAWnsB,aAAiB7D,KAAKC,MAAM+B,SAAW,EAAI,EAE7G+sH,EAAYrpB,GAAoBA,EAAiBtjG,KAAOsjG,EAAiBtjG,KAAQ+H,GAAeA,EAAY/H,KAAO+H,EAAY/H,KAA9C,iBAAAuE,OAAsE3G,KAAKC,MAAMwR,MAAjF,QAEvF,OAAQkO,EAAUxd,MAChB,IAAK,cACH0tB,EACEuqJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAADxgL,OAAAC,OAAA,CACE0vB,UAAW,MACXC,QAASvvB,KAAKC,MAAMwR,OAChBkO,EAAU6P,cAEd4qJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAADxgL,OAAAC,OAAA,CAAOkC,IAAKitH,GAAe/+F,KAGjC,MACA,IAAK,OACHH,EACEuqJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAADxgL,OAAAC,OAAA,CAAOkC,IAAKitH,GAAe/+F,IAE/B,MACA,IAAK,YACH,IAAMa,EAAY60E,GAAoBA,EAAiBz3F,MAAQy3F,EAAiBz3F,MAAQjO,KAAKC,MAAMwR,MACnGoe,EACEuqJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAaa,GAE3B,MACA,IAAK,eACH,IAAMm0G,EAAehlI,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAazV,KAAKC,MAAMkK,YAAYk3B,SAAS,SAClG2jG,IACFn1G,EACEuqJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAADxgL,OAAAC,OAAA,CAAOkC,IAAKkjI,GAAkBh1G,KAGpC,MACA,IAAK,eACH,IAAM+4G,EAAe/oI,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAazV,KAAKC,MAAMkK,YAAYk3B,SAAS,UACtGxR,EACEuqJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAa+4G,GAE3B,MACA,IAAK,eACHl5G,EAAS7vB,KAAKwH,MAAMs3B,aAClBs7I,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BnsB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAMs3B,gBAC1Ex2B,EACN,MACA,IAAK,MACHunB,EAAS7vB,KAAKwH,MAAM+xE,IAClB6gG,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BnsB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAM+xE,OAC1EjxE,EACN,MACA,IAAK,aACHunB,EAAS7vB,KAAKwH,MAAM8K,WAClB8nK,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BnsB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAM8K,cAC1EhK,EACN,MACA,IAAK,kBACHunB,EAAS7vB,KAAKwH,MAAM03K,gBAClB9E,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BnsB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAM03K,mBAC1E52K,EACN,MACA,IAAK,mBACHunB,EAAS7vB,KAAKwH,MAAM8M,iBAClB8lK,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BnsB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAM8M,oBAC1EhM,EACN,MACA,IAAK,gCACHunB,EAAS7vB,KAAKwH,MAAMoqK,OAAS5xK,KAAKwH,MAAMusE,6BAA+B/zE,KAAKwH,MAAMwsE,0BAChFomG,EAAAj6K,EAAAC,cAACg7K,EAAAj7K,EAAD,CACEgzH,MAAO,EACP3jE,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACXn6F,SAAU,QACVv1B,SAAUA,EACVgtD,IAAKljD,WAAWzN,KAAKwH,MAAMwsE,2BAC3B76C,MAAO1rB,WAAWzN,KAAKwH,MAAMusE,6BAC7Bu/C,aAAe,SAAAv9F,GAAC,OAAIjrB,EAAK/H,cAAcW,iBAAiBqyB,EAAEpyB,EAASC,EAAaC,KAE/E,SAAAk7B,GAAA,IAAGw0F,EAAHx0F,EAAGw0F,WAAHx0F,EAAe5F,MAAf,OACCihJ,EAAAj6K,EAAAC,cAAA,QAAMiG,MAAO2pB,EAAW3pB,MAAOmtH,IAAKD,MAGtCjrH,EACN,MACA,IAAK,2BACHunB,EAAS7vB,KAAKwH,MAAMoqK,OAAS5xK,KAAKwH,MAAMouE,wBAA0B51E,KAAKwH,MAAMquE,qBAC3EukG,EAAAj6K,EAAAC,cAACg7K,EAAAj7K,EAAD,CACEgzH,MAAO,EACP3jE,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACXn6F,SAAU,QACVv1B,SAAUA,EACVgtD,IAAKljD,WAAWzN,KAAKwH,MAAMquE,sBAC3B18C,MAAO1rB,WAAWzN,KAAKwH,MAAMouE,wBAC7B09C,aAAe,SAAAv9F,GAAC,OAAIjrB,EAAK/H,cAAcW,iBAAiBqyB,EAAEpyB,EAASC,EAAaC,KAE/E,SAAAowB,GAAA,IAAGs/F,EAAHt/F,EAAGs/F,WAAHt/F,EAAekF,MAAf,OACCihJ,EAAAj6K,EAAAC,cAAA,QAAMiG,MAAO2pB,EAAW3pB,MAAOmtH,IAAKD,MAGtCjrH,EACN,MACA,IAAK,cACHunB,EAAS7vB,KAAKwH,MAAMoqK,OAAS5xK,KAAKwH,MAAMuoE,WAAa/vE,KAAKwH,MAAMsoE,QAC9DsqG,EAAAj6K,EAAAC,cAACg7K,EAAAj7K,EAAD,CACEgzH,MAAO,EACP3jE,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACXn6F,SAAU,QACVv1B,SAAUA,EACVgtD,IAAKljD,WAAWzN,KAAKwH,MAAMsoE,SAC3B32C,MAAO1rB,WAAWzN,KAAKwH,MAAMuoE,WAC7BujD,aAAe,SAAAv9F,GAAC,OAAIjrB,EAAK/H,cAAcW,iBAAiBqyB,EAAEpyB,EAASC,EAAaC,KAE/E,SAAAswB,GAAA,IAAGo/F,EAAHp/F,EAAGo/F,WAAHp/F,EAAegF,MAAf,OACCihJ,EAAAj6K,EAAAC,cAAA,QAAMiG,MAAO2pB,EAAW3pB,MAAOmtH,IAAKD,MAGtCjrH,EACN,MACA,IAAK,uBACHunB,EAAS7vB,KAAKwH,MAAMoqK,OAAS5xK,KAAKwH,MAAMm2K,oBAAsB39K,KAAKwH,MAAMo2K,iBACvExD,EAAAj6K,EAAAC,cAACg7K,EAAAj7K,EAAD,CACEgzH,MAAO,EACP3jE,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACXn6F,SAAU,QACVv1B,SAAUA,EACVgtD,IAAKljD,WAAWzN,KAAKwH,MAAMo2K,kBAC3BzkJ,MAAO1rB,WAAWzN,KAAKwH,MAAMm2K,oBAC7BrqD,aAAe,SAAAv9F,GAAC,OAAIjrB,EAAK/H,cAAcW,iBAAiBqyB,EAAEpyB,EAASC,EAAaC,KAE/E,SAAAuwB,GAAA,IAAGm/F,EAAHn/F,EAAGm/F,WAAHn/F,EAAe+E,MAAf,OACCihJ,EAAAj6K,EAAAC,cAAA,QAAMiG,MAAO2pB,EAAW3pB,MAAOmtH,IAAKD,MAGtCjrH,EACN,MACA,IAAK,kBACHunB,EAAS7vB,KAAKwH,MAAMoqK,OAAS5xK,KAAKwH,MAAM8nE,eAAiBtvE,KAAKwH,MAAMioE,YAClE2qG,EAAAj6K,EAAAC,cAACg7K,EAAAj7K,EAAD,CACEgzH,MAAO,EACP3jE,QAAS,IACT4jE,UAAW,GACXC,WAAW,EACXn6F,SAAU,QACVv1B,SAAUA,EACVgtD,IAAKljD,WAAWzN,KAAKwH,MAAMioE,aAC3Bt2C,MAAO1rB,WAAWzN,KAAKwH,MAAM8nE,eAC7BgkD,aAAe,SAAAv9F,GAAC,OAAIjrB,EAAK/H,cAAcW,iBAAiBqyB,EAAEpyB,EAASC,EAAaC,KAE/E,SAAAk9B,GAAA,IAAGwyF,EAAHxyF,EAAGwyF,WAAHxyF,EAAe5H,MAAf,OACCihJ,EAAAj6K,EAAAC,cAAA,QAAMiG,MAAO2pB,EAAW3pB,MAAOmtH,IAAKD,MAGtCjrH,EACN,MACA,IAAK,oBACHunB,EAAS7vB,KAAKwH,MAAM8uE,kBAClB8jG,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BrsB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrD,KAAKwH,MAAM8uE,qBAC1HhuE,EACN,MACA,IAAK,YACHunB,EAAS7vB,KAAKwH,MAAMgqE,WAAa7xE,OAAOoE,KAAK/D,KAAKwH,MAAMgqE,WAAWxtE,OAAO,EACxEo2K,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAAD,CACErgL,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,cAGdtB,OAAO2R,OAAOtR,KAAKwH,MAAMgqE,WAAW1rE,IAAK,SAAC2iC,EAAes+D,GAAhB,OACvCqzE,EAAAj6K,EAAAC,cAACgoH,EAAD,CACE32G,MAAOg3B,EAAeh3B,MACtBtH,YAAas+B,EACb5hC,IAAG,SAAAF,OAAWogG,GACdpnF,UAAW,CACTxd,KAAK,cACLqtB,aAAa,CACXD,QAAQ,GAAA5oB,OAAG8hC,EAAeh3B,QAAS3G,EAAKtD,MAAM07F,+BAAiCp4F,EAAKtD,MAAM07F,8BAA8Bz6D,EAAeh3B,OAApG,KAAA9K,OAAkHmE,EAAKtD,MAAM07F,8BAA8Bz6D,EAAeh3B,OAAO9D,QAAQhK,GAAzL,KAAAgD,OAAsM8hC,EAAe5T,sBAArN,yBAAoQ,KAEzS50B,MAAM,CACJuB,aAAa,MACb6M,SAAS,WACTtM,OAAO,CAAC,QAAQ,OAChB2D,GAAGqhG,EAAgB,QAAU,EAC7Bz4F,OAAO3O,OAAO2R,OAAOxG,EAAKtD,MAAMgqE,WAAWxtE,OAAO+iG,EAClD93F,UAAU,CAAC,kCAAkC,0CAOvDjP,KAAKwH,MAAMgqE,UACb4oG,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAV,KACE1nB,EACN,MACA,IAAK,kBACHunB,EAAS7vB,KAAKwH,MAAMssE,gBAClBsmG,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BrsB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrD,KAAKwH,MAAMssE,mBAC1HxrE,EACN,MACA,IAAK,aACHunB,EAAS7vB,KAAKwH,MAAMyJ,WAClBmpK,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BrsB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrD,KAAKwH,MAAMyJ,cAC1H3I,EACN,MACA,IAAK,OACHunB,EAAS7vB,KAAKwH,MAAM+jC,SAClB6uI,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BrsB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrD,KAAKwH,MAAM+jC,YAC1HjjC,EACN,MACA,IAAK,QACHunB,EAAU7vB,KAAKC,MAAMkK,aAAenK,KAAKC,MAAMkK,YAAYwpJ,kBAAsBymB,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAV,YAA0DtB,IAArB1uB,KAAKwH,MAAM+4F,OAA4C,OAArBvgG,KAAKwH,MAAM+4F,OAAkBvgG,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAM+4F,OAAOjrF,GAAG,GACjO8kK,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GAAiBowB,EAAjB,CAA6BrsB,SAAU,EAAGN,OAAQrD,KAAKwH,MAAM+4F,SAC1DvgG,KAAK+C,cAAc2O,MAAM1R,KAAKwH,MAAM+4F,OAAO5tE,IAAI,GAAMynJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAV,KAAkC1nB,EAC9F,MACA,IAAK,eACHunB,EAAS7vB,KAAKwH,MAAMypE,aACkB,qBAA5BtxD,EAAU4pH,eAAiC5pH,EAAU4pH,cAC3D6wC,EAAAj6K,EAAAC,cAACigL,EAAA,EAAD,CACEr+K,SAAUhC,KAAKC,MAAM+B,SACrBkwH,UAAWlyH,KAAKwH,MAAM63K,uBAEtBjF,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAahwB,KAAKwH,MAAMypE,aAAlC,MAGFmpG,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAahwB,KAAKwH,MAAMypE,aAAlC,KAEF3oE,EACJ,MACA,IAAK,oBACHunB,EAAS7vB,KAAKwH,MAAM43K,kBACkB,qBAA5Bz/J,EAAU4pH,eAAiC5pH,EAAU4pH,cAC3D6wC,EAAAj6K,EAAAC,cAACigL,EAAA,EAAD,CACEr+K,SAAUhC,KAAKC,MAAM+B,SACrBkwH,UAAWlyH,KAAKwH,MAAM23K,4BAEtB/E,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAahwB,KAAKwH,MAAM43K,kBAAlC,MAGFhF,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAahwB,KAAKwH,MAAM43K,kBAAlC,KAEF92K,EACJ,MACA,IAAK,gBACHunB,EAAS7vB,KAAKwH,MAAM84K,cAClBlG,EAAAj6K,EAAAC,cAACigL,EAAA,EAAD,CACEnuD,UAAW,KACXlwH,SAAUhC,KAAKC,MAAM+B,UAErBo4K,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GACMowB,EADN,CAEErsB,SAAUA,EACVE,aAAcA,EACdR,OAAQrD,KAAKwH,MAAM84K,kBAGrBh4K,EACN,MACA,IAAK,WACHunB,EAAS7vB,KAAKwH,MAAM6+H,SAClB+zC,EAAAj6K,EAAAC,cAACigL,EAAA,EAAD,CACEnuD,UAAW,KACXlwH,SAAUhC,KAAKC,MAAM+B,UAErBo4K,EAAAj6K,EAAAC,cAACggL,EAAA,EAADzgL,OAAAC,OAAA,GACMowB,EADN,CAEErsB,SAAUA,EACVE,aAAcA,EACdR,OAAQrD,KAAKwH,MAAM6+H,aAGrB/9H,EACN,MACA,IAAK,mBACH,IAAMgyH,EAAsBt6H,KAAK+C,cAAc0S,gBAAgB,CAAC,aAAa,QAAQ,cAC/Eu+C,EAAkBh0D,KAAK+C,cAAc0S,gBAAgB,CAAC,YAAY6kH,IACxEzqG,EAAS7vB,KAAKwH,MAAMuqB,iBAClBqoJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAV,IAAwBhwB,KAAKwH,MAAMuqB,iBAAiBpkB,QAAQhK,GAA5D,SAA6EqwD,EAAgBn/B,uBAC3FvsB,EACN,MACA,IAAK,wBACHunB,EAAS7vB,KAAKwH,MAAMqxH,sBAClBuhD,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAahwB,KAAKwH,MAAMqxH,sBAAsBlrH,QAAQhK,GAAhE,IAA4E3D,KAAKC,MAAMkK,YAAY0qB,uBACjGvsB,EACN,MACA,IAAK,oBACHunB,EAAS7vB,KAAKwH,MAAMojC,kBAClBwvI,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAahwB,KAAKwH,MAAMojC,kBAAkBj9B,QAAQhK,IAC1D2E,EACN,MACA,IAAK,MACHunB,EAAS7vB,KAAKwH,MAAMo/D,SAClBwzG,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAahwB,KAAKwH,MAAMo/D,SAAWtjE,MAAMmK,WAAWzN,KAAKwH,MAAMo/D,WAAmB,GAAN,KACpFt+D,EACN,MACA,IAAK,SACHunB,OAA+BnB,IAAtB1uB,KAAKwH,MAAM83K,OAClBlF,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,GAAmC,IAAtBhwB,KAAKwH,MAAM83K,OAAmBt/K,KAAKwH,MAAM83K,OAAS,IAAKlF,EAAAj6K,EAAAC,cAAA,mBAC5EkI,EACN,MACA,IAAK,WACHunB,OAAsCnB,IAA7B1uB,KAAKwH,MAAM+3K,cAClBnF,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,GAA0C,IAA7BhwB,KAAKwH,MAAM+3K,cAA0Bv/K,KAAKwH,MAAM+3K,cAAgB,IAAKnF,EAAAj6K,EAAAC,cAAA,mBAC1FkI,EACN,MACA,IAAK,WACHunB,OAAiCnB,IAAxB1uB,KAAKwH,MAAMqsE,SAClBumG,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,GAAqC,IAAxBhwB,KAAKwH,MAAMqsE,SAAqB7zE,KAAKwH,MAAMqsE,SAAW,IAAKumG,EAAAj6K,EAAAC,cAAA,mBAChFkI,EACN,MACA,IAAK,mBACHunB,OAAyCnB,IAAhC1uB,KAAKwH,MAAM4rE,iBAClBgnG,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,GAA6C,IAAhChwB,KAAKwH,MAAM4rE,iBAA6BpzE,KAAKwH,MAAM4rE,iBAAmB,IAAKgnG,EAAAj6K,EAAAC,cAAA,mBAChGkI,EACN,MACA,IAAK,MACHunB,OAAiCnB,IAAxB1uB,KAAKwH,MAAMi6B,SAClB24I,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAAD,CACEp/K,WAAY,SACZC,cAAe,OAEfo5K,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,GAAqC,IAAxBhwB,KAAKwH,MAAMi6B,SAAqBzhC,KAAKwH,MAAMi6B,SAAW,IAAK24I,EAAAj6K,EAAAC,cAAA,mBAEhFJ,KAAKwH,MAAMy8F,eAAiBtkG,OAAOoE,KAAK/D,KAAKwH,MAAMy8F,eAAejgG,OAAO,GACvEo2K,EAAAj6K,EAAAC,cAACgoH,EAAD,CACEzoG,UAAW,CACTxd,KAAK,UACLlC,MAAM,CACJuC,UAAU,CACRkD,GAAG,GAEL4pB,UAAU,MACVC,QAAQ5vB,OAAOoE,KAAK/D,KAAKwH,MAAMy8F,eAAen+F,IAAK,SAAAuiC,GACjD,IAAMxT,EAAwB/pB,EAAK/H,cAAc0S,gBAAgB,CAAC,YAAY4yB,EAAS,0BACjFk4I,EAAcz1K,EAAK/H,cAAc0S,gBAAgB,CAAC,YAAY4yB,EAAS,mBACzEl9B,EAAQL,EAAKtD,MAAMy8F,cAAc57D,GAAU16B,QAAQhK,GACvD,OAAQ48K,GACN,QACA,IAAK,MACHp1K,GAAS,IACX,MACA,IAAK,eACHA,EAAK,GAAAxE,OAAMwE,EAAN,KAAAxE,OAAekuB,GAGxB,SAAAluB,OAAU0hC,EAAV,MAAA1hC,OAAuBwE,KACtB6C,KAAK,WAMlB1F,EACN,MACA,IAAK,SACH,IAAM2yK,EAAyC,oBAApBt7J,EAAU1R,MAAuB0R,EAAU1R,MAAMjO,KAAKC,OAAS0f,EAAU1R,MACpG4hB,EACEuqJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAADxgL,OAAAC,OAAA,GAAYowB,EAAZ,CAAwBpqB,QAAS,kBAAMoqB,EAAWvvB,YAAYqK,EAAK7K,UAAUg7K,GAEjF,MACA,IAAK,mBACHprJ,EAAS7vB,KAAKwH,MAAMu3K,qBAClB3E,EAAAj6K,EAAAC,cAACogL,EAAA,EAAD7gL,OAAAC,OAAA,GACMI,KAAKwH,MAAMy3K,sBADjB,CAEE17K,KAAMvD,KAAKwH,MAAMw3K,qBACjBn0K,KAAM7K,KAAKwH,MAAMu3K,qBACjBj/K,MAAOE,KAAKwH,MAAM+2K,sBAClBx8K,OAAQ/B,KAAKwH,MAAMg3K,0BAEnBl2K,EACN,MACA,IAAK,kBACHunB,EAAS7vB,KAAKwH,MAAMs2K,sBAAwB99K,KAAKwH,MAAMu2K,sBACrD3D,EAAAj6K,EAAAC,cAACqgL,EAAA,EAAD9gL,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2lB,YAAa,CACXvjB,KAAK,QAEPssB,WAAY,GACZ1kB,cAAejK,KAAKC,MAAMwR,MAC1B3R,MAAOE,KAAKwH,MAAMs2K,qBAClB/7K,OAAQ/B,KAAKwH,MAAMu2K,sBACnBxyK,OAAqC,qBAAtBvL,KAAKC,MAAMsL,QAAyBvL,KAAKC,MAAMsL,OAC9DoD,WAA6C,qBAA1B3O,KAAKC,MAAM0O,YAA6B3O,KAAKC,MAAM0O,cAEtErG,EACN,MACA,IAAK,UACHunB,EACEuqJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EACKnwJ,EAEJoqJ,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAADxgL,OAAAC,OAAA,CACE8F,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,aACH0tB,EAAWxtB,aAIvB,MACA,IAAK,WACHqtB,EAAS7vB,KAAKwH,MAAM2xK,aAClBiB,EAAAj6K,EAAAC,cAACogL,EAAA,EAAD7gL,OAAAC,OAAA,GACMI,KAAKwH,MAAMqyK,cADjB,CAEEt2K,KAAMvD,KAAKwH,MAAMoyK,aACjB/uK,KAAM7K,KAAKwH,MAAM2xK,aACjBr5K,MAAOE,KAAKwH,MAAMiyK,cAClB13K,OAAQ/B,KAAKwH,MAAMkyK,kBAEnBpxK,EACN,MACA,IAAK,SACH,IAAIgoB,EAAkB,KAClBC,EAAcvwB,KAAKwH,MAAMmY,EAAUxd,MACvC,OAAQwd,EAAUpc,MAChB,IAAK,SACHgtB,EAAcvwB,KAAK+C,cAAc2O,MAAM6e,GAAa9M,WACpD6M,EAAkBxtB,IAClBktB,EAAW3sB,OAASktB,EACtB,MACA,IAAK,OACHD,EAAkBpqB,IACpB,MACA,IAAK,OACHoqB,EAAkBI,IAClBV,EAAW7tB,KAAOouB,EACpB,MACA,QACED,EAAkBnqB,IAKtB,IAAMq3K,EAAkB79K,OAAO2R,OAAOqO,EAAU9Z,MAAM8O,MACtD,GAAI3U,KAAKC,MAAMkK,YAAX,GAAAxD,OAA0B62K,EAA1B,UAAkD,CACpD,IAAMC,EAAmBz9K,KAAKC,MAAMkK,YAAX,GAAAxD,OAA0B62K,EAA1B,UAErBC,GAAoB99K,OAAOoE,KAAK05K,GAAkBz5K,QACpDrE,OAAOoE,KAAK05K,GAAkBx5K,QAAQ,SAAA1C,GACpCyuB,EAAWzuB,GAAKk8K,EAAiBl8K,KAKvCsuB,EAASU,EACP6pJ,EAAAj6K,EAAAC,cAACkwB,EAAoBN,EAAaO,GAChCjoB,EACN,MACA,QACE,IAAImzK,EAAiBz7K,KAAKwH,MAAMmY,EAAUxd,MACtCnC,KAAKwH,MAAMmY,EAAUxd,OAASnC,KAAKwH,MAAMmY,EAAUxd,MAAMu5K,eAC3DD,EAAiBz7K,KAAKwH,MAAMmY,EAAUxd,MAAMwL,QAAQhK,IAEtDksB,EAAS7vB,KAAKwH,MAAMmY,EAAUxd,MAC5Bi4K,EAAAj6K,EAAAC,cAAC+/K,EAAA,EAASnwJ,EAAayrJ,GACrBnzK,EAGR,OAAOunB,SAvwCchtB,aA2wCVulH,sGCrxCT4D,mLAIF,IAAMhqH,EAA0C,qBAAxBhC,KAAKC,MAAM+B,UAA2BhC,KAAKC,MAAM+B,SACnEb,EAAQnB,KAAKC,MAAMs9G,SAAYr9G,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CAAOE,MAAO,OAAQgC,IAAK9B,KAAKC,MAAMs9G,UAAcv9G,KAAKC,MAAMgC,aAAoBjC,KAAKC,MAAMwF,SAAYvF,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CAAMuC,KAAMnC,KAAKC,MAAMwF,UAAczF,KAAKC,MAAMuC,YAAiB,KAC1M06G,EAAWh9G,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAM2I,UAAYtH,EAAW,OAAS,SAAUU,SAAU,EAAGD,WAAY,EAAGH,MAAO,aAActC,KAAKC,MAAMi9G,SAE7H,OACIh9G,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACE0C,MAAO,QACPd,aAAc,EACdzB,GAAKiC,EAAW,CAAC,EAAE,GAAK,EACxBnC,GAAKmC,EAAW,EAAI,CAAC,EAAE,GACvBlB,GAAKkB,EAAW,EAAI,CAAC,EAAE,GACvBpB,GAAKoB,EAAW,EAAI,CAAC,EAAE,GACvB4D,QAAU5F,KAAKC,MAAMQ,YACrBsB,OAASC,EAAW,OAAS,CAAC,QAAQ,SACtCiF,UAAWjH,KAAKC,MAAMM,SAAW,cAAgB,SACjD+pH,cAAetqH,KAAKC,MAAMM,SAAW,cAAgB,SACrDT,MAAOE,KAAKC,MAAMH,MAAQE,KAAKC,MAAMH,MAASkC,EAAW,OAAS,CAAC,QAAQ,SAC3EqE,MAAOrG,KAAKC,MAAMq8J,YAAct8J,KAAKC,MAAMq8J,YAAet6J,EAAW,CAACf,eAAe,cAAgB,MACjGjB,KAAKC,MAAMqF,aAEfpF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA02G,SAAA,KAEI72G,KAAKC,MAAM0uJ,OACTzuJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE0N,SAAU,WACV7M,aAAc,OACdd,gBAAkBV,KAAKC,MAAM0uJ,MAAM5+H,QAAU/vB,KAAKC,MAAM0uJ,MAAM5+H,QAAU,OACxE1pB,MAAQrE,EAAW,CAAC8K,MAAM,QAAQD,IAAI,SAAW,CAACC,MAAM,QAAQD,IAAI,SACpE9M,GAAI,CAAC,MAAM,OACXF,GAAI,CAAC,MAAM,QAEXK,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE8B,WAAY,EACZC,SAAU,OACVJ,MAAQtC,KAAKC,MAAM0uJ,MAAMrsJ,MAAQtC,KAAKC,MAAM0uJ,MAAMrsJ,MAAQ,QAE3DtC,KAAKC,MAAM0uJ,MAAM/rJ,OAKxB1C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMK,cAAgBgB,EAAW,MAAQ,SAAUf,eAAiBe,EAAW,aAAe,SAAUjB,WAAY,UAClHb,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMb,MAAQkC,EAAW,OAAS,EAAIX,GAAKW,EAAW,EAAI,EAAIf,eAAiBe,EAAW,aAAe,UACrGhC,KAAKC,MAAM6tJ,YAAwC,QAA1B9tJ,KAAKC,MAAM6tJ,WAAuB5wC,EAAU/7G,GAEzEjB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMb,MAAQkC,EAAW,OAAS,EAAIhB,cAAe,SAAUC,eAAiBe,EAAW,aAAe,UACtGhC,KAAKC,MAAM6tJ,YAAwC,QAA1B9tJ,KAAKC,MAAM6tJ,WAAuB3sJ,EAAQ+7G,EAEnEl9G,KAAKC,MAAM+wI,YAAchxI,KAAKC,MAAM+wI,WAAWtlF,MAAM,MAAM5lD,IAAI,SAACmF,EAAEkC,GAKhE,OAHIA,IACFlC,EAAK/K,EAAAC,EAAAC,cAAA,aAAQ6K,IAGb/K,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMkG,IAAG,cAAAF,OAAgBwG,GAAKuqG,WAAY,MAAOpuG,UAAYtH,EAAW,OAAS,SAAUM,MAAO,WAAYG,WAAY,EAAGC,SAAU,GAAIuI,gBA1DvIpI,aAqEXmpH","file":"static/js/main.1c7d4f8f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? this.props.iconBgColor ? (\n              <Flex\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                backgroundColor={\n                  this.props.iconBgColor\n                    ? this.props.iconBgColor\n                    : this.props.theme.colors.transactions.actionBg.redeem\n                }\n              >\n                <Image\n                  align={\"center\"}\n                  src={this.props.image}\n                  height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  {...this.props.imageProps}\n                />\n              </Flex>\n            ) : (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      const latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      // console.log('getTrancheLastHarvest',tokenConfig.CDO.name,latestHarvestBlock);\n      if (parseInt(latestHarvestBlock)>0){\n        const eventFilters = {\n          to: idleStrategyAddress\n        };\n        const [\n          blockInfo,\n          transfers,\n        ] = await Promise.all([\n          this.getBlockInfo(latestHarvestBlock),\n          this.getContractEvents(tokenConfig.token, 'Transfer', parseInt(latestHarvestBlock), parseInt(latestHarvestBlock)+1, {filter: eventFilters })\n        ]);\n\n        if (transfers && transfers.length) {\n          const totalAmount = transfers.reduce( (amount,t) => {\n            amount = amount.plus(this.BNify(t.returnValues.value));\n            return amount;\n          },this.BNify(0));\n\n          return {\n            amount:totalAmount,\n            timestamp:blockInfo.timestamp,\n            blockNumber:latestHarvestBlock,\n            transactionHash:transfers[0].transactionHash\n          };\n        }\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      conversionRate,\n      poolSupply\n    ] = await Promise.all([\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n      this.convertTokenBalance(poolSupply,poolTokenConfig.token,poolTokenConfig)\n    ]);\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n\n        const transfers = await this.getContractEvents(token, 'Transfer', tokenConfig.blockNumber, 'latest', { filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    // console.log('getTrancheUserInfo',tokenConfig.token,underlyingEventsFilters_deposits,underlyingEventsFilters_redeems);\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = underlying_deposits.concat(underlying_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = trancheToken_deposits.concat(trancheToken_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = await this.props.maticPOSClient.isCheckPointed(polygonTx.hash);\n              polygonTx.exited = false;\n\n              if (tokenConfig.rootToken && polygonTx.included){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n\n    if (!size){\n      return false;\n    }\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    return all_past_events.reduce( (events,d) => {\n      events = events.concat(d);\n      return events;\n    },[]);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeName,stakedBalance,account) => {\n\n    let boost = this.BNify(1);\n\n    account = account ? account : this.props.account;\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeName]);\n    if (!gaugeConfig || !account){\n      return boost;\n    }\n\n    const aggcalls = await Promise.all([\n      this.getTokenBalance(veTokenConfig.token,account,false),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      this.getTokenBalance(gaugeConfig.name,account)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    // console.log('calculateGaugeBoost',gaugeName,voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    // const currentGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    // const gaugeType = await this.genericContractCall('GaugeController','gauge_types',[gaugeConfig.address]);\n    let [\n      // totalWeight,\n      // gaugeTypeWeight,\n      // gaugePointWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      // this.genericContractCall('GaugeController','points_total',[nextGaugeTimestamp]),\n      // this.genericContractCall('GaugeController','points_type_weight',[gaugeType,nextGaugeTimestamp]),\n      // this.genericContractCall('GaugeController','points_weight',[gaugeConfig.address,nextGaugeTimestamp]),\n      this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp])\n    ]);\n    // console.log('getGaugeNextWeight',gaugeConfig.name,gaugeType,nextGaugeTimestamp,totalWeight,gaugeTypeWeight,gaugePointWeight,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.props.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      const tokenIndexes = Array.from(Array(multiRewardsConfig.maxRewards).keys());\n      await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCached(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                // console.log('gaugeTotalSupplyUnderlying',tokenConfig.token,gaugeTotalSupplyUnderlying,gaugeUnderlyingTokenConfig);\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      });\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        let [\n          gaugeBalance,\n          lastPrice1,\n          staked1\n        ] = await Promise.all([\n          gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n          this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          stakingEnabled ? this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance) : null\n        ]);\n\n        let totalStaked = this.BNify(0);\n        if (staked1){\n          totalStaked = totalStaked.plus(staked1);\n        }\n        if (gaugeBalance){\n          totalStaked = totalStaked.plus(gaugeBalance);\n        }\n\n        if (totalStaked.gt(0) && lastPrice1) {\n          output = this.BNify(totalStaked).times(lastPrice1);\n          // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens',3600),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens',3600)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest',) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // console.log('getAggregatedStats - ERROR', err);\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (!totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n          }\n\n          // Add Gov Tokens\n          const govTokens = this.getTokenGovTokens(tokenConfig);\n          if (govTokens) {\n            await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n              const govTokenConfig = govTokens[govToken];\n              const [\n                tokenBalance,\n                tokenConversionRate\n              ] = await Promise.all([\n                this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n              ]);\n\n              if (tokenBalance && tokenConversionRate) {\n                const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                  // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                  totalAUM = totalAUM.plus(tokenBalanceConverted);\n                }\n              }\n            });\n          }\n\n          // Get old token allocation\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n        });\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      messages:{\n        buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf',\n          periodFinish:'periodFinish'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    },\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    },\n    PBTCCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'PBTCCRV',\n      protocol:'convex',\n      blockNumber:14570195,\n      autoFarming:['CVX','CRV'],\n      address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_pbtccrv',\n        address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_pbtccrv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14570195,\n        name:'AA_convex_pbtccrv',\n        token:'AA_convex_pbtccrv',\n        label:'convex pbtccrv AA',\n        address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14570195,\n        name:'BB_convex_pbtccrv',\n        token:'BB_convex_pbtccrv',\n        label:'convex pbtccrv BB',\n        address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Heading, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n\n      const tokenConfig = {};\n      tokenConfig.token = token;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address])\n    ]);\n\n    // console.log('distributionRate',distributionRate);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed).div(10000);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).minus(veTokenBalanceUsed);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      canVote,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          gaugeWeight,\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        if (this.props.account){\n          gaugeUserShare = stakedBalance.div(gaugeTotalSupply);\n          // const veTokenShare = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18)).div(this.state.veTokenTotalSupply);\n          // const userBaseDistribution = gaugeDistributionRate.times(gaugeUserShare);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n          // console.log(gaugeConfig.name,stakedBalance.toFixed(),gaugeTotalSupply.toFixed());\n          // console.log(gaugeConfig.name,'veTokenShare',veTokenShare.toFixed(8),'gaugeUserShare',gaugeUserShare.toFixed(8),'gaugeUserBoostedShare',userBoostedShare.toFixed(8),'userBaseDistribution',userBaseDistribution.toFixed(8),'userBoostedDistribution',userBoostedDistribution.toFixed(8),'gaugeDistributionRate',gaugeDistributionRate.toFixed(8));\n        } else {\n          stakedBalance = this.functionsUtil.BNify(0);\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(4)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (~${userBoostedDistribution.toFixed(4)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (~${userDistributionRate.toFixed(4)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let balanceSelectorInfo = null;\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      iconColor={'redeem'}\n                      iconBgColor={'#3f5fff'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'deposit'}\n                      iconBgColor={'#ced6ff'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          iconBgColor={'#ffd979'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully broadcasted and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.1],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.18],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    gaugeConfig:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      lastHarvest,\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n        \n        if (gaugeConfig && gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your ${gaugeConfig.trancheToken.token} in the Liquidity Gauge and get rewarded!`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set\n            if (gaugeConfig || !this.state.stakeEnabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      gaugeConfig,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    this.props.tokenConfig.description && (\n                      <Flex\n                        pt={2}\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                        borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                          fontWeight={[2,3]}\n                        >\n                          Strategy Description\n                        </Text>\n                        <Flex\n                          mt={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={'15px'}\n                            textAlign={'justify'}\n                          >\n                            {this.props.tokenConfig.description}\n                          </Text>\n                        </Flex>\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              mt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                this.props.selectedToken === 'stETH' && this.props.selectedTranche === 'AA' && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'flashColor'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`With the <a href=\"https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">IDLE Gauges release</a>, LDO rewards are going to be distributed via a different staking contract on <strong>Thursday 14 April 2022 16:30:00 GMT</strong>. Please make sure to unstake your stETH from the current staking contract after that date and deposit in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/stETH`)}\" class=\"link\">stETH Gauge</a> contract to continue receiving the LDO rewards, alongside the IDLE distribution from Gauges`}\n                  />\n                )\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.state.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - remainingTranches',remainingTranches);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Deposited Tranches\n                      </Heading.h4>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      colsProps={{\n                        fontSize:['10px','14px'],\n                      }}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                height:['1.4em','2em']\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Heading.h4\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Heading.h4>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'deposit',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Button, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={Button}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  fontWeight:3,\n                  size:'small',\n                  width:'auto',\n                  style:{\n                    fontSize:'14px',\n                  },\n                  mainColor:'blue',\n                  value:'Reduce allowance',\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport { Button, Flex, Box, Text, Icon } from \"rimble-ui\";\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={Button}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      fontWeight:3,\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      height:'45px',\n                                                      fontSize:[2,3],\n                                                      boxShadow:null,\n                                                      borderRadius:4,\n                                                      mainColor:'redeem',\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.5\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      timeout:15000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/dashboard/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n        if (!this.state.network.isCorrectNetwork && isGnosisSafe){\n          await this.checkNetwork();\n        }\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     // console.log('getCurrentNetwork',this.state.web3,currentWeb3);\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', correct: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            stkIDLE Gauges are now live at full throttle with $IDLE rewards!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e'}\n          >\n            Discover More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}